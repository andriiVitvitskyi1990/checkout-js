{"version":3,"sources":["webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Observable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/innerSubscribe.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subscription.ts","webpack://checkout/../../../src/common/utils/index.js","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Subject.ts","webpack://checkout/../src/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/async.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/map.ts","webpack://checkout//webpack/bootstrap","webpack://checkout/webpack:/external \"tslib\"","webpack://checkout/webpack:/external \"@bigcommerce/data-store\"","webpack://checkout/webpack:/external \"lodash\"","webpack://checkout/webpack:/external \"rxjs\"","webpack://checkout/webpack:/external \"@bigcommerce/memoize\"","webpack://checkout//src/shipping/consignment-actions.ts","webpack://checkout/webpack:/external \"rxjs/operators\"","webpack://checkout//src/shipping/shipping-strategy-actions.ts","webpack://checkout//src/payment/payment-strategy-type.ts","webpack://checkout//src/customer/customer-strategy-actions.ts","webpack://checkout//src/payment/payment-strategy-actions.ts","webpack://checkout//src/common/error/errors/missing-data-error.ts","webpack://checkout//src/checkout/checkout-actions.ts","webpack://checkout//src/order/order-actions.ts","webpack://checkout//src/payment/payment-method-actions.ts","webpack://checkout//src/billing/billing-address-actions.ts","webpack://checkout//src/checkout-buttons/checkout-button-actions.ts","webpack://checkout//src/coupon/coupon-actions.ts","webpack://checkout//src/common/error/errors/standard-error.ts","webpack://checkout//src/common/utility/set-prototype-of.ts","webpack://checkout//src/customer/customer-actions.ts","webpack://checkout//src/embedded-checkout/embedded-checkout-events.ts","webpack://checkout//src/payment/instrument/instrument-actions.ts","webpack://checkout//src/coupon/gift-certificate-actions.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay.ts","webpack://checkout//src/remote-checkout/remote-checkout-actions.ts","webpack://checkout/webpack:/external \"@bigcommerce/script-loader\"","webpack://checkout//src/common/http-request/content-type.ts","webpack://checkout//src/payment/payment-status-types.ts","webpack://checkout/webpack:/external \"card-validator\"","webpack://checkout//src/common/error/errors/request-error.ts","webpack://checkout//src/payment/is-vaulted-instrument.ts","webpack://checkout//src/config/config-actions.ts","webpack://checkout//src/form/form-fields-actions.ts","webpack://checkout//src/payment/errors/payment-method-client-unavailable-error.ts","webpack://checkout//src/common/utility/is-plain-object.ts","webpack://checkout//src/geography/country-actions.ts","webpack://checkout//src/shipping/shipping-country-actions.ts","webpack://checkout//src/signin-email/signin-email-actions.ts","webpack://checkout/webpack:/external \"@bigcommerce/request-sender\"","webpack://checkout//src/store-credit/store-credit-actions.ts","webpack://checkout//src/hosted-form/iframe-content/hosted-input-events.ts","webpack://checkout//src/common/url/parse-url.ts","webpack://checkout//src/common/error/errors/invalid-argument-error.ts","webpack://checkout//src/common/iframe/is-iframe-event.ts","webpack://checkout//src/payment/payment-method-types.ts","webpack://checkout//src/address/map-to-internal-address.ts","webpack://checkout//src/common/http-request/internal-api-headers.ts","webpack://checkout//src/payment/payment-actions.ts","webpack://checkout//src/common/http-request/join-includes.ts","webpack://checkout//src/cart/map-to-internal-line-items.ts","webpack://checkout//src/cart/map-gift-certificate-to-internal-line-item.ts","webpack://checkout/webpack:/external \"local-storage-fallback\"","webpack://checkout//src/spam-protection/spam-protection-actions.ts","webpack://checkout/webpack:/external \"shallowequal\"","webpack://checkout//src/hosted-form/hosted-field-events.ts","webpack://checkout//src/common/utility/is-equal.ts","webpack://checkout/webpack:/external \"@bigcommerce/form-poster\"","webpack://checkout//src/cart/map-to-internal-line-item.ts","webpack://checkout/webpack:/external \"reselect\"","webpack://checkout//src/shipping/map-to-internal-shipping-option.ts","webpack://checkout//src/common/utility/amount-transformer.ts","webpack://checkout//src/common/selector/with-memoized-combiner.ts","webpack://checkout//src/common/error/error-actions.ts","webpack://checkout//src/payment/payment-method-action-creator.ts","webpack://checkout//src/payment/payment-method-request-sender.ts","webpack://checkout//src/checkout/checkout-default-includes.ts","webpack://checkout//src/common/error/throw-error-action.ts","webpack://checkout//src/payment/errors/payment-method-failed-error.ts","webpack://checkout//src/common/data-store/cache-action.ts","webpack://checkout//src/common/data-store/is-action-options.ts","webpack://checkout//src/common/data-store/cachable-action-decorator.ts","webpack://checkout//src/common/utility/bind-decorator.ts","webpack://checkout//src/customer/map-to-internal-customer.ts","webpack://checkout//src/order/map-to-internal-order.ts","webpack://checkout//src/cart/map-to-internal-cart.ts","webpack://checkout//src/promotion/map-to-discount-notifications.ts","webpack://checkout/webpack:/external \"@bigcommerce/bigpay-client\"","webpack://checkout//src/payment/strategies/amazon-pay-v2/amazon-pay-v2.ts","webpack://checkout//src/payment/strategies/braintree/braintree-script-loader.ts","webpack://checkout//src/payment/strategies/braintree/braintree-sdk-creator.ts","webpack://checkout//src/embedded-checkout/iframe-content/embedded-content-events.ts","webpack://checkout//src/billing/is-billing-address-like.ts","webpack://checkout//src/hosted-form/iframe-content/card-expiry-formatter.ts","webpack://checkout//src/hosted-form/iframe-content/card-number-formatter.ts","webpack://checkout//src/coupon/map-to-internal-coupon.ts","webpack://checkout//src/common/url/append-www.ts","webpack://checkout//src/common/error/errors/not-initialized-error.ts","webpack://checkout//src/common/http-request/join-or-merge-includes.ts","webpack://checkout//src/common/http-request/merge-includes.ts","webpack://checkout/webpack:/external \"iframe-resizer\"","webpack://checkout/webpack:/external \"iframe-resizer/js/iframeResizer.contentWindow\"","webpack://checkout//src/common/utility/omit-deep.ts","webpack://checkout//src/checkout/checkout-action-creator.ts","webpack://checkout//src/shipping/consignment-action-creator.ts","webpack://checkout//src/shipping/consignment-request-sender.ts","webpack://checkout//src/payment/strategies/masterpass/get-callback-url.ts","webpack://checkout//src/payment/payment-request-transformer.ts","webpack://checkout//src/payment/payment-request-sender.ts","webpack://checkout//src/common/utility/is-private.ts","webpack://checkout//src/common/error/errors/unrecoverable-error.ts","webpack://checkout//src/common/error/errors/map-from-internal-error-response.ts","webpack://checkout//src/common/error/request-error-factory.ts","webpack://checkout//src/common/error/errors/map-from-storefront-error-response.ts","webpack://checkout//src/common/error/clear-error-reducer.ts","webpack://checkout//src/common/utility/replace.ts","webpack://checkout//src/common/utility/object-set.ts","webpack://checkout//src/billing/billing-address-state.ts","webpack://checkout//src/billing/billing-address-reducer.ts","webpack://checkout//src/common/utility/array-replace.ts","webpack://checkout//src/common/utility/object-merge.ts","webpack://checkout//src/cart/cart-state.ts","webpack://checkout//src/cart/cart-reducer.ts","webpack://checkout//src/checkout-buttons/checkout-button-state.ts","webpack://checkout//src/checkout-buttons/checkout-button-reducer.ts","webpack://checkout//src/config/config-state.ts","webpack://checkout//src/config/config-reducer.ts","webpack://checkout//src/coupon/coupon-state.ts","webpack://checkout//src/coupon/coupon-reducer.ts","webpack://checkout//src/coupon/gift-certificate-state.ts","webpack://checkout//src/coupon/gift-certificate-reducer.ts","webpack://checkout//src/customer/customer-state.ts","webpack://checkout//src/customer/customer-reducer.ts","webpack://checkout//src/customer/customer-strategy-state.ts","webpack://checkout//src/customer/customer-strategy-reducer.ts","webpack://checkout//src/form/form-fields-state.ts","webpack://checkout//src/form/form-fields-reducer.ts","webpack://checkout//src/geography/country-state.ts","webpack://checkout//src/geography/country-reducer.ts","webpack://checkout//src/order/order-state.ts","webpack://checkout//src/order/order-reducer.ts","webpack://checkout//src/payment/payment-reducer.ts","webpack://checkout//src/payment/payment-method-state.ts","webpack://checkout//src/payment/payment-method-reducer.ts","webpack://checkout//src/common/utility/merge-or-push.ts","webpack://checkout//src/payment/payment-strategy-state.ts","webpack://checkout//src/payment/payment-strategy-reducer.ts","webpack://checkout//src/payment/instrument/instrument-state.ts","webpack://checkout//src/payment/instrument/instrument-reducer.ts","webpack://checkout//src/remote-checkout/remote-checkout-state.ts","webpack://checkout//src/remote-checkout/remote-checkout-reducer.ts","webpack://checkout//src/shipping/consignment-state.ts","webpack://checkout//src/shipping/consignment-reducer.ts","webpack://checkout//src/shipping/shipping-country-state.ts","webpack://checkout//src/shipping/shipping-country-reducer.ts","webpack://checkout//src/shipping/shipping-strategy-state.ts","webpack://checkout//src/shipping/shipping-strategy-reducer.ts","webpack://checkout//src/signin-email/signin-email-state.ts","webpack://checkout//src/signin-email/signin-email-reducer.ts","webpack://checkout//src/store-credit/store-credit-reducer.ts","webpack://checkout//src/subscription/subscriptions-state.ts","webpack://checkout//src/subscription/subscriptions-reducer.ts","webpack://checkout//src/checkout/checkout-state.ts","webpack://checkout//src/checkout/checkout-reducer.ts","webpack://checkout//src/common/utility/guard.ts","webpack://checkout//src/common/utility/create-freeze-proxy.ts","webpack://checkout//src/payment/instrument/supported-payment-instruments.ts","webpack://checkout//src/address/is-address-equal.ts","webpack://checkout//src/store-credit/store-credit-state.ts","webpack://checkout//src/checkout/create-internal-checkout-selectors.ts","webpack://checkout//src/billing/billing-address-selector.ts","webpack://checkout//src/checkout-buttons/checkout-button-selector.ts","webpack://checkout//src/coupon/coupon-selector.ts","webpack://checkout//src/customer/customer-selector.ts","webpack://checkout//src/remote-checkout/remote-checkout-selector.ts","webpack://checkout//src/shipping/shipping-address-selector.ts","webpack://checkout//src/payment/payment-selector.ts","webpack://checkout//src/signin-email/signin-email-selector.ts","webpack://checkout//src/cart/cart-selector.ts","webpack://checkout//src/config/config-selector.ts","webpack://checkout//src/geography/country-selector.ts","webpack://checkout//src/customer/customer-strategy-selector.ts","webpack://checkout//src/coupon/gift-certificate-selector.ts","webpack://checkout//src/payment/instrument/instrument-selector.ts","webpack://checkout//src/form/form-selector.ts","webpack://checkout//src/payment/payment-method-selector.ts","webpack://checkout//src/payment/payment-strategy-selector.ts","webpack://checkout//src/shipping/shipping-country-selector.ts","webpack://checkout//src/shipping/shipping-strategy-selector.ts","webpack://checkout//src/shipping/consignment-selector.ts","webpack://checkout//src/checkout/checkout-selector.ts","webpack://checkout//src/order/order-selector.ts","webpack://checkout//src/store-credit/store-credit-selector.ts","webpack://checkout//src/subscription/subscriptions-selector.ts","webpack://checkout//src/checkout/create-checkout-store.ts","webpack://checkout//src/checkout/create-action-transformer.ts","webpack://checkout//src/common/error/create-request-error-factory.ts","webpack://checkout//src/checkout/create-checkout-store-reducer.ts","webpack://checkout//src/checkout/errors/checkout-not-available-error.ts","webpack://checkout//src/checkout/checkout-request-sender.ts","webpack://checkout//src/checkout/checkout-params.ts","webpack://checkout//src/coupon/map-to-internal-gift-certificate.ts","webpack://checkout//src/common/iframe/iframe-event-poster.ts","webpack://checkout//src/common/iframe/iframe-event-listener.ts","webpack://checkout//src/common/selector/selector-decorator.ts","webpack://checkout//src/checkout-buttons/checkout-button-error-selector.ts","webpack://checkout//src/checkout-buttons/checkout-button-status-selector.ts","webpack://checkout//src/checkout-buttons/create-checkout-button-selectors.ts","webpack://checkout//src/checkout-buttons/checkout-button-initializer.ts","webpack://checkout//src/checkout-buttons/strategies/checkout-button-method-type.ts","webpack://checkout//src/common/dom/is-element-id.ts","webpack://checkout//src/common/dom/set-unique-element-id.ts","webpack://checkout//src/checkout-buttons/checkout-button-strategy-action-creator.ts","webpack://checkout//src/checkout-buttons/strategies/amazon-pay-v2/amazon-pay-v2-button-strategy.ts","webpack://checkout//src/checkout-buttons/strategies/braintree/braintree-paypal-button-strategy.ts","webpack://checkout//src/checkout-buttons/strategies/googlepay/googlepay-button-strategy.ts","webpack://checkout//src/checkout-buttons/strategies/masterpass/masterpass-button-strategy.ts","webpack://checkout//src/checkout-buttons/strategies/paypal/paypal-button-strategy.ts","webpack://checkout//src/checkout-buttons/strategies/paypal-commerce/paypal-commerce-button-strategy.ts","webpack://checkout//src/checkout-buttons/create-checkout-button-initializer.ts","webpack://checkout//src/checkout-buttons/create-checkout-button-registry.ts","webpack://checkout//src/embedded-checkout/errors/not-embeddable-error.ts","webpack://checkout//src/common/storage/browser-storage.ts","webpack://checkout//src/embedded-checkout/errors/invalid-login-token-error.ts","webpack://checkout//src/embedded-checkout/embedded-checkout.ts","webpack://checkout//src/embedded-checkout/resizable-iframe-creator.ts","webpack://checkout//src/embedded-checkout/embed-checkout.ts","webpack://checkout//src/embedded-checkout/iframe-content/handle-frame-loaded-event.ts","webpack://checkout//src/common/error/errors/custom-error.ts","webpack://checkout//src/embedded-checkout/iframe-content/iframe-embedded-checkout-messenger.ts","webpack://checkout//src/embedded-checkout/iframe-content/noop-embedded-checkout-messenger.ts","webpack://checkout//src/embedded-checkout/iframe-content/create-embedded-checkout-messenger.ts","webpack://checkout//src/common/utility/cache-key-maps.ts","webpack://checkout//src/common/utility/cache-key-resolver.ts","webpack://checkout/webpack:/external \"@braintree/browser-detection\"","webpack://checkout/webpack:/external \"messageformat\"","webpack://checkout//src/common/error/errors/map-from-payment-error-response.ts","webpack://checkout//src/common/error/errors/timeout-error.ts","webpack://checkout//src/payment/errors/payment-method-invalid-error.ts","webpack://checkout//src/common/selector/create-selector.ts","webpack://checkout//src/subscription/subscriptions-actions.ts","webpack://checkout//src/config/config-action-creator.ts","webpack://checkout//src/config/config-request-sender.ts","webpack://checkout//src/subscription/subscriptions-request-sender.ts","webpack://checkout//src/form/form-fields-action-creator.ts","webpack://checkout//src/form/form-fields-request-sender.ts","webpack://checkout//src/billing/billing-address-request-sender.ts","webpack://checkout//src/common/registry/registry.ts","webpack://checkout//src/common/error/errors/not-implemented-error.ts","webpack://checkout//src/remote-checkout/errors/remote-checkout-synchronization-error.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-adyenv2-initializer.ts","webpack://checkout//src/payment/strategies/masterpass/masterpass-script-loader.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-authorizenet-initializer.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-braintree-initializer.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-checkoutcom-initializer.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-cybersourcev2-initializer.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-stripe-initializer.ts","webpack://checkout//src/hosted-form/errors/invalid-hosted-form-config-error.ts","webpack://checkout//src/hosted-form/errors/invalid-hosted-form-value-error.ts","webpack://checkout//src/payment/strategies/paypal/paypal-script-loader.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-request-sender.ts","webpack://checkout//src/common/loading-indicator/loading-indicator.ts","webpack://checkout//src/common/iframe/iframe-resizer.ts","webpack://checkout//src/common/error/error-action-creator.ts","webpack://checkout//src/common/utility/get-environment.ts","webpack://checkout//src/common/log/create-logger.ts","webpack://checkout//src/common/log/console-logger.ts","webpack://checkout//src/common/log/noop-logger.ts","webpack://checkout//src/common/log/get-default-logger.ts","webpack://checkout//src/coupon/coupon-action-creator.ts","webpack://checkout//src/coupon/coupon-request-sender.ts","webpack://checkout//src/coupon/gift-certificate-action-creator.ts","webpack://checkout//src/coupon/gift-certificate-request-sender.ts","webpack://checkout//src/spam-protection/is-spam-protection-succeeded-action.ts","webpack://checkout//src/customer/customer-action-creator.ts","webpack://checkout//src/customer/customer-request-sender.ts","webpack://checkout//src/customer/customer-strategy-action-creator.ts","webpack://checkout//src/payment/strategies/amazon-pay/amazon-pay-script-loader.ts","webpack://checkout//src/payment/strategies/braintree/braintree-visacheckout-payment-processor.ts","webpack://checkout//src/payment/strategies/braintree/create-braintree-visacheckout-payment-processor.ts","webpack://checkout//src/payment/strategies/braintree/visacheckout-script-loader.ts","webpack://checkout//src/payment/strategies/chasepay/chasepay-script-loader.ts","webpack://checkout//src/remote-checkout/remote-checkout-request-sender.ts","webpack://checkout//src/remote-checkout/remote-checkout-action-creator.ts","webpack://checkout//src/spam-protection/errors/spam-protection-challenge-not-completed-error.ts","webpack://checkout//src/spam-protection/errors/spam-protection-failed-error.ts","webpack://checkout//src/spam-protection/spam-protection-action-creator.ts","webpack://checkout//src/common/dom/mutation-observer.ts","webpack://checkout//src/spam-protection/errors/spam-protection-not-loaded-error.ts","webpack://checkout//src/spam-protection/google-recaptcha.ts","webpack://checkout//src/spam-protection/google-recaptcha-script-loader.ts","webpack://checkout//src/spam-protection/create-spam-protection.ts","webpack://checkout//src/spam-protection/spam-protection-request-sender.ts","webpack://checkout//src/customer/strategies/amazon/amazon-pay-customer-strategy.ts","webpack://checkout//src/customer/strategies/amazon-pay-v2/amazon-pay-v2-customer-strategy.ts","webpack://checkout//src/customer/strategies/braintree/braintree-visacheckout-customer-strategy.ts","webpack://checkout//src/customer/strategies/chasepay/chasepay-customer-strategy.ts","webpack://checkout//src/customer/strategies/default/default-customer-strategy.ts","webpack://checkout//src/customer/strategies/googlepay/googlepay-customer-strategy.ts","webpack://checkout//src/customer/strategies/masterpass/masterpass-customer-strategy.ts","webpack://checkout//src/customer/strategies/square/square-customer-strategy.ts","webpack://checkout//src/geography/country-action-creator.ts","webpack://checkout//src/geography/country-request-sender.ts","webpack://checkout//src/order/order-request-sender.ts","webpack://checkout//src/spam-protection/errors/spam-protection-not-completed-error.ts","webpack://checkout//src/order/order-action-creator.ts","webpack://checkout//src/order/errors/order-finalization-not-required-error.ts","webpack://checkout//src/payment/payment-strategy-action-creator.ts","webpack://checkout//src/cart/cart-comparator.ts","webpack://checkout//src/cart/errors/cart-changed-error.ts","webpack://checkout//src/checkout/checkout-validator.ts","webpack://checkout//src/common/utility/cancellable-promise.ts","webpack://checkout//src/common/dom/errors/unexpected-detachment-error.ts","webpack://checkout//src/common/dom/detachment-observer.ts","webpack://checkout//src/spam-protection/errors/carding-protection-challenge-not-completed-error.ts","webpack://checkout//src/spam-protection/errors/carding-protection-failed-error.ts","webpack://checkout//src/spam-protection/payment-human-verification-handler.ts","webpack://checkout//src/hosted-form/errors/invalid-hosted-form-error.ts","webpack://checkout//src/hosted-form/hosted-field.ts","webpack://checkout//src/hosted-form/hosted-form.ts","webpack://checkout//src/hosted-form/hosted-form-order-data-transformer.ts","webpack://checkout//src/hosted-form/hosted-form-factory.ts","webpack://checkout//src/store-credit/store-credit-action-creator.ts","webpack://checkout//src/store-credit/store-credit-request-sender.ts","webpack://checkout//src/payment/payment-action-creator.ts","webpack://checkout//src/payment/payment-strategy-registry.ts","webpack://checkout//src/common/browser-info/get-browser-info.ts","webpack://checkout//src/payment/strategies/adyenv2/adyenv2.ts","webpack://checkout//src/payment/errors/payment-argument-invalid-error.ts","webpack://checkout//src/payment/errors/payment-method-cancelled-error.ts","webpack://checkout//src/payment/strategies/adyenv2/adyenv2-payment-strategy.ts","webpack://checkout//src/order/order-params.ts","webpack://checkout//src/payment/strategies/adyenv2/adyenv2-script-loader.ts","webpack://checkout//src/payment/strategies/affirm/affirm-payment-strategy.ts","webpack://checkout//src/payment/strategies/affirm/affirm-script-loader.ts","webpack://checkout//src/payment/strategies/affirm/affirmJs.ts","webpack://checkout//src/payment/strategies/afterpay/afterpay-payment-strategy.ts","webpack://checkout//src/payment/strategies/afterpay/afterpay-script-loader.ts","webpack://checkout//src/address/is-internal-address-equal.ts","webpack://checkout//src/common/utility/omit-private.ts","webpack://checkout//src/address/map-from-internal-address.ts","webpack://checkout//src/payment/strategies/bolt/bolt.ts","webpack://checkout//src/payment/strategies/amazon-pay/amazon-pay-payment-strategy.ts","webpack://checkout//src/payment/strategies/amazon-pay-v2/amazon-pay-v2-payment-strategy.ts","webpack://checkout//src/payment/strategies/credit-card/credit-card-payment-strategy.ts","webpack://checkout//src/payment/strategies/barclays/barclays-payment-strategy.ts","webpack://checkout//src/payment/strategies/bluesnapv2/bluesnapv2-payment-strategy.ts","webpack://checkout//src/payment/strategies/bolt/bolt-payment-strategy.ts","webpack://checkout//src/payment/is-nonce-like.ts","webpack://checkout//src/payment/strategies/bolt/bolt-script-loader.ts","webpack://checkout//src/payment/strategies/braintree/braintree-payment-options.ts","webpack://checkout//src/common/overlay/overlay.ts","webpack://checkout//src/common/overlay/overlay-style.ts","webpack://checkout//src/payment/errors/payment-invalid-form-error.ts","webpack://checkout//src/payment/strategies/braintree/braintree-regular-field.ts","webpack://checkout//src/payment/strategies/braintree/braintree-hosted-form.ts","webpack://checkout//src/payment/strategies/braintree/is-braintree-form-fields-map.ts","webpack://checkout//src/payment/strategies/cardinal/cardinal.ts","webpack://checkout//src/payment/strategies/braintree/braintree-payment-processor.ts","webpack://checkout//src/payment/strategies/braintree/braintree-credit-card-payment-strategy.ts","webpack://checkout//src/payment/strategies/braintree/braintree-paypal-payment-strategy.ts","webpack://checkout//src/payment/strategies/braintree/is-braintree-error.ts","webpack://checkout//src/payment/strategies/braintree/map-to-braintree-shipping-address-override.ts","webpack://checkout//src/payment/strategies/braintree/braintree-visacheckout-payment-strategy.ts","webpack://checkout//src/payment/strategies/cardinal/cardinal-three-d-secure-flow-v2.ts","webpack://checkout//src/payment/is-credit-card-like.ts","webpack://checkout//src/payment/strategies/cardinal/cardinal-client.ts","webpack://checkout//src/payment/strategies/chasepay/chasepay.ts","webpack://checkout//src/payment/strategies/cardinal/cardinal-script-loader.ts","webpack://checkout//src/payment/strategies/cardinal/cardinal-three-d-secure-flow.ts","webpack://checkout//src/payment/strategies/chasepay/chasepay-payment-strategy.ts","webpack://checkout//src/payment/payment-response-body.ts","webpack://checkout//src/payment/strategies/checkoutcom-custom/checkoutcom-custom-payment-strategy.ts","webpack://checkout//src/payment/strategies/mollie/mollie-payment-strategy.ts","webpack://checkout//src/payment/strategies/checkoutcom-custom/checkoutcom-apm/checkoutcom-apm-payment-strategy.ts","webpack://checkout//src/payment/strategies/checkoutcom-custom/checkoutcom-sepa/checkoutcom-sepa-payment-strategy.ts","webpack://checkout//src/payment/strategies/checkoutcom-custom/checkoutcom-ideal/checkoutcom-ideal-payment-strategy.ts","webpack://checkout//src/payment/strategies/checkoutcom-custom/checkoutcom-sepa/checkoutcom-fawry-payment-strategy.ts","webpack://checkout//src/payment/strategies/clearpay/clearpay-payment-strategy.ts","webpack://checkout//src/payment/strategies/clearpay/clearpay-script-loader.ts","webpack://checkout//src/payment/strategies/converge/converge-payment-strategy.ts","webpack://checkout//src/payment/strategies/credit-card-redirect/credit-card-redirect-payment-strategy.ts","webpack://checkout//src/payment/strategies/cybersource/cybersource-payment-strategy.ts","webpack://checkout//src/payment/strategies/cybersourcev2/cybersourcev2-payment-strategy.ts","webpack://checkout//src/payment/strategies/digitalriver/digitalriver-payment-strategy.ts","webpack://checkout//src/payment/strategies/digitalriver/digitalriver-script-loader.ts","webpack://checkout//src/payment/strategies/external/external-payment-strategy.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-payment-strategy.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-adyenv2-payment-processor.ts","webpack://checkout//src/payment/strategies/klarnav2/klarna-supported-countries.ts","webpack://checkout//src/payment/strategies/klarna/klarna-payment-strategy.ts","webpack://checkout//src/payment/strategies/klarna/klarna-script-loader.ts","webpack://checkout//src/payment/strategies/klarnav2/klarnav2-payment-strategy.ts","webpack://checkout//src/payment/strategies/klarnav2/klarnav2-script-loader.ts","webpack://checkout//src/payment/strategies/legacy/legacy-payment-strategy.ts","webpack://checkout//src/payment/strategies/masterpass/masterpass-payment-strategy.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-payment-initialize-options.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-hosted-form.ts","webpack://checkout//src/payment/strategies/mollie/mollie-script-loader.ts","webpack://checkout//src/payment/strategies/no-payment/no-payment-data-required-strategy.ts","webpack://checkout//src/payment/strategies/offline/offline-payment-strategy.ts","webpack://checkout//src/payment/strategies/offsite/offsite-payment-strategy.ts","webpack://checkout//src/payment/strategies/paypal/paypal-pro-payment-strategy.ts","webpack://checkout//src/payment/strategies/paypal/paypal-express-payment-strategy.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-credit-card-payment-strategy.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-regular-field.ts","webpack://checkout//src/payment/strategies/square/square-form.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-payment-strategy.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-funding-key-resolver.ts","webpack://checkout//src/payment/strategies/ppsdk/ppsdk-strategy.ts","webpack://checkout//src/payment/strategies/sage-pay/sage-pay-payment-strategy.ts","webpack://checkout//src/common/error/errors/unsupported-browser-error.ts","webpack://checkout//src/payment/strategies/square/square-payment-strategy.ts","webpack://checkout//src/payment/strategies/stripev3/stripev3.ts","webpack://checkout//src/payment/strategies/square/square-script-loader.ts","webpack://checkout//src/payment/strategies/stripev3/stripev3-payment-strategy.ts","webpack://checkout//src/payment/strategies/stripev3/stripev3-script-loader.ts","webpack://checkout//src/payment/strategies/wepay/wepay-risk-client.ts","webpack://checkout//src/payment/strategies/wepay/wepay-payment-strategy.ts","webpack://checkout//src/payment/errors/payment-method-declined-error.ts","webpack://checkout//src/payment/strategies/zip/zip-payment-strategy.ts","webpack://checkout//src/payment/strategies/zip/zip-script-loader.ts","webpack://checkout//src/common/data-store/create-data-store-projection.ts","webpack://checkout//src/payment/instrument/instrument-action-creator.ts","webpack://checkout//src/common/date-time/is-future.ts","webpack://checkout//src/common/date-time/add-minutes.ts","webpack://checkout//src/payment/instrument/instrument-response-transformer.ts","webpack://checkout//src/payment/instrument/map-to-paypal-instrument.ts","webpack://checkout//src/payment/instrument/map-to-bank-instrument.ts","webpack://checkout//src/payment/instrument/map-to-card-instrument.ts","webpack://checkout//src/payment/instrument/instrument-request-sender.ts","webpack://checkout//src/shipping/shipping-country-action-creator.ts","webpack://checkout//src/shipping/shipping-country-request-sender.ts","webpack://checkout//src/shipping/shipping-strategy-action-creator.ts","webpack://checkout//src/shipping/strategies/amazon/amazon-pay-shipping-strategy.ts","webpack://checkout//src/shipping/strategies/amazon-pay-v2/amazon-pay-v2-shipping-strategy.ts","webpack://checkout//src/shipping/strategies/default/default-shipping-strategy.ts","webpack://checkout//src/signin-email/signin-email-action-creator.ts","webpack://checkout//src/signin-email/signin-email-request-sender.ts","webpack://checkout//src/common/utility/clone-result.ts","webpack://checkout//src/common/selector/create-shallow-equal-selector.ts","webpack://checkout//src/checkout/create-checkout-selectors.ts","webpack://checkout//src/checkout/checkout-store-selector.ts","webpack://checkout//src/checkout/checkout-store-error-selector.ts","webpack://checkout//src/checkout/checkout-store-status-selector.ts","webpack://checkout//src/common/error/error-message-transformer.ts","webpack://checkout//src/common/utility/to-single-line.ts","webpack://checkout//src/checkout/checkout-service.ts","webpack://checkout//src/checkout/create-checkout-service-error-transformer.ts","webpack://checkout//src/checkout/create-checkout-service.ts","webpack://checkout//src/payment/create-payment-client.ts","webpack://checkout//src/customer/create-customer-strategy-registry.ts","webpack://checkout//src/payment/create-payment-strategy-registry.ts","webpack://checkout//src/payment/strategies/braintree/create-braintree-payment-processor.ts","webpack://checkout//src/shipping/create-shipping-strategy-registry.ts","webpack://checkout//src/locale/language-service.ts","webpack://checkout//src/locale/create-language-service.ts","webpack://checkout//src/currency/currency-formatter.ts","webpack://checkout//src/currency/currency-service.ts","webpack://checkout//src/currency/create-currency-service.ts","webpack://checkout//src/analytics/analytics-step-tracker.ts","webpack://checkout//src/analytics/noop-step-tracker.ts","webpack://checkout//src/analytics/create-step-tracker.ts","webpack://checkout//src/analytics/is-analytics-step-tracker-window.ts","webpack://checkout//src/bundles/checkout-sdk.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-sdk.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-script-loader.ts","webpack://checkout//src/payment/strategies/paypal-commerce/paypal-commerce-payment-processor.ts","webpack://checkout//src/payment/strategies/paypal-commerce/create-paypal-commerce-payment-processor.ts","webpack://checkout//src/payment/strategies/amazon-pay-v2/amazon-pay-v2-payment-processor.ts","webpack://checkout//src/payment/strategies/amazon-pay-v2/amazon-pay-v2-script-loader.ts","webpack://checkout//src/payment/strategies/amazon-pay-v2/create-amazon-pay-v2-payment-processor.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-payment-processor.ts","webpack://checkout//src/payment/strategies/googlepay/googlepay-script-loader.ts","webpack://checkout//src/payment/strategies/googlepay/create-googlepay-payment-processor.ts","webpack://checkout//src/subscription/errors/update-subscriptions-error.ts","webpack://checkout//src/subscription/subscriptions-action-creator.ts","webpack://checkout//src/billing/errors/unable-to-continue-as-guest-error.ts","webpack://checkout//src/billing/billing-address-action-creator.ts","webpack://checkout//src/shipping/getShippableItemsCount.ts","webpack://checkout//src/shipping/getLineItemsCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/empty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/from.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/identity.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/OuterSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToResult.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/observable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/filter.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/multicast.ts","webpack://checkout/./node_modules/@bigcommerce/script-loader/node_modules/@bigcommerce/request-sender/node_modules/tslib/tslib.js","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/@bigcommerce/request-sender/node_modules/tslib/tslib.js","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isFunction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsyncAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsyncScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/ArgumentOutOfRangeError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/EmptyError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/iterator.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/defaultIfEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/config.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/ObjectUnsubscribedError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Notification.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/of.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/AsyncSubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/concat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isNumeric.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throwIfEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/reduce.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/canReportError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/hostReportError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isObject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/symbol/rxSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/pipe.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/refCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/ReplaySubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/throwError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/noop.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/combineLatest.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/defer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/zip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/take.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/scan.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchMap.ts","webpack://checkout/../src/timeout.ts","webpack://checkout/../../../src/common/utils/is-nil.js","webpack://checkout/../../../src/common/utils/omit-property.js","webpack://checkout/../../../src/payment/payment-method-mappers/payment-method-id-mapper.js","webpack://checkout/../../src/payment/url-helper.js","webpack://checkout/../../../src/common/http-request/request-sender.js","webpack://checkout/../../../src/common/http-request/method-types.js","webpack://checkout/../src/data-store.ts","webpack://checkout/../src/deep-freeze.ts","webpack://checkout/../src/combine-reducers.ts","webpack://checkout/../src/create-action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Observer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/UnsubscriptionError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/ConnectableObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/SubjectSubscription.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/groupBy.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/BehaviorSubject.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/queue.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/Scheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/observeOn.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/asap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/TimeoutError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isArrayLike.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isPromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduled.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/merge.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/never.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/not.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/race.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/timer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/audit.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isDate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinctUntilChanged.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/find.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throttle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeoutWith.ts","webpack://checkout/../src/script-loader.ts","webpack://checkout/../src/create-script-loader.ts","webpack://checkout/./node_modules/@bigcommerce/script-loader/node_modules/query-string/index.js","webpack://checkout/../src/request-sender.ts","webpack://checkout/../src/browser-support.ts","webpack://checkout/../src/stylesheet-loader.ts","webpack://checkout/../src/create-stylesheet-loader.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/query-string/index.js","webpack://checkout/../src/form-poster.ts","webpack://checkout/../../src/payment/payment-types.js","webpack://checkout/../../../src/common/utils/is-object.js","webpack://checkout/../../../src/common/http-request/content-types.js","webpack://checkout/./node_modules/@bigcommerce/request-sender/node_modules/query-string/index.js","webpack://checkout/../src/is-observable-action-like.ts","webpack://checkout/../src/noop-action-transformer.ts","webpack://checkout/../src/noop-state-transformer.ts","webpack://checkout/../src/compose-reducers.ts","webpack://checkout/../src/create-data-store.ts","webpack://checkout/../src/create-error-action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/toSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/QueueAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/Action.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/QueueScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsapAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/Immediate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AsapScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/animationFrame.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AnimationFrameAction.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/AnimationFrameScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduler/VirtualTimeScheduler.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/bindCallback.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/bindNodeCallback.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/InnerSubscriber.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToPromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/subscribeToObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/schedulePromise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/scheduled/scheduleIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isInteropObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/util/isIterable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/forkJoin.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromEvent.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/fromEventPattern.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/generate.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/iif.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/interval.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/onErrorResumeNext.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/pairs.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/partition.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/range.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/using.ts","webpack://checkout/../src/memoize.ts","webpack://checkout/../src/cache-key-resolver.ts","webpack://checkout/../src/cache-key-maps.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/operators/index.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/auditTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/buffer.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferToggle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/bufferWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/catchError.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/combineAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/combineLatest.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/concatMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/count.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/debounce.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/debounceTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/delay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/delayWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/dematerialize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinct.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/distinctUntilKeyChanged.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/elementAt.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/endWith.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/every.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/exhaust.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/exhaustMap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/expand.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/finalize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/findIndex.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/first.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/ignoreElements.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/isEmpty.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/last.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/materialize.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/max.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/merge.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/mergeScan.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/min.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/onErrorResumeNext.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/pairwise.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/partition.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/pluck.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publish.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishBehavior.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/publishReplay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/race.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/repeat.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/repeatWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/retry.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/retryWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sample.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sampleTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/sequenceEqual.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/share.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/shareReplay.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/single.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipLast.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipUntil.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/skipWhile.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/startWith.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/subscribeOn.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/observable/SubscribeOnObservable.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchAll.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/switchMapTo.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeUntil.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/takeWhile.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/tap.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/throttleTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeInterval.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timeout.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/timestamp.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/toArray.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/window.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowCount.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowTime.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowToggle.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/windowWhen.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/withLatestFrom.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/zip.ts","webpack://checkout/./node_modules/@bigcommerce/checkout-sdk/node_modules/rxjs/src/internal/operators/zipAll.ts","webpack://checkout/../src/create-request-sender.ts","webpack://checkout/../src/payload-transformer.ts","webpack://checkout/../src/to-form-url-encoded.ts","webpack://checkout/../src/request-factory.ts","webpack://checkout/../src/cache.ts","webpack://checkout/../src/is-promise.ts","webpack://checkout/../src/create-timeout.ts","webpack://checkout/../src/get-script-loader.ts","webpack://checkout/../src/get-stylesheet-loader.ts","webpack://checkout/../src/create-form-poster.ts","webpack://checkout/../src/form-builder.ts","webpack://checkout/../src/url-utils.ts","webpack://checkout/../src/index.js","webpack://checkout/../../src/client/client.js","webpack://checkout/../../src/payment/offsite-payment-initializer.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/payload-mapper.js","webpack://checkout/../../../src/common/utils/includes.js","webpack://checkout/../../../src/common/utils/omit-emptystring-and-nil.js","webpack://checkout/../../../src/common/utils/is-emptystring-or-nil.js","webpack://checkout/../../../src/common/utils/is-empty-string.js","webpack://checkout/../../../src/common/utils/omit-nil.js","webpack://checkout/../../../src/common/utils/to-number.js","webpack://checkout/../../../src/common/utils/to-snake-case.js","webpack://checkout/../../../src/common/utils/to-string.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/address-mapper.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/customer-mapper.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/meta-mapper.js","webpack://checkout/../../src/payment/payment-method-types.js","webpack://checkout/../../src/payment/payment-method-ids.js","webpack://checkout/../../../src/payment/offsite-payment-mappers/store-mapper.js","webpack://checkout/../../src/payment/payment-submitter.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/payload-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/customer-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/order-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/payment-mapper.js","webpack://checkout/../../../../src/payment/v1/payment-mappers/store-mapper.js","webpack://checkout/../../../src/common/http-request/default-options.js","webpack://checkout/../../../src/common/http-request/payload-transformer.js","webpack://checkout/../../../src/common/http-request/request-factory.js","webpack://checkout/../../src/payment/client-token-generator.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/client-token-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/cart-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/gateway-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/quote-mapper.js","webpack://checkout/../../../../src/payment/v2/payment-mappers/store-mapper.js","webpack://checkout/../../src/store/store-request-sender.js","webpack://checkout/../../src/store/url-helper.js","webpack://checkout/../../../../src/store/v2/mappers/index.js","webpack://checkout/../../src/client/default-config.js"],"names":["destinationOrNext","error","complete","syncErrorValue","syncErrorThrown","syncErrorThrowable","isStopped","arguments","length","destination","empty","Subscriber","add","SafeSubscriber","rxSubscriber","this","create","next","subscriber","value","_next","err","_error","_complete","unsubscribe","closed","_unsubscribeAndRecycle","_parentOrParents","Subscription","_parentSubscriber","observerOrNext","context","isFunction","Object","bind","_context","config","useDeprecatedSynchronousErrorHandling","__tryOrSetError","__tryOrUnsub","hostReportError","wrappedComplete","call","fn","parent","Error","_unsubscribe","subscribe","_isScalar","_subscribe","lift","operator","observable","Observable","source","sink","toSubscriber","_trySubscribe","canReportError","console","warn","forEach","promiseCtor","getPromiseCtor","resolve","reject","subscription","pipe","operations","pipeFromArray","toPromise","x","Promise","notifyNext","notifyError","notifyComplete","SimpleInnerSubscriber","outerValue","outerIndex","ComplexInnerSubscriber","innerValue","SimpleOuterSubscriber","_outerValue","_outerIndex","_innerSub","ComplexOuterSubscriber","result","innerSubscriber","subscribeTo","_subscriptions","_ctorUnsubscribe","errors","remove","index","undefined","e","UnsubscriptionError","flattenUnsubscriptionErrors","isArray","len","sub","isObject","concat","push","teardown","EMPTY","tmp","indexOf","subscriptions","subscriptionIndex","splice","reduce","errs","SubjectSubscriber","observers","hasError","thrownError","subject","AnonymousSubject","ObjectUnsubscribedError","copy","slice","i","SubjectSubscription","asObservable","Subject","default","Array","asyncScheduler","AsyncScheduler","AsyncAction","async","project","thisArg","TypeError","MapOperator","MapSubscriber","count","installedModules","__webpack_require__","moduleId","exports","module","l","modules","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","t","mode","__esModule","ns","key","n","object","property","prototype","hasOwnProperty","p","s","require","ConsignmentActionType","CreateConsignmentsRequested","CreateConsignmentsSucceeded","CreateConsignmentsFailed","UpdateConsignmentRequested","UpdateConsignmentSucceeded","UpdateConsignmentFailed","DeleteConsignmentRequested","DeleteConsignmentSucceeded","DeleteConsignmentFailed","UpdateShippingOptionRequested","UpdateShippingOptionSucceeded","UpdateShippingOptionFailed","LoadShippingOptionsRequested","LoadShippingOptionsSucceeded","LoadShippingOptionsFailed","ShippingStrategyActionType","UpdateAddressFailed","UpdateAddressRequested","UpdateAddressSucceeded","SelectOptionFailed","SelectOptionRequested","SelectOptionSucceeded","InitializeFailed","InitializeRequested","InitializeSucceeded","DeinitializeFailed","DeinitializeRequested","DeinitializeSucceeded","WidgetInteractionStarted","WidgetInteractionFinished","WidgetInteractionFailed","PaymentStrategyType","ADYENV2","ADYENV2_GOOGLEPAY","AFFIRM","AFTERPAY","AMAZON","AUTHORIZENET_GOOGLE_PAY","AMAZONPAYV2","BARCLAYS","BLUESNAPV2","BOLT","CHECKOUTCOM","CHECKOUTCOM_APM","CHECKOUTCOM_FAWRY","CHECKOUTCOM_SEPA","CHECKOUTCOM_IDEAL","CREDIT_CARD","CHECKOUTCOM_GOOGLE_PAY","CLEARPAY","CONVERGE","CYBERSOURCE","CYBERSOURCEV2","DIGITALRIVER","CYBERSOURCEV2_GOOGLE_PAY","KLARNA","KLARNAV2","LAYBUY","LEGACY","MOLLIE","NO_PAYMENT_DATA_REQUIRED","OFFLINE","OFFSITE","PAYPAL","PAYPAL_EXPRESS","PAYPAL_EXPRESS_CREDIT","PAYPAL_COMMERCE","PAYPAL_COMMERCE_CREDIT","PAYPAL_COMMERCE_CREDIT_CARD","PAYPAL_COMMERCE_ALTERNATIVE_METHODS","PPSDK","SAGE_PAY","SQUARE","STRIPEV3","BRAINTREE","BRAINTREE_PAYPAL","BRAINTREE_PAYPAL_CREDIT","BRAINTREE_VISA_CHECKOUT","BRAINTREE_GOOGLE_PAY","CHASE_PAY","WE_PAY","MASTERPASS","STRIPE_GOOGLE_PAY","SEZZLE","ZIP","CustomerStrategyActionType","SignInFailed","SignInRequested","SignInSucceeded","SignOutFailed","SignOutRequested","SignOutSucceeded","PaymentStrategyActionType","ExecuteFailed","ExecuteRequested","ExecuteSucceeded","FinalizeFailed","FinalizeRequested","FinalizeSucceeded","MissingDataErrorType","MissingBillingAddress","MissingCart","MissingCheckout","MissingConsignments","MissingCustomer","MissingCheckoutConfig","MissingOrder","MissingOrderConfig","MissingOrderId","MissingPayment","MissingPaymentInstrument","MissingPaymentMethod","MissingPaymentToken","MissingShippingAddress","subtype","type","CheckoutActionType","LoadCheckoutRequested","LoadCheckoutSucceeded","LoadCheckoutFailed","UpdateCheckoutRequested","UpdateCheckoutSucceeded","UpdateCheckoutFailed","OrderActionType","LoadOrderRequested","LoadOrderSucceeded","LoadOrderFailed","LoadOrderPaymentsRequested","LoadOrderPaymentsSucceeded","LoadOrderPaymentsFailed","SubmitOrderRequested","SubmitOrderSucceeded","SubmitOrderFailed","FinalizeOrderRequested","FinalizeOrderSucceeded","FinalizeOrderFailed","PaymentMethodActionType","LoadPaymentMethodRequested","LoadPaymentMethodSucceeded","LoadPaymentMethodFailed","LoadPaymentMethodsRequested","LoadPaymentMethodsSucceeded","LoadPaymentMethodsFailed","BillingAddressActionType","UpdateBillingAddressRequested","UpdateBillingAddressSucceeded","UpdateBillingAddressFailed","ContinueAsGuestRequested","ContinueAsGuestSucceeded","ContinueAsGuestFailed","CheckoutButtonActionType","InitializeButtonFailed","InitializeButtonRequested","InitializeButtonSucceeded","DeinitializeButtonFailed","DeinitializeButtonRequested","DeinitializeButtonSucceeded","CouponActionType","ApplyCouponRequested","ApplyCouponSucceeded","ApplyCouponFailed","RemoveCouponRequested","RemoveCouponSucceeded","RemoveCouponFailed","message","setPrototypeOf","__proto__","captureStackTrace","stack","CustomerActionType","SignInCustomerRequested","SignInCustomerSucceeded","SignInCustomerFailed","SignOutCustomerRequested","SignOutCustomerSucceeded","SignOutCustomerFailed","CreateCustomerRequested","CreateCustomerSucceeded","CreateCustomerFailed","CreateCustomerAddressRequested","CreateCustomerAddressSucceeded","CreateCustomerAddressFailed","EmbeddedCheckoutEventType","CheckoutComplete","CheckoutError","CheckoutLoaded","FrameError","FrameLoaded","SignedOut","InstrumentActionType","LoadInstrumentsRequested","LoadInstrumentsSucceeded","LoadInstrumentsFailed","DeleteInstrumentRequested","DeleteInstrumentSucceeded","DeleteInstrumentFailed","GiftCertificateActionType","ApplyGiftCertificateRequested","ApplyGiftCertificateSucceeded","ApplyGiftCertificateFailed","RemoveGiftCertificateRequested","RemoveGiftCertificateSucceeded","RemoveGiftCertificateFailed","ButtonType","ButtonColor","BillingAddressFormat","Long","Short","Default","Black","White","Min","Full","RemoteCheckoutActionType","InitializeRemoteBillingRequested","InitializeRemoteBillingSucceeded","InitializeRemoteBillingFailed","InitializeRemoteShippingRequested","InitializeRemoteShippingSucceeded","InitializeRemoteShippingFailed","InitializeRemotePaymentRequested","InitializeRemotePaymentSucceeded","InitializeRemotePaymentFailed","LoadRemoteSettingsRequested","LoadRemoteSettingsSucceeded","LoadRemoteSettingsFailed","SignOutRemoteCustomerRequested","SignOutRemoteCustomerSucceeded","SignOutRemoteCustomerFailed","UpdateRemoteCheckout","ContentType","Json","JsonV1","ACKNOWLEDGE","FINALIZE","DEFAULT_RESPONSE","body","headers","status","response","isVaultedInstrument","instrument","Boolean","instrumentId","isHostedVaultedInstrument","isFormattedVaultedInstrument","formattedInstrument","formattedPayload","bigpay_token","token","ConfigActionType","LoadConfigRequested","LoadConfigSucceeded","LoadConfigFailed","FormFieldsActionType","LoadFormFieldsRequested","LoadFormFieldsSucceeded","LoadFormFieldsFailed","isPlainObject","CountryActionType","LoadCountriesRequested","LoadCountriesSucceeded","LoadCountriesFailed","ShippingCountryActionType","LoadShippingCountriesRequested","LoadShippingCountriesSucceeded","LoadShippingCountriesFailed","SignInEmailActionType","SendSignInEmailRequested","SendSignInEmailSucceeded","SendSignInEmailFailed","StoreCreditActionType","ApplyStoreCreditRequested","ApplyStoreCreditSucceeded","ApplyStoreCreditFailed","HostedInputEventType","AttachSucceeded","AttachFailed","BinChanged","Blurred","Changed","CardTypeChanged","Entered","Focused","SubmitSucceeded","SubmitFailed","Validated","parseUrl","url","test","anchor","document","createElement","href","port","hostname","hash","origin","protocol","pathname","search","isIframeEvent","HOSTED","mapToInternalAddress","address","consignments","addressId","id","firstName","lastName","company","addressLine1","address1","addressLine2","address2","city","province","stateOrProvince","provinceCode","stateOrProvinceCode","postCode","postalCode","country","countryCode","phone","customFields","INTERNAL_USE_ONLY","PaymentActionType","SubmitPaymentRequested","SubmitPaymentSucceeded","SubmitPaymentFailed","InitializeOffsitePaymentRequested","InitializeOffsitePaymentSucceeded","InitializeOffsitePaymentFailed","joinIncludes","includes","uniq","join","mapToInternalLineItems","itemMap","decimalPlaces","idKey","keys","map","item","amountTransformer","imageUrl","amount","amountAfterDiscount","discount","integerAmount","toInteger","integerAmountAfterDiscount","integerUnitPrice","integerUnitPriceAfterDiscount","integerDiscount","quantity","sender","recipient","attributes","variantId","SpamProtectionActionType","VerifyCheckoutRequested","VerifyCheckoutSucceeded","VerifyCheckoutFailed","HostedFieldEventType","AttachRequested","SubmitRequested","ValidateRequested","isEqual","objectA","objectB","options","Date","getTime","RegExp","toString","filter","keyFilter","keysA","keysB","mapToInternalLineItem","extendedListPrice","extendedSalePrice","discountAmount","listPrice","salePrice","downloadsPageUrl","downloadPageUrl","brand","sku","categoryNames","productId","option","addedByPromotion","mapToInternalShippingOption","isSelected","description","price","cost","selected","isRecommended","transitTime","_decimalPlaces","Math","round","pow","withMemoizedCombiner","creator","combiner","args","pop","combinerArgs","memoize","ErrorActionType","ClearError","_requestSender","loadPaymentMethods","observer","createAction","then","meta","deviceSessionId","sessionHash","catch","createErrorAction","loadPaymentMethod","methodId","timeout","Accept","throwErrorAction","action","of","throwError","payload","cacheAction","from","shareReplay","store","isActionOptions","param","useCache","cachableActionDecorator","_","descriptor","memoizedMethods","WeakMap","decorateMethod","method","lastArg","instanceMethods","set","bindMethodDecorator","boundMethod","target","decoratedTarget","getOwnPropertyNames","getOwnPropertyDescriptor","mapToInternalCustomer","customer","billingAddress","addresses","customerId","isGuest","storeCredit","email","fullName","customerGroupName","customerGroup","mapToInternalOrder","order","orderMeta","payments","items","currency","orderId","lineItems","code","customerCanBeCreated","payment","mapToInternalOrderPayment","subtotal","baseAmount","coupon","discountedAmount","coupons","sum","orderToken","callbackUrl","discountNotifications","giftCertificate","providerId","totalDiscountedAmount","appliedGiftCertificates","keyBy","detail","remainingBalance","remaining","balance","purchaseDate","socialData","mapToInternalSocialDataList","hasDigitalItems","isDownloadable","isComplete","shipping","shippingCostTotal","amountBeforeDiscount","shippingCostBeforeDiscount","integerAmountBeforeDiscount","mapToStoreCredit","taxes","taxTotal","handling","handlingCostTotal","grandTotal","orderAmount","orderAmountAsInteger","mapToInternalPaymentStatus","find","isDefaultOrderPayment","step","helpText","instructions","returnUrl","socialDataObject","physicalItems","digitalItems","lineItem","socialMedia","image","link","shareText","text","sharingLink","channelName","channel","channelCode","mapToInternalCart","checkout","promotions","notifications","cart","promotion","banners","placeholders","discountType","messageHtml","banner","giftCertificates","certificate","used","required","some","isShippingRequired","taxSubtotal","AmazonPayV2Regions","AmazonPayV2CheckoutLanguage","AmazonPayV2Placement","AmazonPayV2LedgerCurrency","AmazonPayV2PayOptions","de","jp","uk","us","en_US","en_GB","de_DE","fr_FR","it_IT","es_ES","ja_JP","Home","Product","Cart","Checkout","Other","USD","EUR","GBP","JPY","PayAndShip","PayOnly","_scriptLoader","_window","loadClient","loadScript","braintree","client","load3DS","threeDSecure","loadDataCollector","dataCollector","loadPaypal","paypal","loadPaypalCheckout","paypalCheckout","loadVisaCheckout","visaCheckout","loadGooglePayment","googlePayment","loadHostedFields","hostedFields","_braintreeScriptLoader","_dataCollectors","initialize","clientToken","_clientToken","getClient","PaymentNotInitialized","_client","authorization","getPaypal","_paypal","all","getPaypalCheckout","renderButtonCallback","_paypalCheckout","instance","loadPayPalSDK","get3DS","_3ds","version","getDataCollector","cacheKey","cached","kount","deviceData","getVisaCheckout","_visaCheckout","getGooglePaymentComponent","_googlePay","createHostedFields","_teardown","EmbeddedContentEventType","StyleConfigured","isBillingAddressLike","format","split","trimmedMonth","month","trimmedYear","year","toObject","number","card","maxLength","max","creditCardType","info","lengths","unformattedValue","unformat","gaps","gapIndex","output","replace","couponTypes","mapToInternalCoupon","displayName","couponType","appendWww","NotInitializedErrorType","CheckoutButtonNotInitialized","CustomerNotInitialized","ShippingNotInitialized","SpamProtectionNotInitialized","joinOrMergeIncludes","baseIncludes","includeDictionaryOrList","includesDictionary","deletions","pickBy","on","additions","difference","omitDeep","predicate","transform","omitBy","_checkoutRequestSender","_configActionCreator","_formFieldsActionCreator","loadCheckout","merge","loadConfig","loadFormFields","defer","catchError","loadDefaultCheckout","state","getState","getContextConfig","checkoutId","updateCheckout","getCheckout","loadCurrentCheckout","_consignmentRequestSender","unassignItemsByAddress","consignment","existingConsignment","getConsignmentByAddress","shippingAddress","_removeLineItems","getCart","updateConsignment","deleteConsignment","assignItemsByAddress","_createOrUpdateConsignment","_addLineItems","selectShippingOption","getConsignments","consignmentUpdateBody","shippingOptionId","consignmentMeta","loadShippingOptions","params","include","AvailableShippingOptions","updateAddress","_getUpdateAddressRequestBody","createConsignments","consignmentId","updateShippingOption","_isUpdateConsignmentRequest","customItems","itemId","_hydrateLineItems","lineItemIds","sharedItem","existingItem","request","DEFAULT_INCLUDES","post","put","delete","getCallbackUrl","window","location","_cardExpiryFormatter","_cardNumberFormatter","checkoutState","getBillingAddress","getCustomer","getOrder","paymentMethod","paymentMethods","getPaymentMethod","gatewayId","getShippingAddress","shippingOption","getShippingOption","storeConfig","getStoreConfig","contextConfig","instrumentMeta","instruments","getInstrumentsMeta","paymentMeta","getPaymentMethodsMeta","getOrderMeta","internalCustomer","authToken","paymentData","getPaymentToken","vaultAccessToken","additionalAction","_transformPaymentMethod","quoteMeta","geoCountryCode","pick","storeProfile","transformWithHostedFormData","values","data","nonce","paymentMethodMeta","selectedShippingOption","_transformHostedInputValues","gateway","initializationData","ccCvv","cardCodeVerification","ccNumber","cardNumberVerification","hostedFormNonce","cardCode","ccExpiry","cardExpiry","ccName","cardName","cardNumber","submitPayment","_transformResponse","initializeOffsitePayment","statusText","isPrivate","joinErrors","_factoryMethods","register","title","factoryMethod","createError","_getType","_isStorefrontErrorResponseBody","_isInternalErrorResponseBody","internalType","last","errorResponse","storefrontErrorResponse","internalErrorResponse","clearErrorReducer","currentValue","newValue","objectSet","DEFAULT_STATE","statuses","billingAddressReducer","combineReducers","dataReducer","composeReducers","errorsReducer","statusesReducer","O","UpdateSubscriptionsRequested","UpdateSubscriptionsSucceeded","UpdateSubscriptionsFailed","arrayReplace","currentArray","newArray","a","b","sameAsCurrentCount","sameAsNewCount","countSameAsReplaced","replacedValue","newItem","currentItem","matchObject","objectMerge","currentObject","newObject","cartReducer","DEFAULT_DATA_STATE","initializedContainers","DEFAULT_ERROR_STATE","DEFAULT_STATUS_STATE","checkoutButtonReducer","reducer","containerId","configReducer","couponReducer","giftCertificateReducer","customerReducer","customerStrategyReducer","isInitialized","initializeError","initializeMethodId","deinitializeError","deinitializeMethodId","signInError","signInMethodId","signOutError","signOutMethodId","widgetInteractionError","widgetInteractionMethodId","isInitializing","isDeinitializing","isSigningIn","isSigningOut","isWidgetInteracting","formFieldsReducer","countryReducer","orderReducer","metaReducer","omit","paymentReducer","paymentMethodReducer","array","defaultPredicate","findIndex","methodA","methodB","loadMethodId","loadMethodError","isLoadingMethod","paymentStrategyReducer","executeError","executeMethodId","finalizeError","finalizeMethodId","isExecuting","isFinalizing","instrumentReducer","vaultedInstruments","deleteError","failedInstrument","isDeleting","deletingInstrument","remoteCheckoutReducer","billing","updateShippingOptionError","updateError","isUpdating","isUpdatingShippingOption","consignmentReducer","shippingCountryReducer","shippingStrategyReducer","updateAddressError","updateAddressMethodId","selectOptionError","selectOptionMethodId","isUpdatingAddress","isSelectingOption","signInEmailReducer","storeCreditReducer","subscriptionsReducer","checkoutReducer","guard","errorFactory","createFreezeProxy","trap","proxy","iteratee","getPrototypeOf","charAt","deepFreeze","provider","barclays","braintreepaypal","authorizenet","elavon","checkoutcom","stripe","cybersource","cybersourcev2","converge","bluesnapv2","orbital","paymetric","bolt","normalize","identity","createInternalCheckoutSelectorsFactory","getBillingAddressOrThrow","getUpdateError","getContinueAsGuestError","getLoadError","isContinuingAsGuest","isLoading","getInitializeError","getDeinitializeError","getCoupons","getRemoveError","getApplyError","isApplying","isRemoving","getCustomerOrThrow","getCreateAccountError","isCreatingCustomerAccount","getCreateAddressError","isCreatingCustomerAddress","getInternalPayment","getGatewayPayment","getHostedPayment","getPaymentId","getPaymentStatus","getPaymentRedirectUrl","isPaymentDataRequired","isPaymentDataSubmitted","getEmail","getSendError","isSending","createBillingAddressSelector","continueAsGuestError","loadError","memoizeOne","createCartSelector","getCartOrThrow","createCheckoutButtonSelector","createConfigSelector","getConfig","getFlashMessages","filterType","flashMessages","formState","formFields","getStoreConfigOrThrow","getExternalSource","externalSource","getVariantIdentificationToken","variantIdentificationToken","createCountrySelector","getCountries","createCouponSelector","removeCouponError","applyCouponError","isApplyingCoupon","isRemovingCoupon","createCustomerSelector","isCreating","createAddressError","isCreatingAddress","createCustomerStrategySelector","getSignInError","getSignOutError","getWidgetInteractionError","createGiftCertificateSelector","getGiftCertificates","removeGiftCertificateError","applyGiftCertificateError","isApplyingGiftCertificate","isRemovingGiftCertificate","createInstrumentSelector","getInstrumentsByPaymentMethod","paymentMethodKey","currentMethod","getCardInstrument","cards","bigpayToken","isMatch","getInstruments","flatMap","supportedProvider","getDeleteError","createFormSelector","getShippingAddressFields","countries","selectedCountry","field","getBillingAddressFields","getCustomerAccountFields","customerAccount","processField","label","fieldType","itemtype","subdivisions","requiresState","hasPostalCodes","createFormSelectorFactory","createPaymentMethodSelector","getPaymentMethods","getPaymentMethodOrThrow","getLoadMethodError","createPaymentStrategySelector","getExecuteError","getFinalizeError","getWidgetInteractingError","createRemoteCheckoutSelector","createShippingAddressSelector","createShippingCountrySelector","getShippingCountries","createShippingStrategySelector","getUpdateAddressError","getSelectOptionError","createConsignmentSelector","getConsignmentById","addressA","addressB","getCreateError","getLoadShippingOptionsError","loadShippingOptionsError","getUnassignedItems","assignedLineItemIds","itemIds","getItemAssignmentError","getUpdateShippingOptionError","isLoadingShippingOptions","isAssigningItems","createConsignmentSelectorFactory","createCheckoutSelector","getCheckoutOrThrow","getOutstandingBalance","useStoreCredit","outstandingBalance","isExecutingSpamCheck","createOrderSelector","getOrderOrThrow","createPaymentSelector","internalPayment","redirectUrl","createStoreCreditSelector","applyError","createSubscriptionsSelector","createSignInEmailSelector","sendError","checkoutButton","customerStrategies","form","paymentStrategies","remoteCheckout","shippingCountries","shippingStrategies","signInEmail","selectors","shouldWarnMutation","createCheckoutStore","initialState","requestErrorFactory","factory","actionTransformer","action$","every","createInternalCheckoutSelectors","createDataStore","stateTransformer","CheckoutIncludes","PhysicalItemsCategoryNames","DigitalItemsCategoryNames","mapToInternalGiftCertificate","targetOrigin","_targetWindow","_targetOrigin","event","targetWindow","fromEvent","successType","errorType","take","postMessage","setTarget","sourceOrigin","_sourceOrigins","_isListening","_listeners","listen","addEventListener","_handleMessage","stopListen","removeEventListener","addListener","listener","listeners","removeListener","trigger","selectorDecorator","resolver","memoizedMethod","cachedValue","getUsedCount","cache","getKey","_checkoutButton","getInitializeButtonError","getDeinitializeButtonError","isInitializingButton","isDeinitializingButton","createCheckoutButtonSelectors","CheckoutButtonMethodType","C","_store","_buttonStrategyActionCreator","_state","filters","initializeButton","containerIds","selector","idPrefix","containers","querySelectorAll","container","u","uniqueId","queueId","dispatch","deinitializeButton","deinitialize","_registry","_paymentMethodActionCreator","AMAZON_PAY_V2","GOOGLEPAY_ADYENV2","GOOGLEPAY_AUTHORIZENET","GOOGLEPAY_BRAINTREE","GOOGLEPAY_CHECKOUTCOM","GOOGLEPAY_CYBERSOURCEV2","GOOGLEPAY_STRIPE","PAYPALEXPRESS","PAYPALCOMMERCE","_checkoutActionCreator","_amazonPayV2PaymentProcessor","amazonpay","_createSignInButton","_walletButton","parentNode","removeChild","getElementById","_getAmazonPayV2ButtonOptions","amazonButtonOptions","createButton","shopPath","merchantId","testMode","checkoutLanguage","ledgerCurrency","checkoutSessionMethod","extractAmazonCheckoutSessionId","createCheckoutSession","sandbox","productType","placement","_braintreeSDKCreator","_formPoster","_offerCredit","_renderButtonsData","paypalOptions","braintreepaypalcredit","_paymentMethod","storeState","shopperCurrency","paypalCheckoutInstance","renderButtons","FUNDING_SOURCES","fundingKey","FUNDING","skipCreditSource","allowCredit","toLowerCase","button","Buttons","env","fundingSource","commit","style","shape","createOrder","_setupPayment","onPaymentError","onApprove","_tokenizePayment","shouldProcessPayment","onAuthorizeError","isEligible","render","onError","createPayment","flow","enableShippingAddress","shippingAddressEditable","shippingAddressOverride","_mapToBraintreeAddress","offerCredit","tokenizePayment","postForm","payment_type","device_data","shipping_address","JSON","stringify","_mapToLegacyShippingAddress","billing_address","_mapToLegacyBillingAddress","details","recipientName","first_name","last_name","phone_number","address_line_1","line1","address_line_2","line2","country_code","postal_code","_googlePayPaymentProcessor","_methodId","_getMethodId","googlePayButton","_handleWalletButtonClick","appendChild","preventDefault","hasPhysicalItems","displayWallet","handleSuccess","updateShippingAddress","_onPaymentSelectComplete","_masterpassScriptLoader","masterpassScriptLoaderParams","useMasterpassSrc","isMasterpassSrcEnabled","language","storeLanguage","load","_masterpassClient","masterpass","_signInButton","buttonContainer","subdomain","src","_createMasterpassPayload","allowedCardTypes","cartAmount","cartId","_paypalScriptLoader","_host","clientId","allowedSources","disallowedSources","CREDIT","Button","funding","allowed","disallowed","actions","onAuthorize","_onError","paymentID","payerID","paymentId","payerId","payerInfo","payer","payer_info","_paypalCommercePaymentProcessor","buttonParams","onClick","_handleClickButtonProvider","paypalCommerce","messagingContainer","isMessagesAvailable","_getParamsScript","renderMessages","_isCredit","orderID","order_id","intent","isPayPalCreditAvailable","attributionId","disableFunding","components","createCheckoutButtonInitializer","host","requestSender","createRequestSender","formPoster","createFormPoster","registry","scriptLoader","getScriptLoader","checkoutActionCreator","paypalCommercePaymentProcessor","G","NotEmbeddableErrorType","_namespace","getItem","rawValue","withNamespace","parse","removeItem","getItemOnce","setItem","MissingContainer","MissingContent","UnknownError","_iframeCreator","_messageListener","_messagePoster","_loadingIndicator","_storage","_location","_options","_isAttached","onComplete","onLoad","onFrameLoad","onSignOut","_configureStyles","attach","show","_allowCookie","_attemptLogin","createFrame","_iframe","iframe","hide","_retryAllowCookie","detach","iFrameResizer","close","contentWindow","styles","now","encodeURIComponent","visibility","lastAttempt","Number","border","display","width","allowPaymentRequest","_toResizableFrame","timeoutInterval","setTimeout","handleMessage","contentId","iframes","scrolling","sizeWidth","heightCalculationMethod","clearTimeout","STORAGE_PREFIX","embedCheckout","loadingIndicator","handleFrameLoadedEvent","hasAttribute","setAttribute","isCustomError","_untargetedMessagePoster","_messageHandlers","postComplete","_postMessage","postError","_transformError","postFrameError","untargeted","postFrameLoaded","postLoaded","postSignedOut","receiveStyles","handler","_notifyMessageHandlers","createEmbeddedCheckoutMessenger","parentWindow","parentOrigin","isTerminalCacheKeyMap","_lastId","_map","maps","_usedMaps","maxSize","onExpire","noop","_resolveMap","parentMap","usedCount","_generateMap","_removeLeastUsedMap","isMatched","mapIndex","unshift","terminalMap","recentlyUsedMap","_removeMap","mapFromPaymentErrorResponse","SubscriptionsActionType","_configRequestSender","updateSubscriptions","_formFieldsRequestSender","loadFields","DEFAULT_PARAMS","createAddress","_factories","_instances","defaultToken","cacheToken","_getInstance","_hasFactory","_hasInstance","hasShippingAddress","_getGooglePayPaymentDataRequest","parseResponse","cardType","lastFour","currencyCode","gatewayMerchantId","merchantName","apiVersion","apiVersionMinor","merchantInfo","authJwt","allowedPaymentMethods","parameters","allowedAuthMethods","allowedCardNetworks","billingAddressRequired","billingAddressParameters","phoneNumberRequired","tokenizationSpecification","transactionInfo","totalPriceStatus","totalPrice","toFixed","emailRequired","shippingAddressRequired","shippingAddressParameters","sourceUrl","baseRequest","_getGooglePaymentDataRequest","btoa","supportedCards","paymentGatewaySpecification","_getPaymentGatewaySpecification","cardPaymentMethod","_getCardPaymentMethod","_googlePaymentInstance","googleBraintreePaymentInstance","_createGooglePayPayload","paymentMethodData","tokenizationData","androidPayCards","lastTwo","binData","platformToken","googlePayBraintreePaymentDataRequest","googleMerchantName","googleMerchantId","cardRequirements","billingAddressFormat","_mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2","createPaymentDataRequest","googlePayBraintreeDataRequestV1","paymentMethodTokenizationParameters","_publishableKey","_testMode","checkoutcomkey","_mapGooglePayCheckoutcomDataRequestToGooglePayDataRequestV2","signature","protocolVersion","signedMessage","_convertToken","cardNetwork","cardDetails","_requestCheckoutcomTokenize","token_data","checkoutcomToken","checkoutcomKey","credentials","Authorization","last4","stripeVersion","stripePublishableKey","stripeConnectedAccount","fieldErrors","scriptSrc","setupPayment","isCredit","isCheckout","isCreditCard","isAPM","getOrderStatus","DEFAULT_STYLES","size","color","backgroundColor","ROTATION_ANIMATION","_styles","_defineAnimation","_container","_buildContainer","_indicator","_buildIndicator","parentId","opacity","handleTransitionEnd","bottom","left","height","position","right","top","transition","indicator","borderRadius","borderColor","margin","transformStyle","animation","head","sheet","CSSStyleSheet","insertRule","iframeResizer","setupContentWindowForIframeResizer","clearError","getEnvironment","process","isEnabled","_console","log","_logToConsole","messages","debug","logger","getDefaultLogger","_couponRequestSender","applyCoupon","removeCoupon","couponCode","_giftCertificateRequestSender","applyGiftCertificate","removeGiftCertificate","giftCertificateCode","isSpamProtectionExecuteSucceededAction","succeededAction","_customerRequestSender","_spamProtectionActionCreator","createCustomer","isStorefrontSpamProtectionEnabled","checkoutSettings","createAccount","switchMap","customerAddress","signInCustomer","signOutCustomer","_strategyRegistry","signIn","signOut","widgetInteraction","loadWidget","onPaymentReady","region","_configureWidget","onLoginReady","amazon","Login","setClientId","setUseCookie","onAmazonLoginReady","OffAmazonPayments","onAmazonPaymentsReady","createInitOptions","settings","locale","collectShipping","paymentRequest","String","braintreeVisaCheckout","tokenize","tokenizedPayload","_toVisaCheckoutAddress","_postForm","cardInformation","userEmail","userData","card_information","_getCardInformation","_getAddress","phoneNumber","streetAddress","extendedAddress","locality","createBraintreeVisaCheckoutPaymentProcessor","braintreeScriptLoader","braintreeSDKCreator","V","JPMC","initializeBilling","methodName","initializeShipping","initializePayment","loadSettings","generateToken","trackAuthorizationEvent","_remoteCheckoutRequestSender","_googleRecaptcha","spamProtectionElementId","spamProtectionElement","recaptchaSitekey","googleRecaptchaSitekey","verifyCheckoutSpamProtection","validate","execute","callback","MutationObserver","googleRecaptchaScriptLoader","mutationObserverFactory","_memoized","recaptcha","sitekey","event$","_widgetId","getResponse","reset","_event$","_recaptcha","element","querySelector","retryWhen","delay","TIMEOUT","_watchRecaptchaChallengeWindow","iframeContainer","parentElement","observe","attributeFilter","_loadPromise","_loadScript","grecaptcha","createSpamProtection","MutationObserverFactory","_remoteCheckoutActionCreator","amazonOptions","useAmazonAddressBook","_handleAuthorization","authorize","popup","scope","tokenPrefix","signout","_customerStrategyActionCreator","_braintreeVisaCheckoutPaymentProcessor","_visaCheckoutScriptLoader","_buttonClassName","visaCheckoutOptions","initOptions","signInButton","init","paymentSuccessPayload","_paymentInstrumentSelected","buttonClass","_insertVisaCheckoutButton","visaCheckoutButton","flexDirection","className","innerHTML","_chasePayScriptLoader","chasePayOptions","digitalSessionId","ChasePay","configure","isChasePayUp","insertButtons","EventType","START_CHECKOUT","sessionId","startCheckout","COMPLETE_CHECKOUT","requestId","merchantRequestId","_setExternalCheckoutData","_reloadPage","sessionToken","sendRequest","fromChasePay","_customerActionCreator","googlePayOptions","_getGooglePayOptions","googlepayadyenv2","googlepayauthorizenet","googlepaybraintree","googlepaycheckoutcom","googlepaycybersourcev2","googlepaystripe","masterpassOptions","suppressShippingAddress","Masterpass","_countryRequestSender","loadCountries","_config","loadOrder","submitOrder","checkoutVariant","isNil","finalizeOrder","_orderRequestSender","_checkoutValidator","loadOrderPayments","loadCurrentOrder","_getCurrentOrderId","shouldExecuteSpamCheck","_mapToOrderRequestBody","customerMessage","_orderActionCreator","strategy","getByMethod","finalize","_loadOrderPaymentsIfNeeded","cartA","cartB","_normalize","sort","itemA","itemB","localeCompare","giftWrapping","previous","updated","comparator","_compareCoupons","_compareGiftCertificates","_getComparableCheckout","couponsA","couponsB","giftCertificatesA","giftCertificatesB","promise","cancellable","cancel","race","_mutationObserver","ensurePresence","targets","mutationsList","mutation","removedNodes","node","contains","childList","subtree","disconnect","handle","_isPaymentHumanVerificationRequest","_initialize","additional_action_required","human_verification_token","cardingProtectionElement","_type","_containerId","_placeholder","_accessibilityLabel","_eventPoster","_eventListener","_detachmentObserver","_cardInstrument","overflow","getType","accessibilityLabel","cardInstrument","fontUrls","_getFontUrls","placeholder","submitForm","fields","_isSubmitErrorEvent","validateForm","isValid","links","fontFamily","family","_fields","_payloadTransformer","_eventCallbacks","_paymentHumanVerificationHandler","_handleEnter","onBlur","onCardTypeChange","onFocus","onValidate","_cardType","_bin","bin","getBin","getCardType","_getFirstField","otherFields","without","submit","fieldOptions","_getCardInstrument","createScriptLoader","_storeCreditRequestSender","applyStoreCredit","removeStoreCredit","_paymentRequestSender","_paymentRequestTransformer","shouldSaveInstrument","shouldSetAsDefaultInstrument","vault_payment_instrument","set_as_default_stored_instrument","checkoutcomStrategies","credit_card","sepa","ideal","fawry","_getToken","features","_hasFactoryForMethod","_isLegacyMethod","paymentSettings","clientSidePaymentProviders","getBrowserInfo","color_depth","screen","colorDepth","java_enabled","navigator","javaEnabled","userLanguage","screen_height","screen_width","time_zone_offset","getTimezoneOffset","AdyenActionType","AdyenComponentType","AdyenPaymentMethodType","HTTPMethod","ResultCode","invalidFields","isCardState","encryptedSecurityCode","encryptedExpiryMonth","ThreeDS2Fingerprint","ThreeDS2Challenge","Redirect","QRCode","Voucher","SecuredFields","ACH","AliPay","Bancontact","CreditCard","Klarna","KlarnaPayNow","KlarnaAccount","iDEAL","GiroPay","GooglePay","SEPA","Sofort","Vipps","WeChatPayQR","POST","ChallengeShopper","IdentifyShopper","OrderIncludes","_paymentActionCreator","adyenv2","_paymentInitializeOptions","clientSideAuthentication","originKey","clientKey","environment","paymentMethodsResponse","_adyenClient","_mountPaymentComponent","_paymentComponent","_mountCardVerificationComponent","_cardVerificationComponent","componentState","_componentState","encryptedCardNumber","credit_card_number_confirmation","expiry_month","expiry_year","verification_value","browser_info","credit_card_token","_processAdditionalAction","unmount","_getAdyenClient","_getPaymentInitializeOptions","_getThreeDS2ChallengeWidgetSize","threeDS2Options","_handleAction","threeDS2ContainerId","additionalActionOptions","onBeforeLoad","adyenAction","additionalActionComponent","createFromAction","onAdditionalDetails","additionalActionState","paymentPayload","paymentMethodType","mount","_mapAdyenPlaceholderData","holderName","street","houseNumberOrName","cardVerificationComponent","adyenClient","cardVerificationContainerId","onChange","_updateComponentState","paymentComponent","hasVaultedInstruments","provider_data","_stylesheetLoader","configuration","loadStylesheet","AdyenCheckout","DigitalItemsCategories","PhysicalItemsCategories","_affirmScriptLoader","publicKey","_affirm","affirm","requestOptions","_getCheckoutInformation","open","onFail","failObject","reason","onSuccess","successObject","ui","checkout_token","_getBillingAddress","merchant","user_confirmation_url","checkoutLink","user_cancel_url","user_confirmation_url_action","_getShippingAddress","_getItems","metadata","shipping_type","_getShippingType","platform_type","platform_version","platform_affirm","discounts","_getDiscounts","shipping_amount","tax_amount","total","first","full","zipcode","display_name","unit_price","qty","item_image_url","item_url","categories","_getCategories","line","discount_amount","discount_display_name","DISCOUNTED_AMOUNT","apikey","scriptURI","_getScriptURI","g","h","k","getElementsByTagName","f","a1","c1","a2","c2","insertBefore","public_api_key","script","_storeCreditActionCreator","_afterpayScriptLoader","storeCountryName","storeCountry","_mapCountryToISO2","_afterpaySdk","_redirectToAfterpay","countryName","redirect","AfterPay","isInternalAddressEqual","ignoredKeys","mapFromInternalAddress","BoltDeveloperMode","_billingAddressActionCreator","_isPaymentMethodSelected","_walletOptions","_createWallet","referenceId","_getOrderReferenceId","sellerId","_getMerchantId","is3dsEnabled","_processPaymentWith3ds","_getOrderReferenceIdFromInitializationData","orderReferenceId","walletOptions","amazonOrderReferenceId","design","designMode","onPaymentSelect","_synchronizeBillingAddress","orderReference","onReady","_updateOrderReference","widget","Widgets","Wallet","remoteAddress","internalBillingAddress","getAmazonOrderReferenceId","initConfirmationFlow","confirmationFlow","success","_paymentStrategyActionCreator","paymentToken","buttonId","editButtonId","_bindEditButton","orderRequest","redirect_url","click","changeAction","clone","cloneNode","replaceChild","_showLoadingSpinner","bindButton","_createContainer","_hostedFormFactory","_isHostedPaymentFormEnabled","_shouldRenderHostedForm","_executeWithHostedForm","_executeWithoutHostedForm","_isHostedFieldAvailable","formOptions","creditCard","_hostedForm","isHostedFormEnabled","orderActionCreator","paymentActionCreator","hostedFormFactory","_threeDSecureFlow","prepare","start","_initializeOptions","frame","_createIframe","_boltScriptLoader","_useBoltClient","useBigCommerceCheckout","publishableKey","developerConfig","_boltClient","_executeWithBoltClient","_executeWithBoltCheckout","boltClient","callbacks","transaction","reference","SandboxMode","StagingMode","DevelopmentMode","BraintreeFormFieldType","developerModeParams","getDomainURL","BoltCheckout","developerMode","developerDomain","_createElements","closeElement","mainElement","_element","_closeElement","_mainElement","_registerClick","_unregisterClick","_removeAfterTransition","classLayout","classClose","classOverlayText","background","transitionDuration","hasCloseButton","innerHtml","overlayText","addClassLayout","innerText","_addEventListener","_removeEventListener","handleTransition","propertyName","CardCode","CardCodeVerification","CardExpiry","CardName","CardNumber","CardNumberVerification","BraintreeHostedFormType","_handleBlur","_applyStyles","_handleFocus","focus","_input","outline","padding","getValue","off","isBraintreeFormFieldsMap","StoredCardVerification","CardinalInitializationType","CardinalEventType","CardinalValidatedAction","CardinalPaymentType","CardinalTriggerEvents","CardinalPaymentBrand","CardinalSignatureVerification","_formOptions","_mapFieldType","emittedBy","_handleNameBlur","_handleNameFocus","_handleCardTypeChange","_handleInputSubmitRequest","onEnter","_handleValidityChange","_mapValidationErrors","_mapFieldOptions","isEmpty","_mapStyleOptions","_cardFields","_cardNameField","_mapBillingAddress","cardholderName","_mapTokenizeError","tokenizeForStoredCardVerification","expirationDate","cvv","mapStyles","fontSize","fontWeight","input","fieldKey","_createInvalidError","_createRequiredError","invalidFieldKeys","_braintreeHostedForm","_overlay","_threeDSecureOptions","preloadPaypal","tokenizeCard","requestData","_mapToCreditCard","verifyCard","_present3DSChallenge","newWindowFlow","supportsPopups","focusWindow","useraction","getSessionId","appendSessionId","processedPayment","initializeHostedForm","deinitializeHostedForm","tokenizeHostedForm","tokenizeHostedFormForStoredCardVerification","verifyCardWithHostedForm","addFrame","removeFrame","cancelVerifyCard","verification","onLookupComplete","_data","countryCodeAlpha2","endpoint","_braintreePaymentProcessor","_isHostedFormInitialized","_is3dsEnabled","_deviceSessionId","_handleError","_prepareHostedPaymentData","_preparePaymentData","commonPaymentData","_isSubmittingWithStoredCard","_isStoringNewCard","_shouldPerform3DSVerification","_mapToNonceInstrument","_mapToVaultedInstrumentWithNonceVerification","_credit","braintreeOptions","_loadPaypal","isVaultingEnabled","_formattedPayload","vaultPaymentInstrument","device_info","paypal_account","visaInitOptions","_cardinalClient","hostedForm","xid","three_ds_result","payer_auth_request","_getBin","runBinProcess","_submitPayment","threeDsResult","getThreeDSecureData","_getOrderData","iin","CardinalSignatureValidationErrors","Init","Complete","Confirm","SetupCompleted","Success","NoAction","Failure","CCA","Paypal","VisaCheckout","ApplePay","DiscoverWallet","BinProcess","Yes","No","ChasePayEventType","_provider","_configurationToken","_sdk","_getClientSDK","ActionCode","ErrorNumber","ErrorDescription","setup","jwt","binNumber","Status","threeDSecureData","orderData","Payment","ExtendedData","SignatureVerification","continueObject","AcsUrl","acs_url","Payload","merchant_data","partialOrder","_mapToPartialOrder","continue","transactionId","consumer","BillingAddress","_mapToCardinalAddress","Account","_mapToCardinalAccount","Email1","ShippingAddress","Consumer","OrderDetails","OrderNumber","Amount","CurrencyCode","OrderChannel","TransactionId","AccountNumber","ExpirationMonth","ExpirationYear","NameOnAccount","cardinalAddress","FirstName","LastName","Address1","City","State","PostalCode","CountryCode","Address2","Phone1","Cardinal","_getClientToken","StartCheckout","CompleteCheckout","CancelCheckout","AdditionalActionType","_wepayRiskClient","_walletEvent$","chasepay","walletButton","_configureWallet","_chasePayClient","_getPayment","_displayWallet","_createOrder","logoContainer","insertBrandings","onCancel","_setSessionToken","showLoadingAnimation","getRiskToken","paymentCryptogram","cryptogramId","eci","reqTokenId","expDate","substr","accountNum","accountMask","extraData","riskToken","OffsiteRedirect","MolliePaymentMethodType","_processResponse","additionalActionRequired","_performRedirect","DOCUMENT_SUPPORTED_APMS","_createFormattedPayload","ccDocument","iban","bic","customerMobile","customerEmail","_clearpayScriptLoader","_clearpaySdk","_isCountrySupported","_redirectToClearpay","_getScriptUrl","PaReq","TermUrl","callback_url","MD","_digitalRiverScriptLoader","_digitalRiverInitializeOptions","digitalriver","_getDigitalRiverInitializeOptions","_digitalRiverJS","_loadWidget","_loadSuccessResponse","_digitalRiverCheckoutData","_getDigitalRiverJs","_getErrorMessage","_onSuccessResponse","_submitFormEvent","browserInfo","reusable","readyForStorage","_onReadyResponse","onRenderButton","paymentMethodConfiguration","onSubmitForm","digitalRiverConfiguration","descriptiveError","createDropin","_digitalRiverDropComponent","DigitalRiver","_isAdditionalActionRequired","_googlePayAdyenV2PaymentProcessor","_googlePayOptions","_buttonClickEventHandler","_handleButtlonClickedEvent","processAdditionalAction","_getNonce","googlePayToken","statusCode","supportedCountries","supportedCountriesRequiringStates","_klarnaScriptLoader","_klarnaCredit","klarnaCredit","_authorize","authorizationToken","klarna","client_token","_getUpdateSessionData","_mapToKlarnaAddress","_needsStateCode","klarnaAddress","street_address","given_name","family_name","street_address2","updateSessionData","res","approved","show_form","Credit","_klarnav2ScriptLoader","_klarnaPayments","klarnaPayments","_loadPaymentsWidget","klarnav2","_updateOrder","payment_method_category","Payments","creditcard","PaypalCommerceFormFieldType","PaypalCommerceHostedFormType","_mollieScriptLoader","mollie","_loadMollieJs","_mollieClient","_mountElements","_getMollieClient","createToken","issuer","removeMollieComponents","mollieComponents","each","controllers","_getInitializeOptions","testmode","cardNumberId","cardCvcId","cardExpiryId","cardHolderId","mollieClient","_cardHolderElement","createComponent","_cardNumberElement","_verificationCodeElement","_expiryDateElement","_isMollieWindow","Mollie","orderPayload","_shouldSubmitFullPayload","_useRedirectFlow","paypalexpress","useRedirectFlow","_isInContextEnabled","_paypalSdk","closeFlow","_isAcknowledgedOrFinalized","initXO","startFlow","_paypalCommerceHostedForm","paypalcommerce","_isPaypalCommerceOptionsPayments","paramsScript","_getOptionsScript","CardBrand","DigitalWalletType","_isPaypalCommerceFormFieldsMap","events","blur","cardTypeChange","validityChange","inputSubmitRequest","renderHostedFields","contingencies","submitHostedFields","liabilityShift","getHostedFieldsValidationState","updatedStyles","kebabCase","_paypalCommerceFundingKeyResolver","_paypalCommerceRequestSender","_pollingInterval","_pollingTimer","buttonStyle","_isAPM","_orderId","apmFieldsContainer","apmFieldsStyles","loadingIndicatorContainerId","_deinitializePollingTimer","_initializePollingMechanism","renderFields","paramsForProvider","method_id","getOrderId","_reinitializeButtons","apmMehodId","buyerCountry","isDeveloperModeApplicable","_payload","americanExpress","discover","discoverDiners","JCB","masterCard","unionPay","unknown","visa","squareGift","applePay","none","IconStyle","StripeElementType","StripePaymentMethodType","_syncPaymentMethod","_paymentForm","createSquareForm","_getFormOptions","build","_getNonceInstrument","_getCountryCode","toUpperCase","_deferredRequestNonce","requestCardNonce","deferred","squareOptions","_squareOptions","cardNonceResponseReceived","cardData","billingContact","shippingContact","digital_wallet_type","_handleWalletNonceResponse","_handleCardNonceResponse","createPaymentRequest","_paymentRequestPayload","methodsSupported","_showPaymentMethods","methods","paymentFormLoaded","_setPostalCode","unsupportedBrowserDetected","requestShippingAddress","requestBillingInfo","storeName","pending","setPostalCode","masterpassBtn","elementId","SqPaymentForm","isIndividualCardElementOptions","individualCardElementOptions","cardNumberElementOptions","cardCvcElementOptions","cardExpiryElementOptions","Solid","Alipay","CardCvc","Sepa","APM_REDIRECT","_stripeScriptLoader","_locale","useIndividualCardFields","_useIndividualCardFields","_loadStripeJs","_stripeV3Client","_mountElement","_stripeElement","shouldSubmitOrderBeforeLoadingAPM","confirm","_confirmStripePayment","paymentIntent","stripeError","_buildPaymentPayload","_handleEmptyPaymentIntentError","_unmountElement","isAdditionalActionError","isThreeDSecureRequiredError","clientSecret","_getStripeJs","handleCardAction","confirmAlipayPayment","return_url","handleActions","_getStripeCardElements","_getStripeElement","billingDetails","_mapStripeBillingDetails","createPaymentMethod","billing_details","_mapStripePaymentData","confirmIdealPayment","confirmSepaDebitPayment","_getStripeInitializeOptions","stripev3","_stripeCardElements","stripeElement","stripeElementType","_stripeElements","elements","cardNumberElement","getElement","cardExpiryElement","cardCvcElement","_mapStripeAddress","trim","zipCodeElementOptions","arg2","payment_method","_mapStripeShippingAddress","setup_future_usage","stripeAccount","Stripe","betas","_riskClient","WePay","risk","generate_risk_token","get_risk_token","payloadWithToken","_zipScriptLoader","zip","_zipClient","zipClient","_redirectFlowIsTrue","_prepareForReferredRegistration","deferredFlowV2Enabled","onCheckout","openModal","redirectFlowV2Enabled","externalId","Zip","ProjectionActionType","_instrumentRequestSender","loadInstruments","session","_getSessionContext","_getCurrentAccessToken","_getValidAccessToken","currentToken","deleteInstrument","_isValidVaultAccessToken","date","valueOf","vaultAccessExpiry","newDate","setMinutes","getMinutes","getVaultAccessToken","storeId","isTransactional","transformResponse","_transformVaultedInstruments","vaulted_instruments","transformErrorResponse","transformVaultAccessResponse","expires_at","_isPayPalInstrument","defaultInstrument","default_instrument","external_id","trustedShippingAddress","trusted_shipping_address","_isBankInstrument","accountNumber","account_number","last_4","expiryMonth","expiryYear","method_type","_transformer","requestContext","_loadInstrumentsWithAddress","_loadInstruments","deleteShopperInstrument","loadInstrumentsWithAddress","_shippingCountryRequestSender","selectOption","mergedOptions","_consignmentActionCreator","_createAddressBook","updateAddressRequestBody","optionId","AddressBook","onAddressSelect","_synchronizeShippingAddress","_shippingStrategyActionCreator","editAddressButtonId","sendSignInEmail","emailRequest","Si","Synchronize","cloneDeep","cloneDeepSafe","cloneResult","createShallowEqualSelector","createSelectorCreator","defaultMemoize","createCheckoutSelectorsFactory","getShippingOptions","getSelectedShippingOption","getBillingCountries","getSelectedPaymentMethod","getSignInEmail","getError","getSelectShippingOptionError","isPending","isSelectingShippingOption","isCustomerStepPending","isShippingStepPending","isPaymentStepPending","isSubmittingOrder","createCheckoutStoreSelector","availableShippingOptions","val","createCheckoutStoreErrorSelector","getLoadCheckoutError","getUpdateCheckoutError","getSubmitOrderError","getFinalizeOrderError","getLoadOrderError","getLoadCartError","getLoadBillingCountriesError","getLoadShippingCountriesError","getLoadPaymentMethodsError","getLoadPaymentMethodError","getInitializePaymentError","getInitializeCustomerError","getUpdateBillingAddressError","getUpdateSubscriptionsError","getUpdateShippingAddressError","getDeleteConsignmentError","getUpdateConsignmentError","getCreateConsignmentsError","getInitializeShippingError","getApplyStoreCreditError","getApplyCouponError","getRemoveCouponError","getApplyGiftCertificateError","getRemoveGiftCertificateError","getLoadInstrumentsError","getDeleteInstrumentError","getLoadConfigError","getSignInEmailError","getCreateCustomerAccountError","getCreateCustomerAddressError","createCheckoutStoreStatusSelector","isLoadingCheckout","isUpdatingCheckout","isFinalizingOrder","isLoadingOrder","isLoadingCart","isLoadingBillingCountries","isLoadingShippingCountries","isLoadingPaymentMethods","isLoadingPaymentMethod","isInitializingPayment","isInitializingCustomer","isUpdatingBillingAddress","isUpdatingSubscriptions","isUpdatingShippingAddress","isUpdatingConsignment","isDeletingConsignment","isCreatingConsignments","isInitializingShipping","isApplyingStoreCredit","isLoadingInstruments","isDeletingInstrument","isLoadingConfig","isSendingSignInEmail","_messageCustomizer","_countryActionCreator","_couponActionCreator","_errorActionCreator","_giftCertificateActionCreator","_instrumentActionCreator","_shippingCountryActionCreator","_signInEmailActionCreator","_subscriptionsActionCreator","isDevelopment","projection","_errorTransformer","_selectorsFactory","_storeProjection","initial","notifyState","_dispatch","loadCheckoutAction","formFieldsAction","loadConfigAction","finalizeOrderIfNeeded","deinitializePayment","loadBillingCountries","loadShippingCountries","loadBillingAddressFields","loadShippingAddressFields","initializeCustomer","deinitializeCustomer","signInEmailRequest","createCustomerAccount","createCustomerAddress","continueAsGuest","deinitializeShipping","assignItemsToAddress","unassignItemsToAddress","selectConsignmentShippingOption","updateBillingAddress","initializeSpamProtection","executeSpamCheck","createCheckoutService","checkoutVariantIdentificationToken","paymentClient","setHost","bigpayBaseUrl","orderRequestSender","checkoutRequestSender","configActionCreator","spamProtection","spamProtectionRequestSender","spamProtectionActionCreator","subscriptionsActionCreator","formFieldsActionCreator","paymentMethodActionCreator","remoteCheckoutRequestSender","remoteCheckoutActionCreator","paymentRequestTransformer","paymentRequestSender","billingAddressActionCreator","braintreePaymentProcessor","braintreeHostedForm","overlay","checkoutValidator","storeCreditActionCreator","paymentHumanVerificationHandler","paymentStrategyActionCreator","getStylesheetLoader","PPSDKStrategy","createPaymentStrategyRegistry","consignmentRequestSender","consignmentActionCreator","_logger","_transformConfig","locales","translations","_locales","_translations","_formatters","mapKeys","translationKey","KEY_PREFIX","getLocale","_hasTranslations","translate","prefixedKey","messageFormat","compile","_transformData","defaultTranslations","_flattenObject","union","parentKey","resultKey","createLanguageService","currencySettings","symbolLocation","symbol","thousandsSeparator","decimalSeparator","parseInt","_symbolLocation","_symbol","_thousandsSeparator","_decimalSeparator","formattedNumber","_formatNumber","formattedCurrency","_formatCurrency","positiveAmount","abs","_toFixed","parsedIntegerAmount","decimalAmount","precision","_storeConfig","_customerFormatter","_storeFormatter","toCustomerCurrency","exchangeRate","toStoreCurrency","createCurrencyService","AnalyticStepId","CUSTOMER","SHIPPING","BILLING","PAYMENT","ANALYTIC_STEPS","checkoutService","storage","analytics","checkoutSteps","_checkoutStarted","_completedSteps","_viewedSteps","_analyticStepOrder","trackCheckoutStarted","extraItemsData","saveExtraItemsData","track","getTrackingPayload","revenue","tax","trackOrderComplete","readExtraItemsData","isEcommerceGAEnabled","hasPayloadLimit","hit","affiliation","products","product","category","clearExtraItemData","trackStepViewed","stepId","getIdFromStep","hasStepViewed","trackViewed","backfill","trackStepCompleted","hasStepCompleted","trackCompleted","shippingMethod","getShopperCurrency","getPaymentMethodName","shippingMethodId","completedStepId","getStoreProfile","toShopperCurrency","getProducts","getStorageKey","ORDER_ITEMS_STORAGE_KEY","itemsData","product_id","giftCertificateItems","physicalAndDigitalItems","itemAttributes","image_url","variant","createStepTracker","stepTrackerConfig","StyleButtonLabel","StyleButtonLayout","StyleButtonColor","StyleButtonShape","loadPaypalCommerce","isProgressiveOnboardingAvailable","_validateParams","paypalLoadScript","buynow","pay","installment","vertical","horizontal","gold","blue","silver","black","white","pill","rect","_validateStyleParams","updatedStyle","layout","tagline","_gatewayId","optionalParams","_fundingSource","_paypalButtons","_processNotEligible","Fields","fieldsParams","_paypalFields","fieldContainerElement","cartTotal","Messages","_paypalMessages","HostedFields","paymentsSDK","_hostedFields","PAYLATER","createPaypalCommercePaymentProcessor","paypalScriptLoader","paypalCommerceRequestSender","_amazonPayV2ScriptLoader","_amazonPayV2SDK","_getAmazonPayV2SDK","Pay","bindChangeAction","amazonCheckoutSessionId","renderButton","amazonPayV2Region","createAmazonPayV2PaymentProcessor","_googlePayScriptLoader","_googlePayInitializer","buttonType","buttonColor","_googlePayClient","loadPaymentData","_getPaymentDataRequest","tokenizePayload","_updateBillingAddress","_mapGooglePayAddressToShippingAddress","googlePay","paymentDataRequest","_getGooglePayClient","_paymentDataRequest","isReadyToPay","google","api","PaymentsClient","_mapGooglePayAddressToBillingAddress","companyName","address3","administrativeArea","postPaymentData","remoteBillingAddress","googlePayAddressMapped","createGooglePayPaymentProcessor","initializer","_subscriptionsRequestSender","_subscriptionActionCreator","billingAddressRequestBody","existingBillingAddressRequestBody","_createOrUpdateBillingAddress","_updateCustomerConsent","acceptsAbandonedCartEmails","acceptsMarketingNewsletter","getShippableItemsCount","scheduler","schedule","emptyScheduled","scheduled","innerIndex","innerSub","OuterSubscriber","outerSubscriber","InnerSubscriber","FilterOperator","FilterSubscriber","subjectOrSubjectFactory","subjectFactory","MulticastOperator","connectable","connectableObservableDescriptor","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__spreadArrays","__await","__asyncGenerator","__asyncDelegator","__asyncValues","__makeTemplateObject","__importStar","__importDefault","__classPrivateFieldGet","__classPrivateFieldSet","__createBinding","root","global","self","createExporter","v","exporter","extendStatics","__","constructor","assign","getOwnPropertySymbols","propertyIsEnumerable","decorators","desc","Reflect","decorate","paramIndex","decorator","metadataKey","metadataValue","_arguments","P","generator","fulfilled","rejected","done","apply","y","sent","trys","ops","verb","iterator","op","k2","ar","il","j","jl","asyncIterator","q","resume","fulfill","settle","shift","cooked","raw","mod","receiver","privateMap","has","work","recycleAsyncId","requestAsyncId","setInterval","flush","clearInterval","_execute","errored","errorValue","Action","SchedulerAction","Scheduler","delegate","active","scheduleArray","subscribeToArray","ArgumentOutOfRangeErrorImpl","ArgumentOutOfRangeError","EmptyErrorImpl","EmptyError","getSymbolIterator","$$iterator","defaultValue","DefaultIfEmptyOperator","DefaultIfEmptySubscriber","_enable_super_gross_mode_that_will_cause_bad_things","ObjectUnsubscribedErrorImpl","NotificationKind","kind","hasValue","do","accept","nextOrObserver","toObservable","createNext","Notification","undefinedValueNotification","createComplete","completeNotification","isScheduler","fromArray","hasNext","hasCompleted","AsyncSubject","subscribeToObservable","isArrayLike","isPromise","subscribeToPromise","subscribeToIterable","concatAll","observables","mergeMap","resultSelector","concurrent","POSITIVE_INFINITY","ii","MergeMapOperator","MergeMapSubscriber","buffer","_tryNext","ish","innerSubscription","innerSubscribe","parseFloat","ThrowIfEmptyOperator","ThrowIfEmptySubscriber","defaultErrorFactory","accumulator","seed","scan","takeLast","defaultIfEmpty","acc","random","$$rxSubscriber","fns","prev","RefCountOperator","_refCount","refCounter","RefCountSubscriber","connection","connect","refCount","sharedConnection","_connection","bufferSize","windowTime","_events","_infiniteTimeWindow","_bufferSize","_windowTime","nextInfiniteTimeWindow","nextTimeWindow","ReplayEvent","_getNow","_trimBufferThenGetEvents","ObserveOnSubscriber","queue","eventsCount","spliceCount","time","ReplaySubject","NONE","CombineLatestOperator","CombineLatestSubscriber","toRespond","subscribeToResult","unused","oldVal","_tryResultSelector","observableFactory","ZipOperator","ZipSubscriber","iterators","StaticArrayIterator","StaticIterator","ZipBufferIterator","stillUnsubscribed","notifyInactive","checkIterators","shouldComplete","_tryresultSelector","nextResult","TakeOperator","TakeSubscriber","TakeLastOperator","TakeLastSubscriber","ring","idx","hasSeed","ScanOperator","ScanSubscriber","_seed","SwitchMapOperator","SwitchMapSubscriber","_delay","_resolve","_promise","_timeoutToken","predicateFn","PaymentMethodIdMapper","MULTI_OPTION","BRAINTREE_VISACHECKOUT","BRAINTREE_GOOGLEPAY","isBraintreePaymentMethod","PAYPAL_COMMERCE_CREDIT_CARDS","isPaypalCommercePaymentMethod","UrlHelper","RequestSender","RequestFactory","PayloadTransformer","DEFAULT_OPTIONS","xhr","requestFactory","createRequest","payloadTransformer","toRequest","_reducer","equalityCheck","shallowEqual","_state$","BehaviorSubject","_notification$","_dispatchers","_dispatchQueue$","_errors","dispatcher$","concatMap","states","_transformStates","transformedState","distinctUntilChanged","stateA","stateB","_dispatchObservableAction","_dispatchThunkAction","_dispatchAction","state$","filterFn","skip","newState","previousValue","_getDispatchError","error$","transformedAction$","_getDispatcher","tap","thunkAction","isFrozen","freeze","reducers","currentState","UnsubscriptionErrorImpl","connectableProto","_isComplete","getSubject","_subject","ConnectableSubscriber","ConnectableObservable","writable","subscriberIndex","keySelector","elementSelector","durationSelector","subjectSelector","GroupByOperator","GroupBySubscriber","groups","attemptedToUnsubscribe","_group","Map","group","groupedObservable","GroupedObservable","duration","GroupDurationSubscriber","clear","removeGroup","groupSubject","refCountSubscription","InnerRefCountSubscription","_value","queueScheduler","QueueScheduler","QueueAction","ObserveOnOperator","arg","notification","scheduleMessage","ObserveOnMessage","asapScheduler","AsapScheduler","AsapAction","asap","TimeoutErrorImpl","TimeoutError","mergeAll","isInteropObservable","scheduleObservable","schedulePromise","isIterable","scheduleIterable","NEVER","pred","notPred","RaceOperator","RaceSubscriber","hasFirst","period","dueTime","periodOrScheduler","isNumeric","due","AuditOperator","AuditSubscriber","throttled","clearThrottle","isNaN","compare","DistinctUntilChangedOperator","DistinctUntilChangedSubscriber","hasKey","FindValueOperator","yieldIndex","FindValueSubscriber","defaultThrottleConfig","leading","trailing","ThrottleOperator","ThrottleSubscriber","_leading","_trailing","_hasValue","_sendValue","_throttled","send","throttle","tryDurationSelector","throttlingDone","withObservable","absoluteTimeout","isDate","waitFor","TimeoutWithOperator","TimeoutWithSubscriber","scheduleTimeout","dispatchTimeout","_browserSupport","_scripts","_preloadedScripts","onload","onreadystatechange","onerror","loadScripts","urls","preloadScript","prefetch","rel","canSupportRel","preloadedScript","as","preloadScripts","strictUriEncode","objectAssign","decodeComponent","encode","opts","strict","extract","str","queryStart","formatter","arrayFormat","exec","parserForArrayFormat","ret","parts","keysSorter","obj","encoderForArrayFormat","val2","query","_requestFactory","_cookie","_cache","DefaultCache","_mergeDefaultOptions","cachedRequest","_getCachedRequest","_prependHost","requestHandler","toResponse","_cacheRequest","onabort","ontimeout","toRequestBody","patch","defaultOptions","encodeParams","csrfToken","_isAssetRequest","_shouldCacheRequest","read","write","relList","supports","_stylesheets","_preloadedStylesheets","stylesheet","prepend","children","loadStylesheets","preloadStylesheet","preloadedStylesheet","preloadStylesheets","_formBuilder","handleUnload","isAbsoluteUrl","joinPaths","flowRight","curryRight","animationFrame","animationFrameScheduler","VirtualTimeScheduler","VirtualAction","isObservable","bindCallback","bindNodeCallback","combineLatest","forkJoin","fromEventPattern","generate","iif","interval","never","onErrorResumeNext","pairs","partition","range","timer","using","Immediate","setImmediate","clearImmediate","nextHandle","RESOLVED","activeHandles","findAndClearHandle","cb","TestTools","AnimationFrameScheduler","AnimationFrameAction","requestAnimationFrame","cancelAnimationFrame","maxFrames","frameTimeFactor","sortActions","callbackFunc","innerArgs","dispatchNext","dispatchError","iterable","return","obs","forkJoinInternal","sources","completed","emitted","eventName","setupSubscription","sourceObj","isEventTarget","isJQueryStyleEventEmitter","isNodeStyleEventEmitter","addHandler","removeHandler","retValue","condition","needIterate","iterate","conditionResult","initialStateOrOptions","resultSelectorOrObservable","trueResult","falseResult","counter","subNext","remainder","not","current","resourceFactory","resource","memoized","isRootCacheKeyMap","audit","auditTime","bufferCount","bufferTime","bufferToggle","bufferWhen","combineAll","concatMapTo","debounce","debounceTime","delayWhen","dematerialize","distinct","distinctUntilKeyChanged","elementAt","endWith","exhaust","exhaustMap","expand","groupBy","ignoreElements","mapTo","materialize","mergeMapTo","mergeScan","min","multicast","observeOn","pairwise","pluck","publish","publishBehavior","publishLast","publishReplay","repeat","repeatWhen","retry","sample","sampleTime","sequenceEqual","share","single","skipLast","skipUntil","skipWhile","startWith","subscribeOn","switchAll","switchMapTo","takeUntil","takeWhile","throttleTime","throwIfEmpty","timeInterval","timeoutWith","timestamp","toArray","windowCount","windowToggle","windowWhen","withLatestFrom","zipAll","closingNotifier","BufferOperator","BufferSubscriber","startBufferEvery","BufferCountOperator","subscriberClass","BufferSkipCountSubscriber","BufferCountSubscriber","buffers","bufferTimeSpan","bufferCreationInterval","maxBufferSize","BufferTimeOperator","BufferTimeSubscriber","contexts","openContext","timespanOnly","timeSpanOnlyState","closeAction","dispatchBufferTimeSpanOnly","closeState","creationState","dispatchBufferClose","dispatchBufferCreation","filledBufferContext","onBufferFull","closeContext","Context","prevContext","openings","closingSelector","BufferToggleOperator","BufferToggleSubscriber","closeBuffer","openBuffer","trySubscribe","BufferWhenOperator","BufferWhenSubscriber","subscribing","closingSubscription","CatchOperator","caught","CatchSubscriber","err2","innerObservable","CountOperator","CountSubscriber","_tryPredicate","DebounceOperator","DebounceSubscriber","emitValue","durationSubscription","DebounceTimeOperator","DebounceTimeSubscriber","debouncedSubscription","lastValue","clearDebounce","debouncedNext","delayFor","DelayOperator","DelaySubscriber","_schedule","scheduleNotification","DelayMessage","delayDurationSelector","subscriptionDelay","SubscriptionDelayObservable","DelayWhenOperator","DelayWhenSubscriber","delayNotifierSubscriptions","_innerValue","_innerIndex","removeSubscription","tryComplete","delayNotifier","tryDelay","subscriptionIdx","notifierSubscription","SubscriptionDelaySubscriber","sourceSubscribed","subscribeToSource","DeMaterializeOperator","DeMaterializeSubscriber","flushes","DistinctOperator","DistinctSubscriber","Set","_useKeySelector","_finalizeNext","hasDefaultValue","EveryOperator","EverySubscriber","everyValueMatch","SwitchFirstSubscriber","hasSubscription","ExhaustMapOperator","ExhaustMapSubscriber","tryNext","ExpandOperator","ExpandSubscriber","subscribeToProjection","FinallyOperator","FinallySubscriber","IgnoreElementsOperator","IgnoreElementsSubscriber","IsEmptySubscriber","MapToOperator","MapToSubscriber","MaterializeOperator","MaterializeSubscriber","comparer","MergeScanOperator","MergeScanSubscriber","nextSources","OnErrorResumeNextOperator","OnErrorResumeNextSubscriber","subscribeToNextSource","PairwiseSubscriber","hasPrev","pair","properties","props","currentProp","plucker","selectorOrScheduler","RepeatOperator","RepeatSubscriber","notifier","RepeatWhenOperator","RepeatWhenSubscriber","sourceIsBeingSubscribedTo","retries","subscribeToRetries","retriesSubscription","RetryOperator","RetrySubscriber","RetryWhenOperator","RetryWhenSubscriber","SampleOperator","sampleSubscriber","SampleSubscriber","SampleTimeOperator","SampleTimeSubscriber","dispatchNotification","compareTo","SequenceEqualOperator","SequenceEqualSubscriber","_a","_b","_oneComplete","SequenceEqualCompareToSubscriber","emit","checkValues","areEqual","nextB","completeB","shareSubjectFactory","configOrBufferSize","useRefCount","shareReplayOperator","SingleOperator","SingleSubscriber","seenValue","applySingleValue","singleValue","SkipOperator","SkipSubscriber","SkipLastOperator","_skipCount","SkipLastSubscriber","_count","_ring","skipCount","currentIndex","oldValue","SkipUntilOperator","SkipUntilSubscriber","SkipWhileOperator","SkipWhileSubscriber","skipping","tryCallPredicate","SubscribeOnOperator","SubscribeOnObservable","delayTime","TakeUntilOperator","takeUntilSubscriber","TakeUntilSubscriber","inclusive","TakeWhileOperator","TakeWhileSubscriber","nextOrComplete","predicateResult","DoOperator","TapSubscriber","_tapNext","_tapError","_tapComplete","ThrottleTimeOperator","ThrottleTimeSubscriber","_hasTrailingValue","_trailingValue","TimeInterval","Timestamp","toArrayReducer","arr","windowBoundaries","WindowOperator","windowSubscriber","WindowSubscriber","sourceSubscription","openWindow","prevWindow","newWindow","windowSize","startWindowEvery","WindowCountOperator","WindowCountSubscriber","windows","windowTimeSpan","windowCreationInterval","maxWindowSize","WindowTimeOperator","WindowTimeSubscriber","_numberOfNextedValues","dispatchWindowClose","dispatchWindowCreation","dispatchWindowTimeSpanOnly","numberOfNextedValues","closeWindow","CountedSubject","timeSpanState","WindowToggleOperator","WindowToggleSubscriber","openSubscription","inner","unsubscribeClosingNotification","closingNotification","WithLatestFromOperator","WithLatestFromSubscriber","found","_tryProject","cookie","JSON_CONTENT_TYPE_REGEXP","FORM_URLENCODED_CONTENT_TYPE_REGEXP","contentType","_getHeader","_parseResponseHeaders","getAllResponseHeaders","_parseResponseBody","responseText","rawHeaders","XMLHttpRequest","_configureRequest","_formatUrl","_configureRequestHeaders","withCredentials","queryString","formBuilder","_createInput","pathA","pathB","path","removeLeadingSlash","Client","clientConfig","DEFAULT_CONFIG","offsitePaymentInitializer","OffsitePaymentInitializer","PaymentSubmitter","ClientTokenGenerator","StoreRequestSender","PayloadMapper","payloadMapper","mapToPayload","urlHelper","AddressMapper","CustomerMapper","MetaMapper","StoreMapper","bc_auth_token","paymentMethodIdMapper","mapToId","notify_url","page_title","payment_method_id","reference_id","addressMapper","mapToBillingAddress","customerMapper","mapToCustomer","metaMapper","mapToMeta","mapToShippingAddress","storeMapper","mapToStore","omitNil","isEmptyStringOrNil","string","mapToAddress","addressKey","formattedAddressKey","toSnakeCase","customer_browser_info","customer_email","customer_first_name","customer_geo_ip_country_code","customer_id","customer_last_name","customer_locale","customer_name","customer_phone","customer_reference","meta_referrer","meta_source","meta_user_agent","userAgent","store_hash","store_id","API","mapToHeaders","OrderMapper","PaymentMapper","orderMapper","mapToOrder","paymentMapper","mapToPayment","additional_action","customer_group","geo_ip_country_code","session_token","mapToCoupons","mapToItems","mapToShipping","totals","mapToOrderTotals","omitEmptyStringAndNil","transit_time","state_code","street_1","street_2","itemData","variant_id","grand_total","device","fingerprint_id","deviceFingerprint","mapToBigPayToken","credit_card_cryptogram","mapToCryptogram","mapToCreditCard","account_name","toNumber","customer_code","three_d_secure","hosted_form_nonce","verification_nonce","payment_cryptogram","account_mask","APPLICATION_JSON","GET","parseResponseHeaders","headerKeys","ClientTokenMapper","clientTokenMapper","mapToClientToken","CartMapper","GatewayMapper","QuoteMapper","cartMapper","mapToCart","gatewayMapper","mapToGateway","quote","quoteMapper","mapToQuote","currency_code","discount_total","shipping_total","surcharge_total","tax_total","ItemPhysicalEntity","ItemDigitalEntity","ItemGiftCertificateEntity","mapToLocale","store_identity","mapToIdentity","mapToUrls","language_code","confirmation","home","getInstrumentsUrl","getTrustedShippingAddressUrl","mapToTrustedShippingAddressPayload","getInstrumentByIdUrl","DELETE","providerName","cardholder_name","verification_code","issue_month","issue_year","issue_number","track_data","is_manual_entry","icc_data","fallback_reason","is_contactless","encrypted_pin_cryptogram","encrypted_pin_ksn","setRequestHeader"],"mappings":";wwBAAA,aACA,SAEA,QACA,SACA,SACA,SAYA,cAuCE,WAAYA,EACAC,EACAC,GAFZ,MAGE,cAAO,KAEP,OApBe,EAAAC,eAAsB,KACtB,EAAAC,iBAA2B,EAC3B,EAAAC,oBAA8B,EAErC,EAAAC,WAAqB,EAgBrBC,UAAUC,QAChB,KAAK,EACH,EAAKC,YAAc,EAAAC,MACnB,MACF,KAAK,EACH,IAAKV,EAAmB,CACtB,EAAKS,YAAc,EAAAC,MACnB,MAEF,GAAiC,WAA7B,EAAOV,GAAgC,CACrCA,aAA6BW,GAC/B,EAAKN,mBAAqBL,EAAkBK,mBAC5C,EAAKI,YAAcT,EACnBA,EAAkBY,IAAI,KAEtB,EAAKP,oBAAqB,EAC1B,EAAKI,YAAc,IAAII,EAAkB,EAA6Bb,IAExE,MAEJ,QACE,EAAKK,oBAAqB,EAC1B,EAAKI,YAAc,IAAII,EAAkB,EAA6Bb,EAAmBC,EAAOC,G,SA6ExG,OA/ImC,OAEjC,YAAC,EAAAY,cAAD,WAAyB,OAAOC,MAczB,EAAAC,OAAP,SAAiBC,EACAhB,EACAC,GACf,IAAMgB,EAAa,IAAIP,EAAWM,EAAMhB,EAAOC,GAE/C,OADAgB,EAAWb,oBAAqB,EACzBa,GAyDT,YAAAD,KAAA,SAAKE,GACEJ,KAAKT,WACRS,KAAKK,MAAMD,IAWf,YAAAlB,MAAA,SAAMoB,GACCN,KAAKT,YACRS,KAAKT,WAAY,EACjBS,KAAKO,OAAOD,KAUhB,YAAAnB,SAAA,WACOa,KAAKT,YACRS,KAAKT,WAAY,EACjBS,KAAKQ,cAIT,YAAAC,YAAA,WACMT,KAAKU,SAGTV,KAAKT,WAAY,EACjB,YAAMkB,YAAW,aAGT,YAAAJ,MAAV,SAAgBD,GACdJ,KAAKN,YAAYQ,KAAKE,IAGd,YAAAG,OAAV,SAAiBD,GACfN,KAAKN,YAAYR,MAAMoB,GACvBN,KAAKS,eAGG,YAAAD,UAAV,WACER,KAAKN,YAAYP,WACjBa,KAAKS,eAIP,YAAAE,uBAAA,WACW,IAAAC,EAAA,KAAAA,iBAMT,OALAZ,KAAKY,iBAAmB,KACxBZ,KAAKS,cACLT,KAAKU,QAAS,EACdV,KAAKT,WAAY,EACjBS,KAAKY,iBAAmBA,EACjBZ,MAEX,EA/IA,CAAmC,EAAAa,cAAtB,EAAAjB,aAsJb,kBAIE,WAAoBkB,EACRC,EACA7B,EACAC,GAHZ,IAMMe,EANN,EAIE,cAAO,KAJW,EAAAY,oBAOlB,IAAIE,EAAe,E,OAEf,EAAAC,WAAWF,GACbb,EAA+Ba,EACtBA,IACTb,EAA6Ba,EAAgBb,KAC7ChB,EAA8B6B,EAAgB7B,MAC9CC,EAAiC4B,EAAgB5B,SAC7C4B,IAAmB,EAAApB,QACrBqB,EAAUE,OAAOjB,OAAOc,GACpB,EAAAE,WAAWD,EAAQP,cACrB,EAAKZ,IAAiBmB,EAAQP,YAAYU,KAAKH,IAEjDA,EAAQP,YAAc,EAAKA,YAAYU,KAAK,KAIhD,EAAKC,SAAWJ,EAChB,EAAKX,MAAQH,EACb,EAAKK,OAASrB,EACd,EAAKsB,UAAYrB,E,EAsGrB,OArIuC,OAkCrC,YAAAe,KAAA,SAAKE,GACH,IAAKJ,KAAKT,WAAaS,KAAKK,MAAO,CACzB,IAAAS,EAAA,KAAAA,kBACH,EAAAO,OAAOC,uCAA0CR,EAAkBxB,mBAE7DU,KAAKuB,gBAAgBT,EAAmBd,KAAKK,MAAOD,IAC7DJ,KAAKS,cAFLT,KAAKwB,aAAaxB,KAAKK,MAAOD,KAOpC,YAAAlB,MAAA,SAAMoB,GACJ,IAAKN,KAAKT,UAAW,CACX,IAAAuB,EAAA,KAAAA,kBACAQ,EAAA,SAAAA,sCACR,GAAItB,KAAKO,OACFe,GAA0CR,EAAkBxB,oBAI/DU,KAAKuB,gBAAgBT,EAAmBd,KAAKO,OAAQD,GACrDN,KAAKS,gBAJLT,KAAKwB,aAAaxB,KAAKO,OAAQD,GAC/BN,KAAKS,oBAKF,GAAKK,EAAkBxB,mBAOxBgC,GACFR,EAAkB1B,eAAiBkB,EACnCQ,EAAkBzB,iBAAkB,GAEpC,EAAAoC,gBAAgBnB,GAElBN,KAAKS,kBAb2C,CAEhD,GADAT,KAAKS,cACDa,EACF,MAAMhB,EAER,EAAAmB,gBAAgBnB,MAatB,YAAAnB,SAAA,sBACE,IAAKa,KAAKT,UAAW,CACX,IAAAuB,EAAA,KAAAA,kBACR,GAAId,KAAKQ,UAAW,CAClB,IAAMkB,EAAkB,WAAM,SAAKlB,UAAUmB,KAAK,EAApB,WAEzB,EAAAN,OAAOC,uCAA0CR,EAAkBxB,oBAItEU,KAAKuB,gBAAgBT,EAAmBY,GACxC1B,KAAKS,gBAJLT,KAAKwB,aAAaE,GAClB1B,KAAKS,oBAMPT,KAAKS,gBAKH,YAAAe,aAAR,SAAqBI,EAAcxB,GACjC,IACEwB,EAAGD,KAAK3B,KAAKoB,SAAUhB,GACvB,MAAOE,GAEP,GADAN,KAAKS,cACD,EAAAY,OAAOC,sCACT,MAAMhB,EAEN,EAAAmB,gBAAgBnB,KAKd,YAAAiB,gBAAR,SAAwBM,EAAuBD,EAAcxB,GAC3D,IAAK,EAAAiB,OAAOC,sCACV,MAAM,IAAIQ,MAAM,YAElB,IACEF,EAAGD,KAAK3B,KAAKoB,SAAUhB,GACvB,MAAOE,GACP,OAAI,EAAAe,OAAOC,uCACTO,EAAOzC,eAAiBkB,EACxBuB,EAAOxC,iBAAkB,GAClB,IAEP,EAAAoC,gBAAgBnB,IACT,GAGX,OAAO,GAIT,YAAAyB,aAAA,WACU,IAAAjB,EAAA,KAAAA,kBACRd,KAAKoB,SAAW,KAChBpB,KAAKc,kBAAoB,KACzBA,EAAkBL,eAEtB,EArIA,CAAuCb,GAA1B,EAAAE,kB,iHCpKb,aACA,UAGA,SACA,SACA,SAQA,aAkBE,WAAYkC,GAfL,KAAAC,WAAqB,EAgBtBD,IACFhC,KAAKkC,WAAaF,GAoUxB,OAzSE,YAAAG,KAAA,SAAQC,GACN,IAAMC,EAAa,IAAIC,EAGvB,OAFAD,EAAWE,OAASvC,KACpBqC,EAAWD,SAAWA,EACfC,GAwIT,YAAAL,UAAA,SAAUjB,EACA7B,EACAC,GAEA,IAAAiD,EAAA,KAAAA,SACFI,EAAO,EAAAC,aAAa1B,EAAgB7B,EAAOC,GAYjD,GAVIiD,EACFI,EAAK3C,IAAIuC,EAAST,KAAKa,EAAMxC,KAAKuC,SAElCC,EAAK3C,IACHG,KAAKuC,QAAW,EAAAlB,OAAOC,wCAA0CkB,EAAKlD,mBACtEU,KAAKkC,WAAWM,GAChBxC,KAAK0C,cAAcF,IAInB,EAAAnB,OAAOC,uCACLkB,EAAKlD,qBACPkD,EAAKlD,oBAAqB,EACtBkD,EAAKnD,iBACP,MAAMmD,EAAKpD,eAKjB,OAAOoD,GAIT,YAAAE,cAAA,SAAcF,GACZ,IACE,OAAOxC,KAAKkC,WAAWM,GACvB,MAAOlC,GACH,EAAAe,OAAOC,wCACTkB,EAAKnD,iBAAkB,EACvBmD,EAAKpD,eAAiBkB,GAEpB,EAAAqC,eAAeH,GACjBA,EAAKtD,MAAMoB,GAEXsC,QAAQC,KAAKvC,KAYnB,YAAAwC,QAAA,SAAQ5C,EAA0B6C,GAAlC,WAGE,OAAO,IAFPA,EAAcC,EAAeD,KAEA,SAACE,EAASC,GAGrC,IAAIC,EACJA,EAAe,EAAKnB,WAAU,SAAC5B,GAC7B,IACEF,EAAKE,GACL,MAAOE,GACP4C,EAAO5C,GACH6C,GACFA,EAAa1C,iBAGhByC,EAAQD,OAKf,YAAAf,WAAA,SAAW/B,GACD,IAAAoC,EAAA,KAAAA,OACR,OAAOA,GAAUA,EAAOP,UAAU7B,IAqBpC,YAAC,cAAD,WACE,OAAOH,MAqCT,YAAAoD,KAAA,W,IAAK,sDACH,OAA0B,IAAtBC,EAAW5D,OACNO,KAGF,EAAAsD,cAAcD,EAAd,CAA0BrD,OASnC,YAAAuD,UAAA,SAAUR,GAAV,WAGE,OAAO,IAFPA,EAAcC,EAAeD,KAEN,SAACE,EAASC,GAC/B,IAAI9C,EACJ,EAAK4B,WAAU,SAACwB,GAAS,OAAApD,EAAA,KAAW,SAACE,GAAa,OAAA4C,EAAA,MAAa,WAAM,OAAAD,EAAA,UAjTlE,EAAAhD,OAAmB,SAAI+B,GAC5B,OAAO,IAAIM,EAAcN,IAmT7B,EAxVA,GAiWA,SAASgB,EAAeD,GAKtB,GAJKA,IACHA,EAAc,EAAA1B,OAAOoC,SAAWA,UAG7BV,EACH,MAAM,IAAIjB,MAAM,yBAGlB,OAAOiB,EA1WI,EAAAT,c,+aChBb,YACA,QACA,SAmBA,cACE,WAAoBT,GAApB,MACE,cAAO,K,OADW,EAAAA,S,EAiBtB,OAlB8C,OAKlC,YAAAxB,MAAV,SAAgBD,GACdJ,KAAK6B,OAAO6B,WAAWtD,IAGf,YAAAG,OAAV,SAAiBrB,GACfc,KAAK6B,OAAO8B,YAAYzE,GACxBc,KAAKS,eAGG,YAAAD,UAAV,WACER,KAAK6B,OAAO+B,iBACZ5D,KAAKS,eAET,EAlBA,CAA8C,EAAAb,YAAjC,EAAAiE,wBAoBb,kBACE,WAAoBhC,EAA6CiC,EAAsBC,GAAvF,MACE,cAAO,K,OADW,EAAAlC,SAA6C,EAAAiC,aAAsB,EAAAC,a,EAiBzF,OAlBkD,OAKtC,YAAA1D,MAAV,SAAgBD,GACdJ,KAAK6B,OAAO6B,WAAW1D,KAAK8D,WAAY1D,EAAOJ,KAAK+D,WAAY/D,OAGxD,YAAAO,OAAV,SAAiBrB,GACfc,KAAK6B,OAAO8B,YAAYzE,GACxBc,KAAKS,eAGG,YAAAD,UAAV,WACER,KAAK6B,OAAO+B,eAAe5D,MAC3BA,KAAKS,eAET,EAlBA,CAAkD,EAAAb,YAArC,EAAAoE,yBAoBb,+B,+CAYA,OAZiD,OAC/C,YAAAN,WAAA,SAAWO,GACTjE,KAAKN,YAAYQ,KAAK+D,IAGxB,YAAAN,YAAA,SAAYrD,GACVN,KAAKN,YAAYR,MAAMoB,IAGzB,YAAAsD,eAAA,WACE5D,KAAKN,YAAYP,YAErB,EAZA,CAAiD,EAAAS,YAApC,EAAAsE,wBAmBb,+B,+CAqBA,OArBkD,OAOhD,YAAAR,WAAA,SAAWS,EAAgBF,EAAeG,EAAqBC,GAC7DrE,KAAKN,YAAYQ,KAAK+D,IAGxB,YAAAN,YAAA,SAAYzE,GACVc,KAAKN,YAAYR,MAAMA,IAMzB,YAAA0E,eAAA,SAAeS,GACbrE,KAAKN,YAAYP,YAErB,EArBA,CAAkD,EAAAS,YAArC,EAAA0E,yBAuBb,0BAA+BC,EAAaC,GAC1C,IAAIA,EAAgB9D,OAApB,CAGA,GAAI6D,aAAkB,EAAAjC,WACpB,OAAOiC,EAAOvC,UAAUwC,GAE1B,IAAIrB,EACJ,IACEA,EAAe,EAAAsB,YAAYF,EAAZ,CAAoBC,GACnC,MAAOtF,GACPsF,EAAgBtF,MAAMA,GAExB,OAAOiE,K,2XCtHT,YACA,SACA,SACA,SAeA,aAsBE,WAAY1C,GAXL,KAAAC,QAAkB,EAGf,KAAAE,iBAAkD,KAEpD,KAAA8D,eAAqC,KAOvCjE,IACDT,KAAa2E,kBAAmB,EAChC3E,KAAa+B,aAAetB,GAvBI,IAASd,EAuMhD,OAtKE,YAAAc,YAAA,WACE,IAAImE,EAEJ,IAAI5E,KAAKU,OAAT,CAII,IAAEE,EAAF,KAAEA,iBAAkB+D,EAApB,KAAoBA,iBAAkB5C,EAAtC,KAAsCA,aAAc2C,EAApD,KAAoDA,eAQxD,GANA1E,KAAKU,QAAS,EACdV,KAAKY,iBAAmB,KAGxBZ,KAAK0E,eAAiB,KAElB9D,aAA4BC,EAC9BD,EAAiBiE,OAAO7E,WACnB,GAAyB,OAArBY,EACT,IAAK,IAAIkE,EAAQ,EAAGA,EAAQlE,EAAiBnB,SAAUqF,EAAO,CAC7ClE,EAAiBkE,GACzBD,OAAO7E,MAIlB,GAAI,EAAAiB,WAAWc,GAAe,CAUxB4C,IACD3E,KAAa+B,kBAAegD,GAE/B,IACEhD,EAAaJ,KAAK3B,MAClB,MAAOgF,GACPJ,EAASI,aAAa,EAAAC,oBAAsBC,EAA4BF,EAAEJ,QAAU,CAACI,IAIzF,GAAI,EAAAG,QAAQT,GACV,CAAII,GAAS,EAGb,IAHA,IACIM,EAAMV,EAAejF,SAEhBqF,EAAQM,GAAK,CACpB,IAAMC,EAAMX,EAAeI,GAC3B,GAAI,EAAAQ,SAASD,GACX,IACEA,EAAI5E,cACJ,MAAOuE,GACPJ,EAASA,GAAU,GACfI,aAAa,EAAAC,oBACfL,EAASA,EAAOW,OAAOL,EAA4BF,EAAEJ,SAErDA,EAAOY,KAAKR,KAOtB,GAAIJ,EACF,MAAM,IAAI,EAAAK,oBAAoBL,KAwBlC,YAAA/E,IAAA,SAAI4F,GACF,IAAItC,EAA8BsC,EAElC,IAAKA,EACH,OAAO5E,EAAa6E,MAGtB,SAAeD,IACb,IAAK,WACHtC,EAAe,IAAItC,EAA2B4E,GAChD,IAAK,SACH,GAAItC,IAAiBnD,MAAQmD,EAAazC,QAA8C,mBAA7ByC,EAAa1C,YAEtE,OAAO0C,EACF,GAAInD,KAAKU,OAEd,OADAyC,EAAa1C,cACN0C,EACF,KAAMA,aAAwBtC,GAAe,CAClD,IAAM8E,EAAMxC,GACZA,EAAe,IAAItC,GACN6D,eAAiB,CAACiB,GAEjC,MACF,QACE,MAAM,IAAI7D,MAAM,yBAA2B2D,EAAW,2BAKpD,IAAA7E,EAAA,EAAAA,iBACN,GAAyB,OAArBA,EAGFuC,EAAavC,iBAAmBZ,UAC3B,GAAIY,aAA4BC,EAAc,CACnD,GAAID,IAAqBZ,KAEvB,OAAOmD,EAITA,EAAavC,iBAAmB,CAACA,EAAkBZ,UAC9C,KAAwC,IAApCY,EAAiBgF,QAAQ5F,MAKlC,OAAOmD,EAHPvC,EAAiB4E,KAAKxF,MAOxB,IAAM6F,EAAgB7F,KAAK0E,eAO3B,OANsB,OAAlBmB,EACF7F,KAAK0E,eAAiB,CAACvB,GAEvB0C,EAAcL,KAAKrC,GAGdA,GAST,YAAA0B,OAAA,SAAO1B,GACL,IAAM0C,EAAgB7F,KAAK0E,eAC3B,GAAImB,EAAe,CACjB,IAAMC,EAAoBD,EAAcD,QAAQzC,IACrB,IAAvB2C,GACFD,EAAcE,OAAOD,EAAmB,KAnMhC,EAAAJ,QAAgC/F,EAG5C,IAAIkB,GAFEH,QAAS,EACRf,GAqMX,EAzMA,GA2MA,SAASuF,EAA4BN,GACpC,OAAOA,EAAOoB,QAAO,SAACC,EAAM3F,GAAQ,OAAA2F,EAAKV,OAAQjF,aAAe,EAAA2E,oBAAuB3E,EAAIsE,OAAvDtE,KAAsE,IA5M9F,EAAAO,gB,81BClBb,iBACA,YACA,YACA,aACA,aACA,YACA,aACA,aACA,a,ieCPA,YACA,QACA,QAEA,SACA,SACA,SAKA,cACE,WAAsBnB,GAAtB,MACE,YAAMA,IAAY,K,OADE,EAAAA,c,EAGxB,OAJ0C,OAI1C,EAJA,CAA0C,EAAAE,YAA7B,EAAAsG,oBAeb,kBAgBE,mBACE,cAAO,K,OAXT,EAAAC,UAA2B,GAE3B,EAAAzF,QAAS,EAET,EAAAnB,WAAY,EAEZ,EAAA6G,UAAW,EAEX,EAAAC,YAAmB,K,EAyGrB,OAvHgC,OAE9B,YAAC,EAAAtG,cAAD,WACE,OAAO,IAAImG,EAAkBlG,OAwB/B,YAAAmC,KAAA,SAAQC,GACN,IAAMkE,EAAU,IAAIC,EAAiBvG,KAAMA,MAE3C,OADAsG,EAAQlE,SAAgBA,EACZkE,GAGd,YAAApG,KAAA,SAAKE,GACH,GAAIJ,KAAKU,OACP,MAAM,IAAI,EAAA8F,wBAEZ,IAAKxG,KAAKT,UAIR,IAHQ,IAAA4G,EAAA,KAAAA,UACFf,EAAMe,EAAU1G,OAChBgH,EAAON,EAAUO,QACdC,EAAI,EAAGA,EAAIvB,EAAKuB,IACvBF,EAAKE,GAAGzG,KAAKE,IAKnB,YAAAlB,MAAA,SAAMoB,GACJ,GAAIN,KAAKU,OACP,MAAM,IAAI,EAAA8F,wBAEZxG,KAAKoG,UAAW,EAChBpG,KAAKqG,YAAc/F,EACnBN,KAAKT,WAAY,EAIjB,IAHQ,IAAA4G,EAAA,KAAAA,UACFf,EAAMe,EAAU1G,OAChBgH,EAAON,EAAUO,QACdC,EAAI,EAAGA,EAAIvB,EAAKuB,IACvBF,EAAKE,GAAGzH,MAAMoB,GAEhBN,KAAKmG,UAAU1G,OAAS,GAG1B,YAAAN,SAAA,WACE,GAAIa,KAAKU,OACP,MAAM,IAAI,EAAA8F,wBAEZxG,KAAKT,WAAY,EAIjB,IAHQ,IAAA4G,EAAA,KAAAA,UACFf,EAAMe,EAAU1G,OAChBgH,EAAON,EAAUO,QACdC,EAAI,EAAGA,EAAIvB,EAAKuB,IACvBF,EAAKE,GAAGxH,WAEVa,KAAKmG,UAAU1G,OAAS,GAG1B,YAAAgB,YAAA,WACET,KAAKT,WAAY,EACjBS,KAAKU,QAAS,EACdV,KAAKmG,UAAY,MAInB,YAAAzD,cAAA,SAAcvC,GACZ,GAAIH,KAAKU,OACP,MAAM,IAAI,EAAA8F,wBAEV,OAAO,YAAM9D,cAAa,UAACvC,IAK/B,YAAA+B,WAAA,SAAW/B,GACT,GAAIH,KAAKU,OACP,MAAM,IAAI,EAAA8F,wBACL,OAAIxG,KAAKoG,UACdjG,EAAWjB,MAAMc,KAAKqG,aACf,EAAAxF,aAAa6E,OACX1F,KAAKT,WACdY,EAAWhB,WACJ,EAAA0B,aAAa6E,QAEpB1F,KAAKmG,UAAUX,KAAKrF,GACb,IAAI,EAAAyG,oBAAoB5G,KAAMG,KAUzC,YAAA0G,aAAA,WACE,IAAMxE,EAAa,IAAI,EAAAC,WAEvB,OADMD,EAAYE,OAASvC,KACpBqC,GA9FF,EAAApC,OAAmB,SAAIP,EAA0B6C,GACtD,OAAO,IAAIgE,EAAoB7G,EAAa6C,IA+FhD,EAvHA,CAAgC,EAAAD,YAAnB,EAAAwE,UA4Hb,kBACE,WAAsBpH,EAA2B6C,GAAjD,MACE,cAAO,K,OADa,EAAA7C,cAEpB,EAAK6C,OAASA,E,EAiClB,OApCyC,OAMvC,YAAArC,KAAA,SAAKE,GACK,IAAAV,EAAA,KAAAA,YACJA,GAAeA,EAAYQ,MAC7BR,EAAYQ,KAAKE,IAIrB,YAAAlB,MAAA,SAAMoB,GACI,IAAAZ,EAAA,KAAAA,YACJA,GAAeA,EAAYR,OAC7Bc,KAAKN,YAAYR,MAAMoB,IAI3B,YAAAnB,SAAA,WACU,IAAAO,EAAA,KAAAA,YACJA,GAAeA,EAAYP,UAC7Ba,KAAKN,YAAYP,YAKrB,YAAA+C,WAAA,SAAW/B,GAET,OADQ,KAAAoC,OAECvC,KAAKuC,OAAOP,UAAU7B,GAEtB,EAAAU,aAAa6E,OAG1B,EApCA,CAAyCoB,GAA5B,EAAAP,oB,+ECvJb,cAAS,YAAAQ,QAAoB,2B,oFCAhB,EAAA5B,QAAiB6B,MAAM7B,SAAY,SAAI3B,GAAqB,OAAAA,GAAA,iBAAYA,EAAE/D,S,8ECAvF,aACA,SAgDa,EAAAwH,eAAiB,IAAI,EAAAC,eAAe,EAAAC,aAKpC,EAAAC,MAAQ,EAAAH,gB,mbCrDrB,YA2CA,eAA0BI,EAAyCC,GACjE,OAAO,SAAsB/E,GAC3B,GAAuB,mBAAZ8E,EACT,MAAM,IAAIE,UAAU,8DAEtB,OAAOhF,EAAOJ,KAAK,IAAIqF,EAAYH,EAASC,MAIhD,iBACE,WAAoBD,EAAiDC,GAAjD,KAAAD,UAAiDrH,KAAAsH,UAMvE,OAHE,YAAA3F,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIyF,EAActH,EAAYH,KAAKqH,QAASrH,KAAKsH,WAE7E,EAPA,GAAa,EAAAE,cAcb,kBAIE,WAAY9H,EACQ2H,EACRC,GAFZ,MAGE,YAAM5H,IAAY,K,OAFA,EAAA2H,UAJpB,EAAAK,MAAgB,EAOd,EAAKJ,QAAUA,GAAW,E,EAe9B,OAvBkC,OAatB,YAAAjH,MAAV,SAAgBD,GACd,IAAImE,EACJ,IACEA,EAASvE,KAAKqH,QAAQ1F,KAAK3B,KAAKsH,QAASlH,EAAOJ,KAAK0H,SACrD,MAAOpH,GAEP,YADAN,KAAKN,YAAYR,MAAMoB,GAGzBN,KAAKN,YAAYQ,KAAKqE,IAE1B,EAvBA,CAAkC,EAAA3E,a,kkBClEhC,IAAI+H,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUC,QAGnC,IAAIC,EAASJ,EAAiBE,GAAY,CACzClB,EAAGkB,EACHG,GAAEA,EACFF,QAAS,IAUV,OANAG,EAAQJ,GAAUlG,KAAKoG,EAAOD,QAASC,EAAQA,EAAOD,QAASF,GAG/DG,EAAOC,KAGAD,EAAOD,QA0Df,OArDAF,EAAoBM,EAAID,EAGxBL,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASN,EAASO,EAAMC,GAC3CV,EAAoBW,EAAET,EAASO,IAClCnH,OAAOsH,eAAeV,EAASO,EAAM,CAAEI,YAAWA,EAAOC,IAAKJ,KAKhEV,EAAoBe,EAAI,SAASb,GACX,oBAAXc,QAA0BA,OAAOC,aAC1C3H,OAAOsH,eAAeV,EAASc,OAAOC,YAAa,CAAEzI,MAAO,WAE7Dc,OAAOsH,eAAeV,EAAS,aAAc,CAAE1H,OAAMA,KAQtDwH,EAAoBkB,EAAI,SAAS1I,EAAO2I,GAEvC,GADU,EAAPA,IAAU3I,EAAQwH,EAAoBxH,IAC/B,EAAP2I,EAAU,OAAO3I,EACpB,GAAW,EAAP2I,GAA8B,YAAV3I,IAAsBA,GAASA,EAAM4I,WAAY,OAAO5I,EAChF,IAAI6I,EAAK/H,OAAOjB,OAAO,MAGvB,GAFA2H,EAAoBe,EAAEM,GACtB/H,OAAOsH,eAAeS,EAAI,UAAW,CAAER,YAAWA,EAAOrI,MAAOA,IACtD,EAAP2I,GAA4B,iBAAT3I,EAAmB,IAAI,IAAI8I,KAAO9I,EAAOwH,EAAoBQ,EAAEa,EAAIC,EAAK,SAASA,GAAO,OAAO9I,EAAM8I,IAAQ/H,KAAK,KAAM+H,IAC9I,OAAOD,GAIRrB,EAAoBuB,EAAI,SAASpB,GAChC,IAAIO,EAASP,GAAUA,EAAOiB,WAC7B,WAAwB,OAAOjB,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAH,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASa,EAAQC,GAAY,OAAOnI,OAAOoI,UAAUC,eAAe5H,KAAKyH,EAAQC,IAGzGzB,EAAoB4B,EAAI,GAIjB5B,EAAoBA,EAAoB6B,EAAI,K,gBClFrD1B,EAAOD,QAAU4B,EAAQ,I,cCAzB3B,EAAOD,QAAU4B,EAAQ,M,cCAzB3B,EAAOD,QAAU4B,EAAQ,K,cCAzB3B,EAAOD,QAAU4B,EAAQ,O,eCAzB3B,EAAOD,QAAU4B,EAAQ,K,8BCMzB,IAAYC,EAAZ,IAAA3E,EAAA,qCAAY2E,GACR,EAAAC,4BAAA,gCACA,EAAAC,4BAAA,gCACA,EAAAC,yBAAA,6BAEA,EAAAC,2BAAA,+BACA,EAAAC,2BAAA,+BACA,EAAAC,wBAAA,4BAEA,EAAAC,2BAAA,+BACA,EAAAC,2BAAA,+BACA,EAAAC,wBAAA,4BAEA,EAAAC,8BAAA,mCACA,EAAAC,8BAAA,mCACA,EAAAC,2BAAA,gCAEA,EAAAC,6BAAA,kCACA,EAAAC,6BAAA,kCACA,EAAAC,0BAAA,+BAnBJ,CAAYf,MAAqB,M,cCNjC5B,EAAOD,QAAU4B,EAAQ,O,6BCEzB,IAAYiB,EAAZ,IAAA3F,EAAA,qCAAY2F,GACR,EAAAC,oBAAA,0CACA,EAAAC,uBAAA,6CACA,EAAAC,uBAAA,6CACA,EAAAC,mBAAA,yCACA,EAAAC,sBAAA,4CACA,EAAAC,sBAAA,4CACA,EAAAC,iBAAA,sCACA,EAAAC,oBAAA,yCACA,EAAAC,oBAAA,yCACA,EAAAC,mBAAA,wCACA,EAAAC,sBAAA,2CACA,EAAAC,sBAAA,2CACA,EAAAC,yBAAA,+CACA,EAAAC,0BAAA,gDACA,EAAAC,wBAAA,8CAfJ,CAAYf,MAA0B,M,6BCFtC,IAAKgB,GAAL,SAAKA,GACD,EAAAC,QAAA,UACA,EAAAC,kBAAA,mBACA,EAAAC,OAAA,SACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SACA,EAAAC,wBAAA,wBACA,EAAAC,YAAA,YACA,EAAAC,SAAA,WACA,EAAAC,WAAA,aACA,EAAAC,KAAA,OACA,EAAAC,YAAA,cACA,EAAAC,gBAAA,iBACA,EAAAC,kBAAA,mBACA,EAAAC,iBAAA,kBACA,EAAAC,kBAAA,mBACA,EAAAC,YAAA,aACA,EAAAC,uBAAA,uBACA,EAAAC,SAAA,WACA,EAAAC,SAAA,WACA,EAAAC,YAAA,cACA,EAAAC,cAAA,gBACA,EAAAC,aAAA,eACA,EAAAC,yBAAA,yBACA,EAAAC,OAAA,SACA,EAAAC,SAAA,WACA,EAAAC,OAAA,SACA,EAAAC,OAAA,SACA,EAAAC,OAAA,SACA,EAAAC,yBAAA,wBACA,EAAAC,QAAA,UACA,EAAAC,QAAA,UACA,EAAAC,OAAA,SACA,EAAAC,eAAA,gBACA,EAAAC,sBAAA,sBACA,EAAAC,gBAAA,iBACA,EAAAC,uBAAA,uBACA,EAAAC,4BAAA,4BACA,EAAAC,oCAAA,mCACA,EAAAC,MAAA,mBACA,EAAAC,SAAA,UACA,EAAAC,OAAA,WACA,EAAAC,SAAA,WACA,EAAAC,UAAA,YACA,EAAAC,iBAAA,kBACA,EAAAC,wBAAA,wBACA,EAAAC,wBAAA,wBACA,EAAAC,qBAAA,qBACA,EAAAC,UAAA,WACA,EAAAC,OAAA,QACA,EAAAC,WAAA,aACA,EAAAC,kBAAA,kBACA,EAAAC,OAAA,SACA,EAAAC,IAAA,MArDJ,CAAKrD,MAAmB,KAwDT,O,6BCtDf,IAAYsD,EAAZ,IAAAjK,EAAA,qCAAYiK,GACR,EAAAC,aAAA,mCACA,EAAAC,gBAAA,sCACA,EAAAC,gBAAA,sCACA,EAAAC,cAAA,oCACA,EAAAC,iBAAA,uCACA,EAAAC,iBAAA,uCACA,EAAArE,iBAAA,sCACA,EAAAC,oBAAA,yCACA,EAAAC,oBAAA,yCACA,EAAAC,mBAAA,wCACA,EAAAC,sBAAA,2CACA,EAAAC,sBAAA,2CACA,EAAAC,yBAAA,+CACA,EAAAC,0BAAA,gDACA,EAAAC,wBAAA,8CAfJ,CAAYuD,MAA0B,M,6BCEtC,IAAYO,EAAZ,IAAAxK,EAAA,qCAAYwK,GACR,EAAAC,cAAA,kCACA,EAAAC,iBAAA,qCACA,EAAAC,iBAAA,qCACA,EAAAC,eAAA,mCACA,EAAAC,kBAAA,sCACA,EAAAC,kBAAA,sCACA,EAAA5E,iBAAA,qCACA,EAAAC,oBAAA,wCACA,EAAAC,oBAAA,wCACA,EAAAC,mBAAA,uCACA,EAAAC,sBAAA,0CACA,EAAAC,sBAAA,0CACA,EAAAC,yBAAA,8CACA,EAAAC,0BAAA,+CACA,EAAAC,wBAAA,6CAfJ,CAAY8D,MAAyB,M,mECFzBO,E,gBAAZ,SAAYA,GACR,IAAAC,sBAAA,2BACA,IAAAC,YAAA,iBACA,IAAAC,gBAAA,qBACA,IAAAC,oBAAA,yBACA,IAAAC,gBAAA,qBACA,IAAAC,sBAAA,2BACA,IAAAC,aAAA,kBACA,IAAAC,mBAAA,wBACA,IAAAC,eAAA,oBACA,IAAAC,eAAA,oBACA,IAAAC,yBAAA,+BACA,IAAAC,qBAAA,2BACA,IAAAC,oBAAA,0BACA,IAAAC,uBAAA,6BAdJ,CAAYd,MAAoB,KAsBhC,kBACI,WACWe,GADX,MAGI,YAOR,SAAyBC,GACrB,OAAQA,GACR,KAAKhB,EAAqBC,sBACtB,MAAO,iEAEX,KAAKD,EAAqBE,YACtB,MAAO,sDAEX,KAAKF,EAAqBI,oBACtB,MAAO,8DAEX,KAAKJ,EAAqBG,gBACtB,MAAO,0DAEX,KAAKH,EAAqBK,gBACtB,MAAO,0DAEX,KAAKL,EAAqBM,sBAC1B,KAAKN,EAAqBQ,mBACtB,MAAO,+DAEX,KAAKR,EAAqBO,aACtB,MAAO,uDAEX,KAAKP,EAAqBS,eACtB,MAAO,0EAEX,KAAKT,EAAqBU,eACtB,MAAO,yDAEX,KAAKV,EAAqBa,oBACtB,MAAO,+EAEX,KAAKb,EAAqBY,qBACtB,MAAO,2FAEX,KAAKZ,EAAqBc,uBACtB,MAAO,kEAEX,QACI,MAAO,+DAxCf,CAP8BC,KAAS,K,OAFxBA,YAIP,EAAKzI,KAAO,mBACZ,EAAK0I,KAAO,e,EAEnB,OAT6C,yBAS9C,EATA,CAA8C,K,uCCjB9C,IAAYC,EAAZ,IAAAhM,EAAA,qCAAYgM,GACR,EAAAC,sBAAA,0BACA,EAAAC,sBAAA,0BACA,EAAAC,mBAAA,uBAEA,EAAAC,wBAAA,4BACA,EAAAC,wBAAA,4BACA,EAAAC,qBAAA,yBAPJ,CAAYN,MAAkB,M,6BCF9B,IAAYO,EAAZ,IAAAvM,EAAA,qCAAYuM,GACR,EAAAC,mBAAA,uBACA,EAAAC,mBAAA,uBACA,EAAAC,gBAAA,oBAEA,EAAAC,2BAAA,gCACA,EAAAC,2BAAA,gCACA,EAAAC,wBAAA,6BAEA,EAAAC,qBAAA,yBACA,EAAAC,qBAAA,yBACA,EAAAC,kBAAA,sBAEA,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,oBAAA,wBAfJ,CAAYZ,MAAe,M,6BCA3B,IAAYa,EAAZ,IAAApN,EAAA,qCAAYoN,GACR,EAAAC,2BAAA,gCACA,EAAAC,2BAAA,gCACA,EAAAC,wBAAA,6BAEA,EAAAC,4BAAA,iCACA,EAAAC,4BAAA,iCACA,EAAAC,yBAAA,8BAPJ,CAAYN,MAAuB,M,6BCDnC,IAAYO,EAAZ,IAAA3N,EAAA,qCAAY2N,GACR,EAAAC,8BAAA,mCACA,EAAAC,8BAAA,mCACA,EAAAC,2BAAA,gCAEA,EAAAC,yBAAA,8BACA,EAAAC,yBAAA,8BACA,EAAAC,sBAAA,2BAPJ,CAAYN,MAAwB,M,6BCEpC,IAAYO,EAAZ,IAAAlO,EAAA,qCAAYkO,GACR,EAAAC,uBAAA,2BACA,EAAAC,0BAAA,8BACA,EAAAC,0BAAA,8BAEA,EAAAC,yBAAA,6BACA,EAAAC,4BAAA,gCACA,EAAAC,4BAAA,gCAPJ,CAAYN,MAAwB,M,6BCApC,IAAYO,EAAZ,IAAAzO,EAAA,qCAAYyO,GACR,EAAAC,qBAAA,yBACA,EAAAC,qBAAA,yBACA,EAAAC,kBAAA,sBAEA,EAAAC,sBAAA,0BACA,EAAAC,sBAAA,0BACA,EAAAC,mBAAA,uBAPJ,CAAYN,MAAgB,M,wCCE5B,cAII,WAAYO,G,ICZuB5K,EAAaE,E,mBDYhD,EACI,YAAM0K,GAAW,sCAAoC,K,OAJzD,EAAA3L,KAAO,gBACP,EAAA0I,KAAO,WCV4B3H,EDehB,ECf6BE,EDevB,EAAWA,UCdhCpI,OAAO+S,eACP/S,OAAO+S,eAAe7K,EAAQE,GAE9BF,EAAO8K,UAAY5K,EDaoB,mBAA5BxH,MAAMqS,kBACbrS,MAAMqS,kBAAkB,EAAM,GAE9B,EAAKC,MAAQ,IAAKtS,MAAM,EAAKkS,SAAUI,M,EAGlD,OAfmD,yBAepD,EAfA,CAAoDtS,O,oCEApD,IAAYuS,EAAZ,IAAArP,EAAA,qCAAYqP,GACR,EAAAC,wBAAA,6BACA,EAAAC,wBAAA,6BACA,EAAAC,qBAAA,0BAEA,EAAAC,yBAAA,8BACA,EAAAC,yBAAA,8BACA,EAAAC,sBAAA,2BAEA,EAAAC,wBAAA,4BACA,EAAAC,wBAAA,4BACA,EAAAC,qBAAA,yBAEA,EAAAC,+BAAA,oCACA,EAAAC,+BAAA,oCACA,EAAAC,4BAAA,iCAfJ,CAAYZ,MAAkB,M,6BCL9B,IAAYa,EAAZ,IAAAlQ,EAAA,qCAAYkQ,GACR,EAAAC,iBAAA,oBACA,EAAAC,cAAA,iBACA,EAAAC,eAAA,kBACA,EAAAC,WAAA,cACA,EAAAC,YAAA,eACA,EAAAC,UAAA,aANJ,CAAYN,MAAyB,M,6BCErC,IAAYO,EAAZ,IAAAzQ,EAAA,qCAAYyQ,GACR,EAAAC,yBAAA,6BACA,EAAAC,yBAAA,6BACA,EAAAC,sBAAA,0BAEA,EAAAC,0BAAA,8BACA,EAAAC,0BAAA,8BACA,EAAAC,uBAAA,2BAPJ,CAAYN,MAAoB,M,6BCChC,IAAYO,EAAZ,IAAAhR,EAAA,qCAAYgR,GACR,EAAAC,8BAAA,mCACA,EAAAC,8BAAA,mCACA,EAAAC,2BAAA,gCAEA,EAAAC,+BAAA,oCACA,EAAAC,+BAAA,oCACA,EAAAC,4BAAA,iCAPJ,CAAYN,MAAyB,M,6BC6GrC,IAAYO,EAIAC,EAqBAC,EAzBZ,IAAAzR,EAAA,gCAAAA,EAAA,gCAAAA,EAAA,qCAAYuR,GACR,EAAAG,KAAA,OACA,EAAAC,MAAA,QAFJ,CAAYJ,MAAU,KAItB,SAAYC,GACR,EAAAI,QAAA,UACA,EAAAC,MAAA,QACA,EAAAC,MAAA,QAHJ,CAAYN,MAAW,KAqBvB,SAAYC,GAIR,EAAAM,IAAA,MAIA,EAAAC,KAAA,OARJ,CAAYP,MAAoB,M,8BCxIhC,IAAYQ,EAAZ,IAAAjS,EAAA,qCAAYiS,GACR,EAAAC,iCAAA,sCACA,EAAAC,iCAAA,sCACA,EAAAC,8BAAA,mCAEA,EAAAC,kCAAA,uCACA,EAAAC,kCAAA,uCACA,EAAAC,+BAAA,oCAEA,EAAAC,iCAAA,sCACA,EAAAC,iCAAA,sCACA,EAAAC,8BAAA,mCAEA,EAAAC,4BAAA,iCACA,EAAAC,4BAAA,iCACA,EAAAC,yBAAA,8BAEA,EAAAC,+BAAA,qCACA,EAAAC,+BAAA,qCACA,EAAAC,4BAAA,kCAEA,EAAAC,qBAAA,yBArBJ,CAAYhB,MAAwB,M,eCJpClP,EAAOD,QAAU4B,EAAQ,M,6BCAzB,IAAKwO,GAAL,SAAKA,GACD,EAAAC,KAAA,mBACA,EAAAC,OAAA,6BAFJ,CAAKF,MAAW,KAKD,O,8BCLf,IAAAlT,EAAA,gCAAAA,EAAA,4BAAO,IAAMqT,EAAc,cACdC,EAAW,Y,cCDxBvQ,EAAOD,QAAU4B,EAAQ,M,iDCInB6O,EAAmB,CACrBC,KAAM,GACNC,QAAS,GACTC,OAAQ,GAOZ,cAMI,WACIC,EACA,G,IAAA,aAGI,GAAE,EAHJ3E,EAAO,UAAEpP,EAAM,SAFrB,OAOU,EAA4B+T,GAAYJ,EAAtCC,EAAI,OAAEC,EAAO,UAAEC,EAAM,S,OAE7BjP,EAAA,YAAMuK,GAAW,sCAAoC,MAEhD3L,KAAO,eACZ,EAAK0I,KAAO,UACZ,EAAKyH,KAAOA,EACZ,EAAKC,QAAUA,EACf,EAAKC,OAASA,EACd,EAAK9T,OAASA,GAAU,G,EAE/B,OAxBsD,yBAwBvD,EAxBA,CAAuD,K,oCCZxC,SAASgU,EAAoBC,GACxC,OAAOC,QAASD,EAAiCE,cAG9C,SAASC,EAA0BH,GACtC,OACIC,QAASD,EAAuCE,gBAC/CF,EAAWtP,eAAe,cAC1BsP,EAAWtP,eAAe,SAI5B,SAAS0P,EAA6BJ,GACzC,IAAMK,EAAuBL,EAA4DM,iBAEzF,QAAKD,IAI8C,iBAArCA,EAAoBE,cAC9BN,QAAQI,EAAoBE,cAAgBF,EAAoBE,aAAaC,QApBrF,IAAArU,EAAA,gCAAAA,EAAA,gCAAAA,EAAA,6B,6BCEA,IAAYsU,EAAZ,IAAAtU,EAAA,qCAAYsU,GACR,EAAAC,oBAAA,wBACA,EAAAC,oBAAA,wBACA,EAAAC,iBAAA,qBAHJ,CAAYH,MAAgB,M,6BCA5B,IAAYI,EAAZ,IAAA1U,EAAA,qCAAY0U,GACR,EAAAC,wBAAA,6BACA,EAAAC,wBAAA,6BACA,EAAAC,qBAAA,0BAHJ,CAAYH,MAAoB,M,wCCEhC,cACI,WAAY1F,GAAZ,MACI,YAAMA,GAAW,wGAAsG,K,OAEvH,EAAK3L,KAAO,sCACZ,EAAK0I,KAAO,oC,EAEnB,OAPgE,yBAOjE,EAPA,C,MAAiE,G,oCCNjE,6BAAApK,KAAA,WAGe,SAASmT,EAAc1Z,GAClC,OAAO,wBAAoBA,K,6BCA/B,IAAY2Z,EAAZ,IAAA/U,EAAA,qCAAY+U,GACR,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,oBAAA,wBAHJ,CAAYH,MAAiB,M,6BCA7B,IAAYI,EAAZ,IAAAnV,EAAA,qCAAYmV,GACR,EAAAC,+BAAA,oCACA,EAAAC,+BAAA,oCACA,EAAAC,4BAAA,iCAHJ,CAAYH,MAAyB,M,6BCArC,IAAYI,EAAZ,IAAAvV,EAAA,qCAAYuV,GACR,EAAAC,yBAAA,8BACA,EAAAC,yBAAA,8BACA,EAAAC,sBAAA,2BAHJ,CAAYH,MAAqB,M,cCJjCxS,EAAOD,QAAU4B,EAAQ,O,6BCMzB,IAAYiR,EAAZ,IAAA3V,EAAA,qCAAY2V,GACR,EAAAC,0BAAA,+BACA,EAAAC,0BAAA,+BACA,EAAAC,uBAAA,4BAHJ,CAAYH,MAAqB,M,6BCGjC,IAAYI,EADZ,kCACA,SAAYA,GACR,EAAAC,gBAAA,gCACA,EAAAC,aAAA,6BACA,EAAAC,WAAA,2BACA,EAAAC,QAAA,uBACA,EAAAC,QAAA,uBACA,EAAAC,gBAAA,iCACA,EAAAC,QAAA,uBACA,EAAAC,QAAA,uBACA,EAAAC,gBAAA,gCACA,EAAAC,aAAA,6BACA,EAAAC,UAAA,yBAXJ,CAAYX,MAAoB,M,+BCThC,6BAAApU,KAAA,YAIe,SAASgV,EAASC,GAC7B,IAAK,kBAAkBC,KAAKD,GACxB,MAAM,IAAI,IAAqB,sCAInC,IAAME,EAASC,SAASC,cAAc,KAEtCF,EAAOG,KAAOL,EAId,IAAMM,EAAOJ,EAAOI,OAA8D,IAAtDN,EAAIhW,QAAWkW,EAAOK,SAAQ,IAAIL,EAAOI,MACjEJ,EAAOI,KACP,GAEJ,MAAO,CACHE,KAAMN,EAAOM,KACbD,SAAUL,EAAOK,SACjBF,KAAMH,EAAOG,KACbI,OAAWP,EAAOQ,SAAQ,KAAKR,EAAOK,UAAWD,EAAO,IAAMA,EAAO,IACrEK,SAAUT,EAAOS,SACjBL,KAAI,EACJI,SAAUR,EAAOQ,SACjBE,OAAQV,EAAOU,U,wCCrBvB,cACI,WAAYxI,GAAZ,MACI,YAAMA,GAAW,0CAAwC,K,OAEzD,EAAK3L,KAAO,uBACZ,EAAK0I,KAAO,mB,EAEnB,OAPiD,yBAOlD,EAPA,C,MAAkD,G,uCCLnC,SAAS0L,EACpBrT,EACA2H,GAEA,OAAO3H,EAAO2H,OAASA,EAJ3B,IAAA/L,EAAA,6B,8BCFA,IAAAA,EAAA,gCAAAA,EAAA,4BAAO,IAAM0X,EAAS,sBACTjP,EAAU,wB,6BCDvB,6BAAA9G,KAAA,aAWe,SAASgW,EACpBC,EACAC,GAEA,IAAIC,EAQJ,OANI,YAAqBF,GACrBE,EAAYF,EAAQG,GACbF,GAAgBA,EAAapd,SACpCqd,EAAYD,EAAa,GAAGE,IAGzB,CACHA,GAAID,EACJE,UAAWJ,EAAQI,UACnBC,SAAUL,EAAQK,SAClBC,QAASN,EAAQM,QACjBC,aAAcP,EAAQQ,SACtBC,aAAcT,EAAQU,SACtBC,KAAMX,EAAQW,KACdC,SAAUZ,EAAQa,gBAClBC,aAAcd,EAAQe,oBACtBC,SAAUhB,EAAQiB,WAClBC,QAASlB,EAAQkB,QACjBC,YAAanB,EAAQmB,YACrBC,MAAOpB,EAAQoB,MACfC,aAAcrB,EAAQqB,gB,6BCrC9B,IAAAjZ,EAAA,4BAAO,IAAMkZ,EAAoB,2E,6BCMjC,IAAYC,EAAZ,IAAAnZ,EAAA,qCAAYmZ,GACR,EAAAC,uBAAA,2BACA,EAAAC,uBAAA,2BACA,EAAAC,oBAAA,wBAEA,EAAAC,kCAAA,uCACA,EAAAC,kCAAA,uCACA,EAAAC,+BAAA,oCAPJ,CAAYN,MAAiB,M,+BCN7B,6BAAAxX,KAAA,WAEe,SAAS+X,EAAgBC,GACpC,OAAO,SAAAC,KAAA,CAAKD,GAAUE,KAAK,O,wDCQhB,SAASC,EACpBC,EACAC,EACAC,GAEA,YAAO,IAFPA,YAEQ/d,OAAOge,KAAKH,GACf/Y,QAAO,SAACzB,EAAQ2E,GAAQ,gCAClB3E,EACCwa,EAAQ7V,GAAoBiW,KAAI,SAACC,GACjC,MAAY,qBAARlW,ECfL,SACXkW,EACAJ,GAEA,IAAMK,EAAoB,IAAI,IAAkBL,GAEhD,MAAO,CACHjC,GAAIqC,EAAKrC,GACTuC,SAAU,GACVjX,KAAM+W,EAAK/W,KACXkX,OAAQH,EAAKG,OACbC,oBAAqBJ,EAAKG,OAC1BE,SAAU,EACVC,cAAeL,EAAkBM,UAAUP,EAAKG,QAChDK,2BAA4BP,EAAkBM,UAAUP,EAAKG,QAC7DM,iBAAkBR,EAAkBM,UAAUP,EAAKG,QACnDO,8BAA+BT,EAAkBM,UAAUP,EAAKG,QAChEQ,gBAAiB,EACjBC,SAAU,EACVC,OAAQb,EAAKa,OACbC,UAAWd,EAAKc,UAChBnP,KAAM,4BACNoP,WAAY,GACZC,UAAW,MAvBJ,CDgBiDhB,EAAMJ,GAG/C,YACHI,EASpB,SAAmCrO,GAC/B,OAAQA,GACJ,IAAK,gBACD,MAAO,qBAEX,IAAK,eACD,MAAO,oBAEX,IAAK,mBACD,MAAO,4BAEX,QACI,MAAO,IAZnB,CAR8C7H,GAC1B8V,EACAC,SAGT,I,iDE/BXlX,EAAOD,QAAU4B,EAAQ,O,6BCIzB,IAAY2W,EAAZ,IAAArb,EAAA,qCAAYqb,GACR,EAAAnV,iBAAA,oCACA,EAAAE,oBAAA,uCACA,EAAAD,oBAAA,uCACA,EAAAmV,wBAAA,4CACA,EAAAC,wBAAA,4CACA,EAAAC,qBAAA,yCACA,EAAA9Q,iBAAA,oCACA,EAAAC,iBAAA,oCACA,EAAAF,cAAA,iCATJ,CAAY4Q,MAAwB,M,cCJpCtY,EAAOD,QAAU4B,EAAQ,M,6BCMzB,IAAY+W,EAAZ,IAAAzb,EAAA,qCAAYyb,GACR,EAAAC,gBAAA,gCACA,EAAAC,gBAAA,mCACA,EAAAC,kBAAA,kCAHJ,CAAYH,MAAoB,M,gCCFjB,SAASI,EAAQC,EAAcC,EAAcC,GACxD,OAAIF,IAAYC,IAIZD,GAAWC,GAA8B,YAAZD,IAA2C,YAAZC,GACxD/Z,MAAM7B,QAAQ2b,IAAY9Z,MAAM7B,QAAQ4b,GAsCpD,SAAsBD,EAAgBC,EAAgBC,GAClD,GAAIF,EAAQrhB,SAAWshB,EAAQthB,OAC3B,OAAM,EAGV,IAAK,IAAIqF,EAAQ,EAAG,EAASgc,EAAQrhB,OAAQqF,EAAQ,EAAQA,IACzD,IAAK+b,EAAQC,EAAQhc,GAAQic,EAAQjc,GAAQkc,GACzC,OAAM,EAId,OAAM,EAXV,CArCgCF,EAASC,EAASC,IAGtCha,MAAM7B,QAAQ2b,KAAY9Z,MAAM7B,QAAQ4b,KAIvCD,aAAmBG,MAAUF,aAAmBE,KA0B7D,SAAqBH,EAAeC,GAChC,OAAOD,EAAQI,YAAcH,EAAQG,UADzC,CAzB+BJ,EAASC,KAG3BD,aAAmBG,MAAUF,aAAmBE,QAIhDH,aAAmBK,QAAYJ,aAAmBI,OAc/D,SAAuBL,EAAiBC,GACpC,OAAOD,EAAQM,aAAeL,EAAQK,WAD1C,CAbiCN,EAASC,KAG7BD,aAAmBK,QAAYJ,aAAmBI,SAgC/D,SACIL,EACAC,EACAC,GAEA,IAAMK,EAASL,GAAWA,EAAQM,UAC5BC,EAAQF,EAASngB,OAAOge,KAAK4B,GAASO,OAAOA,GAAUngB,OAAOge,KAAK4B,GACnEU,EAAQH,EAASngB,OAAOge,KAAK6B,GAASM,OAAOA,GAAUngB,OAAOge,KAAK6B,GAEzE,GAAIQ,EAAM9hB,SAAW+hB,EAAM/hB,OACvB,OAAM,EAGV,IAAK,IAAIqF,EAAQ,EAAG,EAASyc,EAAM9hB,OAAQqF,EAAQ,EAAQA,IAAS,CAChE,IAAMoE,EAAMqY,EAAMzc,GAElB,IAAKic,EAAQxX,eAAeL,GACxB,OAAM,EAGV,IAAK2X,EAAQC,EAAQ5X,GAAM6X,EAAQ7X,GAAM8X,GACrC,OAAM,EAId,SAzBJ,CA5B6BF,EAASC,EAASC,KAGpCF,IAAYC,GAjCvB,IAAA/b,EAAA,6B,cCJA+C,EAAOD,QAAU4B,EAAQ,O,gCCAzB,6BAAA/C,KAAA,YAUe,SAAS8a,EACpBrC,EACArO,EACAiO,EACAC,wBAEA,IAAMI,EAAoB,IAAI,IAAkBL,GAEhD,MAAO,CACHjC,GAAKqC,EAAKH,GACVK,SAAUF,EAAKE,SACfC,OAAQH,EAAKsC,kBACblC,oBAAqBJ,EAAKuC,kBAC1BlC,SAAUL,EAAKwC,eACflC,cAAeL,EAAkBM,UAAUP,EAAKsC,mBAChD9B,2BAA4BP,EAAkBM,UAAUP,EAAKuC,mBAC7D5B,gBAAiBV,EAAkBM,UAAUP,EAAKwC,gBAClD/B,iBAAkBR,EAAkBM,UAAUP,EAAKyC,WACnD/B,8BAA+BT,EAAkBM,UAAUP,EAAK0C,WAChEC,iBAAmB3C,EAAqB4C,gBACxC3Z,KAAM+W,EAAK/W,KACX2X,SAAUZ,EAAKY,SACfiC,MAAO7C,EAAK6C,MACZC,IAAK9C,EAAK8C,IACVC,cAAe/C,EAAK+C,cACpB/B,UAAWhB,EAAKgB,UAChBgC,UAAWhD,EAAKgD,UAChBjC,YAAaf,EAAK4B,SAAW,IAAI7B,KAAI,YAAU,OAC3C9W,KAAMga,EAAOha,KACbjI,MAAOiiB,EAAOjiB,UAElBkiB,iBAAkBlD,EAAKkD,iBACvBvR,KAAI,K,cC1CZhJ,EAAOD,QAAU4B,EAAQ,M,6BCQV,SAAS6Y,EAA4BF,EAAwBG,GACxE,MAAO,CACHC,YAAaJ,EAAOI,YACpB1a,OAAQsa,EAAOtR,KACf2R,MAAOL,EAAOM,KACd5F,GAAIsF,EAAOtF,GACX6F,SAAUJ,EACVK,cAAeR,EAAOQ,cACtBvD,SAAU+C,EAAO/C,SACjBwD,YAAaT,EAAOS,aAd5B,mC,6BCHA,iBACI,WAAoBC,yBAKvB,OAHGja,EAAA,UAAA6W,UAAA,SAAUJ,GACN,OAAOyD,KAAKC,MAAM1D,EAASyD,KAAKE,IAAI,GAAIljB,KAAK+iB,kBAErD,EANA,G,2FCQe,SAASI,EACpBC,GAEA,OAAO,W,IAAE,sDACL,IAAMC,EAAWC,EAAKC,MAItB,OAAQH,EAAe,sCAAIE,EAAM,Y,IAAC,sDAG9B,IAAM/e,EAAS8e,EAAQ,aAAIG,GAE3B,MAAsB,mBAAXjf,EACA,SAAAkf,QAAA,CAAQlf,GAGZA,S,6BCvBnB,IAAYmf,EAAZ,IAAA1e,EAAA,qCAAY0e,GACR,EAAAC,WAAA,cADJ,CAAYD,MAAe,M,sECO3B,aACI,WACYE,yBAsCf,OAnCG,YAAAC,mBAAA,SAAmB7C,GAAnB,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAwBvR,8BAEnD,EAAKoR,eAAeC,mBAAmB7C,GAClCgD,MAAK,YACF,IAAMC,EAAO,CACTC,gBAAiBvL,EAASF,QAAQ,uBAClC0L,YAAaxL,EAASF,QAAQ,mBAGlCqL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAwBtR,4BAA6BkG,EAASH,KAAMyL,IAC/FH,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAwB3R,yBAA0BiG,WAMnG,YAAA2L,kBAAA,SAAkBC,EAAkBvD,GADpC,WAEI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAwB1R,kCAAuC,CAAEkS,SAAQ,KAEpG,EAAKX,eAAeU,kBAAkBC,EAAUvD,GAC3CgD,MAAK,YACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAwBzR,2BAA4BqG,EAASH,KAAM,CAAE+L,SAAQ,KACxGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAwB9R,wBAAyBoG,EAAU,CAAE4L,SAAQ,YAVtH,sBADC,K,sCAeL,EAxCA,GAAqB,O,6BCPrB,YAAA5d,EAAA,MAIA,aACI,WACYid,yBA0Bf,OAvBG,YAAAC,mBAAA,SAAmB,G,IAAEW,YAAO,EAAqB,GAAE,WAG/C,OAAOxkB,KAAK4jB,eAAelb,IAFf,2BAEwB,CAChC8b,QAAO,EACP/L,QAAS,CACLgM,OAAQ,IAAYrM,OACpB,iBAAkB,QAK9B,YAAAkM,kBAAA,SAAkBC,EAAkB,G,IAAEC,YAAO,EAAqB,GAAE,WAC1D5I,EAAM,4BAA4B2I,EAExC,OAAOvkB,KAAK4jB,eAAelb,IAAIkT,EAAK,CAChC4I,QAAO,EACP/L,QAAS,CACLgM,OAAQ,IAAYrM,OACpB,iBAAkB,QAIlC,EA5BA,G,oCCGe,IATmB,CAC9B,uCACA,sCACA,WACA,yBACA,WACA,uB,6BCNJ,6CAAAzR,EAAA,KAGe,SAAS+d,EACpB3T,EACA7R,EACA+kB,GAEA,OAOmBU,EAPDzlB,IAQDylB,EAAO5T,MAAQ4T,EAAOzlB,MAP5B,SAAAqG,OAAA,CAAO,SAAAqf,GAAA,CAAG1lB,GAAQ,SAAA2lB,WAAA,CAAW,SAAAR,kBAAA,CAAkBtT,EAAM7R,EAAM4lB,QAASb,KAGxE,SAAAY,WAAA,CAAW,SAAAR,kBAAA,CAAkBtT,EAAM7R,EAAO+kB,IAGrD,IAAuBU,I,wCCRvB,cACI,WAAY3Q,GAAZ,MACI,YAAMA,GAAW,qGAAmG,K,OAEpH,EAAK3L,KAAO,2BACZ,EAAK0I,KAAO,gC,EAEnB,OAPqD,yBAOtD,EAPA,C,MAAsD,G,oECFvC,SAASgU,EACpBnjB,GAgBA,OAAO,SAAA6hB,QAAA,EAdP,W,IAAgC,sDAC5B,IAAMkB,EAAS/iB,EAAGD,KAAI,MAAPC,EAAE,0BAAM5B,MAASsjB,IAEhC,OAAIqB,aAAkB,EAAAriB,WACX,SAAA0iB,KAAA,CAAKL,GAAQvhB,KAAK,SAAA6hB,YAAA,IAGP,mBAAXN,EACA,SAAAlB,QAAA,EAAQ,YAAS,gBAAAuB,KAAA,CAAKL,EAAOO,IAAQ9hB,KAAK,SAAA6hB,YAAA,OAG9CN,KCjBA,SAASQ,EAAgBC,GACpC,OAAOA,GAAmC,kBAAnBA,EAAMC,SCAlB,SAASC,EACpBC,EACArc,EACAsc,GAEA,IAAMC,EAAkB,IAAIC,QAE5B,SAASC,EAA6BC,GAAtC,WACI,OAAO,W,UAAE,kDACL,IAAMC,EAAUvC,EAAKA,EAAK7jB,OAAS,GAC3B4lB,GAAaF,EAAgBU,GAAWA,EAAU,CAAER,UAASA,IAAQ,SAE7E,IAAKA,EACD,OAAOO,EAAOjkB,KAAI,MAAXikB,EAAM,0BAAM,GAAStC,IAGhC,IAAMwC,EAAkBL,EAAgB/c,IAAI,IAAS,GAUrD,OARK+c,EAAgB/c,IAAI,IACrB+c,EAAgBM,IAAI,EAAMD,GAGzBA,EAAgB5c,KACjB4c,EAAgB5c,GAAO6b,EAAYa,KAGhC,IAAgB1c,IAAKvH,KAAI,kCAAC,GAAS2hB,KAIlD,MAAO,CACH5a,IAAG,WACC,GAAgC,mBAArB8c,EAAWplB,MAClB,MAAM,IAAI0B,MAAM,yCAGpB,IAAM1B,EAAQulB,EAAehkB,KAAK3B,KAAMwlB,EAAWplB,OAInD,OAFAc,OAAOsH,eAAexI,KAAMkJ,EAAK,yCAAKsc,GAAU,CAAEplB,MAAK,KAEhDA,I,+ECCZ,SAAS4lB,EAAsCT,EAAWrc,EAAasc,GAC1E,GAAgC,mBAArBA,EAAWplB,MAClB,OAAOolB,EAGX,IAAII,EAAYJ,EAAWplB,MAE3B,MAAO,CACHsI,eACI,IAAMud,EAAcL,EAAOzkB,KAAKnB,MAOhC,OALAkB,OAAOsH,eAAexI,KAAMkJ,EAAK,yCAC1Bsc,GAAU,CACbplB,MAAO6lB,KAGJA,GAEXF,IAAG,SAAC3lB,GACAwlB,EAASxlB,IAjDN,IARf,SAAuB8lB,EAAahd,EAAWsc,GAC3C,OAAKtc,GAAQsc,EAINQ,EAAoBE,EAAQhd,EAAKsc,GASrC,SAA2DU,GAC9D,IAAMC,EAAe,YAAG,a,+CAAuB,OAAT,sBAAArd,GAAQ,EAAzB,CAAiBA,GAiBtC,OAfA5H,OAAOklB,oBAAoBF,EAAO5c,WAC7BxG,SAAQ,YACL,IAAM0iB,EAAatkB,OAAOmlB,yBAAyBH,EAAO5c,UAAWJ,GAEhEsc,GAAsB,gBAARtc,GAInBhI,OAAOsH,eACH2d,EAAgB7c,UAChBJ,EACA8c,EAAoBE,EAAO5c,UAAWJ,EAAKsc,OAIhDW,EAlBJ,CAZ2BD,K,6BCRlC,6BAAAvf,KAAA,YAWe,SAAS2f,EAAsBC,EAAoBC,GAC9D,IAAMxJ,EAAYuJ,EAASvJ,WAAawJ,EAAexJ,WAAa,GAC9DC,EAAWsJ,EAAStJ,UAAYuJ,EAAevJ,UAAY,GAEjE,MAAO,CACHwJ,WAAYF,EAASE,WAAa,IAAItH,KAAI,YAAW,mBAAqBvC,MAC1E8J,WAAYH,EAASxJ,GACrB4J,QAASJ,EAASI,QAClBC,YAAaL,EAASK,YACtBC,MAAON,EAASM,OAASL,EAAeK,OAAS,GACjD7J,UAAS,EACTC,SAAQ,EACR5U,KAAMke,EAASO,UAAY,CAAC9J,EAAWC,GAAU4B,KAAK,KACtDkI,kBAAmBR,EAASS,eAAiBT,EAASS,cAAc3e,Q,0GCP7D,SAAS4e,EAAmBC,EAAcC,sBACrD,IAkF2BC,EACrBC,EAnFArI,EAAgBkI,EAAMI,SAAStI,cAC/BK,EAAoB,IAAI,IAAkBL,GAEhD,MAAO,CACHjC,GAAImK,EAAMK,QACVF,MAAO,YAAuBH,EAAMM,UAAWN,EAAMI,SAAStI,cAAe,aAC7EuI,QAASL,EAAMK,QACfD,SAAUJ,EAAMI,SAASG,KACzBC,qBAAsBR,EAAMQ,qBAC5BC,QAASC,EAA0BV,EAAME,SAAUD,EAAUQ,SAC7DE,SAAU,CACNtI,OAAQ2H,EAAMY,WACdpI,cAAeL,EAAkBM,UAAUuH,EAAMY,aAErDC,OAAQ,CACJC,iBAAkB,SAAAhiB,OAAA,CAAOkhB,EAAMe,SAAS,SAACC,EAAKH,GAC1C,OAAOG,EAAMH,EAAOC,mBACrB,GACHC,QAASf,EAAMe,QAAQ9I,IAAI,MAE/BM,SAAU,CACNF,OAAQ2H,EAAMtF,eACdlC,cAAeL,EAAkBM,UAAUuH,EAAMtF,iBAErDvI,MAAO8N,EAAUgB,WACjBC,YAAajB,EAAUiB,YACvBC,sBAAuB,GACvBC,iBAuDuBlB,EAvDgBF,EAAME,SAwD3CC,EAAQ,SAAAhG,OAAA,CAAO+F,EAAU,CAAEmB,WAAY,oBAEtC,CACHC,sBAAuB,SAAAxiB,OAAA,CAAOqhB,GAAO,SAACa,EAAK9I,GAAS,SAAKG,OAAS2I,IAAK,GACvEO,wBAAyB,SAAAC,MAAA,CAAMrB,EAAMlI,KAAI,YAAQ,OAC7CsI,KAAMrI,EAAKuJ,OAAOlB,KAClBO,iBAAkB5I,EAAKG,OACvBqJ,iBAAkBxJ,EAAKuJ,OAAOE,UAC9BP,gBAAiB,CACbQ,QAAS1J,EAAKG,OAASH,EAAKuJ,OAAOE,UACnCpB,KAAMrI,EAAKuJ,OAAOlB,KAClBsB,aAAc,QAEjB,UApELC,WAAYC,EAA4B/B,GACxCxO,OAAQwO,EAAMxO,OACdwQ,gBAAiBhC,EAAMgC,gBACvBC,eAAgBjC,EAAMiC,eACtBC,WAAYlC,EAAMkC,WAClBC,SAAU,CACN9J,OAAQ2H,EAAMoC,kBACd5J,cAAeL,EAAkBM,UAAUuH,EAAMoC,mBACjDC,qBAAsBrC,EAAMsC,2BAC5BC,4BAA6BpK,EAAkBM,UAAUuH,EAAMsC,6BAEnE5C,YAAa,CACTrH,OAAQmK,EAAiBxC,EAAME,WAEnCuC,MAAOzC,EAAMyC,MACbC,SAAU,CACNrK,OAAQ2H,EAAM0C,SACdlK,cAAeL,EAAkBM,UAAUuH,EAAM0C,WAErDC,SAAU,CACNtK,OAAQ2H,EAAM4C,kBACdpK,cAAeL,EAAkBM,UAAUuH,EAAM4C,oBAErDC,WAAY,CACRxK,OAAQ2H,EAAM8C,YACdtK,cAAewH,EAAM+C,uBAmBjC,SAASC,EAA2BxR,GAChC,MAAO,kBAAkBA,EAG7B,SAASgR,EAAiBtC,GACtB,IAAMhI,EAAO,SAAA+K,KAAA,CAAK/C,EAAU,CAAEmB,WAAY,gBAE1C,OAAOnJ,EAAOA,EAAKG,OAAS,EAqBhC,SAASqI,EAA0BR,EAA0BO,sBACzD,IAAMvI,EAAO,SAAA+K,KAAA,CAAK/C,EAAUgD,GAE5B,OAAKhL,EAIE,CACHrC,GAAIqC,EAAKmJ,WACT7P,OAAQwR,EAA2B9K,EAAKuJ,OAAO0B,MAC/CC,SAAUlL,EAAKuJ,OAAO4B,aACtBC,UAAW7C,EAAQ6C,WAPZ,GAWf,SAASJ,EAAsBzC,GAC3B,MAA8B,oBAAvBA,EAAQY,YAA2D,gBAAvBZ,EAAQY,WAG/D,SAASU,EAA4B/B,GACjC,IAAMuD,EAAiE,GAUvE,OATc,yBACPvD,EAAMM,UAAUkD,cAChBxD,EAAMM,UAAUmD,cAGjB7nB,SAAQ,YAOlB,IAAiC8nB,EANzBH,EAAiBrL,EAAKrC,KAMG6N,EAN2BxL,EAO1C,CAAC,KAAM,KAAM,MAEdpZ,QAAO,SAACgjB,EAAYvB,GAC7B,IAAMrI,EAAOwL,EAASC,aAAe,SAAAV,KAAA,CAAKS,EAASC,aAAa,YAAQ,SAAKpD,OAASA,KAEtF,OAAKrI,GAIL4J,EAAWvB,GAAQ,CACfpf,KAAMuiB,EAASviB,KACfoa,YAAamI,EAASviB,KACtByiB,MAAOF,EAAStL,SAChB1D,IAAKwD,EAAK2L,KACVC,UAAW5L,EAAK6L,KAChBC,YAAa9L,EAAK2L,KAClBI,YAAa/L,EAAKgM,QAClBC,YAAajM,EAAKqI,MAGfuB,GAdIA,IAeZ,QAzBIyB,E,iFCrII,SAASa,EAAkBC,GACtC,ICZ+CC,EACzCC,EDWAzM,EAAgBuM,EAASG,KAAKpE,SAAStI,cACvCK,EAAoB,IAAI,IAAkBL,GAEhD,MAAO,CACHjC,GAAIwO,EAASG,KAAK3O,GAClBsK,MAAO,YAAuBkE,EAASG,KAAKlE,UAAWxI,GACvDsI,SAAUiE,EAASG,KAAKpE,SAASG,KACjCM,OAAQ,CACJC,iBAAkB,OAAArf,EAAA3C,OAAA,CAAOulB,EAASG,KAAKzD,SAAS,SAACC,EAAKH,GAClD,OAAOG,EAAMH,EAAOC,mBACrB,GACHC,QAASsD,EAASG,KAAKzD,QAAQ9I,IAAI,MAEvCM,SAAU,CACNF,OAAQgM,EAASG,KAAK9J,eACtBlC,cAAeL,EAAkBM,UAAU4L,EAASG,KAAK9J,iBAE7DyG,uBC7B2CmD,ED6BOD,EAASC,WC5BzDC,EAAwC,IAE7CD,GAAc,IAAI1oB,SAAQ,aACtB6oB,EAAUC,SAAW,IAAI9oB,SAAQ,YAC9B2oB,EAAcjmB,KAAK,CACfqmB,aAAc,GACdC,aAAc,KACd9X,QAAS,GACT+X,YAAaC,EAAOf,aAKzBQ,GDgBHnD,gBAAiB,CACbE,sBAAuB,OAAA7f,EAAA3C,OAAA,CAAOulB,EAASU,kBAAkB,SAAC/D,EAAKgE,GAC3D,OAAOhE,EAAMgE,EAAYC,OAC1B,GACH1D,wBAAyB,SAAAC,MAAA,CAAM6C,EAASU,iBAAiB9M,IAAI,KAA+B,SAEhGkK,SAAU,CACN9J,OAAQgM,EAASjC,kBACjB5J,cAAeL,EAAkBM,UAAU4L,EAASjC,mBACpDC,qBAAsBgC,EAAS/B,2BAC/BC,4BAA6BpK,EAAkBM,UAAU4L,EAAS/B,4BAClE4C,SAAU,SAAAC,KAAA,CAAKd,EAASG,KAAKlE,UAAUkD,eAAe,YAAY,SAAS4B,uBAE/EzE,SAAU,CACNtI,OAAQgM,EAAS1D,SACjBnI,cAAeL,EAAkBM,UAAU4L,EAAS1D,WAExDjB,YAAa,CACTrH,OAAQgM,EAAShF,SAAWgF,EAAShF,SAASK,YAAc,GAEhE2F,YAAa,CACThN,OAAQgM,EAAS3B,SACjBlK,cAAeL,EAAkBM,UAAU4L,EAAS3B,WAExDD,MAAO4B,EAAS5B,MAChBC,SAAU,CACNrK,OAAQgM,EAAS3B,SACjBlK,cAAeL,EAAkBM,UAAU4L,EAAS3B,WAExDC,SAAU,CACNtK,OAAQgM,EAASzB,kBACjBpK,cAAeL,EAAkBM,UAAU4L,EAASzB,oBAExDC,WAAY,CACRxK,OAAQgM,EAASxB,WACjBrK,cAAeL,EAAkBM,UAAU4L,EAASxB,cArEhE,mC,eEAAhiB,EAAOD,QAAU4B,EAAQ,O,6BCyGzB,IAAY8iB,EAOAC,EAUAC,EAiBAC,EAOAC,EAzCZ,IAAA5nB,EAAA,gCAAAA,EAAA,gCAAAA,EAAA,qCAAYwnB,GACR,EAAAK,GAAA,KACA,EAAAC,GAAA,KACA,EAAAC,GAAA,KACA,EAAAC,GAAA,KAJJ,CAAYR,MAAkB,KAO9B,SAAYC,GACR,EAAAQ,MAAA,QACA,EAAAC,MAAA,QACA,EAAAC,MAAA,QACA,EAAAC,MAAA,QACA,EAAAC,MAAA,QACA,EAAAC,MAAA,QACA,EAAAC,MAAA,QAPJ,CAAYd,MAA2B,KAUvC,SAAYC,GAER,EAAAc,KAAA,OAGA,EAAAC,QAAA,UAGA,EAAAC,KAAA,OAGA,EAAAC,SAAA,WAGA,EAAAC,MAAA,QAdJ,CAAYlB,MAAoB,KAiBhC,SAAYC,GACR,EAAAkB,IAAA,MACA,EAAAC,IAAA,MACA,EAAAC,IAAA,MACA,EAAAC,IAAA,MAJJ,CAAYrB,MAAyB,KAOrC,SAAYC,GAER,EAAAqB,WAAA,aAGA,EAAAC,QAAA,UALJ,CAAYtB,MAAqB,M,gDC3IjC,aACI,WACYuB,EACAC,0BADAD,qBACAC,eAkGf,OA/FG,YAAAC,WAAA,sBACI,OAAOruB,KAAKmuB,cACPG,WAAW,yDACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQG,YAAczlB,EAAKslB,QAAQG,UAAUC,OACnD,MAAM,IAAI,IAGd,OAAO1lB,EAAKslB,QAAQG,UAAUC,WAI1C,YAAAC,QAAA,sBACI,OAAOzuB,KAAKmuB,cACPG,WAAW,iEACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQG,YAAczlB,EAAKslB,QAAQG,UAAUG,aACnD,MAAM,IAAI,IAGd,OAAO5lB,EAAKslB,QAAQG,UAAUG,iBAI1C,YAAAC,kBAAA,sBACI,OAAO3uB,KAAKmuB,cACPG,WAAW,iEACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQG,YAAczlB,EAAKslB,QAAQG,UAAUK,cACnD,MAAM,IAAI,IAGd,OAAO9lB,EAAKslB,QAAQG,UAAUK,kBAI1C,YAAAC,WAAA,sBAEI,OAAO7uB,KAAKmuB,cACPG,WAAW,yDACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQG,YAAczlB,EAAKslB,QAAQG,UAAUO,OACnD,MAAM,IAAI,IAGd,OAAOhmB,EAAKslB,QAAQG,UAAUO,WAI1C,YAAAC,mBAAA,sBAEI,OAAO/uB,KAAKmuB,cACPG,WAAW,kEACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQG,YAAczlB,EAAKslB,QAAQG,UAAUS,eACnD,MAAM,IAAI,IAGd,OAAOlmB,EAAKslB,QAAQG,UAAUS,mBAI1C,YAAAC,iBAAA,sBACI,OAAOjvB,KAAKmuB,cACPG,WAAW,gEACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQG,YAAczlB,EAAKslB,QAAQG,UAAUW,aACnD,MAAM,IAAI,IAGd,OAAOpmB,EAAKslB,QAAQG,UAAUW,iBAI1C,YAAAC,kBAAA,sBACI,OAAOnvB,KAAKmuB,cACPG,WAAW,iEACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQG,YAAczlB,EAAKslB,QAAQG,UAAUa,cACnD,MAAM,IAAI,IAGd,OAAOtmB,EAAKslB,QAAQG,UAAUa,kBAIpC,YAAAC,iBAAN,W,gIACI,SAAMrvB,KAAKmuB,cAAcG,WAAW,iE,OAEpC,GAFA,UAEKtuB,KAAKouB,QAAQG,YAAcvuB,KAAKouB,QAAQG,UAAUe,aACnD,MAAM,IAAI,IAGd,MAAO,CAAP,EAAOtvB,KAAKouB,QAAQG,UAAUe,sBAEtC,EArGA,G,wDCSA,aAaI,WACYC,iCAPJ,KAAAC,gBAGJ,GAiJP,OA1IG,YAAAC,WAAA,SAAWC,GACP1vB,KAAK2vB,aAAeD,GAGxB,YAAAE,UAAA,sBACI,IAAK5vB,KAAK2vB,aACN,MAAM,IAAI,IAAoB,IAAwBE,uBAQ1D,OALK7vB,KAAK8vB,UACN9vB,KAAK8vB,QAAU9vB,KAAKuvB,uBAAuBlB,aACtCrK,MAAK,YAAU,SAAO/jB,OAAO,CAAE8vB,cAAejnB,EAAK6mB,mBAGrD3vB,KAAK8vB,SAGhB,YAAAE,UAAA,WASI,OARKhwB,KAAKiwB,UACNjwB,KAAKiwB,QAAUxsB,QAAQysB,IAAI,CACvBlwB,KAAK4vB,YACL5vB,KAAKuvB,uBAAuBV,eAE3B7K,MAAK,SAAC,G,IAACwK,EAAM,KAAc,OAAN,KAAavuB,OAAO,CAAEuuB,OAAM,QAGnDxuB,KAAKiwB,SAGhB,YAAAE,kBAAA,SAAkB9uB,EAAgB+uB,GAe9B,OAdKpwB,KAAKqwB,kBACNrwB,KAAKqwB,gBAAkB5sB,QAAQysB,IAAI,CAC/BlwB,KAAK4vB,YACL5vB,KAAKuvB,uBAAuBR,uBAE3B/K,MAAK,SAAC,G,IAACwK,EAAM,KAAsB,OAAN,KAAqBvuB,OAAO,CAAEuuB,OAAM,IAAI,SAACjuB,EAAgB+vB,GACnFA,EAASC,cAAc,CACnBjJ,SAAUjmB,EAAOimB,WAClB,WACC8I,EAAqBE,aAK9BtwB,KAAKqwB,iBAGhB,YAAAG,OAAA,WASI,OARKxwB,KAAKywB,OACNzwB,KAAKywB,KAAOhtB,QAAQysB,IAAI,CACpBlwB,KAAK4vB,YACL5vB,KAAKuvB,uBAAuBd,YAE3BzK,MAAK,SAAC,G,IAACwK,EAAM,KAAoB,OAAN,KAAmBvuB,OAAO,CAAEuuB,OAAM,EAAEkC,QAAS,QAG1E1wB,KAAKywB,MAGhB,YAAAE,iBAAA,SAAiB3P,GACb,IAAM4P,EAAW5P,GAAWA,EAAQ8N,OAAS,SAAW,UACpD+B,EAAS7wB,KAAKwvB,gBAAgBoB,GAmBlC,OAjBKC,IACDA,EAASptB,QAAQysB,IAAI,CACjBlwB,KAAK4vB,YACL5vB,KAAKuvB,uBAAuBZ,sBAE3B3K,MAAK,SAAC,G,IAACwK,EAAM,KAAqB,OAAN,KAAoBvuB,OAAO,oBAAEuuB,OAAM,EAAEsC,OAAMA,GAAU9P,OACjFoD,OAAM,YACH,GAAIllB,GAAwB,qCAAfA,EAAMuoB,KACf,MAAO,CAAEsJ,gBAAWA,EAAYtrB,SAAU,WAAM,OAAAhC,QAAQR,YAG5D,MAAM/D,KAGdc,KAAKwvB,gBAAgBoB,GAAYC,GAG9BA,GAGX,YAAAG,gBAAA,WASI,OARKhxB,KAAKixB,gBACNjxB,KAAKixB,cAAgBxtB,QAAQysB,IAAI,CAC7BlwB,KAAK4vB,YACL5vB,KAAKuvB,uBAAuBN,qBAE3BjL,MAAK,SAAC,G,IAACwK,EAAM,KAAoB,OAAN,KAAmBvuB,OAAO,CAAEuuB,OAAM,QAG/DxuB,KAAKixB,eAGhB,YAAAC,0BAAA,WASI,OARKlxB,KAAKmxB,aACNnxB,KAAKmxB,WAAa1tB,QAAQysB,IAAK,CAC3BlwB,KAAK4vB,YACL5vB,KAAKuvB,uBAAuBJ,sBAE3BnL,MAAK,SAAC,G,IAACwK,EAAM,KAAiB,OAAN,KAAgBvuB,OAAO,CAAEuuB,OAAM,QAGzDxuB,KAAKmxB,YAGV,YAAAC,mBAAN,SACIpQ,G,wIAE+B,SAAMvd,QAAQysB,IAAI,CAC7ClwB,KAAK4vB,YACL5vB,KAAKuvB,uBAAuBF,sB,OAGhC,OALM,EAAyB,SAAxBb,EAAM,KAKN,CAAP,EAL2B,KAKPvuB,OAAO,yCAAK+gB,GAAO,CAAEwN,OAAM,cAGnD1lB,EAAA,UAAArD,SAAA,eAAAqD,EAAA,KACI,OAAOrF,QAAQysB,IAAI,CACflwB,KAAKqxB,UAAUrxB,KAAKywB,MACpBzwB,KAAKqxB,UAAUrxB,KAAKwvB,gBAAgBzoB,SACpC/G,KAAKqxB,UAAUrxB,KAAKwvB,gBAAgBV,QACpC9uB,KAAKqxB,UAAUrxB,KAAKixB,eACpBjxB,KAAKqxB,UAAUrxB,KAAKmxB,cACrBnN,MAAK,WACJlb,EAAK2nB,YACL3nB,EAAKmoB,qBACLnoB,EAAK0mB,gBAAkB,GACvB1mB,EAAKqoB,sBAIL,YAAAE,UAAR,SAAkBtpB,GACd,OAAOA,EACHA,EAAOic,MAAK,YAAO,SAAIve,cACvBhC,QAAQR,WAEpB,EA3JA,G,oCCdA,IAAYquB,EAAZ,IAAAtsB,EAAA,qCAAYssB,GACR,EAAAC,gBAAA,mBADJ,CAAYD,MAAwB,M,6BCErB,SAASE,EAAqB5U,GAGzC,YAAO,IAFgBA,EAEMG,GAHjC,IAAA/X,EAAA,6B,6BCFA,IAEA,2BA+BC,OA9BG,YAAAysB,OAAA,SAAOrxB,GACG,MAA0BA,EAAMsxB,MAAM,IAAIvQ,OAAO,cAAhD,kBAAQ,KAAE,EAAE,kBAAO,KAAE,EACtBwQ,EAAeC,EAAMlrB,MAAM,EAAG,GAC9BmrB,EAA8B,IAAhBC,EAAKryB,OAAeqyB,EAAKprB,OAAO,GAAMorB,EAAOA,EAAKprB,MAAM,EAAG,GAAKkrB,EAAMlrB,MAAM,GAGhG,OAAItG,EAAMX,OAAS,EACRmyB,EAIPxxB,EAAMX,OAAS,IAAMoyB,EACdF,EAGDA,EAAY,MAAwBE,GAGlD/oB,EAAA,UAAAipB,SAAA,SAAS3xB,GACC,MAA0BA,EAAMsxB,MAAM,IAAIvQ,OAAO,cAAhD,kBAAQ,KAAE,EAAE,kBAAO,KAAE,EAE5B,MAAK,QAAQtF,KAAK+V,IAAW,QAAQ/V,KAAKiW,GAInC,CACHF,MAAwB,IAAjBA,EAAMnyB,OAAe,IAAImyB,EAAUA,EAAMlrB,MAAM,EAAG,GACzDorB,KAAsB,IAAhBA,EAAKryB,OAAe,KAAKqyB,EAASA,EAAKprB,MAAM,EAAG,IAL/C,CAAEkrB,MAAO,GAAIE,KAAM,KAQtC,EA/BA,G,oCCJA,YAAAnrB,EAAA,KAKA,2BA8BC,OA7BG,YAAA8qB,OAAA,SAAOrxB,GACK,MAAS,SAAA4xB,OAAA,CAAO5xB,GAAM,KAE9B,IAAK6xB,EACD,OAAO7xB,EAGX,IAAM8xB,EAAY,SAAAC,IAAA,CAAI,SAAAC,eAAA,CAAehyB,GAAO+e,KAAI,YAAQ,gBAAAgT,IAAA,CAAIE,EAAKC,aAC3DC,EAAmBvyB,KAAKwyB,SAASpyB,GAAOsG,MAAM,EAAGwrB,GAEvD,OAAOD,EAAKQ,KACPpR,QAAO,YAAY,SAAiB5hB,OAASizB,KAC7C1sB,QAAO,SAAC2sB,EAAQD,EAAU5tB,GAAU,MACjC,CACI6tB,EAAOjsB,MAAM,EAAGgsB,EAAW5tB,GAC3B6tB,EAAOjsB,MAAMgsB,EAAW5tB,IAC1B+Z,KAnBO,OAoBV0T,IAGX,YAAAC,SAAA,SAASpyB,GAGL,OAFiB,SAAA4xB,OAAA,CAAO5xB,GAAM,KAMvBA,EAAMwyB,QAAQ,IAAIzR,OA9BR,IA8BiC,KAAM,IAH7C/gB,GAKnB,EA9BA,G,oCCFA,sCAAMyyB,EAAc,CAChB,oBACA,sBACA,qBACA,oBACA,iBAQW,SAASC,EAAoB/K,GACxC,MAAO,CACHN,KAAMM,EAAON,KACbhI,SAAUsI,EAAOgL,YACjBjH,aAAc+G,EAAYjtB,QAAQmiB,EAAOiL,e,6BCpBjD,6BAAArsB,KAAA,YAGe,SAASssB,EAAUrX,GAC9B,OAAO,YAC6B,IAAhCA,EAAIO,SAASvW,QAAQ,OACjBgW,EAAIK,KACJL,EAAIK,KAAK2W,QAAQhX,EAAIO,SAAU,OAAOP,EAAIO,a,mECL1C+W,E,gBAAZ,SAAYA,GACR,IAAAC,6BAAA,kCACA,IAAAC,uBAAA,4BACA,IAAAvD,sBAAA,2BACA,IAAAwD,uBAAA,4BACA,IAAAC,6BAAA,kCALJ,CAAYJ,MAAuB,KAanC,kBACI,WACWpiB,GADX,MAGI,YAOR,SAAyBC,GACrB,OAAQA,GACR,KAAKmiB,EAAwBE,uBACzB,MAAO,oFAEX,KAAKF,EAAwBrD,sBACzB,MAAO,mFAEX,KAAKqD,EAAwBG,uBACzB,MAAO,oFAEX,KAAKH,EAAwBI,6BACzB,MAAO,mFAEX,QACI,MAAO,8EAff,CAP8BxiB,KAAS,K,OAFxBA,YAIP,EAAKzI,KAAO,sBACZ,EAAK0I,KAAO,kB,EAEnB,OATgD,yBASjD,EATA,CAAiD,K,8DCTlC,SAASwiB,EACpBC,EACAC,GAEA,YAAO,IAFPA,UAEOzsB,MAAM7B,QAAQsuB,GACjB,YAAa,yBACND,EACAC,ICLA,SACXD,EACAE,GAEA,IAAMC,EAAY,SAAAzU,KAAA,CAAK,SAAA0U,OAAA,CAAOF,GAAoB,YAAM,OAACG,MACnDC,EAAY,SAAA5U,KAAA,CAAK,SAAAmC,OAAA,CAAOqS,IAE9B,OAAO,YAAa,yBACT,SAAAK,WAAA,CAAWP,EAAcG,GACzBG,IATA,CDOON,EAAcC,G,8DEfpC1rB,EAAOD,QAAU4B,EAAQ,O,cCAzB3B,EAAOD,QAAU4B,EAAQ,M,6BCAzB,6BAAA/C,KAAA,WAEe,SAASqtB,EAAS5qB,EAAa6qB,GAC1C,OAAIjtB,MAAM7B,QAAQiE,GACPA,EAAO+V,KAAI,YAAS,SAAS/e,EAAO6zB,MAG3C,SAAAna,cAAA,CAAc1Q,GACP,SAAA8qB,UAAA,CAAU,SAAAC,OAAA,CAAO/qB,EAAQ6qB,IAAY,SAAC1vB,EAAQnE,EAAO8I,GACxD3E,EAAO2E,GAAO8qB,EAAS5zB,EAAO6zB,KAC/B,IAGA7qB,I,qFCEX,aACI,WACYgrB,EACAC,EACAC,GAFAF,8BACAC,4BACAC,gCA8Ef,OA3EG,YAAAC,aAAA,SAAaxX,EAAYiE,GAAzB,WACI,OAAO,SAAAzb,OAAA,CACH,OAAAgD,EAAAqc,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmB9S,wBACnC,SAAAujB,MAAA,CACIx0B,KAAKq0B,qBAAqBI,WAAW,yCAAKzT,GAAO,CAAEqE,UAASA,KAC5DrlB,KAAKs0B,yBAAyBI,eAAe,yCAAK1T,GAAO,CAAEqE,UAASA,KACpE,SAAAsP,MAAA,EAAM,WAAM,SAAKP,uBAAuBG,aAAaxX,EAAIiE,GACpDgD,MAAK,SAAC,G,IAAExL,EAAI,OAAO,gBAAAuL,aAAA,CAAa,IAAmB7S,sBAAuBsH,WAErFpV,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAmBzjB,mBAAoBjS,QAIpF,YAAA21B,oBAAA,SAAoB7T,GAApB,WACI,OAAO,YAAS,gBAAAzb,OAAA,CACZ,OAAAgD,EAAAqc,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmB9S,wBACnC,SAAAujB,MAAA,CACI,EAAKH,qBAAqBI,aAC1B,EAAKH,yBAAyBI,eAAe,yCAAK1T,GAAO,CAAEqE,UAASA,MAExE,SAAAsP,MAAA,EAAM,kE,gFAIF,GAHMG,EAAQ5P,EAAM6P,aACd/zB,EAAU8zB,EAAMzzB,OAAO2zB,sBAEZh0B,EAAQi0B,WACrB,MAAM,IAAI,IAAiB,IAAqB5kB,uBAGnC,SAAMrQ,KAAKo0B,uBAAuBG,aAAavzB,EAAQi0B,WAAYjU,I,OAEpF,OAFQxI,EAAS,SAA2E,KAErF,CAAP,EAAO,SAAAuL,aAAA,CAAa,IAAmB7S,sBAAuBsH,eAEpEpV,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAmBzjB,mBAAoBjS,SAIpF,YAAAg2B,eAAA,SACI1c,EACAwI,GAFJ,WAII,OAAO,YAAS,WAAI,EAAA1e,YAAW,SAAAiG,GAC3B,IACMgjB,EADQrG,EAAM6P,WACGxJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAmB3S,0BAE9C,EAAKgjB,uBAAuBc,eAAe3J,EAASxO,GAAIvE,EAAMwI,GACzDgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAmB1S,wBAAyBmH,IACvEsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAmB/S,qBAAsBqH,YAK1F,YAAAyc,oBAAA,SAAoBpU,GAApB,WACI,OAAO,YACH,IACMuK,EADQrG,EAAM6P,WACGxJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,OAAO,EAAKqkB,aAAahJ,EAASxO,GAAIiE,KAGlD,EAlFA,G,oGCDA,aACI,WACYqU,EACAjB,GADAiB,iCACAjB,8BAyVf,OAtVG,YAAAkB,uBAAA,SACIC,EACAvU,GAFJ,WAII,OAAO,YACH,IAAM8T,EAAQ5P,EAAM6P,WAGpB,IAFiBD,EAAMvJ,SAAS4J,cAG5B,MAAM,IAAI,IAAiB,IAAqBjlB,iBAGpD,IAAMslB,EAAsBV,EAAMjY,aAAa4Y,wBAAwBF,EAAYG,iBAEnF,IAAKF,EACD,MAAM,IAAI,IAAqB,kDAGnC,IAAMhO,EAAY,EAAKmO,iBACnBJ,EAAY/N,UACZgO,EACAV,EAAMpJ,KAAKkK,WAGf,OAAKpO,EAAU/nB,OAIR,EAAKo2B,kBAAkB,CAC1B9Y,GAAIyY,EAAoBzY,GACxB2Y,gBAAiBH,EAAYG,gBAC7BlO,UAAS,GAHN,GAIKtC,GAPD,EAAK4Q,kBAAkBN,EAAoBzY,GAA3C,GAAwDmI,KAW3E,YAAA6Q,qBAAA,SACIR,EACAvU,GAFJ,WAII,OAAO,YACH,IAAM8T,EAAQ5P,EAAM6P,WACdS,EAAsBV,EAAMjY,aAAa4Y,wBAAwBF,EAAYG,iBAEnF,OAAO,EAAKM,2BAA2B,CACnCjZ,GAAIyY,GAAuBA,EAAoBzY,GAC/C2Y,gBAAiBH,EAAYG,gBAC7BlO,UAAW,EAAKyO,cACZV,EAAY/N,UACZgO,EACAV,EAAMpJ,KAAKkK,YANZ,GAQK1Q,KAIpB,YAAAgR,qBAAA,SACInZ,EACAiE,GAFJ,WAII,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMgR,EAAQ5P,EAAM6P,WACdxJ,EAAWuJ,EAAMvJ,SAAS4J,cAC1BtY,EAAeiY,EAAMjY,aAAasZ,kBAExC,IAAK5K,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,IAAK2M,IAAiBA,EAAapd,OAC/B,MAAM,IAAI,IAAiB,IAAqB0Q,qBAGpD,IAAMimB,EAAwB,CAC1BrZ,GAAIF,EAAa,GAAGE,GACpBsZ,iBAAkBtZ,GAGhBuZ,EAAkB,CACpBvZ,GAAIF,EAAa,GAAGE,IAGxB+G,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsB1Z,qCAA0CisB,IAE3F,EAAKjB,0BAA0BQ,kBAAkBtK,EAASxO,GAAIqZ,EAAuBpV,GAChFgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CACV,IAAsBzZ,8BACtBkO,EACA8d,IAGJxS,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CACX,IAAsB9Z,2BACtBoO,EACA2d,YAMpB,YAAAC,oBAAA,SAAoBvV,GAApB,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMyH,EAAWrG,EAAM6P,WAAWxJ,SAAS4J,cAE3C,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsBvZ,+BAEjD,EAAK4pB,uBAAuBG,aAAahJ,EAASxO,GAAI,yCAC/CiE,GAAO,CACVwV,OAAQ,CACJC,QAAS,CAAC,IAAiBC,8BAGlC1S,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsBtZ,6BAA8B+N,IAC/EsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAsB3Z,0BAA2BiO,YAK9F,YAAAge,cAAA,SACI/Z,EACAoE,GAFJ,WAII,OAAO,YACH,IAAMuU,EAAc,EAAKqB,6BAA6Bha,EAASsI,GACzDrI,EAAeqI,EAAM6P,WAAWlY,aAAasZ,kBAMnD,OAJItZ,GAAgBA,EAAapd,SAC5B81B,EAA6CxY,GAAKF,EAAa,GAAGE,IAGhE,EAAKiZ,2BAA2BT,EAAhC,GAAsDrQ,KAIrE,YAAA2R,mBAAA,SACIha,EACAmE,GAFJ,WAII,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMyH,EAAWrG,EAAM6P,WAAWxJ,SAAS4J,cAE3C,IAAK5J,IAAaA,EAASxO,GACvB,MAAM,IAAI,IAAiB,IAAqB7M,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsBna,8BAEjD,EAAKyrB,0BAA0BwB,mBAAmBtL,EAASxO,GAAIF,EAAcmE,GACxEgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsBla,4BAA6B2O,IAC9EsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAsBva,yBAA0B6O,YAKjG,YAAAkd,kBAAA,SACIN,EACAvU,GAFJ,WAII,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMyH,EAAWrG,EAAM6P,WAAWxJ,SAAS4J,cAE3C,IAAK5J,IAAaA,EAASxO,GACvB,MAAM,IAAI,IAAiB,IAAqB7M,iBAGpD,IAAMomB,EAAkB,CAAEvZ,GAAIwY,EAAYxY,IAE1C+G,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsBha,kCAAuCusB,IAExF,EAAKjB,0BAA0BQ,kBAAkBtK,EAASxO,GAAIwY,EAAavU,GACtEgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsB/Z,2BAA4BwO,EAAM8d,IACnFxS,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAsBpa,wBAAyB0O,EAAU2d,YAK1G,YAAAR,kBAAA,SACIgB,EACA9V,GAFJ,WAII,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMyH,EAAWrG,EAAM6P,WAAWxJ,SAAS4J,cACrCmB,EAAkB,CAAEvZ,GAAI+Z,GAE9B,IAAKvL,IAAaA,EAASxO,GACvB,MAAM,IAAI,IAAiB,IAAqB7M,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsB7Z,kCAAuCosB,IAExF,EAAKjB,0BAA0BS,kBAAkBvK,EAASxO,GAAI+Z,EAAe9V,GACxEgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsB5Z,2BAA4BqO,EAAM8d,IACnFxS,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAsBja,wBAAyBuO,EAAU2d,YAK1G,YAAAS,qBAAA,SACIxB,EACAvU,GAFJ,WAII,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMyH,EAAWrG,EAAM6P,WAAWxJ,SAAS4J,cAE3C,IAAK5J,IAAaA,EAASxO,GACvB,MAAM,IAAI,IAAiB,IAAqB7M,iBAGpD,IAAMomB,EAAkB,CAAEvZ,GAAIwY,EAAYxY,IAE1C+G,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsB1Z,qCAA0CisB,IAE3F,EAAKjB,0BAA0BQ,kBAAkBtK,EAASxO,GAAIwY,EAAavU,GACtEgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAsBzZ,8BAA+BkO,EAAM8d,IACtFxS,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAsB9Z,2BAA4BoO,EAAU2d,YAKrG,YAAAN,2BAAR,SACIT,EACAvU,GAFJ,WAII,OAAO,YACH,IAAMuK,EAAWrG,EAAM6P,WAAWxJ,SAAS4J,cAE3C,IAAK5J,IAAaA,EAASxO,GACvB,MAAM,IAAI,IAAiB,IAAqB7M,iBAGpD,OAAI,EAAK8mB,4BAA4BzB,GAC1B,EAAKM,kBAAkBN,EAAvB,GAA6CrQ,GAGjD,EAAK2R,mBAAmB,CAACtB,GAAzB,GAAgDrQ,KAIvD,YAAA0R,6BAAR,SACIlB,EACAxQ,GAEA,IACMwG,EADQxG,EAAM6P,WACDrJ,KAAKkK,UAExB,IAAKlK,EACD,MAAM,IAAI,IAAiB,IAAqBzb,aAE9C,MAAsCyb,EAAKlE,UAAzCkD,EAAa,gBAAE,IAAAuM,YAAA,WAAc,KAAE,EAEvC,MAAO,CACHvB,gBAAe,EACflO,UAAW,yBAAKkD,EAAkBuM,GAAc9X,KAAI,YAAQ,OACxD+X,OAAQ9X,EAAKrC,GACbiD,SAAUZ,EAAKY,eAKnB,YAAA2V,iBAAR,SACInO,EACA+N,EACA7J,GAEA,IAAKA,EACD,MAAM,IAAI,IAAiB,IAAqBzb,aAGpD,OAAOjQ,KAAKm3B,kBAAkB5B,EAAY6B,YAAa1L,GAAMvM,KAAI,SAAAna,GAC7D,IAAMqyB,EAAa,SAAAlN,KAAA,CAAK3C,GAAW,YAAY,SAAS0P,SAAWI,EAAaJ,UAEhF,OAAO,yCACAI,GAAY,CACftX,SAAUqX,EAAcC,EAAatX,SAAWqX,EAAWrX,SAAYsX,EAAatX,cAEzFqB,QAAO,YAAY,SAASrB,SAAW,MAGtC,YAAAiW,cAAR,SACIzO,EACA+N,EACA7J,GAEA,IAAK6J,EACD,OAAO/N,EAGX,IAAKkE,EACD,MAAM,IAAI,IAAiB,IAAqBzb,aAGpD,OAAOuX,EACFjiB,OAAOvF,KAAKm3B,kBAAkB5B,EAAY6B,YAAa1L,IACvDrK,QAAO,YAAY,SAASrB,SAAW,MAGxC,YAAAmX,kBAAR,SAA0BC,EAAuB1L,GAC7C,OAAO0L,EAAYjY,KAAI,YACnB,IAAMC,EAAO,SAAA+K,KAAA,CAAKuB,EAAKlE,UAAUkD,eAAe,YAAY,SAAS3N,KAAOma,KAE5E,MAAO,CACHA,OAAM,EACNlX,SAAUZ,EAAOA,EAAKY,SAAW,OAKrC,YAAAgX,4BAAR,SACIO,GAIA,QAFsBA,EAECxa,IAE/B,EA5VA,G,wECPMya,EAAmB,CACjB,wCACA,uCACA,sCACA,WACA,sBAGR,aACI,WACY5T,yBAmDf,OAhDG,YAAAiT,mBAAA,SACI5B,EACApY,EACA,G,IAAA,aAAwE,GAAE,EAAxE2H,EAAO,UAAE,IAAAgS,OAAUC,YAAO,EAAK,GAAE,WAE7B7a,EAAM,6BAA6BqZ,EAAU,gBAC7Cxc,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe6T,KAAK7b,EAAK,CACjCpD,KAAMqE,EACN2Z,OAAQ,CACJC,QAAS,YAAoBe,EAAkBf,IAEnDhe,QAAO,EACP+L,QAAO,KAIf,YAAAqR,kBAAA,SACIZ,EACAM,EACA,G,IAAA,aAAwE,GAAE,EAAxE/Q,EAAO,UAAE,IAAAgS,OAAUC,YAAO,EAAK,GAAE,WAE3B1Z,EAAgBwY,EAAW,GAApB/c,EAAI,iBAAK+c,EAAlB,QACA3Z,EAAM,6BAA6BqZ,EAAU,iBAAiBlY,EAC9DtE,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe8T,IAAI9b,EAAK,CAChCpD,KAAI,EACJge,OAAQ,CACJC,QAAS,YAAoBe,EAAkBf,IAEnDhe,QAAO,EACP+L,QAAO,KAIf,YAAAsR,kBAAA,SACIb,EACA6B,EACA,G,IAAEtS,YAAO,EAAqB,GAAE,WAE1B5I,EAAM,6BAA6BqZ,EAAU,iBAAiB6B,EAC9Dre,EAAU,CAAEgM,OAAQ,IAAYrM,QAChCqe,EAAU,YAAae,GAE7B,OAAOx3B,KAAK4jB,eAAe+T,OAAO/b,EAAK,CAAE4a,OAAQ,CAAEC,QAAO,GAAIhe,QAAO,EAAE+L,QAAO,KAEtF,EArDA,G,oCCfe,SAASoT,EAAevb,GACnC,OAAUwb,OAAOC,SAASzb,OAAM,wFAAwFA,EAD5H,IAAArX,EAAA,6B,2HCiBA,0BACY,KAAA+yB,qBAAuB,IAAI,IAC3B,KAAAC,qBAAuB,IAAI,IA0HtC,OAxHGlvB,EAAA,UAAAorB,UAAA,SAAUvM,EAAkBsQ,GACxB,IAAMzR,EAAiByR,EAAczR,eAAe0R,oBAC9C3M,EAAW0M,EAAc1M,SAAS4J,cAClC5O,EAAW0R,EAAc1R,SAAS4R,cAClCjR,EAAQ+Q,EAAc/Q,MAAMkR,WAC5BC,EAAgBJ,EAAcK,eAAeC,iBAAiB5Q,EAAQpD,SAAUoD,EAAQ6Q,WACxF9C,EAAkBuC,EAAcvC,gBAAgB+C,qBAChD5b,EAAeob,EAAcpb,aAAasZ,kBAC1CuC,EAAiBT,EAAcpb,aAAa8b,oBAC5CC,EAAcX,EAAc52B,OAAOw3B,iBACnCC,EAAgBb,EAAc52B,OAAO2zB,mBACrC+D,EAAiBd,EAAce,YAAYC,qBAC3CC,EAAcjB,EAAcK,eAAea,wBAC3ChS,EAAY8Q,EAAc/Q,MAAMkS,eAChCC,EAAmB9S,GAAYC,GAAkB,YAAsBD,EAAUC,GAEjF8S,EAAYP,GAAkBpR,EAAQ4R,cACvC,YAAoB5R,EAAQ4R,cAAgB,YAA6B5R,EAAQ4R,cAC/EtB,EAActQ,QAAQ6R,kBAAiB,KAAKT,EAAeU,iBAC9DxB,EAActQ,QAAQ6R,kBAE1B,IAAKF,EACD,MAAM,IAAI,IAAiB,IAAqB1oB,qBAGpD,MAAO,CACH8oB,iBAAkB/R,EAAQ+R,iBAC1BJ,UAAS,EACT/S,SAAU8S,EACV7S,eAAgBA,GAAkB,YAAqBA,GACvDkP,gBAAiBA,GAAmB,YAAqBA,EAAiB7Y,GAC1E6b,eAAgBA,GAAkB,YAA4BA,MAC9DhN,KAAMH,GAAY,YAAkBA,GACpCrE,MAAOA,GAAS,YAAmBA,EAAOC,GAC1CA,UAAS,EACTQ,QAASA,EAAQ4R,YACjBlB,cAAeA,GAAiBr4B,KAAK25B,wBAAwBtB,GAC7DuB,UAAW,CACPrC,QAAS,yCACF2B,GAAW,CACdW,eAAgBf,GAAiBA,EAAce,kBAGvDt3B,OAAQ,8BACR2iB,MAAO,SAAA4U,KAAA,CAAKlB,GAAeA,EAAYmB,aAAc,CACjD,YACA,UACA,gBACA,gBAKZjxB,EAAA,UAAAkxB,4BAAA,SAA4BC,EAA2BC,EAA2BC,GACtE,MAAoHD,EAAI,iBAAtGZ,EAAkGY,EAAI,UAA3F3O,EAAuF2O,EAAI,SAAjF74B,EAA6E64B,EAAI,OAAzEhT,EAAqEgT,EAAI,MAAlE/S,EAA8D+S,EAAI,UAAvD,EAAmDA,EAAI,QAAvD,WAAU,KAAE,EAAE7B,EAAqC6B,EAAI,cAA1BE,EAAsBF,EAAI,kBAC1H3E,EAAchK,GAAYA,EAAS1O,aAAa,GAChD6Y,EAAkBH,GAAeA,EAAYG,gBAC7CgD,EAAiBnD,GAAeA,EAAY8E,uBAElD,MAAO,CACHX,iBAAgB,EAChBJ,UAAS,EACTjB,cAAeA,GAAiBr4B,KAAK25B,wBAAwBtB,GAC7D9R,SAAUW,GAASA,EAAMV,gBAAkB+E,GAAY,YAAsBA,EAAShF,SAAUW,EAAMV,gBACtGA,eAAgBU,GAASA,EAAMV,gBAAkB,YAAqBU,EAAMV,gBAC5EkP,gBAAiBA,GAAmBnK,GAAY,YAAqBmK,EAAiBnK,EAAS1O,cAC/F6b,eAAgBA,GAAkB,YAA4BA,MAC9DhN,KAAMH,GAAY,YAAkBA,GACpCrE,MAAOA,GAAS,YAAmBA,EAAOC,GAC1CA,UAAS,EACTQ,QAAS3nB,KAAKs6B,4BAA4BL,EAAQtS,EAASwS,GAC3DP,UAAW,CACPrC,QAAS,yCACF6C,GAAiB,CACpBP,eAAgBx4B,GAAUA,EAAOL,QAAQ64B,kBAGjDt3B,OAAQ,8BACR2iB,MAAO7jB,GAAU,SAAAy4B,KAAA,CAAKz4B,EAAOu3B,YAAYmB,aAAc,CACnD,YACA,UACA,gBACA,gBAKJ,YAAAJ,wBAAR,SAAgCtB,GAC5B,MAA6B,iBAAzBA,EAAczS,QAA8ByS,EAAckC,QAI1DlC,EAAcmC,oBAAsBnC,EAAcmC,mBAAmBD,QAC9D,yCAAKlC,GAAa,CAAEtb,GAAIsb,EAAcmC,mBAAmBD,UAG7DlC,EAPI,yCAAKA,GAAa,CAAEkC,QAASlC,EAActb,MAUlD,YAAAud,4BAAR,SACIL,EACAtS,EACAwS,GAEA,MAAO,iBAAkBxS,EAAS,yCAEvBA,GAAO,CACV8S,MAAOR,EAAOS,qBACdC,SAAUV,EAAOW,wBAA0B56B,KAAKg4B,qBAAqBxF,SAASyH,EAAOW,wBACrFC,gBAAiBV,IAClB,yCAEIxS,GAAO,CACV8S,MAAOR,EAAOa,SACdC,SAAU/6B,KAAK+3B,qBAAqBhG,SAASkI,EAAOe,YAAc,IAClEC,OAAQhB,EAAOiB,UAAY,GAC3BP,SAAU36B,KAAKg4B,qBAAqBxF,SAASyH,EAAOkB,YAAc,IAClEN,gBAAiBV,KAGjC,EA5HA,G,oCCVA,iBAKI,WACYrK,kBA6Bf,OA1BG,YAAAsL,cAAA,SAActW,GAAd,WACI,OAAO,IAAIrhB,SAAQ,SAACR,EAASC,GACzB,EAAK4sB,QAAQsL,cAActW,GAAS,SAAC5lB,EAAYyZ,GACzCzZ,EACAgE,EAAO,EAAKm4B,mBAAmBn8B,IAE/B+D,EAAQ,EAAKo4B,mBAAmB1iB,WAMhD,YAAA2iB,yBAAA,SAAyBxW,EAA6BoB,GAAtD,WACI,OAAO,IAAIziB,SAAQ,WACf,EAAKqsB,QAAQwL,yBAAyBxW,EAAS,KAAMoB,OAIrD,YAAAmV,mBAAR,SAA2B1iB,GACvB,MAAO,CACHF,QAASE,EAASF,QAClBD,KAAMG,EAASuhB,KACfxhB,OAAQC,EAASD,OACjB6iB,WAAY5iB,EAAS4iB,aAGjC,EAnCA,G,oCCPe,SAASC,EAAUtyB,GAC9B,OAAkC,KAA3B,GAAGA,GAAMtD,QAAQ,OAAyC,KAA1B,GAAGsD,GAAMtD,QAAQ,KAD5D,IAAAZ,EAAA,6B,kECQA,YACI,WAAY2T,EAAuB3E,GAAnC,MACI,YAAM2E,EAAU,CACZ3E,QAASA,GAAW,yFACtB,K,OAEF,EAAK3L,KAAO,qBACZ,EAAK0I,KAAO,gB,EAEnB,OATwD,yBASzD,EATA,CAAyD,K,OCazD,SAAS0qB,EAAW72B,GAChB,OAAOA,EAAOoB,QAAO,SAACzB,EAAkBrF,GACpC,OAAIA,EACO,yBAAIqF,EAAQ,CAAAS,IAGhBT,IACR,IAAIsa,KAAK,K,wBCtBhB,WAGI,aAFQ,KAAA6c,gBAAyD,GAG7D17B,KAAK27B,SAAS,WAAW,SAAChjB,EAAU3E,GAAY,WAAI,IAAa2E,EAAU,CAAE3E,QAAO,OACpFhU,KAAK27B,SAAS,YAAY,SAAChjB,EAAU3E,GAAY,ODL1C,SACX2E,EACA3E,GAEQ,MAAS2E,EAAQ,KACjB,EAAgBH,EAAI,OAApB,WAAS,KAAE,EAEnB,OAAO,IAAI,IAAaG,EAAU,CAC9B3E,QAASynB,EAAW72B,IAAW4T,EAAKmQ,QAAUnQ,EAAKojB,OAAS5nB,EAC5DpP,OAAQA,EAAOnF,OACXmF,EAAOua,KAAI,YAAW,OAAGsI,KAAMjP,EAAKzH,KAAMiD,QAAO,MACjD,CAAC,CAAEyT,KAAMjP,EAAKzH,KAAMiD,QAASwE,EAAKmQ,QAAUnQ,EAAKojB,UAX9C,CCKuEjjB,EAAU3E,MACxFhU,KAAK27B,SAAS,cAAc,SAAChjB,EAAU3E,GAAY,OCN5C,SACX2E,EACA3E,GAEQ,MAAS2E,EAAQ,KAEzB,OAAO,IAAI,IAAaA,EAAU,CAC9B3E,QAASA,GAAWwE,EAAKmQ,QAAUnQ,EAAKojB,MACxCh3B,OAAQ,CAAC,CACL6iB,KAAMjP,EAAKiP,MAAQjP,EAAKzH,KACxBiD,QAASwE,EAAKmQ,QAAUnQ,EAAKojB,UAV1B,CDM2EjjB,EAAU3E,MAC5FhU,KAAK27B,SAAS,WAAW,SAAChjB,EAAU3E,GAAY,mBAA4B2E,EAAU3E,MACtFhU,KAAK27B,SAAS,WAAW,YAAY,WAAI,IAAahjB,MA6D7D,OA1DG,YAAAgjB,SAAA,SAAS5qB,EAAc8qB,GACnB77B,KAAK07B,gBAAgB3qB,GAAQ8qB,GAGjC,YAAAC,YAAA,SAAYnjB,EAAyB3E,GAGjC,OAFsBhU,KAAK07B,gBAAgB17B,KAAK+7B,SAASpjB,KAAc3Y,KAAK07B,gBAAgB30B,SAEvE4R,EAAU3E,IAG3B,YAAA+nB,SAAR,SAAiBpjB,GACb,GAAwB,IAApBA,EAASD,OACT,MAAO,UAGX,GAAI1Y,KAAKg8B,+BAA+BrjB,EAASH,MAC7C,MAAO,aAGX,GAAIxY,KAAKi8B,6BAA6BtjB,EAASH,MAAO,CAClD,IAAM0jB,EAAe,SAAAC,KAAA,CAAKxjB,EAASH,KAAKzH,KAAK2gB,MAAM,MAEnD,OAAOwK,GAAgBl8B,KAAK07B,gBAAgBQ,GACxCA,EACA,WAGR,IAAMh9B,EAAQ,SAAAi9B,KAAA,CAAKxjB,EAASH,MAAQG,EAASH,KAAK5T,QAElD,OAAI1F,GAASA,EAAMuoB,MAAQznB,KAAK07B,gBAAgBx8B,EAAMuoB,MAC3CvoB,EAAMuoB,KAGV,WAGH,YAAAuU,+BAAR,SACII,GAEA,IAAMC,EAA0BD,EAEhC,OAAQp8B,KAAKi8B,6BAA6BG,IACG,iBAAlCC,EAAwBT,OACS,iBAAjCS,EAAwBtrB,MACW,iBAAnCsrB,EAAwB3jB,QACW,iBAAnC2jB,EAAwB1T,QAG/B,YAAAsT,6BAAR,SACIG,GAEA,IAAME,EAAwBF,EAE9B,MAA+C,YAAjCE,EAAsB13B,SACO,iBAAhC03B,EAAsBV,OACS,iBAA/BU,EAAsBvrB,MACW,iBAAjCurB,EAAsB5jB,QAEzC,EArEA,G,uCEAe,SAAS6jB,EACpBzH,EACAnQ,GAEA,OAOJ,SAA4BA,GACxB,OAAOA,EAAO5T,OAAS,IAAgB4S,WAD3C,CAP2BgB,GACZ,YAASmQ,GAAO,YAAS,WAAUnQ,EAAOG,WAG9CgQ,E,YCRI,SAASlC,EAAW4J,EAAiBC,GAChD,gBAAIA,GAA0B,YAAQD,EAAcC,GACzCD,EAGJC,ECLI,SAASC,EACpBtzB,EACAF,EACA9I,G,MAEA,OAAIgJ,GAAUA,EAAOG,eAAeL,IAAQ,YAAQE,EAAOF,GAAM9I,GACtDgJ,EAGJ,yCACAA,KAAa,MACfF,GAAM9I,EAAK,I,6BCGPu8B,EAAqC,CAC9C/3B,OAAQ,GACRg4B,SAAU,ICVC,SAASC,EACpB/H,EACAnQ,GAQA,YAAO,IATPmQ,SAGgB,SAAAgI,gBAAA,CAAqC,CACjD5C,KAAM6C,EACNn4B,OAAQ,SAAAo4B,gBAAA,CAAgBC,EAAeV,GACvCK,SAAUM,GAHE,CAMDpI,EAAOnQ,GAG1B,SAASoY,EACL7C,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,IAAyB8B,8BAC9B,KAAK,IAAyBG,yBAC9B,KAAK,IAAmB9B,sBACxB,KAAKisB,EAAA,EAAgB1rB,mBACjB,OAAOmhB,EAAQsH,EAAMvV,EAAOG,SAAWH,EAAOG,QAAQ0B,gBAE1D,QACI,OAAO0T,GAIf,SAAS+C,EACLr4B,EACA+f,GAEA,gBAHA/f,MAAoC+3B,EAAc/3B,QAG1C+f,EAAO5T,MACf,KAAK,IAAmBE,sBACxB,KAAK,IAAmBC,sBACpB,OAAOwrB,EAAU93B,EAAQ,oBAE7B,KAAK,IAAmBuM,mBACpB,OAAOurB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,KAAK,IAAyBlS,8BAC9B,KAAK,IAAyBC,8BAC1B,OAAO6pB,EAAU93B,EAAQ,sBAE7B,KAAK,IAAyBkO,2BAC1B,OAAO4pB,EAAU93B,EAAQ,cAAe+f,EAAOG,SAEnD,KAAK,IAAwBsY,6BAC7B,KAAK,IAAwBC,6BAC7B,KAAK,IAAyBtqB,yBAC9B,KAAK,IAAyBC,yBAC1B,OAAO0pB,EAAU93B,EAAQ,+BAE7B,KAAK,IAAwB04B,0BAC7B,KAAK,IAAyBrqB,sBAC1B,OAAOypB,EAAU93B,EAAQ,uBAAwB+f,EAAOG,SAE5D,QACI,OAAOlgB,GAIf,SAASs4B,EACLN,EACAjY,GAEA,gBAHAiY,MAAwCD,EAAcC,UAG9CjY,EAAO5T,MACf,KAAK,IAAmBE,sBACpB,OAAOyrB,EAAUE,EAAU,gBAE/B,KAAK,IAAmB1rB,sBACxB,KAAK,IAAmBC,mBACpB,OAAOurB,EAAUE,EAAU,gBAE/B,KAAK,IAAyBhqB,8BAC1B,OAAO8pB,EAAUE,EAAU,iBAE/B,KAAK,IAAyB9pB,2BAC9B,KAAK,IAAyBD,8BAC1B,OAAO6pB,EAAUE,EAAU,iBAE/B,KAAK,IAAyB7pB,yBAC9B,KAAK,IAAwBqqB,6BACzB,OAAOV,EAAUE,EAAU,0BAE/B,KAAK,IAAwBS,6BAC7B,KAAK,IAAwBC,0BAC7B,KAAK,IAAyBrqB,sBAC9B,KAAK,IAAyBD,yBAC1B,OAAO0pB,EAAUE,EAAU,0BAE/B,QACI,OAAOA,G,YCdA,EA9Ef,SAASW,EAAgBC,EAAoBC,EAAgBzc,GACjD,OAA0EA,GAAW,IAAE,YAAvF,WAAc,WAAC0c,EAAQC,GAAW,kBAAE5gB,IAAoB2gB,EAAE3gB,KAAO4gB,EAAE5gB,IAAE,EAG7E,IAAKygB,EACD,OAAOC,EAMX,IAAKA,GAAYD,IAAiBC,EAC9B,OAAOD,EAMX,IAAII,EAAqB,EACrBC,EAAiB,EAEfC,EAAsB,SAAIC,EAAkBvB,EAAiBC,GAI/D,OAHAmB,GAAsBG,IAAkBvB,EAAe,EAAI,EAC3DqB,GAAkBE,IAAkBtB,EAAW,EAAI,EAE5CsB,GAGLx5B,EAASk5B,EAASte,KAAI,SAAC6e,EAASl5B,GAClC,IAAMm5B,EAAcT,GAAgBA,EAAa14B,GAEjD,OAAI,YAAcm5B,IAAgB,YAAcD,GACxCE,EAAYD,EAAaD,GAClBF,EACH,EAAYG,EAAaD,GACzBC,EACAD,GAIDF,EACHlL,EAAQqL,EAAaD,GACrBC,EACAD,GAIJ,SAAA74B,QAAA,CAAQ84B,IAAgB,SAAA94B,QAAA,CAAQ64B,GACzBF,EACHP,EAAaU,EAAaD,GAC1BC,EACAD,GAIDF,EACHlL,EAAQqL,EAAaD,GACrBC,EACAD,MAOR,OAAIJ,IAAuBH,EAASh+B,QAAW+9B,GAAgBA,EAAa/9B,SAAWg+B,EAASh+B,OACrF+9B,EAKPK,IAAmBJ,EAASh+B,OACrBg+B,EAGJl5B,GChDI,EA/Bf,SAAS45B,EAA8BC,EAAmBC,GACtD,OAAKD,EAMAC,GAAaD,IAAkBC,EAO5Bn9B,OAAOge,KAAKmf,GACfr4B,QAAO,SAACzB,EAAQ2E,GACb,IAAMszB,EAAej4B,EAAO2E,GACtBuzB,EAAW4B,EAAUn1B,GAE3B,OAAI,YAAcszB,IAAiB,YAAcC,GACtCC,EAAUn4B,EAAQ2E,EAAKi1B,EAAY3B,EAAcC,IAGxD,SAAAt3B,QAAA,CAAQq3B,IAAiB,SAAAr3B,QAAA,CAAQs3B,GAC1BC,EAAUn4B,EAAQ2E,EAAK,EAAaszB,EAAcC,IAGtDC,EAAUn4B,EAAQ2E,EAAKuzB,KAC/B2B,GApBIA,EANAC,G,uBCKF,EAA2B,CACpCz5B,OAAQ,GACRg4B,SAAU,ICNC,SAAS0B,EACpBxJ,EACAnQ,GAQA,YAAO,IATPmQ,SAGgB,SAAAgI,gBAAA,CAA2B,CACvC5C,KAAM,EACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,EAAeT,GACvCK,SAAU,GAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,EACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,IAAyB8B,8BAC9B,KAAK,IAAmB3B,sBACxB,KAAK,IAAsBrH,4BAC3B,KAAK,IAAsBM,2BAC3B,KAAK,IAAsBH,2BAC3B,KAAK,IAAsBM,8BAC3B,KAAK,IAAsBG,6BAC3B,KAAK,IAAiBkJ,qBACtB,KAAK,IAAiBG,sBACtB,KAAK,IAA0BoC,8BAC/B,KAAK,IAA0BG,+BAC3B,OAAO,EAAY6jB,EAAMvV,EAAOG,SAAWH,EAAOG,QAAQ4G,MAE9D,QACI,OAAOwO,GAIf,SAAS,EACL0C,EACAjY,GAEA,gBAHAiY,MAA8B,EAAcA,UAGpCjY,EAAO5T,MACf,KAAK,IAAmBE,sBACpB,OAAOyrB,EAAUE,EAAU,gBAE/B,KAAK,IAAmBzrB,mBACxB,KAAK,IAAmBD,sBACpB,OAAOwrB,EAAUE,EAAU,gBAE/B,QACI,OAAOA,GAIf,SAAS,EACLh4B,EACA+f,GAEA,gBAHA/f,MAA0B,EAAcA,QAGhC+f,EAAO5T,MACf,KAAK,IAAmBE,sBACxB,KAAK,IAAmBC,sBACpB,OAAOwrB,EAAU93B,EAAQ,oBAE7B,KAAK,IAAmBuM,mBACpB,OAAOurB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,QACI,OAAOlgB,G,YChDF,EAAqC,CAC9Cs1B,KAAM,GACNt1B,OAAQ,GACRg4B,SAAU,IC1BR2B,EAA8C,CAAEC,sBAAuB,IACvEC,EAAiD,GACjDC,EAAoD,GAE3C,SAASC,EACpB7J,EACAnQ,G,UAEA,gBAHAmQ,SAGKnQ,EAAOV,MAASU,EAAOV,KAAKM,SAIjB,SAAAuY,gBAAA,CAAqC,CACjD5C,KAAM,SAAA4C,gBAAA,EAAe,KACjB,EAACnY,EAAOV,KAAKM,UAAW,E,IAE5B3f,OAAQ,SAAAk4B,gBAAA,EAAe,KACnB,EAACnY,EAAOV,KAAKM,UAAW,E,IAE5BqY,SAAU,SAAAE,gBAAA,EAAe,KACrB,EAACnY,EAAOV,KAAKM,UAAW,EAIzBqa,KAZS,CAYD9J,EAAOnQ,GAfXmQ,EAkBf,SAAS,EACLoF,EACAvV,G,MAEA,gBAHAuV,SAGQvV,EAAO5T,MACf,KAAK,IAAyBsC,0BAC1B,OAAKsR,EAAOV,MAASU,EAAOV,KAAK4a,YAI1B,EAAY3E,EAAM,CACrBsE,uBAAqB,KACjB,EAAC7Z,EAAOV,KAAK4a,gB,KALV3E,EASf,KAAK,IAAyB1mB,4BAC1B,OAAOkpB,EAAUxC,EAAM,wBAAyB,IAGpD,OAAOA,EAGX,SAAS,EACLt1B,EACA+f,GAEA,gBAHA/f,SAGQ+f,EAAO5T,MACf,KAAK,IAAyBqC,0BAC9B,KAAK,IAAyBC,0BAC1B,OAAOqpB,EAAU93B,EAAQ,0BAE7B,KAAK,IAAyBuO,uBAC1B,OAAOupB,EAAU93B,EAAQ,kBAAmB+f,EAAOG,SAEvD,KAAK,IAAyBvR,4BAC9B,KAAK,IAAyBC,4BAC1B,OAAOkpB,EAAU93B,EAAQ,4BAE7B,KAAK,IAAyB0O,yBAC1B,OAAOopB,EAAU93B,EAAQ,oBAAqB+f,EAAOG,SAEzD,QACI,OAAOlgB,GAIf,SAAS,EACLg4B,EACAjY,GAEA,gBAHAiY,SAGQjY,EAAO5T,MACf,KAAK,IAAyBqC,0BAC1B,OAAOspB,EAAUE,EAAU,qBAE/B,KAAK,IAAyBzpB,uBAC9B,KAAK,IAAyBE,0BAC1B,OAAOqpB,EAAUE,EAAU,qBAE/B,KAAK,IAAyBrpB,4BAC1B,OAAOmpB,EAAUE,EAAU,uBAE/B,KAAK,IAAyBtpB,yBAC9B,KAAK,IAAyBE,4BAC1B,OAAOkpB,EAAUE,EAAU,uBAE/B,QACI,OAAOA,G,YC/EF,EAA6B,CACtC3Y,KAAM,GACNrf,OAAQ,GACRg4B,SAAU,IChBC,SAASkC,EACpBhK,EACAnQ,GAQA,YAAO,IATPmQ,SAGgB,SAAAgI,gBAAA,CAA6B,CACzC5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,IAAiByI,oBAClB,OAAO,EAAY0gB,EAAMvV,EAAOG,SAEpC,QACI,OAAOoV,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAA4B,EAAcA,QAGlC+f,EAAO5T,MACf,KAAK,IAAiByI,oBAClB,OAAOkjB,EAAU93B,EAAQ,oBAE7B,KAAK,IAAiB6U,iBAClB,OAAOijB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAgC,EAAcA,UAGtCjY,EAAO5T,MACf,KAAK,IAAiBwI,oBAClB,OAAOmjB,EAAUE,EAAU,gBAE/B,KAAK,IAAiBpjB,oBACtB,KAAK,IAAiBC,iBAClB,OAAOijB,EAAUE,EAAU,gBAE/B,QACI,OAAOA,GC3CR,IAAM,GAA6B,CACtCh4B,OAAQ,GACRg4B,SAAU,ICXC,SAASmC,GACpBjK,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAA6B,CACzC5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,IAAmBG,sBACxB,KAAK,IAAiByC,qBACtB,KAAK,IAAsBrJ,8BAC3B,KAAK,IAAiBwJ,sBACtB,KAAKqpB,EAAA,EAAgB1rB,mBACjB,OAAO,EAAayoB,EAAMvV,EAAOG,SAAWH,EAAOG,QAAQmD,SAE/D,QACI,OAAOiS,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,UAGQ+f,EAAO5T,MACf,KAAK,IAAiB2C,qBACtB,KAAK,IAAiBC,qBAClB,OAAO+oB,EAAU93B,EAAQ,2BAE7B,KAAK,IAAiBgP,kBAClB,OAAO8oB,EAAU93B,EAAQ,mBAAoB+f,EAAOG,SAExD,KAAK,IAAiBjR,sBACtB,KAAK,IAAiBC,sBAClB,OAAO4oB,EAAU93B,EAAQ,4BAE7B,KAAK,IAAiBmP,mBAClB,OAAO2oB,EAAU93B,EAAQ,oBAAqB+f,EAAOG,SAEzD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,UAGQjY,EAAO5T,MACf,KAAK,IAAiB2C,qBAClB,OAAOgpB,EAAUE,EAAU,uBAE/B,KAAK,IAAiBjpB,qBACtB,KAAK,IAAiBC,kBAClB,OAAO8oB,EAAUE,EAAU,uBAE/B,KAAK,IAAiB/oB,sBAClB,OAAO6oB,EAAUE,EAAU,uBAE/B,KAAK,IAAiB9oB,sBACtB,KAAK,IAAiBC,mBAClB,OAAO2oB,EAAUE,EAAU,uBAE/B,QACI,OAAOA,GCjER,IAAM,GAAsC,CAC/Ch4B,OAAQ,GACRg4B,SAAU,ICXC,SAASoC,GACpBlK,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAAsC,CAClD5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,IAAmBG,sBACxB,KAAK,IAAsBrH,4BAC3B,KAAK,IAAsBG,2BAC3B,KAAK,IAAsBG,2BAC3B,KAAK,IAAsBG,8BAC3B,KAAK,IAAiBqJ,qBACtB,KAAK,IAAiBG,sBACtB,KAAK,IAA0BoC,8BAC/B,KAAK,IAA0BG,+BAC3B,OAAO,EAAa6jB,EAAMvV,EAAOG,SAAWH,EAAOG,QAAQmH,kBAE/D,QACI,OAAOiO,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAAqC,GAAcA,QAG3C+f,EAAO5T,MACf,KAAK,IAA0BkF,8BAC/B,KAAK,IAA0BC,8BAC3B,OAAOwmB,EAAU93B,EAAQ,oCAE7B,KAAK,IAA0BuR,2BAC3B,OAAOumB,EAAU93B,EAAQ,4BAA6B+f,EAAOG,SAEjE,KAAK,IAA0B1O,+BAC/B,KAAK,IAA0BC,+BAC3B,OAAOqmB,EAAU93B,EAAQ,qCAE7B,KAAK,IAA0B0R,4BAC3B,OAAOomB,EAAU93B,EAAQ,6BAA8B+f,EAAOG,SAElE,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAyC,GAAcA,UAG/CjY,EAAO5T,MACf,KAAK,IAA0BkF,8BAC3B,OAAOymB,EAAUE,EAAU,gCAE/B,KAAK,IAA0B1mB,8BAC/B,KAAK,IAA0BC,2BAC3B,OAAOumB,EAAUE,EAAU,gCAE/B,KAAK,IAA0BxmB,+BAC3B,OAAOsmB,EAAUE,EAAU,gCAE/B,KAAK,IAA0BvmB,+BAC/B,KAAK,IAA0BC,4BAC3B,OAAOomB,EAAUE,EAAU,gCAE/B,QACI,OAAOA,G,aCxEF,GAA+B,CACxCh4B,OAAQ,GACRg4B,SAAU,ICTC,SAASqC,GACpBnK,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAAwF,CACpG5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,IAAyBiC,yBAC9B,KAAK,IAAmB9B,sBACpB,OAAO,EAAYgpB,EAAMvV,EAAOG,SAAWH,EAAOG,QAAQyB,UAE9D,KAAK,KAAmBvR,+BAChB,OAAO,EAAYklB,EAAMvV,EAAOG,SAExC,QACI,OAAOoV,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAA8B,GAAcA,QAGpC+f,EAAO5T,MACf,KAAK,KAAmB6D,wBACxB,KAAK,KAAmBC,wBACpB,OAAO6nB,EAAU93B,EAAQ,sBAE7B,KAAK,KAAmBkQ,qBACpB,OAAO4nB,EAAU93B,EAAQ,cAAe+f,EAAOG,SAEnD,KAAK,KAAmB/P,+BACxB,KAAK,KAAmBC,+BACpB,OAAO0nB,EAAU93B,EAAQ,6BAE7B,KAAK,KAAmBqQ,4BACpB,OAAOynB,EAAU93B,EAAQ,qBAAsB+f,EAAOG,SAE1D,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAkC,GAAcA,UAGxCjY,EAAO5T,MACf,KAAK,KAAmB6D,wBACpB,OAAO8nB,EAAUE,EAAU,iBAE/B,KAAK,KAAmB9nB,qBACxB,KAAK,KAAmBD,wBACpB,OAAO6nB,EAAUE,EAAU,iBAE/B,KAAK,KAAmB7nB,+BACpB,OAAO2nB,EAAUE,EAAU,wBAE/B,KAAK,KAAmB3nB,4BACxB,KAAK,KAAmBD,+BACpB,OAAO0nB,EAAUE,EAAU,wBAC/B,QACI,OAAOA,G,aC9CF,GAAuC,CAChD1C,KAAM,GACNt1B,OAAQ,GACRg4B,SAAU,ICjCC,SAASsC,GACpBpK,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAA+D,CAC3E5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,G,QAEA,gBAHAuV,MAAkC,GAAcA,MAGxCvV,EAAO5T,MACf,KAAK,KAA2B3F,oBAC5B,OAAO,EAAY8uB,IAAI,MAClBvV,EAAOV,MAAQU,EAAOV,KAAKM,UAAW,CACnC4a,eAAcA,G,IAI1B,KAAK,KAA2B5zB,sBAC5B,OAAO,EAAY2uB,IAAI,MAClBvV,EAAOV,MAAQU,EAAOV,KAAKM,UAAW,CACnC4a,eAAcA,G,IAK1B,OAAOjF,EAGX,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAAsC,GAAcA,QAG5C+f,EAAO5T,MACf,KAAK,KAA2B5F,oBAChC,KAAK,KAA2BC,oBAC5B,OAAO,EAAYxG,EAAQ,CACvBw6B,qBAAgBA,EAChBC,wBAAmBA,IAG3B,KAAK,KAA2Bn0B,iBAC5B,OAAO,EAAYtG,EAAQ,CACvBw6B,gBAAiBza,EAAOG,QACxBua,mBAAoB1a,EAAOV,MAAQU,EAAOV,KAAKM,WAGvD,KAAK,KAA2BjZ,sBAChC,KAAK,KAA2BC,sBAC5B,OAAO,EAAY3G,EAAQ,CACvB06B,uBAAkBA,EAClBC,0BAAqBA,IAG7B,KAAK,KAA2Bl0B,mBAC5B,OAAO,EAAYzG,EAAQ,CACvB06B,kBAAmB3a,EAAOG,QAC1Bya,qBAAsB5a,EAAOV,MAAQU,EAAOV,KAAKM,WAGzD,KAAK,KAA2BpV,gBAChC,KAAK,KAA2BC,gBAC5B,OAAO,EAAYxK,EAAQ,CACvB46B,iBAAYA,EACZC,oBAAeA,IAGvB,KAAK,KAA2BvwB,aAC5B,OAAO,EAAYtK,EAAQ,CACvB46B,YAAa7a,EAAOG,QACpB2a,eAAgB9a,EAAOV,MAAQU,EAAOV,KAAKM,WAGnD,KAAK,KAA2BjV,iBAChC,KAAK,KAA2BC,iBAC5B,OAAO,EAAY3K,EAAQ,CACvB86B,kBAAaA,EACbC,qBAAgBA,IAGxB,KAAK,KAA2BtwB,cAC5B,OAAO,EAAYzK,EAAQ,CACvB86B,aAAc/a,EAAOG,QACrB6a,gBAAiBhb,EAAOV,MAAQU,EAAOV,KAAKM,WAGpD,KAAK,KAA2B/Y,yBAChC,KAAK,KAA2BC,0BAC5B,OAAO,EAAY7G,EAAQ,CACvBg7B,4BAAuBA,EACvBC,+BAA0BA,IAGlC,KAAK,KAA2Bn0B,wBAC5B,OAAO,EAAY9G,EAAQ,CACvBg7B,uBAAwBjb,EAAOG,QAC/B+a,0BAA2Blb,EAAOV,KAAKM,WAG/C,QACI,OAAO3f,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAA0C,GAAcA,UAGhDjY,EAAO5T,MACf,KAAK,KAA2B5F,oBAC5B,OAAO,EAAYyxB,EAAU,CACzBkD,gBAAeA,EACfT,mBAAoB1a,EAAOV,MAAQU,EAAOV,KAAKM,WAGvD,KAAK,KAA2BrZ,iBAChC,KAAK,KAA2BE,oBAC5B,OAAO,EAAYwxB,EAAU,CACzBkD,gBAAeA,EACfT,wBAAmBA,IAG3B,KAAK,KAA2B/zB,sBAC5B,OAAO,EAAYsxB,EAAU,CACzBmD,kBAAiBA,EACjBR,qBAAsB5a,EAAOV,MAAQU,EAAOV,KAAKM,WAGzD,KAAK,KAA2BlZ,mBAChC,KAAK,KAA2BE,sBAC5B,OAAO,EAAYqxB,EAAU,CACzBmD,kBAAiBA,EACjBR,0BAAqBA,IAG7B,KAAK,KAA2BpwB,gBAC5B,OAAO,EAAYytB,EAAU,CACzBoD,aAAYA,EACZP,eAAgB9a,EAAOV,MAAQU,EAAOV,KAAKM,WAGnD,KAAK,KAA2BrV,aAChC,KAAK,KAA2BE,gBAC5B,OAAO,EAAYwtB,EAAU,CACzBoD,aAAYA,EACZP,oBAAeA,IAGvB,KAAK,KAA2BnwB,iBAC5B,OAAO,EAAYstB,EAAU,CACzBqD,cAAaA,EACbN,gBAAiBhb,EAAOV,MAAQU,EAAOV,KAAKM,WAGpD,KAAK,KAA2BlV,cAChC,KAAK,KAA2BE,iBAC5B,OAAO,EAAYqtB,EAAU,CACzBqD,cAAaA,EACbN,qBAAgBA,IAGxB,KAAK,KAA2Bn0B,yBAC5B,OAAO,EAAYoxB,EAAU,CACzBsD,qBAAoBA,EACpBL,0BAA2Blb,EAAOV,KAAKM,WAG/C,KAAK,KAA2B9Y,0BAChC,KAAK,KAA2BC,wBAC5B,OAAO,EAAYkxB,EAAU,CACzBsD,qBAAoBA,EACpBL,+BAA0BA,IAGlC,QACI,OAAOjD,G,aC9KF,GAAiC,CAC1Ch4B,OAAQ,GACRg4B,SAAU,ICTC,SAASuD,GACpBrL,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAAiC,CAC7C5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,KAAqB6I,wBACtB,OAAO,EAAYsgB,EAAMvV,EAAOG,SAEpC,QACI,OAAOoV,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAA+B,GAAcA,QAGrC+f,EAAO5T,MACf,KAAK,KAAqB6I,wBACtB,OAAO8iB,EAAU93B,EAAQ,oBAE7B,KAAK,KAAqBiV,qBACtB,OAAO6iB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAoC,GAAcA,UAG1CjY,EAAO5T,MACf,KAAK,KAAqB4I,wBACtB,OAAO+iB,EAAUE,EAAU,gBAE/B,KAAK,KAAqBhjB,wBAC1B,KAAK,KAAqBC,qBACtB,OAAO6iB,EAAUE,EAAU,gBAE/B,QACI,OAAOA,G,aChDF,GAA8B,CACvCh4B,OAAQ,GACRg4B,SAAU,ICTC,SAASwD,GACpBtL,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAA8B,CAC1C5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,KAAkBkJ,uBACnB,OAAO,EAAaigB,EAAMvV,EAAOG,SAErC,QACI,OAAOoV,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAA6B,GAAcA,QAGnC+f,EAAO5T,MACf,KAAK,KAAkBiJ,uBACvB,KAAK,KAAkBC,uBACnB,OAAOyiB,EAAU93B,EAAQ,oBAE7B,KAAK,KAAkBsV,oBACnB,OAAOwiB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAiC,GAAcA,UAGvCjY,EAAO5T,MACf,KAAK,KAAkBiJ,uBACnB,OAAO0iB,EAAUE,EAAU,gBAE/B,KAAK,KAAkB3iB,uBACvB,KAAK,KAAkBC,oBACnB,OAAOwiB,EAAUE,EAAU,gBAE/B,QACI,OAAOA,GChCR,IAAM,GAA4B,CACrCh4B,OAAQ,GACRqf,KAAM,GACN2Y,SAAU,IC3BC,SAASyD,GACpBvL,EACAnQ,GASA,YAAO,IAVPmQ,UAGgB,SAAAgI,gBAAA,CAA4B,CACxC5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCtY,KAAMqc,GACN1D,SAAU,IAJE,CAOD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAKosB,EAAA,EAAgB1rB,mBACrB,KAAK0rB,EAAA,EAAgBvrB,2BACjB,OAAO,EAAYsoB,EAAM,SAAAqG,KAAA,CAAK5b,EAAOG,QAAS,CAAC,iBAAkB,aAErE,QACI,OAAOoV,GAIf,SAASoG,GACLrc,EACAU,GAEA,OAAQA,EAAO5T,MACf,KAAKosB,EAAA,EAAgBjrB,uBACrB,KAAKirB,EAAA,EAAgBprB,qBACjB,OAAO,EAAYkS,EAAM,yCAClBU,EAAOV,MAAI,CACdmE,YAAazD,EAAOG,SAAWH,EAAOG,QAAQoC,MAAMkB,YACpDD,WAAYxD,EAAOG,SAAWH,EAAOG,QAAQoC,MAAM7N,MACnDsO,QAAShD,EAAOG,SAAWH,EAAOG,QAAQoC,OAASvC,EAAOG,QAAQoC,MAAMS,WAGhF,QACI,OAAO1D,GAIf,SAAS,GACLrf,EACA+f,GAEA,gBAHA/f,MAA2B,GAAcA,QAGjC+f,EAAO5T,MACf,KAAKosB,EAAA,EAAgB3rB,mBACrB,KAAK2rB,EAAA,EAAgB1rB,mBACrB,KAAK0rB,EAAA,EAAgBvrB,2BACrB,KAAKurB,EAAA,EAAgBxrB,2BACjB,OAAO+qB,EAAU93B,EAAQ,oBAE7B,KAAKu4B,EAAA,EAAgBzrB,gBACrB,KAAKyrB,EAAA,EAAgBtrB,wBACjB,OAAO6qB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAA+B,GAAcA,UAGrCjY,EAAO5T,MACf,KAAKosB,EAAA,EAAgB3rB,mBACrB,KAAK2rB,EAAA,EAAgBxrB,2BACjB,OAAO+qB,EAAUE,EAAU,gBAE/B,KAAKO,EAAA,EAAgB1rB,mBACrB,KAAK0rB,EAAA,EAAgBzrB,gBACrB,KAAKyrB,EAAA,EAAgBvrB,2BACrB,KAAKurB,EAAA,EAAgBtrB,wBACjB,OAAO6qB,EAAUE,EAAU,gBAE/B,QACI,OAAOA,G,aCtFA,SAAS4D,GAAe1L,EAA0BnQ,GAK7D,YAAO,IAL4BmQ,UACnB,SAAAgI,gBAAA,CAA6C,CACzD5C,KAAM,IADM,CAIDpF,EAAOnQ,GAG1B,SAAS,GAAYuV,EAAuCvV,GACxD,OAAQA,EAAO5T,MACf,KAAK,KAAkBsN,uBACnB,OAAOsG,EAAOG,QAElB,QACI,OAAOoV,G,aCEF,GAAoC,CAC7Ct1B,OAAQ,GACRg4B,SAAU,ICdC,SAAS6D,GACpB3L,EACAnQ,GASA,YAAO,IAVPmQ,UAGgB,SAAAgI,gBAAA,CAAoC,CAChD5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCtY,KAAM,GACN2Y,SAAU,IAJE,CAOD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,KAAwBuB,2BACzB,OCrBO,SACXouB,EACAthB,EACA6U,GAEA,IAAK7U,EACD,OAAOshB,EAGX,IAAMC,EAAmB,SAAA7G,KAAA,CAAK1a,EAAM,MAC9Bta,EAAQ,SAAA87B,UAAA,CAAUF,EAA4B,YAAdzM,GAAyB,SAAAL,OAAA,CAAOK,GAAcA,GAAa0M,GAC3FlD,EAAW,yBAAIiD,GAErB,IAAe,IAAX57B,EACA24B,EAASj4B,KAAK4Z,OACX,CACH,IAAMkY,EAAeoJ,EAAM57B,GAE3B24B,EAAS34B,GAAS,YAAcwyB,IAAiB,YAAclY,GAC3D,EAAYkY,EAAclY,GAC1BA,EAGR,OAAOqe,EAvBI,CDqBYvD,GAAQ,GAAIvV,EAAOG,QAASH,EAAOG,SAAW,CAC7D/H,GAAI4H,EAAOG,QAAQ/H,GACnBwd,QAAS5V,EAAOG,QAAQyV,UAGhC,KAAK,KAAwB9nB,4BACzB,OAAO,EAAaynB,EAAMvV,EAAOG,QAAS,CACtCoZ,YAAa,SAAC2C,EAASC,GAAY,OAC/BD,EAAQ9jB,KAAO+jB,EAAQ/jB,IAAM8jB,EAAQtG,UAAYuG,EAAQvG,WAIrE,QACI,OAAOL,GAIf,SAAS,GACLjW,EACAU,GAEA,OAAQA,EAAO5T,MACf,KAAK,KAAwB0B,4BACzB,OAAO,EAAYwR,EAAMU,EAAOV,MAEpC,QACI,OAAOA,GAIf,SAAS,GACLrf,EACA+f,GAEA,gBAHA/f,MAAmC,GAAcA,QAGzC+f,EAAO5T,MACf,KAAK,KAAwByB,4BAC7B,KAAK,KAAwBC,4BACzB,OAAOiqB,EAAU93B,EAAQ,oBAE7B,KAAK,KAAwB8N,yBACzB,OAAOgqB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,KAAK,KAAwBzS,2BAC7B,KAAK,KAAwBC,2BACzB,OAAO,EAAY1N,EAAQ,CACvBm8B,kBAAaA,EACbC,qBAAgBA,IAGxB,KAAK,KAAwBzuB,wBACzB,OAAO,EAAY3N,EAAQ,CACvBm8B,aAAcpc,EAAOV,KAAKM,SAC1Byc,gBAAiBrc,EAAOG,UAGhC,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAuC,GAAcA,UAG7CjY,EAAO5T,MACf,KAAK,KAAwByB,4BACzB,OAAOkqB,EAAUE,EAAU,gBAE/B,KAAK,KAAwBnqB,4BAC7B,KAAK,KAAwBC,yBACzB,OAAOgqB,EAAUE,EAAU,gBAE/B,KAAK,KAAwBvqB,2BACzB,OAAO,EAAYuqB,EAAU,CACzBqE,iBAAgBA,EAChBF,aAAcpc,EAAOV,KAAKM,WAGlC,KAAK,KAAwBjS,2BAC7B,KAAK,KAAwBC,wBACzB,OAAO,EAAYqqB,EAAU,CACzBqE,iBAAgBA,EAChBF,kBAAaA,IAGrB,QACI,OAAOnE,G,aE9EF,GAAsC,CAC/C1C,KAAM,GACNt1B,OAAQ,GACRg4B,SAAU,ICjCC,SAASsE,GACpBpM,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAA6D,CACzE5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,G,QAEA,gBAHAuV,MAAiC,GAAcA,MAGvCvV,EAAO5T,MACf,KAAK,KAA0B3F,oBAC3B,OAAO,EAAY8uB,IAAI,MAClBvV,EAAOV,MAAQU,EAAOV,KAAKM,UAAW,CACnC4a,eAAcA,G,IAI1B,KAAK,KAA0B5zB,sBAC3B,OAAO,EAAY2uB,IAAI,MAClBvV,EAAOV,MAAQU,EAAOV,KAAKM,UAAW,CACnC4a,eAAcA,G,IAK1B,OAAOjF,EAGX,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAAqC,GAAcA,QAG3C+f,EAAO5T,MACf,KAAK,KAA0B5F,oBAC/B,KAAK,KAA0BC,oBAC3B,OAAO,EAAYxG,EAAQ,CACvBw6B,qBAAgBA,EAChBC,wBAAmBA,IAG3B,KAAK,KAA0Bn0B,iBAC3B,OAAO,EAAYtG,EAAQ,CACvBw6B,gBAAiBza,EAAOG,QACxBua,mBAAoB1a,EAAOV,MAAQU,EAAOV,KAAKM,WAGvD,KAAK,KAA0BjZ,sBAC/B,KAAK,KAA0BC,sBAC3B,OAAO,EAAY3G,EAAQ,CACvB06B,uBAAkBA,EAClBC,0BAAqBA,IAG7B,KAAK,KAA0Bl0B,mBAC3B,OAAO,EAAYzG,EAAQ,CACvB06B,kBAAmB3a,EAAOG,QAC1Bya,qBAAsB5a,EAAOV,MAAQU,EAAOV,KAAKM,WAGzD,KAAK,KAA0B7U,iBAC/B,KAAK,KAA0BC,iBAC3B,OAAO,EAAY/K,EAAQ,CACvBu8B,kBAAaA,EACbC,qBAAgBA,IAGxB,KAAK,KAA0B3xB,cAC3B,OAAO,EAAY7K,EAAQ,CACvBu8B,aAAcxc,EAAOG,QACrBsc,gBAAiBzc,EAAOV,MAAQU,EAAOV,KAAKM,WAGpD,KAAK,KAA0B1U,kBAC/B,KAAK,KAA0BC,kBAC3B,OAAO,EAAYlL,EAAQ,CACvBy8B,mBAAcA,EACdC,sBAAiBA,IAGzB,KAAK,KAA0B1xB,eAC3B,OAAO,EAAYhL,EAAQ,CACvBy8B,cAAe1c,EAAOG,QACtBwc,iBAAkB3c,EAAOV,MAAQU,EAAOV,KAAKM,WAGrD,KAAK,KAA0B/Y,yBAC/B,KAAK,KAA0BC,0BAC3B,OAAO,EAAY7G,EAAQ,CACvBg7B,4BAAuBA,EACvBC,+BAA0BA,IAGlC,KAAK,KAA0Bn0B,wBAC3B,OAAO,EAAY9G,EAAQ,CACvBg7B,uBAAwBjb,EAAOG,QAC/B+a,0BAA2Blb,EAAOV,KAAKM,WAG/C,QACI,OAAO3f,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAyC,GAAcA,UAG/CjY,EAAO5T,MACf,KAAK,KAA0B5F,oBAC3B,OAAO,EAAYyxB,EAAU,CACzBkD,gBAAeA,EACfT,mBAAoB1a,EAAOV,MAAQU,EAAOV,KAAKM,WAGvD,KAAK,KAA0BrZ,iBAC/B,KAAK,KAA0BE,oBAC3B,OAAO,EAAYwxB,EAAU,CACzBkD,gBAAeA,EACfT,wBAAmBA,IAG3B,KAAK,KAA0B/zB,sBAC3B,OAAO,EAAYsxB,EAAU,CACzBmD,kBAAiBA,EACjBR,qBAAsB5a,EAAOV,MAAQU,EAAOV,KAAKM,WAGzD,KAAK,KAA0BlZ,mBAC/B,KAAK,KAA0BE,sBAC3B,OAAO,EAAYqxB,EAAU,CACzBmD,kBAAiBA,EACjBR,0BAAqBA,IAG7B,KAAK,KAA0B7vB,iBAC3B,OAAO,EAAYktB,EAAU,CACzB2E,aAAYA,EACZH,gBAAiBzc,EAAOV,MAAQU,EAAOV,KAAKM,WAGpD,KAAK,KAA0B9U,cAC/B,KAAK,KAA0BE,iBAC3B,OAAO,EAAYitB,EAAU,CACzB2E,aAAYA,EACZH,qBAAgBA,IAGxB,KAAK,KAA0BvxB,kBAC3B,OAAO,EAAY+sB,EAAU,CACzB4E,cAAaA,EACbF,iBAAkB3c,EAAOV,MAAQU,EAAOV,KAAKM,WAGrD,KAAK,KAA0B3U,eAC/B,KAAK,KAA0BE,kBAC3B,OAAO,EAAY8sB,EAAU,CACzB4E,cAAaA,EACbF,sBAAiBA,IAGzB,KAAK,KAA0B91B,yBAC3B,OAAO,EAAYoxB,EAAU,CACzBsD,qBAAoBA,EACpBL,0BAA2Blb,EAAOV,KAAKM,WAG/C,KAAK,KAA0B9Y,0BAC/B,KAAK,KAA0BC,wBAC3B,OAAO,EAAYkxB,EAAU,CACzBsD,qBAAoBA,EACpBL,+BAA0BA,IAGlC,QACI,OAAOjD,G,aCrKF,GAAgB,CACzB1C,KAAM,GACNt1B,OAAQ,GACRg4B,SAAU,ICnBC,SAAS6E,GACpB3M,EACAnQ,GASA,YAAO,IAVPmQ,UAGgB,SAAAgI,gBAAA,CAAiC,CAC7C5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCtY,KAAM,GACN2Y,SAAU,IAJE,CAOD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,gBAHAuV,MAA4B,GAAcA,MAGlCvV,EAAO5T,MACf,KAAK,KAAqB4E,yBACtB,OAAO,EAAaukB,EAAMvV,EAAOG,SAAWH,EAAOG,QAAQ4c,oBAAsB,IAErF,QACI,OAAOxH,GAIf,SAAS,GACLjW,EACAU,GAEA,OAAQA,EAAO5T,MACf,KAAK,KAAqB4E,yBAC1B,KAAK,KAAqBG,0BACtB,OAAO,EAAYmO,EAAMU,EAAOV,MAEpC,QACI,OAAOA,GAIf,SAAS,GACLrf,EACA+f,GAEA,gBAHA/f,MAA+B,GAAcA,QAGrC+f,EAAO5T,MACf,KAAK,KAAqB2E,yBAC1B,KAAK,KAAqBC,yBACtB,OAAO+mB,EAAU93B,EAAQ,oBAE7B,KAAK,KAAqBiR,0BAC1B,KAAK,KAAqBC,0BACtB,OAAO,EAAYlR,EAAQ,CACvB+8B,iBAAYA,EACZC,sBAAiBA,IAGzB,KAAK,KAAqBhsB,sBACtB,OAAO8mB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,KAAK,KAAqB/O,uBACtB,OAAO,EAAYnR,EAAQ,CACvB+8B,YAAahd,EAAOG,QACpB8c,iBAAkBjd,EAAOV,KAAKlL,eAGtC,QACI,OAAOnU,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAkC,GAAcA,UAGxCjY,EAAO5T,MACf,KAAK,KAAqB2E,yBACtB,OAAOgnB,EAAUE,EAAU,gBAE/B,KAAK,KAAqB/mB,0BACtB,OAAO,EAAY+mB,EAAU,CACzBiF,YAAWA,EACXC,mBAAoBnd,EAAOV,KAAKlL,eAGxC,KAAK,KAAqBpD,yBAC1B,KAAK,KAAqBC,sBACtB,OAAO8mB,EAAUE,EAAU,gBAE/B,KAAK,KAAqB9mB,0BAC1B,KAAK,KAAqBC,uBACtB,OAAO,EAAY6mB,EAAU,CACzBiF,YAAWA,EACXC,wBAAmBA,IAG3B,QACI,OAAOlF,G,aChGF,GAAqC,CAC9C1C,KAAM,ICHK,SAAS6H,GACpBjN,EACAnQ,G,MAEA,gBAHAmQ,UAGKnQ,EAAOV,MAASU,EAAOV,KAAKM,SAIjB,SAAAuY,gBAAA,CAAqC,CACjD5C,KAAM,SAAA4C,gBAAA,EAAe,KACjB,EAACnY,EAAOV,KAAKM,UAAW,GAIzBqa,KANS,CAMD9J,EAAOnQ,GATXmQ,EAYf,SAAS,GACLoF,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,KAAyBoG,iCAC1B,OAAOulB,EAAUxC,EAAM,UAAkBvV,EAAOG,SAAWH,EAAOG,QAAQkd,SAE9E,KAAK,KAAyB1qB,kCAC1B,OAAOolB,EAAUxC,EAAM,WAAmBvV,EAAOG,SAAWH,EAAOG,QAAQuE,UAE/E,KAAK,KAAyBzR,4BAC1B,OAAO8kB,EAAUxC,EAAM,WAAYvV,EAAOG,SAE9C,KAAK,KAAyB7M,qBAC1B,OAAO,EAAYiiB,EAAMvV,EAAOG,SAEpC,QACI,OAAOoV,GCjBR,IAAM,GAAkC,CAC3Ct1B,OAAQ,CACJq9B,0BAA2B,GAC3BC,YAAa,GACbP,YAAa,IAEjB/E,SAAU,CACNuF,WAAY,GACZC,yBAA0B,GAC1BP,WAAY,KCvBL,SAASQ,GACpBvN,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAAsE,CAClF5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,IAAmBG,sBACxB,KAAK,IAAsBzG,6BAC3B,KAAK,IAAsBZ,4BAC3B,KAAK,IAAsBG,2BAC3B,KAAK,IAAsBG,2BAC3B,KAAK,IAAsBG,8BAC3B,KAAK,IAAiBqJ,qBACtB,KAAK,IAAiBG,sBAClB,OAAO,EAAaomB,EAAMvV,EAAOG,SAAWH,EAAOG,QAAQjI,cAE/D,KAAK,KAAmBnI,yBACpB,OAAO,EAAawlB,EAAM,IAE9B,QACI,OAAOA,GAIf,SAAS,GACLt1B,EACA+f,G,gBAEA,gBAHA/f,MAAiC,GAAcA,QAGvC+f,EAAO5T,MACf,KAAK,IAAmBE,sBACxB,KAAK,IAAmBC,sBACxB,KAAK,IAAsBzG,6BAC3B,KAAK,IAAsBD,6BACvB,OAAOkyB,EAAU93B,EAAQ,oBAE7B,KAAK,IAAmBuM,mBACxB,KAAK,IAAsBzG,0BACvB,OAAOgyB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,KAAK,IAAsBlb,4BAC3B,KAAK,IAAsBC,4BACvB,OAAO6yB,EAAU93B,EAAQ,sBAE7B,KAAK,IAAsBkF,yBACvB,OAAO4yB,EAAU93B,EAAQ,cAAe+f,EAAOG,SAEnD,KAAK,IAAsB9a,2BAC3B,KAAK,IAAsBD,2BACvB,OAAI4a,EAAOV,KACA,EAAYrf,EAAQ,CACvBs9B,aAAW,KACP,EAACvd,EAAOV,KAAKlH,W,KAKlBnY,EAEX,KAAK,IAAsBqF,wBACvB,OAAI0a,EAAOV,KACA,EAAYrf,EAAQ,CACvBs9B,aAAW,KACP,EAACvd,EAAOV,KAAKlH,IAAK4H,EAAOG,Q,KAK9BlgB,EAEX,KAAK,IAAsBuF,2BAC3B,KAAK,IAAsBD,2BACvB,OAAIya,EAAOV,KACA,EAAYrf,EAAQ,CACvB+8B,aAAW,KACP,EAAChd,EAAOV,KAAKlH,W,KAKlBnY,EAEX,KAAK,IAAsBwF,wBACvB,OAAIua,EAAOV,KACA,EAAYrf,EAAQ,CACvB+8B,aAAW,KACP,EAAChd,EAAOV,KAAKlH,IAAK4H,EAAOG,Q,KAK9BlgB,EAEX,KAAK,IAAsByF,8BAC3B,KAAK,IAAsBC,8BACvB,OAAIqa,EAAOV,KACA,EAAYrf,EAAQ,CACvBq9B,2BAAyB,KACrB,EAACtd,EAAOV,KAAKlH,W,KAKlBnY,EAEX,KAAK,IAAsB2F,2BACvB,OAAIoa,EAAOV,KACA,EAAYrf,EAAQ,CACvBq9B,2BAAyB,KACrB,EAACtd,EAAOV,KAAKlH,IAAK4H,EAAOG,Q,KAK9BlgB,EAEX,QACI,OAAOA,GAIf,SAAS,GACLg4B,EACAjY,G,gBAEA,gBAHAiY,MAAqC,GAAcA,UAG3CjY,EAAO5T,MACf,KAAK,IAAmBE,sBACpB,OAAOyrB,EAAUE,EAAU,gBAE/B,KAAK,IAAsBpyB,6BACvB,OAAOkyB,EAAUE,EAAU,+BAE/B,KAAK,IAAmB1rB,sBACxB,KAAK,IAAmBC,mBACpB,OAAOurB,EAAUE,EAAU,gBAE/B,KAAK,IAAsBnyB,6BAC3B,KAAK,IAAsBC,0BACvB,OAAOgyB,EAAUE,EAAU,+BAE/B,KAAK,IAAsBhzB,4BACvB,OAAO8yB,EAAUE,EAAU,iBAE/B,KAAK,IAAsB/yB,4BAC3B,KAAK,IAAsBC,yBACvB,OAAO4yB,EAAUE,EAAU,iBAE/B,KAAK,IAAsB7yB,2BACvB,OAAI4a,EAAOV,KACA,EAAY2Y,EAAU,CACzBuF,YAAU,KACN,EAACxd,EAAOV,KAAKlH,O,KAKlB6f,EAEX,KAAK,IAAsB5yB,2BAC3B,KAAK,IAAsBC,wBACvB,OAAI0a,EAAOV,KACA,EAAY2Y,EAAU,CACzBuF,YAAU,KACN,EAACxd,EAAOV,KAAKlH,O,KAKlB6f,EAEX,KAAK,IAAsB1yB,2BACvB,OAAIya,EAAOV,KACA,EAAY2Y,EAAU,CACzBiF,YAAU,KACN,EAACld,EAAOV,KAAKlH,O,KAKlB6f,EAEX,KAAK,IAAsBzyB,2BAC3B,KAAK,IAAsBC,wBACvB,OAAIua,EAAOV,KACA,EAAY2Y,EAAU,CACzBiF,YAAU,KACN,EAACld,EAAOV,KAAKlH,O,KAKlB6f,EAEX,KAAK,IAAsBvyB,8BACvB,OAAIsa,EAAOV,KACA,EAAY2Y,EAAU,CACzBwF,0BAAwB,KACpB,EAACzd,EAAOV,KAAKlH,O,KAKlB6f,EAEX,KAAK,IAAsBtyB,8BAC3B,KAAK,IAAsBC,2BACvB,OAAIoa,EAAOV,KACA,EAAY2Y,EAAU,CACzBwF,0BAAwB,KACpB,EAACzd,EAAOV,KAAKlH,O,KAKlB6f,EAEX,QACI,OAAOA,G,aChOF,GAAsC,CAC/Ch4B,OAAQ,GACRg4B,SAAU,ICTC,SAAS0F,GACpBxN,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAAsC,CAClD5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,KAA0BsJ,+BAC3B,OAAO,EAAa6f,EAAMvV,EAAOG,SAErC,QACI,OAAOoV,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAAqC,GAAcA,QAG3C+f,EAAO5T,MACf,KAAK,KAA0BqJ,+BAC/B,KAAK,KAA0BC,+BAC3B,OAAOqiB,EAAU93B,EAAQ,oBAE7B,KAAK,KAA0B0V,4BAC3B,OAAOoiB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAyC,GAAcA,UAG/CjY,EAAO5T,MACf,KAAK,KAA0BqJ,+BAC3B,OAAOsiB,EAAUE,EAAU,gBAE/B,KAAK,KAA0BviB,+BAC/B,KAAK,KAA0BC,4BAC3B,OAAOoiB,EAAUE,EAAU,gBAE/B,QACI,OAAOA,G,YC3BF,GAAuC,CAChD1C,KAAM,GACNt1B,OAAQ,GACRg4B,SAAU,ICjCC,SAAS2F,GACpBzN,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAA+D,CAC3E5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,G,QAEA,gBAHAuV,MAAkC,GAAcA,MAGxCvV,EAAO5T,MACf,KAAK,KAA2B3F,oBAC5B,OAAO,EAAY8uB,IAAI,MAClBvV,EAAOV,MAAQU,EAAOV,KAAKM,UAAW,CACnC4a,eAAcA,G,IAI1B,KAAK,KAA2B5zB,sBAC5B,OAAO,EAAY2uB,IAAI,MAClBvV,EAAOV,MAAQU,EAAOV,KAAKM,UAAW,CACnC4a,eAAcA,G,IAK1B,OAAOjF,EAGX,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAAsC,GAAcA,QAG5C+f,EAAO5T,MACf,KAAK,KAA2B5F,oBAChC,KAAK,KAA2BC,oBAC5B,OAAO,EAAYxG,EAAQ,CACvBw6B,qBAAgBA,EAChBC,wBAAmBA,IAG3B,KAAK,KAA2Bn0B,iBAC5B,OAAO,EAAYtG,EAAQ,CACvBw6B,gBAAiBza,EAAOG,QACxBua,mBAAoB1a,EAAOV,MAAQU,EAAOV,KAAKM,WAGvD,KAAK,KAA2BjZ,sBAChC,KAAK,KAA2BC,sBAC5B,OAAO,EAAY3G,EAAQ,CACvB06B,uBAAkBA,EAClBC,0BAAqBA,IAG7B,KAAK,KAA2Bl0B,mBAC5B,OAAO,EAAYzG,EAAQ,CACvB06B,kBAAmB3a,EAAOG,QAC1Bya,qBAAsB5a,EAAOV,MAAQU,EAAOV,KAAKM,WAGzD,KAAK,KAA2B1Z,uBAChC,KAAK,KAA2BC,uBAC5B,OAAO,EAAYlG,EAAQ,CACvB49B,wBAAmBA,EACnBC,2BAAsBA,IAG9B,KAAK,KAA2B73B,oBAC5B,OAAO,EAAYhG,EAAQ,CACvB49B,mBAAoB7d,EAAOG,QAC3B2d,sBAAuB9d,EAAOV,MAAQU,EAAOV,KAAKM,WAG1D,KAAK,KAA2BvZ,sBAChC,KAAK,KAA2BC,sBAC5B,OAAO,EAAYrG,EAAQ,CACvB89B,uBAAkBA,EAClBC,0BAAqBA,IAG7B,KAAK,KAA2B53B,mBAC5B,OAAO,EAAYnG,EAAQ,CACvB89B,kBAAmB/d,EAAOG,QAC1B6d,qBAAsBhe,EAAOV,MAAQU,EAAOV,KAAKM,WAGzD,KAAK,KAA2B/Y,yBAChC,KAAK,KAA2BC,0BAC5B,OAAO,EAAY7G,EAAQ,CACvBg7B,4BAAuBA,EACvBC,+BAA0BA,IAGlC,KAAK,KAA2Bn0B,wBAC5B,OAAO,EAAY9G,EAAQ,CACvBg7B,uBAAwBjb,EAAOG,QAC/B+a,0BAA2Blb,EAAOV,MAAQU,EAAOV,KAAKM,WAG9D,QACI,OAAO3f,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAA0C,GAAcA,UAGhDjY,EAAO5T,MACf,KAAK,KAA2B5F,oBAC5B,OAAO,EAAYyxB,EAAU,CACzBkD,gBAAeA,EACfT,mBAAoB1a,EAAOV,MAAQU,EAAOV,KAAKM,WAGvD,KAAK,KAA2BrZ,iBAChC,KAAK,KAA2BE,oBAC5B,OAAO,EAAYwxB,EAAU,CACzBkD,gBAAeA,EACfT,wBAAmBA,IAG3B,KAAK,KAA2B/zB,sBAC5B,OAAO,EAAYsxB,EAAU,CACzBmD,kBAAiBA,EACjBR,qBAAsB5a,EAAOV,MAAQU,EAAOV,KAAKM,WAGzD,KAAK,KAA2BlZ,mBAChC,KAAK,KAA2BE,sBAC5B,OAAO,EAAYqxB,EAAU,CACzBmD,kBAAiBA,EACjBR,0BAAqBA,IAG7B,KAAK,KAA2B10B,uBAC5B,OAAO,EAAY+xB,EAAU,CACzBgG,mBAAkBA,EAClBH,sBAAuB9d,EAAOV,MAAQU,EAAOV,KAAKM,WAG1D,KAAK,KAA2B3Z,oBAChC,KAAK,KAA2BE,uBAC5B,OAAO,EAAY8xB,EAAU,CACzBgG,mBAAkBA,EAClBH,2BAAsBA,IAG9B,KAAK,KAA2Bz3B,sBAC5B,OAAO,EAAY4xB,EAAU,CACzBiG,mBAAkBA,EAClBF,qBAAsBhe,EAAOV,MAAQU,EAAOV,KAAKM,WAGzD,KAAK,KAA2BxZ,mBAChC,KAAK,KAA2BE,sBAC5B,OAAO,EAAY2xB,EAAU,CACzBiG,mBAAkBA,EAClBF,0BAAqBA,IAG7B,KAAK,KAA2Bn3B,yBAC5B,OAAO,EAAYoxB,EAAU,CACzBsD,qBAAoBA,EACpBL,0BAA2Blb,EAAOV,MAAQU,EAAOV,KAAKM,WAG9D,KAAK,KAA2B9Y,0BAChC,KAAK,KAA2BC,wBAC5B,OAAO,EAAYkxB,EAAU,CACzBsD,qBAAoBA,EACpBL,+BAA0BA,IAGlC,QACI,OAAOjD,G,aC9KF,GAAkC,CAC3Ch4B,OAAQ,GACRg4B,SAAU,ICTC,SAASkG,GACpBhO,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAAkC,CAC9C5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAEA,OAAQA,EAAO5T,MACf,KAAK,KAAsB0J,yBACvB,OAAO,EAAYyf,EAAMvV,EAAOG,SAEpC,QACI,OAAOoV,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAAiC,GAAcA,QAGvC+f,EAAO5T,MACf,KAAK,KAAsByJ,yBAC3B,KAAK,KAAsBC,yBACvB,OAAOiiB,EAAU93B,EAAQ,oBAE7B,KAAK,KAAsB8V,sBACvB,OAAOgiB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAqC,GAAcA,UAG3CjY,EAAO5T,MACf,KAAK,KAAsByJ,yBACvB,OAAOkiB,EAAUE,EAAU,gBAE/B,KAAK,KAAsBliB,sBAC3B,KAAK,KAAsBD,yBACvB,OAAOiiB,EAAUE,EAAU,gBAC/B,QACI,OAAOA,G,aCxDT,GAAkC,CACpCh4B,OAAQ,GACRg4B,SAAU,IAGC,SAASmG,GACpBjO,EACAnQ,GAOA,YAAO,IARPmQ,UAGgB,SAAAgI,gBAAA,CAAkC,CAC9Cl4B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAFE,CAKD9H,EAAOnQ,GAG1B,SAAS,GACL/f,EACA+f,GAEA,gBAHA/f,MAAiC,GAAcA,QAGvC+f,EAAO5T,MACf,KAAK,KAAsB6J,0BAC3B,KAAK,KAAsBC,0BACvB,OAAO6hB,EAAU93B,EAAQ,qBAE7B,KAAK,KAAsBkW,uBACvB,OAAO4hB,EAAU93B,EAAQ,aAAc+f,EAAOG,SAElD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAqC,GAAcA,UAG3CjY,EAAO5T,MACf,KAAK,KAAsB6J,0BACvB,OAAO8hB,EAAUE,EAAU,iBAE/B,KAAK,KAAsB/hB,0BAC3B,KAAK,KAAsBC,uBACvB,OAAO4hB,EAAUE,EAAU,iBAE/B,QACI,OAAOA,GC1CR,IAAM,GAAoC,CAC7Ch4B,OAAQ,GACRg4B,SAAU,ICPC,SAASoG,GACpBlO,EACAnQ,GAOA,YAAO,IARPmQ,UAGgB,SAAAgI,gBAAA,CAAoC,CAChDl4B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAFE,CAKD9H,EAAOnQ,GAG1B,SAAS,GACL/f,EACA+f,GAEA,gBAHA/f,MAAmC,GAAcA,QAGzC+f,EAAO5T,MACf,KAAK,IAAwBqsB,6BAC7B,KAAK,IAAwBC,6BACzB,OAAOX,EAAU93B,EAAQ,sBAE7B,KAAK,IAAwB04B,0BACzB,OAAOZ,EAAU93B,EAAQ,cAAe+f,EAAOG,SAEnD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAuC,GAAcA,UAG7CjY,EAAO5T,MACf,KAAK,IAAwBqsB,6BACzB,OAAOV,EAAUE,EAAU,iBAE/B,KAAK,IAAwBU,0BAC7B,KAAK,IAAwBD,6BACzB,OAAOX,EAAUE,EAAU,iBAC/B,QACI,OAAOA,G,aC1BF,GAA+B,CACxCh4B,OAAQ,GACRg4B,SAAU,ICVC,SAASqG,GACpBnO,EACAnQ,GAQA,YAAO,IATPmQ,UAGgB,SAAAgI,gBAAA,CAA+B,CAC3C5C,KAAM,GACNt1B,OAAQ,SAAAo4B,gBAAA,CAAgB,GAAeT,GACvCK,SAAU,IAHE,CAMD9H,EAAOnQ,GAG1B,SAAS,GACLuV,EACAvV,GAGA,OAAQA,EAAO5T,MACf,KAAK,IAAmBG,sBACxB,KAAK,IAAmBG,wBACxB,KAAK,KAAsBwJ,0BAC3B,KAAK,IAAyBhI,8BAC9B,KAAK,IAAiBc,qBACtB,KAAK,IAAiBG,sBACtB,KAAK,IAAsBjK,4BAC3B,KAAK,IAAsBG,2BAC3B,KAAK,IAAsBG,2BAC3B,KAAK,IAAsBG,8BAC3B,KAAK,IAAsBG,6BAC3B,KAAK,IAA0ByL,8BAC/B,KAAK,IAA0BG,+BAC/B,KAAK,KAAyBkK,wBAC1B,OAAO,EAAY2Z,EAAM,SAAAqG,KAAA,CAAK5b,EAAOG,QAAS,CAC1C,iBACA,OACA,eACA,WACA,UACA,sBAGR,KAAKqY,EAAA,EAAgBprB,qBACjB,OAAO2qB,EAAUxC,EAAM,UAAWvV,EAAOG,SAAWH,EAAOG,QAAQoC,MAAMK,SAE7E,QACI,OAAO2S,GAIf,SAAS,GACLt1B,EACA+f,GAEA,gBAHA/f,MAA8B,GAAcA,QAGpC+f,EAAO5T,MACf,KAAK,IAAmBE,sBACxB,KAAK,IAAmBC,sBACpB,OAAOwrB,EAAU93B,EAAQ,oBAE7B,KAAK,IAAmBuM,mBACpB,OAAOurB,EAAU93B,EAAQ,YAAa+f,EAAOG,SAEjD,KAAK,IAAmB1T,wBACxB,KAAK,IAAmBC,wBACpB,OAAOqrB,EAAU93B,EAAQ,sBAE7B,KAAK,IAAmB0M,qBACpB,OAAOorB,EAAU93B,EAAQ,cAAe+f,EAAOG,SAEnD,QACI,OAAOlgB,GAIf,SAAS,GACLg4B,EACAjY,GAEA,gBAHAiY,MAAkC,GAAcA,UAGxCjY,EAAO5T,MACf,KAAK,IAAmBE,sBACpB,OAAOyrB,EAAUE,EAAU,gBAE/B,KAAK,IAAmBzrB,mBACxB,KAAK,IAAmBD,sBACpB,OAAOwrB,EAAUE,EAAU,gBAE/B,KAAK,IAAmBxrB,wBACpB,OAAOsrB,EAAUE,EAAU,iBAE/B,KAAK,IAAmBtrB,qBACxB,KAAK,IAAmBD,wBACpB,OAAOqrB,EAAUE,EAAU,iBAE/B,KAAK,KAAyBltB,iBAC1B,OAAOgtB,EAAUE,EAAU,2BAE/B,KAAK,KAAyBntB,cAC9B,KAAK,KAAyBE,iBAC1B,OAAO+sB,EAAUE,EAAU,2BAE/B,QACI,OAAOA,G,+BCpHA,SAASsG,GAAS9iC,EAAU+iC,GACvC,GAAI/iC,QACA,MAAM+iC,EAAeA,IAAiB,IAAIrhC,MAAM,qCAGpD,OAAO1B,ECAI,SAASgjC,GAAoCld,GACxD,OAcJ,SAAuCA,EAAWmd,GAC9C,IAAMC,EAAQpiC,OAAOjB,OAAOimB,GAa5B,OAGJ,SAA6BA,EAAgBqd,GAGzC,IAFA,IAAIj6B,EAAYpI,OAAOsiC,eAAetd,GAE/B5c,GACHi6B,EAASj6B,GAETA,EAAYpI,OAAOsiC,eAAel6B,GAN1C,CAdwB4c,GAAQ,YACxBhlB,OAAOklB,oBAAoB9c,GACtBxG,SAAQ,YACQ,gBAATuF,GAAiD,mBAAhBi7B,EAAMj7B,IAA2C,MAAnBA,EAAKo7B,OAAO,KAI/EH,EAAMj7B,GAAQg7B,EAAKnd,EAAiC7d,UAIzDi7B,EAdX,CAduBpd,GAAQ,SAACA,EAAQ7d,GAChC,kB,UAAC,kDAAmB,gBAAAq7B,WAAA,EAAW,EAAA56B,EAAOT,IAAM1G,KAAI,kCAACukB,GAAW5C,S,sBCkGrD,GAnGoC,CAC/C,qBAAsB,CAClBqgB,SAAU,SACV/d,OAAQ,eAEZ,iBAAkB,CACd+d,SAAU,UACV/d,OAAQ,UAEZ,eAAgB,CACZ+d,SAAU,UACV/d,OAAQ,QAEZ,gBAAiB,CACb+d,SAAU,UACV/d,OAAQ,SAEZ,0BAA2B,CACvB+d,SAAU,UACV/d,OAAQ,mBAEZ,yBAA0B,CACtB+d,SAAU,UACV/d,OAAQ,kBAEZ,kBAAmB,CACf+d,SAAU,UACV/d,OAAQ,WAEZge,SAAU,CACND,SAAU,WACV/d,OAAQ,eAEZ2I,UAAW,CACPoV,SAAU,YACV/d,OAAQ,eAEZie,gBAAiB,CACbF,SAAU,YACV/d,OAAQ,UAEZke,aAAc,CACVH,SAAU,eACV/d,OAAQ,eAEZme,OAAQ,CACJJ,SAAU,SACV/d,OAAQ,eAEZoe,YAAa,CACTL,SAAU,cACV/d,OAAQ,eAEZ,0BAA2B,CACvB+d,SAAU,cACV/d,OAAQ,eAEZqe,OAAQ,CACJN,SAAU,SACV/d,OAAQ,eAEZ,gBAAiB,CACb+d,SAAU,WACV/d,OAAQ,QAEZse,YAAa,CACTP,SAAU,cACV/d,OAAQ,eAEZue,cAAe,CACXR,SAAU,gBACV/d,OAAQ,eAEZwe,SAAU,CACNT,SAAU,WACV/d,OAAQ,eAEZye,WAAY,CACRV,SAAU,aACV/d,OAAQ,eAEZ0e,QAAS,CACLX,SAAU,UACV/d,OAAQ,eAEZ2e,UAAW,CACPZ,SAAU,YACV/d,OAAQ,eAEZ4e,KAAM,CACFb,SAAU,OACV/d,OAAQ,eAEZ,0BAA2B,CACvB+d,SAAU,cACV/d,OAAQ,gBC7FhB,SAAS6e,GAAU7nB,GACf,OAAO,SAAAgX,OAAA,CAAO,CACV5W,UAAWJ,EAAQI,UACnBC,SAAUL,EAAQK,SAClBC,QAASN,EAAQM,QACjBE,SAAUR,EAAQQ,SAClBE,SAAUV,EAAQU,SAClBC,KAAMX,EAAQW,KACdE,gBAAiBb,EAAQa,gBACzBM,YAAanB,EAAQmB,YACrBF,WAAYjB,EAAQiB,WACpBG,MAAOpB,EAAQoB,MACfC,aAAcrB,EAAQqB,cACvB,EAAAymB,UCLA,IAAM,GAAkC,CAC3C9/B,OAAQ,GACRg4B,SAAU,ICUP,SAAS+H,KACZ,ICNMzM,EAKA0M,EAOAC,EAKAC,EAKAC,EAKA5C,EAKA6C,EAKAC,ECxCAlQ,EAKA+K,EAaAX,EAiBAY,EAaAmF,EAWAC,EC5DAC,EAKAC,EAKAC,EAKAC,EAKAC,EClBArN,EAKAsN,EAOAC,EAKAC,EAKAC,EAKAC,ECjCA1Q,ECDAsD,ECiBAqN,EASAC,EAWAC,EAWAC,EAyBAC,EAmBA1M,EASA2M,EASAC,EASAC,ECrHAC,EAKAC,EAKAC,ERGAC,GCNAvO,EAAoB,cACtB,SAACpD,GAA+B,SAAMoF,QACtC,YAAQ,kBAAM,aAGZ0K,EAA2B,aAC7B1M,GACA,YAAqB,kBACjB,OAAOgL,GAAMhL,KAAqB,WAAM,WAAI,KAAiB,KAAqBloB,8BAIpF60B,EAAiB,cACnB,SAAC/P,GAA+B,SAAMlwB,OAAOs9B,eAC7C,YAAS,kBAAM,aAGb4C,EAA0B,cAC5B,SAAChQ,GAA+B,SAAMlwB,OAAO8hC,wBAC7C,YAAS,kBAAM,aAGb3B,EAAe,cACjB,SAACjQ,GAA+B,SAAMlwB,OAAO+hC,aAC7C,YAAS,kBAAM,aAGbxE,EAAa,cACf,SAACrN,GAA+B,QAAEA,EAAM8H,SAASuF,cACjD,YAAU,kBAAM,aAGd6C,EAAsB,cACxB,SAAClQ,GAA+B,QAAEA,EAAM8H,SAASoI,uBACjD,YAAU,kBAAM,aAGdC,EAAY,cACd,SAACnQ,GAA+B,QAAEA,EAAM8H,SAASqI,aACjD,YAAU,kBAAM,aAGb,UAAA2B,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,SAEO,CACHoD,kBAAmBA,EAAkBpD,GACrC8P,yBAA0BA,EAAyB9P,GACnD+P,eAAgBA,EAAe/P,GAC/BgQ,wBAAyBA,EAAwBhQ,GACjDiQ,aAAcA,EAAajQ,GAC3BqN,WAAYA,EAAWrN,GACvBkQ,oBAAqBA,EAAoBlQ,GACzCmQ,UAAWA,EAAUnQ,QD9CvB+R,ESZH,WACH,IAAMjR,EAAU,cACZ,SAACd,GAAqB,SAAMoF,QAC5B,YAAQ,kBAAM,aAGZ4M,EAAiB,aACnBlR,GACA,YAAW,kBACT,OAAOsN,GAAMtN,KAAW,WAAM,WAAI,KAAiB,KAAqB3lB,oBAIxE80B,EAAe,cACjB,SAACjQ,GAAqB,SAAMlwB,OAAO+hC,aACnC,YAAS,kBAAM,aAGb1B,EAAY,cACd,SAACnQ,GAAqB,QAAEA,EAAM8H,SAASqI,aACvC,YAAU,kBAAM,aAGpB,OAAO,UAAA2B,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,SAEO,CACHc,QAASA,EAAQd,GACjBgS,eAAgBA,EAAehS,GAC/BiQ,aAAcA,EAAajQ,GAC3BmQ,UAAWA,EAAUnQ,OA9B1B,GTaGiS,GEXAhS,EAAW,cACb,SAACD,GAA+B,YAChC,YAAS,kBAAM,aAGbgL,EAAiB,cACnB,SAAChL,GAA+B,SAAM8H,YACtC,YAAY,iBAAAnZ,QAAA,EAAQ,SAACc,GACjB,GAAIA,EAAU,CACV,IAAMqB,EAASgX,EAASrY,GAExB,OAAM,KAAEqB,GAAUA,EAAOka,gBAG7B,OAAO,SAAAzT,KAAA,CAAKuQ,EAAU,CAAEkD,gBAAeA,UAIzCX,EAAgB,cAClB,SAACrK,GAA+B,SAAMoF,QACtC,YAAQ,iBAAAzW,QAAA,EAAQ,SAACc,EAAoCsa,GACjD,IAAMjZ,EAASsU,EAAK3V,GAEpB,QAAKqB,IAIAiZ,OAIEjZ,EAAO4Y,sBAAsBK,GAHzB,SAAAxS,KAAA,CAAKzG,EAAO4Y,uBAAuB,YAAiB,uBAOjEuB,EAAmB,cACrB,SAACjL,GAA+B,SAAM8H,YACtC,YAAY,iBAAAnZ,QAAA,EAAQ,SAACc,GACjB,GAAIA,EAAU,CACV,IAAMqB,EAASgX,EAASrY,GAExB,OAAM,KAAEqB,GAAUA,EAAOma,kBAG7B,OAAO,SAAA1T,KAAA,CAAKuQ,EAAU,CAAEmD,kBAAiBA,UAI3CmF,EAAqB,cACvB,SAACpQ,GAA+B,SAAMlwB,UACtC,YAAU,iBAAA6e,QAAA,EAAQ,SAACc,GACf,IAAMqB,EAASrB,EACX3f,EAAO2f,GACP,SAAA4F,KAAA,CAAK,SAAA8P,OAAA,CAAOr1B,IAAS,YAAU,SAAGghB,IAAUA,EAAOwZ,oBAEvD,OAAOxZ,GAAUA,EAAOwZ,sBAI1B+F,EAAuB,cACzB,SAACrQ,GAA+B,SAAMlwB,UACtC,YAAU,iBAAA6e,QAAA,EAAQ,SAACc,GACf,IAAMqB,EAASrB,EACX3f,EAAO2f,GACP,SAAA4F,KAAA,CAAK,SAAA8P,OAAA,CAAOr1B,IAAS,YAAU,SAAGghB,IAAUA,EAAO0Z,sBAEvD,OAAO1Z,GAAUA,EAAO0Z,wBAIzB,UAAAsH,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,SAEO,CACHC,SAAUA,EAASD,GACnBgL,eAAgBA,EAAehL,GAC/BqK,cAAeA,EAAcrK,GAC7BiL,iBAAkBA,EAAiBjL,GACnCoQ,mBAAoBA,EAAmBpQ,GACvCqQ,qBAAsBA,EAAqBrQ,QFnE7CkS,EUDH,WAEH,IAAMC,EAAY,cACd,SAACnS,GAAuB,SAAMoF,QAC9B,YAAQ,kBAAM,aAGZgN,EAAmB,cACrB,SAACpS,GAAuB,SAAMoF,QAC9B,YAAQ,gBAACiN,GACL,GAAKjN,EAAL,CAIQ,MAAkBA,EAAKl5B,QAAO,cAEtC,GAAKomC,EAIL,YAAO,IAAAD,EACHC,EAAc/lB,QAAO,SAAC,G,IAAEtQ,EAAI,OAAO,WAAeA,KAClDq2B,OAINvO,EAAiB,cACnB,SAAC/D,GAAuB,SAAMoF,QAC9B,SAAC3U,EAAgB,G,IAAE8hB,EAAS,YAAmC,UAAaA,EAAUnN,QACtF,SAACA,EAAMoN,GAAe,kBAAM,UAAQA,EAAc,SAAD,SAAC,uBAC3CpN,EAAKtB,aAAW,CACnB0O,WAAU,eAIZC,EAAwB,aAC1B1O,GACA,YAAkB,kBAChB,OAAOqK,GAAMrK,KAAkB,WAAM,WAAI,KAAiB,KAAqBxoB,8BAI/E2kB,EAAmB,cACrB,SAACF,GAAuB,SAAMoF,MAAQpF,EAAMoF,KAAKl5B,WACjD,YAAQ,kBAAM,aAGZwmC,EAAoB,cACtB,SAAC1S,GAAuB,SAAM7Q,MAAQ6Q,EAAM7Q,KAAKwjB,kBACjD,YAAQ,kBAAM,aAGZC,EAAgC,cAClC,SAAC5S,GAAuB,SAAM7Q,MAAQ6Q,EAAM7Q,KAAK0jB,8BACjD,YAAQ,kBAAM,aAGZ5C,EAAe,cACjB,SAACjQ,GAAuB,SAAMlwB,OAAO+hC,aACrC,YAAS,kBAAM,aAGb1B,EAAY,cACd,SAACnQ,GAAuB,QAAEA,EAAM8H,SAASqI,aACzC,YAAU,kBAAM,aAGpB,OAAO,UAAA2B,WAAA,EAAW,SACd9R,EACAuS,GAEA,YAAO,IAHPvS,SAGO,CACHmS,UAAWA,EAAUnS,GACrBoS,iBAAkBA,EAAiBpS,GACnC+D,eAAgBA,EAAe/D,EAAO,CAAEuS,UAAS,IACjDE,sBAAuBA,EAAsBzS,EAAO,CAAEuS,UAAS,IAC/DrS,iBAAkBA,EAAiBF,GACnC0S,kBAAmBA,EAAkB1S,GACrC4S,8BAA+BA,EAA8B5S,GAC7DiQ,aAAcA,EAAajQ,GAC3BmQ,UAAWA,EAAUnQ,OAhF1B,GVEG8S,EWlBH,WACH,IAAMC,EAAe,cACjB,SAAC/S,GAAwB,SAAMoF,QAC/B,YAAa,kBAAM,aAGjB6K,EAAe,cACjB,SAACjQ,GAAwB,SAAMlwB,OAAO+hC,aACtC,YAAS,kBAAM,aAGb1B,EAAY,cACd,SAACnQ,GAAwB,QAAEA,EAAM8H,SAASqI,aAC1C,YAAU,kBAAM,aAGpB,OAAO,UAAA2B,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACH+S,aAAcA,EAAa/S,GAC3BiQ,aAAcA,EAAajQ,GAC3BmQ,UAAWA,EAAUnQ,OAtB1B,GXmBGgT,GGfA1C,EAAa,cACf,SAACtQ,GAAuB,SAAMoF,QAC9B,YAAQ,kBAAM,aAGZmL,EAAiB,cACnB,SAACvQ,GAAuB,SAAMlwB,OAAOmjC,qBACrC,YAAS,kBAAM,aAGbzC,EAAgB,cAClB,SAACxQ,GAAuB,SAAMlwB,OAAOojC,oBACrC,YAAS,kBAAM,aAGbzC,EAAa,cACf,SAACzQ,GAAuB,QAAEA,EAAM8H,SAASqL,oBACzC,YAAU,kBAAM,aAGdzC,EAAa,cACf,SAAC1Q,GAAuB,QAAEA,EAAM8H,SAASsL,oBACzC,YAAU,kBAAM,aAGb,UAAAtB,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHsQ,WAAYA,EAAWtQ,GACvBuQ,eAAgBA,EAAevQ,GAC/BwQ,cAAeA,EAAcxQ,GAC7ByQ,WAAYA,EAAWzQ,GACvB0Q,WAAYA,EAAW1Q,QHjBzBqT,GIdAhQ,EAAc,cAChB,SAACrD,GAAyB,SAAMoF,QAChC,YAAY,kBAAM,aAGhBuL,EAAqB,aACvBtN,GACA,YAAe,kBACX,OAAO+K,GAAM/K,KAAe,WAAM,WAAI,KAAiB,KAAqB/nB,wBAI9Es1B,EAAwB,cAC1B,SAAC5Q,GAAyB,SAAMlwB,OAAOk3B,eACvC,YAAS,kBAAM,aAGb6J,EAA4B,cAC9B,SAAC7Q,GAAyB,QAAEA,EAAM8H,SAASwL,cAC3C,YAAU,kBAAM,aAGdxC,EAAwB,cAC1B,SAAC9Q,GAAyB,SAAMlwB,OAAOyjC,sBACvC,YAAS,kBAAM,aAGbxC,EAA4B,cAC9B,SAAC/Q,GAAyB,QAAEA,EAAM8H,SAAS0L,qBAC3C,YAAU,kBAAM,aAGb,UAAA1B,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHqD,YAAaA,EAAYrD,GACzB2Q,mBAAoBA,EAAmB3Q,GACvC4Q,sBAAuBA,EAAsB5Q,GAC7C6Q,0BAA2BA,EAA0B7Q,GACrD8Q,sBAAuBA,EAAsB9Q,GAC7C+Q,0BAA2BA,EAA0B/Q,QJ1BvDyT,EYhBH,WACH,IAAMC,EAAiB,cACnB,SAAC1T,GAAiC,SAAMlwB,OAAO66B,kBAC/C,SAAC3K,GAAiC,SAAMlwB,OAAO46B,eAC/C,SAACC,EAAgBD,GAAgB,gBAACjb,GAC9B,IAAIA,GAAYkb,IAAmBlb,EAInC,OAAOib,MAITiJ,EAAkB,cACpB,SAAC3T,GAAiC,SAAMlwB,OAAO+6B,mBAC/C,SAAC7K,GAAiC,SAAMlwB,OAAO86B,gBAC/C,SAACC,EAAiBD,GAAiB,gBAACnb,GAChC,IAAIA,GAAYob,IAAoBpb,EAIpC,OAAOmb,MAITwF,EAAqB,cACvB,SAACpQ,GAAiC,SAAMlwB,OAAOy6B,sBAC/C,SAACvK,GAAiC,SAAMlwB,OAAOw6B,mBAC/C,SAACC,EAAoBD,GAAoB,gBAAC7a,GACtC,IAAIA,GAAY8a,IAAuB9a,EAIvC,OAAO6a,MAITsJ,EAA4B,cAC9B,SAAC5T,GAAiC,SAAMlwB,OAAOi7B,6BAC/C,SAAC/K,GAAiC,SAAMlwB,OAAOg7B,0BAC/C,SAACC,EAA2BD,GAA2B,gBAACrb,GACpD,IAAIA,GAAYsb,IAA8Btb,EAI9C,OAAOqb,MAITI,EAAc,cAChB,SAAClL,GAAiC,SAAM8H,SAAS6C,kBACjD,SAAC3K,GAAiC,SAAM8H,SAASoD,eACjD,SAACP,EAAgBO,GAAgB,gBAACzb,GAC9B,QAAIA,GAAYkb,IAAmBlb,IAI1Byb,OAIXC,EAAe,cACjB,SAACnL,GAAiC,SAAM8H,SAAS+C,mBACjD,SAAC7K,GAAiC,SAAM8H,SAASqD,gBACjD,SAACN,EAAiBM,GAAiB,gBAAC1b,GAChC,QAAIA,GAAYob,IAAoBpb,IAI3B0b,OAIXH,EAAiB,cACnB,SAAChL,GAAiC,SAAM8H,SAASyC,sBACjD,SAACvK,GAAiC,SAAM8H,SAASkD,kBACjD,SAACT,EAAoBS,GAAmB,gBAACvb,GACrC,QAAIA,GAAY8a,IAAuB9a,IAI9Bub,OAIXX,EAAgB,cAClB,SAACrK,GAAiC,SAAMoF,QACxC,YAAQ,gBAAC3V,GACL,SACI2V,EAAK3V,KACL2V,EAAK3V,GAAU4a,mBAKrBe,EAAsB,cACxB,SAACpL,GAAiC,SAAM8H,SAASiD,6BACjD,SAAC/K,GAAiC,SAAM8H,SAASsD,uBACjD,SAACL,EAA2BK,GAAwB,gBAAC3b,GACjD,QAAIA,GAAYsb,IAA8Btb,IAIrC2b,OAIjB,OAAO,UAAA0G,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACH0T,eAAgBA,EAAe1T,GAC/B2T,gBAAiBA,EAAgB3T,GACjCoQ,mBAAoBA,EAAmBpQ,GACvC4T,0BAA2BA,EAA0B5T,GACrDkL,YAAaA,EAAYlL,GACzBmL,aAAcA,EAAanL,GAC3BgL,eAAgBA,EAAehL,GAC/BqK,cAAeA,EAAcrK,GAC7BoL,oBAAqBA,EAAoBpL,OAvH9C,GZiBG6T,EalBH,WACH,IAAMC,EAAsB,cACxB,SAAC9T,GAAgC,SAAMoF,QACvC,YAAQ,kBAAM,aAGZmL,EAAiB,cACnB,SAACvQ,GAAgC,SAAMlwB,OAAOikC,8BAC9C,YAAS,kBAAM,aAGbvD,EAAgB,cAClB,SAACxQ,GAAgC,SAAMlwB,OAAOkkC,6BAC9C,YAAS,kBAAM,aAGbvD,EAAa,cACf,SAACzQ,GAAgC,QAAEA,EAAM8H,SAASmM,6BAClD,YAAU,kBAAM,aAGdvD,EAAa,cACf,SAAC1Q,GAAgC,QAAEA,EAAM8H,SAASoM,6BAClD,YAAU,kBAAM,aAGpB,OAAO,UAAApC,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACH8T,oBAAqBA,EAAoB9T,GACzCuQ,eAAgBA,EAAevQ,GAC/BwQ,cAAeA,EAAcxQ,GAC7ByQ,WAAYA,EAAWzQ,GACvB0Q,WAAYA,EAAW1Q,OAlC5B,GbmBGmU,GcfH,WACH,IAAMC,EAAgC,cAClC,SAACpU,GAA2B,SAAMoF,QAClC,YAAe,gBAAC7B,GACZ,GAAKW,EAAL,CAIA,IAAMmQ,EAAmB9Q,EAAckC,QAAalC,EAAckC,QAAO,IAAIlC,EAActb,GAAOsb,EAActb,GAE1GqsB,EAAgB,GAAqBD,GAE3C,OAAKC,EAIE,SAAA/nB,OAAA,CAA0B2X,EAAaoQ,GAHnC,QAObC,EAAoB,cACtB,SAACvU,GAA2B,SAAMoF,QAClC,SAAClB,GAAqB,gBAArBA,UAAqB,SAACjgB,GACnB,IAAMuwB,EAAQ,SAAArP,OAAA,CAAO,IAErB,OAAOjB,EAAY7O,MAAK,SAACtR,GACrB,SAAW0wB,cAAgBxwB,GACP,SAApBF,EAAW9H,MACXu4B,EAAMjd,MAAK,YAAQ,gBAAAmd,QAAA,CAAQ3wB,EAAYoZ,aAK7CwX,EAAiB,cACnB,SAAC3U,GAA2B,SAAMoF,QAClC,YAAe,kBACX,GAAKlB,EAUL,OANgC,SAAA0Q,QAAA,CAAQ,IAAsB,YAC1D,gBAAAroB,OAAA,CAAO2X,GAAa,SAACngB,GACjB,OAAO,SAAA2wB,QAAA,CAAQ3wB,EAAY8wB,aAQrC1Q,EAAqB,cACvB,SAACnE,GAA2B,SAAM7Q,QAClC,YAAQ,kBAAM,aAGZ8gB,EAAe,cACjB,SAACjQ,GAA2B,SAAMlwB,OAAO+hC,aACzC,YAAa,kBAAM,aAGjBiD,EAAiB,cACnB,SAAC9U,GAA2B,SAAMlwB,OAAOg9B,oBACzC,SAAC9M,GAA2B,SAAMlwB,OAAO+8B,eACzC,SAACC,EAAkBD,GAAgB,gBAAC5oB,GAChC,IAAIA,GAAgB6oB,IAAqB7oB,EAIzC,OAAO4oB,MAITsD,EAAY,cACd,SAACnQ,GAA2B,SAAM8H,SAASqI,aAC3C,YAAa,kBAAM,QAAEA,MAGnBpD,EAAa,cACf,SAAC/M,GAA2B,SAAM8H,SAASkF,sBAC3C,SAAChN,GAA2B,SAAM8H,SAASiF,cAC3C,SAACC,EAAoBD,GAAe,gBAAC9oB,GACjC,QAAIA,GAAgB+oB,IAAuB/oB,IAIlC8oB,OAIjB,OAAO,UAAA+E,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHuU,kBAAmBA,EAAkBvU,GACrC2U,eAAgBA,EAAe3U,GAC/BoU,8BAA+BA,EAA8BpU,GAC7DmE,mBAAoBA,EAAmBnE,GACvCiQ,aAAcA,EAAajQ,GAC3B8U,eAAgBA,EAAe9U,GAC/BmQ,UAAWA,EAAUnQ,GACrB+M,WAAYA,EAAW/M,OApG5B,GdgBG+U,GepBH,WACH,IAAMC,EAA2B,cAC7B,SAAChV,GAA2B,SAAMoF,QAClC,YAAc,gBAAC6P,EAA2BhsB,YAA3BgsB,UACX,IAAMC,EAAkB,SAAA7f,KAAA,CAAK4f,EAAW,CAAEtiB,KAAM1J,IAGhD,OAFeupB,EAAaA,EAAW5R,gBAAkB,IAE3CvW,KAAI,SAAC8qB,GAAe,SAAaA,EAAOF,EAAWC,UAInEE,EAA0B,cAC5B,SAACpV,GAA2B,SAAMoF,QAClC,YAAc,gBAAC6P,EAA2BhsB,YAA3BgsB,UACX,IAAMC,EAAkB,SAAA7f,KAAA,CAAK4f,EAAW,CAAEtiB,KAAM1J,IAGhD,OAFeupB,EAAaA,EAAW9gB,eAAiB,IAE1CrH,KAAI,SAAC8qB,GAAe,SAAaA,EAAOF,EAAWC,UAInEG,EAA2B,cAC7B,SAACrV,GAA2B,SAAMoF,QAClC,YAAc,kBAAM,SAAaoN,EAAW8C,gBAAkB,OAG5DrF,EAAe,cACjB,SAACjQ,GAA2B,SAAMlwB,OAAO+hC,aACzC,YAAS,kBAAM,aAGb1B,EAAY,cACd,SAACnQ,GAA2B,QAAEA,EAAM8H,SAASqI,aAC7C,YAAU,kBAAM,aAGpB,SAASoF,EAAaJ,EAAkBF,EAAsBC,GAC1D,MAAmB,gBAAfC,EAAM5hC,KAed,SAAwB4hC,EAAkBF,EAA2BjsB,GACjE,QADiEA,IAA3BisB,WACjCA,EAAUtqC,OACX,OAAOwqC,EAGH,OAAcnsB,GAAW,IAAE,KAA3B,WAAO,KAAE,EACXuJ,EAAQ0iB,EAAU5qB,KAAI,SAAC,GAAwB,OACjD/e,MAD+B,OAE/BkqC,MAFqC,WAKzC,OAAO,yCACAL,GAAK,CACRjpB,QAAS,CAAEqG,MAAK,GAChBtgB,QAAS0gB,EACT1W,KAAM,QACNw5B,UAAW,WACXC,SAAU,WAjBlB,CAd8BP,EAAOF,EAAWC,GAGzB,oBAAfC,EAAM5hC,KAgCd,SAAyB4hC,EAAkBnsB,GACjC,MAAuCA,GAAW,GAAhD,IAAA2sB,aAAA,WAAe,KAAE,EAAEC,EAAa,gBAExC,IAAKD,EAAahrC,OACd,OAAO,yCACAwqC,GAAK,CACR7d,SAA2B,MAAjBse,GAAgCA,IAIlD,IAAMrjB,EAAQojB,EAAatrB,KAAI,SAAC,GAAwB,OACpD/e,MADkC,OAElCkqC,MAFwC,WAK5C,OAAO,yCACAL,GAAK,CACR5hC,KAAM,sBACN2Y,QAAS,CAAEqG,MAAK,GAChB+E,SAA2B,MAAjBse,GAA+BA,EACzC35B,KAAM,QACNw5B,UAAW,WACXC,SAAU,WAtBlB,CA/B+BP,EAAOD,GAGf,eAAfC,EAAM5hC,KAsDd,SAA0B4hC,EAAkBnsB,GAChC,OAAwBA,GAAW,IAAE,eAArC,WAAiB,KAAE,EAE3B,gBAAI6sB,EACOV,EAGJ,yCAAKA,GAAK,CAAE7d,SAAUtT,QAAQ6xB,KAPzC,CArDgCV,EAAOD,GAG5BC,EA4DX,OAAO,UAAArD,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHgV,yBAA0BA,EAAyBhV,GACnDoV,wBAAyBA,EAAwBpV,GACjDqV,yBAA0BA,EAAyBrV,GACnDiQ,aAAcA,EAAajQ,GAC3BmQ,UAAWA,EAAUnQ,OfjGF8V,GACrBC,GgBhBH,WACH,IAAMC,EAAoB,cACtB,SAAChW,GAA8B,SAAMoF,QACrC,YAAkB,kBAAM,aAGtBf,EAAwB,cAC1B,SAACrE,GAA8B,SAAM7Q,QACrC,YAAQ,kBAAM,aAGZsU,EAAmB,cACrB,SAACzD,GAA8B,SAAMoF,QACrC,YAAkB,gBAAC3V,EAAkBiU,GACjC,OAAOA,EACH,SAAArO,KAAA,CAAKmO,EAAgB,CAAEvb,GAAIwH,EAAUgW,QAAS/B,IAC9C,SAAArO,KAAA,CAAKmO,EAAgB,CAAEvb,GAAIwH,QAIjCwmB,EAA0B,aAC5BxS,GACA,YAAoB,gBAAChU,EAAkBiU,GACnC,OAAO0K,GAAM3K,EAAiBhU,EAAUiU,IAAY,WAAM,WAAI,KAAiB,KAAqB7nB,6BAItGo0B,EAAe,cACjB,SAACjQ,GAA8B,SAAMlwB,OAAO+hC,aAC5C,YAAa,kBAAM,aAGjBqE,EAAqB,cACvB,SAAClW,GAA8B,SAAMlwB,OAAOm8B,gBAC5C,SAACjM,GAA8B,SAAMlwB,OAAOo8B,mBAC5C,SAACD,EAAcC,GAAoB,gBAACzc,GAChC,IAAIA,GAAYwc,IAAiBxc,EAIjC,OAAOyc,MAITiE,EAAY,cACd,SAACnQ,GAA8B,SAAM8H,SAASqI,aAC9C,YAAa,kBAAM,QAAEA,MAGnBhE,EAAkB,cACpB,SAACnM,GAA8B,SAAM8H,SAASmE,gBAC9C,SAACjM,GAA8B,SAAM8H,SAASqE,mBAC9C,SAACF,EAAcE,GAAoB,gBAAC1c,GAChC,QAAIA,GAAYwc,IAAiBxc,IAIxB0c,OAIjB,OAAO,UAAA2F,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHgW,kBAAmBA,EAAkBhW,GACrCqE,sBAAuBA,EAAsBrE,GAC7CyD,iBAAkBA,EAAiBzD,GACnCiW,wBAAyBA,EAAwBjW,GACjDiQ,aAAcA,EAAajQ,GAC3BkW,mBAAoBA,EAAmBlW,GACvCmQ,UAAWA,EAAUnQ,GACrBmM,gBAAiBA,EAAgBnM,OAxEtC,GhBiBGmW,GiBrBH,WACH,IAAM/F,EAAqB,cACvB,SAACpQ,GAAgC,SAAMlwB,OAAOy6B,sBAC9C,SAACvK,GAAgC,SAAMlwB,OAAOw6B,mBAC9C,SAACC,EAAoBD,GAAoB,gBAAC7a,GACtC,IAAIA,GAAY8a,IAAuB9a,EAIvC,OAAO6a,MAIT8L,EAAkB,cACpB,SAACpW,GAAgC,SAAMlwB,OAAOw8B,mBAC9C,SAACtM,GAAgC,SAAMlwB,OAAOu8B,gBAC9C,SAACC,EAAiBD,GAAiB,gBAAC5c,GAChC,IAAIA,GAAY6c,IAAoB7c,EAIpC,OAAO4c,MAITgK,EAAmB,cACrB,SAACrW,GAAgC,SAAMlwB,OAAO08B,oBAC9C,SAACxM,GAAgC,SAAMlwB,OAAOy8B,iBAC9C,SAACC,EAAkBD,GAAkB,gBAAC9c,GAClC,IAAIA,GAAY+c,IAAqB/c,EAIrC,OAAO8c,MAIT+J,EAA4B,cAC9B,SAACtW,GAAgC,SAAMlwB,OAAOi7B,6BAC9C,SAAC/K,GAAgC,SAAMlwB,OAAOg7B,0BAC9C,SAACC,EAA2BD,GAA2B,gBAACrb,GACpD,IAAIA,GAAYsb,IAA8Btb,EAI9C,OAAOqb,MAITE,EAAiB,cACnB,SAAChL,GAAgC,SAAM8H,SAASyC,sBAChD,SAACvK,GAAgC,SAAM8H,SAASkD,kBAChD,SAACT,EAAoBS,GAAmB,gBAACvb,GACrC,QAAIA,GAAY8a,IAAuB9a,IAI9Bub,OAIXX,EAAgB,cAClB,SAACrK,GAAgC,SAAMoF,QACvC,YAAQ,gBAAC3V,GACL,SACI2V,EAAK3V,KACL2V,EAAK3V,GAAU4a,mBAKrBoC,EAAc,cAChB,SAACzM,GAAgC,SAAM8H,SAASwE,mBAChD,SAACtM,GAAgC,SAAM8H,SAAS2E,eAChD,SAACH,EAAiBG,GAAgB,gBAAChd,GAC/B,QAAIA,GAAY6c,IAAoB7c,IAI3Bgd,OAIXC,EAAe,cACjB,SAAC1M,GAAgC,SAAM8H,SAAS0E,oBAChD,SAACxM,GAAgC,SAAM8H,SAAS4E,gBAChD,SAACF,EAAkBE,GAAiB,gBAACjd,GACjC,QAAIA,GAAY+c,IAAqB/c,IAI5Bid,OAIXtB,EAAsB,cACxB,SAACpL,GAAgC,SAAM8H,SAASiD,6BAChD,SAAC/K,GAAgC,SAAM8H,SAASsD,uBAChD,SAACL,EAA2BK,GAAwB,gBAAC3b,GACjD,QAAIA,GAAYsb,IAA8Btb,IAIrC2b,OAIjB,OAAO,UAAA0G,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHoQ,mBAAoBA,EAAmBpQ,GACvCoW,gBAAiBA,EAAgBpW,GACjCqW,iBAAkBA,EAAiBrW,GACnCsW,0BAA2BA,EAA0BtW,GACrDgL,eAAgBA,EAAehL,GAC/BqK,cAAeA,EAAcrK,GAC7ByM,YAAaA,EAAYzM,GACzB0M,aAAcA,EAAa1M,GAC3BoL,oBAAqBA,EAAoBpL,OAvH9C,GjBsBGuW,IK3BAlW,EAAc,cAChB,SAACL,GAA+B,SAAMoF,QACtC,YAAQ,gBAAkD3V,GACtD,OAAO2V,EAAK3V,OAIb,UAAAqiB,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHK,YAAaA,EAAYL,QLiB3BwW,IM7BA7S,EAAqB,cACvB,SAAC3D,GAA4B,SAAMoF,QACnC,YAAgB,kBACZ,GAAKrd,GAAiBA,EAAa,GAInC,OAAOA,EAAa,GAAG6Y,oBAIxB,UAAAkR,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACH2D,mBAAoBA,EAAmB3D,QNezCyW,GkB7BH,WACH,IAAMC,EAAuB,cACzB,SAAC1W,GAAgC,SAAMoF,QACvC,YAAQ,kBAAM,aAGZ6K,EAAe,cACjB,SAACjQ,GAAgC,SAAMlwB,OAAO+hC,aAC9C,YAAS,kBAAM,aAGb1B,EAAY,cACd,SAACnQ,GAAgC,SAAM8H,SAASqI,aAChD,YAAU,kBAAM,QAAEvsB,MAGtB,OAAO,UAAAkuB,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACH0W,qBAAsBA,EAAqB1W,GAC3CiQ,aAAcA,EAAajQ,GAC3BmQ,UAAWA,EAAUnQ,OAtB1B,GlB8BG2W,GmBzBH,WACH,IAAMC,EAAwB,cAC1B,SAAC5W,GAAiC,SAAMlwB,OAAO69B,yBAC/C,SAAC3N,GAAiC,SAAMlwB,OAAO49B,sBAC/C,SAACC,EAAuBD,GAAuB,gBAACje,GAC5C,IAAIA,GAAYke,IAA0Ble,EAI1C,OAAOie,MAITmJ,EAAuB,cACzB,SAAC7W,GAAiC,SAAMlwB,OAAO+9B,wBAC/C,SAAC7N,GAAiC,SAAMlwB,OAAO89B,qBAC/C,SAACC,EAAsBD,GAAsB,gBAACne,GAC1C,IAAIA,GAAYoe,IAAyBpe,EAIzC,OAAOme,MAITwC,EAAqB,cACvB,SAACpQ,GAAiC,SAAMlwB,OAAOy6B,sBAC/C,SAACvK,GAAiC,SAAMlwB,OAAOw6B,mBAC/C,SAACC,EAAoBD,GAAoB,gBAAC7a,GACtC,IAAIA,GAAY8a,IAAuB9a,EAIvC,OAAO6a,MAITsJ,EAA4B,cAC9B,SAAC5T,GAAiC,SAAMlwB,OAAOi7B,6BAC/C,SAAC/K,GAAiC,SAAMlwB,OAAOg7B,0BAC/C,SAACC,EAA2BD,GAA2B,gBAACrb,GACpD,IAAIA,GAAYsb,IAA8Btb,EAI9C,OAAOqb,MAITgD,EAAoB,cACtB,SAAC9N,GAAiC,SAAM8H,SAAS6F,yBACjD,SAAC3N,GAAiC,SAAM8H,SAASgG,qBACjD,SAACH,EAAuBG,GAAsB,gBAACre,GAC3C,QAAIA,GAAYke,IAA0Ble,IAIjCqe,OAIXC,EAAoB,cACtB,SAAC/N,GAAiC,SAAM8H,SAAS+F,wBACjD,SAAC7N,GAAiC,SAAM8H,SAASiG,qBACjD,SAACF,EAAsBE,GAAsB,gBAACte,GAC1C,QAAIA,GAAYoe,IAAyBpe,IAIhCse,OAIX/C,EAAiB,cACnB,SAAChL,GAAiC,SAAM8H,SAASyC,sBACjD,SAACvK,GAAiC,SAAM8H,SAASkD,kBACjD,SAACT,EAAoBS,GAAmB,gBAACvb,GACrC,QAAIA,GAAY8a,IAAuB9a,IAI9Bub,OAIXX,EAAgB,cAClB,SAACrK,GAAiC,SAAMoF,QACxC,YAAQ,gBAAC3V,GACL,SACI2V,EAAK3V,KACL2V,EAAK3V,GAAU4a,mBAKrBe,EAAsB,cACxB,SAACpL,GAAiC,SAAM8H,SAASiD,6BACjD,SAAC/K,GAAiC,SAAM8H,SAASsD,uBACjD,SAACL,EAA2BK,GAAwB,gBAAC3b,GACjD,QAAIA,GAAYsb,IAA8Btb,IAIrC2b,OAIjB,OAAO,UAAA0G,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACH4W,sBAAuBA,EAAsB5W,GAC7C6W,qBAAsBA,EAAqB7W,GAC3CoQ,mBAAoBA,EAAmBpQ,GACvC4T,0BAA2BA,EAA0B5T,GACrD8N,kBAAmBA,EAAkB9N,GACrC+N,kBAAmBA,EAAkB/N,GACrCgL,eAAgBA,EAAehL,GAC/BqK,cAAeA,EAAcrK,GAC7BoL,oBAAqBA,EAAoBpL,OAvH9C,GnB0BG8W,GoBJH,WACH,IAAMzV,EAAkB,cACpB,SAACrB,GAA4B,SAAMoF,QACnC,YAAgB,kBAAM,aAGpB2R,EAAqB,cACvB,SAAC/W,GAA4B,SAAMoF,QACnC,YAAgB,gBAACnd,GACb,GAAKF,GAAiBA,EAAapd,OAInC,OAAO,SAAA0qB,KAAA,CAAKtN,EAAc,CAAEE,GAAE,QAIhC0Y,EAA0B,cAC5B,SAACX,GAA4B,SAAMoF,QACnC,YAAgB,gBAACtd,GACb,GAAKC,GAAiBA,EAAapd,OAInC,OAAO,SAAA0qB,KAAA,CAAKtN,GAAc,YACtB,OtB/DuBivB,EsB+DRvW,EAAYG,gBtB/DwBqW,EsB+DPnvB,EtB9DjD,SAAAiE,QAAA,CAAQ4jB,GAAUqH,GAAWrH,GAAUsH,IADnC,IAAwBD,EAA4BC,SsBoEzDpT,EAAoB,cACtB,SAAC7D,GAA4B,SAAMoF,QACnC,YAAgB,kBACZ,GAAIrd,GAAgBA,EAAapd,OAC7B,OAAOod,EAAa,GAAGwd,2BAK7B0K,EAAe,cACjB,SAACjQ,GAA4B,SAAMlwB,OAAO+hC,aAC1C,YAAS,kBAAM,aAGbqF,EAAiB,cACnB,SAAClX,GAA4B,SAAMlwB,OAAOk3B,eAC1C,YAAS,kBAAM,aAGbmQ,EAA8B,cAChC,SAACnX,GAA4B,SAAMlwB,OAAOsnC,4BAC1C,YAAS,kBAAM,aAGbC,EAAqB,aACvBhW,GACA,SAAC5Q,EAAqB,GAA8C,OAAvC,EAAD,KAA6CqQ,WACzE,SAACO,EAAiBP,GAAY,kBAC1B,IAAMlK,EAAOkK,IAEb,IAAKlK,EACD,MAAO,GAGX,IAAM0gB,GAAuBjW,KAAqB,IAAInwB,QAClD,SAACqmC,EAAS9W,GAAgB,SAAQhwB,OAAOgwB,EAAY6B,eACrD,IAGJ,OAAQ1L,EAAKlE,UAAUkD,eAAiB,IAAIrJ,QACxC,YAAQ,SAAoBzb,QAAQwZ,EAAKrC,IAAgB,SAK/D8nB,EAAiB,cACnB,SAAC/P,GAA4B,SAAMlwB,OAAOs9B,eAC1C,YAAe,gBAACpL,GACZ,OAAIA,EACOoL,EAAYpL,GAGhB,SAAA3M,KAAA,CAAK+X,OAId0H,EAAiB,cACnB,SAAC9U,GAA4B,SAAMlwB,OAAO+8B,eAC1C,YAAe,gBAAC7K,GACZ,OAAIA,EACO6K,EAAY7K,GAGhB,SAAA3M,KAAA,CAAKwX,OAId2K,EAAyB,aAC3B7W,EACAoP,EACAmH,GACA,SAACvW,EAAyBoP,EAAgBmH,GAAmB,gBAACpvB,GAC1D,IAAM2Y,EAAcE,EAAwB7Y,GAE5C,OAAO2Y,EAAcsP,EAAetP,EAAYxY,IAAMivB,QAIxDO,EAA+B,cACjC,SAACzX,GAA4B,SAAMlwB,OAAOq9B,6BAC1C,YAA6B,gBAACnL,GAC1B,OAAIA,EACOmL,EAA0BnL,GAG9B,SAAA3M,KAAA,CAAK8X,OAIdgD,EAAY,cACd,SAACnQ,GAA4B,SAAM8H,SAASqI,aAC5C,YAAa,kBAAM,iBAGjBuH,EAA2B,cAC7B,SAAC1X,GAA4B,SAAM8H,SAAS4P,4BAC5C,YAA4B,kBAAM,iBAGhCpE,EAAa,cACf,SAACtT,GAA4B,SAAM8H,SAASwL,cAC5C,YAAc,kBAAM,iBAGlBjG,EAAa,cACf,SAACrN,GAA4B,SAAM8H,SAASuF,cAC5C,YAAc,gBAACrL,GACX,OAAIA,OACOqL,EAAWrL,QAGf,SAAA3M,KAAA,CAAKgY,OAIdN,EAAa,cACf,SAAC/M,GAA4B,SAAM8H,SAASiF,cAC5C,YAAc,gBAAC/K,GACX,OAAIA,OACO+K,EAAW/K,QAGf,SAAA3M,KAAA,CAAK0X,OAId4K,EAAmB,aACrBhX,EACA0M,EACAiG,GACA,SAAC3S,EAAyB0M,EAAYiG,GAAe,gBAACxrB,GAClD,IAAM2Y,EAAcE,EAAwB7Y,GAE5C,OAAO2Y,EAAc4M,EAAW5M,EAAYxY,IAAMqrB,QAIpDhG,EAA2B,cAC7B,SAACtN,GAA4B,SAAM8H,SAASwF,4BAC5C,YAA4B,gBAACtL,GACzB,OAAIA,OACOsL,EAAyBtL,QAG7B,SAAA3M,KAAA,CAAKiY,OAIpB,OAAO,UAAAwE,WAAA,EAAW,SACd9R,EACApJ,GAEA,YAAO,IAHPoJ,UAGO,CACHqB,gBAAiBA,EAAgBrB,GACjC+W,mBAAoBA,EAAmB/W,GACvCW,wBAAyBA,EAAwBX,GACjD6D,kBAAmBA,EAAkB7D,GACrCiQ,aAAcA,EAAajQ,GAC3BkX,eAAgBA,EAAelX,GAC/BmX,4BAA6BA,EAA4BnX,GACzDqX,mBAAoBA,EAAmBrX,EAAO,CAAEpJ,KAAI,IACpDmZ,eAAgBA,EAAe/P,GAC/B8U,eAAgBA,EAAe9U,GAC/BwX,uBAAwBA,EAAuBxX,GAC/CyX,6BAA8BA,EAA6BzX,GAC3DmQ,UAAWA,EAAUnQ,GACrB0X,yBAA0BA,EAAyB1X,GACnDsT,WAAYA,EAAWtT,GACvBqN,WAAYA,EAAWrN,GACvB+M,WAAYA,EAAW/M,GACvB2X,iBAAkBA,EAAiB3X,GACnCsN,yBAA0BA,EAAyBtN,OpBrMzB4X,GAC5BC,GqBHH,WACH,IAAMxX,EAAc,cAChB,SAACL,GAAyB,SAAMoF,QAChC,SAAC3U,EAAkB,GAAqD,OAApC,EAAD,eAAoD2S,qBACvF,SAAC3S,EAAkB,GAA2C,OAApC,EAAD,KAA0CqQ,WACnE,SAACrQ,EAAkB,GAA+C,OAApC,EAAD,SAA8C4S,eAC3E,SAAC5S,EAAkB,GAAmD,OAApC,EAAD,aAAkD4Q,mBACnF,SAAC5Q,EAAkB,GAA8C,OAApC,EAAD,QAA6C6f,cACzE,SAAC7f,EAAkB,GAAuD,OAApC,EAAD,iBAAsDqjB,uBAC3F,SAAC1O,EAAMhC,EAAmBtC,EAASuC,EAAahC,EAAiBiP,EAAYwD,GAAwB,kBACjG,IAAMpiB,EAAiB0R,IACjBxM,EAAOkK,IACPrP,EAAW4R,IACXtb,EAAesZ,KAAqB,GACpClO,EAAUmd,KAAgB,GAC1BnZ,EAAmB2c,KAAyB,GAElD,GAAK1O,GAASxO,GAASnF,EAIvB,OAAO,yCACA2T,GAAI,CACP1T,eAAc,EACdkF,KAAI,EACJnF,SAAQ,EACR1J,aAAY,EACZoL,QAAO,EACPgE,iBAAgB,QAKtB2gB,EAAqB,aACvBzX,GACA,YAAe,kBACX,OAAO+N,GAAM/N,KAAe,WAAM,WAAI,KAAiB,KAAqBjlB,wBAI9E28B,EAAwB,aAC1B1X,GACA,YAAe,gBAAC2X,GACZ,IAAMvhB,EAAW4J,IAEjB,GAAK5J,EAAL,CAIA,IAAMxB,EAAawB,EAASxB,YAAc,EACpCnD,EAAc2E,EAAShF,SAASK,aAAe,EAErD,OAAOkmB,EAAiB9pB,KAAKmP,IAAIpI,EAAanD,EAAa,GAAK2E,EAASwhB,wBAI3EhI,EAAe,cACjB,SAACjQ,GAAyB,SAAMlwB,OAAO+hC,aACvC,YAAS,kBAAM,aAGb9B,EAAiB,cACnB,SAAC/P,GAAyB,SAAMlwB,OAAOs9B,eACvC,YAAS,kBAAM,aAGb8K,EAAuB,cACzB,SAAClY,GAAyB,SAAM8H,SAASoQ,wBACzC,YAAwB,kBAAM,iBAG5B/H,EAAY,cACd,SAACnQ,GAAyB,SAAM8H,SAASqI,aACzC,YAAa,kBAAM,iBAGjB9C,EAAa,cACf,SAACrN,GAAyB,SAAM8H,SAASuF,cACzC,YAAc,kBAAM,iBAGxB,OAAO,UAAAyE,WAAA,EAAW,SACd9R,EACAtO,EACAkF,EACA7O,EACAoL,EACA1B,EACA0F,GAEA,YAAO,IARP6I,UAQO,CACHK,YAAaA,EAAYL,EAAO,CAC5BtO,eAAc,EACdkF,KAAI,EACJ7O,aAAY,EACZoL,QAAO,EACP1B,SAAQ,EACR0F,iBAAgB,IAEpB2gB,mBAAoBA,EAAmB9X,EAAO,CAC1CtO,eAAc,EACdkF,KAAI,EACJ7O,aAAY,EACZoL,QAAO,EACP1B,SAAQ,EACR0F,iBAAgB,IAEpB4gB,sBAAuBA,EAAsB/X,EAAO,CAChDtO,eAAc,EACdkF,KAAI,EACJ7O,aAAY,EACZoL,QAAO,EACP1B,SAAQ,EACR0F,iBAAgB,IAEpB8Y,aAAcA,EAAajQ,GAC3B+P,eAAgBA,EAAe/P,GAC/BkY,qBAAsBA,EAAqBlY,GAC3CmQ,UAAWA,EAAUnQ,GACrBqN,WAAYA,EAAWrN,OAvH5B,GrBIGmY,GsBlBH,WACH,IAAM7U,EAAW,cACb,SAACtD,GAAsB,SAAMoF,QAC7B,SAAC3U,EAAe,GAAkD,OAAjC,EAAD,eAAiD2S,uBACjF,SAAC3S,EAAe,GAA2C,OAAjC,EAAD,QAA0C6f,gBACnE,SAAClL,EAAM1T,EAAgByB,GAAiB,gBAAjBA,UAAiB,WACpC,GAAKiS,GAAS1T,EAId,OAAO,yCACA0T,GAAI,CACP1T,eAAc,EACdyB,QAAO,QAKbilB,EAAkB,aACpB9U,GACA,YAAY,kBACR,OAAO8K,GAAM9K,KAAY,WAAM,WAAI,KAAiB,KAAqB9nB,qBAI3E8oB,EAAe,cACjB,SAACtE,GAAsB,SAAM7Q,QAC7B,YAAQ,kBAAM,aAGZ8gB,EAAe,cACjB,SAACjQ,GAAsB,SAAMlwB,OAAO+hC,aACpC,YAAS,kBAAM,aAGb1B,EAAY,cACd,SAACnQ,GAAsB,QAAEA,EAAM8H,SAASqI,aACxC,YAAU,kBAAM,aAGpB,OAAO,UAAA2B,WAAA,EAAW,SACd9R,EACAtO,EACAyB,GAEA,YAAO,IAJP6M,UAIO,CACHsD,SAAUA,EAAStD,EAAO,CAAEtO,eAAc,EAAEyB,QAAO,IACnDilB,gBAAiBA,EAAgBpY,EAAO,CAAEtO,eAAc,EAAEyB,QAAO,IACjEmR,aAAcA,EAAatE,GAC3BiQ,aAAcA,EAAajQ,GAC3BmQ,UAAWA,EAAUnQ,OAlD1B,GtBmBGqY,IOlBArH,EAAqB,cACvB,SAAC,GAA2C,OAAnC,EAAD,MAA0C1M,gBAClD,YAAgB,kBACZ,IAAMnV,EAAOmV,IAEb,OAAOnV,GAAQA,EAAK0D,YAItBoe,EAAoB,cACtB,SAAC,GAA2C,OAAnC,EAAD,MAA0C3N,YAClD,YAAY,kBACR,IAAMlR,EAAQkR,IAEd,OAAO,SAAAjO,KAAA,CAAKjD,GAASA,EAAME,UAAU,SAAC,G,IAAEmB,EAAU,aAC9C,MAAe,oBAAf,GAAmD,gBAAfA,SAK1Cyd,EAAmB,cACrB,SAAC,GAA8C,OAAnC,EAAD,SAA6C7Q,eACxD,YAAe,kBACX,IAAM5J,EAAW4J,IAEjB,OAAO,SAAAhL,KAAA,CAAKoB,GAAYA,EAASnE,UAAU,SAAC,GACxC,OADuD,EAAD,eACrC,YAKvB6e,EAAe,aACjBH,EACAE,EACAD,GACA,SAACD,EAAoBE,EAAkBD,GAAsB,kBACzD,IAAMqH,EAAkBtH,IAExB,GAAIsH,GAAmBA,EAAgBrwB,GACnC,MAAO,CACHwL,WAAY6kB,EAAgBrwB,GAC5Byb,UAAW4U,EAAgB7S,SAInC,IAAM5S,EAAUqe,KAAsBD,IAEtC,OAAIpe,GAAWA,EAAQY,WACZ,CACHA,WAAYZ,EAAQY,WACpBiQ,UAAW7Q,EAAQ6Q,sBAM7B0N,EAAmB,aACrBJ,EACAE,EACAD,GACA,SAACD,EAAoBE,EAAkBD,GAAsB,kBACzD,IAAMqH,EAAkBtH,IAExB,GAAIsH,GAAmBA,EAAgB10B,OACnC,OAAO00B,EAAgB10B,OAAOka,QAAQ,kBAAmB,IAG7D,IAAMjL,EAAUqe,KAAsBD,IAEtC,OAAIpe,EACOA,EAAQgB,OAAO0B,gBAK5BmP,EAAkB,cACpB,SAAC,GAA2C,OAAnC,EAAD,MAA0CJ,gBAClD,YAAgB,kBACZ,IAAMnV,EAAOmV,IAEb,OAAOnV,GAAQA,EAAK5K,UAItB8sB,EAAwB,aAC1BL,GACA,YAAsB,kBAClB,IAAMne,EAAUme,IAEhB,OAAOne,GAAWA,EAAQ0lB,gBAI5BjH,EAAwB,cAC1B,SAAC,GAA8C,OAAnC,EAAD,SAA6CyG,yBACxD,YAAyB,gBAACC,sBACtB,IAAM/iB,EAAa8iB,EAAsBC,GAEzC,QAAO/iB,GAAaA,EAAa,MAInCsc,EAAyB,aAC3BH,GACA,YAAoB,gBAAC7N,GACjB,SAAIA,IAAiBA,EAAc8B,QAI5B+L,MAAuB,MAAeA,MAAuB,SAIrE,UAAAU,WAAA,EAAW,SACdrb,EACArE,GAEA,MAAO,CACH+e,aAAcA,EAAa,CAAE1a,SAAQ,EAAErE,MAAK,IAC5Cgf,iBAAkBA,EAAiB,CAAE3a,SAAQ,EAAErE,MAAK,IACpDsS,gBAAiBA,EAAgB,CAAEjO,SAAQ,EAAErE,MAAK,IAClDif,sBAAuBA,EAAsB,CAAE5a,SAAQ,EAAErE,MAAK,IAC9Dkf,sBAAuBA,EAAsB,CAAE7a,SAAQ,EAAErE,MAAK,IAC9Dmf,uBAAwBA,EAAuB,CAAE9a,SAAQ,EAAErE,MAAK,SPxGlEomB,GuBpCH,WACH,IAAMhI,EAAgB,cAClB,SAACxQ,GAA4B,SAAMlwB,OAAO2oC,cAC1C,YAAS,kBAAM,aAGbhI,EAAa,cACf,SAACzQ,GAA4B,QAAEA,EAAM8H,SAAS2I,cAC9C,YAAU,kBAAM,aAGpB,OAAO,UAAAqB,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHwQ,cAAeA,EAAcxQ,GAC7ByQ,WAAYA,EAAWzQ,OAhB5B,GvBqCG0Y,GwBtCH,WACH,IAAM3I,EAAiB,cACnB,SAAC/P,GAA8B,SAAMlwB,OAAOs9B,eAC5C,YAAS,kBAAM,aAGbC,EAAa,cACf,SAACrN,GAA8B,QAAEA,EAAM8H,SAASuF,cAChD,YAAU,kBAAM,aAGpB,OAAO,UAAAyE,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACH+P,eAAgBA,EAAe/P,GAC/BqN,WAAYA,EAAWrN,OAhB5B,GxBuCG2Y,IQpCAnH,EAAW,cACb,SAACxR,GAA4B,SAAMoF,QACnC,YAAe,kBAAM,aAGnBqM,EAAe,cACjB,SAACzR,GAA4B,SAAMlwB,OAAO8oC,aAC1C,YAAS,kBAAM,aAGblH,EAAY,cACd,SAAC1R,GAA4B,QAAEA,EAAM8H,SAAS4J,aAC9C,YAAU,kBAAM,aAGb,UAAAI,WAAA,EAAW,SACd9R,GAEA,YAAO,IAFPA,UAEO,CACHwR,SAAUA,EAASxR,GACnByR,aAAcA,EAAazR,GAC3B0R,UAAWA,EAAU1R,QRiB7B,OAAO,SAACA,EAAO9T,sBACX,IJ5CiF7B,EI4C3EqH,EAAiBigB,EAA6B3R,EAAMtO,gBACpDkF,EAAOmb,EAAmB/R,EAAMpJ,MAChCiiB,EAAiB5G,EAA6BjS,EAAM6Y,gBACpD5D,EAAYnC,EAAsB9S,EAAMiV,WACxC9hB,EAAU6f,EAAqBhT,EAAM7M,SACrC1B,EAAW4hB,EAAuBrT,EAAMvO,UACxCqnB,EAAqBrF,EAA+BzT,EAAM8Y,oBAC1DC,EAAOhE,GAAmB/U,EAAMwS,YAChCrb,EAAmB0c,EAA8B7T,EAAM7I,kBACvD+M,EAAciQ,GAAyBnU,EAAMkE,aAC7CV,EAAiBuS,GAA4B/V,EAAMwD,gBACnDwV,EAAoB7C,GAA8BnW,EAAMgZ,mBACxDC,EAAiB1C,GAA6BvW,EAAMiZ,gBACpDrY,EAAkB4V,GAA8BxW,EAAMjY,cACtDmxB,EAAoBzC,GAA8BzW,EAAMkZ,mBACxDC,EAAqBxC,GAA+B3W,EAAMmZ,oBAC1DpoC,EAAgB2nC,GAA4B1Y,EAAMjvB,eAClD+gB,EAAc0mB,GAA0BxY,EAAMlO,aAC9CsnB,EAAcT,GAA0B3Y,EAAMoZ,aAG9CrxB,EAAe+uB,GAA0B9W,EAAMjY,aAAc6O,GAC7DH,EAAWohB,GAAuB7X,EAAMvJ,SAAU/E,EAAgBkF,EAAM7O,EAAcoL,EAAS1B,EAAU0F,GACzG/E,EAAQ+lB,GAAoBnY,EAAM5N,MAAOV,EAAgByB,GACzDN,EAAUwlB,GAAsB5hB,EAAUrE,GAG1CinB,EAAY,CACd3nB,eAAc,EACdkF,KAAI,EACJH,SAAQ,EACRoiB,eAAc,EACdtsC,OAPW2lC,EAAqBlS,EAAMzzB,OAAQyzB,EAAMwS,YAQpDzqB,aAAY,EACZktB,UAAS,EACT9hB,QAAO,EACP1B,SAAQ,EACRqnB,mBAAkB,EAClBC,KAAI,EACJ5hB,iBAAgB,EAChB+M,YAAW,EACX9R,MAAK,EACLS,QAAO,EACP2Q,eAAc,EACdwV,kBAAiB,EACjBC,eAAc,EACdrY,gBAAe,EACfsY,kBAAiB,EACjBC,mBAAkB,EAClBC,YAAW,EACXroC,cAAa,EACb+gB,YAAW,GAGf,OAAO5F,EAAQotB,oBJlGkEjvB,EIkGzBgvB,EJjGrDjtC,OAAOge,KAAKC,GACdnZ,QAAO,SAACzB,EAAQ2E,GAGb,OAFA3E,EAAO2E,GAAOk6B,GAAkBjkB,EAAIjW,IAE7B3E,IACR,KI4FkE4pC,GyBnG9D,SAASE,GACpBC,EACAttB,YADAstB,UAGA,ICPAC,ECDMC,EFQAC,GERAD,EAAU,IAAI,EAEY,CAC5B,eACA,aACA,mBACA,sBACA,sBACA,yBACA,0BACA,yBACA,qCACA,sBACA,uBACA,uBACA,iBAGoB1rC,SAAQ,SAAAgG,GAC5B0lC,EAAQ7S,SAAS5qB,GAAM,SAAC4H,EAAU3E,GAAY,WAAI,EAAmB2E,EAAU3E,SAGnFw6B,EAAQ7S,SAAS,4BAA4B,YAAY,WAAI,IAA0BhjB,MACvF61B,EAAQ7S,SAAS,4BAA4B,YAAY,WAAI,IAA0BhjB,MDtBvF41B,ECwBOC,EDtBA,YAAW,gBAAAxpB,KAAA,CAAK0pB,GAAStrC,KAAK,SAAAwxB,WAAA,EAA0B,YAC3D,GAAIjQ,aAAkB7iB,OAAS6iB,EAAOG,mBAAmBhjB,MACrD,MAAM6iB,EAGV,IAUYvb,EAVGub,EAAOG,UAWO,YAAX1b,IAIf,CAAC,OAAQ,UAAW,SAAU,cAAculC,OAAM,YACrD,SAAOplC,eAAeL,MAhBU,CAC5B,IAAM8K,EAAU2Q,EAAOG,QAAQtM,MAAQmM,EAAOG,QAAQtM,KAAKmQ,OAE3D,MAAM,yCAAKhE,GAAM,CAAEG,QAASypB,EAAoBzS,YAAYnX,EAAOG,QAAS9Q,KAOxF,IAAoB5K,EAJZ,MAAMub,QDLJiqB,EAAkCjK,KAGxC,OAAO,SAAAkK,gBAAA,CGKA,SAAA/R,gBAAA,CAAgB,CACnBtW,eAAgBqW,EAChBnR,KAAM4S,EACN/S,SAAU0X,GACV0K,eAAgBhP,EAChBt9B,OAAQy9B,EACRjiB,aAAcwlB,GACd0H,UAAW3J,GACXnY,QAAS8W,GACTxY,SAAU0Y,GACV2O,mBAAoB1O,GACpBoI,WAAYnH,GACZlU,iBAAkB+S,GAClBhG,YAAayI,GACbva,MAAOmZ,GACP1Y,QAAS6Y,GACTlI,eAAgBmI,GAChBqN,kBAAmB5M,GACnB6M,eAAgBhM,GAChBiM,kBAAmB1L,GACnB2L,mBAAoB1L,GACpB2L,YAAapL,GACbj9B,cAAem9B,GACfpc,YAAamc,KH1BbuL,EAAY,oBACVG,kBAAiB,EAAEK,iBALA,SAACha,GAA8B,SAAgCA,KAK1C9T,I,uGIXlD,YACI,WAAYrI,GAAZ,MACI,YAAMA,EAAU,CAAE3E,QAAS2E,EAASH,KAAKojB,SAAQ,K,OAEjD,EAAKvzB,KAAO,4BACZ,EAAK0I,KAAO,yB,EAEnB,OAPsD,yBAOvD,EAPA,C,MAAuD,GCDvD,aACI,WACY6S,yBAmCf,OAhCG,YAAA2Q,aAAA,SAAaxX,EAAY,G,IAAA,aAAwE,GAAE,EAAxE,IAAAyZ,OAAUC,YAAO,EAAK,GAAE,WAAEjS,EAAO,UAClD5I,EAAM,4BAA4BmB,EAClCtE,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAelb,IAAckT,EAAK,CAC1C4a,OAAQ,CACJC,QAAS,YAAoB,IAA2BA,IAE5Dhe,QAAO,EACP+L,QAAO,IACRJ,OAAM,YACL,GAAIllB,EAAMwZ,QAAU,KAAOxZ,EAAMwZ,OAAS,IACtC,MAAM,IAAI,EAA0BxZ,GAGxC,MAAMA,MAId,YAAAg2B,eAAA,SAAenY,EAAYvE,EAA2B,G,IAAA,aAAwE,GAAE,EAAxE,IAAAge,OAAUC,YAAO,EAAK,GAAE,WAAEjS,EAAO,UAC/E5I,EAAM,4BAA4BmB,EAClCtE,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe8T,IAAI9b,EAAK,CAChC4a,OAAQ,CACJC,QAAS,YAAoB,IAA2BA,IAE5Dje,KAAI,EACJC,QAAO,EACP+L,QAAO,KAGnB,EArCA,G,oCCTA,IAAYuqB,EAAZ,IAAA/pC,EAAA,qCAAY+pC,GACR,EAAArY,yBAAA,wCACA,EAAAsY,2BAAA,6CACA,EAAAC,0BAAA,4CAHJ,CAAYF,MAAgB,M,kCCQb,SAASG,EAA6B5mB,GACjD,MAAO,CACHb,KAAMa,EAAgBb,KACtBO,iBAAkBM,EAAgB6D,KAClCvD,iBAAkBN,EAAgBO,UAClCP,gBAAiB,CACbQ,QAASR,EAAgBQ,QACzBrB,KAAMa,EAAgBb,KACtBsB,aAAcT,EAAgBS,eAb1C,mC,6BCHA,WAAApiB,EAAA,qBAaA,aAGI,WACIwoC,EACQC,wBAERpvC,KAAKqvC,cAAiC,MAAjBF,EAAuB,IAAM,YAASA,GAAc9yB,OAgDhF,OAxCG,YAAAob,KAAA,SACI6X,EACAtuB,GAFJ,WAIUuuB,EAAevvC,KAAKovC,cAE1B,GAAIvX,SAAW0X,EAAf,CAIA,IAAKA,EACD,MAAM,IAAIztC,MAAM,4DAGpB,IAAMyC,EAASyc,GAAW,SAAAwuB,UAAA,CAAwB3X,OAAQ,WACrDz0B,KACG,SAAAie,OAAA,EAAO,YACH,SAAMhF,SAAW,EAAKgzB,eACtB,YAAcC,EAAMpV,KAAMoV,EAAMpV,KAAKnpB,QACkC,IAAvE,CAACiQ,EAAQyuB,YAAazuB,EAAQ0uB,WAAW9pC,QAAQ0pC,EAAMpV,KAAKnpB,SAEhE,SAAAoO,IAAA,EAAI,YACA,GAAI6B,EAAQ0uB,YAAcJ,EAAMpV,KAAKnpB,KACjC,MAAMu+B,EAAMpV,KAGhB,OAAOoV,EAAMpV,QAEjB,SAAAyV,KAAA,CAAK,IAERpsC,YAIL,OAFAgsC,EAAaK,YAAYN,EAAOtvC,KAAKqvC,eAE9B9qC,IAGX,YAAAsrC,UAAA,SAAUhY,GACN73B,KAAKovC,cAAgBvX,GAE7B,EAvDA,G,gFCPA,aAKI,WACIiY,GAEA9vC,KAAK+vC,eAAiB,CAClB,YAASD,GAAczzB,OACvB,SAAAqhB,EAAA,CAAU,YAASoS,IAAezzB,QAEtCrc,KAAKgwC,gBACLhwC,KAAKiwC,WAAa,GAqEzB,OAlEG,YAAAC,OAAA,WACQlwC,KAAKgwC,eAIThwC,KAAKgwC,gBAELnY,OAAOsY,iBAAiB,UAAWnwC,KAAKowC,kBAG5C,YAAAC,WAAA,WACSrwC,KAAKgwC,eAIVhwC,KAAKgwC,gBAELnY,OAAOyY,oBAAoB,UAAWtwC,KAAKowC,kBAG/C,YAAAG,YAAA,SAA2Cx/B,EAAay/B,GACpD,IAAIC,EAAYzwC,KAAKiwC,WAAWl/B,GAE3B0/B,IACDzwC,KAAKiwC,WAAWl/B,GAAQ0/B,EAAY,KAGH,IAAjCA,EAAU7qC,QAAQ4qC,IAClBC,EAAUjrC,KAAKgrC,IAIvB,YAAAE,eAAA,SAA8C3/B,EAAay/B,GACvD,IAAMC,EAAYzwC,KAAKiwC,WAAWl/B,GAElC,GAAK0/B,EAAL,CAIA,IAAM3rC,EAAQ2rC,EAAU7qC,QAAQ4qC,GAE5B1rC,GAAS,GACT2rC,EAAU1qC,OAAOjB,EAAO,KAIhCgE,EAAA,UAAA6nC,QAAA,SAAuCrB,GACnC,IAAMmB,EAAYzwC,KAAKiwC,WAAWX,EAAMv+B,MAEnC0/B,GAILA,EAAU3tC,SAAQ,YAAY,SAASwsC,OAInC,YAAAc,eAAR,SAAuBd,IACiC,IAA/CtvC,KAAK+vC,eAAenqC,QAAQ0pC,EAAMjzB,SAClC,YAAcizB,EAAMpV,KAAoCoV,EAAMpV,KAAKnpB,OAKxE/Q,KAAK2wC,QAAQrB,EAAMpV,OAPvB,sBADC,K,mCAUL,EAlFA,GAAqB,O,yICIN,SAAS0W,EAAiD1qB,GACrE,IAAMC,EAAe,YAAG,a,+CAAuB,OAAT,sBAAArd,GAAQ,EAAzB,CAAiBA,GAiBtC,OAfA5H,OAAOklB,oBAAoBF,EAAO5c,WAC7BxG,SAAQ,YACL,IAAM0iB,EAAatkB,OAAOmlB,yBAAyBH,EAAO5c,UAAWJ,GAEhEsc,GAAsB,gBAARtc,GAInBhI,OAAOsH,eACH2d,EAAgB7c,UAChBJ,EAQhB,SAAmDgd,EAAgBhd,EAAasc,GAC5E,GAAgC,mBAArBA,EAAWplB,MAClB,OAAOolB,EAGX,IAAIqrB,EAAW,IAAI,IACfjrB,EAASJ,EAAWplB,MACpB0wC,EAAiB,SAAArtB,QAAA,CAAQmC,GAE7B,OAAO,YAAcM,EAAQhd,EAAK,CAC9BR,0BACUtI,EAAQ,W,IAAE,sDACZ,IAAM2wC,EAAcD,EAAenvC,KAAI,MAAnBmvC,EAAc,0BAAMhoC,GAASwa,IAEjD,GAAuC,IAAnCutB,EAASG,aAAY,MAArBH,EAAyBvtB,GACzB,OAAOytB,EAGX,IAAMtU,EAAW7W,EAAOjkB,KAAI,MAAXikB,EAAM,0BAAM9c,GAASwa,IAEtC,OAAI,YAAQmZ,EAAUsU,EAAa,CAAEzvB,UAAW,YAAO,OAAC,YAAUpY,MACvD6nC,GAGXD,EAAeG,MAAMlrB,IAAI8qB,EAASK,OAAM,MAAfL,EAAmBvtB,GAAOmZ,GAE5CA,IAKX,OAFAv7B,OAAOsH,eAAexI,KAAMkJ,EAAK,yCAAKsc,GAAU,CAAEplB,MAAK,KAEhDA,GAEX2lB,IAAG,SAAC3lB,GACAywC,EAAW,IAAI,IACfjrB,EAASxlB,EACT0wC,EAAiB,SAAArtB,QAAA,CAAQmC,MApCrC,CAPwCM,EAAO5c,UAAWJ,EAAKsc,OAIpDW,ECrBX,IAAqB,EAArB,WAMI,WAAYgoB,GACRnuC,KAAKmxC,gBAAkBhD,EAAUR,eAUxC,OAPG,YAAAyD,yBAAA,SAAyB7sB,GACrB,OAAOvkB,KAAKmxC,gBAAgBjM,mBAAmB3gB,IAGnD,YAAA8sB,2BAAA,SAA2B9sB,GACvB,OAAOvkB,KAAKmxC,gBAAgBhM,qBAAqB5gB,IAfT,sBAD/C,GACoB,GAArB,GCAqB,EAArB,WAMI,WAAY4pB,GACRnuC,KAAKmxC,gBAAkBhD,EAAUR,eAUxC,OAPG,YAAA2D,qBAAA,SAAqB/sB,GACjB,OAAOvkB,KAAKmxC,gBAAgBrR,eAAevb,IAG/C,YAAAgtB,uBAAA,SAAuBhtB,GACnB,OAAOvkB,KAAKmxC,gBAAgBpR,iBAAiBxb,IAfJ,sBADhD,GACoB,GAArB,GCDe,SAASitB,EAA8BrD,GAIlD,MAAO,CACHvpC,OAJW,IAAI,EAA4BupC,GAK3CvR,SAJa,IAAI,EAA6BuR,ICEtD,ICVKsD,EDUgBC,EAArB,WAMI,WACYC,EACAC,GAFZ,WACYD,cACAC,oCAER5xC,KAAK6xC,OAASL,EAA8BxxC,KAAK2xC,OAAO5c,YAExD/0B,KAAK2xC,OAAO3vC,WAAU,YAClB,EAAK6vC,OAASL,EAA8B1c,MAqHvD,OAlGG,YAAAC,SAAA,WACI,OAAO/0B,KAAK6xC,QAiChB,YAAA7vC,UAAA,SACI7B,G,UADJ,OAEI,oDAEA,OAAO,EAAAH,KAAK2xC,QAAO3vC,UAAS,kCACxB,WAAM,SAAW,EAAK+yB,aACtB,YAAS,SAAM4Y,eAAe5Y,aAC3B+c,EAAQ3yB,KAAI,YAAU,gBAAC2V,GAAqC,SAAO0c,EAA8B1c,WAsB5G,YAAAid,iBAAA,SAAiB/wB,GAAjB,IEzGgCjE,EFyGhC,OACUi1B,GE1GsBj1B,EF0GKiE,EAAQ6d,YEzGtC,kBAAkBhjB,KAAKkB,GF0GtB,CAACiE,EAAQ6d,aGvGN,SAA4BoT,EAAkBC,GACzD,IAAMC,EAAap2B,SAASq2B,iBAAiBH,GAE7C,IAAKE,EAAW1yC,OACZ,MAAM,IAAI,IAAqB,2DAA2DwyC,GAG9F,OAAOjrC,MAAMsC,UAAU5C,MAAM/E,KAAKwwC,GAC7BhzB,KAAI,SAACkzB,GAKF,OAJKA,EAAUt1B,KACXs1B,EAAUt1B,GAAK,OAAAu1B,EAAAC,SAAA,CAASL,IAGrBG,EAAUt1B,MAbd,CHwGgBiE,EAAQ6d,YAAgB7d,EAAQuD,SAAQ,eAE/D,OAAO9gB,QAAQysB,IACX8hB,EAAa7yB,KAAI,YACb,IAAMwF,EAAS,EAAKitB,6BAA6BniB,WAAW,yCAAKzO,GAAO,CAAE6d,YAAW,KAC/E2T,EAAU,0BAA0BxxB,EAAQuD,SAAQ,IAAIsa,EAE9D,OAAO,EAAK8S,OAAOc,SAAS9tB,EAAQ,CAAE6tB,QAAO,QAGhDxuB,MAAK,WAAM,SAAK+Q,eAezB,YAAA2d,mBAAA,SAAmB1xB,GAAnB,WACU2D,EAAS3kB,KAAK4xC,6BAA6Be,aAAa3xB,GACxDwxB,EAAU,0BAA0BxxB,EAAQuD,SAElD,OAAOvkB,KAAK2xC,OAAOc,SAAS9tB,EAAQ,CAAE6tB,QAAO,IACxCxuB,MAAK,WAAM,SAAK+Q,eAhIiB,sBAD7C,KACoB,GAArB,G,uCIGA,WACI,WACY6d,EACAC,GADAD,iBACAC,mCAuCf,OApCG,YAAApjB,WAAA,SAAWzO,GAAX,WACI,OAAO,YACH,IAAMiD,EAAO,CAAEM,SAAUvD,EAAQuD,SAAUsa,YAAa7d,EAAQ6d,aAEhE,OAAI3Z,EAAM6P,WAAW4Y,eAAexO,cAAcne,EAAQuD,SAAUvD,EAAQ6d,aACjE,SAAAl/B,MAAA,GAGJ,SAAA4F,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAyB3Q,iCAAsC6Q,IAC/E,EAAK4uB,4BAA4BvuB,kBAAkBtD,EAAQuD,SAAU,CAAEC,QAASxD,EAAQwD,QAASa,UAASA,IAC1G,SAAAsP,MAAA,EAAM,WAAM,SAAKie,UAAUlqC,IAAIsY,EAAQuD,UAAUkL,WAAWzO,GACvDgD,MAAK,WAAM,gBAAAD,aAAA,CAAa,IAAyB1Q,iCAAsC4Q,UAC9F7gB,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAyBzhB,uBAAwBjU,EAAO+kB,SAKzG,YAAA0uB,aAAA,SAAa3xB,GAAb,WACI,OAAO,YACH,IAAMiD,EAAO,CAAEM,SAAUvD,EAAQuD,UAEjC,OAAKW,EAAM6P,WAAW4Y,eAAexO,cAAcne,EAAQuD,UAIpD,SAAAhf,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAyBxQ,mCAAwC0Q,IACjF,SAAA0Q,MAAA,EAAM,WAAM,SAAKie,UAAUlqC,IAAIsY,EAAQuD,UAAUouB,eAC5C3uB,MAAK,WAAM,gBAAAD,aAAA,CAAa,IAAyBvQ,mCAAwCyQ,UAChG7gB,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAyBthB,yBAA0BpU,EAAO+kB,OARxF,SAAAtkB,MAAA,KAYvB,EA1CA,G,6LHbA,SAAK8xC,GACD,EAAAqB,cAAA,YACA,EAAAvkC,iBAAA,kBACA,EAAAC,wBAAA,wBACA,EAAAukC,kBAAA,mBACA,EAAAC,uBAAA,wBACA,EAAAC,oBAAA,qBACA,EAAAC,sBAAA,uBACA,EAAAC,wBAAA,yBACA,EAAAC,iBAAA,kBACA,EAAAvkC,WAAA,aACA,EAAAwkC,cAAA,gBACA,EAAAC,eAAA,iBAZJ,CAAK7B,MAAwB,KAed,Q,4BILf,WAGI,WACYE,EACA4B,EACAC,GAFA7B,cACA4B,8BACAC,oCA6Ef,OA1ES,YAAA/jB,WAAN,SAAiBzO,G,8IAGb,GAFQ6d,EAAqC7d,EAAO,YAA/BuD,EAAwBvD,EAAO,SAArByyB,EAAczyB,EAAO,WAE/C6d,IAAgBta,EACjB,MAAM,IAAI,IAAqB,mFAKnC,OAFM8T,EAAgBr4B,KAAK2xC,OAAO5c,WAAWuD,eAAeyS,wBAAwBxmB,GAEpF,GAAMvkB,KAAKwzC,6BAA6B/jB,WAAW4I,I,OAC9B,OADrBqF,EAAA,OACA,EAAA19B,KAAqB,GAAMA,KAAK0zC,oBAAoB7U,EAAaxG,EAAeob,I,cAAhF,EAAKE,cAAgBjW,EAAA,O,YAGzB,YAAAiV,aAAA,WAMI,OALI3yC,KAAK2zC,eAAiB3zC,KAAK2zC,cAAcC,aACzC5zC,KAAK2zC,cAAcC,WAAWC,YAAY7zC,KAAK2zC,eAC/C3zC,KAAK2zC,sBAGFlwC,QAAQR,WAGL,YAAAywC,oBAAd,SAAkC7U,EAAqBxG,EAA8BrX,G,0IAGjF,KAFMqxB,EAAYt2B,SAAS+3B,eAAejV,IAGtC,MAAM,IAAI,IAAqB,+D,aAGP7d,EAAO,OAAPA,I,cAAW,SAAMhhB,KAAK+zC,6BAA6B1b,I,OAAxC,EAAAqF,EAAA,O,iBAIvC,OAJMsW,EAAsBhzB,EAE5BhhB,KAAKwzC,6BAA6BS,aAAa,IAAIpV,EAAemV,GAE3D,CAAP,EAAO,WAGG,YAAAD,6BAAd,SAA2C1b,G,0JACzB,SAAMr4B,KAAK2xC,OAAOc,SAASzyC,KAAKuzC,uBAAuB1e,wB,OAiBrE,GAjBMC,EAAQ,SACRpJ,EAAOoJ,EAAMpJ,KAAKkK,UACAse,EAAepf,EAAMzzB,OAAOkmC,wBAAuB,sBAGvE,EAUAlP,EAAa,OATT8b,EAAU,aACVC,EAAQ,WAEZ,EAMA/b,EAAa,mBALTgc,EAAgB,mBAChBC,EAAc,iBACdC,EAAqB,wBACrBC,EAA8B,kCAIjCL,IAAeG,IAAmBJ,EACnC,MAAM,IAAI,IAAiB,IAAqBvjC,sBAGpD,MAAO,CAAP,EAAO,CACHwjC,WAAU,EACVM,sBAAuB,CACnB74B,IAAQs4B,EAAQ,oBAAoB7b,EAActb,GAAE,mBACpD6I,OAAQ2uB,EACRC,+BAA8B,GAElCE,UAAWN,EACXE,eAAc,EACdD,iBAAgB,EAChBM,YAAajpB,GAAyC,IAAjC,YAAuBA,GACxC,IAAsBwC,QACtB,IAAsBD,WAC1B2mB,UAAW,IAAqBlnB,eAG5C,EAnFA,G,aCQA,WAII,WACYikB,EACA4B,EACAsB,EACAC,EACAC,EACA3mB,EACA4mB,YAFAD,UAJApD,cACA4B,8BACAsB,4BACAC,mBACAC,oBACA3mB,eACA4mB,0BA+Nf,OA5NS,YAAAvlB,WAAN,SAAiBzO,G,6JAIM,OAHbi0B,GAAiBj1C,KAAK+0C,aAAe/zB,EAAQk0B,sBAAwBl0B,EAAQ6iB,kBAAoB,GACjG/O,EAAQ90B,KAAK2xC,OAAO5c,WACpBsD,EAAgBr4B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeC,iBAAiBvX,EAAQuD,UACvE,GAAMvkB,KAAK2xC,OAAOc,SAASzyC,KAAKuzC,uBAAuB1e,wB,OAG1E,GAHMugB,EAAa,SACb9tB,EAA6C,QAArC,EAAG8tB,EAAW/zC,OAAOw3B,4BAAgB,WAAEwc,iBAEhDhd,IAAkBA,EAAc3I,YACjC,MAAM,IAAI,IAAiB,IAAqB/e,sBAYpD,OATA3Q,KAAK60C,qBAAqBplB,WAAW4I,EAAc3I,aAC7C2iB,EAAY,IAAIrxB,EAAQ6d,YAE9B7+B,KAAKg1C,mBAAqB,CACtB3c,cAAa,EACb4c,cAAa,EACb5C,UAAS,GAGN,CAAP,EAAO5uC,QAAQysB,IAAI,CACflwB,KAAK60C,qBAAqB1kB,kBAAkB,CAAC7I,SAAUA,iBAAUG,OAAQ,SAAC6tB,GAAiD,SAAKC,cAAcD,MAC9It1C,KAAK60C,qBAAqB7kB,cAEzBhM,MAAK,SAAC,G,IAACgL,EAAc,KACb,EAAKqB,kBACN,EAAKA,gBAAkBrB,eAKvC,YAAAumB,cAAA,SAAcD,GAAd,WACU,EAA8Ct1C,KAAKg1C,mBAAjDC,EAAa,gBAAE5c,EAAa,gBAAEga,EAAS,YACvCvjB,EAAW9uB,KAAKouB,QAAO,OAE/B,GAAIU,EAAQ,CACR,IAAM0mB,EAAkB,GACxB,IAAK,IAAMC,KAAc3mB,EAAO4mB,QAC5B,GAAI5mB,EAAO4mB,QAAQnsC,eAAeksC,GAAa,CAC3C,IAAME,GAAmC,WAAfF,GAA0C,aAAfA,KAA+BR,EAAcW,YAClG,GAAmB,SAAfH,GAAyBE,EACzB,SAEJH,EAAgBhwC,KAAKiwC,EAAWI,eAIxCL,EAAgB1yC,SAAQ,YACpB,IAAMgzC,EAAShnB,EAAOinB,QAAQ,CAC1BC,IAAK3d,EAAch3B,OAAO+yC,SAAW,UAAY,aACjD6B,cAAe1zC,EACf2zC,QAAOA,EACPC,MAAO,oBACHC,MAAO,OACP9L,MAAO,EAAKyK,aAAe,iBACxB,SAAAjb,KAAA,CAAKmb,EAAckB,MAAO,SAAU,OAAQ,QAAS,QAAS,QAAS,UAAW,iBAEzFE,YAAa,WAAM,SAAKC,cAAchB,EAAwBL,EAAcvf,gBAAiBuf,EAAcsB,iBAC3GC,UAAW,SAACtc,GAA8B,SAAKuc,iBAAiBvc,EAAMob,EAAwBL,EAAcyB,qBAAsBzB,EAAc0B,qBAGhJb,EAAOc,cACPd,EAAOe,OAAOxE,QAM9B,YAAAM,aAAA,WAMI,OALA3yC,KAAKm1C,sBACLn1C,KAAKqwB,uBAELrwB,KAAK60C,qBAAqBpvC,WAEnBhC,QAAQR,WAGX,YAAAqzC,cAAR,SACIhB,EACA14B,EACAk6B,GAHJ,WAKI,OAAO92C,KAAK2xC,OAAOc,SAASzyC,KAAKuzC,uBAAuB1e,uBACnD7Q,MAAK,YACF,IAAMuH,EAAWuJ,EAAMvJ,SAAS4J,cAC1B9zB,EAASyzB,EAAMzzB,OAAOw3B,iBACtBtS,EAAWuO,EAAMvO,SAAS4R,cAC1BzC,WAAkB9Y,EACpB2J,GAAYA,EAASE,WAAaF,EAASE,UAAU,GACrD7J,EAEJ,IAAK2O,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,IAAK7O,EACD,MAAM,IAAI,IAAiB,IAAqBgP,uBAGpD,OAAOilC,EAAuByB,cAAc,CACxCC,KAAM,WACNC,uBAAsBA,EACtBC,yBAAwBA,EACxBC,wBAAyBzhB,EAAkB,EAAK0hB,uBAAuB1hB,UACvEnW,OAAQgM,iBAAUwhB,mBAClBzlB,SAAUjmB,iBAAQimB,SAASG,KAC3B4vB,YAAa,EAAKtC,kBAGzB3wB,OAAM,YAKH,MAJI0yB,GACAA,EAAQ53C,GAGNA,MAIV,YAAAu3C,iBAAR,SACIvc,EACAob,EACAoB,EACAI,GAJJ,WAMI,IAAK92C,KAAKm1C,iBAAmBG,EACzB,MAAM,IAAI,KAAoB,KAAwBniB,8BAG1D,IAAM5O,EAAWvkB,KAAKm1C,eAAep4B,GAErC,OAAOtZ,QAAQysB,IAAI,CACfolB,EAAuBgC,gBAAgBpd,GACvCl6B,KAAK60C,qBAAqBlkB,iBAAiB,CAAE7B,QAAOA,MAEnD9K,MAAK,SAAC,G,IAACc,EAAO,KAAIiM,EAAU,gBAWzB,OAVA,EAAK+jB,YAAYyC,SAAS,gBAAiB,CACvCC,aAAc,SACd7T,SAAUpf,EACVI,OAAQ+xB,EAAuB,kBAAoB,wBACnDvc,MAAOrV,EAAQqV,MACfsd,YAAa1mB,EACb2mB,iBAAkBC,KAAKC,UAAU,EAAKC,4BAA4B/yB,IAClEgzB,gBAAiBH,KAAKC,UAAU,EAAKG,2BAA2BjzB,MAG7DA,KAEVV,OAAM,YAKH,MAJI0yB,GACAA,EAAQ53C,GAGNA,MAIV,YAAA24C,4BAAR,SAAoC/yB,GAChC,IAAM4Q,EAAkB5Q,EAAQkzB,QAAQtiB,gBAElC,GADgBA,GAAmBA,EAAgBuiB,eAAiB,IAC9BvmB,MAAM,KAA3C1U,EAAS,KAAEC,EAAQ,KAE1B,MAAO,CACH4J,MAAO/B,EAAQkzB,QAAQnxB,MACvBqxB,WAAYl7B,EACZm7B,UAAWl7B,EACXm7B,aAActzB,EAAQkzB,QAAQh6B,MAC9Bq6B,eAAgB3iB,GAAmBA,EAAgB4iB,MACnDC,eAAgB7iB,GAAmBA,EAAgB8iB,MACnDj7B,KAAMmY,GAAmBA,EAAgBnY,KACzCuX,MAAOY,GAAmBA,EAAgBZ,MAC1C2jB,aAAc/iB,GAAmBA,EAAgB3X,YACjD26B,YAAahjB,GAAmBA,EAAgB7X,aAIhD,YAAAk6B,2BAAR,SAAmCjzB,GAC/B,IAAM0B,EAAiB1B,EAAQkzB,QAAQxxB,eACjCkP,EAAkB5Q,EAAQkzB,QAAQtiB,gBAExC,OAAIlP,EACO,CACHK,MAAO/B,EAAQkzB,QAAQnxB,MACvBqxB,WAAYpzB,EAAQkzB,QAAQh7B,UAC5Bm7B,UAAWrzB,EAAQkzB,QAAQ/6B,SAC3Bm7B,aAActzB,EAAQkzB,QAAQh6B,MAC9Bq6B,eAAgB7xB,EAAe8xB,MAC/BC,eAAgB/xB,EAAegyB,MAC/Bj7B,KAAMiJ,EAAejJ,KACrBuX,MAAOtO,EAAesO,MACtB2jB,aAAcjyB,EAAezI,YAC7B26B,YAAalyB,EAAe3I,YAI7B,CACHgJ,MAAO/B,EAAQkzB,QAAQnxB,MACvBqxB,WAAYpzB,EAAQkzB,QAAQh7B,UAC5Bm7B,UAAWrzB,EAAQkzB,QAAQ/6B,SAC3Bm7B,aAActzB,EAAQkzB,QAAQh6B,MAC9Bq6B,eAAgB3iB,GAAmBA,EAAgB4iB,MACnDC,eAAgB7iB,GAAmBA,EAAgB8iB,MACnDj7B,KAAMmY,GAAmBA,EAAgBnY,KACzCuX,MAAOY,GAAmBA,EAAgBZ,MAC1C2jB,aAAc/iB,GAAmBA,EAAgB3X,YACjD26B,YAAahjB,GAAmBA,EAAgB7X,aAIhD,YAAAu5B,uBAAR,SAA+Bx6B,GAC3B,MAAO,CACH07B,MAAO17B,EAAQQ,SACfo7B,MAAO57B,EAAQU,SACfC,KAAMX,EAAQW,KACduX,MAAOlY,EAAQe,oBACfE,WAAYjB,EAAQiB,WACpBE,YAAanB,EAAQmB,YACrBC,MAAOpB,EAAQoB,MACfi6B,cAAkBr7B,EAAQI,UAAS,IAAIJ,EAAQK,WAG3D,EA1OA,GCRqB,GAArB,WAII,WACY00B,EACAmD,EACAvB,EACAoF,GAHAhH,cACAmD,mBACAvB,8BACAoF,kCA6Ef,OA1ES,YAAAlpB,WAAN,SAAiBzO,G,wIAGb,GAFQ6d,EAA0B7d,EAAO,YAApBuD,EAAavD,EAAO,UAEpC6d,IAAgBta,EACjB,MAAM,IAAI,IAAqB,qEAKnC,OAFAvkB,KAAK44C,UAAYr0B,EAEjB,GAAMvkB,KAAK2xC,OAAOc,SAASzyC,KAAKuzC,uBAAuB1e,wB,OACvD,OADA,SACA,GAAM70B,KAAK24C,2BAA2BlpB,WAAWzvB,KAAK64C,iB,cAAtD,SAEA74C,KAAK2zC,cAAgB3zC,KAAK0zC,oBAAoB7U,G,YAGlD,YAAA8T,aAAA,WAMI,OALI3yC,KAAK2zC,eAAiB3zC,KAAK2zC,cAAcC,aACzC5zC,KAAK2zC,cAAcC,WAAWC,YAAY7zC,KAAK2zC,eAC/C3zC,KAAK2zC,sBAGF3zC,KAAK24C,2BAA2BhG,gBAGnC,YAAAe,oBAAR,SAA4B7U,GACxB,IAAMwT,EAAYt2B,SAAS+3B,eAAejV,GAE1C,IAAKwT,EACD,MAAM,IAAI,IAAqB,+DAGnC,IAAMyG,EAAkB94C,KAAK24C,2BAA2B1E,aAAaj0C,KAAK+4C,0BAI1E,OAFA1G,EAAU2G,YAAYF,GAEfA,GAGH,YAAAD,aAAR,WACI,IAAK74C,KAAK44C,UACN,MAAM,IAAI,KAAoB,KAAwB/oB,uBAG1D,OAAO7vB,KAAK44C,WAIF,YAAAG,yBAAd,SAAuCzJ,G,4IACnCA,EAAM2J,iBACAvtB,EAAO1rB,KAAK2xC,OAAO5c,WAAWrJ,KAAKob,iBACnCoS,EAAmB,YAAuBxtB,GAAQ,E,iBAGhC,O,sBAAA,GAAM1rB,KAAK24C,2BAA2BQ,iB,OAC1D,OADM5f,EAAc,SACpB,GAAMv5B,KAAK24C,2BAA2BS,cAAc7f,I,cAApD,SACI2f,GAAoB3f,EAAY7D,gBAChC,GAAM11B,KAAK24C,2BAA2BU,sBAAsB9f,EAAY7D,kBADxEwjB,M,OACA,S,iBAEJ,SAAMl5C,KAAKs5C,4B,cAAX,S,aAEA,I,aAA+B,aAAlB,EAAMtlC,QACf,MAAM,E,qCAKV,YAAAslC,yBAAR,WACIt5C,KAAK80C,YAAYyC,SAAS,gBAAiB,CACvC9+B,QAAS,CACLgM,OAAQ,YACR,eAAgB,wCAvB5B,sBADC,K,6CA4BL,EArFA,G,UCHqB,GAArB,WAKI,WACYktB,EACA4B,EACAgG,GAFA5H,cACA4B,8BACAgG,+BAiIf,OA9HG,YAAA9pB,WAAA,SAAWzO,GAAX,WACY6d,EAA0B7d,EAAO,YAApBuD,EAAavD,EAAO,SAEzC,IAAK6d,IAAgBta,EACjB,MAAM,IAAI,IAAqB,qEAKnC,OAFAvkB,KAAK44C,UAAYr0B,EAEVvkB,KAAK2xC,OAAOc,SAASzyC,KAAKuzC,uBAAuB1e,uBACnD7Q,MAAK,YACF,IAAMqU,EAAgBvD,EAAMwD,eAAeC,iBAAiBhU,GACtDqU,EAAc9D,EAAMzzB,OAAOw3B,iBAEjC,IAAKR,IAAkBA,EAAcmC,mBAAmBvF,WACpD,MAAM,IAAI,IAAiB,IAAqBtkB,sBAGpD,IAAKioB,EACD,MAAM,IAAI,IAAqB,0CAGnC,IAAM4gB,EAA+B,CACjCC,iBAAkBphB,EAAcmC,mBAAmBkf,uBACnDC,SAAU/gB,EAAYmB,aAAa6f,cACnCxF,SAAU/b,EAAch3B,OAAO+yC,SAC/Bnf,WAAYoD,EAAcmC,mBAAmBvF,YAGjD,OAAO,EAAKskB,wBAAwBM,KAAKL,MAE5Cx1B,MAAK,YACF,EAAK81B,kBAAoBC,EACzB,EAAKC,cAAgB,EAAKtG,oBAAoB7U,OAI1D,YAAA8T,aAAA,WAOI,OANI3yC,KAAKg6C,eAAiBh6C,KAAKg6C,cAAcpG,aACzC5zC,KAAKg6C,cAAc1J,oBAAoB,QAAStwC,KAAK+4C,0BACrD/4C,KAAKg6C,cAAcpG,WAAWC,YAAY7zC,KAAKg6C,eAC/Ch6C,KAAKg6C,sBAGFv2C,QAAQR,WAGX,YAAAywC,oBAAR,SAA4B7U,GACxB,IAAMob,EAAkBl+B,SAAS+3B,eAAejV,GAC1C/J,EAAQ90B,KAAK2xC,OAAO5c,WACpBsD,EAAgBr4B,KAAK44C,UAAY9jB,EAAMwD,eAAeC,iBAAiBv4B,KAAK44C,WAAa,KACzFhgB,EAAc9D,EAAMzzB,OAAOw3B,iBAEjC,IAAKohB,EACD,MAAM,IAAIn4C,MAAM,wCAGpB,IAAKu2B,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGpD,IAAKioB,EACD,MAAM,IAAI,IAAqB,0CAGnC,IAAMkd,EAAS/5B,SAASC,cAAc,SAItC,GAFA85B,EAAO/kC,KAAO,QAEVsnB,EAAcmC,mBAAmBkf,uBAAwB,CACzD,IAAMQ,EAAY7hB,EAAch3B,OAAO+yC,SAAW,WAAa,GAIzD5d,EAAS,CACX,UAJsBoC,EAAYmB,aAAY,cAK9C,0CACA,cALmB1B,EAAcmC,mBAAkB,YAQvDsb,EAAOqE,IAAM,CACT,WAAWD,EAAS,8DACpB1jB,EAAO3X,KAAK,MACdA,KAAK,UAEPi3B,EAAOqE,IAAM,4EAOjB,OAJAF,EAAgBjB,YAAYlD,GAE5BA,EAAO3F,iBAAiB,QAASnwC,KAAK+4C,0BAE/BjD,GAGH,YAAAsE,yBAAR,WACI,IAAMtlB,EAAQ90B,KAAK2xC,OAAO5c,WACpBxJ,EAAWuJ,EAAMvJ,SAAS4J,cAC1BkD,EAAgBr4B,KAAK44C,UAAY9jB,EAAMwD,eAAeC,iBAAiBv4B,KAAK44C,WAAa,KAE/F,IAAKrtB,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,IAAKmoB,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGpD,MAAO,CACHskB,WAAYoD,EAAcmC,mBAAmBvF,WAC7ColB,iBAAkBhiB,EAAcmC,mBAAmB6f,iBACnD96B,OAAQgM,EAASG,KAAK4uB,WAAWl5B,WACjCkG,SAAUiE,EAASG,KAAKpE,SAASG,KACjC8yB,OAAQhvB,EAASG,KAAK3O,GACtBqL,YAAa,aAAe,UAK5B,YAAA2wB,yBAAR,WACI,IAAK/4C,KAAK85C,kBACN,MAAM,IAAI,KAAoB,KAAwB3mB,8BAG1DnzB,KAAK85C,kBAAkBvuB,SAASvrB,KAAKo6C,6BALzC,sBADC,K,6CAQL,EAzIA,G,YCIA,WAGI,WACYzI,EACA4B,EACAiH,EACA1F,EACA2F,sBAJA9I,cACA4B,8BACAiH,2BACA1F,mBACA2F,aAoHf,OAjHG,YAAAhrB,WAAA,SAAWzO,GAAX,WACUi0B,EAAgBj0B,EAAQ8N,OACxBgG,EAAQ90B,KAAK2xC,OAAO5c,WACpBsD,EAAgBr4B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeC,iBAAiBvX,EAAQuD,UAE1F,IAAK0wB,EACD,MAAM,IAAI,IAGd,IAAK5c,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGpD,OAAO3Q,KAAKw6C,oBAAoB3rB,WAAWwJ,EAAch3B,OAAO8yC,YAC3DnwB,MAAK,Y,MACF,IAAKqU,IAAkBA,EAAch3B,OAAO8yC,WACxC,MAAM,IAAI,IAAiB,IAAqBxjC,sBAGpD,IAAMwjC,EAAa9b,EAAch3B,OAAO8yC,WAClC6B,EAAM3d,EAAch3B,OAAO+yC,SAAW,UAAY,aAClD1kB,IAAW,MAAyBsmB,GAAMf,EAAcyF,SAAQ,GAEhEC,EAAiB,GACjBC,EAAoB,GAQ1B,OANI3F,EAAcW,YACd+E,EAAen1C,KAAKspB,EAAO4mB,QAAQmF,QAEnCD,EAAkBp1C,KAAKspB,EAAO4mB,QAAQmF,QAGnC/rB,EAAOgsB,OAAOjE,OAAO,CACxBb,IAAG,EACHxnB,OAAQkB,EACRwmB,OAAQjB,EAAcyB,qBACtBqE,QAAS,CACLC,QAASL,EACTM,WAAYL,GAEhBzE,MAAO,oBACHC,MAAO,QACJ,SAAAtc,KAAA,CAAKmb,EAAckB,MAAO,SAAU,OAAQ,QAAS,QAAS,QAAS,UAAW,iBAEzFxuB,QAAS,SAACpC,EAAG21B,GAAY,SAAK5E,cAAcnC,EAAY+G,EAASjG,EAAcsB,iBAC/E4E,YAAa,SAACjhB,EAAMghB,GAAY,SAAKzE,iBAAiBvc,EAAMghB,EAASjG,EAAcyB,qBAAsBzB,EAAc0B,oBACxH31B,EAAQ6d,iBAIvB,YAAA8T,aAAA,WAGI,OAFA3yC,KAAKm1C,sBAEE1xC,QAAQR,WAGX,YAAAqzC,cAAR,SAAsBnC,EAAoB+G,EAAyBpE,GAAnE,WACI,IAAKoE,EACD,MAAM,IAAI,KAAoB,KAAwB/nB,8BAG1D,OAAOnzB,KAAK2xC,OAAOc,SAASzyC,KAAKuzC,uBAAuB1e,uBACnD7Q,MAAK,YACF,IAAM0H,EAAOoJ,EAAMpJ,KAAKkK,UAClB2kB,EAAS7uB,EAAOA,EAAK3O,GAAK,GAEhC,OAAOm+B,EAAQ3jB,QAAQE,KAAQ,EAAKgjB,MAAK,wCAAyC,CAAEtG,WAAU,EAAEoG,OAAM,GAAI,CACtG9hC,QAAS,CACL,iBAAkB,WAI7BuL,MAAK,YAAO,SAAIjH,MAChBqH,OAAM,YAKH,MAJI0yB,GACAA,EAAQ53C,GAGNA,MAIV,YAAAu3C,iBAAR,SACIvc,EACAghB,EACAxE,EACA0E,GAJJ,WAMI,IAAKp7C,KAAKm1C,eACN,MAAM,IAAI,KAAoB,KAAwBhiB,8BAG1D,IAAK+nB,EACD,MAAM,IAAI,KAAoB,KAAwB/nB,8BAG1D,IAAK+G,EAAKmhB,YAAcnhB,EAAKohB,QACzB,MAAM,IAAI,IAAiB,IAAqB7qC,gBAGpD,IAAM8T,EAAWvkB,KAAKm1C,eAAep4B,GAErC,OAAOm+B,EAAQvzB,QAAQjf,IAAIwxB,EAAKmhB,WAAWr3B,MAAK,YAC5C,EAAK8wB,YAAYyC,SAAS,gBAAiB,CACvCC,aAAc,SACd7T,SAAUpf,EACVI,OAAQ+xB,EAAuB,kBAAoB,wBACnD6E,UAAWrhB,EAAKmhB,UAChBG,QAASthB,EAAKohB,QACdG,UAAW9D,KAAKC,UAAU9yB,EAAQ42B,MAAMC,kBAIxD,EA5HA,G,GCFA,WAGI,WACYhK,EACA4B,EACAuB,EACA8G,GAHAjK,cACA4B,8BACAuB,mBACA8G,uCA8Ef,OA3ES,YAAAnsB,WAAN,SAAiBzO,G,6JAIb,GAHI8T,EAAQ90B,KAAK2xC,OAAO5c,aAChByF,EAAuB1F,EAAMwD,eAAeyS,wBAAwB/pB,EAAQuD,UAAS,oBAErEm2B,SACpB,MAAM,IAAI,IAGN,SAAM16C,KAAK2xC,OAAOc,SAASzyC,KAAKuzC,uBAAuB1e,wB,OAc/D,OAdAC,EAAQ,SACFpJ,EAAOoJ,EAAMpJ,KAAKob,iBAClB+U,EAA+B,CACjCrF,UAAW,YAAQ,SAAKC,iBAAiBvc,IACzC4hB,QAAS,YAAQ,SAAKC,2BAA2B7hB,KAGjDlZ,EAAQg7B,gBAAkBh7B,EAAQg7B,eAAe7F,QACjD0F,EAAa1F,MAAQn1B,EAAQg7B,eAAe7F,OAG1C8F,EAA2C,QAAzB,EAAGj7B,EAAQg7B,0BAAc,WAAEC,mBAC7CC,EAAsBpjC,QAAQmjC,GAAsBlgC,SAAS+3B,eAAemI,IAElF,GAAMj8C,KAAK47C,gCAAgCnsB,WAAWzvB,KAAKm8C,iBAAiB3hB,EAAoB9O,K,OAQhG,OARA,SAEA1rB,KAAK47C,gCAAgCrG,cAAc7pB,EAAK3O,GAAI,IAAIiE,EAAQ6d,YAAegd,GAEnFK,GACAl8C,KAAK47C,gCAAgCQ,eAAe1wB,EAAK4uB,WAAY,IAAI2B,GAGtE,CAAP,EAAOx4C,QAAQR,mBAGnB,YAAA0vC,aAAA,WAGI,OAFA3yC,KAAKq8C,iBAEE54C,QAAQR,WAGX,YAAA84C,2BAAR,SAAmC,G,IAAE9F,EAAa,gBAC9Cj2C,KAAKq8C,UAA8B,WAAlBpG,GAAgD,aAAlBA,GAG3C,YAAAQ,iBAAR,SAAyB,G,IAAE6F,EAAO,UAC9B,IAAKA,EACD,MAAM,IAAI,IAAiB,IAAqB7rC,gBAGpD,OAAOzQ,KAAK80C,YAAYyC,SAAS,gBAAiB,CAC9CC,aAAc,SACd7yB,OAAQ,wBACRgf,SAAU3jC,KAAKq8C,UAAY,uBAAyB,iBACpDE,SAAUD,KAIV,YAAAH,iBAAR,SAAyB3hB,EAAsD9O,GACnE,MAAyE8O,EAAkB,SAAjFgiB,EAA+DhiB,EAAkB,OAAzEiiB,EAAuDjiB,EAAkB,wBAAhD2Z,EAA8B3Z,EAAkB,WAApCkiB,EAAkBliB,EAAkB,cAC7FmiB,EAAqC,CAAE,QAM7C,OAJKF,GACDE,EAAen3C,KAAK,UAGjB,CACH,YAAak1C,EACb,cAAevG,EACf+B,QAAOA,EACP5uB,SAAUoE,EAAKpE,SAASG,KACxBm1B,WAAY,CAAC,UAAW,YACxB,kBAAmBD,EACnBH,OAAM,EACN,8BAA+BE,IAG3C,EArFA,GCyBe,SAASG,GACpB77B,GAEA,IAAM87B,EAAO97B,GAAWA,EAAQ87B,KAC1B53B,EAAQ,cACR63B,EAAgB,SAAAC,oBAAA,CAAoB,CAAEF,KAAI,IAC1CG,EAAa,SAAAC,iBAAA,CAAiB,CAAEJ,KAAI,IAE1C,OAAO,IAAIpL,EACPxsB,EACA,IAAI,ECrBG,SACXA,EACA63B,EACAE,EACAH,GAEA,IAAMK,EAAW,IAAI,IACfC,EAAe,SAAAC,gBAAA,GACfC,EAAwB,IAAI,IAC9B,IAAI,IAAsBP,GAC1B,IAAI,IAAoB,IAAI,IAAoBA,IAChD,IAAI,IAAwB,IAAI,IAAwBA,KAEtDQ,EAAiC,YAAqCH,EAAcL,GAsI1F,OApIAI,EAASxhB,SAAS,EAAyBptB,kBAAkB,WACzD,WAAI,GACA2W,EACAo4B,EACA,IAAI,IAAoB,IAAI,IAAsBF,IAClDH,SAEAplB,WAIRslB,EAASxhB,SAAS,EAAyBntB,yBAAyB,WAChE,WAAI,GACA0W,EACAo4B,EACA,IAAI,IAAoB,IAAI,IAAsBF,IAClDH,KAEAplB,WAIRslB,EAASxhB,SAAS,EAAyB9sB,YAAY,WACnD,WAAI,GACAqW,EACAo4B,EACA,IAAI,IAAuBF,OAGnCD,EAASxhB,SAAS,EAAyBoX,mBAAmB,WAC1D,WAAI,GACA7tB,EACA+3B,EACAK,EACA,YACIp4B,EACA,IAAI,SAKhBi4B,EAASxhB,SAAS,EAAyBqX,wBAAwB,WAC/D,WAAI,GACA9tB,EACA+3B,EACAK,EACA,YACIp4B,EACA,IAAI,SAKhBi4B,EAASxhB,SAAS,EAAyBsX,qBAAqB,WAC5D,WAAI,GACA/tB,EACA+3B,EACAK,EACA,YACIp4B,EACA,IAAI,IACA,IAAI,IACA,IAAI,IAAsBk4B,UAO9CD,EAASxhB,SAAS,EAAyBuX,uBAAuB,WAC9D,WAAI,GACAhuB,EACA+3B,EACAK,EACA,YACIp4B,EACA,IAAIs4B,EAAA,EAAgCT,QAKhDI,EAASxhB,SAAS,EAAyBwX,yBAAyB,WAChE,WAAI,GACAjuB,EACA+3B,EACAK,EACA,YACIp4B,EACA,IAAI,SAKhBi4B,EAASxhB,SAAS,EAAyByX,kBAAkB,WACzD,WAAI,GACAluB,EACA+3B,EACAK,EACA,YACIp4B,EACA,IAAI,SAKhBi4B,EAASxhB,SAAS,EAAyB0X,eAAe,WACtD,WAAI,GACAnuB,EACAo4B,EACA,IAAI,IAAmBF,GACvBH,EACAH,MAIRK,EAASxhB,SAAS,EAAyB2X,gBAAgB,WACvD,WAAI,GACApuB,EACAo4B,EACAL,EACAM,MAIRJ,EAASxhB,SAAS,EAAyBmX,eAAe,WACtD,WAAI,EACA5tB,EACAo4B,EACA,kBAIDH,EAnJI,CDsB0Bj4B,EAAO63B,EAAeE,EAAYH,GAC/D,IAAI,IAA2B,IAAI,IAA2BC,MA9C1E,oC,iCEEYU,E,sDCAZ,WACI,WACYC,qBAuCf,OApCG,YAAAC,QAAA,SAAsBz0C,GAClB,IAAM00C,EAAW,IAAQD,QAAQ39C,KAAK69C,cAAc30C,IAEpD,GAAiB,OAAb00C,EACA,OAAO,KAGX,IACI,OAAOjG,KAAKmG,MAAMF,GACpB,MAAO1+C,GAIL,OAFAc,KAAK+9C,WAAW/9C,KAAK69C,cAAc30C,IAE5B,OAIf,YAAA80C,YAAA,SAA0B90C,GACtB,IAAM9I,EAAQJ,KAAK29C,QAAQz0C,GAI3B,OAFAlJ,KAAK+9C,WAAW70C,GAET9I,GAGX,YAAA69C,QAAA,SAAsB/0C,EAAa9I,GAC/B,OAAO,IAAQ69C,QAAQj+C,KAAK69C,cAAc30C,GAAMyuC,KAAKC,UAAUx3C,KAGnE,YAAA29C,WAAA,SAAW70C,GACP,OAAO,IAAQ60C,WAAW/9C,KAAK69C,cAAc30C,KAGzC,YAAA20C,cAAR,SAAsB30C,GAClB,OAAUlJ,KAAK09C,WAAU,IAAIx0C,GAErC,EAzCA,G,iCCOA,YACI,WAAYyP,GAAZ,MACI,YAAMA,EAAU,CAAE3E,QAAS2E,EAASH,KAAKojB,SAAQ,K,OAEjD,EAAKvzB,KAAO,yBACZ,EAAK0I,KAAO,sB,EAEnB,OAPmD,yBAOpD,EAPA,C,MAAoD,G,SFPpD,SAAY0sC,GACR,EAAAS,iBAAA,oBACA,EAAAC,eAAA,kBACA,EAAAC,aAAA,gBAHJ,CAAYX,MAAsB,KAYlC,I,EAAA,YACI,WACIzpC,EACOlD,kBAAkC2sC,EAAuBW,cAFpE,MAII,YAAMpqC,GAAW,uCAAqC,K,OAF/ClD,YAIP,EAAKzI,KAAO,qBACZ,EAAK0I,KAAO,iB,EAEnB,OAV+C,yBAUhD,EAVA,CAAgD,K,SGM3B,EAArB,WAOI,WACYstC,EACAC,EACAC,EACAC,EACA56B,EACA66B,EACAC,EACAC,GARZ,IAAAx2C,EAAA,KACYk2C,sBACAC,wBACAC,sBACAC,yBACA56B,sBACA66B,gBACAC,iBACAC,gBAER3+C,KAAK4+C,eAED5+C,KAAK2+C,SAASE,YACd7+C,KAAKs+C,iBAAiB/N,YAAY,IAA0Bp7B,iBAAkBnV,KAAK2+C,SAASE,YAG5F7+C,KAAK2+C,SAAS7H,SACd92C,KAAKs+C,iBAAiB/N,YAAY,IAA0Bn7B,cAAepV,KAAK2+C,SAAS7H,SAGzF92C,KAAK2+C,SAASG,QACd9+C,KAAKs+C,iBAAiB/N,YAAY,IAA0Bl7B,eAAgBrV,KAAK2+C,SAASG,QAG1F9+C,KAAK2+C,SAASI,aACd/+C,KAAKs+C,iBAAiB/N,YAAY,IAA0Bh7B,YAAavV,KAAK2+C,SAASI,aAGvF/+C,KAAK2+C,SAASK,WACdh/C,KAAKs+C,iBAAiB/N,YAAY,IAA0B/6B,UAAWxV,KAAK2+C,SAASK,WAGzFh/C,KAAKs+C,iBAAiB/N,YAAY,IAA0Bh7B,aAAa,WAAM,SAAK0pC,sBA4H3F,OAzHG,YAAAC,OAAA,sBACI,OAAIl/C,KAAK4+C,YACEn7C,QAAQR,QAAQjD,OAG3BA,KAAK4+C,eACL5+C,KAAKs+C,iBAAiBpO,SACtBlwC,KAAKw+C,kBAAkBW,KAAKn/C,KAAK2+C,SAAS9f,aAEnC7+B,KAAKo/C,eACPp7B,MAAK,WAAM,OAAAlb,EAAKu2C,mBAChBr7B,MAAK,YAAO,OAAAlb,EAAKu1C,eAAeiB,YAAY1jC,EAAK9S,EAAK61C,SAAS9f,gBAC/D7a,MAAK,YACFlb,EAAKy2C,QAAUC,EAEf12C,EAAKm2C,mBACLn2C,EAAK01C,kBAAkBiB,UAE1Br7B,OAAM,SAAApf,GAGH,OAFA8D,EAAK81C,eAEE91C,EAAK42C,kBAAkBxgD,GACzBklB,OAAM,WAQH,MAPAtb,EAAKw1C,iBAAiB3N,QAAQ,CAC1B5/B,KAAM,IAA0BuE,WAChCwP,QAAS5lB,IAGb4J,EAAK01C,kBAAkBiB,OAEjBvgD,QAGjB8kB,MAAK,WAAM,OAAAlb,OAGpB,YAAA62C,OAAA,WACS3/C,KAAK4+C,cAIV5+C,KAAK4+C,eACL5+C,KAAKs+C,iBAAiBjO,aAElBrwC,KAAKu/C,SAAWv/C,KAAKu/C,QAAQ3L,aAC7B5zC,KAAKu/C,QAAQ3L,WAAWC,YAAY7zC,KAAKu/C,SACzCv/C,KAAKu/C,QAAQK,cAAcC,WAI3B,YAAAZ,iBAAR,WACSj/C,KAAKu/C,SAAYv/C,KAAKu/C,QAAQO,eAAkB9/C,KAAK2+C,SAASoB,SAInE//C,KAAKu+C,eAAe1O,UAAU7vC,KAAKu/C,QAAQO,eAE3C9/C,KAAKu+C,eAAe9mB,KAAK,CACrB1mB,KAAM,IAAyBwgB,gBAC/BzM,QAAS9kB,KAAK2+C,SAASoB,WAIvB,YAAAV,cAAR,WACI,MAAK,kBAAkBxjC,KAAK,OAAArS,EAAA,GAASxJ,KAAK2+C,SAAS/iC,KAAKW,UAIjDvc,KAAK4jB,eAAe6T,KAA8Bz3B,KAAK2+C,SAAS/iC,KAClEoI,MAAK,SAAC,GAA8B,OAAR,EAAD,oBAC3BI,OAAM,YAAY,OAAA3gB,QAAQP,OAAO,IAAI,EAAuByV,OALtDlV,QAAQR,QAAQjD,KAAK2+C,SAAS/iC,MAerC,YAAAwjC,aAAR,WACI,GAAIp/C,KAAKy+C,SAASd,QA/HW,mBAgIzB,OAAOl6C,QAAQR,UAGnBjD,KAAKy+C,SAASR,QAnIe,sBA2I7Bj+C,KAAKy+C,SAASR,QA1IuB,yBA0IgBh9B,KAAK++B,OAElD,IACF3S,EADa,OAAA7jC,EAAA,GAASxJ,KAAK2+C,SAAS/iC,KAAI,OACjB,6CAA6CqkC,mBAAmBjgD,KAAK0+C,UAAUziC,MAK5G,OAHAF,SAASvD,KAAK29B,MAAM+J,WAAa,SACjClgD,KAAK0+C,UAAU9rB,QAAQya,GAEhB,IAAI5pC,SAAe,gBAGtB,YAAAi8C,kBAAR,SAA0BxgD,GACtB,IAAMihD,EAAcC,OAAOpgD,KAAKy+C,SAASd,QAtJJ,2BA6JrC,QALMwC,GAAel/B,KAAK++B,MAAQG,EA1JG,MA2JjCjhD,aAAiB,GACjBA,EAAM4R,UAAY2sC,EAAuBU,gBAO7Cn+C,KAAKy+C,SAASV,WAjKuB,0BAkKrC/9C,KAAKy+C,SAASV,WAnKe,mBAqKtB/9C,KAAKo/C,gBAND37C,QAAQP,UA3JU,sBADpC,KACoB,GAArB,G,mBCdA,WACI,WACYy7C,mBAyEf,OAtEG,YAAAW,YAAA,SAAYnF,EAAatb,GACrB,IAAMwT,EAAYt2B,SAAS+3B,eAAejV,GAClC,GAAoB7+B,KAAK2+C,UAAY,IAAE,QAAvC,WAAU,MAAK,EAEvB,IAAKtM,EACD,MAAM,IAAI,EACN,+EACAoL,EAAuBS,kBAI/B,IAAMsB,EAASzjC,SAASC,cAAc,UAUtC,OARAwjC,EAAOrF,IAAMA,EACbqF,EAAOrJ,MAAMkK,OAAS,OACtBb,EAAOrJ,MAAMmK,QAAU,OACvBd,EAAOrJ,MAAMoK,MAAQ,OACrBf,EAAOgB,uBAEPnO,EAAU2G,YAAYwG,GAEfx/C,KAAKygD,kBAAkBjB,EAAQh7B,GACjCJ,OAAM,YAGH,MAFAiuB,EAAUwB,YAAY2L,GAEhBtgD,MAIV,YAAAuhD,kBAAR,SAA0BjB,EAA2BkB,GAGjD,OAAO,IAAIj9C,SAAQ,SAACR,EAASC,GACzB,IAAMshB,EAAUqT,OAAO8oB,YAAW,WAC9Bz9C,EAAO,IAAI,EAAmB,0EAC/Bw9C,GAEGE,EAAgB,SAACtR,GACnB,GAAIA,EAAMjzB,SAAW,OAAA7S,EAAA,GAASg2C,EAAOrF,KAAK99B,SAItC,YAAcizB,EAAMpV,KAAM,IAA0B5kB,cACpD7P,IACAvC,EAAO,IAAI,EAAmBosC,EAAMpV,KAAKpV,QAAQ9Q,QAASypC,EAAuBU,kBAGjF,YAAc7O,EAAMpV,KAAM,IAA0B3kB,cAAc,CAClEiqC,EAAOrJ,MAAMmK,QAAU,GAEvB,IAAMO,EAAYvR,EAAMpV,KAAKpV,SAAWwqB,EAAMpV,KAAKpV,QAAQ+7B,UACrDC,EAAU,YAAc,CAC1BC,WAAUA,EACVC,WAAUA,EACVC,wBAAyBJ,EAAY,gBAAkB,iBACxDrB,GAEH/5C,IACAxC,EAAQ69C,EAAQA,EAAQrhD,OAAS,MAInCgG,EAAW,WACboyB,OAAOyY,oBAAoB,UAAWsQ,GACtC/oB,OAAOqpB,aAAa18B,IAGxBqT,OAAOsY,iBAAiB,UAAWyQ,OAG/C,EA3EA,GCNA,kCAaA,IAAMO,EAAiB,+BAoBR,SAASC,EAAcpgC,GAClC,IAAM3E,EAAS,OAAA7S,EAAA,GAASwX,EAAQpF,KAAKS,OAYrC,OAXyB,IAAI,EACzB,IAAI,EACJ,IAAI,IAA8CA,GAClD,IAAI,IAAwCA,GAC5C,IAAI,IAAiB,CAAE0jC,OAAQ/+B,EAAQ++B,QAAU/+B,EAAQ++B,OAAOsB,mBAChE,SAAArE,oBAAA,GACA,IAAI,EAAemE,GACnBtpB,OAAOC,SACP9W,GAGoBk+B,W,oEC5Cb,SAASoC,EAAuBttC,GAC3C,GAAKA,EAAQ8Q,SAAY9Q,EAAQ8Q,QAAQ+7B,UAAzC,CAIA,IAAMroC,EAAOuD,SAAS+3B,eAAe9/B,EAAQ8Q,QAAQ+7B,WAEhDroC,IAAQA,EAAK+oC,aAAa,uBAI/B/oC,EAAKgpC,aAAa,qBAAsB,K,WCPrC,SAASC,EAAcviD,GAC1B,MAC6B,iBAAlBA,EAAM8U,SACS,iBAAf9U,EAAM6R,OACa,iBAAlB7R,EAAM4R,UAAyB5R,EAAM4R,UAC7C5R,aAAiB4C,M,qBCCJ,EAArB,WAII,WACYw8C,EACAC,EACAmD,EACAC,sBAHArD,wBACAC,sBACAmD,gCACAC,wBAER3hD,KAAKs+C,iBAAiBpO,SAkG7B,OA/FG,YAAA0R,aAAA,WACI,IAAM5tC,EAAyC,CAC3CjD,KAAM,IAA0BoE,kBAGpCnV,KAAK6hD,aAAa7tC,IAGtB,YAAA8tC,UAAA,SAAUh9B,GACN,IAAM9Q,EAAsC,CACxCjD,KAAM,IAA0BqE,cAChC0P,QAAS9kB,KAAK+hD,gBAAgBj9B,IAGlC9kB,KAAK6hD,aAAa7tC,IAGtB,YAAAguC,eAAA,SAAel9B,GACX,IAAM9Q,EAA2C,CAC7CjD,KAAM,IAA0BuE,WAChCwP,QAAS9kB,KAAK+hD,gBAAgBj9B,IASlC9kB,KAAK6hD,aAAa7tC,EAAS,CAAEiuC,YAAWA,KAG5C,YAAAC,gBAAA,SAAgBp9B,GACZ,IAAM9Q,EAA4C,CAC9CjD,KAAM,IAA0BwE,YAChCuP,QAAO,GAGX9kB,KAAK6hD,aAAa7tC,IAGtB,YAAAmuC,WAAA,WACI,IAAMnuC,EAAuC,CACzCjD,KAAM,IAA0BsE,gBAGpCrV,KAAK6hD,aAAa7tC,IAGtB,YAAAouC,cAAA,WACI,IAAMpuC,EAA0C,CAC5CjD,KAAM,IAA0ByE,WAGpCxV,KAAK6hD,aAAa7tC,IAGtB,YAAAquC,cAAA,SAAcC,GACVtiD,KAAKs+C,iBAAiB/N,YAAY,IAAyBhf,iBAAiB,SAAC,G,IAAEzM,EAAO,UAClFw9B,EAAQx9B,OAIR,YAAA+8B,aAAR,SAAqB7tC,EAAgCgN,GAGjD,GAFAhhB,KAAKuiD,uBAAuBvuC,GAExBgN,GAAWA,EAAQihC,WACnB,OAAOjiD,KAAK0hD,yBAAyBjqB,KAAKzjB,GAG9ChU,KAAKu+C,eAAe9mB,KAAKzjB,IAGrB,YAAAuuC,uBAAR,SAA+BvuC,GAA/B,WACI9S,OAAOge,KAAKlf,KAAK2hD,kBACZ7+C,SAAQ,YACL,GAAIkR,EAAQjD,OAAS7H,EAArB,CAIA,IAAMo5C,EAAU,EAAKX,iBAAiBz4C,GAElCo5C,GACCA,EAAmD3gD,KAAK,KAAMqS,QAKvE,YAAA+tC,gBAAR,SAAwB7iD,GACpB,MAAO,CACH8U,QAAS9U,EAAM8U,QACfjD,KAAM0wC,EAAcviD,GAASA,EAAM6R,YACnCD,QAAS2wC,EAAcviD,GAASA,EAAM4R,iBAzGE,sBADnD,KACoB,GAArB,GCPqB,EAArB,yBAcC,OAbG,YAAA8wC,aAAA,aAEA,YAAAE,UAAA,aAEA,YAAAE,eAAA,aAEA,YAAAE,gBAAA,aAEA,YAAAC,WAAA,aAEA,YAAAC,cAAA,aAEA,YAAAC,cAAA,aAb8C,sBADjD,KACoB,GAArB,GC8Be,SAASG,EAAgCxhC,G,MACpD,cAEA,IAAMyhC,EAAezhC,EAAQyhC,cAAgB5qB,OAAOh2B,OAGpD,OAAIg2B,SAAW4qB,EACJ,IAAI,EAGR,IAAI,EACP,IAAI,IAA6CzhC,EAAQ0hC,cACzD,IAAI,IAAyC1hC,EAAQ0hC,aAAcD,GACnE,IAAI,IAAyC,IAAKA,KAAa,MAC5D,IAA0BltC,aAAc+rC,EAAsB,IAjDzE,mC,gECiBO,SAASqB,EAAsBxjC,GAClC,OAAOA,EAAI5V,eAAe,YCD9B,iBAMI,WAAYyX,GALJ,KAAA4hC,QAAU,EACV,KAAAC,KAAwB,CAAEC,KAAM,IAChC,KAAAC,UAAmC,GAIvC/iD,KAAK2+C,SAAW,oBACZqE,QAAS,EACTniC,QAAS,IACToiC,SAAU,EAAAC,MACPliC,GA4Id,OAxIG,YAAAkwB,OAAA,W,IAAO,sDACH,IAAM3sC,EAASvE,KAAKmjD,YAAW,MAAhBnjD,KAAoBsjB,GAC3Bxe,EAAqBP,EAAM,MAApB6+C,EAAc7+C,EAAM,UAC7B4a,EAAQ5a,EAAM,IAYpB,OAVI4a,GAAOA,EAAIyR,SACXzR,EAAIkkC,YAEJlkC,EAAMnf,KAAKsjD,aAAaF,EAAW9/B,EAAK5c,MAAM5B,IAKlD9E,KAAKujD,oBAAoBpkC,GAElBA,EAAIyR,UAGf,YAAAogB,aAAA,W,IAAa,sDACD,MAAQhxC,KAAKmjD,YAAW,MAAhBnjD,KAAoBsjB,GAAI,IAExC,OAAOnE,EAAMA,EAAIkkC,UAAY,GAGzB,YAAAF,YAAR,W,UAAoB,kDAUhB,IATA,IAAIr+C,EAAQ,EACRs+C,EAAYpjD,KAAK6iD,KAQdO,EAAUN,KAAKrjD,QAAQ,CAG1B,IAFA,IAAI+jD,KAEKC,EAAW,EAAGA,EAAWL,EAAUN,KAAKrjD,OAAQgkD,IAAY,CACjE,IAAMtkC,EAAMikC,EAAUN,KAAKW,GAE3B,GAAKzjD,KAAK2+C,SAAS99B,QAAQ1B,EAAI/e,MAAOkjB,EAAKxe,IAA3C,CAQA,IAFA,IAAUg+C,MAAKY,QAAO,QAAIN,EAAUN,KAAK/8C,OAAO09C,EAAU,KAErC,IAAhBngC,EAAK7jB,QAAgBqF,IAAUwe,EAAK7jB,OAAS,IAAMkjD,EAAsBxjC,GAC1E,MAAO,CAAEra,MAAK,EAAEqa,IAAG,EAAEikC,UAAS,GAGlCI,KACAJ,EAAYjkC,EACZra,IAEA,OAGJ,IAAK0+C,EACD,MAIR,MAAO,CAAE1+C,MAAK,EAAEs+C,UAAS,IAGrB,YAAAE,aAAR,SAAqBzhD,EAAmDyhB,GACpE,IAEInE,EAFAra,EAAQ,EACRs+C,EAAYvhD,EAGhB,GACIsd,EAAM,CACF2jC,KAAM,GACNM,UAAS,EACTC,UAAW,EACXjjD,MAAOkjB,EAAKxe,IAMhBs+C,EAAUN,KAAKY,QAAQvkC,GAEvBikC,EAAYjkC,EACZra,UACKA,EAAQwe,EAAK7jB,QAEtB,IAAMkkD,EAAcxkC,EAIpB,OAFAwkC,EAAY/yB,SAAW,MAAK5wB,KAAK4iD,QAE1Be,GAGH,YAAAJ,oBAAR,SAA4BK,GACxB,GAAK5jD,KAAK2+C,SAASqE,QAAnB,CAIA,IAAMl+C,EAAQ9E,KAAK+iD,UAAUn9C,QAAQg+C,GAQrC,GANA5jD,KAAK+iD,UAAUh9C,QACA,IAAXjB,EAAe,EAAIA,GACR,IAAXA,EAAe,EAAI,EACnB8+C,KAGA5jD,KAAK+iD,UAAUtjD,QAAUO,KAAK2+C,SAASqE,SAA3C,CAIA,IAAM7jC,EAAMnf,KAAK+iD,UAAUx/B,MAEtBpE,IAILnf,KAAK6jD,WAAW1kC,GAChBnf,KAAK2+C,SAASsE,SAAS9jC,EAAIyR,cAGvB,YAAAizB,WAAR,SAAmB1kC,GACVA,EAAIikC,YAITjkC,EAAIikC,UAAUN,KAAK/8C,OAAOoZ,EAAIikC,UAAUN,KAAKl9C,QAAQuZ,GAAM,GD3I5D,SAA2BA,GAC9B,OAAOA,EAAI5V,eAAe,aADvB,CC6IuB4V,EAAIikC,YAI1BpjD,KAAK6jD,WAAW1kC,EAAIikC,aAE5B,EAvJA,G,qBCjBAr7C,EAAOD,QAAU4B,EAAQ,O,cCAzB3B,EAAOD,QAAU4B,EAAQ,O,kGCMV,SAASo6C,EACpBnrC,EACA3E,GAEQ,IACA,EADS2E,EAAQ,KACG,OAApB,WAAS,KAAE,EAEnB,OAAO,IAAI,IAAaA,EAAU,CAC9B3E,QAASynB,EAAW72B,IAAWoP,EAC/BpP,OAAM,IAId,SAAS62B,EAAW72B,GAChB,GAAKoC,MAAM7B,QAAQP,GAInB,OAAOA,EAAOoB,QAAO,SAACzB,EAAkBrF,GACpC,OAAIA,GAASA,EAAM8U,QACR,yBAAIzP,EAAQ,CAAAS,EAAMgP,UAGtBzP,IACR,IAAIsa,KAAK,O,wCCtBhB,cACI,WAAYlG,GAAZ,MACI,YAAMA,EAAU,CACZ3E,QAAS,2CACX,K,OAEF,EAAK3L,KAAO,eACZ,EAAK0I,KAAO,U,EAEnB,OATkD,yBASnD,EATA,C,MAAmD,G,+CCCnD,cACI,WAAY4H,GAAZ,MACI,YAAMA,EAAU,CAAE3E,QAAS,yEAAwE,K,OAEnG,EAAK3L,KAAO,4BACZ,EAAK0I,KAAO,yB,EAEnB,OAP+D,yBAOhE,EAPA,C,MAAgE,G,oCCThE,YAAApK,EAAA,MASe,gBAAqB,mB,6BCLpC,IAAYo9C,EAAZ,IAAA/+C,EAAA,qCAAY++C,GACR,EAAA3mB,6BAAA,iCACA,EAAAC,6BAAA,iCACA,EAAAC,0BAAA,8BAHJ,CAAYymB,MAAuB,M,sECKnC,aACI,WACYC,+BAkBf,OAdG,YAAAvvB,WAAA,SAAWzT,GADX,WAEI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAiBxK,sBAE5C,EAAKyqC,qBAAqBvvB,WAAWzT,GAChCgD,MAAK,YACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAiBvK,oBAAqBb,EAASH,OAC1EsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAiB5K,iBAAkBd,WAVpF,sBADC,K,+BAeL,EApBA,GAAqB,O,6BCPrB,YAAAhS,EAAA,MAIA,aACI,WACYid,yBAcf,OAXG,YAAA6Q,WAAA,SAAW,G,IAAEjQ,YAAO,EAAqB,GAAE,WAGvC,OAAOxkB,KAAK4jB,eAAelb,IAFf,oCAEwB,CAChC8b,QAAO,EACP/L,QAAS,CACLgM,OAAQ,IAAYrM,OACpB,iBAAkB,QAIlC,EAhBA,G,oCCJA,YAIA,aACI,WACYwL,yBASf,OANG,YAAAqgC,oBAAA,SAAoBp+C,EAA8B,G,IAAE2e,YAAO,EAAqB,GAAE,WAExE/L,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe6T,KAHf,gCAGyB,CAAEjf,KAAM3S,EAAe4S,QAAO,EAAE+L,QAAO,KAEpF,EAXA,G,4FCKA,aACI,WACY0/B,mCAgBf,OAZG,YAAAxvB,eAAA,SAAe1T,GADf,WAEI,OAAO,SAAAzb,OAAA,CACH,OAAAgD,EAAAqc,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAqBpK,0BACrC,SAAAgb,MAAA,EAAM,kE,4EACe,SAAM30B,KAAKkkD,yBAAyBC,WAAWnjC,I,OAEhE,OAFQxI,EAAS,SAAuD,KAEjE,CAAP,EAAO,SAAAuL,aAAA,CAAa,IAAqBnK,wBAAyBpB,eAExEpV,KACE,SAAAwxB,WAAA,EAAW,YAAY,mBAAiB,IAAqB/a,qBAAsBlB,QAT3F,sBADC,K,mCAaL,EAlBA,GAAqB,O,6BCTrB,YAAAhS,EAAA,MAIA,aACI,WACYid,yBAcf,OAXG,YAAAugC,WAAA,SAAW,G,IAAE3/B,YAAO,EAAqB,GAAE,WAGvC,OAAOxkB,KAAK4jB,eAAelb,IAFf,8BAEwB,CAChC8b,QAAO,EACP/L,QAAS,CACLgM,OAAQ,IAAYrM,OACpB,iBAAkB,QAIlC,EAhBA,G,uDCEMgsC,EAAiB,CACnB3tB,QAAS,CACL,uCACA,sCACA,WACA,sBACF5X,KAAK,MAGX,aACI,WACY+E,yBAiBf,OAdG,YAAAygC,cAAA,SAAcpvB,EAAoBrY,EAAsC,G,IAAE4H,YAAO,EAAqB,GAAE,WAC9F5I,EAAM,6BAA6BqZ,EAAU,mBAC7Cxc,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe6T,KAAK7b,EAAK,CAAEpD,KAAMoE,EAAS4Z,OAAQ4tB,EAAgB3rC,QAAO,EAAE+L,QAAO,KAGlG,YAAAmS,cAAA,SAAc1B,EAAoBrY,EAAmD,G,IAAE4H,YAAO,EAAqB,GAAE,WACzGzH,EAAgBH,EAAO,GAAhBpE,EAAI,iBAAKoE,EAAlB,QACAhB,EAAM,6BAA6BqZ,EAAU,oBAAoBlY,EACjEtE,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe8T,IAAI9b,EAAK,CAAE4a,OAAQ4tB,EAAgB5rC,KAAI,EAAEC,QAAO,EAAE+L,QAAO,KAE5F,EAnBA,G,uDCfA,aAKI,WAAYxD,GACRhhB,KAAKskD,WAAa,GAClBtkD,KAAKukD,WAAa,GAClBvkD,KAAK2+C,SAAW,oBAAE6F,aAAc,WAAcxjC,GA8CrD,OA3CG,YAAAtY,IAAA,SAAI2Q,EAAWorC,GACX,IACI,OAAOzkD,KAAK0kD,aACRrrC,GAASrZ,KAAK2+C,SAAS6F,aACvBC,GAAcprC,GAASrZ,KAAK2+C,SAAS6F,cAE3C,MAAOtlD,GACL,OAAOc,KAAK0kD,aACR1kD,KAAK2+C,SAAS6F,aACdC,GAAczkD,KAAK2+C,SAAS6F,gBAKxC,YAAA7oB,SAAA,SAAStiB,EAAUm1B,GACf,GAAIxuC,KAAK2kD,YAAYtrC,GACjB,MAAM,IAAI,IAAqB,IAAIA,EAAK,4BAG5CrZ,KAAKskD,WAAWjrC,GAASm1B,GAGnB,YAAAmW,YAAV,SAAsBtrC,GAClB,QAASrZ,KAAKskD,WAAWjrC,IAGrB,YAAAurC,aAAR,SAAqBvrC,GACjB,QAASrZ,KAAKukD,WAAWlrC,IAGrB,YAAAqrC,aAAR,SAAqBrrC,EAAeorC,GAChC,IAAKzkD,KAAK4kD,aAAaH,GAAa,CAChC,IAAMjW,EAAUxuC,KAAKskD,WAAWjrC,GAEhC,IAAKm1B,EACD,MAAM,IAAI,IAAqB,IAAIn1B,EAAK,wBAG5CrZ,KAAKukD,WAAWE,GAAcjW,IAGlC,OAAOxuC,KAAKukD,WAAWE,IAE/B,EAtDA,G,+CCIA,cACI,WAAYzwC,GAAZ,MACI,YAAMA,GAAW,qBAAmB,K,OAEpC,EAAK3L,KAAO,sBACZ,EAAK0I,KAAO,kB,EAEnB,OAPgD,yBAOjD,EAPA,C,MAAiD,G,+CCAjD,cACI,WACW7R,GADX,MAGI,YAAM,qGAAmG,K,OAFlGA,UAIP,EAAKmJ,KAAO,qCACZ,EAAK0I,KAAO,kC,EAEnB,OAT+D,yBAShE,EATA,C,MAAgE,G,oCCNhE,WAAApK,EAAA,MAOA,2BAsGC,OArGG,YAAA8oB,WAAA,SACIlE,EACA8M,EACAwsB,GAEA,OAAOphD,QAAQR,QAAQjD,KAAK8kD,gCACxBv5B,EACA8M,EACAwsB,KAIR/7C,EAAA,UAAArD,SAAA,WACI,OAAOhC,QAAQR,WAGnB,YAAA8hD,cAAA,SAAcxrB,GAEN,MAQAA,EAAW,kBAPPxoB,EAAI,OACgBsI,EAAK,yBACzB1S,EAAA,EAAA0rB,KACiB2yB,EAAQ,cACRC,EAAQ,cAKjC,OAAOxhD,QAAQR,QAAQ,CACnB8N,KAAMA,EACNopB,MAAO9gB,EACP2+B,QAAS,CACLgN,SAAQ,EACRC,SAAQ,MAKZ,YAAAH,gCAAR,SACIv5B,EACA8M,EACAwsB,GAGI,IAAAt8C,EAIAgjB,EAAQ,mBAFc25B,EAEtB35B,EAAQ,mBAGR,EAQA8M,EAAa,mBAPT8sB,EAAiB,oBACHpnC,EAAW,eACLqnC,EAAY,qBACdjR,EAAU,mBAMpC,MAAO,CACHkR,WAAY,EACZC,gBAAiB,EACjBC,aAAc,CACVC,QATsB,gBAUtBrR,WAAU,EACViR,aAAY,GAEhBK,sBAAuB,CAAC,CACpB10C,KAAM,OACN20C,WAAY,CACRC,mBAAoB,CAAC,WAAY,kBACjCC,oBAdRvtB,EAAa,eAc+BlZ,KAAI,YAAQ,MAAS,OAAT,EAAgB,aAAe8S,KAC/E4zB,wBAAuBA,EACvBC,yBAA0B,CACtBr0B,OAAQ,IAAqBza,KAC7B+uC,qBAAoBA,IAG5BC,0BAA2B,CACvBj1C,KAAM,kBACN20C,WAAY,CACRnrB,QAAS,QACT4qB,kBAAiB,MAI7Bc,gBAAiB,CACbloC,YAAW,EACXmnC,aAAY,EACZgB,iBAAkB,QAClBC,WAAY,OAAAx9C,EAAAsa,MAAA,CAAM8pB,EAAoB,GAAGqZ,QAAQ,IAErDC,eAAcA,EACdC,yBAA0BzB,EAC1B0B,0BAA2B,CACvBR,qBAAoBA,KAIpC,EAtGA,G,uDCIA,aAEI,WACY53B,EACDC,0BADCD,qBACDC,eAmCd,OAhCS,YAAAyrB,KAAN,SAAW,G,IAAEJ,EAAgB,mBAAEE,EAAQ,WAAEvF,EAAQ,WAAEnf,EAAU,a,6IAErDwkB,GAOM+M,EAAY,CACf,YAPepS,EAAW,WAAa,IAOnB,kDANR,CACX,UAAUuF,EACV,cAAc1kB,GAKRpW,KAAK,MACbA,KAAK,KAEP,GAAM7e,KAAKmuB,cAAcG,WAAWk4B,KAZpC/M,M,OAcA,GAFA,UAEKz5C,KAAKouB,QAAQ2rB,WACd,MAAM,IAAI,IAGd,MAAO,CAAP,EAAO/5C,KAAKouB,QAAQ2rB,Y,OAIxB,SAAM/5C,KAAKmuB,cAAcG,WAAW,MAAK8lB,EAAW,WAAa,IAAE,2C,OAEnE,GAFA,UAEKp0C,KAAKouB,QAAQ2rB,WACd,MAAM,IAAI,IAGd,MAAO,CAAP,EAAO/5C,KAAKouB,QAAQ2rB,oBAE5B,EAvCA,G,8DCJM0M,EAAc,CAChBpB,WAAY,EACZC,gBAAiB,GAGrB,2BA0GC,OAzGG,YAAA71B,WAAA,SACIlE,EACA8M,EACAwsB,GAEA,OAAOphD,QAAQR,QACXjD,KAAK0mD,6BAA6Bn7B,EAAU8M,EAAewsB,KAInE/7C,EAAA,UAAArD,SAAA,WACI,OAAOhC,QAAQR,WAGnB,YAAA8hD,cAAA,SAAcxrB,GAEN,MAQAA,EAAW,kBAPPxoB,EAAI,OACgBsI,EAAK,yBACzB1S,EAAA,EAAA0rB,KACiB2yB,EAAQ,cACRC,EAAQ,cAKjC,OAAOxhD,QAAQR,QAAQ,CACnB8N,KAAMA,EACNopB,MAAOwsB,KAAKttC,GACZ2+B,QAAS,CACLgN,SAAQ,EACRC,SAAQ,MAKZ,YAAAyB,6BAAR,SAAqCn7B,EAAoB8M,EAA8BwsB,GAE/E,IAAAt8C,EAIAgjB,EAAQ,mBAFc25B,EAEtB35B,EAAQ,mBAGR,EAQA8M,EAAa,mBAPS8sB,EAAiB,mBACrBpnC,EAAW,eACLqnC,EAAY,qBACdjR,EAAU,mBACbqR,EAAO,gBAE1BoB,EACAvuB,EAAa,eAEXwuB,EAA8B7mD,KAAK8mD,gCAAgC3B,GACnE4B,EAAoB/mD,KAAKgnD,sBAAsBH,EAA6BD,GAElF,OAAO,yCACAH,GAAW,CACdhB,sBAAuB,CAACsB,GACxBd,gBAAiB,CACbC,iBAAkB,QAClBC,WAAY,SAAAljC,MAAA,CAAM8pB,EAAoB,GAAGqZ,QAAQ,GACjDlB,aAAY,EACZnnC,YAAW,GAEfwnC,aAAe,CACXH,aAAY,EACZjR,WAAU,EACVqR,QAAO,GAEXa,eAAcA,EACdC,yBAA0BzB,EAC1B0B,0BAA2B,CACvBR,qBAAoBA,MAKxB,YAAAe,gCAAR,SAAwC3B,GACpC,MAAO,CACHp0C,KAAM,kBACN20C,WAAY,CACRnrB,QAAS,eACT4qB,kBAAiB,KAKrB,YAAA6B,sBAAR,SAA8BhB,EAAsDY,GAChF,MAAO,CACH71C,KAAM,OACN20C,WAAY,CACRC,mBAAoB,CAAC,WAAY,kBACjCC,oBAAqBgB,EAAeznC,KAAI,YAAQ,MAAS,OAAT,EAAgB,aAAe8S,KAC/E4zB,wBAAuBA,EACvBC,yBAA0B,CACtBr0B,OAAQ,IAAqBza,KAC7B+uC,qBAAoBA,IAG5BC,0BAAyB,IAGrC,EA1GA,G,oCCZA,WAAAr/C,EAAA,cAUA,aAGI,WACYkuC,+BAuHf,OApHG,YAAAplB,WAAA,SACIlE,EACA8M,EACAwsB,GAHJ,WAKI,IAAKxsB,EAAc3I,YACf,MAAM,IAAI,IAAiB,IAAqB/e,sBAKpD,OAFA3Q,KAAK60C,qBAAqBplB,WAAW4I,EAAc3I,aAE5C1vB,KAAK60C,qBAAqB3jB,4BAC5BlN,MAAK,YAGF,OAFA,EAAKijC,uBAAyBC,EAEvB,EAAKC,wBACR57B,EACA8M,EAAcmC,mBACdqqB,OAKhB/7C,EAAA,UAAArD,SAAA,WACI,OAAOzF,KAAK60C,qBAAqBpvC,YAGrC,YAAAs/C,cAAA,SAAcxrB,GACV,IAAMzU,EAAU6yB,KAAKmG,MAAMvkB,EAAY6tB,kBAAkBC,iBAAiBhuC,OAAOiuC,gBAAgB,GAEjG,OAAO7jD,QAAQR,QAAQ,CACnBk3B,MAAOrV,EAAQqV,MACfppB,KAAM+T,EAAQ/T,KACd0R,YAAaqC,EAAQrC,YACrBu1B,QAAS,CACLgN,SAAUlgC,EAAQkzB,QAAQgN,SAC1BC,SAAUngC,EAAQkzB,QAAQiN,SAC1BsC,QAASziC,EAAQkzB,QAAQuP,SAE7BC,QAAS1iC,EAAQ0iC,WAIjB,YAAAL,wBAAR,SACI57B,EACAiP,EACAqqB,GAEA,IAAKrqB,EAAmBitB,cACpB,MAAM,IAAI,IAAiB,IAAqB92C,sBAGpD,IAAM+2C,EAAsE,CACxEnC,aAAc,CACVC,QAAShrB,EAAmBitB,cAC5BrC,aAAc5qB,EAAmBmtB,mBACjCxT,WAAY3Z,EAAmBotB,kBAEnC3B,gBAAiB,CACbf,aAAc35B,EAASG,KAAKpE,SAASG,KACrCy+B,iBAAkB,QAClBC,WAAY,OAAAx9C,EAAAsa,MAAA,CAAMsI,EAASwhB,mBAAoB,GAAGqZ,QAAQ,IAE9DyB,iBAAkB,CACdhC,wBAAuBA,EACvBiC,qBAAsB,QAE1BxB,yBAA0BzB,EAC1BwB,eAAcA,EACdN,qBAAoBA,GAGxB,OAAO/lD,KAAK+nD,0DACR/nD,KAAKinD,uBAAuBe,yBAAyBN,KAIrD,YAAAK,0DAAR,SAAkEE,GAC9D,MAAO,CACH5C,WAAY,EACZC,gBAAiB,EACjBC,aAAc,CACVC,QAASyC,EAAgC1C,aAAaC,QACtDrR,WAAY8T,EAAgC1C,aAAapR,WACzDiR,aAAc6C,EAAgC1C,aAAaH,cAE/DK,sBAAuB,CAAC,CACpB10C,KAAM,OACN20C,WAAY,CACRC,mBAAoB,CAAC,WAAY,kBACjCC,oBAAqBqC,EAAgCJ,iBAAiBjC,oBACtEC,wBAAuBA,EACvBC,yBAA0B,CACtBr0B,OAAQ,IAAqBza,KAC7B+uC,qBAAoBA,IAG5BC,0BAA2B,CACvBj1C,KAAM,kBACN20C,WAAY,CACRnrB,QAAS,YACT,uBAAwB,KACxB,qCAAsC0tB,EAAgCC,oCAAoCxC,WAAW,sCACrH,uBAAwBuC,EAAgCC,oCAAoCxC,WAAW,wBACvG,uBAAwBuC,EAAgCC,oCAAoCxC,WAAW,4BAInHO,gBAAiBgC,EAAgChC,gBACjDI,eAAcA,EACdC,wBAAyB2B,EAAgC3B,wBACzDC,0BAA2B,CACvBR,oBAAqBkC,EAAgClC,uBAIrE,EA3HA,G,sFCEA,aAII,WACWniC,yBAJH,KAAAukC,gBAA0B,GAC1B,KAAAC,WAAA,EAiIX,OA3HS,YAAA34B,WAAN,SACIlE,EACA8M,EACAwsB,G,yGAKA,OAHA7kD,KAAKmoD,gBAAkB9vB,EAAcmC,mBAAmB6tB,eACxDroD,KAAKooD,YAAc/vB,EAAch3B,OAAO+yC,SAEjC,CAAP,EAAOp0C,KAAKsoD,4DACR/8B,EACA8M,EAAcmC,mBACdqqB,WAIR/7C,EAAA,UAAArD,SAAA,WACI,OAAOhC,QAAQR,WAGb,YAAA8hD,cAAN,SAAoBxrB,G,sIAEhB,IACIlgB,EAAQs+B,KAAKmG,MAAMvkB,EAAY6tB,kBAAkBC,iBAAiBhuC,OACpE,MAAO/Y,GACL,MAAM,IAAI,IAAqB,6CAGnC,IAAK+Y,EAAMkvC,YAAclvC,EAAMmvC,kBAAoBnvC,EAAMovC,cACrD,MAAM,IAAI,IAAyB,6CAEpB,SAAMzoD,KAAK0oD,cAAc1oD,KAAKooD,UAAWpoD,KAAKmoD,gBAAiB9uC,I,OAElF,MAAO,CAAP,EAAO,CACH8gB,MAHe,SAIfppB,KAAM,aACN0R,YAAa8W,EAAY6tB,kBAAkB3kC,YAC3Cu1B,QAAS,CACLgN,SAAUzrB,EAAY6tB,kBAAkB/0B,KAAKs2B,YAC7C1D,SAAU1rB,EAAY6tB,kBAAkB/0B,KAAKu2B,uBAK3C,YAAAF,cAAd,SAA4BtU,EAAmBiU,EAAwBhvC,G,sIACnE,IAAKA,IAAUA,EAAMmvC,gBACjB,MAAM,IAAI,IAAyB,4CAGI,SAAMxoD,KAAK6oD,4BAA4BzU,EAAUiU,EAAgB,CACxGt3C,KAAM,YACN+3C,WAAYzvC,K,OAGhB,KALM0vC,EAAqC,YAKjBA,EAAiB1vC,MACvC,MAAM,IAAI,IAAyB,8CAGvC,MAAO,CAAP,EAAO,EAAiBA,eAGd,YAAAwvC,4BAAd,SAA0CzU,EAAmB4U,EAAwB9uB,G,gBAAAA,U,+HAMhE,OAFXte,EAAMw4B,EAHa,0CACA,kCAIR,GAAMp0C,KAAK4jB,eAAe6T,KAAK7b,EAAK,CACjDqtC,aAAYA,EACZzwC,KAAM0hB,EACNzhB,QAAS,CACL,eAAgB,IAAYN,KAC5B+wC,cAAeF,EACf,eAAgB,S,OAIxB,MAAO,CAAP,EAViB,SAUDxwC,cAGZ,YAAA8vC,4DAAR,SACI/8B,EACAiP,EACAqqB,GAEA,MAAO,CACHQ,WAAY,EACZC,gBAAiB,EACjBC,aAAc,CACVC,QAAShrB,EAAmBitB,cAC5BtT,WAAY3Z,EAAmBotB,iBAC/BxC,aAAc5qB,EAAmBmtB,oBAErClC,sBAAuB,CAAC,CACpB10C,KAAM,OACN20C,WAAY,CACRC,mBAAoB,CAAC,WAAY,kBACjCC,oBAAqB,CAAC,OAAQ,WAAY,MAAO,aAAc,QAC/DC,wBAAuBA,EACvBC,yBAA0B,CACtBr0B,OAAQ,IAAqBza,KAC7B+uC,qBAAoBA,IAG5BC,0BAA2B,CACvBj1C,KAAM,kBACN20C,WAAY,CACRnrB,QAAS,cACT4qB,kBAAmB3qB,EAAmB6tB,mBAIlDpC,gBAAiB,CACbf,aAAc35B,EAASG,KAAKpE,SAASG,KACrCy+B,iBAAkB,QAClBC,WAAY,SAAAljC,MAAA,CAAMsI,EAASwhB,mBAAoB,GAAGqZ,QAAQ,IAE9DC,eAAcA,EACdC,yBAA0BzB,EAC1B0B,0BAA2B,CACvBR,qBAAoBA,KAIpC,EAnIA,G,oCCZA,WAAAp/C,EAAA,MAOA,2BAoGC,OAnGG,YAAA8oB,WAAA,SACIlE,EACA8M,EACAwsB,GAEA,OAAOphD,QAAQR,QAAQjD,KAAK8kD,gCACxBv5B,EACA8M,EACAwsB,KAIR/7C,EAAA,UAAArD,SAAA,WACI,OAAOhC,QAAQR,WAGnB,YAAA8hD,cAAA,SAAcxrB,GAEN,MAQAA,EAAW,kBAPPxoB,EAAI,OACgBsI,EAAK,yBACzB1S,EAAA,EAAA0rB,KACiB2yB,EAAQ,cACRC,EAAQ,cAKjC,OAAOxhD,QAAQR,QAAQ,CACnBk3B,MAAOwsB,KAAKttC,GACZtI,KAAMA,EACNinC,QAAS,CACLgN,SAAQ,EACRC,SAAQ,MAKZ,YAAAH,gCAAR,SACIv5B,EACA8M,EACAwsB,GAGI,IAAAt8C,EAIAgjB,EAAQ,mBAFc25B,EAEtB35B,EAAQ,mBAGR,EAOA8M,EAAa,mBANT8sB,EAAiB,oBACGC,EAAY,qBACdjR,EAAU,mBAMpC,MAAO,CACHkR,WAAY,EACZC,gBAAiB,EACjBC,aAAc,CACVC,QATsB,gBAUtBrR,WAAU,EACViR,aAAY,GAEhBK,sBAAuB,CAAC,CACpB10C,KAAM,OACN20C,WAAY,CACRC,mBAAoB,CAAC,WAAY,kBACjCC,oBAdRvtB,EAAa,eAc+BlZ,KAAI,YAAQ,MAAS,OAAT,EAAgB,aAAe8S,KAC/E4zB,wBAAuBA,EACvBC,yBAA0B,CACtBr0B,OAAQ,IAAqBza,KAC7B+uC,qBAAoBA,IAG5BC,0BAA2B,CACvBj1C,KAAM,kBACN20C,WAAY,CACRnrB,QAAS,cACT4qB,kBAAiB,MAI7Bc,gBAAiB,CACbf,aAAY,EACZgB,iBAAkB,QAClBC,WAAY,OAAAx9C,EAAAsa,MAAA,CAAM8pB,EAAoB,GAAGqZ,QAAQ,IAErDC,eAAcA,EACdC,yBAA0BzB,EAC1B0B,0BAA2B,CACvBR,qBAAoBA,KAIpC,EApGA,G,oCCPA,WAAAp/C,EAAA,cAQA,2BAkGC,OAjGG,YAAA8oB,WAAA,SACIlE,EACA8M,EACAwsB,GAEA,OAAOphD,QAAQR,QAAQjD,KAAK8kD,gCACxBv5B,EACA8M,EACAwsB,KAIR/7C,EAAA,UAAArD,SAAA,WACI,OAAOhC,QAAQR,WAGnB,YAAA8hD,cAAA,SAAcxrB,GACV,IACI,IAAMzU,EAAU6yB,KAAKmG,MAAMvkB,EAAY6tB,kBAAkBC,iBAAiBhuC,OAE1E,OAAO5V,QAAQR,QAAQ,CACnBk3B,MAAOrV,EAAQ/H,GACfhM,KAAM+T,EAAQ/T,KACdinC,QAAS,CACLgN,SAAUlgC,EAAQmN,KAAKhQ,MACvBgjC,SAAUngC,EAAQmN,KAAKk3B,SAGjC,MAAO7oD,GACL,MAAM,IAAI,IAAqB,+CAI/B,YAAAwkD,gCAAR,SACIv5B,EACA8M,EACAwsB,GAGI,MAIAt5B,EAAQ,mBAFc25B,EAEtB35B,EAAQ,mBAGR,EASA8M,EAAa,mBARW+sB,EAAY,qBACdjR,EAAU,mBACbqR,EAAO,gBACtB4D,EAAa,gBACbC,EAAoB,uBACpBC,EAAsB,yBAK9B,MAAO,CACHjE,WAAY,EACZC,gBAAiB,EACjBC,aAAc,CACVC,QAAO,EACPrR,WAAU,EACViR,aAAY,GAEhBK,sBAAuB,CAAC,CACpB10C,KAAM,OACN20C,WAAY,CACRC,mBAAoB,CAAC,WAAY,kBACjCC,oBAdRvtB,EAAa,eAc+BlZ,KAAI,YAAQ,MAAS,OAAT,EAAgB,aAAe8S,KAC/E4zB,wBAAuBA,EACvBC,yBAA0B,CACtBr0B,OAAQ,IAAqBza,KAC7B+uC,qBAAoBA,IAG5BC,0BAA2B,CACvBj1C,KAAM,kBACN20C,WAAY,CACRnrB,QAAS,SACT,iBAAkB6uB,EAClB,wBAA4BC,EAAoB,IAAIC,MAIhErD,gBAAiB,CACbf,aAAY,EACZgB,iBAAkB,QAClBC,WAAY,OAAAx9C,EAAAsa,MAAA,CAAM8pB,EAAoB,GAAGqZ,QAAQ,IAErDC,eAAcA,EACdC,yBAA0BzB,EAC1B0B,0BAA2B,CACvBR,qBAAoBA,KAIpC,EAlGA,G,+CCNA,cACI,WAAY/xC,GAAZ,MACI,YAAMA,GAAW,yFAAuF,K,OAExG,EAAK3L,KAAO,+BACZ,EAAK0I,KAAO,6B,EAEnB,OAPyD,yBAO1D,EAPA,C,MAA0D,G,sDCG1D,cACI,WACWnM,GADX,MAGI,YAAM,0BACF,sDACG,SAAA8kC,QAAA,CAAQ,SAAAzP,OAAA,CAAOr1B,IAAS,YAAe,gBAAAua,IAAA,CAAIoqC,GAAa,SAAC,GAAgB,OAAN,EAAD,eACvE1qC,KAAK,QAAM,K,OALNja,WAOP,EAAKyD,KAAO,8BACZ,EAAK0I,KAAO,4B,EAEnB,OAZwD,yBAYzD,EAZA,C,MAAyD,G,uDCCzD,aAGI,WACYod,wBAERnuB,KAAKouB,QAAUyJ,OAiBtB,OAdS,YAAAhJ,WAAN,SAAiBslB,G,gBAAAA,U,wIACPqV,EAAY,8CACZxoC,EAA6B,CAAE5Z,OAAMA,EAAO+Y,WAAY,CAAE,mBAAoBg0B,IAEpFA,EACM,GAAMn0C,KAAKmuB,cAAcG,WAAWk7B,EAAWxoC,IADrDmzB,M,cACM,S,aACA,SAAMn0C,KAAKmuB,cAAcG,WAAWk7B,I,OAApC,S,iBAEN,IAAKxpD,KAAKouB,QAAQU,OACd,MAAM,IAAI,IAGd,MAAO,CAAP,EAAO9uB,KAAKouB,QAAQU,gBAE5B,EAvBA,G,+DCOA,aACI,WACYlL,yBA0Cf,OAvCS,YAAA6lC,aAAN,SAAmBlP,EAAgB/jB,G,gBAAAA,U,6IAuBnB,OAtBJkzB,EAA8ClzB,EAAM,SAA1CmzB,EAAoCnzB,EAAM,WAA9BozB,EAAwBpzB,EAAM,aAAhBqzB,EAAUrzB,EAAM,MACxDmN,EAAW,iBAEXimB,EACAjmB,EAAW,oCACJgmB,EACPhmB,EAAW+lB,EAAW,+BAAiC,yBAChDA,IACP/lB,EAAW,wBAGXkmB,IACAlmB,EAAW,4CAGT/nB,EAAM,2BAA2B+nB,EACjCnrB,EAAO,CAAE+hC,OAAM,GACf9hC,EAAU,CACZ,iBAAkB,IAClB,eAAgB,IAAYN,MAGpB,GAAMnY,KAAK4jB,eAAe6T,KAAK7b,EAAK,CAAEnD,QAAO,EAAED,KAAI,K,OAE/D,MAAO,CAAP,EAFY,SAEDA,cAGT,YAAAsxC,eAAN,W,sIAOgB,OALNrxC,EAAU,CACZ,iBAAkB,IAClB,eAAgB,IAAYN,MAGpB,GAAMnY,KAAK4jB,eAAelb,IAN1B,gDAMgD,CAAC+P,QAAO,K,OAEpE,MAAO,CAAP,EAFY,SAEDD,cAEnB,EA5CA,G,+CCXMuxC,EAAyC,CAC3CC,KAAM,GACNC,MAAO,UACPC,gBAAiB,WAGfC,EAAqB,+CAE3B,aAKI,WACInpC,GAEAhhB,KAAKoqD,QAAU,yCAAKL,GAAmB/oC,GAAWA,EAAQ++B,QAE1D//C,KAAKqqD,mBAELrqD,KAAKsqD,WAAatqD,KAAKuqD,kBACvBvqD,KAAKwqD,WAAaxqD,KAAKyqD,kBAEvBzqD,KAAKsqD,WAAWtR,YAAYh5C,KAAKwqD,YA4FxC,OAzFG,YAAArL,KAAA,SAAKuL,GACD,GAAIA,EAAU,CACV,IAAM,EAAS3uC,SAAS+3B,eAAe4W,GAEvC,IAAK,EACD,MAAM,IAAI5oD,MAAM,8EAGpB,EAAOk3C,YAAYh5C,KAAKsqD,YAG5BtqD,KAAKsqD,WAAWnU,MAAM+J,WAAa,UACnClgD,KAAKsqD,WAAWnU,MAAMwU,QAAU,KAGpC,YAAAlL,KAAA,sBAOIz/C,KAAKsqD,WAAWna,iBAAiB,iBANL,SAAtBya,IACF9hD,EAAKwhD,WAAWnU,MAAM+J,WAAa,SAEnCp3C,EAAKwhD,WAAWha,oBAAoB,gBAAiBsa,MAKzD5qD,KAAKsqD,WAAWnU,MAAMwU,QAAU,KAG5B,YAAAJ,gBAAR,WACI,IAAMlY,EAAYt2B,SAASC,cAAc,OAazC,OAXAq2B,EAAU8D,MAAMmK,QAAU,QAC1BjO,EAAU8D,MAAM0U,OAAS,IACzBxY,EAAU8D,MAAM2U,KAAO,IACvBzY,EAAU8D,MAAM4U,OAAS,OACzB1Y,EAAU8D,MAAMoK,MAAQ,OACxBlO,EAAU8D,MAAM6U,SAAW,WAC3B3Y,EAAU8D,MAAM8U,MAAQ,IACxB5Y,EAAU8D,MAAM+U,IAAM,IACtB7Y,EAAU8D,MAAMgV,WAAa,qBAC7B9Y,EAAU8D,MAAMwU,QAAU,IAEnBtY,GAGH,YAAAoY,gBAAR,WACI,IAAMW,EAAYrvC,SAASC,cAAc,OAiBzC,OAfAovC,EAAUjV,MAAMmK,QAAU,QAC1B8K,EAAUjV,MAAMoK,MAAWvgD,KAAKoqD,QAAQJ,KAAI,KAC5CoB,EAAUjV,MAAM4U,OAAY/qD,KAAKoqD,QAAQJ,KAAI,KAC7CoB,EAAUjV,MAAMkV,aAAkBrrD,KAAKoqD,QAAQJ,KAAI,KACnDoB,EAAUjV,MAAMkK,OAAS,YACzB+K,EAAUjV,MAAMmV,YAAiBtrD,KAAKoqD,QAAQF,gBAAe,IAAIlqD,KAAKoqD,QAAQF,gBAAe,IAAIlqD,KAAKoqD,QAAQH,MAAK,IAAIjqD,KAAKoqD,QAAQH,MACpImB,EAAUjV,MAAMoV,OAAS,SACzBH,EAAUjV,MAAM6U,SAAW,WAC3BI,EAAUjV,MAAM2U,KAAO,IACvBM,EAAUjV,MAAM8U,MAAQ,IACxBG,EAAUjV,MAAM+U,IAAM,MACtBE,EAAUjV,MAAMjiB,UAAY,gCAC5Bk3B,EAAUjV,MAAMqV,eAAiB,cACjCJ,EAAUjV,MAAMsV,UAAetB,EAAkB,uDAE1CiB,GAGH,YAAAf,iBAAR,WAGI,IAAItuC,SAAS+3B,eAAeqW,GAA5B,CAIA,IAAMhU,EAAQp6B,SAASC,cAAc,SAErCm6B,EAAMp5B,GAAKotC,EAEXpuC,SAAS2vC,KAAK1S,YAAY7C,GAEtBA,EAAMwV,iBAAiBC,eAGvBzV,EAAMwV,MAAME,WAAW,gCACN1B,EAAkB,sLAIhC,KAGf,EA3GA,G,oCCeO,SAAS2B,EAAc9qC,EAAwBkF,GAGlD,OAAM,EAF2C,EAAQ,KAAiB,eAE7ClF,EAASkF,GASnC,SAAS6lC,IAEZ,EAAQ,KAvBZ,qE,sFCdA,yBAOC,OANG,YAAAC,WAAA,SAAW9sD,GACP,MAAO,CACH6R,KAAM,IAAgB4S,WACtBmB,QAAS5lB,IAGrB,EAPA,GCFe,SAAS+sD,IACpB,IACI,MAAOC,aACT,MAAOlnD,GACL,MAAO,e,ICAsBmnD,E,SCFrC,WACI,WACYC,mBA8Bf,OA3BG,YAAAC,IAAA,W,IAAI,sDACArsD,KAAKssD,cAAa,MAAlBtsD,KAAI,0BAAe,OAAUusD,KAGjC,YAAAl6B,KAAA,W,IAAK,sDACDryB,KAAKssD,cAAa,MAAlBtsD,KAAI,0BAAe,QAAWusD,KAGlC,YAAA1pD,KAAA,W,IAAK,sDACD7C,KAAKssD,cAAa,MAAlBtsD,KAAI,0BAAe,QAAWusD,KAGlC,YAAArtD,MAAA,W,IAAM,sDACFc,KAAKssD,cAAa,MAAlBtsD,KAAI,0BAAe,SAAYusD,KAGnC,YAAAC,MAAA,W,IAAM,sDACFxsD,KAAKssD,cAAa,MAAlBtsD,KAAI,0BAAe,SAAYusD,KAG3B,YAAAD,cAAR,SAAsBv7C,G,UAAqB,oDAClC/Q,KAAKosD,UAAapsD,KAAKosD,SAASr7C,KAIrC,EAAA/Q,KAAKosD,SAASr7C,IAAMpP,KAAI,kCAAC3B,KAAKosD,UAAaG,KAEnD,EAhCA,G,ECAA,yBAUC,OATG,YAAAF,IAAA,aAEA,YAAAh6B,KAAA,aAEA,YAAAxvB,KAAA,aAEA,YAAA3D,MAAA,aAEA,YAAAstD,MAAA,aACJ,EAVA,GCGMC,aHD+BN,EGCY,SAArBF,OHDSE,MAC5BA,EAIE,IAAI,EAAcvpD,SAHd,IAAI,GGCJ,SAAS8pD,IACpB,OAAOD,E,sDCEX,WACI,WACYE,+BA8Cf,OA3CG,YAAAC,YAAA,SAAYnlC,EAAczG,GAA1B,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IACMyH,EADQrG,EAAM6P,WACGxJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa2tB,EAAA,EAAiBh+B,uBAE5C,EAAKi5C,qBAAqBC,YAAYrhC,EAASxO,GAAI0K,EAAMzG,GACpDgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa2tB,EAAA,EAAiB/9B,qBAAsB6E,IAClEsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkBqtB,EAAA,EAAiB99B,kBAAmB+E,YAKrF,YAAAk0C,aAAA,SAAaplC,EAAczG,GAA3B,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IACMyH,EADQrG,EAAM6P,WACGxJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa2tB,EAAA,EAAiB79B,wBAE5C,EAAK84C,qBAAqBE,aAAathC,EAASxO,GAAI0K,EAAMzG,GACrDgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa2tB,EAAA,EAAiB59B,sBAAuB0E,IACnEsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkBqtB,EAAA,EAAiB39B,mBAAoB4E,YAI1F,EAhDA,G,mCCLA,WACI,WACYiL,yBAmCf,OAhCG,YAAAgpC,YAAA,SAAY33B,EAAoB63B,EAAoB,G,IAAEtoC,YAAO,EAAqB,GAAE,WAC1E5I,EAAM,6BAA6BqZ,EAAU,WAC7Cxc,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe6T,KAAK7b,EAAK,CACjCnD,QAAO,EACP+L,QAAO,EACPgS,OAAQ,CACJC,QAAS,YAAa,yBACf,IAAyB,CAC5B,IAAiBC,6BAGzBle,KAAM,CAAEs0C,WAAU,MAI1B,YAAAD,aAAA,SAAa53B,EAAoB63B,EAAoB,G,IAAEtoC,YAAO,EAAqB,GAAE,WAC3E5I,EAAM,6BAA6BqZ,EAAU,YAAY63B,EACzDr0C,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe+T,OAAO/b,EAAK,CACnCnD,QAAO,EACP+L,QAAO,EACPgS,OAAQ,CACJC,QAAS,YAAa,yBACf,IAAyB,CAC5B,IAAiBC,gCAKrC,EArCA,G,UCKA,WACI,WACYq2B,wCA8Cf,OA3CG,YAAAC,qBAAA,SAAqB1kC,EAAyBtH,GAA9C,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IACMyH,EADQrG,EAAM6P,WACGxJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA0B9N,gCAErD,EAAK82C,8BAA8BC,qBAAqBzhC,EAASxO,GAAIuL,EAAiBtH,GACjFgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA0B7N,8BAA+BsC,IACpFsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAA0BlO,2BAA4BwC,YAKvG,YAAAs0C,sBAAA,SAAsB3kC,EAAyBtH,GAA/C,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IACMyH,EADQrG,EAAM6P,WACGxJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA0B3N,iCAErD,EAAK22C,8BAA8BE,sBAAsB1hC,EAASxO,GAAIuL,EAAiBtH,GAClFgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA0B1N,+BAAgCmC,IACrFsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAA0B/N,4BAA6BqC,YAI5G,EAhDA,G,ECLA,WACI,WACYiL,yBA6Bf,OA1BG,YAAAopC,qBAAA,SAAqB/3B,EAAoBi4B,EAA6B,G,IAAE1oC,YAAO,EAAqB,GAAE,WAC5F5I,EAAM,6BAA6BqZ,EAAU,qBAC7Cxc,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe6T,KAAK7b,EAAK,CACjCnD,QAAO,EACP+L,QAAO,EACPgS,OAAQ,CACJC,QAAS,YAAa,MAE1Bje,KAAM,CAAE00C,oBAAmB,MAInC,YAAAD,sBAAA,SAAsBh4B,EAAoBi4B,EAA6B,G,IAAE1oC,YAAO,EAAqB,GAAE,WAC7F5I,EAAM,6BAA6BqZ,EAAU,sBAAsBi4B,EACnEz0C,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe+T,OAAO/b,EAAK,CACnCnD,QAAO,EACP+L,QAAO,EACPgS,OAAQ,CACJC,QAAS,YAAa,SAItC,EA/BA,G,eCHe,SAAS02B,EAAuCxoC,GAC3D,IAAMyoC,EAAkBzoC,EAExB,MAAkC,YAApByoC,IACyB,YAA5BA,EAAgBtoC,UACkB,iBAAlCsoC,EAAgBtoC,QAAQzL,M,cCOvC,WACI,WACYg0C,EACA9Z,EACA+Z,GAFAD,8BACA9Z,8BACA+Z,oCAwFf,OArFG,YAAAC,eAAA,SACInjB,EACAppB,GAFJ,WAII,OAAO,YACH,IAEQwsC,EAFMtoC,EAAM6P,WACC1zB,OAAOkmC,wBACyBkmB,iBAAgB,kCAE/DF,EAAiB,SAACl0C,GACpB,gBAAA2L,KAAA,CAAK,EAAKqoC,uBAAuBK,cAAc,yCAAKtjB,GAAe,CAAE/wB,MAAK,IAAI2H,IACzE5d,KAAK,SAAAuqD,UAAA,EAAU,WAAM,gBAAApoD,OAAA,CAClB,EAAKguC,uBAAuBne,oBAA5B,GAAyDlQ,GACzD,SAAAN,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmBlP,gCAG/C,OAAO,SAAAtP,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmBnP,0BAClC44C,EACG,SAAAxoC,KAAA,CAAK,EAAKsoC,6BAAL,UAA4CpoC,IAC5C9hB,KAAK,SAAAuqD,UAAA,EAAU,Y,MAAU,SAAuChpC,GACzD,SAAApf,OAAA,CACI,SAAAqf,GAAA,CAAGD,GACH4oC,EAA6B,QAAf,EAAC5oC,EAAOG,mBAAO,WAAEzL,QAEnC,SAAAuL,GAAA,CAAGD,OAEf4oC,KAENnqD,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAmB9f,qBAAsB5V,SAK1F,YAAAmlD,cAAA,SACIuJ,EACA5sC,GAFJ,WAII,OAAO,SAAAzb,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmBhP,iCACnC,SAAA4f,MAAA,EAAM,kE,4EACe,SAAM30B,KAAKqtD,uBAAuBhJ,cAAcuJ,EAAiB5sC,I,OAElF,OAFQxI,EAAS,SAAyE,KAEnF,CAAP,EAAO,SAAAuL,aAAA,CAAa,IAAmB/O,+BAAgCwD,eAE7EpV,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAmB3f,4BAA6B/V,QAI7F,YAAA2uD,eAAA,SACI5E,EACAjoC,GAFJ,WAII,OAAO,YAAS,gBAAAzb,OAAA,CACZ,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmBzP,0BACnC,SAAA0Q,KAAA,CAAK,EAAKqoC,uBAAuBQ,eAAe5E,EAAajoC,IACxD5d,KACG,SAAAuqD,UAAA,EAAU,SAAC,G,IAAEn1C,EAAI,OAAO,gBAAAjT,OAAA,CACpB,EAAKguC,uBAAuBne,oBAA5B,GAAyDlQ,GACzD,SAAAN,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmBxP,wBAAyBiE,EAAK0hB,aAG/E92B,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAmBpgB,qBAAsBtV,SAItF,YAAA4uD,gBAAA,SACI9sC,GADJ,WAGI,OAAO,YAAS,gBAAAzb,OAAA,CACZ,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmBtP,2BACnC,SAAAuQ,KAAA,CAAK,EAAKqoC,uBAAuBS,gBAAgB9sC,IAC5C5d,KACG,SAAAuqD,UAAA,EAAU,SAAC,G,IAAEn1C,EAAI,OAAO,gBAAAjT,OAAA,CACpB,EAAKguC,uBAAuBne,oBAA5BtsB,EAAA,CAAyDoc,GACzD,SAAAN,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAmBrP,yBAA0B8D,EAAK0hB,aAGhF92B,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAmBjgB,sBAAuBzV,SAG3F,EA5FA,G,ECLA,WACI,WACY0kB,yBA0Bf,OAvBG,YAAA8pC,cAAA,SAActjB,EAAqD,G,IAAE5lB,YAAO,EAAqB,GAAE,WAG/F,OAAOxkB,KAAK4jB,eAAe6T,KAFf,2BAEyB,CAAEjT,QAAO,EAAEhM,KAAM4xB,KAG1D,YAAAia,cAAA,SAAcuJ,EAA6C,G,IAAEppC,YAAO,EAAqB,GAAE,WAGvF,OAAOxkB,KAAK4jB,eAAe6T,KAFf,mCAEmC,CAAEjT,QAAO,EAAEhM,KAAMo1C,KAGpE,YAAAC,eAAA,SAAe5E,EAAkC,G,IAAEzkC,YAAO,EAAqB,GAAE,WAG7E,OAAOxkB,KAAK4jB,eAAe6T,KAFf,oCAEyB,CAAEjT,QAAO,EAAEhM,KAAMywC,KAG1D,YAAA6E,gBAAA,SAAgB,G,IAAEtpC,YAAO,EAAqB,GAAE,WAG5C,OAAOxkB,KAAK4jB,eAAe+T,OAFf,oCAE2B,CAAEnT,QAAO,KAExD,EA5BA,G,UCEA,WACI,WACYupC,4BAyGf,OAtGG,YAAAC,OAAA,SAAO/E,EAAkCjoC,GAAzC,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtB,IAAMS,EAAWvD,GAAWA,EAAQuD,SAC9BN,EAAO,CAAEM,SAAQ,GAEvBT,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2B5U,uBAA4B8U,IAElF,EAAK8pC,kBAAkBrlD,IAAI6b,GACtBypC,OAAO/E,EAAajoC,GACpBgD,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2B3U,uBAA4B6U,IAClFH,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAA2BnV,aAAchQ,EAAO+kB,WAKjG,YAAAgqC,QAAA,SAAQjtC,GAAR,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtB,IAAMS,EAAWvD,GAAWA,EAAQuD,SAC9BN,EAAO,CAAEM,SAAQ,GAEvBT,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2BzU,wBAA6B2U,IAEnF,EAAK8pC,kBAAkBrlD,IAAI6b,GACtB0pC,QAAQjtC,GACRgD,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2BxU,wBAA6B0U,IACnFH,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAA2BhV,cAAenQ,EAAO+kB,WAKlG,YAAAwL,WAAA,SAAWzO,GAAX,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMgR,EAAQ5P,EAAM6P,WACdxQ,EAAWvD,GAAWA,EAAQuD,SAC9BN,EAAO,CAAEM,SAAQ,GAEvB,GAAIA,GAAYuQ,EAAM8Y,mBAAmBzO,cAAc5a,GACnD,OAAOT,EAAS3kB,WAGpB2kB,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2B5Y,2BAAgC8Y,IAEtF,EAAK8pC,kBAAkBrlD,IAAI6b,GACtBkL,WAAWzO,GACXgD,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2B3Y,2BAAgC6Y,IACtFH,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAA2BnZ,iBAAkBhM,EAAO+kB,YAKrG,YAAA0uB,aAAA,SAAa3xB,GAAb,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMgR,EAAQ5P,EAAM6P,WACdxQ,EAAWvD,GAAWA,EAAQuD,SAC9BN,EAAO,CAAEM,SAAQ,GAEvB,GAAIA,IAAauQ,EAAM8Y,mBAAmBzO,cAAc5a,GACpD,OAAOT,EAAS3kB,WAGpB2kB,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2BzY,6BAAkC2Y,IAExF,EAAK8pC,kBAAkBrlD,IAAI6b,GACtBouB,aAAa3xB,GACbgD,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2BxY,6BAAkC0Y,IACxFH,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAA2BhZ,mBAAoBnM,EAAO+kB,YAKvG,YAAAiqC,kBAAA,SAAkBtoC,EAA4B5E,GAC1C,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtB,IACMG,EAAO,CAAEM,SADEvD,GAAWA,EAAQuD,UAGpCT,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2BvY,gCAAqCyY,IAE3F2B,IAAS5B,MAAK,WACVF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAA2BtY,iCAAsCwY,IAC5FH,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAA2B3Y,wBAAyBxM,EAAO+kB,WAI5G,EA3GA,G,uECLA,WAGI,WACYkK,wBAERnuB,KAAKouB,QAAUyJ,OA4CtB,OAzCG,YAAAs2B,WAAA,SAAWvoC,EAAuBwoC,GAE1B,MAEAxoC,EAAM,OAFIuuB,EAAU,aAAEC,EAAQ,WAC9B,EACAxuB,EAAM,mBADgB,cAAkB,GAAE,UAApB,WAAS,OAAI,EAGjChK,EAAM,YACkB,OAAzByyC,EAAOxY,cAAyB,aAAe,cAChD,yCACGwY,EAAOxY,cAAa,KACtBzB,EAAW,WAAa,KACC,OAAzBia,EAAOxY,cAAyB,OAAS,IAC1C,0BAA0B1B,EAI9B,OAFAn0C,KAAKsuD,iBAAiB1oC,EAAQwoC,GAEvBpuD,KAAKmuB,cAAcG,WAAW1S,IAGjC,YAAA0yC,iBAAR,SAAyB1oC,EAAuBwoC,GAAhD,WACUG,EAAe,WACZ,EAAKngC,QAAQogC,SAIlB,EAAKpgC,QAAQogC,OAAOC,MAAMC,YAAY9oC,EAAO4U,mBAAmBkgB,UAChE,EAAKtsB,QAAQogC,OAAOC,MAAME,mBAG1B3uD,KAAKouB,QAAQogC,QAAUxuD,KAAKouB,QAAQogC,OAAOC,MAC3CF,IAEAvuD,KAAKouB,QAAQwgC,mBAAqBL,EAGlCvuD,KAAKouB,QAAQygC,mBAAqBT,EAClCA,IAEApuD,KAAKouB,QAAQ0gC,sBAAwBV,GAGjD,EAlDA,G,6BCEA,WACI,WACYvZ,EACAjxB,GADAixB,4BACAjxB,sBAgHf,OA7GG,YAAA6L,WAAA,SAAWC,EAAqB1O,GAG5B,OAFAhhB,KAAK60C,qBAAqBplB,WAAWC,GAE9B1vB,KAAK60C,qBAAqB7jB,kBAC5BhN,MAAK,YAAgB,SAAa+qC,kBAAkB,CACjDC,SAAU,CACNC,OAAQjuC,EAAQiuC,OAChB5lC,SAAU,CACN6lC,gBAAiBluC,EAAQkuC,kBAGjCC,eAAgB,CACZjK,aAAclkC,EAAQkkC,aACtBr9B,SAAUunC,OAAOpuC,EAAQ6G,iBAKzC,YAAA8qB,aAAA,WACI,OAAO3yC,KAAK60C,qBAAqBpvC,YAGrC,YAAA2zC,cAAA,SAAczxB,EAA4C0B,EAAoB2Y,GAA9E,WACI,OAAOhiC,KAAK60C,qBAAqB7jB,kBAC5BhN,MAAK,YAAyB,OAAAvgB,QAAQysB,IAAI,CACvCm/B,EAAsBC,SAAS3nC,GAC/B,EAAKktB,qBAAqBlkB,qBAE7B3M,MAAK,SAAC,G,IAACurC,EAAgB,KAAE3gC,EAAa,KAE/B,EAEA2gC,EAAgB,gBAFhB9lD,OAAA,IAAkB,IAAK+lD,uBAAuBnmC,GAAS,EACvD,EACAkmC,EAAgB,eADhB,WAAiB,IAAKC,uBAAuBxtB,GAAQ,EAGzD,OAAO,EAAKytB,UAAU,yCACfF,GAAgB,CACnB75B,gBAAe,EACflP,eAAc,IACfoI,UAIP,YAAA6gC,UAAR,SAAkBl2B,EAA2C3K,GAErD,MAIA2K,EAAW,SAHX/S,EAGA+S,EAAW,eAFX7D,EAEA6D,EAAW,gBADFm2B,EACTn2B,EAAW,QACPo2B,EAAcC,EAAQ,UACtB7+B,EAAenC,EAAa,WAEpC,OAAO5uB,KAAK4jB,eAAe6T,KAAK,gBAAiB,CAC7Chf,QAAS,CACLgM,OAAQ,YACR,eAAgB,qCAEpBjM,KAAM,CACFg/B,aAAcje,EAAYxoB,KAC1BopB,MAAOZ,EAAYY,MACnBwJ,SAAU,wBACVhf,OAAQ,wBACR8yB,YAAa1mB,EACb8+B,iBAAkB7vD,KAAK8vD,oBAAoBJ,GAC3C5X,gBAAiB93C,KAAK+vD,YAAYJ,EAAWnpC,GAC7CkxB,iBAAkB13C,KAAK+vD,YAAYJ,EAAWj6B,OAKlD,YAAA85B,uBAAR,SAA+B5yC,GAC3B,OAAKA,EAIE,CACHI,UAAWJ,EAAQI,UACnBC,SAAUL,EAAQK,SAClB+yC,YAAapzC,EAAQoB,MACrBiyC,cAAerzC,EAAQQ,SACvB8yC,gBAAiBtzC,EAAQU,SACzB6yC,SAAUvzC,EAAQW,KAClB8wC,OAAQzxC,EAAQe,oBAChBI,YAAanB,EAAQmB,YACrBF,WAAYjB,EAAQiB,YAZb,IAgBP,YAAAkyC,YAAR,SAAoBlpC,EAAejK,GAC/B,YAAO,IADwBA,UACxB,CACHiK,MAAK,EACLqxB,WAAYt7B,EAAQI,UACpBm7B,UAAWv7B,EAAQK,SACnBm7B,aAAcx7B,EAAQozC,YACtB3X,eAAgBz7B,EAAQqzC,cACxB1X,eAAgB37B,EAAQszC,gBACxB3yC,KAAMX,EAAQuzC,SACdr7B,MAAOlY,EAAQyxC,OACf5V,aAAc77B,EAAQmB,YACtB26B,YAAa97B,EAAQiB,aAIrB,YAAAiyC,oBAAR,SAA4BJ,GACxB,MAAO,CACH3+C,KAAM2+C,EAAgB1K,SACtBhzB,OAAQ09B,EAAgBnI,UAGpC,EAnHA,GCDe,SAAS6I,EACpBhT,EACAL,GAEA,IAAMsT,EAAwB,IAAI,IAAsBjT,GAClDkT,EAAsB,IAAI,IAAoBD,GAEpD,OAAO,IAAI,EAAsCC,EAAqBvT,G,gBCR1E,WACI,WACY5uB,EACAC,0BADAD,qBACAC,eAcf,OAXG,YAAAyrB,KAAA,SAAKzF,GAAL,WACI,OAAOp0C,KAAKmuB,cACPG,WAAW,MAAK8lB,EAAW,WAAa,IAAE,sFAC1CpwB,MAAK,WACF,IAAK,EAAKoK,QAAQmiC,EACd,MAAM,IAAI,KAGd,OAAO,EAAKniC,QAAQmiC,MAGpC,EAjBA,G,GCAA,WACI,WACYpiC,EACDC,0BADCD,qBACDC,eAcd,OAXG,YAAAyrB,KAAA,SAAKzF,GAAL,WACI,OAAOp0C,KAAKmuB,cACPG,WAAW,SAAQ8lB,EAAW,MAAQ,IAAE,gGACxCpwB,MAAK,WACF,IAAK,EAAKoK,QAAQoiC,KACd,MAAM,IAAI,KAGd,OAAO,EAAKpiC,QAAQoiC,SAGpC,EAjBA,G,mFCCA,WACI,WACY5sC,yBA4Cf,OAzCG,YAAA6sC,kBAAA,SAAkBC,EAAoBl6B,EAAkC,G,IAAEhS,YAAO,EAAqB,GAAE,WAC9F5I,EAAM,oBAAoB80C,EAAU,WAE1C,OAAO1wD,KAAK4jB,eAAelb,IAAIkT,EAAK,CAAE4a,OAAM,EAAEhS,QAAO,KAGzD,YAAAmsC,mBAAA,SAAmBD,EAAoBl6B,EAAkC,G,IAAEhS,YAAO,EAAqB,GAAE,WAC/F5I,EAAM,oBAAoB80C,EAAU,YAE1C,OAAO1wD,KAAK4jB,eAAelb,IAAIkT,EAAK,CAAE4a,OAAM,EAAEhS,QAAO,KAGzD,YAAAosC,kBAAA,SAAkBF,EAAoBl6B,EAAmC,G,IAAEhS,YAAO,EAAqB,GAAE,WAC/F5I,EAAM,oBAAoB80C,EAAU,WAE1C,OAAO1wD,KAAK4jB,eAAelb,IAAIkT,EAAK,CAAE4a,OAAM,EAAEhS,QAAO,KAGzD,YAAAqsC,aAAA,SAAaH,EAAoB,G,IAAElsC,YAAO,EAAqB,GAAE,WACvD5I,EAAM,oBAAoB80C,EAAU,YAE1C,OAAO1wD,KAAK4jB,eAAelb,IAAIkT,EAAK,CAAE4I,QAAO,KAGjD,YAAAypC,QAAA,SAAQyC,EAAoB,G,IAAElsC,YAAO,EAAqB,GAAE,WAClD5I,EAAM,oBAAoB80C,EAAU,WAE1C,OAAO1wD,KAAK4jB,eAAelb,IAAIkT,EAAK,CAAE4I,QAAO,KAGjD,YAAAssC,cAAA,SAAc,G,IAAEtsC,YAAO,EAAqB,GAAE,WAG1C,OAAOxkB,KAAK4jB,eAAelb,IAFf,yBAEwB,CAAE8b,QAAO,KAGjD1b,EAAA,UAAAioD,wBAAA,SAAwB,G,IAAEvsC,YAAO,EAAqB,GAAE,WAGpD,OAAOxkB,KAAK4jB,eAAe6T,KAFf,oFAEyB,CAAEjT,QAAO,KAEtD,EA9CA,G,YCMA,WACI,WACYwsC,uCAiFf,OA9EG,YAAAP,kBAAA,SAAkBlsC,EAAkBiS,EAAkCxV,GAAtE,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyB7M,wCAA6C,CAAEqN,SAAQ,KAE3G,EAAKysC,6BAA6BP,kBAAkBlsC,EAAUiS,EAAQxV,GACjEgD,MAAK,SAAC,G,IAAE,IAAAxL,KAAA,WAAO,KAAE,EACdsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyB5M,iCAAkCqB,EAAM,CAAE+L,SAAQ,KACtGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAyBjN,8BAA+BuB,EAAU,CAAE4L,SAAQ,YAK7H,YAAAosC,mBAAA,SAAmBpsC,EAAkBiS,EAAkCxV,GAAvE,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyB1M,yCAA8C,CAAEkN,SAAQ,KAE5G,EAAKysC,6BAA6BL,mBAAmBpsC,EAAUiS,EAAQxV,GAClEgD,MAAK,SAAC,G,IAAE,IAAAxL,KAAA,WAAO,KAAE,EACdsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyBzM,kCAAmCkB,EAAM,CAAE+L,SAAQ,KACvGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAyB9M,+BAAgCoB,EAAU,CAAE4L,SAAQ,YAK9H,YAAAqsC,kBAAA,SAAkBrsC,EAAkBiS,EAAmCxV,GAAvE,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyBvM,wCAA6C,CAAE+M,SAAQ,KAE3G,EAAKysC,6BAA6BJ,kBAAkBrsC,EAAUiS,EAAQxV,GACjEgD,MAAK,SAAC,G,IAAE,IAAAxL,KAAA,WAAO,KAAE,EACdsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyBtM,iCAAkCe,EAAM,CAAE+L,SAAQ,KACtGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAyB3M,8BAA+BiB,EAAU,CAAE4L,SAAQ,YAK7H,YAAAssC,aAAA,SAAatsC,EAAkBvD,GAA/B,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyBpM,mCAAwC,CAAE4M,SAAQ,KAEtG,EAAKysC,6BAA6BH,aAAatsC,EAAUvD,GACpDgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyBnM,4BAA6BY,EAAM,CAAE+L,SAAQ,KACjGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAyBxM,yBAA0Bc,EAAU,CAAE4L,SAAQ,YAKxH,YAAA0pC,QAAA,SAAQ1pC,EAAkBvD,GAA1B,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyBjM,sCAA2C,CAAEyM,SAAQ,KAEzG,EAAKysC,6BAA6B/C,QAAQ1pC,EAAUvD,GAC/CgD,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAyBhM,sCAA2C,CAAEwM,SAAQ,KACzGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAyBrM,4BAA6BW,EAAU,CAAE4L,SAAQ,YAK3H,YAAA2Q,eAAA,SAAwD3Q,EAAa2V,GACjE,OAAO,SAAAnW,aAAA,CAAa,KAAyB9L,qBAAsBiiB,EAAM,CAAE3V,SAAQ,KAE3F,EAnFA,G,YCPA,YACI,mBACI,YAAM,0EAAyE,K,OAE/E,EAAKlc,KAAO,2CACZ,EAAK0I,KAAO,0C,EAEnB,OAPqE,yBAOtE,EAPA,CAAsE,M,GCAtE,YACI,mBACI,YAAM,sFAAoF,K,OAE1F,EAAK1I,KAAO,4BACZ,EAAK0I,KAAO,yB,EAEnB,OAPsD,yBAOvD,EAPA,CAAuD,M,YCSvD,WACI,WACYkgD,EACArtC,GADAqtC,wBACArtC,sBAiFf,OA9EG,YAAA6L,WAAA,SAAWzO,GAAX,WACI,OAAO,YAAS,gBAAAzb,OAAA,CACZ,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAyB5Y,6BACzC,SAAAwpB,MAAA,EAAM,kE,oFAaF,OAZMu8B,EAA0BlwC,EAAUA,EAAQ6d,YAAc,0BAE3D7d,GAAYjF,SAAS+3B,eAAeod,MAC/BC,EAAwBp1C,SAASC,cAAc,QAC/BwlC,aAAa,KAAM0P,GACzCn1C,SAASvD,KAAKwgC,YAAYmY,IAGxBr8B,EAAQ5P,EAAM6P,WACd6D,EAAc9D,EAAMzzB,OAAOkmC,wBAC3B6pB,EAAmBx4B,EAAY60B,iBAAiB4D,uBAEtD,GAAMrxD,KAAKixD,iBAAiBpX,KAAKqX,EAAyBE,I,OAE1D,OAFA,SAEO,CAAP,EAAO,SAAArtC,aAAA,CAAa,KAAyB3Y,iCAEnDhI,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAAyB1pB,iBAAkBhM,SAIxF,YAAAoyD,6BAAA,sBACI,OAAO,YAAS,gBAAA38B,MAAA,EAAM,WAClB,IACMpJ,EADQrG,EAAM6P,WACGxJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,OAAO,SAAA3K,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAyBzD,0BACzC,SAAA0E,KAAA,CAAKlc,EAAA,SAAAA,CAAeoc,IACf9hB,KAAK,SAAAuqD,UAAA,EAAU,YACZ,OAAKR,EAAuCxoC,IAAYA,EAAOG,QAIxD,SAAAE,KAAA,CAAKlc,EAAK8a,eAAe2tC,SAAShmC,EAASxO,GAAI4H,EAAOG,QAAQzL,QAChEjW,KACG,SAAAuqD,UAAA,EAAU,SAAC,G,IAAEn1C,EAAI,OAAO,gBAAAjT,OAAA,CACpB,SAAAqf,GAAA,CAAGD,GACH,SAAAC,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAyBxD,wBAAyB/H,SAPnE,SAAAoM,GAAA,CAAGD,QAYxBvhB,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAAyBpU,qBAAsBthB,YAKhG,YAAAsyD,QAAA,sBACI,OAAO,YAAS,gBAAAjsD,OAAA,CACR,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAyBrU,mBACzC5G,EAAA,YAAAA,CAAkBoc,GAClBpc,EAAKmoD,iBAAiBO,UACjBpuD,KAAK,SAAAusC,KAAA,CAAK,IACVvsC,KAAK,SAAAuqD,UAAA,EAAU,SAAO,G,IAAEzuD,EAAK,QAAEma,EAAK,Q,sGACjC,GAAIna,aAAiB,GACjB,MAAMA,EAGV,GAAIA,IAAUma,EACV,MAAM,IAAI,GAGd,MAAO,CAAP,EAAO,SAAA0K,aAAA,CAAa,KAAyBpU,iBAAkB,CAAE0J,MAAK,gBAEhFjW,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAAyBnlB,cAAevQ,SAG7F,EApFA,GCNA,cACI,WACYkvB,kBAAkCyJ,QAAlCzJ,eAMf,OAHG,YAAAnuB,OAAA,SAAOwxD,GACH,OAAO,IAAIzxD,KAAKouB,QAAQsjC,iBAAiBD,IAEjD,EARA,G,qBCHA,YACI,mBACI,YAAM,qDAAmD,K,OAEzD,EAAKppD,KAAO,+BACZ,EAAK0I,KAAO,yB,EAEnB,OAPyD,yBAO1D,EAPA,CAA0D,M,GCa1D,WAMI,WACY4gD,EACAC,GAFZ,WACYD,mCACAC,+BAER5xD,KAAK6xD,UAAY,UAAApuC,QAAA,EAAQ,SAACquC,EAAkCC,EAAiB1f,GACzE,IAAM2f,EAAS,IAAI,EAAAlrD,QAEnB,IAAKurC,EACD,MAAM,IAAIvwC,MAmBd,OAhBA,EAAKmwD,UAAYH,EAAUjb,OAAOxE,EAAUt1B,GAAI,CAC5Cg1C,QAAO,EACP/H,KAAM,YACNyH,SAAU,WACNO,EAAO9xD,KAAK,CACRmZ,MAAOy4C,EAAUI,YAAY,EAAKD,aAEtCH,EAAUK,MAAM,EAAKF,YAEzB,iBAAkB,WACdD,EAAO9xD,KAAK,CACRhB,MAAO,IAAI,QAKhB8yD,IACR,CAAEnxC,QAAS,SAAC6c,EAAGC,GAAM,WAAMA,KAkErC,OA/DG,YAAAkc,KAAA,SAAKhb,EAAqBkzB,GAA1B,WACI,OAAO/xD,KAAK2xD,4BAA4B9X,OACnC71B,MAAK,SAAArb,GACF,EAAKypD,QAAU,EAAKP,UAAUC,EAAWC,EAASh2C,SAAS+3B,eAAejV,IAE1E,EAAKwzB,WAAaP,MAI9B,YAAAN,QAAA,sBACI,OAAO,SAAA78B,MAAA,EAAM,WACT,IAAMq9B,EAASlpD,EAAKspD,QACdN,EAAYhpD,EAAKupD,WAEvB,IAAKL,IAAWF,EACZ,MAAM,IAAI,KAAoB,KAAwBx+B,8BAG1D,OAAO,SAAAqB,MAAA,EAAM,WACT,IAAM29B,EAAUv2C,SAASw2C,cAAc,yBAEvC,OAAOD,EAAU,SAAA1tC,GAAA,CAAG0tC,GAAW,SAAAztC,WAAA,CAAW,IAAI,OAE7CzhB,KACG,SAAAovD,UAAA,EAAU,YAAU,SAAOpvD,KACvB,SAAAqvD,MAAA,CAtED,KAuEC,SAAA9E,UAAA,EAAU,SAACzuD,EAAO4F,GACd,SAvER4tD,GAuE8B,SAAA9tC,GAAA,CAAG1lB,GAAS,SAAA2lB,WAAA,CAAW3lB,UAGrD,SAAAyuD,UAAA,EAAU,YAIN,OAHA7kD,EAAK6pD,+BAA+BX,EAAQM,GAC5CR,EAAUN,QAAQ1oD,EAAKmpD,WAEhBD,KAEX,SAAAp9B,WAAA,EAAW,YAAS,gBAAAhQ,GAAA,CAAG,CAAE1lB,MAAK,YAKtC,YAAAyzD,+BAAR,SAAuCrjB,EAAiCgjB,GACpE,IAAMM,EAAkBN,EAAQO,cAEhC,IAAKD,EACD,MAAM,IAAI,GAGd,IAAMvgB,EAAYugB,EAAgBC,cAElC,IAAKxgB,EACD,MAAM,IAAI,GAGdryC,KAAK4xD,wBAAwB3xD,QAAO,WAEG,WAA/BoyC,EAAU8D,MAAM+J,YAChB5Q,EAAMpvC,KAAK,CACPhB,MAAO,IAAI,QAGpB4zD,QAAQzgB,EAAW,CAAElyB,YAAWA,EAAO4yC,gBAAiB,CAAC,YAEpE,EApGA,G,GCjBA,WAGI,WACY5kC,EACAC,0BADAD,qBACAC,eA4Bf,OAzBG,YAAAyrB,KAAA,WAKI,OAJK75C,KAAKgzD,eACNhzD,KAAKgzD,aAAehzD,KAAKizD,eAGtBjzD,KAAKgzD,cAGR,YAAAC,YAAR,sBAEUz8B,EAAS,CACX,uBACA,mBACF3X,KAAK,KAEP,OAAO,IAAIpb,SAAQ,SAACR,EAASC,GACzB4F,EAAKslB,QAAoB,cAAI,WAAM,SAAQtlB,EAAKslB,QAAQ8kC,aAExDpqD,EAAKqlB,cAAcG,WAAW,qCAAqCkI,GAC9DpS,OAAM,SAAApf,GACH8D,EAAKkqD,oBACL9vD,EAAOhE,UAI3B,EAjCA,GCKe,SAASi0D,GAAqB/V,GACzC,OAAO,IAAI,GACP,IAAI,GAA4BA,GAChC,IAAIgW,ICLZ,I,GAAA,WACI,WACYxvC,yBASf,OANG,YAAA2tC,SAAA,SAASt8B,EAAoB5b,EAAe,G,IAAEmL,YAAO,EAAqB,GAAE,WAClE5I,EAAM,6BAA6BqZ,EAAU,mBAC7Cxc,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe6T,KAAK7b,EAAK,CAAEpD,KAAM,CAAEa,MAAK,GAAIZ,QAAO,EAAE+L,QAAO,KAEhF,EAXA,G,sBCKA,WAII,WACYmtB,EACAkB,EACAwgB,EACArC,EACA7iC,GAJAwjB,cACAkB,mCACAwgB,oCACArC,oCACA7iC,qBAERnuB,KAAKouB,QAAUyJ,OAqGtB,OAlGG,YAAApI,WAAA,SAAWzO,GAAX,WACoBsyC,EAA4BtyC,EAAO,OAApBuD,EAAavD,EAAO,SAEnD,IAAKsyC,IAAkB/uC,EACnB,MAAM,IAAI,KAAqB,wEAGnC,OAAOvkB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,IAC1EP,MAAK,YAAS,WAAIvgB,SAAQ,SAACR,EAASC,GAGjC,GAFA,EAAKiyC,eAAiBrgB,EAAMwD,eAAeC,iBAAiBhU,IAEvD,EAAK4wB,eACN,MAAM,IAAI,IAAiB,IAAqBxkC,sBAG5C,MAAuB2iD,EAAa,QAApC,WAAU,eAAQ,EAa1B,EAAKnlC,cAAcggC,WAAW,EAAKhZ,gBAZnB,WACZ,EAAKzB,oBAAoB,yCAClB4f,GAAa,CAChBxc,QAAS,YACL5zC,EAAOhE,GACP43C,EAAQ53C,OAIhB+D,OAICmhB,MAAMlhB,SAEd8gB,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,WAGI,OAFA3yC,KAAKm1C,sBAEE1xC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAi5B,OAAA,WACI,MAAM,IAAI,KACN,6FAIR,YAAAC,QAAA,SAAQjtC,GACJ,IACM2G,EADQ3nB,KAAK2xC,OAAO5c,WACJpN,QAAQse,eAE9B,OAAKte,EAIE3nB,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6BpF,QAAQtmC,EAAQY,WAAYvH,IAJvDvd,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAQnC,YAAA2e,oBAAR,SAA4B1yB,GAA5B,WACI,IAAKhhB,KAAKm1C,iBAAmBn1C,KAAKouB,QAAQygC,kBACtC,MAAM,IAAI,KAAoB,KAAwBz7B,wBAG1D,IAAKpzB,KAAKm1C,eAAe9zC,OAAO8yC,WAC5B,MAAM,IAAI,IAAiB,IAAqBxjC,sBAG5C,MAAuB3Q,KAAKm1C,eAAc,mBAElD,OAAO,IAAIn1C,KAAKouB,QAAQygC,kBAAkB/T,OAAO95B,EAAQqxB,UAAWryC,KAAKm1C,eAAe9zC,OAAO8yC,WAAY,CACvG8V,MAAOjpC,EAAQipC,OAAS,OACxBD,KAAMhpC,EAAQgpC,MAAQ,QACtBj5C,KAAM,MACNwiD,sBAAqBA,EACrBzc,QAAS91B,EAAQ81B,QACjB/mB,cAAe,WACX,EAAKyjC,qBAAqBh5B,OAK9B,YAAAg5B,qBAAR,SAA6BxyC,GAA7B,WACIhhB,KAAKgxD,6BAA6BF,gBAC7B9sC,MAAK,SAAC,G,IAAExL,EAAI,OACT,IAAK,EAAK4V,QAAQogC,OACd,MAAM,IAAI,KAAoB,KAAwBn7B,wBAG1D,EAAKjF,QAAQogC,OAAOC,MAAMgF,UAAU,CAChCC,OAAMA,EACNC,MAAO,6EACP7+B,MAAO,GAAG9T,EAAQ4yC,YAAcp7C,EAAKa,OACtC2H,EAAQqsB,aAEX,EAAK2jB,6BAA6BD,8BAGlD,EAhHA,G,uBCDA,WAGI,WACYpf,EACAkB,EACAwgB,EACA7f,GAHA7B,cACAkB,mCACAwgB,oCACA7f,oCA0Gf,OAvGS,YAAA/jB,WAAN,SAAiBzO,G,4IAGb,GAFQuD,EAAwBvD,EAAO,SAArByyB,EAAczyB,EAAO,WAElCuD,IAAakvB,EACd,MAAM,IAAI,KAAqB,iGAGrB,SAAMzzC,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,K,OAG5F,OAHMuQ,EAAQ,SACRuD,EAAgBvD,EAAMwD,eAAeyS,wBAAwBxmB,GAEnE,GAAMvkB,KAAKwzC,6BAA6B/jB,WAAW4I,I,OAGnD,OAHA,SACAr4B,KAAK2zC,cAAgB3zC,KAAK0zC,oBAAoBD,EAAUpB,UAAW9tB,GAE5D,CAAP,EAAOvkB,KAAK2xC,OAAO5c,oBAGvB,YAAA4d,aAAA,WAMI,OALI3yC,KAAK2zC,eAAiB3zC,KAAK2zC,cAAcC,aACzC5zC,KAAK2zC,cAAcC,WAAWC,YAAY7zC,KAAK2zC,eAC/C3zC,KAAK2zC,sBAGFlwC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAi5B,OAAA,WACI,MAAM,IAAI,KACN,mFAIF,YAAAC,QAAN,SAAcjtC,G,wIAIV,OAHM8T,EAAQ90B,KAAK2xC,OAAO5c,YACpBpN,EAAUmN,EAAMnN,QAAQse,gBAM9B,GAAMjmC,KAAKwzC,6BAA6BqgB,WAH7B,CAAP,EAAOpwD,QAAQR,QAAQjD,KAAK2xC,OAAO5c,a,OAKvC,OAFA,SAEO,CAAP,EAAO/0B,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6BpF,QAAQtmC,EAAQY,WAAYvH,aAI9D,YAAA0yB,oBAAR,SAA4B7U,EAAqBta,GAC7C,IAAM8tB,EAAYt2B,SAAS+3B,eAAejV,GAE1C,IAAKwT,EACD,MAAM,IAAI,KAAqB,+DAGnC,IAAMvd,EAAQ90B,KAAK2xC,OAAO5c,WACpBsD,EAAgBvD,EAAMwD,eAAeC,iBAAiBhU,GACtDljB,EAASyzB,EAAMzzB,OAAOw3B,iBACtBnN,EAAOoJ,EAAMpJ,KAAKkK,UAExB,IAAKv0B,EACD,MAAM,IAAI,IAAiB,IAAqBgP,uBAGpD,IAAKgoB,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAIhD,MAUA0nB,EAAa,OATT8b,EAAU,aACVC,EAAQ,WAEZ,EAMA/b,EAAa,mBALTgc,EAAgB,mBAChBC,EAAc,iBACdC,EAAqB,wBACrBC,EAA8B,iCAItC,IAAKL,EACD,MAAM,IAAI,KAAqB,8DAGnC,IAAMH,EAAsB,CACxBG,WAAU,EACVO,UAAWN,EACXC,iBAAgB,EAChBC,eAAc,EACdK,YAAajpB,GAAyC,IAAjC,aAAuBA,GACxC,KAAsBwC,QACtB,KAAsBD,WAC1BwmB,sBAAuB,CACnB7uB,OAAQ2uB,EACR34B,IAAQva,EAAO04B,aAAama,SAAQ,oBAAoB3vB,EAAQ,mBAChEiwB,+BAA8B,GAElCI,UAAW,KAAqBjnB,UAKpC,OAFA3tB,KAAKwzC,6BAA6BS,aAAa,IAAIpV,EAAemV,GAE3D3B,GAEf,EAjHA,G,GCAA,WAII,WACYV,EACA4B,EACAV,EACAihB,EACAT,EACAU,EACAC,GANAriB,cACA4B,8BACAV,mCACAihB,sCACAT,oCACAU,8CACAC,iCATJ,KAAAC,iBAA2B,wBA+ItC,OAnIG,YAAAxkC,WAAA,SAAWzO,GAAX,WACmCkzC,EAAkClzC,EAAO,sBAApBuD,EAAavD,EAAO,SAExE,IAAKkzC,IAAwB3vC,EACzB,MAAM,IAAI,KAAqB,uFAGnC,OAAOvkB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,IAC1EP,MAAK,YACF,EAAKmxB,eAAiBrgB,EAAMwD,eAAeC,iBAAiBhU,GAE5D,IAAMgH,EAAWuJ,EAAMvJ,SAAS4J,cAC1ByD,EAAc9D,EAAMzzB,OAAOw3B,iBAEjC,IAAKtN,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,IAAK0oB,EACD,MAAM,IAAI,IAAiB,IAAqBvoB,uBAGpD,IAAK,EAAK8kC,iBAAmB,EAAKA,eAAezlB,YAC7C,MAAM,IAAI,IAAiB,IAAqB/e,sBAIhD,MAEAujD,EAAmB,UADnB,EACAA,EAAmB,QADnB,WAAU,eAAQ,EAGhBC,EAAc,CAChBlF,OAAQr2B,EAAYmB,aAAa6f,cACjCsV,iBAAgBA,EAChBrnC,SAAU0D,EAAS1D,SACnBq9B,aAActsB,EAAYtR,SAASG,MAGvC,OAAOhkB,QAAQysB,IAAI,CACf,EAAK8jC,0BAA0Bna,KAAK,EAAK1E,eAAe9zC,OAAO+yC,UAC/D,EAAK2f,uCAAuCtkC,WAAW,EAAK0lB,eAAezlB,YAAaykC,KAE3FnwC,MAAK,SAAC,G,IAACkL,EAAY,KAAEilC,EAAW,KACvBC,EAAe,EAAK1gB,oBAAoBrB,EAAW,EAAK4hB,kBAS9D,OAPA/kC,EAAamlC,KAAKF,GAClBjlC,EAAa2E,GAAG,mBAAmB,SAACygC,GAChC,SAAKC,2BAA2BD,GAC3BlwC,OAAM,YAAS,SAAQllB,SAEhCgwB,EAAa2E,GAAG,iBAAiB,SAACtO,EAAGrmB,GAAU,SAAQA,MAEhDk1D,KAEVpwC,MAAK,YAAkBowC,EAAaje,MAAM+J,WAAa,gBAE3Dl8B,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAAi5B,OAAA,WACI,MAAM,IAAI,KACN,4FAIR,YAAAC,QAAA,SAAQjtC,GACJ,OAAOhhB,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6BpF,QAAQ,wBAAyBjtC,KAI3E,YAAA2xB,aAAA,sBAGI,OAFA3yC,KAAKm1C,sBAEEn1C,KAAK+zD,uCAAuCphB,eAC9C3uB,MAAK,WAAM,OAAAlb,EAAK6oC,OAAO5c,eAGxB,YAAAw/B,2BAAR,SAAmCD,GAAnC,WACUx/B,EAAQ90B,KAAK2xC,OAAO5c,WAE1B,IAAK/0B,KAAKm1C,eACN,MAAM,IAAIrzC,MAAM,kCAGZ,IAAIyiB,EAAavkB,KAAKm1C,eAAc,GAE5C,OAAOn1C,KAAK2xC,OAAOc,SACfzyC,KAAK8zD,+BAA+B5F,mBAAkB,WAClD,OAAO,EAAK6F,uCAAuC3a,cAC/Ckb,EACAx/B,EAAMY,gBAAgB+C,qBACtB3D,EAAMtO,eAAe0R,qBAExBlU,MAAK,WAAM,SAAK2tB,OAAOc,SAAS,EAAKc,uBAAuBne,4BAClE,CAAE7Q,SAAQ,IAAK,CAAEiuB,QAAS,uBAGzB,YAAAkB,oBAAR,SAA4B7U,EAAqB21B,GAC7C,IAAMniB,EAAYt2B,SAASw2C,cAAc,IAAI1zB,GAE7C,IAAKwT,EACD,MAAM,IAAIvwC,MAAM,wCAGpB,OAAQuwC,EAAUkgB,cAAc,IAAMiC,IAClCx0D,KAAKy0D,0BAA0BpiB,EAAWmiB,IAG1C,YAAAC,0BAAR,SAAkCpiB,EAAoBmiB,GAClD,IAUME,EAAqB34C,SAASC,cAAc,OASlD,OARA04C,EAAmBve,MAAMmK,QAAU,OACnCoU,EAAmBve,MAAMwe,cAAgB,SACzCD,EAAmBve,MAAM+J,WAAa,SACtCwU,EAAmBE,UAAYJ,EAC/BE,EAAmBG,UAdI,ucAgBvBxiB,EAAU2G,YAAY0b,GAEfA,GAEf,EAjJA,G,GCEA,WAGI,WACY/iB,EACAkB,EACAwgB,EACAyB,EACAlxC,EACAkxB,GALAnD,cACAkB,mCACAwgB,oCACAyB,6BACAlxC,sBACAkxB,mBA8Hf,OA3HG,YAAArlB,WAAA,SAAWzO,GAAX,WACsB+zC,EAA8B/zC,EAAO,SAApBuD,EAAavD,EAAO,SAEvD,IAAK+zC,IAAoBxwC,EACrB,MAAM,IAAI,KAAqB,0EAGnC,OAAOvkB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,IAC1EP,MAAK,YACF,EAAKmxB,eAAiBrgB,EAAMwD,eAAeC,iBAAiBhU,GAE5D,IAAMmH,EAAOoJ,EAAMpJ,KAAKkK,UAClBgD,EAAc9D,EAAMzzB,OAAOw3B,iBAEjC,IAAKnN,EACD,MAAM,IAAI,IAAiB,IAAqBzb,aAGpD,IAAK2oB,EACD,MAAM,IAAI,IAAiB,IAAqBvoB,uBAGpD,IAAK,EAAK8kC,iBAAmB,EAAKA,eAAe3a,mBAAmBw6B,iBAChE,MAAM,IAAI,KAAoB,KAAwBnlC,uBAGlD,MAAcklC,EAAe,UAErC,OAAO,EAAKD,sBAAsBjb,KAAK,EAAK1E,eAAe9zC,OAAO+yC,UAC7DpwB,MAAK,YACF,IAAMixC,EAAWzE,EAAKyE,SAEtBA,EAASC,UAAU,CACfvb,SAAU/gB,EAAYmB,aAAa6f,gBAGnCqb,EAASE,cACTF,EAASG,cAAc,CACnBjjB,WAAY,CAACE,KAIrB4iB,EAASphC,GAAGohC,EAASI,UAAUC,gBAAgB,WAC3C,EAAK3jB,OAAOc,SAAS,EAAKI,4BAA4BvuB,kBAAkBC,IACnEP,MAAK,WACF,IACM4B,EADQ,EAAK+rB,OAAO5c,WACLuD,eAAeC,iBAAiBhU,GAC/CgxC,EAAY3vC,GAAUA,EAAO4U,oBAAsB5U,EAAO4U,mBAAmBw6B,iBAE/EO,GACAN,EAASO,cAAcD,SAKvCN,EAASphC,GAAGohC,EAASI,UAAUI,mBAAmB,SAAC3wC,GAC/C,IACMc,EADQ,EAAK+rB,OAAO5c,WACLuD,eAAeC,iBAAiBhU,GAC/CmxC,EAAY9vC,GAAUA,EAAO4U,oBAAsB5U,EAAO4U,mBAAmBm7B,kBAE/ED,GACA,EAAKE,yBAAyB9wC,EAAS4wC,GAClC1xC,MAAK,WACF,EAAK6xC,0BAMhC7xC,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAi5B,OAAA,WACI,MAAM,IAAI,KACN,uFAIR,YAAAC,QAAA,SAAQjtC,GACJ,IACM2G,EADQ3nB,KAAK2xC,OAAO5c,WACJpN,QAAQse,eAE9B,OAAKte,EAIE3nB,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6BpF,QAAQtmC,EAAQY,WAAYvH,IAJvDvd,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAQnC,YAAA6gC,yBAAR,SAAiC9wC,EAAiC4wC,GAC9D,IACM10C,EAAU,CACZvI,QAAS,CACLgM,OAAQ,YACR,eAAgB,oDAEpBjM,KAAM,CACFs9C,aAAchxC,EAAQgxC,aACtBH,kBAAmBD,GAEvB9vC,OAAQ,QAGZ,OAAO5lB,KAAK4jB,eAAemyC,YAbf,8DAagC/0C,IAGxC,YAAA60C,YAAR,WACI71D,KAAK80C,YAAYyC,SAAS,gBAAiB,CACvC9+B,QAAS,CACLgM,OAAQ,YACR,eAAgB,qCAEpB+R,OAAQ,CACJw/B,cAAaA,MAI7B,EAvIA,G,GCLA,WACI,WACYrkB,EACAskB,GADAtkB,cACAskB,8BAsBf,OAnBG,YAAAjI,OAAA,SAAO/E,EAAkCjoC,GACrC,OAAOhhB,KAAK2xC,OAAOc,SACfzyC,KAAKi2D,uBAAuBpI,eAAe5E,EAAajoC,KAIhE,YAAAitC,QAAA,SAAQjtC,GACJ,OAAOhhB,KAAK2xC,OAAOc,SACfzyC,KAAKi2D,uBAAuBnI,gBAAgB9sC,KAIpD,YAAAyO,WAAA,WACI,OAAOhsB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAE3C,EAzBA,G,SCOqB,GAArB,WAGI,WACY4c,EACA0hB,EACA1a,EACA7D,GAHAnD,cACA0hB,oCACA1a,kCACA7D,mBAsHf,OAnHG,YAAArlB,WAAA,SAAWzO,GAAX,WACYuD,EAAcvD,EAAO,SAEvBk1C,EAAmBl2D,KAAKm2D,qBAAqBn1C,GAEnD,IAAKuD,EACD,MAAM,IAAI,IAAiB,IAAqB5T,sBAGpD,OAAO3Q,KAAK24C,2BAA2BlpB,WAAWlL,GAC7CP,MAAK,WACF,EAAK2vB,cAAgB,EAAKD,oBAAoBwiB,EAAiB7jB,cAElEruB,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,sBAMI,OALI3yC,KAAK2zC,eAAiB3zC,KAAK2zC,cAAcC,aACzC5zC,KAAK2zC,cAAcC,WAAWC,YAAY7zC,KAAK2zC,eAC/C3zC,KAAK2zC,sBAGF3zC,KAAK24C,2BAA2BhG,eAClC3uB,MAAK,WAAM,OAAAlb,EAAK6oC,OAAO5c,eAGhC,YAAAi5B,OAAA,WACI,MAAM,IAAI,KACN,uFAIR,YAAAC,QAAA,SAAQjtC,GACJ,IACM2G,EADQ3nB,KAAK2xC,OAAO5c,WACJpN,QAAQse,eAE9B,OAAKte,EAIE3nB,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6BpF,QAAQtmC,EAAQY,WAAYvH,IAJvDvd,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAQnC,YAAA2e,oBAAR,SAA4B7U,GACxB,IAAMwT,EAAYt2B,SAASw2C,cAAc,IAAI1zB,GAE7C,IAAKwT,EACD,MAAM,IAAI,KAAqB,+DAGnC,IAAMyD,EAAS91C,KAAK24C,2BAA2B1E,aAAaj0C,KAAK+4C,0BAIjE,OAFA1G,EAAU2G,YAAYlD,GAEfA,GAGH,YAAAqgB,qBAAR,SAA6Bn1C,GACzB,GAAyB,qBAArBA,EAAQuD,UAAmCvD,EAAQo1C,iBACnD,OAAOp1C,EAAQo1C,iBAGnB,GAAyB,0BAArBp1C,EAAQuD,UAAwCvD,EAAQq1C,sBACxD,OAAOr1C,EAAQq1C,sBAGnB,GAAyB,uBAArBr1C,EAAQuD,UAAqCvD,EAAQs1C,mBACrD,OAAOt1C,EAAQs1C,mBAGnB,GAAyB,yBAArBt1C,EAAQuD,UAAuCvD,EAAQu1C,qBACvD,OAAOv1C,EAAQu1C,qBAGnB,GAAyB,2BAArBv1C,EAAQuD,UAAyCvD,EAAQw1C,uBACzD,OAAOx1C,EAAQw1C,uBAGnB,GAAyB,oBAArBx1C,EAAQuD,UAAkCvD,EAAQy1C,gBAClD,OAAOz1C,EAAQy1C,gBAGnB,MAAM,IAAI,MAIA,YAAA1d,yBAAd,SAAuCzJ,G,4IACnCA,EAAM2J,iBACAvtB,EAAO1rB,KAAK2xC,OAAO5c,WAAWrJ,KAAKob,iBACnCoS,EAAmB,aAAuBxtB,GAAQ,E,iBAGhC,O,sBAAA,GAAM1rB,KAAK24C,2BAA2BQ,iB,OAC1D,OADM5f,EAAc,SACpB,GAAMv5B,KAAK24C,2BAA2BS,cAAc7f,I,cAApD,SACI2f,GAAoB3f,EAAY7D,gBAChC,GAAM11B,KAAK24C,2BAA2BU,sBAAsB9f,EAAY7D,kBADxEwjB,M,OACA,S,iBAEJ,SAAMl5C,KAAKs5C,4B,cAAX,S,aAEA,I,aAA+B,aAAlB,EAAMtlC,QACf,MAAM,E,qCAKV,YAAAslC,yBAAR,WACIt5C,KAAK80C,YAAYyC,SAAS,gBAAiB,CACvC9+B,QAAS,CACLgM,OAAQ,YACR,eAAgB,wCAvB5B,sBADC,M,6CA4BL,EA7HA,G,aCLA,WAII,WACYktB,EACAkB,EACAwgB,EACA9Z,GAHA5H,cACAkB,mCACAwgB,oCACA9Z,+BAoIf,OAjIG,YAAA9pB,WAAA,SAAWzO,GAAX,WACwB01C,EAAgC11C,EAAO,WAApBuD,EAAavD,EAAO,SAE3D,IAAK01C,IAAsBnyC,EACvB,MAAM,IAAI,KAAqB,4EAGnC,OAAOvkB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,IAC1EP,MAAK,YAGF,GADA,EAAKmxB,eAAiBrgB,EAAMwD,eAAeC,iBAAiBhU,IACvD,EAAK4wB,iBAAmB,EAAKA,eAAe3a,mBAAmBvF,WAChE,MAAM,IAAI,IAAiB,IAAqBtkB,sBAGpD,IAAM+a,EAAOoJ,EAAMpJ,KAAKkK,UACxB,IAAKlK,EACD,MAAM,IAAI,IAAiB,IAAqBzb,aAGpD,IAAM2oB,EAAc9D,EAAMzzB,OAAOw3B,iBACjC,IAAKD,EACD,MAAM,IAAI,KAAqB,0CAG3B,MAAc89B,EAAiB,UAEjC5xC,EAAU,CACZmQ,WAAY,EAAKkgB,eAAe3a,mBAAmBvF,WACnDolB,iBAAkB,EAAKlF,eAAe3a,mBAAmB6f,iBACzD96B,OAAQmM,EAAK4uB,WAAWl5B,WACxBkG,SAAUoE,EAAKpE,SAASG,KACxB8yB,OAAQ7uB,EAAK3O,GACb45C,yBAAwBA,EACxBvuC,YAAa,aAAe,aAG1BoxB,EAA+B,CACjCC,iBAAkB,EAAKtE,eAAe3a,mBAAmBkf,uBACzDC,SAAU/gB,EAAYmB,aAAa6f,cACnCxF,SAAU,EAAKe,eAAe9zC,OAAO+yC,SACrCnf,WAAY,EAAKkgB,eAAe3a,mBAAmBvF,YAGvD,OAAO,EAAKskB,wBAAwBM,KAAKL,GACpCx1B,MAAK,YACF,EAAKg2B,cAAgB,EAAKtG,oBAAoBrB,GAE9C,EAAK2H,cAAc7J,iBAAiB,SAAS,WACzCymB,EAAWrrC,SAASzG,YAInCd,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,WAQI,OAPA3yC,KAAKm1C,sBAEDn1C,KAAKg6C,eAAiBh6C,KAAKg6C,cAAcpG,aACzC5zC,KAAKg6C,cAAcpG,WAAWC,YAAY7zC,KAAKg6C,eAC/Ch6C,KAAKg6C,sBAGFv2C,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAi5B,OAAA,WACI,MAAM,IAAI,KACN,uFAIR,YAAAC,QAAA,SAAQjtC,GACJ,IACM2G,EADQ3nB,KAAK2xC,OAAO5c,WACJpN,QAAQse,eAE9B,OAAKte,EAIE3nB,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6BpF,QAAQtmC,EAAQY,WAAYvH,IAJvDvd,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAQnC,YAAA2e,oBAAR,SAA4B7U,GACxB,IAAMwT,EAAYt2B,SAASw2C,cAAc,IAAI1zB,GAEvCjG,EADQ54B,KAAK2xC,OAAO5c,WACA1zB,OAAOw3B,iBAEjC,IAAK74B,KAAKm1C,iBAAmBn1C,KAAKm1C,eAAe3a,mBAAmBvF,WAChE,MAAM,IAAI,IAAiB,IAAqBtkB,sBAGpD,IAAK0hC,EACD,MAAM,IAAI,KAAqB,+DAGnC,IAAKzZ,EACD,MAAM,IAAI,KAAqB,0CAGnC,IAAMkd,EAAS/5B,SAASC,cAAc,SAItC,GAFA85B,EAAO/kC,KAAO,QAEV/Q,KAAKm1C,eAAe3a,mBAAmBkf,uBAAwB,CAC/D,IAAMQ,EAAYl6C,KAAKm1C,eAAe9zC,OAAO+yC,SAAW,WAAa,GAI/D5d,EAAS,CACX,UAJsBoC,EAAYmB,aAAY,cAK9C,0CACA,cALmB/5B,KAAKm1C,eAAe3a,mBAAkB,YAQ7Dsb,EAAOqE,IAAM,CACT,WAAWD,EAAS,8DACpB1jB,EAAO3X,KAAK,MACdA,KAAK,UAEPi3B,EAAOqE,IAAM,4EAIjB,OAFA9H,EAAU2G,YAAYlD,GAEfA,GAEf,EA5IA,G,GCFA,WAEI,WACYnE,EACA0hB,GADA1hB,cACA0hB,oCA6Bf,OA1BG,YAAArF,OAAA,WACI,MAAM,IAAI,KACN,uFAIR,YAAAC,QAAA,SAAQjtC,GACJ,IACM2G,EADQ3nB,KAAK2xC,OAAO5c,WACJpN,QAAQse,eAE9B,OAAKte,EAIE3nB,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6BpF,QAAQtmC,EAAQY,WAAYvH,IAJvDvd,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAQ3C,YAAAtF,WAAA,WACI,OAAOhsB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAE3C,EAjCA,G,YCGA,WACI,WACY8hC,gCAiBf,OAdG,YAAAC,cAAA,SAAc91C,GAAd,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAkB/J,yBAE7C,EAAK68C,sBAAsBC,cAAc91C,GACpCgD,MAAK,YACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAkB9J,uBAAwBtB,EAASH,KAAK0hB,OACnFpW,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAkBnK,oBAAqBvB,WAI5F,EAnBA,G,GCHA,WACI,WACYiL,EACAmzC,GADAnzC,sBACAmzC,eAWf,OARG,YAAAD,cAAA,SAAc,G,IAAEtyC,YAAO,EAAqB,GAAE,WAEpC/L,EAAU,CACZ,kBAAmBzY,KAAK+2D,QAAQ9H,QAGpC,OAAOjvD,KAAK4jB,eAAelb,IALf,kCAKwB,CAAE+P,QAAO,EAAE+L,QAAO,KAE9D,EAdA,G,WCUA,WACI,WACYZ,yBA4Cf,OAzCG,YAAAozC,UAAA,SAAUzvC,EAAiB,G,IAAA,aAAmD,GAAE,EAAnD/C,EAAO,UAAEgS,EAAM,SAClC5a,EAAM,0BAA0B2L,EAChC9O,EAAU,CAAEgM,OAAQ,IAAYrM,QAStC,OAAOpY,KAAK4jB,eAAelb,IAAIkT,EAAK,CAChC4a,OAAQ,CACJC,QAAS,YAAa,yBAVd,CACZ,WACA,sCACA,kCACA,qCACA,kCAOYD,GAAUA,EAAOC,SAAW,MAGxChe,QAAO,EACP+L,QAAO,KAIf,YAAAyyC,YAAA,SAAYz+C,EAAgC,G,IAAA,aAAkD,GAAE,EAAlDC,EAAO,UAAE+L,EAAO,UAG1D,OAAOxkB,KAAK4jB,eAAe6T,KAFf,iCAEyB,CACjCjf,KAAI,EACJC,QAAS,UAAA0b,OAAA,CAAO,CACZ,qBAAsB1b,GAAWA,EAAQy+C,gBACzC,yBAA0B,0DAC3B,GAAAC,OACH3yC,QAAO,KAIf,YAAA4yC,cAAA,SAAc7vC,EAAiB,G,IAAE/C,YAAO,EAAqB,GAAE,WACrD5I,EAAM,kCAAkC2L,EAE9C,OAAOvnB,KAAK4jB,eAAe6T,KAAK7b,EAAK,CAAE4I,QAAO,KAEtD,EA9CA,G,GCXA,YACI,mBACI,YAAM,2DAA0D,K,OAEhE,EAAKnc,KAAO,kCACZ,EAAK0I,KAAO,gC,EAEnB,OAP4D,yBAO7D,EAPA,CAA6D,M,YCU7D,WACI,WACYsmD,EACAC,GADAD,2BACAC,0BA0If,OAvIG,YAAAN,UAAA,SAAUzvC,EAAiBvG,GAA3B,WACI,OAAO,IAAI,EAAA1e,YAAW,SAACwhB,GACnBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAgBvS,qBAE3C,EAAK6lD,oBAAoBL,UAAUzvC,EAASvG,GACvCgD,MAAK,YACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAgBtS,mBAAoBkH,EAASH,OACxEsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAgB3S,gBAAiBiH,WAMlF,YAAA4+C,kBAAA,SAAkBhwC,EAAiBvG,GAAnC,WACI,OAAO,IAAI,EAAA1e,YAAW,SAACwhB,GACnBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAgBpS,6BAE3C,EAAK0lD,oBAAoBL,UAAUzvC,EAASvG,GACvCgD,MAAK,YACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAgBnS,2BAA4B+G,EAASH,OAChFsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAgBxS,wBAAyB8G,WAK1F,YAAA6+C,iBAAA,SAAiBx2C,GAAjB,WACI,OAAO,YAAS,gBAAA2T,MAAA,EAAM,WAClB,IAAMpN,EAAU,EAAKkwC,mBAAmBvyC,EAAM6P,YAE9C,IAAKxN,EACD,MAAM,IAAI,IAAiB,IAAqB/W,gBAGpD,OAAO,EAAKwmD,UAAUzvC,EAASvG,QAIvC,YAAAi2C,YAAA,SAAYnyC,EAA2B9D,GAAvC,WACI,OAAO,YAAS,gBAAAzb,OAAA,CACZ,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAgBjS,uBAChC,SAAA6iB,MAAA,EAAM,WACF,IAAMG,EAAQ5P,EAAM6P,WACd0S,EAAiB3S,EAAMzzB,OAAOmmC,oBAC9BG,EAA6B7S,EAAMzzB,OAAOqmC,gCAC1Cnc,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,GAAIqb,EAASmsC,uBACT,MAAM,IAAI,GAGd,OAAO,SAAA1yC,KAAA,CACH,EAAKsyC,mBAAmB/F,SAAShmC,EAAUvK,GACtCgD,MAAK,WAAM,SAAKqzC,oBAAoBJ,YACjC,EAAKU,uBACD7yC,EACAyG,EAASqsC,gBACTnwB,GACH,yCAEMzmB,GAAO,CACVvI,QAAS,CACLy+C,gBAAiBvvB,UAGnCvkC,KACE,SAAAuqD,UAAA,EAAU,YAAY,gBAAApoD,OAAA,CAElB,EAAKyxD,UAAUr+C,EAASH,KAAK0hB,KAAKhT,MAAMK,QAASvG,GACjD,SAAA4D,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAgBhS,qBAAsB4G,EAASH,KAAK0hB,KAAM,yCAAKvhB,EAASH,KAAKyL,MAAI,CAAE5K,MAAOV,EAASF,QAAQY,kBAGpIjW,KACC,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAAgB5iB,kBAAmB9S,UAKpF,YAAAk4D,cAAA,SAAc7vC,EAAiBvG,GAA/B,WACI,OAAO,SAAAzb,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAgB9R,yBAChC,SAAA+S,KAAA,CAAKhlB,KAAKq3D,oBAAoBD,cAAc7vC,EAASvG,IAChD5d,KACG,SAAAuqD,UAAA,EAAU,SAAAhlD,GAAY,gBAAApD,OAAA,CAClB,EAAKyxD,UAAUzvC,EAASvG,GACxB,SAAA4D,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAgB7R,uBAAwByG,EAASH,KAAK0hB,aAGpF92B,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAAgBziB,oBAAqBjT,QAI1E,YAAAu4D,mBAAR,SAA2B3iC,GACvB,IAAM5N,EAAQ4N,EAAM5N,MAAMkR,WACpB7M,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,OAAQjO,GAASA,EAAMK,SAAagE,GAAYA,EAAShE,SAGrD,YAAAowC,uBAAR,SACI7yC,EACA8yC,EACAnwB,GAEQ,MAAsB3iB,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aAEN,OAAK6C,EAQE,yCACAT,GAAK,CACR0wC,gBAAe,EACfnwB,eAAc,EACd9f,QAAS,CACL4R,YAAa5R,EAAQ4R,YACrBlxB,KAAMsf,EAAQpD,SACdgW,QAAS5S,EAAQ6Q,aAdd,yCACAtR,GAAK,CACR0wC,gBAAe,EACfnwB,eAAc,KAe9B,EA7IA,G,aCTA,YACI,mBACI,YAAM,mEAAiE,K,OAEvE,EAAKp/B,KAAO,oCACZ,EAAK0I,KAAO,kC,EAEnB,OAP8D,yBAO/D,EAPA,CAA+D,M,qBCY/D,WACI,WACYg9C,EACA8J,EACAvK,GAFAS,yBACA8J,2BACAvK,oCAgJf,OA7IG,YAAAkE,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACY,EAA4D8D,EAAO,QAAnE,WAAU,KAA6B,EAAEgoB,EAAmBhoB,EAAO,eACrEb,EAAO,CAAEM,SAAUoD,EAAQpD,UAEjC,OAAO,YACK,IACAmzC,EADaxyC,EAAM6P,WAAU,SACO6X,qBAAoB,uBAEhE,OAAO,SAAArnC,OAAA,CACHmyD,EAAyB,EAAKpK,6BAAL,+BAAiEpoC,GAAS,SAAAvlB,MAAA,GACnG,SAAAilB,GAAA,CAAG,SAAAb,aAAA,CAAa,KAA0BrU,wBAA6BuU,IACvE,SAAA0Q,MAAA,EAAM,WACF,IAEImjC,EAFEhjC,EAAQ5P,EAAM6P,WAIpB,GAAID,EAAMnN,QAAQye,sBAAsB0G,GAAiB,CACrD,IAAMlnB,EAASkP,EAAMwD,eAAeC,iBAAiB5Q,EAAQpD,SAAUoD,EAAQ6Q,WAE/E,IAAK5S,EACD,MAAM,IAAI,IAAiB,IAAqBjV,sBAGpDmnD,EAAW,EAAK/J,kBAAkBgK,YAAYnyC,QAE9CkyC,EAAW,EAAK/J,kBAAkBrlD,IAAI,KAAoB8E,0BAG9D,OAAOsqD,EACFtG,QAAQ1sC,EAAS,yCAAK9D,GAAO,CAAEuD,SAAUoD,EAAQpD,SAAUiU,UAAW7Q,EAAQ6Q,aAC9ExU,MAAK,WAAM,gBAAAD,aAAA,CAAa,KAA0BpU,wBAA6BsU,UAE1F7gB,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAA0BnlB,cAAevQ,EAAO+kB,SAKjG,YAAA+zC,SAAA,SAASh3C,GAAT,WACI,OAAO,YAAS,gBAAAzb,OAAA,CACZ,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAA0BlU,oBAC1C,EAAKooD,2BAA2B/yC,EAAOlE,GACvC,SAAA2T,MAAA,EAAM,WACF,IAAMG,EAAQ5P,EAAM6P,WACd,EAAsCD,EAAMnN,QAAQse,gBAAkB,GAApE,IAAA1d,WAAA,WAAa,KAAE,EAAE,IAAAiQ,UAAA,WAAY,KAAE,EACjC5S,EAASkP,EAAMwD,eAAeC,iBAAiBhQ,EAAYiQ,GAEjE,IAAK5S,EACD,MAAM,IAAI,GAGd,OAAO,EAAKmoC,kBAAkBgK,YAAYnyC,GACrCoyC,SAAS,yCAAKh3C,GAAO,CAAEuD,SAAUqB,EAAO7I,GAAIyb,UAAW5S,EAAO2U,WAC9DvW,MAAK,WAAM,gBAAAD,aAAA,CAAa,KAA0BjU,yBAA8B,CAAEyU,SAAUqB,EAAO7I,YAE9G3Z,KACE,SAAAwxB,WAAA,EAAW,YACP,IACMjN,EADQzC,EAAM6P,WACEpN,QAAQse,eAE9B,OAAO,YAAiB,KAA0Br2B,eAAgB1Q,EAAO,CAAEqlB,SAAUoD,GAAWA,EAAQY,mBAKpH,YAAAkH,WAAA,SAAWzO,GAAX,WACYuD,EAAwBvD,EAAO,SAArBwX,EAAcxX,EAAO,UAEvC,OAAO,YAAS,gBAAA2T,MAAA,EAAM,WAClB,IAAMG,EAAQ5P,EAAM6P,WACdnP,EAASkP,EAAMwD,eAAeC,iBAAiBhU,EAAUiU,GAE/D,IAAK5S,EACD,MAAM,IAAI,IAAiB,IAAqBjV,sBAGpD,OAAI4T,GAAYuQ,EAAMgZ,kBAAkB3O,cAAc5a,GAC3C,SAAA5kB,MAAA,GAGJ,SAAA4F,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAA0B5Y,2BAAgC,CAAEoZ,SAAQ,KACpF,EAAKwpC,kBAAkBgK,YAAYnyC,GAC9B6J,WAAW,yCAAKzO,GAAO,CAAEuD,SAAQ,EAAEiU,UAAS,KAC5CxU,MAAK,WAAM,gBAAAD,aAAA,CAAa,KAA0B3Y,2BAAgC,CAAEmZ,SAAQ,WAEtGnhB,KACC,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAA0B1pB,iBAAkBhM,EAAO,CAAEqlB,SAAQ,UAI1G,YAAAouB,aAAA,SAAa3xB,GAAb,WACYuD,EAAwBvD,EAAO,SAArBwX,EAAcxX,EAAO,UAEvC,OAAO,YAAS,gBAAA2T,MAAA,EAAM,WAClB,IAAMG,EAAQ5P,EAAM6P,WACdnP,EAASkP,EAAMwD,eAAeC,iBAAiBhU,EAAUiU,GAE/D,IAAK5S,EACD,MAAM,IAAI,IAAiB,IAAqBjV,sBAGpD,OAAI4T,IAAauQ,EAAMgZ,kBAAkB3O,cAAc5a,GAC5C,SAAA5kB,MAAA,GAGJ,SAAA4F,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAA0BzY,6BAAkC,CAAEiZ,SAAQ,KACtF,EAAKwpC,kBAAkBgK,YAAYnyC,GAC9B+sB,aAAa,yCAAK3xB,GAAO,CAAEuD,SAAQ,EAAEiU,UAAS,KAC9CxU,MAAK,WAAM,gBAAAD,aAAA,CAAa,KAA0BxY,6BAAkC,CAAEgZ,SAAQ,WAExGnhB,KACC,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAA0BvpB,mBAAoBnM,EAAO,CAAEqlB,SAAQ,UAI5G,YAAA2pC,kBAAA,SAAkBtoC,EAA4B5E,GAC1C,IACMiD,EAAO,CAAEM,SADEvD,GAAWA,EAAQuD,UAGpC,OAAO,SAAAhf,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAA0BvY,gCAAqCyY,IAC/E,SAAA0Q,MAAA,EAAM,WACF,WAAS3Q,MAAK,WAAM,gBAAAD,aAAA,CAAa,KAA0BtY,iCAAsCwY,UAEvG7gB,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAA0BlpB,wBAAyBxM,EAAO+kB,QAI/F,YAAAg0C,2BAAR,SAAmC/yC,EAA8BlE,GAC7D,IACMuK,EADQrG,EAAM6P,WACGxJ,SAAS4J,cAEhC,OAAI5J,GAAYA,EAAShE,QACdvnB,KAAK63D,oBAAoBN,kBAAkBhsC,EAAShE,QAASvG,GAGjE,SAAArhB,MAAA,IAEf,EApJA,G,GCZA,yBA+CC,OA9CG,YAAAkhB,QAAA,SAAQq3C,EAAaC,GACjB,OAAO,UAAAt3C,QAAA,CACH7gB,KAAKo4D,WAAWF,GAChBl4D,KAAKo4D,WAAWD,KAIhB,YAAAC,WAAR,SAAmB1sC,GACf,MAAO,CACH4uB,WAAY5uB,EAAK4uB,WACjBhzB,SAAUoE,EAAKpE,SACfvK,GAAI2O,EAAK3O,GACTyK,UAAW,CACPmD,aAAce,EAAKlE,UAAUmD,aACxBjkB,QACA2xD,MAAK,SAACC,EAAOC,GACV,UAAGD,EAAMl2C,UAAYk2C,EAAMl4C,WAAYo4C,cAAc,GAAGD,EAAMn2C,UAAYm2C,EAAMn4C,cAEnFjB,KAAI,YAAQ,OACTwC,kBAAmBvC,EAAKuC,kBACxBS,UAAWhD,EAAKgD,UAChBpC,SAAUZ,EAAKY,SACfI,UAAWhB,EAAKgB,cAExB6L,iBAAkBP,EAAKlE,UAAUyE,iBAC5BvlB,QACA2xD,MAAK,SAACC,EAAOC,GAAU,UAAGD,EAAMv7C,IAAKy7C,cAAc,GAAGD,EAAMx7C,OAC5DoC,KAAI,YAAQ,OACTI,OAAQH,EAAKG,OACbW,UAAWd,EAAKc,cAExBwK,cAAegB,EAAKlE,UAAUkD,cACzBhkB,QACA2xD,MAAK,SAACC,EAAOC,GACV,UAAGD,EAAMl2C,UAAYk2C,EAAMl4C,WAAYo4C,cAAc,GAAGD,EAAMn2C,UAAYm2C,EAAMn4C,cAEnFjB,KAAI,YAAQ,OACTwC,kBAAmBvC,EAAKuC,kBACxBS,UAAWhD,EAAKgD,UAChBpC,SAAUZ,EAAKY,SACfI,UAAWhB,EAAKgB,UAChBq4C,aAAcr5C,EAAKq5C,oBAK3C,EA/CA,G,GCHA,YASI,WACIC,EACAC,GAFJ,MAII,YAAM,2GAAyG,K,OAE/G,EAAKtwD,KAAO,mBACZ,EAAK0I,KAAO,eACZ,EAAKmpB,KAAO,CACRw+B,SAAQ,EACRC,QAAO,G,EAGlB,OAtB6C,yBAsB9C,EAtBA,CAA8C,M,GCY9C,WACI,WACYvkC,iCAmDf,OAhDG,YAAAm9B,SAAA,SAAShmC,EAAqBvK,GAA9B,WACI,IAAKuK,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,OAAOlQ,KAAKo0B,uBAAuBG,aAAahJ,EAASxO,GAAIiE,GACxDgD,MAAK,YACF,IAAM40C,EAAa,IAAI,GAEvB,KAAIrtC,EAASwhB,qBAAuBp0B,EAASH,KAAKu0B,oBAC3C,EAAK8rB,gBAAgBttC,EAAStD,QAAStP,EAASH,KAAKyP,UACrD,EAAK6wC,yBAAyBvtC,EAASU,iBAAkBtT,EAASH,KAAKyT,mBACvE2sC,EAAW/3C,QAAQ0K,EAASG,KAAM/S,EAASH,KAAKkT,OAKvD,MAAM,IAAI,GACN,EAAKqtC,uBAAuBxtC,GAC5B,EAAKwtC,uBAAuBpgD,EAASH,WAK7C,YAAAqgD,gBAAR,SAAwBG,EAAoBC,GACxC,OAAO,UAAAp4C,QAAA,CAAQ,UAAA1B,IAAA,CAAI65C,EAAU,QAAS,UAAA75C,IAAA,CAAI85C,EAAU,UAGhD,YAAAH,yBAAR,SAAiCI,EAAsCC,GACnE,OAAO,UAAAt4C,QAAA,CAAQ,UAAA1B,IAAA,CAAI+5C,EAAmB,QAAS,UAAA/5C,IAAA,CAAIg6C,EAAmB,UAGlE,YAAAJ,uBAAR,SACIxtC,GAEQ,MAAwDA,EAAQ,KAA1DtD,EAAkDsD,EAAQ,QAAjDU,EAAyCV,EAAQ,iBAA/BwhB,EAAuBxhB,EAAQ,mBAExE,MAAO,CACHG,KAAM,CACF4uB,WAAY5uB,EAAK4uB,WACjBhzB,SAAUoE,EAAKpE,SACfE,UAAWkE,EAAKlE,WAEpBS,QAAO,EACPgE,iBAAgB,EAChB8gB,mBAAkB,IAG9B,EArDA,G,aCXI,SAAYqsB,GAAZ,WACUC,EAAc,IAAI51D,SAAW,SAAC8hB,EAAGriB,GACnC,EAAKo2D,OAASp2D,KAGlBlD,KAAKo5D,QAAU31D,QAAQ81D,KAAK,CAACH,EAASC,K,GCP9C,YACI,WAAYrlD,GAAZ,MACI,YAAMA,GAAW,2FAAyF,K,OAE1G,EAAK3L,KAAO,4BACZ,EAAK0I,KAAO,wB,EAEnB,OAPsD,yBAOvD,EAPA,CAAuD,M,GCGvD,WACI,WACYyoD,4BAqCf,OAlCS,YAAAC,eAAN,SAAwBC,EAAiBN,G,4IAC/BC,EAAc,IAAI,GAAmBD,IAErCt1C,EAAW9jB,KAAKw5D,kBAAkBv5D,QAAO,YAC3C05D,EAAc72D,SAAQ,YAQY,IAPPkE,MAAMge,KAAK40C,EAASC,cACtCx4C,QAAO,YACJ,OAAAvY,EAAQujB,MAAK,SAAAvjB,GACT,WAASod,GAAU4zC,EAAKC,SAAS7zC,SAI1BzmB,QAInB45D,EAAYC,OAAO,IAAI,WAItBxG,QAAQ/2C,SAASvD,KAAM,CAAEwhD,WAAUA,EAAOC,SAAQA,I,iBAGxC,O,sBAAA,GAAMZ,EAAYD,S,OAIjC,OAJMzmC,EAAS+K,EAAA,OAEf5Z,EAASo2C,aAEF,CAAP,EAAO,G,OAIP,M,WAFAp2C,EAASo2C,aAEH,E,yBAGlB,EAvCA,G,uBCCA,YACI,mBACI,YAAM,oEAAkE,K,OAExE,EAAK7xD,KAAO,8CACZ,EAAK0I,KAAO,6C,EAEnB,OAPwE,yBAOzE,EAPA,CAAyE,M,GCAzE,YACI,mBACI,YAAM,2EAAyE,K,OAE/E,EAAK1I,KAAO,+BACZ,EAAK0I,KAAO,4B,EAEnB,OAPyD,yBAO1D,EAPA,CAA0D,M,GCE1D,WAEI,WACYkgD,2BAoDf,OAjDS,YAAAkJ,OAAN,SAAaj7D,G,2IACT,IAAKc,KAAKo6D,mCAAmCl7D,GACzC,MAAMA,EAGV,SAAMc,KAAKq6D,YAAYn7D,EAAMsZ,KAAK8hD,2BAA2BpgC,KAAKhxB,M,OAElE,OAFA,SAEO,CAAP,EAAOlJ,KAAKixD,iBAAiBO,UACxBpuD,KAAK,SAAAusC,KAAA,CAAK,IACVvsC,KAAK,SAAAuqD,UAAA,EAAU,SAAO,G,IAAEzuD,EAAK,QAAEma,EAAK,Q,sGACjC,GAAIna,aAAiB,GACjB,MAAM,IAAI,GAGd,GAAIA,IAAUma,EACV,MAAM,IAAI,GAGd,MAAO,CAAP,EAAO,CACHtI,KAAM,4BACNmpB,KAAM,CACFqgC,yBAA0BlhD,eAGlC9V,qBAGJ,YAAA82D,YAAR,SAAoBjJ,GAChB,IAEIoJ,EAA2Bz+C,SAAS+3B,eAFL,8BAWnC,OARI0mB,GAA4BA,EAAyB5mB,YACrD4mB,EAAyB5mB,WAAWC,YAAY2mB,IAGpDA,EAA2Bz+C,SAASC,cAAc,QACzBwlC,aAAa,KARH,8BASnCzlC,SAASvD,KAAKwgC,YAAYwhB,GAEnBx6D,KAAKixD,iBAAiBpX,KAXM,6BAW2BuX,IAG1D,YAAAgJ,mCAAR,SAA2Cl7D,GACjC,MAA0CA,EAAuBsZ,MAAQ,GAAvE8hD,EAA0B,6BAElC,MAAkB,+BAFwB,UAGnCA,GACoC,8BAApCA,EAA2BvpD,MAE1C,EAvDA,G,gCCNA,YACI,WAAYiD,GAAZ,MACI,YAAMA,GAAW,4EAA0E,K,OAE3F,EAAK3L,KAAO,yBACZ,EAAK0I,KAAO,sB,EAEnB,OAPmD,yBAOpD,EAPA,CAAoD,M,+BCkBpD,WAGI,WACY0pD,EACAC,EACAC,EACAC,EACAxQ,EACAyQ,EACAC,EACAC,EACAC,GARAP,aACAC,oBACAC,oBACAC,2BACAxQ,eACAyQ,oBACAC,sBACAC,2BACAC,uBAERh7D,KAAKu/C,QAAUxjC,SAASC,cAAc,UAEtChc,KAAKu/C,QAAQpF,IAAM,gGACnBn6C,KAAKu/C,QAAQpJ,MAAMkK,OAAS,OAC5BrgD,KAAKu/C,QAAQpJ,MAAM4U,OAAS,OAC5B/qD,KAAKu/C,QAAQpJ,MAAM8kB,SAAW,SAC9Bj7D,KAAKu/C,QAAQpJ,MAAMoK,MAAQ,OAyHlC,OAtHG,YAAA2a,QAAA,WACI,OAAOl7D,KAAKy6D,OAGV,YAAAvb,OAAN,W,+IAGI,KAFM7M,EAAYt2B,SAAS+3B,eAAe9zC,KAAK06D,eAG3C,MAAM,IAAI,KAA6B,qEAoC3C,OAjCAroB,EAAU2G,YAAYh5C,KAAKu/C,SAC3Bv/C,KAAK86D,eAAe5qB,SAEdkpB,EAAU,SAAA5pB,UAAA,CAAUxvC,KAAKu/C,QAAS,QACnCn8C,KACG,SAAAuqD,UAAA,EAAU,SAAO,G,IAAEznC,EAAM,S,mIAGrB,KAFM45B,EAAgB55B,GAAWA,EAA6B45B,eAG1D,MAAM,IAAIh+C,MAAM,wDAKpB,OAFA9B,KAAK66D,aAAahrB,UAAUiQ,GAE5B,GAAM9/C,KAAK66D,aAAapjC,KAAK,CACzB1mB,KAAM,KAAqB2P,gBAC3BoE,QAAS,CACLq2C,mBAAoBn7D,KAAK46D,oBACzBQ,eAAgBp7D,KAAKg7D,gBACrBK,SAAUr7D,KAAKs7D,eACfC,YAAav7D,KAAK26D,aAClB5a,OAAQ//C,KAAKoqD,QACb/tC,OAAQN,SAAS+b,SAASzb,OAC1BtL,KAAM/Q,KAAKy6D,QAEhB,CACChrB,YAAa,KAAqBz0B,gBAClC00B,UAAW,KAAqBz0B,gB,cAbpC,S,cAgBJ,SAAA00B,KAAA,CAAK,IACPpsC,YAEN,GAAMvD,KAAK+6D,oBAAoBtB,eAAe,CAACz5D,KAAKu/C,SAAU6Z,I,cAA9D,S,YAGJ,YAAAzZ,OAAA,WACS3/C,KAAKu/C,QAAQsT,gBAIlB7yD,KAAKu/C,QAAQsT,cAAchf,YAAY7zC,KAAKu/C,SAC5Cv/C,KAAK86D,eAAezqB,eAGlB,YAAAmrB,WAAN,SACIC,EACAvhC,G,wIAWI,O,sBARMk/B,EAAUp5D,KAAK66D,aAAapjC,KAAK,CACnC1mB,KAAM,KAAqB4P,gBAC3BmE,QAAS,CAAE22C,OAAM,EAAEvhC,KAAI,IACxB,CACCuV,YAAa,KAAqBj0B,gBAClCk0B,UAAW,KAAqBj0B,eAGpC,GAAMzb,KAAK+6D,oBAAoBtB,eAAe,CAACz5D,KAAKu/C,SAAU6Z,I,cAA9D,S,aAEA,G,WAAIp5D,KAAK07D,oBAAoB,GAAQ,CACjC,GAAiC,sBAA7B,EAAM52C,QAAQ5lB,MAAMuoB,KACpB,MAAM,IAAI,GAAuB,EAAM3C,QAAQ5lB,MAAM8U,SAGzD,GAAI,EAAM8Q,QAAQnM,SACd,MAAM,aAA4B,EAAMmM,QAAQnM,UAGpD,MAAM,IAAI7W,MAAM,EAAMgjB,QAAQ5lB,MAAM8U,SAGxC,MAAM,E,yBAIR,YAAA2nD,aAAN,W,wIAOwB,OANdvC,EAAUp5D,KAAK66D,aAAapjC,KAA+B,CAC7D1mB,KAAM,KAAqB6P,mBAC5B,CACC6uB,YAAa,KAAqB/zB,YAGlB,GAAM1b,KAAK+6D,oBAAoBtB,eAAe,CAACz5D,KAAKu/C,SAAU6Z,I,OAElF,KAFQt0C,EAAY,SAAsE,SAE7E82C,QACT,MAAM,IAAI,KAA4B92C,EAAQlgB,Q,kBAI9C,YAAA02D,aAAR,sBAEUO,EAAQ9/C,SAASq2B,iBAAiB,wDAExC,OAAOprC,MAAMsC,UAAU5C,MAAM/E,KAAKk6D,GAC7Bx6C,QAAO,YAAQ,MAJH,yBAIG,aAAS0J,EAAK9O,MAAME,YACnCkF,QAAO,YAAQ,iBAAA4Y,OAAA,CAAOnxB,EAAKshD,SACvBjrC,KAAI,YAAS,UAASg3B,EAAM2lB,cAC5Bz6C,QAAO,SAAC06C,GAA6B,MAAkB,iBAAXA,KAC5C1vC,MAAK,YAAU,SAAOqF,MAAM,OAAOrF,MAAK,YAAQ,OAA+C,IAA/C,EAAKpQ,KAAKrW,QAAQyC,EAAKuqB,QAAQ,IAAK,eAExFzT,KAAI,YAAQ,SAAKlD,SAGlB,YAAAy/C,oBAAR,SAA4BpsB,GACxB,OAAOA,EAAMv+B,OAAS,KAAqB0K,cAEnD,EA7IA,G,GCNA,WAII,WACYugD,EACAlB,EACAmB,EACAC,EACAC,GALZ,WACYH,eACAlB,sBACAmB,2BACAC,uBACAC,wCAsEJ,KAAAC,aAAgE,SAAO,G,IAAEt3C,EAAO,U,qIAEhF,O,sBAAA,GAAM9kB,KAAKuxD,Y,cAAX,S,aAIA,GAAmB,iC,YAATlpD,KACN,MAAM,E,+BAIiC,KAAvC,EAAmBrI,KAAKk8D,gBAAe,SAA7B,GAAAhZ,KAAI,GAEdp+B,G,YAjFF,MAAgF9kB,KAAKk8D,gBAAnF,IAAAG,OAAA,WAAS,KAAAnZ,KAAI,EAAE,IAAAoZ,iBAAA,WAAmB,KAAApZ,KAAI,EAAE,IAAAqZ,QAAA,WAAU,KAAArZ,KAAI,EAAE,IAAAsZ,WAAA,WAAa,KAAAtZ,KAAI,EAEjFljD,KAAK86D,eAAevqB,YAAY,KAAqBp1B,SAAS,SAAC,G,IAAE2J,EAAO,UAAO,SAAOA,MACtF9kB,KAAK86D,eAAevqB,YAAY,KAAqBl1B,iBAAiB,SAAC,G,IAAEyJ,EAAO,UAAO,SAAiBA,MACxG9kB,KAAK86D,eAAevqB,YAAY,KAAqBh1B,SAAS,SAAC,G,IAAEuJ,EAAO,UAAO,SAAQA,MACvF9kB,KAAK86D,eAAevqB,YAAY,KAAqB70B,WAAW,SAAC,G,IAAEoJ,EAAO,UAAO,SAAWA,MAC5F9kB,KAAK86D,eAAevqB,YAAY,KAAqBj1B,QAAStb,KAAKo8D,cAEnEp8D,KAAK86D,eAAevqB,YAAY,KAAqBl1B,iBAAiB,SAAC,G,IAAEyJ,EAAO,UAAO,SAAK23C,UAAY33C,EAAQkgC,YAChHhlD,KAAK86D,eAAevqB,YAAY,KAAqBr1B,YAAY,SAAC,G,IAAE4J,EAAO,UAAO,SAAK43C,KAAO53C,EAAQ63C,OA0E7G,OAvEG,YAAAC,OAAA,WACI,OAAO58D,KAAK08D,MAGhB,YAAAG,YAAA,WACI,OAAO78D,KAAKy8D,WAGV,YAAAvd,OAAN,W,wIAMI,OALAl/C,KAAK86D,eAAe5qB,SAEdjG,EAAQjqC,KAAK88D,iBACbC,EAAc,UAAAC,QAAA,CAAQh9D,KAAKg8D,QAAS/xB,GAE1C,GAAMA,EAAMiV,U,OACZ,OADA,SACA,GAAMz7C,QAAQysB,IAAI6sC,EAAY59C,KAAI,YAAc,SAAW+/B,c,cAA3D,S,YAGJ,YAAAS,OAAA,WACI3/C,KAAK86D,eAAezqB,aAEpBrwC,KAAKg8D,QAAQl5D,SAAQ,YACjBmnC,EAAM0V,aAIR,YAAAsd,OAAN,SAAan4C,G,wIAEE,O,sBAAA,GAAM9kB,KAAK88D,iBAAiBtB,WAC/Bx7D,KAAKg8D,QAAQ78C,KAAI,YAAS,SAAM+7C,aAChCl7D,KAAKi8D,oBAAoB/nC,UAAUpP,K,OAFvC,MAAO,CAAP,EAAO,U,OAKkB,O,WAAA,GAAM9kB,KAAKm8D,iCAAiChC,OAAOn1D,I,OAErE,OAFD00B,EAAmB,SAElB,GAAM15B,KAAK88D,iBAAiBtB,WAC/Bx7D,KAAKg8D,QAAQ78C,KAAI,YAAS,SAAM+7C,aAChCl7D,KAAKi8D,oBAAoB/nC,UAAUpP,EAAS4U,K,OAFhD,MAAO,CAAP,EAAO,U,yBAOT,YAAA63B,SAAN,W,gIACW,SAAMvxD,KAAK88D,iBAAiBnB,gB,OAAnC,MAAO,CAAP,EAAO,kBAGH,YAAAmB,eAAR,WACI,IAAM7yB,EAAQjqC,KAAKg8D,QAAQ,GAE3B,IAAK/xB,EACD,MAAM,IAAI,KAA6B,oEAG3C,OAAOA,GAkBf,EA9FA,G,YCLA,WACI,WACY0H,iBAiCf,OA9BG7oC,EAAA,UAAAorB,UAAA,SAAUpP,EAAkC4U,GACxC,IAAM5E,EAAQ90B,KAAK2xC,OAAO5c,WACpBxJ,EAAWuJ,EAAMvJ,SAAS4J,cAC1B9zB,EAASyzB,EAAMzzB,OAAO4lC,YACtBlO,EAAiBjE,EAAMkE,YAAYC,qBACnC/R,EAAQ4N,EAAM5N,MAAMkR,WACpBjR,EAAY2N,EAAM5N,MAAMkS,eACxBzR,EAAU,UAAA4Y,KAAA,CAAKzb,EAAQyU,YAAa,WAAY,SAAU,WAAY,SACtElB,EAAgBvD,EAAMwD,eAAeC,iBAAiBzT,EAAQP,SAAUO,EAAQ0T,WAChF4B,EAAoBtF,EAAMwD,eAAea,wBACzCG,EAAYP,GAAkBpR,GAAW,aAAoBA,GAC5DmN,EAAMnN,QAAQ6R,kBAAiB,KAAKT,EAAeU,iBACtD3E,EAAMnN,QAAQ6R,kBAElB,IAAKF,EACD,MAAM,IAAI,IAAiB,IAAqB1oB,qBAGpD,MAAO,CACH8oB,iBAAgB,EAChBJ,UAAS,EACT/N,SAAQ,EACRlqB,OAAM,EACN6lB,MAAK,EACLC,UAAS,EACTQ,QAAO,EACP0Q,cAAa,EACb+B,kBAAiB,IAG7B,EAnCA,G,GCOA,WACI,WACYuX,iBAkDf,OA/CG,YAAA1xC,OAAA,SAAO68C,EAAc97B,GAArB,WAEUy6C,EADav6D,OAAOge,KAAK8B,EAAQy6C,QACbz1D,QAAsB,SAACzB,EAAQwM,GACrD,IACMmsD,EADSl8C,EAAQy6C,OACK1qD,GAE5B,OAAKmsD,EAIE,yBACA34D,EAAM,CACT,IAAI,GACAwM,EACAmsD,EAAar+B,YACbq+B,EAAa3B,aAAe,GAC5B2B,EAAa/B,oBAAsB,GACnCn6C,EAAQ++B,QAAU,GAClB,IAAI,KAAkBjD,GACtB,IAAI,KAAoBA,GACxB,IAAI,GAAmB,IAAIsW,IAC3B,iBAAkB8J,EACd,EAAKC,mBAAmBD,EAAankD,wBAftCxU,IAmBZ,IAEH,OAAO,IAAI,GACPk3D,EACA,IAAI,KAAoB3e,GACxB,IAAI,GAA+B98C,KAAK2xC,QACxC,UAAA7X,KAAA,CAAK9Y,EAAS,SAAU,UAAW,UAAW,mBAAoB,cAClE,IAAI,GAAgCmyC,GAAqB,SAAAiK,mBAAA,OAIzD,YAAAD,mBAAR,SAA2BpkD,GACA,IACjBF,KADyC7Y,KAAK2xC,OAAO5c,WAAU,+BAChChc,GAErC,IAAKF,EACD,MAAM,IAAI,IAAiB,IAAqBnI,0BAGpD,OAAOmI,GAEf,EApDA,G,YCJA,WACI,WACYwkD,oCAwBf,OArBG,YAAAC,iBAAA,SAAiBxwB,EAAyB9rB,GAA1C,WACI,OAAO,YAAS,gBAAAzb,OAAA,CACZ,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAsBnJ,4BACtC,SAAA+Z,MAAA,EAAM,kE,gFAIF,GAHMG,EAAQ5P,EAAM6P,aACdxJ,EAAWuJ,EAAMvJ,SAAS4J,eAG5B,MAAM,IAAI,IAAiB,IAAqBjlB,iBAGnC,SAAO48B,EACpB9sC,KAAKq9D,0BAA0BC,iBAAiB/xC,EAASxO,GAAIiE,GAC7DhhB,KAAKq9D,0BAA0BE,kBAAkBhyC,EAASxO,GAAIiE,I,OAElE,OAJQxI,EAASklB,EAAA,OAE0D,KAEpE,CAAP,EAAO,SAAA3Z,aAAA,CAAa,KAAsBlJ,0BAA2BrC,eAE3EpV,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAAsB9Z,uBAAwB5b,SAG/F,EA1BA,G,GCPA,WACI,WACY0kB,yBA4Bf,OAzBG,YAAA05C,iBAAA,SAAiBroC,EAAoB,G,IAAEzQ,YAAO,EAAqB,GAAE,WAC3D5I,EAAM,6BAA6BqZ,EAAU,gBAC7Cxc,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe6T,KAAK7b,EAAK,CACjCnD,QAAO,EACP+L,QAAO,EACPgS,OAAQ,CACJC,QAAS,YAAa,SAKlC,YAAA8mC,kBAAA,SAAkBtoC,EAAoB,G,IAAEzQ,YAAO,EAAqB,GAAE,WAC5D5I,EAAM,6BAA6BqZ,EAAU,gBAC7Cxc,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe+T,OAAO/b,EAAK,CACnCnD,QAAO,EACP+L,QAAO,EACPgS,OAAQ,CACJC,QAAS,YAAa,SAItC,EA9BA,G,gCCsBA,WACI,WACY+mC,EACA3F,EACA4F,EACAtB,GAJZ,WACYqB,6BACA3F,2BACA4F,kCACAtB,wCA8BZ,KAAA7gC,yBAAqD,SAAC,G,IAClD/W,EAAQ,WACRiU,EAAS,YACTzf,EAAY,eACZmN,EAAM,SACNkzC,EAAO,UACPsE,EAAoB,uBACpBC,EAA4B,+BAE5B,OAAO,YACH,IAAIpkC,EAEAxgB,EACAwgB,EAAc,CAAEpgB,iBAAkB,CAAEC,aAAcL,IAC3C2kD,IACPnkC,EAAc,CACVpgB,iBAAkB,CACdykD,yBAA0BF,EAC1BG,iCAAkCF,GAAgC,QAK9E,IAAM74C,EAAU,EAAK24C,2BAA2BvpC,UAAU,CAAEsE,UAAS,EAAEjU,SAAQ,EAAEgV,YAAW,GAAIrU,EAAM6P,YAEtG,OAAO,SAAAxvB,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAkBxF,oCAClC9a,QAAQ81D,KAAK,CAAC,EAAKiE,sBAAsBliC,yBAAyBxW,EAASoB,GAASkzC,GAAS/3C,OAAOvI,UAC/FkL,MAAK,WAAM,gBAAAD,aAAA,CAAa,KAAkBvF,uCACjDpb,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAAkBnW,+BAAgCvf,SAItG,OA7DG,YAAAk8B,cAAA,SAAczT,GAAd,WACI,OAAO,YAAS,gBAAApiB,OAAA,CACZ,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAkB3F,yBAClC,SAAAuW,MAAA,EAAM,kE,8EAES,O,sBAAA,GAAM30B,KAAKw9D,sBAAsBpiC,cACpCp7B,KAAKy9D,2BAA2BvpC,UAAUvM,EAASzC,EAAM6P,c,OAD7D,MAAO,CAAP,EAAO,U,OAIkB,O,WAAA,GAAM/0B,KAAKm8D,iCAAiChC,OAAOn1D,I,OAErE,OAFD00B,EAAmB,SAElB,GAAM15B,KAAKw9D,sBAAsBpiC,cACpCp7B,KAAKy9D,2BAA2BvpC,UAAU,yCAAKvM,GAAO,CAAE+R,iBAAgB,IAAIxU,EAAM6P,c,OADtF,MAAO,CAAP,EAAO,U,2BAKV3xB,KACG,SAAAuqD,UAAA,EAAU,SAAC,G,IAAEn1C,EAAI,OAAO,gBAAAjT,OAAA,CACpB,EAAKsyD,oBAAL,mBAA4C3yC,GAC5C,SAAAN,GAAA,CAAG,SAAAb,aAAA,CAAa,KAAkB1F,uBAAwB7F,UAGxEpV,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,KAAkBtW,oBAAqBpf,SAsCxF,EArEA,G,6BCfM4+D,GAEF,CACAC,YAAa,KAAoBzxD,YACjC0xD,KAAM,KAAoBvxD,iBAC1BwxD,MAAO,KAAoBvxD,kBAC3BwxD,MAAO,KAAoB1xD,mB,GAE/B,YACI,WACYmlC,EACR3wB,GAFJ,MAII,YAAMA,IAAQ,K,OAHN2wB,W,EA4Ff,OA9FoD,yBAQjD,YAAAomB,YAAA,SAAY1/B,GACR,IAAKA,EACD,OAAOr4B,KAAK0I,MAGhB,IAAM2Q,EAAQrZ,KAAKm+D,UAAU9lC,GAEvBosB,EAAa,CAACpsB,EAAckC,QAASlC,EAActb,IACpDsE,QAAO,YAAS,kBAChBxC,KAAK,KAEV,OAAO7e,KAAK0I,IAAI2Q,EAAOorC,IAGnB,YAAA0Z,UAAR,SAAkB9lC,G,MAMd,IAHgC,QAFZ,EAChBr4B,KAAK2xC,OAAO5c,WACP1zB,OAAOw3B,4BAAgB,WACtB40B,iBAAiB2Q,SAAS,yCAEd/lC,EAActnB,OAAS,KAAoB7C,MAC7D,OAAO,KAAoBA,MAG/B,GAA8B,WAA1BmqB,EAAckC,QACd,OAAO,KAAoBntB,SAG/B,GAAIirB,EAActb,KAAO,KAAoBhP,uBACzC,OAAO,KAAoBD,gBAG/B,GAAKuqB,EAAckC,UAAY,KAAoBtsB,oCAC/C,OAAO,KAAoBA,oCAG/B,GAAIoqB,EAAckC,UAAY,KAAoBjuB,YAC9C,OAAO+rB,EAActb,MAAM+gD,GACrBA,GAAsBzlC,EAActb,IACpC,KAAoBxQ,gBAG9B,IAAMgY,EAAW8T,EAAckC,SAAWlC,EAActb,GAExD,OAAI/c,KAAKq+D,qBAAqB95C,GACnBA,EAGP8T,EAActnB,OAAS,KAChB,KAAoBtD,QAG3BzN,KAAKs+D,gBAAgBjmC,GACd,KAAoB/qB,OAG3B+qB,EAActnB,OAAS,KAChB,KAAoBrD,QAGxB,KAAoBf,aAGvB,YAAA0xD,qBAAR,SACI95C,GAEA,OAAOvkB,KAAK2kD,YAAYpgC,IAGpB,YAAA+5C,gBAAR,SAAwBjmC,GACpB,IAAMh3B,EAASrB,KAAK2xC,OAAO5c,WAAW1zB,OAAOw3B,iBAE7C,IAAKx3B,EACD,MAAM,IAAI,IAAiB,IAAqBgP,uBAG5C,MAA+BhP,EAAOk9D,gBAAe,2BAE7D,SAAKC,GAAwD,UAA1BnmC,EAAckC,SAAiD,gBAA1BlC,EAAckC,SAI9E,UAAAlO,KAAA,CAAKmyC,GAA4B,YACrC,SAAczhD,KAAOA,GAAMsb,EAAckC,UAAYxd,OAGjE,EA9FA,CAAqD,KClBtC,SAAS0hD,KACpB,MAAO,CACHC,YAAaC,OAAOC,YAAc,GAClCC,aAA+C,mBAA1BC,UAAUC,aAA6BD,UAAUC,cACtEplB,SAAUmlB,UAAUnlB,UAAamlB,UAAkBE,aACnDC,cAAeN,OAAO5T,OACtBmU,aAAcP,OAAOpe,MACrB4e,kBAAkB,IAAIl+C,MAAOm+C,oBAAoBh+C,Y,ICT7Ci+C,GA4BAC,GAIAC,GAiBAC,GAIAC,G,YC9CZ,YACI,WAAYC,GAAZ,WACQ1rD,EAAU,yE,OAEV0rD,IACA1rD,EAAaA,EAAO,2DAA2D0rD,EAAc7gD,KAAK,MAAK,MAG3G,cAAM7K,IAAQ,MAET3L,KAAO,8B,EAEnB,OAZwD,yBAYzD,EAZA,CAAyD,M,GCAzD,YACI,WAAY2L,GAAZ,MACI,YAAMA,GAAW,mCAAiC,K,OAElD,EAAK3L,KAAO,8BACZ,EAAK0I,KAAO,oB,EAEnB,OAPwD,yBAOzD,EAPA,CAAyD,MFqyBlD,SAAS4uD,GAAYv6C,GACxB,OAAOA,GAAmE,iBAAnDA,EAAM8U,KAAK7B,cAAcunC,uBACa,iBAAlDx6C,EAAM8U,KAAK7B,cAAcwnC,sBA9yBxC,SAAYR,GAKR,EAAAS,oBAAA,sBAKA,EAAAC,kBAAA,oBAKA,EAAAC,SAAA,WAKA,EAAAC,OAAA,SAKA,EAAAC,QAAA,UAzBJ,CAAYb,QAAe,KA4B3B,SAAYC,GACR,EAAAa,cAAA,gBADJ,CAAYb,QAAkB,KAI9B,SAAYC,GACR,EAAAa,IAAA,MACA,EAAAC,OAAA,SACA,EAAAC,WAAA,OACA,EAAAC,WAAA,SACA,EAAAC,OAAA,SACA,EAAAC,aAAA,gBACA,EAAAC,cAAA,iBACA,EAAAC,MAAA,QACA,EAAAC,QAAA,UACA,EAAAC,UAAA,gBACA,EAAAC,KAAA,kBACA,EAAAC,OAAA,iBACA,EAAAC,MAAA,QACA,EAAAC,YAAA,cAdJ,CAAY1B,QAAsB,KAiBlC,SAAYC,GACR,EAAA0B,KAAA,OADJ,CAAY1B,QAAU,KAItB,SAAYC,GACR,EAAA0B,iBAAA,mBACA,EAAAr/D,MAAA,QACA,EAAAs/D,gBAAA,kBAHJ,CAAY3B,QAAU,KGjCtB,ICpBY4B,G,GDoBZ,WAOI,WACY1vB,EACA2vB,EACAzJ,EACA1pC,GAHAwjB,cACA2vB,6BACAzJ,2BACA1pC,qBAyVf,OAtVS,YAAAsB,WAAN,SAAiBzO,G,kJAGb,KAFQugD,EAAYvgD,EAAO,SAGvB,MAAM,IAAI,KAAqB,oFAmBf,OAhBpBhhB,KAAKwhE,0BAA4BD,EAE3BlpC,EAAgBr4B,KAAK2xC,OAAO5c,WAAWuD,eAAeyS,wBAAwB/pB,EAAQuD,UACtFk9C,EAA2B,CAC7Bv4D,IAAK,GACL9I,MAAO,IAGPi4B,EAAcmC,mBAAmBknC,WACjCD,EAAyBv4D,IAAM,YAC/Bu4D,EAAyBrhE,MAAQi4B,EAAcmC,mBAAmBknC,YAElED,EAAyBv4D,IAAM,YAC/Bu4D,EAAyBrhE,MAAQi4B,EAAcmC,mBAAmBmnC,WAGtE,EAAA3hE,KAAoB,GAAMA,KAAKmuB,cAAc0rB,MAAI,GAC7C+nB,YAAcvpC,EAAcmC,mBAAmBonC,YAC/C3S,OAAQ6P,UAAUnlB,UAClB,EAAC8nB,EAAyBv4D,KAAMu4D,EAAyBrhE,MACzD,EAAAyhE,uBAAwBxpC,EAAcmC,mBAAmBqnC,uB,YAGpC,OAPzB,EAAKC,aAAe,SAOpB,EAAA9hE,KAAyB,GAAMA,KAAK+hE,uBAAuB1pC,I,cAA3D,EAAK2pC,kBAAoB,SAErB3pC,EAAczS,SAAW25C,GAAuBgB,YAChDloC,EAAczS,SAAW25C,GAAuBe,WADhDjoC,OAEA,EAAAr4B,KAAkC,GAAMA,KAAKiiE,oC,OAA7C,EAAKC,2BAA6B,S,iBAGtC,MAAO,CAAP,EAAOz+D,QAAQR,QAAQjD,KAAK2xC,OAAO5c,qBAGvC,YAAAy8B,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACY2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAyU,EAAc5R,GAAWA,EAAQ4R,YACjCmkC,EAAuBnkC,GAAgBA,EAAiCmkC,qBACxEC,EAA+BpkC,GAAgBA,EAAiCokC,6BAEtF,IAAKh2C,EACD,MAAM,IAAI,GAA4B,CAAC,YAG3C,OAAO3nB,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,IACnEgD,MAAK,WACF,IAAMm+C,EAAiB,EAAKC,gBAE5B,IAAKD,EACD,MAAM,IAAI,KAAoB,KAAwBtyC,uBAG1D,GAAI0J,GAAe,aAAoBA,GAAc,CACjD,IAAIgQ,EAAc,GAClB,GAAIo2B,GAAYwC,GAAiB,CACvB,MAA4FA,EAAejoC,KAAK7B,cAA9GgqC,EAAmB,sBAAEzC,EAAqB,wBAElDr2B,EAAc,CACV+4B,gCAAiCD,EACjCE,aAJoE,uBAKpEC,YALyF,sBAMzFC,mBAAoB7C,GAI5B,GAAID,GAAYwC,KH2sBiC,IAF3C,CAAC,QAAS,kBAAmB,iBAAkB,WAEhDv8D,QG3sB6Cu8D,EH2sB/BjoC,KAAK7B,cAActnB,MG1sBlC,OAAO,EAAK4gC,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAc,yCAC9DzT,GAAO,CACV4R,YAAa,CACTpgB,iBAAkB,CACdC,aAAc,yCACPmwB,GAAW,CACdlwB,MAAOkgB,EAAYxgB,eAEvB2pD,aAAcjE,KACdZ,iCAAkCF,GAAgC,WAOtF,OAAO,EAAKhsB,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAc,CACjE7W,SAAUoD,EAAQpD,SAClBgV,YAAa,CACTpgB,iBAAkB,CACdwpD,kBAAmB,CACftpD,MAAOs+B,KAAKC,UAAU,yCACfuqB,EAAejoC,KAAK7B,eAAa,CACpChc,OAAQwb,OAAOC,SAASzb,WAGhCqmD,aAAcjE,KACdb,yBAA0BF,GAAwB,KAClDG,iCAAkCF,GAAgC,aAKjFv5C,OAAM,YAAS,SAAKw+C,yBAAyB1jE,EAAOw+D,EAAsBC,OAGnF,YAAA3F,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAyvC,aAAA,WAWI,OAVI3yC,KAAKgiE,oBACLhiE,KAAKgiE,kBAAkBa,UACvB7iE,KAAKgiE,0BAGLhiE,KAAKkiE,6BACLliE,KAAKkiE,2BAA2BW,UAChC7iE,KAAKkiE,mCAGFz+D,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG/B,YAAA+tC,gBAAR,WACI,IAAK9iE,KAAK8hE,aACN,MAAM,IAAI,KAAoB,KAAwBjyC,uBAG1D,OAAO7vB,KAAK8hE,cAGR,YAAAiB,6BAAR,WACI,IAAK/iE,KAAKwhE,0BACN,MAAM,IAAI,KAAqB,sEAGnC,OAAOxhE,KAAKwhE,2BAGR,YAAAwB,gCAAR,WAGI,OAFuBhjE,KAAK+iE,+BAA+BE,gBAAe,YAG/D,MAMP,YAAAC,cAAR,SAAsBxpC,GAAtB,WACI,OAAO,IAAIj2B,SAAQ,SAACR,EAASC,GACnB,MAAmD,EAAK6/D,+BAAtDI,EAAmB,sBAAEC,EAAuB,0BAC5CC,EAAkDD,EAAuB,aAA3DvkC,EAAoCukC,EAAuB,YAA9CtkB,EAAuBskB,EAAuB,OAAtCvkB,EAAeukB,EAAuB,WAC3EE,EAA2B3rB,KAAKmG,MAAMpkB,EAAiB/U,QAEvD4+C,EAA4B,EAAKT,kBAAkBU,iBAAiBF,EAAa,CACnFG,oBAAqB,SAACC,GAClB,IAAMC,EAAiB,CACnBp/C,SAAU++C,EAAYM,kBACtBrqC,YAAa,CACTY,MAAOwd,KAAKC,UAAU8rB,EAAsBxpC,QAIhD2kB,GACAA,IAGJ57C,EAAQ0gE,IAEZ3Z,KAAM,EAAKgZ,kCACXlsB,QAAS,SAAC53C,GAAsB,OAAAyJ,EAAOzJ,MAGvCmkE,GACAA,EAAaC,EAAYvyD,OAASsuD,GAAgBU,mBAC9CuD,EAAYvyD,OAASsuD,GAAgBY,QAG7CsD,EAA0BM,MAAM,KAAIhlC,GAAeskC,IAE/CrkB,GACAA,GAAO,WACH57C,EAAO,IAAI,IACXqgE,EAA0BV,iBAMlC,YAAAiB,yBAAR,SAAiCt9C,GAC7B,OAAKA,EAeE,CACHu9C,WAHAv9C,EAAc,UAGU,IAHxBA,EAAc,SAIdA,eAAgB,CACZw9C,OALJx9C,EAAc,SAMVy9C,kBANJz9C,EAAc,SAOV3I,WAPJ2I,EAAc,WAQVjJ,KARJiJ,EAAc,KASV/I,gBATJ+I,EAAc,oBAUV1I,QAVJ0I,EAAc,cAZP,IA2BP,YAAAy7C,gCAAR,eAGQiC,EAHR,OACU3C,EAAUvhE,KAAK+iE,+BACfoB,EAAcnkE,KAAK8iE,kBAGzB,OAAO,IAAIr/D,SAAQ,SAACR,EAASC,GACzB,GAAIq+D,EAAQ6C,4BAA6B,CACrCF,EAA4BC,EAAYlkE,OAAOq/D,GAAmBa,cAAe,yCAC1EoB,EAAQvgD,SAAO,CAClBqjD,SAAU,YAAkB,SAAKC,sBAAsBnC,IACvDrrB,QAAS,YAAkB,SAAKwtB,sBAAsBnC,OAG1D,IACI+B,EAA0BL,MAAM,IAAItC,EAAQ6C,6BAC9C,MAAOllE,GACLgE,EAAO,IAAI,KAAoB,KAAwB2sB,yBAI/D5sB,EAAQihE,OAIR,YAAAnC,uBAAR,SAA+B1pC,GAA/B,IACQksC,EADR,OAEUhD,EAAUvhE,KAAK+iE,+BACfoB,EAAcnkE,KAAK8iE,kBAEzB,OAAO,IAAIr/D,SAAQ,SAACR,EAASC,GACzB,OAAQm1B,EAAczS,QAClB,KAAK25C,GAAuBgB,WAC5B,KAAKhB,GAAuBa,IAC5B,KAAKb,GAAuBe,WACxB,IAAM95C,EAAiB,EAAKmrB,OAAO5c,WAAWvO,eAAe0R,oBAE7DqsC,EAAmBJ,EAAYlkE,OAAOo4B,EAAczS,OAAQ,yCACrD27C,EAAQvgD,SAAO,CAClBqjD,SAAU,YAAkB,SAAKC,sBAAsBnC,IACvDjoC,KAAM,EAAK4pC,yBAAyBt9C,MAGxC,IACI+9C,EAAiBV,MAAM,IAAItC,EAAQ1iC,aACrC,MAAO3/B,GACLgE,EAAO,IAAI,KAAoB,KAAwB2sB,wBAG3D,MAEJ,KAAK0vC,GAAuBoB,MAC5B,KAAKpB,GAAuBuB,KACxB,GAAKS,EAAQiD,sBAaT,EAAKF,sBAAsB,CACvBpqC,KAAM,CACF7B,cAAe,CACXtnB,KAAMsnB,EAAczS,eAhBA,CAChC2+C,EAAmBJ,EAAYlkE,OAAOo4B,EAAczS,OAAQ,yCACrD27C,EAAQvgD,SAAO,CAClBqjD,SAAU,YAAkB,SAAKC,sBAAsBnC,OAG3D,IACIoC,EAAiBV,MAAM,IAAItC,EAAQ1iC,aACrC,MAAO3/B,GACLgE,EAAO,IAAI,KAAoB,KAAwB2sB,yBAY/D,MAEJ,KAAK0vC,GAAuBc,OAC5B,KAAKd,GAAuBqB,QAC5B,KAAKrB,GAAuBwB,OAC5B,KAAKxB,GAAuBiB,OAC5B,KAAKjB,GAAuBkB,aAC5B,KAAKlB,GAAuBmB,cAC5B,KAAKnB,GAAuByB,MAC5B,KAAKzB,GAAuB0B,YACxB,EAAKqD,sBAAsB,CACvBpqC,KAAM,CACF7B,cAAe,CACXtnB,KAAMsnB,EAAczS,WAMxC3iB,EAAQshE,OAIF,YAAA3B,yBAAd,SAAuC1jE,EAAgBw+D,EAAgCC,G,wIACnF,OAAMz+D,aAAiB,MAAkB,UAAAmtB,KAAA,CAAKntB,EAAMsZ,KAAK5T,OAAQ,CAAC6iB,KAAM,+BAIxD,GAAMznB,KAAKkjE,cAAchkE,EAAMsZ,KAAKisD,gBAHzC,CAAP,EAAOhhE,QAAQP,OAAOhE,I,OAGpByoB,EAAU,S,iBAGL,O,sBAAA,GAAM3nB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCACpEzT,GAAO,CACV4R,YAAa,yCACN5R,EAAQ4R,aAAW,CACtBmkC,qBAAoB,EACpBC,6BAA4B,S,OALpC,MAAO,CAAP,EAAO,U,OASP,O,WAAO,CAAP,EAAO39D,KAAK4iE,yBAAyB,EAAOlF,EAAsBC,I,yBAIlE,YAAA2G,sBAAR,SAA8BnC,GAC1BniE,KAAKoiE,gBAAkBD,GAE/B,EApWA,G,GEdA,WACI,WACYh0C,EACAu2C,EACAt2C,0BAFAD,qBACAu2C,yBACAt2C,eAef,OAZS,YAAAyrB,KAAN,SAAW8qB,G,gIACP,SAAMlhE,QAAQysB,IAAI,CACdlwB,KAAK0kE,kBAAkBE,eAAe,2BAA2BD,EAAc/C,YAAW,mDAC1F5hE,KAAKmuB,cAAcG,WAAW,2BAA2Bq2C,EAAc/C,YAAW,qD,OAGtF,GALA,UAKK5hE,KAAKouB,QAAQy2C,cACd,MAAM,IAAI,KAGd,MAAO,CAAP,EAAO,IAAI7kE,KAAKouB,QAAQy2C,cAAcF,YAE9C,EAnBA,G,UDNA,SAAYtD,GACR,EAAAyD,uBAAA,oCACA,EAAAC,wBAAA,qCAFJ,CAAY1D,QAAa,K,iBEgBzB,WAGI,WACY1vB,EACAkmB,EACAyJ,EACAzuB,EACAmyB,GAJArzB,cACAkmB,2BACAyJ,6BACAzuB,mCACAmyB,2BAoRf,OAjRG,YAAAv1C,WAAA,SAAWzO,GAAX,WACI,OAAOhhB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBtD,EAAQuD,WAClFP,MAAK,YACF,IAAMqU,EAAgBvD,EAAMwD,eAAeC,iBAAiBvX,EAAQuD,UAEpE,IAAK8T,IAAkBA,EAAc3I,YACjC,MAAM,IAAI,IAAiB,IAAqB/e,sBAGlC,MAAuC0nB,EAAa,gBAA3B4sC,EAAc5sC,EAAa,YAEtE,OAAO,EAAK2sC,oBAAoBnrB,KAAKorB,EAAW7wB,MAEnDpwB,MAAK,YAGF,OAFA,EAAKkhD,QAAUC,EAER,EAAKxzB,OAAO5c,eAI/B,YAAAy8B,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACUuD,EAAWO,EAAQ6C,SAAW7C,EAAQ6C,QAAQpD,SAC5CuoB,EAAmBhoB,EAAO,eAC1BogD,EAAYllE,KAAI,QAExB,IAAKklE,EACD,MAAM,IAAI,KAAoB,KAAwBr1C,uBAG1D,IAAKtL,EACD,MAAM,IAAI,GAA4B,CAAC,qBAG3C,IAAM6gD,EAAiB,yCAChBpkD,GAAO,CACVwV,OAAQ,CACJC,QAAS,CACL4qC,GAAc0D,wBACd1D,GAAcyD,2BAK1B,OAAO9kE,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY,CAAEnqB,eAAc,GAAIs4B,IAChFphD,MAA4B,WAGzB,OAFAkhD,EAAQ35C,SAAS,EAAK85C,2BAEf,IAAI5hE,SAAQ,SAACR,EAASC,GACzBgiE,EAAQ35C,SAAS+5C,KAAK,CAClBC,OAAQ,SAACC,GACiB,aAAtBA,EAAWC,OAAwBviE,EAAO,IAAI,IAAiCA,EAAO,IAAI,OAE9FwiE,UAAW,YAAmBziE,EAAQ0iE,MAE1CT,EAAQU,GAAG1mE,MAAM20B,GAAG,SAAS,WACzB3wB,EAAO,IAAI,aAItB8gB,MAAK,YACF,IAAM2/C,EAAiB,CACnBp/C,SAAQ,EACRgV,YAAa,CAAEY,MAAO51B,EAAOshE,iBAGjC,OAAO,EAAKl0B,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAcuoC,QAIjF,YAAAhxB,aAAA,WAKI,OAJI3yC,KAAKklE,UACLllE,KAAKklE,gBAGFzhE,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAijC,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAAmiE,wBAAR,WACI,IAAMvwC,EAAQ90B,KAAK2xC,OAAO5c,WACpB1zB,EAASyzB,EAAMzzB,OAAOw3B,iBACtBhc,EAAeiY,EAAMjY,aAAasZ,kBAClCjP,EAAQ4N,EAAM5N,MAAMkR,WAE1B,IAAK/2B,EACD,MAAM,IAAI,IAAiB,IAAqBgP,uBAGpD,IAAK6W,EACD,MAAM,IAAI,IAAiB,IAAqBhX,iBAGpD,IAAMmP,EAAoB,IAAI,KAAkB6H,EAAMI,SAAStI,eACzDwH,EAAiBxmB,KAAK8lE,qBAE5B,MAAO,CACHC,SAAU,CACNC,sBAAuB3kE,EAAOw6D,MAAMoK,aACpCC,gBAAiB7kE,EAAOw6D,MAAMoK,aAC9BE,6BAA8B,QAElC98C,SAAUrpB,KAAKomE,uBAAyB5/C,EACxCwb,QAASxb,EACTa,MAAOrnB,KAAKqmE,UAAUhnD,EAAmB6H,GACzCo/C,SAAU,CACNC,cAAevmE,KAAKwmE,iBAAiB3pD,GACrC9T,KAAM,QACN09D,cAAe,cACfC,iBAAkB,GAClBC,gBAAiB,IAErBC,UAAW5mE,KAAK6mE,cAAcxnD,EAAmB6H,GACjDq1B,SAAUr1B,EAAMK,QAAUL,EAAMK,QAAQnG,WAAa,GACrD0lD,gBAAiBznD,EAAkBM,UAAUuH,EAAMoC,mBACnDy9C,WAAY1nD,EAAkBM,UAAUuH,EAAM0C,UAC9Co9C,MAAO3nD,EAAkBM,UAAUuH,EAAM8C,eAIzC,YAAAw8C,iBAAR,SAAyB3pD,GACrB,IAAKA,EACD,MAAO,GAGX,IAAM0Y,EAAc1Y,EAAa,GAEjC,OAAO0Y,GAAeA,EAAY8E,uBAC9B9E,EAAY8E,uBAAuBtpB,KAAO,IAG1C,YAAA+0D,mBAAR,WACI,IACMt/C,EADQxmB,KAAK2xC,OAAO5c,WACGvO,eAAe0R,oBAE5C,IAAK1R,EACD,MAAM,IAAI,IAAiB,IAAqBxW,uBAqBpD,MAlB2B,CACvB3H,KAAM,CACF4+D,MAAOzgD,EAAexJ,UACtBmf,KAAM3V,EAAevJ,SACrBiqD,KAAS1gD,EAAexJ,UAAS,IAAIwJ,EAAevJ,UAExDL,QAAS,CACL07B,MAAO9xB,EAAepJ,SACtBo7B,MAAOhyB,EAAelJ,SACtBC,KAAMiJ,EAAejJ,KACrBuX,MAAOtO,EAAe7I,oBACtBwpD,QAAS3gD,EAAe3I,WACxBC,QAAS0I,EAAezI,aAE5Bq6B,aAAc5xB,EAAexI,MAC7B6I,MAAOL,EAAeK,QAMtB,YAAAu/C,oBAAR,WACI,IACM1wC,EADQ11B,KAAK2xC,OAAO5c,WACIW,gBAAgB+C,qBAE9C,GAAK/C,EAqBL,MAjB4B,CACxBrtB,KAAM,CACF4+D,MAAOvxC,EAAgB1Y,UACvBmf,KAAMzG,EAAgBzY,SACtBiqD,KAASxxC,EAAgB1Y,UAAS,IAAI0Y,EAAgBzY,UAE1DL,QAAS,CACL07B,MAAO5iB,EAAgBtY,SACvBo7B,MAAO9iB,EAAgBpY,SACvBC,KAAMmY,EAAgBnY,KACtBuX,MAAOY,EAAgB/X,oBACvBwpD,QAASzxC,EAAgB7X,WACzBC,QAAS4X,EAAgB3X,aAE7Bq6B,aAAc1iB,EAAgB1X,QAM9B,YAAAqoD,UAAR,SAAkBhnD,EAAsC6H,GAGpD,IAFA,IAAMG,EAAsB,GAET,QAAMG,UAAUkD,cAAhB,eAA+B,CAA7C,IAAMtL,EAAI,KACXiI,EAAM7hB,KAAK,CACP4hE,aAAchoD,EAAK/W,KACnB6Z,IAAK9C,EAAK8C,IACVmlD,WAAYhoD,EAAkBM,UAAUP,EAAK0C,WAC7CwlD,IAAKloD,EAAKY,SACVunD,eAAgBnoD,EAAKE,SACrBkoD,SAAUpoD,EAAKxD,IACf6rD,WAAYznE,KAAK0nE,eAAetoD,EAAKqoD,cAI7C,IAAmB,YAAMjgD,UAAUmD,aAAhB,eAARvL,EAAI,KACXiI,EAAM7hB,KAAK,CACP4hE,aAAchoD,EAAK/W,KACnB6Z,IAAK9C,EAAK8C,IACVmlD,WAAYhoD,EAAkBM,UAAUP,EAAK0C,WAC7CwlD,IAAKloD,EAAKY,SACVunD,eAAgBnoD,EAAKE,SACrBkoD,SAAUpoD,EAAKxD,IACf6rD,WAAYznE,KAAK0nE,eAAetoD,EAAKqoD,cAI7C,IAAmB,YAAMjgD,UAAUyE,iBAAhB,eAAR7M,EAAI,KACXiI,EAAM7hB,KAAK,CACP4hE,aAAchoD,EAAK/W,KACnB6Z,IAAK,GACLmlD,WAAYhoD,EAAkBM,UAAUP,EAAKG,QAC7C+nD,IAAK,EACLC,eAAgB,GAChBC,SAAU,KAIlB,GAAItgD,EAAMM,UAAUyP,YAChB,IAAmB,YAAMzP,UAAUyP,YAAhB,eAAR7X,EAAI,KACXiI,EAAM7hB,KAAK,CACP4hE,aAAchoD,EAAK/W,KACnB6Z,IAAK9C,EAAK8C,IACVmlD,WAAYhoD,EAAkBM,UAAUP,EAAKyC,WAC7CylD,IAAKloD,EAAKY,SACVunD,eAAgB,GAChBC,SAAU,KAKtB,OAAOngD,GAGH,YAAAw/C,cAAR,SAAsBxnD,EAAsC6H,GAGxD,IAFA,IAAM0/C,EAA4B,GAEf,QAAM3+C,QAAN,eAAe,CAA7B,IAAM0/C,EAAI,KACPA,EAAK3/C,iBAAmB,IACxB4+C,EAAUe,EAAKlgD,MAAQ,CACnBmgD,gBAAiBvoD,EAAkBM,UAAUgoD,EAAK3/C,kBAClD6/C,sBAAuBF,EAAK50C,cAYxC,OAPI7L,EAAMtF,eAAiB,IACvBglD,EAAUkB,kBAAoB,CAC1BF,gBAAiBvoD,EAAkBM,UAAUuH,EAAMtF,gBACnDimD,sBAAuB,aAIxBjB,GAGH,YAAAc,eAAR,SAAuBD,GACnB,OAAKA,EAIEA,EAAWtoD,KAAI,YAAgB,SAAaA,KAAI,YAAY,SAAS9W,WAHlE,CAAC,KAKnB,EA5RA,G,GCXA,WACI,WACW+lB,yCAuBd,OApBG,YAAAyrB,KAAA,SAAKkuB,EAAqB3zB,YAArB2zB,UACD,IAAMC,EAAYhoE,KAAKioE,cAAc7zB,GAIrC,GCCJ,SAAclsC,EAA2BggE,EAAiB/+D,EAAaf,EAAes1B,EAAS14B,EAAamjE,EAAYhgE,GACpH,IAAMw1B,EAAIz1B,EAAEiB,IAAM,GACZi/D,EAAIrsD,SAASC,cAAchX,GAC3BwE,EAAIuS,SAASssD,qBAAqBrjE,GAAG,GACrCgD,EAAI,SAAa01B,EAAiBC,EAAiBx1B,GACrD,OAAO,WACHu1B,EAAEC,GAAGpY,EAAE/f,KAAK,CAAC2C,EAAG3I,cAGxBm+B,EAAEv1B,GAAKJ,EAAE21B,EAAGv1B,EAAG,OACf,IAAMkgE,EAAI3qC,EAAEv1B,GACZu1B,KAAO,GACPA,KAAKpY,EAAI,GACT+iD,EAAE/iD,EAAI,GACNoY,EAAEpY,EAAI,GACNoY,KAAKwqC,GAAKngE,EAAE21B,EAAGD,EAAGyqC,GAClBxqC,UAAO,WACHA,EAAEpY,EAAE/f,KAAK,CAAC2iE,EAAG3oE,aAGjB,IADA,IAAI+oE,EAAK,EAEDC,EAAK,qEAAqE92C,MAC9E,KAEF62C,EAAKC,EAAG/oE,OACR8oE,IAEED,EAAEE,EAAGD,IAAOvgE,EAAE21B,EAAGv1B,EAAGogE,EAAGD,IAG3B,IADA,IAAIE,EAAK,EACEC,EAAK,CAAC,MAAO,QAAS,MAAO,SAAUD,EAAKC,EAAGjpE,OAAQgpE,IAC9DH,EAAEI,EAAGD,IAAO,aAEhBL,EAAEhhE,SACFghE,EAAEjuB,IAAM+tB,EAAEljE,GACNwE,EAAEoqC,YACFpqC,EAAEoqC,WAAW+0B,aAAaP,EAAG5+D,UAE1B0+D,EAAEljE,GACTsjE,EAAEJ,GACFhgE,EAAEiB,GAAKw0B,EAxCX,CA0CI9F,OA/CiC,CACjC+wC,eDCab,ECAbc,ODAqBb,GC+CrB,SACA,WACA,KACA,SACA,UDjDKhoE,KAAKouB,QAAQ+2C,OACd,MAAM,IAAI,KAGd,OAAO1hE,QAAQR,QAAQjD,KAAKouB,QAAQ+2C,SAGhC,YAAA8C,cAAR,SAAsB7zB,GAMlB,YAAO,IANWA,UAMXA,EAHM,4CADH,qCAMlB,EAzBA,G,GESA,WAGI,WACYzC,EACA2lB,EACAO,EACAyJ,EACAzuB,EACAi2B,EACAC,GANAp3B,cACA2lB,0BACAO,2BACAyJ,6BACAzuB,mCACAi2B,iCACAC,6BAuGf,OApGS,YAAAt5C,WAAN,SAAiBzO,G,8IAMb,GALM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpBsD,EAAgBvD,EAAMwD,eAAeC,iBAAiBvX,EAAQuD,SAAUvD,EAAQwX,WAChFn3B,EAASyzB,EAAMzzB,OAAOw3B,iBACtBmwC,EAAmB3nE,EAASA,EAAO04B,aAAakvC,aAAe,IAEhE5wC,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGhC,OAApB,EAAA3Q,KAAoB,GAAMA,KAAK+oE,sBAAsBlvB,KAAKxhB,EAAer4B,KAAKkpE,kBAAkBF,K,OAEhG,OAFA,EAAKG,aAAezrC,EAAA,OAEb,CAAP,EAAO19B,KAAK2xC,OAAO5c,oBAGvB,YAAA4d,aAAA,WAKI,OAJI3yC,KAAKmpE,eACLnpE,KAAKmpE,qBAGF1lE,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGjC,YAAAy8B,QAAN,SAAc1sC,EAA2B9D,G,8IAGrC,KAFMu6B,EAAYz2B,EAAQ6C,SAAW7C,EAAQ6C,QAAQ6Q,WAGjD,MAAM,IAAI,GAA4B,CAAC,sB,OAGvC1D,EAAQ90B,KAAK2xC,OAAO5c,WAClB1zB,EAASyzB,EAAMzzB,OAAOw3B,iBACtBmwC,EAAmB3nE,EAASA,EAAO04B,aAAakvC,aAAe,aAC7Dn8B,EAAmBhoB,EAAO,gBAE9B,MACQ,GAAM9kB,KAAK2xC,OAAOc,SACtBzyC,KAAK8oE,0BAA0BxL,iBAAiBxwB,K,OADpDhY,EAAQ,S,iBAKZ,SAAM90B,KAAKs3D,mBAAmB/F,SAASz8B,EAAMvJ,SAAS4J,cAAenU,I,OAE7D,OAFR,SAEQ,GAAMhhB,KAAK2xC,OAAOc,SACtBzyC,KAAK6yC,4BAA4BvuB,kBAAkBi3B,EAAWv6B,K,OAGlE,OAJA8T,EAAQ,SAIR,GAAM90B,KAAKopE,oBAAoBJ,EAAkBl0C,EAAMwD,eAAeC,iBAAiBgjB,K,OAGvF,OAHA,SAGO,CAAP,EAAO,IAAI93C,SAAe,wBAGxB,YAAAu0D,SAAN,SAAeh3C,G,4IAKX,GAJM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpBpN,EAAUmN,EAAMnN,QAAQse,eACxB5kC,EAASyzB,EAAMzzB,OAAO2zB,oBAEvBrN,EACD,MAAM,IAAI,IAAiB,IAAqBzX,iBAGpD,IAAK7O,IAAWA,EAAOsmB,QAAQtO,MAC3B,MAAM,IAAI,IAAiB,IAAqBhJ,uBAQpD,OALMszD,EAAiB,CACnBp/C,SAAUoD,EAAQY,WAClBgR,YAAa,CAAEY,MAAO94B,EAAOsmB,QAAQtO,QAGzC,GAAMrZ,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY,GAAIj2C,K,OAEpE,OAFA,SAEO,CAAP,EAAOhhB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAcuoC,aAGjE,YAAAyF,oBAAR,SAA4BC,EAAqBhxC,GAC7C,IAAKr4B,KAAKmpE,eAAiB9wC,IAAkBA,EAAc3I,YACvD,MAAM,IAAI,KAAoB,KAAwBG,uBAG1D7vB,KAAKmpE,aAAa15C,WAAW,CAAE1R,YAAa/d,KAAKkpE,kBAAkBG,KACnErpE,KAAKmpE,aAAaG,SAAS,CAAEjwD,MAAOgf,EAAc3I,eAG9C,YAAAw5C,kBAAR,SAA0BG,GACtB,OAAQA,GACR,IAAK,YACD,MAAO,KAEX,IAAK,cACD,MAAO,KAEX,IAAK,gBACD,MAAO,KAEX,QACI,MAAO,OAGnB,EAjHA,G,GCSA,WACI,WACYl7C,wBAuBf,OAhBG,YAAA0rB,KAAA,SAAKj0B,EAAuB7H,GACxB,IAAMq2B,EAAWxuB,EAAOvkB,OAAO+yC,aACzB4zB,EAAYhoE,KAAKioE,cAAclqD,EAAaq2B,GAElD,OAAOp0C,KAAKmuB,cAAcG,WAAW05C,GAChChkD,MAAK,WAAM,OAAC6T,OAAqC0xC,aAGlD,YAAAtB,cAAR,SAAsBlqD,EAAqBq2B,GACvC,MAAoB,OAAhBr2B,EACOq2B,EAvBN,qDADH,0CA2BKA,EA/BF,kDADH,2CAmCV,EAzBA,G,6BCjBe,SAASo1B,GAAuB19B,EAAoCC,GAC/E,OAAO,UAAAlrB,QAAA,CAAQ4jB,GAAUqH,GAAWrH,GAAUsH,IAGlD,SAAStH,GAAU7nB,GACf,ICRgCxT,EDQ1BqgE,EAAc,CAAC,KAAM,gBAE3B,OAAQvoE,OAAOge,MCViB9V,EDUAwT,ECTzB,aAASxT,GAAQ,SAACmc,EAAQrc,GAAgB,oBAAUA,ODSf,KACvClD,QACG,SAACzB,EAAQ2E,G,MAAQ,OAA8B,IAA9B,EAAYtD,QAAQsD,IAAe0T,EAAQ1T,GAAM,yCACzD3E,KAAM,MAAG2E,GAAM0T,EAAQ1T,GAAI,IAChC3E,IACJ,IEbG,SAASmlE,GAAuB9sD,GAC3C,MAAO,CACHG,GAAIH,EAAQG,GACZC,UAAWJ,EAAQI,UACnBC,SAAUL,EAAQK,SAClBC,QAASN,EAAQM,QACjBE,SAAUR,EAAQO,aAClBG,SAAUV,EAAQS,aAClBE,KAAMX,EAAQW,KACdE,gBAAiBb,EAAQY,SACzBG,oBAAqBf,EAAQc,aAC7BG,WAAYjB,EAAQgB,SACpBE,QAASlB,EAAQkB,QACjBC,YAAanB,EAAQmB,YACrBC,MAAOpB,EAAQoB,MACfC,aAAcrB,EAAQqB,c,ICNlB0rD,G,aCOZ,WAMI,WACYh4B,EACAkmB,EACA+R,EACAvW,EACAllC,GAJAwjB,cACAkmB,2BACA+R,oCACAvW,oCACAllC,qBAERnuB,KAAKouB,QAAUyJ,OACf73B,KAAK6pE,4BA4OZ,OAzOG,YAAAp6C,WAAA,SAAWzO,GAAX,WACoBsyC,EAA4BtyC,EAAO,OAApBuD,EAAavD,EAAO,SAE7CqX,EADQr4B,KAAK2xC,OAAO5c,WACEuD,eAAeC,iBAAiBhU,GAE5D,IAAK+uC,EACD,MAAM,IAAI,KAAqB,mFAGnC,IAAKj7B,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAMpD,OAHA3Q,KAAK8pE,eAAiBxW,EACtBtzD,KAAKm1C,eAAiB9c,EAEf,IAAI50B,SAAQ,SAACR,EAASC,GAOzB,EAAKirB,cAAcggC,WAAW91B,GANd,WACZ,EAAK0xC,cAAczW,GACdtvC,KAAK/gB,GACLmhB,MAAMlhB,MAIVkhB,MAAMlhB,MAEV8gB,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,WAGI,OAFA3yC,KAAK8pE,sBAEErmE,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAy8B,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACUgpD,EAAchqE,KAAKiqE,uBACnBC,EAAWlqE,KAAKmqE,iBAEtB,IAAKH,IAAgBE,EACjB,MAAM,IAAI,KAAoB,KAAwBr6C,uBAG1D,IAAK/K,EAAQ6C,QACT,MAAM,IAAI,KAAqB,kFAGnC,IAAK3nB,KAAK6pE,yBACN,MAAM,IAAI,IAAiB,IAAqBl5D,sBAG5C,MAAgEmU,EAAO,QAA5C6+C,GAAL,cAAmB,mBAAhC,kBAAoC72B,EAAmBhoB,EAAO,eAE/E,OAAI9D,GAAWhhB,KAAKm1C,gBAAkBn1C,KAAKm1C,eAAe9zC,OAAO+oE,aACtDpqE,KAAKqqE,uBACRH,EACAF,EACArG,EAAep/C,SACfuoB,EACA9rB,GAIDhhB,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6BzC,kBAAkB+S,EAAep/C,SAAU,CAAEylD,YAAW,EAAEl9B,eAAc,KAEzG9oB,MAAK,WAAM,SAAK2tB,OAAOc,SACpB,EAAKolB,oBAAoBZ,YAAY,yCAC9BnyC,GAAO,CACV6C,QAASg8C,IACV3iD,OAENoD,OAAM,YACH,OAAIllB,aAAiB,MAAoC,0BAApBA,EAAMsZ,KAAKzH,MAAoC,EAAK+4D,eAC9E,EAAKC,cAAc,EAAKD,gBAC1B9lD,MAAK,WAAM,OAAAvgB,QAAQP,OAAOhE,MAG5BuE,QAAQP,OAAOhE,OAIlC,YAAA84D,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAAinE,eAAR,WACI,OAAOnqE,KAAKm1C,gBAAkBn1C,KAAKm1C,eAAe9zC,OAAO8yC,YAGrD,YAAA81B,qBAAR,WACI,IACMzb,EADQxuD,KAAK2xC,OAAO5c,WACLgZ,eAAe5Y,YAAY,UAEhD,OAAOq5B,EAASA,EAAOwb,oBAGnB,YAAAM,2CAAR,WACI,OAAOtqE,KAAKm1C,eAAiBn1C,KAAKm1C,eAAe3a,mBAAmB+vC,yBAGhE,YAAAR,cAAR,SAAsB/oD,GAAtB,WACI,OAAO,IAAIvd,SAAQ,SAACR,EAASC,GACjB,MAAsE8d,EAAO,UAAlEzY,EAA2DyY,EAAO,QAAlE,WAAU,KAAAkiC,KAAI,EAAE,EAA2CliC,EAAO,gBAAlD,WAAkB,KAAAkiC,KAAI,EAAE,EAAmBliC,EAAO,QAA1B,WAAU,KAAAkiC,KAAI,EACnE8mB,EAAc,EAAKC,wBAA0B,EAAKK,6CAClDn2B,EAAa,EAAKg2B,iBAExB,IAAKpuD,SAAS+3B,eAAezB,GACzB,OAAOnvC,EAAO,IAAI,KAAqB,yEAG3C,IAAK,EAAKkrB,QAAQygC,kBACd,OAAO3rD,EAAO,IAAI,KAAoB,KAAwB2sB,wBAGlE,IAAKskB,EACD,OAAOjxC,EAAO,IAAI,IAAiB,IAAqByN,uBAG5D,IAAM65D,EAAwC,CAC1CC,uBAAwBT,EACxBU,OAAQ,CAAEC,WAAY,cACtBhX,MAAO,6EACPuW,SAAU/1B,EACV2C,QAAS,YACL5zC,EAAOhE,GACP43C,EAAQ53C,IAEZ0rE,gBAAiB,YACb,EAAKC,6BACA7mD,MAAK,WACF,EAAK6lD,4BACLe,EAAgBE,MAEnB1mD,MAAM0yB,IAEfi0B,QAAS,YACL9nE,IACA8nE,EAAQD,KAIX,EAAKb,yBACNO,EAAcO,QAAU,YACpB,EAAKC,sBAAsBF,GACtB9mD,MAAK,WACF/gB,IACA8nE,EAAQD,MAEX1mD,MAAM0yB,KAInB,IAAMm0B,EAAS,IAAI,EAAK78C,QAAQygC,kBAAkBqc,QAAQC,OAAOX,GAIjE,OAFAS,EAAO9pE,KAAKkxC,GAEL44B,MAIP,YAAAJ,2BAAR,sBACUb,EAAchqE,KAAKiqE,uBACnB1lD,EAAWvkB,KAAKm1C,gBAAkBn1C,KAAKm1C,eAAep4B,GAE5D,IAAKwH,IAAaylD,EACd,MAAM,IAAI,KAGd,OAAOhqE,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6B5C,kBAAkBlsC,EAAU,CAAEylD,YAAW,KAE1EhmD,MAAK,YACF,IAAMwqC,EAAS15B,EAAMiZ,eAAe5Y,YAAY,UAC1Ci2C,EAAgB5c,GAAUA,EAAOxsB,SAAWwsB,EAAOxsB,QAAQplB,QAC3D4J,EAAiBsO,EAAMtO,eAAe0R,oBACtCmzC,EAAyB7kD,GAAkB,aAAqBA,GAEtE,QAAI4kD,EACA,MAAM,IAAI,KAGd,OAAKA,GAAiB5B,GAAuB4B,EAAeC,GAA0B,IAC3EviE,EAAK6oC,OAAO5c,WAGhBjsB,EAAK6oC,OAAOc,SACf3pC,EAAK8gE,6BAA6BjzC,cAAc+yC,GAAuB0B,SAK/E,YAAAJ,sBAAR,SAA8BF,GAC1B,OAAO9qE,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6Bn+B,eAAe,SAAU,CACvD80C,YAAac,EAAeQ,gCAKhC,YAAAjB,uBAAR,SAA+BH,EAAkBF,EAAqBzlD,EAAkBuoB,EAAqC9rB,GAA7H,WACI,OAAO,IAAIvd,SAAQ,SAAC8hB,EAAGriB,GACnB,OAAK,EAAKkrB,QAAQygC,kBAIX,EAAKzgC,QAAQygC,kBAAkB0c,qBAClCrB,EACAF,GACA,SAACwB,GACG,OAAO,EAAK75B,OAAOc,SACf,EAAKolB,oBAAoBZ,YAAY,CAAEnqB,eAAc,GAAI9rB,IAExDgD,MAAK,WAAM,SAAK2tB,OAAOc,SACpB,EAAK4gB,6BAA6BzC,kBAAkBrsC,EAAU,CAC1DylD,YAAW,EACXl9B,eAAc,QAGrB9oB,MAAK,WAGF,OAFAwnD,EAAiBC,UAEV,IAAIhoE,SAAe,kBAE7B2gB,OAAM,SAAApf,GAGH,OAFAwmE,EAAiBtsE,QAEVgE,EAAOhE,SAxBnBgE,EAAO,IAAI,KAAoB,KAAwB2sB,4BA8B9E,EA1PA,G,GCJA,WAII,WACY8hB,EACA+5B,EACA74B,EACAglB,EACAyJ,EACA9tB,GALA7B,cACA+5B,qCACA74B,mCACAglB,2BACAyJ,6BACA9tB,oCAiLf,OA9KS,YAAA/jB,WAAN,SAAiBzO,G,gJAGb,GAFQuD,EAAwBvD,EAAO,SAArByyB,EAAczyB,EAAO,WAElCuD,IAAakvB,EACd,MAAM,IAAI,KAAqB,2EAGrB,SAAMzzC,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,K,OAG5F,OAHMuQ,EAAQ,SACRuD,EAAgBvD,EAAMwD,eAAeyS,wBAAwBxmB,GAEnE,GAAMvkB,KAAKwzC,6BAA6B/jB,WAAW4I,I,OAWnD,OAXA,SAEQszC,EAAiBtzC,EAAcmC,mBAAkB,aACnDoxC,EAAWn4B,EAAUo4B,aAEvBF,GAAgBC,EAChB5rE,KAAK8rE,gBAAgBF,EAAUD,EAAc,iBAE7C3rE,KAAK2zC,cAAgB3zC,KAAK0zC,oBAAoBrb,GAG3C,CAAP,EAAOr4B,KAAK2xC,OAAO5c,oBAGjB,YAAAy8B,QAAN,SAAcua,EAAgC/qD,G,kJAG1C,KAFQ2G,EAAYokD,EAAY,SAG5B,MAAM,IAAI,GAA4B,CAAC,YAK7B,OAFNxnD,EAAaoD,EAAO,SAEd,GAAM3nB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,K,cAAtFuQ,EAAQ,SACRuD,EAAgBvD,EAAMwD,eAAeyS,wBAAwBxmB,IAE3DonD,EAAiBtzC,EAAcmC,mBAAkB,eAG/CmpC,EAAiB,CACnBp/C,SAAQ,EACRgV,YAAa,CAAEY,MAAOwxC,IAG1B,GAAM3rE,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY8U,EAAc/qD,MAN9E,M,OAMA,S,iBAGW,O,sBAAA,GAAMhhB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAcuoC,K,OAA3E,MAAO,CAAP,EAAO,U,OAEP,I,sBAAqB,MAAsC,+BAAtB,EAAMnrD,KAAKE,OAC5C,MAAO,CAAP,EAAO,IAAIjV,SAAQ,WACfo0B,OAAOC,SAASlF,QAAQ,EAAMpa,KAAK8hD,2BAA2BpgC,KAAK8xC,kBAI3E,MAAM,E,OAId,IAAKhsE,KAAK2zC,cACN,MAAM,IAAI,KAAoB,KAAwB9jB,uBAK1D,OAFA7vB,KAAK2zC,cAAcs4B,QAEZ,CAAP,EAAO,IAAIxoE,QAAe,GAAAy/C,eAG9B,YAAA8U,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGxB,YAAAyvC,aAAN,SAAmBgM,G,gIAMf,OALI3+C,KAAK2zC,eAAiB3zC,KAAK2zC,cAAcC,aACzC5zC,KAAK2zC,cAAcC,WAAWC,YAAY7zC,KAAK2zC,eAC/C3zC,KAAK2zC,sBAGT,GAAM3zC,KAAKwzC,6BAA6Bb,gB,OAExC,OAFA,SAEO,CAAP,EAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,qBAG/B,YAAA+2C,gBAAR,SAAwB/uD,EAAYw4C,EAAmB2W,GAAvD,WACUp2B,EAAS/5B,SAAS+3B,eAAe/2B,GAEvC,GAAK+4B,GAAWA,EAAOlC,WAAvB,CAIA,IAAMu4B,EAAQr2B,EAAOs2B,cACrBt2B,EAAOlC,WAAWy4B,aAAaF,EAAOr2B,GAEtCq2B,EAAMh8B,iBAAiB,SAAS,WAAM,SAAKm8B,qBAAoB,WAAM,WAAI7oE,QAAQ,GAAAy/C,YAEjFljD,KAAKwzC,6BAA6B+4B,WAAWxvD,EAAIw4C,EAAW2W,KAGxD,YAAAI,oBAAR,SAA4B7a,GACxB,OAAOzxD,KAAK2xC,OAAOc,SAASzyC,KAAK0rE,8BAA8Bxd,mBAAkB,WAE7E,OAAIuD,EACOA,IAGJhuD,QAAQP,YACf,CAAEsvC,QAAS,uBAGX,YAAAg6B,iBAAR,WACI,IAAIn6B,EAAYt2B,SAAS+3B,eAAe,mBAExC,OAAIzB,KAIJA,EAAYt2B,SAASC,cAAc,QACzBe,GAAK,kBACfs1B,EAAU8D,MAAMmK,QAAU,OAEnBvkC,SAASvD,KAAKwgC,YAAY3G,KAG7B,YAAAqB,oBAAR,SAA4Brb,GACxB,IAAMvD,EAAQ90B,KAAK2xC,OAAO5c,WACpBrJ,EAAOoJ,EAAMpJ,KAAKkK,UAClBv0B,EAASyzB,EAAMzzB,OAAOw3B,iBAE5B,IAAKx3B,EACD,MAAM,IAAI,IAAiB,IAAqBgP,uBAGpD,IAAKgoB,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAIhD,MAUA0nB,EAAa,OATT8b,EAAU,aACVC,EAAQ,WAEZ,EAMA/b,EAAa,mBALTgc,EAAgB,mBAChBC,EAAc,iBACdC,EAAqB,wBACrBC,EAA8B,iCAItC,IAAKL,EACD,MAAM,IAAI,IAAiB,IAAqBxjC,sBAGpD,IAAMqjC,EAAsB,CACxBG,WAAU,EACVO,UAAWN,EACXC,iBAAgB,EAChBC,eAAc,EACdK,YAAajpB,GAAyC,IAAjC,aAAuBA,GACxC,KAAsBwC,QACtB,KAAsBD,WAC1BwmB,sBAAuB,CACnB7uB,OAAQ2uB,EACR34B,IAAQva,EAAO04B,aAAama,SAAQ,oBAAoB7b,EAActb,GAAE,mBACxEy3B,+BAA8B,GAElCI,UAAW,KAAqBjnB,UAG9B0kB,EAAYryC,KAAKwsE,mBAGvB,OAFAxsE,KAAKwzC,6BAA6BS,aAAa,IAAI5B,EAAUt1B,GAAMi3B,GAE5D3B,GAEf,EA3LA,G,GCLA,WAII,WACcV,EACAkmB,EACAyJ,EACAmL,GAHA96B,cACAkmB,2BACAyJ,6BACAmL,0BA6FjB,OA1FG,YAAAjb,QAAA,SAAQ1sC,EAA2B9D,G,QAC/B,OAAOhhB,KAAK0sE,4BAA2C,QAAhB,EAAC5nD,EAAQ6C,mBAAO,WAAEpD,SAAyB,QAAjB,EAAEO,EAAQ6C,mBAAO,WAAE6Q,YAAcx4B,KAAK2sE,wBACnG3sE,KAAK4sE,uBAAuB9nD,EAAS9D,GACrChhB,KAAK6sE,0BAA0B/nD,EAAS9D,IAGhD,YAAAg3C,SAAA,SAASrZ,GACL,OAAOl7C,QAAQP,OAAO,IAAI,KAG9B,YAAAusB,WAAA,SAAWzO,GAAX,WACI,IAAKhhB,KAAK0sE,4BAA4B1rD,iBAASuD,SAAUvD,iBAASwX,aAAex4B,KAAK8sE,wBAAwB9rD,GAG1G,OAFAhhB,KAAK2sE,2BAEElpE,QAAQR,QAAQjD,KAAK2xC,OAAO5c,YAGvC,IAAMg4C,EAAc/rD,GAAWA,EAAQgsD,YAAchsD,EAAQgsD,WAAWn/B,KAEhE,GADW7tC,KAAK2xC,OAAO5c,WAAU,OAC6B8D,kBAAoB,IAAE,gBAAjE,cAA6B,GAAE,iBAAhBikB,WAAO,KAAE,EAEnD,IAAKiwB,EACD,MAAM,IAAI,KAGd,IAAMl/B,EAAO7tC,KAAKysE,mBAAmBxsE,OAAO68C,EAAMiwB,GAElD,OAAOl/B,EAAKqR,SACPl7B,MAAK,WAIF,OAHA,EAAK2oD,2BACL,EAAKM,YAAcp/B,EAEZ,EAAK8D,OAAO5c,eAI/B,YAAA4d,aAAA,SAAagM,GAKT,OAJI3+C,KAAKitE,aACLjtE,KAAKitE,YAAYttB,SAGdl8C,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG7B,YAAA83C,0BAAV,SAAoC/nD,EAA2B9D,GAA/D,WACY2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAyU,EAAc5R,GAAWA,EAAQ4R,YAEvC,IAAK5R,IAAY4R,EACb,MAAM,IAAI,GAA4B,CAAC,wBAG3C,OAAOv5B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,IACnEgD,MAAK,WACF,SAAK2tB,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAc,yCAAKzT,GAAO,CAAE4R,YAAW,UAIzF,YAAAqzC,uBAAV,SAAiC9nD,EAA2B9D,GAA5D,WACY2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACA+oB,EAAO7tC,KAAKitE,YAElB,IAAKp/B,EACD,MAAM,IAAI,KAAoB,KAAwBhe,uBAG1D,IAAKlI,IAAYA,EAAQpD,SACrB,MAAM,IAAI,GAA4B,CAAC,qBAG3C,OAAOspB,EAAK0jB,WACPvtC,MAAK,WAAM,SAAK2tB,OAAOc,SAAS,EAAKolB,oBAAoBZ,YAAY/vC,EAAOlG,OAC5EgD,MAAK,WAAM,SAAKi5C,OAAOt1C,MACvB3D,MAAK,WAAM,SAAK2tB,OAAOc,SAAS,EAAKolB,oBAAoBL,wBAGxD,YAAAkV,4BAAV,SAAsCnoD,EAAmBiU,GACrD,QAAKjU,SAO+C,EAHIvkB,KAAK2xC,OAAO5c,WAAU,wCAChCxQ,EAAUiU,GAEnCn3B,OAAO6rE,qBAGxB,YAAAJ,wBAAR,SAAgC9rD,GAC5B,OAAS,UAAAiZ,OAAA,CAAOjZ,GAAWA,EAAQgsD,YAAchsD,EAAQgsD,WAAWn/B,KAAK4tB,QAAQ9sB,MAAM,GAAAwoB,QAE/F,EArGA,G,GCJA,YACI,WACIjyC,EACAioD,EACAC,EACAC,EACQC,GALZ,MAOI,YACIpoD,EACAioD,EACAC,EACAC,IACH,K,OAPOC,sB,EAsCf,OA5CoD,yBAgB3C,YAAA79C,WAAN,SAAiBzO,G,wIACb,SAAM,YAAMyO,WAAU,UAACzO,I,cAAvB,SAE0B+pB,EAA8B/qC,KAAK2xC,OAAO5c,WAAU,wCACxEsD,EAAgB0S,EAAwB/pB,EAAQuD,WAEpCljB,OAAO+oE,aACrB,GAAMpqE,KAAKstE,kBAAkBC,QAAQl1C,IADrC,M,OACA,S,iBAGJ,MAAO,CAAP,EAAOr4B,KAAK2xC,OAAO5c,oBAGjB/vB,EAAA,UAAAwsD,QAAN,SAAc1sC,EAA2B9D,G,mHAIrC,OAHQ,EAAoC8D,EAAO,QAAhC,cAAkB,GAAE,YAApB,WAAW,KAAE,KACwB9kB,KAAK2xC,OAAO5c,WAAU,wCAElDxQ,GAAUljB,OAAO+oE,aAClC,CAAP,EAAOpqE,KAAKstE,kBAAkBE,MAC1B,YAAMhc,QAAQrwD,KAAKnB,MACnB8kB,EACA9D,EACAhhB,KAAKitE,cAIN,CAAP,EAAO,YAAMzb,QAAO,UAAC1sC,EAAS9D,WAEtC,EA5CA,CAAqD,I,YCUrD,WAII,WACY2wB,EACAkmB,EACAyJ,GAFA3vB,cACAkmB,2BACAyJ,6BAsEf,OAnES,YAAA9P,QAAN,SAAcua,EAAgC/qD,G,gJAG1C,KAFQ2G,EAAYokD,EAAY,SAG5B,MAAM,IAAI,GAA4B,CAAC,YAG3C,IAAK/rE,KAAKytE,mBACN,MAAM,IAAI,KACN,KAAwB59C,uBAIhC,SAAM7vB,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY8U,EAAc/qD,K,OAQ9E,OARA,SAEM,EAAoBhhB,KAAKytE,mBAAvB3uB,EAAM,SAAE3I,EAAK,QACfu3B,EAAQ1tE,KAAK2tE,cA5BP,iCA4BkCx3B,GACxCijB,EAAU,IAAI,GAA8B,IAAI31D,QAAQ,GAAAy/C,OAE9DpE,EAAO4uB,GAAO,WAAM,SAAQpU,OAAO,IAAI,OAEhC,CAAP,EAAOt5D,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBhmC,yBAAyB,CAC5E/W,SAAUoD,EAAQpD,SAClBiU,UAAW7Q,EAAQ6Q,UACnBklC,sBAAqBA,EACrBx3C,OAAQwnD,EAAMrlE,KACd+wD,QAASA,EAAQA,oBAIzB,YAAApB,SAAA,SAASh3C,GACL,IAAM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpB7N,EAAQ4N,EAAM5N,MAAMkR,WACpB1f,EAASoc,EAAMnN,QAAQue,mBAE7B,OAAIhf,GAAUxO,IAAW,MAAkCA,IAAW,KAI/DjV,QAAQP,OAAO,IAAI,IAHflD,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBT,cAAclwC,EAAMK,QAASvG,KAM1F,YAAAyO,WAAA,SAAWzO,GAGP,OAFAhhB,KAAKytE,mBAAqBzsD,GAAWA,EAAQqjB,WAEtC5gC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG/B,YAAA44C,cAAR,SAAsBtlE,EAAc8tC,GAChC,IAAMqJ,EAASzjC,SAASC,cAAc,UAItC,GAFAwjC,EAAOn3C,KAAOA,EAEV8tC,EAAO,CACC,MAA0BA,EAAK,OAAvB4U,EAAkB5U,EAAK,OAAfoK,EAAUpK,EAAK,MAEvCqJ,EAAOrJ,MAAMkK,OAASA,EACtBb,EAAOrJ,MAAM4U,OAASA,EACtBvL,EAAOrJ,MAAMoK,MAAQA,EAGzB,OAAOf,GAEf,EA7EA,G,GCFA,WAII,WACY7N,EACAkmB,EACAyJ,EACAzuB,EACAi2B,EACA8E,GALAj8B,cACAkmB,2BACAyJ,6BACAzuB,mCACAi2B,iCACA8E,yBARJ,KAAAC,gBAAA,EAuIX,OA5HS,YAAAp+C,WAAN,SAAiBzO,G,uJACLwjB,EAAmBxjB,EAAO,KAApBuD,EAAavD,EAAO,SAElChhB,KAAK6tE,kBAAoBrpC,IAAQA,EAAKspC,yBAElC9tE,KAAK6tE,eAAL7tE,YAIA,GAHM80B,EAAQ90B,KAAK2xC,OAAO5c,aACpBsD,EAAgBvD,EAAMwD,eAAeC,iBAAiBhU,MAErC8T,EAAcmC,mBAAmBuzC,eACpD,MAAM,IAAI,IAAiB,IAAqBp9D,sBAKjC,OAFb,EAAsC0nB,EAAcmC,mBAAlDwzC,EAAe,kBAAED,EAAc,iBAEvC,EAAA/tE,KAAmB,GAAMA,KAAK4tE,kBAAkB/zB,KAAKk0B,EAAgB11C,EAAch3B,OAAO+yC,SAAU45B,I,OAApG,EAAKC,YAAc,S,iBAGvB,MAAO,CAAP,EAAOxqE,QAAQR,QAAQjD,KAAK2xC,OAAO5c,qBAGvC,YAAA4d,aAAA,WAGI,OAFA3yC,KAAKiuE,mBAEExqE,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGjC,YAAAy8B,QAAN,SAAc1sC,EAA2B9D,G,yGACrC,OAAIhhB,KAAK6tE,eACE,CAAP,EAAO7tE,KAAKkuE,uBAAuBppD,EAAS9D,IAErC,CAAP,EAAOhhB,KAAKmuE,yBAAyBrpD,EAAS9D,WAItD,YAAAg3C,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGhB,YAAAgrE,uBAAd,SAAqCppD,EAA2B9D,G,wJAG5D,GAFQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,cAED6C,EACD,MAAM,IAAI,GAA4B,CAAC,YAG3C,IAAK3nB,KAAKiuE,YACN,MAAM,IAAI,KAAoB,KAAwBp+C,uBAK1D,OAFMu+C,EAAapuE,KAAKiuE,YAExB,GAAMjuE,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,cAAvE,mBAE8B8rB,EAAmB9sC,KAAK2xC,OAAO5c,WAAWxJ,SAASqhB,qBAAoB,sBAEjG,MACA,GAAM5sC,KAAK2xC,OAAOc,SAASzyC,KAAK8oE,0BAA0BxL,iBAAiBxwB,K,OAA3E,S,iBAGU,SAAM9sC,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBqD,EAAQpD,SAAUvD,K,OAG9G,GAHM8T,EAAQ,WACRuD,EAAgBvD,EAAMwD,eAAeC,iBAAiB5Q,EAAQpD,aAE7C8T,EAAc3I,YACjC,MAAM,IAAI,IAAiB,IAAqB/e,sBAKf,OAF/BwX,EAAakQ,EAAc3I,YAEI,GAAM,IAAIjsB,SAAQ,SAACR,EAASC,GAC7D,IASMmrE,EAAY,CACd5C,QAVc,SAAC6C,EAA+B7c,GAC9CxuD,EAAQqrE,GACR7c,KASA5R,MANY,WACZ38C,EAAO,IAAI,MAQfkrE,EAAWlZ,UAAU,CAAE/sC,WAAU,GAAI,GAAIkmD,GAAW/I,W,OAaxD,OA5BMgJ,EAA+B,SAkB7B5Q,EAAyB/1C,EAAQ4R,YAA8B,qBAEjEoqC,EAAiB,CACnBp/C,SAAUoD,EAAQpD,SAClBgV,YAAa,CACTY,MAAOm0C,EAAYC,UACnB7Q,qBAAoB,IAIrB,CAAP,EAAO19D,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAcuoC,aAG3D,YAAAwK,yBAAd,SAAuCrpD,EAA2B65B,G,4IAG9D,GAFQh3B,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,cAED6C,EACD,MAAM,IAAI,GAA4B,CAAC,YAK3C,GAFQpD,EAA0BoD,EAAO,SAAvB4R,EAAgB5R,EAAO,aAEpCpD,EACD,MAAM,IAAI,IAAiB,IAAqB5T,sBAGpD,IAAK4oB,IC3IFzgB,QD2I8BygB,EC3IUY,OD4IvC,MAAM,IAAI,IAAiB,IAAqB1pB,gBAGpD,SAAMzQ,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOy3B,K,OAEvE,OAFAjhB,EAAA,OAEO,CAAP,EAAO19B,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,CACjE7W,SAAQ,EACRgV,YAAW,cAGvB,EAzIA,INFA,SAAYowC,GACR,EAAA6E,YAAA,eACA,EAAAC,YAAA,eACA,EAAAC,gBAAA,mBAHJ,CAAY/E,QAAiB,KQR7B,IC0HYgF,G,GD1HZ,WACI,WACYxgD,EACDC,0BADCD,qBACDC,eAyCd,OAtCS,YAAAyrB,KAAN,SAAWk0B,EAAwB35B,EAAoBw6B,G,sIASnD,OARM5tD,EAA6B,CAC/B5Z,OAAMA,EACN+Y,WAAY,CACRpD,GAAI,eACJ,uBAAwBgxD,IAIhC,GAAMtqE,QAAQysB,IAAI,CACdlwB,KAAKmuB,cAAcG,WAAW,KAAKtuB,KAAK6uE,eAAez6B,EAAUw6B,GAAoB,0BAA2B5tD,GAChHhhB,KAAKmuB,cAAcG,WAAW,KAAKtuB,KAAK6uE,eAAez6B,EAAUw6B,GAAoB,gB,OAGzF,GALA,UAKK5uE,KAAKouB,QAAQ0gD,aACd,MAAM,IAAI,KAGd,MAAO,CAAP,EAAO9uE,KAAKouB,QAAQ0gD,sBAGhB,YAAAD,aAAR,SAAqBz6B,EAAmBw6B,GAEpC,IAAKx6B,EACD,MAAO,mBAGX,GAAIw6B,EACA,OAAQA,EAAoBG,eACxB,KAAKpF,GAAkB8E,YACnB,MAAO,2BACX,KAAK9E,GAAkB+E,gBACnB,MAAO,WAAWE,EAAoBI,gBAIlD,MAAO,4BAEf,EA5CA,G,GEeA,WAMI,WAAYhuD,GACF,MAAyChhB,KAAKivE,gBAAgBjuD,GAA5DsxC,EAAO,UAAE4c,EAAY,eAAEC,EAAW,cAE1CnvE,KAAKovE,SAAW9c,EAChBtyD,KAAKqvE,cAAgBH,EACrBlvE,KAAKsvE,aAAeH,EAgI3B,OA7HG,YAAAhwB,KAAA,SAAKn+B,GAAL,WAEQhhB,KAAKsvE,aAAazc,gBAItB7yD,KAAKuvE,eAAevuD,GAEpBjF,SAASvD,KAAKwgC,YAAYh5C,KAAKsvE,cAG/B3uB,YAAW,WAAM,SAAKyuB,SAASj5B,MAAMwU,QAAU,SAGnD,YAAA9lD,OAAA,sBACS7E,KAAKsvE,aAAazc,gBAInB7yD,KAAKwvE,kBACLxvE,KAAKwvE,mBAGTxvE,KAAKyvE,yBAEL9uB,YAAW,WAAM,OAAA73C,EAAKsmE,SAASj5B,MAAMwU,QAAU,SAG3C,YAAAskB,gBAAR,SAAwBjuD,GACpB,IASIkuD,EACAQ,EACAC,EACAC,EAZEtd,EAAUv2C,SAASC,cAAc,OACjC,EAMFgF,GAAW,GALX,IAAA6uD,WAAA,WAAa,uBAAoB,EACjC,IAAA9yD,GAAA,WAAK,oBAAiB,EACtB,IAAA+yD,mBAAA,WAAqB,MAAG,EACxBC,EAAc,iBACdC,EAAS,YAETb,EAAc7c,EAUlB,GAJIv1C,IACAu1C,EAAQv1C,GAAKA,GAGbizD,EAAW,CACX,IAAMC,EAAcl0D,SAASC,cAAc,OAC3C4zD,EAAsB7yD,EAAE,gBACxBkzD,EAAYrb,UAAYgb,EACxBK,EAAYj3B,YAAYg3B,GAExB1d,EAAQtZ,YAAYi3B,GAkBxB,OAfIF,IACAJ,EAAgB5yD,EAAE,WAClBmyD,EAAenzD,SAASC,cAAc,QACzB44C,UAAa+a,EAE1BD,EAAiB3yD,EAAE,YACnBoyD,EAAcpzD,SAASC,cAAc,QACzB44C,UAAY8a,EAExBP,EAAYn2B,YAAYsZ,GACxB6c,EAAYn2B,YAAYk2B,IAG5BC,EAAYn2B,YC/FL,SAAyBh4B,GAC5B,MAAkFA,EAAO,GAArF6uD,EAA8E7uD,EAAO,WAAzE8uD,EAAkE9uD,EAAO,mBAArD0uD,EAA8C1uD,EAAO,YAAxC4uD,EAAiC5uD,EAAO,iBAAtB2uD,EAAe3uD,EAAO,WAC3F++B,EAAShkC,SAASC,cAAc,SAChCk0D,EAAiBR,EAAc,MAAMA,EAAgB,GAqE3D,OAnEA3vB,EAAOhjC,GAAQA,EAAE,WACjBgjC,EAAOhvC,KAAO,WACdgvC,EAAOowB,UAAY,cACZpzD,EAAKmzD,EAAc,wNASnBnzD,EAAE,uCACqB+yD,EAAkB,yCAC1BD,EAAU,8CAK5BD,IACA7vB,EAAOowB,WAAa,mBACZpzD,EAAE,qJAKFA,EAAE,KAAK6yD,EAAgB,0KAS/BD,IACA5vB,EAAOowB,WAAa,kBACbpzD,EAAE,gEAGF2yD,EAAW,KAAKC,EAAU,mSAU1BD,EAAW,KAAKC,EAAU,aAAaD,EAAW,KAAKC,EAAU,+OAQjED,EAAW,KAAKC,EAAU,sFAG1BD,EAAW,KAAKC,EAAU,kFAM9B5vB,EAxEI,CD+FiC,CAAEhjC,GAAE,EAAE8yD,WAAU,EAAEC,mBAAkB,EAAEJ,YAAW,EAAEE,iBAAgB,EAAED,WAAU,KAEhH,CAAErd,QAAO,EAAE4c,aAAY,EAAEC,YAAW,IAGvC,YAAAiB,kBAAR,SAA0B9d,EAAuBxW,GACxCwW,GAAYxW,GAIjBwW,EAAQniB,iBAAiB,QAAS2L,IAG9B,YAAAu0B,qBAAR,SAA6B/d,EAAuBxW,GAC3CwW,GAAYxW,GAIjBwW,EAAQhiB,oBAAoB,QAASwL,IAGjC,YAAAyzB,eAAR,SAAuBvuD,GAAvB,WAKI,GAJIhhB,KAAKwvE,kBACLxvE,KAAKwvE,mBAGLxuD,EAAS,CACD,MAA0BA,EAAO,QAAxB,EAAiBA,EAAO,aAEzChhB,KAAKowE,kBAAkBpwE,KAAKovE,SAAU,GACtCpvE,KAAKowE,kBAAkBpwE,KAAKqvE,cAAe,GAE3CrvE,KAAKwvE,iBAAmB,WACpB,EAAKa,qBAAqB,EAAKjB,SAAU,GACzC,EAAKiB,qBAAqB,EAAKhB,cAAe,GAC9C,EAAKG,2BAKT,YAAAC,uBAAR,sBAcIzvE,KAAKovE,SAASj/B,iBAAiB,iBAbkB,SAA3CmgC,EAA2C,GAEG,YAA3ChhC,EAA0BihC,eAI3BznE,EAAKwmE,aAAazc,eAClB/pD,EAAKwmE,aAAazqE,SAGtBiE,EAAKsmE,SAAS9+B,oBAAoB,gBAAiBggC,QAK/D,EA3IA,G,GEfA,YACI,WACWt4B,EACPhkC,GAFJ,MAII,YAAMA,GAAW,sEAAoE,K,OAH9EgkC,YAKP,EAAK3vC,KAAO,0BACZ,EAAK0I,KAAO,uB,EAEnB,OAVoD,yBAUrD,EAVA,CAAqD,OH0HrD,SAAY49D,GACR,EAAA6B,SAAA,WACA,EAAAC,qBAAA,uBACA,EAAAC,WAAA,aACA,EAAAC,SAAA,WACA,EAAAC,WAAA,aACA,EAAAC,uBAAA,yBANJ,CAAYlC,QAAsB,KI5HlC,ICSKmC,G,GDTL,WAGI,WACYnyB,EACAyL,GAFZ,I,EAAA,OACYzL,gBACAyL,eAyDJ,KAAA2mB,YAAsC,W,MAC1C,EAAKC,aAAyB,QAAb,EAAC,EAAK5mB,mBAAO,WAAErjD,UAG5B,KAAAkqE,aAAuC,W,MAC3C,EAAKD,aAAyB,QAAb,EAAC,EAAK5mB,mBAAO,WAAE8mB,QA5DhClxE,KAAKmxE,OAASp1D,SAASC,cAAc,SACrChc,KAAKmxE,OAAOh7B,MAAM+T,gBAAkB,cACpClqD,KAAKmxE,OAAOh7B,MAAMkK,OAAS,IAC3BrgD,KAAKmxE,OAAOh7B,MAAMmK,QAAU,QAC5BtgD,KAAKmxE,OAAOh7B,MAAM4U,OAAS,OAC3B/qD,KAAKmxE,OAAOh7B,MAAMoV,OAAS,IAC3BvrD,KAAKmxE,OAAOh7B,MAAMi7B,QAAU,OAC5BpxE,KAAKmxE,OAAOh7B,MAAMk7B,QAAU,IAC5BrxE,KAAKmxE,OAAOh7B,MAAMoK,MAAQ,OAC1BvgD,KAAKmxE,OAAO5V,YAAcv7D,KAAK2+C,SAAS4c,aAAe,GAEvDv7D,KAAKmxE,OAAOhhC,iBAAiB,OAAQnwC,KAAK+wE,aAC1C/wE,KAAKmxE,OAAOhhC,iBAAiB,QAASnwC,KAAKixE,cAE3CjxE,KAAKgxE,aAAyB,QAAb,EAAChxE,KAAKoqD,mBAAO,WAAErjD,SAgDvC,OA7CG,YAAAuqE,SAAA,WACI,OAAOtxE,KAAKmxE,OAAO/wE,OAGvB,YAAA8+C,OAAA,WACI,IAAM7M,EAAYt2B,SAAS+3B,eAAe9zC,KAAK2+C,SAAS9f,aAExD,IAAKwT,EACD,MAAM,IAAI,KAGdA,EAAU2G,YAAYh5C,KAAKmxE,SAG/B,YAAAxxB,OAAA,W,MAC0B,QAAtB72C,EAAA9I,KAAKmxE,OAAOv9B,sBAAU,KAAEC,YAAY7zC,KAAKmxE,SAG7C,YAAAt9C,GAAA,SAAGyb,EAAemiB,GACdzxD,KAAKmxE,OAAOhhC,iBAAiBb,EAAOmiB,IAGxC,YAAA8f,IAAA,SAAIjiC,EAAemiB,GACfzxD,KAAKmxE,OAAO7gC,oBAAoBhB,EAAOmiB,IAGnC,YAAAuf,aAAR,SAAqBjxB,GAArB,WACSA,GAIa7+C,OAAOge,KAAK6gC,GAEpBj9C,SAAQ,YACd,EAAKquE,OAAOh7B,MAAMjtC,GAAO62C,EAAO72C,IAAQ,OAWpD,EArEA,GEFO,SAASsoE,GACZ/V,GAEA,QAAUA,EAAkCtgC,YDQhD,SAAK21C,GACD,IAAAvQ,WAAA,gBACA,IAAAkR,uBAAA,4BAFJ,CAAKX,QAAuB,KAK5B,IE0BYY,GAwGAC,GAKAC,GAOAC,GASAC,GAIAC,GAIAC,G,GF/JZ,WAMI,WACYn9B,GADZ,WACYA,4BAyTJ,KAAAk8B,YAA2D,Y,QACtC,QAAzB,EAAiB,QAAjB,IAAKkB,wBAAY,WAAE5V,kBAAM,YAAG,CACxB9xB,UAAW,EAAK2nC,cAAc5iC,EAAM6iC,cAIpC,KAAAC,gBAA8B,W,QACT,QAAzB,EAAiB,QAAjBtpE,EAAA,EAAKmpE,wBAAY,WAAE5V,kBAAM,YAAG,CACxB9xB,UAAWokC,GAAuBgC,YAIlC,KAAAM,aAA4D,Y,QACtC,QAA1B,EAAiB,QAAjB,IAAKgB,wBAAY,WAAE1V,mBAAO,YAAG,CACzBhyB,UAAW,EAAK2nC,cAAc5iC,EAAM6iC,cAIpC,KAAAE,iBAA+B,W,QACT,QAA1B,EAAiB,QAAjBvpE,EAAA,EAAKmpE,wBAAY,WAAE1V,mBAAO,YAAG,CACzBhyB,UAAWokC,GAAuBgC,YAIlC,KAAA2B,sBAAqE,Y,UACtC,QAAnC,EAAiB,QAAjB,IAAKL,wBAAY,WAAE3V,4BAAgB,YAAG,CAClCtX,SAAwB,QAAhB,EAAE1V,EAAMhG,MAAM,cAAE,WAAEv4B,QAI1B,KAAAwhE,0BAAyE,Y,QACnD,QAA1B,EAAiB,QAAjB,IAAKN,wBAAY,WAAEO,mBAAO,YAAG,CACzBjoC,UAAW,EAAK2nC,cAAc5iC,EAAM6iC,cAIpC,KAAAM,sBAAqE,Y,QAC5C,QAA7B,EAAiB,QAAjB,IAAKR,wBAAY,WAAEzV,sBAAU,YAAG,CAC5BZ,QAAU16D,OAAOge,KAAKowB,EAAMmsB,QACvB9sB,OAAM,YAAG,aAAqB,QAArB,EAAIW,EAAMmsB,OAAOvyD,cAAI,WAAE0yD,WACrCh3D,OAAQ,EAAK8tE,qBAAqBpjC,EAAMmsB,WAGnD,OAjWS,YAAAhsC,WAAN,SAAiBzO,G,wIASb,OARAhhB,KAAKiyE,aAAejxD,EAEpBhhB,KAAKy6D,MAAQ+W,GAAyBxwD,EAAQy6C,QAC1CqV,GAAwBvQ,WACxBuQ,GAAwBW,uBAEtBhW,EAASz7D,KAAK2yE,iBAAiB3xD,EAAQy6C,QAEzC,UAAAmX,QAAA,CAAQnX,GACD,CAAP,OAGJ,EAAAz7D,KAAmB,GAAMA,KAAK60C,qBAAqBzjB,mBAAmB,CAClEqqC,OAAM,EACN1b,OAAQ/+B,EAAQ++B,QAAU//C,KAAK6yE,iBAAiB7xD,EAAQ++B,Y,OAmB5D,OArBA,EAAK+yB,YAAc,SAKnB9yE,KAAK8yE,YAAYj/C,GAAG,OAAQ7zB,KAAK+wE,aACjC/wE,KAAK8yE,YAAYj/C,GAAG,QAAS7zB,KAAKixE,cAClCjxE,KAAK8yE,YAAYj/C,GAAG,iBAAkB7zB,KAAKsyE,uBAC3CtyE,KAAK8yE,YAAYj/C,GAAG,iBAAkB7zB,KAAKyyE,uBAC3CzyE,KAAK8yE,YAAYj/C,GAAG,qBAAsB7zB,KAAKuyE,2BAE3Cf,GAAyBxwD,EAAQy6C,UACjCz7D,KAAK+yE,eAAiB,IAAI,GACtB/xD,EAAQy6C,OAAOvgC,SACfla,EAAQ++B,QAEZ//C,KAAK+yE,eAAel/C,GAAG,OAAQ7zB,KAAKoyE,iBACpCpyE,KAAK+yE,eAAel/C,GAAG,QAAS7zB,KAAKqyE,kBACrCryE,KAAK+yE,eAAe7zB,UAGjB,CAAP,cAGE,YAAAvM,aAAN,W,wIACI,SAAsB,QAAtB,EAAM3yC,KAAK8yE,uBAAW,WAAErtE,Y,cAAxB,SACmB,QAAnB,EAAAzF,KAAK+yE,0BAAc,KAAEpzB,S,YAGnB72C,EAAA,UAAAwmD,SAAN,SAAe9oC,G,wJACX,IAAKxmB,KAAK8yE,YACN,MAAM,IAAI,KAAoB,KAAwBjjD,uB,iBAIpC,O,sBAAA,GAAM7vB,KAAK8yE,YAAYxjB,SAAS,UAAAn7B,OAAA,CAAO,CACrD3N,eAAgBA,GAAkBxmB,KAAKgzE,mBAAmBxsD,GAC1DysD,eAAmC,QAArB,EAAEjzE,KAAK+yE,0BAAc,WAAEzB,YACtC,GAAAna,S,OAOH,OAVQh9B,EAAU,SAGR,MAEmB,QAA7B,EAAiB,QAAjB,EAAAn6B,KAAKiyE,wBAAY,WAAEzV,sBAAU,YAAG,CAC5BZ,SAAQA,EACRh3D,OAAQ,KAGL,CAAP,EAAO,CAAEu1B,MAAK,I,OAId,G,WAFMv1B,EAAS5E,KAAKkzE,kBAAkB,GAQlC,MAL6B,QAA7B,EAAiB,QAAjB,EAAAlzE,KAAKiyE,wBAAY,WAAEzV,sBAAU,YAAG,CAC5BZ,SAAQA,EACRh3D,OAAM,IAGJ,IAAI,GAAwBA,GAGtC,MAAM,E,yBAIRkE,EAAA,UAAAqqE,kCAAN,W,wJACI,IAAKnzE,KAAK8yE,YACN,MAAM,IAAI,KAAoB,KAAwBjjD,uB,iBAIpC,O,sBAAA,GAAM7vB,KAAK8yE,YAAYxjB,SAAS,UAAAn7B,OAAA,CAAO,CACrD8+C,eAAmC,QAArB,EAAEjzE,KAAK+yE,0BAAc,WAAEzB,YACtC,GAAAna,S,OAOH,OATQh9B,EAAU,SAER,MAEmB,QAA7B,EAAiB,QAAjB,EAAAn6B,KAAKiyE,wBAAY,WAAEzV,sBAAU,YAAG,CAC5BZ,SAAQA,EACRh3D,OAAQ,KAGL,CAAP,EAAO,CAAEu1B,MAAK,I,OAId,G,WAFMv1B,EAAS5E,KAAKkzE,kBAAkB,GAQlC,MAL6B,QAA7B,EAAiB,QAAjB,EAAAlzE,KAAKiyE,wBAAY,WAAEzV,sBAAU,YAAG,CAC5BZ,SAAQA,EACRh3D,OAAM,IAGJ,IAAI,GAAwBA,GAGtC,MAAM,E,yBAIN,YAAAouE,mBAAR,SAA2BxsD,GACvB,MAAO,CACH6iD,YAAa7iD,EAAe1I,QAC5BD,WAAY2I,EAAe3I,WAC3BoyC,cAAezpC,EAAelJ,SACvBkJ,EAAepJ,SAAQ,IAAIoJ,EAAelJ,SAC7CkJ,EAAepJ,WAInB,YAAAu1D,iBAAR,SACIlX,GAEA,OAAI+V,GAAyB/V,GAClB,UAAAtnC,OAAA,CAAO,CACVnC,OAAQ,CACJqgB,UAAW,IAAIopB,EAAOtgC,WAAW0D,YACjC08B,YAAaE,EAAOtgC,WAAWogC,aAEnC6X,eAAgB,CACZ/gC,UAAW,IAAIopB,EAAOzgC,WAAW6D,YACjC08B,YAAaE,EAAOzgC,WAAWugC,aAEnC8X,IAAK5X,EAAO3gC,UAAY,CACpBuX,UAAW,IAAIopB,EAAO3gC,SAAS+D,YAC/B08B,YAAaE,EAAO3gC,SAASygC,cAElC,GAAApE,OAGA,UAAAhjC,OAAA,CAAO,CACVnC,OAAQypC,EAAO7gC,wBAA0B,CACrCyX,UAAW,IAAIopB,EAAO7gC,uBAAuBiE,YAC7C08B,YAAaE,EAAO7gC,uBAAuB2gC,aAE/C8X,IAAK5X,EAAO/gC,sBAAwB,CAChC2X,UAAW,IAAIopB,EAAO/gC,qBAAqBmE,YAC3C08B,YAAaE,EAAO/gC,qBAAqB6gC,cAE9C,GAAApE,QAGC,YAAA0b,iBAAR,SACI7xD,GAEA,IAAMsyD,EAAY,SAACvzB,GAA0C,gBAA1CA,UAA0C,UAAA5rB,OAAA,CAAO,CAChE81B,MAAOlK,EAAOkK,MACd,cAAelK,EAAO+b,WACtB,YAAa/b,EAAOwzB,SACpB,cAAexzB,EAAOyzB,YACvB,GAAArc,QAEH,MAAO,CACHsc,MAAOH,EAAUtyD,EAAQja,SACzB,WAAYusE,EAAUtyD,EAAQ9hB,OAC9B,SAAUo0E,EAAUtyD,EAAQkwD,SAI5B,YAAAgB,cAAR,SAAsBnhE,GAClB,OAAQA,GACR,IAAK,SACD,OAAO/Q,KAAKy6D,QAAUqW,GAAwBW,uBAC1C9C,GAAuBkC,uBACvBlC,GAAuBiC,WAE/B,IAAK,iBACD,OAAOjC,GAAuB+B,WAElC,IAAK,MACD,OAAO1wE,KAAKy6D,QAAUqW,GAAwBW,uBAC1C9C,GAAuB8B,qBACvB9B,GAAuB6B,SAE/B,QACI,MAAM,IAAI1uE,MAAM,2BAIhB,YAAA4wE,qBAAR,SACIjX,GADJ,WAGI,OAAQv6D,OAAOge,KAAKu8C,GACfz1D,QAAO,SAACzB,EAAQmvE,G,QAAa,OAAC,SAAD,SAAC,uBACxBnvE,KAAM,MACR,EAAK2tE,cAAcwB,KAA4B,QAAhB,IAAOA,cAAS,WAAE9X,gBAAsB,CACpE,EAAK+X,oBAAoB,EAAKzB,cAAcwB,KAC/C,MACD,KAGJ,YAAAR,kBAAR,SACIh0E,G,UADJ,OAGI,MAAmB,+BAAfA,EAAMuoB,OACC,EAAP,IACKznB,KAAKkyE,cAAc,QAAS,CACzBlyE,KAAK4zE,qBAAqB5zE,KAAKkyE,cAAc,SAEjD,EAAClyE,KAAKkyE,cAAc,mBAAoB,CACpClyE,KAAK4zE,qBAAqB5zE,KAAKkyE,cAAc,oBAEjD,EAAClyE,KAAKkyE,cAAc,WAAY,CAC5BlyE,KAAK4zE,qBAAqB5zE,KAAKkyE,cAAc,Y,GAKlB,QAAvCvpE,EAAqB,QAArB,EAAOzJ,iBAAO84C,mBAAO,WAAE67B,4BAAgB,WAAE7tE,QAAO,SAACzB,EAAQmvE,G,MAAa,OAAC,SAAD,SAAC,uBAChEnvE,KAAM,MACR,EAAK2tE,cAAcwB,IAAY,CAC5B,EAAKC,oBAAoB,EAAKzB,cAAcwB,KAC/C,MACD,KAGA,YAAAE,qBAAR,SAA6BrpC,GACzB,OAAQA,GACR,KAAKokC,GAAuB8B,qBAC5B,KAAK9B,GAAuB6B,SACxB,MAAO,CACHjmC,UAAS,EACTv2B,QAAS,kBACTjD,KAAM,YAGd,KAAK49D,GAAuBkC,uBAC5B,KAAKlC,GAAuBiC,WACxB,MAAO,CACHrmC,UAAS,EACTv2B,QAAS,iCACTjD,KAAM,YAGd,KAAK49D,GAAuB+B,WACxB,MAAO,CACHnmC,UAAS,EACTv2B,QAAS,8BACTjD,KAAM,YAGd,KAAK49D,GAAuBgC,SACxB,MAAO,CACHpmC,UAAS,EACTv2B,QAAS,wBACTjD,KAAM,YAGd,QACI,MAAO,CACHw5B,UAAS,EACTv2B,QAAS,oBACTjD,KAAM,cAKV,YAAA4iE,oBAAR,SAA4BppC,GACxB,OAAQA,GACR,KAAKokC,GAAuB8B,qBACxB,MAAO,CACHlmC,UAAS,EACTv2B,QAAS,oBACTjD,KAAM,qBAGd,KAAK49D,GAAuBkC,uBACxB,MAAO,CACHtmC,UAAS,EACTv2B,QAAS,sBACTjD,KAAM,uBAGd,KAAK49D,GAAuB6B,SACxB,MAAO,CACHjmC,UAAS,EACTv2B,QAAS,oBACTjD,KAAM,qBAGd,KAAK49D,GAAuB+B,WACxB,MAAO,CACHnmC,UAAS,EACTv2B,QAAS,sBACTjD,KAAM,uBAGd,KAAK49D,GAAuBiC,WACxB,MAAO,CACHrmC,UAAS,EACTv2B,QAAS,sBACTjD,KAAM,uBAGd,QACI,MAAO,CACHw5B,UAAS,EACTv2B,QAAS,gBACTjD,KAAM,aAgDtB,EA3WA,G,aGMA,WAGI,WACY8jC,EACAi/B,EACAC,GAFAl/B,4BACAi/B,4BACAC,gBAmKf,OAhKG,YAAAtkD,WAAA,SAAWC,EAAqB1O,GAC5BhhB,KAAK60C,qBAAqBplB,WAAWC,GACrC1vB,KAAKg0E,qBAAuBhzD,GAAWA,EAAQ0N,cAGnD,YAAAulD,cAAA,WACI,OAAOj0E,KAAK60C,qBAAqB7kB,aAG/BlnB,EAAA,UAAAorE,aAAN,SAAmBvsD,EAAkCnB,G,sIAElC,OADT2tD,EAAcn0E,KAAKo0E,iBAAiBzsD,EAAQ4R,YAAqC/S,GACxE,GAAMxmB,KAAK60C,qBAAqBjlB,a,OACvB,SADT,SACsB2H,QAAQ48C,I,OAE7C,MAAO,CAAP,EAAO,CAAEh6C,MAFe,SAAiC,YAE7B,GAAGA,gBAG7B,YAAAk6C,WAAN,SAAiB1sD,EAAkCnB,EAAyBjH,G,0IACtC,SAAM9b,QAAQysB,IAAI,CAChDlwB,KAAKk0E,aAAavsD,EAASnB,GAC3BxmB,KAAK60C,qBAAqBrkB,Y,OAG9B,OALM,EAA4BkN,EAAA,OAAzBvD,EAAK,WAAIzL,EAAY,KAKvB,CAAP,EAAO1uB,KAAKs0E,qBAAqB5lD,EAAcnP,EAAQ4a,YAG3D,YAAArL,OAAA,SAAO,GAAP,WAAS4uC,EAAoB,uBAAKr8D,EAAM,mBAAjC,0BACGkzE,EAAgB,UAAAC,eAAA,GAEtB,OAAOx0E,KAAK60C,qBAAqB7kB,YAC5BhM,MAAK,YAOF,OANIuwD,GACA,EAAKR,SAAS50B,KAAK,CACfrD,QAAS,WAAM,SAAO24B,iBAIvB3lD,EAAOwgC,SAAS,oBACnBrY,uBAAsBA,EACtBD,KAAM0mB,EAAuB,QAAU,WACvCgX,WAAY,UACTrzE,OAGV2iB,MAAK,YAGF,OAFA,EAAK+vD,SAASlvE,SAEP8T,KAEVyL,OAAM,YAGH,MAFA,EAAK2vD,SAASlvE,SAER3F,MAIlB,YAAAy1E,aAAA,WACI,OAAO30E,KAAK60C,qBAAqBlkB,mBAC5B3M,MAAK,SAAC,GAAmB,OAAN,EAAD,eAM3B,YAAA4wD,gBAAA,SAAgBC,GAAhB,WACI,OAAOA,EACF7wD,MAAK,YAAe,OAAAvgB,QAAQysB,IAAI,CAACqJ,EAAa,EAAKsb,qBAAqBlkB,wBACxE3M,MAAK,SAAC,G,IAACuV,EAAW,KAAIxI,EAAU,gBAAQ,OAAC,SAAD,SAAC,uBAAKwI,GAAW,CAAErV,gBAAiB6M,QAGrF,YAAA4hB,aAAA,WACI,OAAO3yC,KAAK60C,qBAAqBpvC,YAG/B,YAAAqvE,qBAAN,SAA2B9zD,G,gIAChB,SAAMhhB,KAAK8zE,qBAAqBrkD,WAAWzO,I,OAAlD,MAAO,CAAP,EAAO,kBAGL,YAAA+zD,uBAAN,W,gIACI,SAAM/0E,KAAK8zE,qBAAqBnhC,gB,cAAhC,S,YAGJ7pC,EAAA,UAAAksE,mBAAA,SAAmBxuD,GACf,OAAOxmB,KAAK8zE,qBAAqBxkB,SAAS9oC,IAG9C1d,EAAA,UAAAmsE,4CAAA,WACI,OAAOj1E,KAAK8zE,qBAAqBX,qCAG/B,YAAA+B,yBAAN,SAA+B1uD,EAAyBjH,G,0IAClB,SAAM9b,QAAQysB,IAAI,CAChDlwB,KAAK8zE,qBAAqBxkB,SAAS9oC,GACnCxmB,KAAK60C,qBAAqBrkB,Y,OAG9B,OALM,EAA4B,SAAzB2J,EAAK,WAAIzL,EAAY,KAKvB,CAAP,EAAO1uB,KAAKs0E,qBAAqB5lD,EAAcnP,EAAQ4a,YAGnD,YAAAm6C,qBAAR,SACI5lD,EACAnP,EACA4a,GAHJ,WAKI,IAAKn6B,KAAKg0E,uBAAyB75C,EAC/B,MAAM,IAAI,KAAoB,KAAwBtK,uBAGpD,MAA4B7vB,KAAKg0E,qBAA/BmB,EAAQ,WAAEC,EAAW,cACvBC,EAAmB,kE,4EACJ,SAAM3mD,EAAa2mD,oB,OAIpC,OAJM18D,EAAW,SAEjB28D,EAAahc,OAAO,IAAI,IAEjB,CAAP,EAAO,WAGLgc,EAAe,IAAI,GACrB5mD,EAAa2lD,WAAW,CACpBc,SAAU,SAACj2E,EAAOsgD,GACd21B,EAASj2E,EAAOsgD,EAAQ61B,IAE5B91D,OAAM,EACN4a,MAAK,EACLi7C,YAAW,EACXG,iBAAkB,SAACC,EAAOt1E,GACtBA,QAKZ,OAAOo1E,EAAalc,SAGhB,YAAAgb,iBAAR,SAAyBpH,EAAkCxmD,GACvD,MAAO,CACH0T,KAAM,CACF8yC,WAAY,CACRiG,eAAgBjG,EAAW/xC,OAC3BjJ,OAAQg7C,EAAWryC,SACnB04C,IAAKrG,EAAWvyC,MAChB24C,eAAmBpG,EAAWjyC,SAASnJ,MAAK,IAAIo7C,EAAWjyC,SAASjJ,KACpE9Q,QAAS,CACLuwC,UAASA,GAEb/qC,eAAgBA,GAAkB,CAC9BivD,kBAAmBjvD,EAAezI,YAClCoyC,SAAU3pC,EAAejJ,KACzB8rD,YAAa7iD,EAAe1I,QAC5BD,WAAY2I,EAAe3I,WAC3BoyC,cAAezpC,EAAelJ,SACvBkJ,EAAepJ,SAAQ,IAAIoJ,EAAelJ,SAC7CkJ,EAAepJ,YAI/Bs4D,SAAU,+BACV9vD,OAAQ,SAGpB,EAzKA,G,YCPA,WAKI,WACY+rB,EACAkmB,EACAyJ,EACAzuB,EACA8iC,GAJAhkC,cACAkmB,2BACAyJ,6BACAzuB,mCACA8iC,kCAsLf,OAnLS,YAAAlmD,WAAN,SAAiBzO,G,oJACC,SAAMhhB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBtD,EAAQuD,Y,OAGpG,GAHMuQ,EAAQ,WACRuD,EAAgBvD,EAAMwD,eAAeC,iBAAiBvX,EAAQuD,aAE7C8T,EAAc3I,YACjC,MAAM,IAAI,IAAiB,IAAqB/e,sB,8CAIhD3Q,KAAK21E,2BAA2BlmD,WAAW4I,EAAc3I,YAAa1O,EAAQuN,WAE1EvuB,KAAK0sE,4BAA4B1rD,EAAQuD,SAAUvD,EAAQwX,aAA+B,QAArB,EAAIxX,EAAQuN,qBAAS,WAAEsf,OAC5F,EAAA7tC,KAAgC,GAAMA,KAAK21E,2BAA2Bb,qBAAqB9zD,EAAQuN,UAAUsf,QAD7G7tC,M,OACA,EAAK41E,yBAA2B,S,iBAIZ,OADxB51E,KAAK61E,cAAgBx9C,EAAch3B,OAAO+oE,aAC1C,EAAApqE,KAAwB,GAAMA,KAAK21E,2BAA2BhB,gB,cAA9D,EAAKmB,iBAAmB,S,+BAExB91E,KAAK+1E,aAAa,G,aAGtB,MAAO,CAAP,EAAO/1E,KAAK2xC,OAAO5c,oBAGjB,YAAAy8B,QAAN,SAAcua,EAAgC/qD,G,8JAG1C,GAFQ2G,EAAsBokD,EAAY,QAAtB7kD,EAAK,iBAAK6kD,EAAxB,cAEDpkD,EACD,MAAM,IAAI,GAA4B,CAAC,YAG7B,SAAM3nB,KAAK2xC,OAAOc,SAC5BzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAShD,GAVM8T,EAAQ,SAKQ8P,EAGlB9P,EAAK,wCAFIoY,EAETpY,EAAK,0BAALA,EAAK,+BAEkB5N,EAAM4lB,gBAC7B,MAAO,CAAP,EAAO,G,8CAIA,KAAA9sC,KAAK2xC,QAAOc,SAAS,KAAAzyC,KAAKshE,uBAAsBlmC,c,yBAChDzT,I,KACU3nB,KAAK41E,yBACd,GAAM51E,KAAKg2E,0BACPruD,EACAid,IACAsI,IAAkBljB,cAJbhqB,M,cACT,W,aAKA,SAAMA,KAAKi2E,oBACPtuD,EACAid,IACAsI,IAAkBljB,c,OAHtB,W,iBARR,MAAO,CAAP,EAAO,WAAqB,8CAExB,EAAAuP,YAAW,a,yBAafv5B,KAAK+1E,aAAa,G,+BAI1B,YAAA/d,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGxB,YAAAyvC,aAAN,W,gIAGI,OAFA3yC,KAAK41E,4BAEL,GAAMnyE,QAAQysB,IAAI,CACdlwB,KAAK21E,2BAA2BhjC,eAChC3yC,KAAK21E,2BAA2BZ,4B,OAGpC,OALA,SAKO,CAAP,EAAO/0E,KAAK2xC,OAAO5c,oBAGf,YAAAghD,aAAR,SAAqB72E,GACjB,GAAmB,mBAAfA,EAAMmJ,KACN,MAAM,IAAI,KAAyBnJ,EAAM8U,SAG7C,MAAM9U,GAGI,YAAA+2E,oBAAd,SAAkCtuD,EAAkCnB,EAAyBwD,G,kJAGzF,OAFMksD,EAAoB,CAAEhyD,gBAAiBlkB,KAAK81E,kBAE9C91E,KAAKm2E,4BAA4BxuD,IAAY3nB,KAAKo2E,kBAAkBzuD,GAC7D,CAAP,2CACOuuD,GACAvuD,EAAQ4R,cAIfv5B,KAAKq2E,8BAA8B1uD,I,yBAE5BuuD,IACA,EAAAl2E,KAAKs2E,sB,yBACD3uD,EAAQ4R,cACR,GAAMv5B,KAAK21E,2BAA2BtB,WAAW1sD,EAASnB,EAAgBwD,KALrFhqB,M,OACA,MAAO,CAAP,oCAEO,QAAAA,KAAI,mCAEA,kB,OASJ,O,yBAHJk2E,IACA,EAAAl2E,KAAKs2E,sB,yBACD3uD,EAAQ4R,cACR,GAAMv5B,KAAK21E,2BAA2BzB,aAAavsD,EAASnB,I,OAJvE,MAAO,CAAP,oCAEO,QAAAxmB,KAAI,mCAEA,0BAKD,YAAAg2E,0BAAd,SAAwCruD,EAAkCnB,EAAyBwD,G,+JACzFksD,EAAoB,CAAEhyD,gBAAiBlkB,KAAK81E,kBAE9C91E,KAAKq2E,8BAA8B1uD,I,yBAE5BuuD,IACA,EAAAl2E,KAAKs2E,sB,yBACD3uD,EAAQ4R,cACR,GAAMv5B,KAAK21E,2BAA2BT,yBAAyB1uD,EAAgBwD,KAL1FhqB,M,OACA,MAAO,CAAP,oCAEO,QAAAA,KAAI,mCAEA,kB,cAKXA,KAAKm2E,4BAA4BxuD,I,yBAE1BuuD,IACA,EAAAl2E,KAAKu2E,6C,yBACD5uD,EAAQ4R,cACR,GAAMv5B,KAAK21E,2BAA2BV,gDALjDj1E,M,OACA,MAAO,CAAP,oCAEO,QAAAA,KAAI,mCAEA,kB,OASJ,O,yBAHJk2E,IACA,EAAAl2E,KAAKs2E,sB,yBACD3uD,EAAQ4R,cACR,GAAMv5B,KAAK21E,2BAA2BX,mBAAmBxuD,I,OAJpE,MAAO,CAAP,oCAEO,QAAAxmB,KAAI,mCAEA,0BAKP,YAAAs2E,sBAAR,SAA8Bz9D,GAC1B,OAAO,UAAAihB,KAAA,CAAKjhB,EAA+B,QAAS,uBAAwB,iCAGxE,YAAA09D,6CAAR,SAAqD19D,GACjD,OAAO,UAAAihB,KAAA,CAAKjhB,EAAsD,QAAS,iBAGvE,YAAA6zD,4BAAR,SAAoCnoD,EAAmBiU,GACnD,QAAKjU,SAO+C,EAHIvkB,KAAK2xC,OAAO5c,WAAU,wCAChCxQ,EAAUiU,GAEnCn3B,OAAO6rE,qBAGxB,YAAAiJ,4BAAR,SAAoCxuD,GAChC,SAAUA,EAAQ4R,cAAe,aAAoB5R,EAAQ4R,eAGzD,YAAA68C,kBAAR,SAA0BzuD,G,MACtB,SAAUA,EAAQ4R,cAA8E,QAAnE,EAAK5R,EAAQ4R,uBAAsD,WAAEmkC,wBAG9F,YAAA2Y,8BAAR,SAAsC1uD,GAClC,SAAU3nB,KAAK61E,eAAkB71E,KAAKm2E,4BAA4BxuD,KAE1E,EAhMA,G,GCEA,WAGI,WACYgqB,EACAkmB,EACAyJ,EACAzuB,EACA8iC,EACAa,sBALA7kC,cACAkmB,2BACAyJ,6BACAzuB,mCACA8iC,kCACAa,eAuJf,OApJS,YAAA/mD,WAAN,SAAiBzO,G,0IAOb,OANmBy1D,EAA+Bz1D,EAAO,UAApBuD,EAAavD,EAAO,SAEpDhhB,KAAKm1C,gBAAmBn1C,KAAKm1C,eAAehb,QAC7Cn6B,KAAKm1C,eAAiBn1C,KAAK2xC,OAAO5c,WAAWuD,eAAeyS,wBAAwBxmB,IAGpFvkB,KAAKm1C,eAAezlB,YACb,CAAP,EAAO1vB,KAAK02E,YAAYD,IAGd,GAAMz2E,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,K,OAG5F,GAHMuQ,EAAQ,SACd90B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeyS,wBAAwBxmB,IAE9DvkB,KAAKm1C,eAAezlB,YACrB,MAAM,IAAI,IAAiB,IAAqB/e,sBAGpD,MAAO,CAAP,EAAO3Q,KAAK02E,YAAYD,YAG5B,YAAAjlB,QAAA,SAAQua,EAAgC/qD,GAAxC,WACY2G,EAAsBokD,EAAY,QAAtB7kD,EAAK,iBAAK6kD,EAAxB,aAEN,IAAKpkD,EACD,MAAM,IAAI,GAA4B,CAAC,YAG3C,OAAQA,EAAU3nB,KAAKi2E,oBAAoBtuD,EAAST,EAAM4lB,gBAAkBrpC,QAAQR,QAAQ0kB,IACvF3D,MAAK,YAAW,OAAAvgB,QAAQysB,IAAI,CAACvI,EAAS,EAAKgqB,OAAOc,SAAS,EAAKolB,oBAAoBZ,YAAY/vC,EAAOlG,SACvGgD,MAAK,SAAC,G,IAAC2D,EAAO,KAAM,SAAKgqB,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAczT,OAClFvD,OAAM,SAACllB,GAAiB,SAAK62E,aAAa72E,OAGnD,YAAA84D,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAyvC,aAAA,sBACI,OAAO3yC,KAAK21E,2BAA2BhjC,eAClC3uB,MAAK,WAAM,OAAAlb,EAAK6oC,OAAO5c,eAGxB,YAAAghD,aAAR,SAAqB72E,GACjB,ICzEO,SAA0BA,GACrC,MAAsB,mBAAfA,EAAMmJ,KADF,CDyEenJ,GAClB,MAAMA,EAGV,GAAmB,wBAAfA,EAAMuoB,KACN,MAAM,IAAI,GAA4BvoB,EAAM8U,SAGhD,MAAM,IAAI,KAAyB9U,EAAM8U,UAG/B,YAAAiiE,oBAAd,SAAkCtuD,EAAkCmlB,G,uKAMhE,GALMhY,EAAQ90B,KAAK2xC,OAAO5c,WAEpBhL,EAAa+K,EAAMvJ,SAASshB,sBAAsBC,GAClDzrC,EAASyzB,EAAMzzB,OAAOw3B,kBAEvB9O,EACD,MAAM,IAAI,IAAiB,IAAqB7Z,iBAGpD,IAAK7O,EACD,MAAM,IAAI,IAAiB,IAAqBgP,uBAGpD,IAAKrQ,KAAKm1C,eACN,MAAM,IAAI,KAAoB,KAAwBtlB,uB,OAGlDvI,EAA8CjmB,EAAM,SAA1Bu4C,EAAoBv4C,EAAM,2BACtD,EAA2CrB,KAAKm1C,eAA9Chb,EAAK,QAAYw8C,EAAiB,2BAClCpyD,EAA+BoD,EAAO,SAA5B,EAAqBA,EAAO,YAA5B,WAAc,KAAE,EAE9BwS,EACc,GAAMn6B,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,KAD5F4V,M,OAIA,OAHM,EAAQ,SACdn6B,KAAKm1C,eAAiB,EAAM7c,eAAeC,iBAAiBhU,GAErD,CAAP,EAAO9gB,QAAQR,QAAQ,yCAAK0kB,GAAO,CAAE4R,YAAav5B,KAAK42E,kBAAkBz8C,O,OAG7E,GAAI,aAAoBZ,IAAgB,aAA0BA,GAAc,CAC5E,IAAKo9C,EACD,MAAM,IAAI,KAAqB,qFAGnC,MAAO,CAAP,EAAOlzE,QAAQR,QAAQ0kB,IAG3B,GAAI4R,EAAYmkC,uBAAyBiZ,EACrC,MAAM,IAAI,KAAqB,gEAOnC,OAJMjhD,EAAkBZ,EAAMY,gBAAgB+C,qBAExC0e,EAA0BzhB,EE5H7B,CACHuiB,eAFsDr7B,EF6HkC8Y,GE3H9D1Y,UAAS,IAAIJ,EAAQK,SAC/Cq7B,MAAO17B,EAAQQ,SACfo7B,MAAO57B,EAAQU,SACfC,KAAMX,EAAQW,KACduX,MAAOlY,EAAQe,oBACfE,WAAYjB,EAAQiB,WACpBE,YAAanB,EAAQmB,YACrBC,MAAOpB,EAAQoB,cFsHR,CAAP,EAAOva,QAAQysB,IAAI,CACflwB,KAAK21E,2BAA2B7mD,OAAO,CACnCvP,OAAQwK,EACRklC,OAAQrV,EACRtyB,SAAUA,EAASG,KACnB4vB,YAAar3C,KAAKw2E,QAClBr/B,wBAAuB,EACvBumB,qBAAsBnkC,EAAYmkC,2BAEtC19D,KAAK21E,2BAA2BhB,iBACjC3wD,MAAK,SAAC,G,IACL,oBAAqB,GAAS,EAA5BmW,EAAK,QAAE6d,EAAO,UAChBud,EAAS,KACP,OAAC,SAAD,SAAC,uBACA5tC,GAAO,CACV4R,YAAa,EAAKq9C,kBAAkBz8C,EAAO6d,GAAWA,EAAQnxB,MAAO0uC,EAAWh8B,EAAYmkC,qBAAsBnkC,EAAYokC,oCE9I3H,IAA+C/gD,SFkJlD,YAAAg6D,kBAAR,SAA0Bv9D,EAAewN,EAAgB0uC,EAAoBshB,EAAkClZ,GAC3G,MAAO,CACHxkD,iBAAkB,CACdykD,yBAA0BiZ,GAA0B,KACpDhZ,iCAAkCF,GAAgC,KAClEmZ,YAAavhB,GAAa,KAC1BwhB,eAAgB,CACZ19D,MAAK,EACLwN,MAAOA,GAAS,SAMxB,YAAA6vD,YAAR,SAAoBD,GAChB,IAAKz2E,KAAKm1C,iBAAmBn1C,KAAKm1C,eAAezlB,YAC7C,MAAM,IAAI,IAAiB,IAAqB/e,sBAGpD,IACI3Q,KAAK21E,2BAA2BlmD,WAAWzvB,KAAKm1C,eAAezlB,YAAa+mD,GAE5Ez2E,KAAK21E,2BAA2B1B,gBAClC,MAAO/0E,GACLc,KAAK+1E,aAAa72E,GAGtB,OAAOuE,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAE3C,EAhKA,G,GGHA,WAGI,WACY4c,EACA4B,EACAV,EACA64B,EACApK,EACAzJ,EACA9D,EACAC,GAPAriB,cACA4B,8BACAV,mCACA64B,qCACApK,6BACAzJ,2BACA9D,8CACAC,iCAoHf,OAjHG,YAAAvkC,WAAA,SAAWzO,GAAX,WACmCkzC,EAAkClzC,EAAO,sBAApBuD,EAAavD,EAAO,SAExE,IAAKkzC,EACD,MAAM,IAAI,KAAqB,kGAGnC,OAAOl0D,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,IAC1EP,MAAK,YACF,EAAKmxB,eAAiBrgB,EAAMwD,eAAeC,iBAAiBhU,GAE5D,IAAMgH,EAAWuJ,EAAMvJ,SAAS4J,cAC1ByD,EAAc9D,EAAMzzB,OAAOw3B,iBAEjC,IAAKtN,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,IAAK0oB,EACD,MAAM,IAAI,IAAiB,IAAqBvoB,uBAGpD,IAAK,EAAK8kC,iBAAmB,EAAKA,eAAezlB,YAC7C,MAAM,IAAI,IAAiB,IAAqB/e,sBAIhD,MAEAujD,EAAmB,QAFnB,WAAU,eAAQ,EAClB,EACAA,EAAmB,gBADnB,WAAkB,eAAQ,EAGxBC,EAAc,CAChBlF,OAAQr2B,EAAYmB,aAAa6f,cACjCsV,iBAAgBA,EAChBrnC,SAAU0D,EAAS1D,SACnBq9B,aAActsB,EAAYtR,SAASG,MAGvC,OAAOhkB,QAAQysB,IAAI,CACf,EAAK8jC,0BAA0Bna,KAAK,EAAK1E,eAAe9zC,OAAO+yC,UAC/D,EAAK2f,uCAAuCtkC,WAAW,EAAK0lB,eAAezlB,YAAaykC,KAE3FnwC,MAAK,SAAC,G,IAACkL,EAAY,KAAE8nD,EAAe,KACjC9nD,EAAamlC,KAAK2iB,GAClB9nD,EAAa2E,GAAG,mBAAmB,SAACygC,GAChC,SAAKC,2BAA2BD,GAC3BtwC,MAAK,WAAM,cACXI,OAAM,YAAS,SAAQllB,SAEhCgwB,EAAa2E,GAAG,iBAAiB,SAACtO,EAAGrmB,GAAU,SAAQA,YAG9D8kB,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAAy8B,QAAA,SAAQua,EAAgC/qD,GAAxC,WACY2G,EAAsBokD,EAAY,QAAtB7kD,EAAK,iBAAK6kD,EAAxB,aAEN,IAAKpkD,EACD,MAAM,IAAI,KAAqB,gFAGnC,IAAK3nB,KAAKm1C,iBAAmBn1C,KAAKm1C,eAAe3a,qBAAuBx6B,KAAKm1C,eAAe3a,mBAAmBL,MAC3G,MAAM,IAAI,IAAiB,IAAqBxpB,sBAG5C,MAAU3Q,KAAKm1C,eAAe3a,mBAAkB,MAExD,OAAOx6B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,IACnEgD,MAAK,WACF,SAAK2tB,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAc,yCAAKzT,GAAO,CAAE4R,YAAa,CAAEY,MAAK,UAEnG/V,OAAM,SAACllB,GAAiB,SAAK62E,aAAa72E,OAGnD,YAAA84D,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAyvC,aAAA,sBACI,OAAO3yC,KAAK+zD,uCAAuCphB,eAC9C3uB,MAAK,WAAM,OAAAlb,EAAK6oC,OAAO5c,eAGxB,YAAAw/B,2BAAR,SAAmCD,GAAnC,WACUx/B,EAAQ90B,KAAK2xC,OAAO5c,WAE1B,IAAK/0B,KAAKm1C,eACN,MAAM,IAAIrzC,MAAM,kCAGZ,IAAIyiB,EAAavkB,KAAKm1C,eAAc,GAE5C,OAAOn1C,KAAK2xC,OAAOc,SAASzyC,KAAK0rE,8BAA8Bxd,mBAAkB,WAC7E,OAAO,EAAK6F,uCAAuC3a,cAC/Ckb,EACAx/B,EAAMY,gBAAgB+C,qBACtB3D,EAAMtO,eAAe0R,qBAExBlU,MAAK,WAAM,OAAAvgB,QAAQysB,IAAI,CACpB,EAAKyhB,OAAOc,SAAS,EAAKc,uBAAuBne,uBACjD,EAAKuc,OAAOc,SAAS,EAAKI,4BAA4BvuB,kBAAkBC,WAE7E,CAAEA,SAAQ,IAAK,CAAEiuB,QAAS,uBAGzB,YAAAujC,aAAR,SAAqB72E,GACjB,GAAmB,mBAAfA,EAAMmJ,KACN,MAAM,IAAI,KAAyBnJ,EAAM8U,SAG7C,MAAM9U,GAEd,EA/HA,G,GCCA,WACI,WACYyyC,EACA2vB,EACA2V,GAFAtlC,cACA2vB,6BACA2V,uBA6Ff,OA1FS,YAAA1J,QAAN,SAAc3nD,G,gIACV,SAAM5lB,KAAKi3E,gBAAgBp9B,KAAKj0B,EAAO7I,GAAI6I,EAAOvkB,OAAO+yC,W,cAAzD,S,YAGE,YAAAo5B,MAAN,SACIhc,EACA1sC,EACA9D,EACAk2D,G,sKAEuB7tC,EAAwBrpC,KAAK2xC,OAAO5c,WAAU,8BAC7D,EAA+BjQ,EAAO,QACtCtb,GADA,WAAU,GAAE+a,SAAU,IAAI,GACE,YAA5B,WAAc,KAAE,E,iBAGb,O,uBAAA,GAAMitC,EAAQ1sC,EAAS9D,I,OAA9B,MAAO,CAAP,EAAO,U,oCAEc,MAAsC,+BAAtB,EAAMxI,KAAKE,QACtCW,EAAmD,QAA9C,EAAwC,QAAxC,EAAG,EAAMb,KAAK8hD,sCAA0B,WAAEpgC,gBAAI,WAAE7gB,MACrD89D,EAAgC,QAA7B,EAAG,EAAM3+D,KAAK4+D,2BAAe,WAAEC,mBAExC,GAAMr3E,KAAKi3E,gBAAgB/hB,UAAU77C,KAJrC,O,cAIA,UAEMsjD,EAAM38D,KAAKs3E,QAAQ/9C,EAAa8P,EAAmB6tC,IAGrD,GAAMl3E,KAAKi3E,gBAAgBM,cAAc5a,IADzC,M,OACA,S,iBAIO,O,uBAAA,GAAM38D,KAAKw3E,eAAe7vD,EAAS,CAAEwvD,IAAG,GAAID,I,OAAnD,MAAO,CAAP,EAAO,U,oCAEc,MAAgB,UAAA7qD,KAAA,CAAK,EAAM7T,KAAK5T,OAAQ,CAAC6iB,KAAM,6BAC1DgwD,EAAgB,EAAMj/D,KAAK4+D,gBAC3B,EAAQK,iBAAeJ,mBAE7B,GAAMr3E,KAAKi3E,gBAAgBS,oBAAoBD,EAAez3E,KAAK23E,mBAJnE,O,OAMO,OAFP,SAEO,GAAM33E,KAAKw3E,eAAe7vD,EAAS,CAAEtO,MAAK,GAAI69D,I,QAArD,MAAO,CAAP,EAAO,U,QAGX,MAAM,E,QAId,MAAM,E,0BAIN,YAAAS,cAAR,WACI,IAAMzyD,EAAQllB,KAAK2xC,OAAO5c,WACpBvO,EAAiBtB,EAAMsB,eAAeoe,2BACtClP,EAAkBxQ,EAAMwQ,gBAAgB+C,qBACtC,EAAmEvT,EAAMqG,SAASqhB,qBAAoB,KAA5EsY,EAAY,gBAAgB3lC,EAAM,aAGpE,MAAO,CAAEiH,eAAc,EAAEkP,gBAAe,EAAEwvB,aAAY,EAAEnoC,GAF7CmI,EAAMgC,MAAMgmB,kBAAkB3lB,QAAQnG,WAEW7B,OAAM,IAGxD,YAAAi4D,eAAd,SACI7vD,EACA+G,EACAwoD,G,6IAEMvT,EAAiB,UAAAnvC,MAAA,CAAM,GAAI7M,EAAS,CAAE4R,YAAa,CAAE7K,aAAY,KAElEwoD,EAAD,MACO,GAAMl3E,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAcuoC,K,OAA3E,MAAO,CAAP,EAAO,U,OAGX,SAAMuT,EAAWja,OAAO0G,I,OAExB,OAFA,SAEO,CAAP,EAAO3jE,KAAK2xC,OAAO5c,oBAGf,YAAAuiD,QAAR,SACI/9C,EACA8P,EACA6tC,GAEA,IAAMr+D,EAAa,aAAoB0gB,IAAgB8P,EAAkB9P,EAAYxgB,cAC/E4hB,ECtGC,SAA0B9hB,GACrC,IAAMoZ,EAAOpZ,EAEb,OAAQ,aAAoBoZ,IACD,iBAAhBA,EAAKgJ,QACa,iBAAlBhJ,EAAK0I,UACa,YAAlB1I,EAAK8I,WACmB,iBAAxB9I,EAAK8I,SAASnJ,OACS,iBAAvBK,EAAK8I,SAASjJ,KARd,CDsG2ByH,IAAgBA,EAAYoB,SAO9D,OANY9hB,EACRA,EAAW++D,IACXV,EACIA,iBAAYta,SACZjiC,IAEM,IAEtB,EAjGA,GPfak9C,GAAoC,CAAC,OAAQ,KAAM,KAAM,OA0CtE,SAAYnG,GACR,EAAAoG,KAAA,OACA,EAAAC,SAAA,WACA,EAAAC,QAAA,UAHJ,CAAYtG,QAA0B,KAwGtC,SAAYC,GACR,EAAAsG,eAAA,yBACA,EAAAv8D,UAAA,qBAFJ,CAAYi2D,QAAiB,KAK7B,SAAYC,GACR,EAAAsG,QAAA,UACA,EAAAC,SAAA,WACA,EAAAC,QAAA,UACA,EAAAt2E,MAAA,QAJJ,CAAY8vE,QAAuB,KAOnC,SAAYC,GACR,EAAAwG,IAAA,MACA,EAAAC,OAAA,SACA,EAAAnN,OAAA,SACA,EAAAoN,aAAA,eACA,EAAAC,SAAA,WACA,EAAAC,eAAA,iBANJ,CAAY5G,QAAmB,KAS/B,SAAYC,GACR,EAAA4G,WAAA,cADJ,CAAY5G,QAAqB,KAIjC,SAAYC,GACR,EAAAsG,IAAA,MADJ,CAAYtG,QAAoB,KAIhC,SAAYC,GACR,EAAA2G,IAAA,IACA,EAAAC,GAAA,IAFJ,CAAY5G,QAA6B,KS1JzC,ICvBY6G,G,GDuBZ,WAMI,WACY1qD,wBANJ,KAAA2qD,UAAoB,GACpB,KAAA1wB,WAAA,EAEA,KAAA2wB,oBAA8B,GAmLzC,OA7KG,YAAAl/B,KAAA,SAAKlW,EAAkByQ,GAQnB,YAAO,IARYA,UACnBp0C,KAAK84E,UAAYn1C,EACjB3jC,KAAKooD,UAAYhU,EAEZp0C,KAAKg5E,OACNh5E,KAAKg5E,KAAOh5E,KAAKmuB,cAAc0rB,KAAKlW,EAAUyQ,IAG3Cp0C,KAAKg5E,KAAKh1D,MAAK,gBAG1B,YAAAkxC,UAAA,SAAUxlC,GAAV,WACI,GAAM1vB,KAAK+4E,oBAAqB,CAC5B,GAAI/4E,KAAK+4E,sBAAwBrpD,EAC7B,OAAOjsB,QAAQR,UAEfjD,KAAKg5E,KAAOh5E,KAAKmuB,cAAc0rB,KAAQ75C,KAAK84E,UAAS,IAAI73D,KAAK++B,MAAShgD,KAAKooD,WAIpF,OAAOpoD,KAAKi5E,gBACPj1D,MAAK,YAAU,WAAIvgB,SAAc,SAACR,EAASC,GACxCsrB,EAAOqF,GAAG89C,GAAkBsG,gBAAgB,WACxCzpD,EAAO+iD,IAAII,GAAkBsG,gBAC7BzpD,EAAO+iD,IAAII,GAAkBj2D,WAE7B,EAAKq9D,oBAAsBrpD,EAE3BzsB,OAGJurB,EAAOqF,GAAG89C,GAAkBj2D,WAAW,SAACwe,GAIpC,OAHA1L,EAAO+iD,IAAII,GAAkBsG,gBAC7BzpD,EAAO+iD,IAAII,GAAkBj2D,WAErBwe,EAAKg/C,YACT,KAAKtH,GAAwB9vE,MACrB,UAAA6c,SAAA,CAASk5D,GAAmC39C,EAAKi/C,cACjDj2E,EAAO,IAAI,IAAiB,IAAqByN,uBAErDzN,EAAO,IAAI,KAAyBg3B,EAAKk/C,uBAKrD5qD,EAAO6qD,MAAM3H,GAA2BoG,KAAM,CAC1CwB,IAAK5pD,WAKrB,YAAA6nD,cAAA,SAAcgC,GACV,OAAOv5E,KAAKi5E,gBACPj1D,MAAK,YAAU,SAAO2sB,QAAQmhC,GAAsB4G,WAAYa,GAAWn1D,OAAM,kBACjFJ,MAAK,YACF,IAAKzf,IAAWA,EAAOi1E,OACnB,MAAM,IAAI,KAAoB,KAAwB3pD,2BAKtE,YAAA6nD,oBAAA,SAAoB+B,EAAiCC,GAArD,WACI,OAAO15E,KAAKi5E,gBACPj1D,MAAK,YACF,OAAO,IAAIvgB,SAA2B,SAACR,EAASC,GAC5CsrB,EAAOqF,GAAG89C,GAAkBj2D,WAAW,SAACwe,EAA6Bo/C,GAEjE,GADA9qD,EAAO+iD,IAAII,GAAkBj2D,YACxB49D,EACD,OAAOp2E,EAAO,IAAI,KAAyBg3B,EAAKk/C,iBAAmBl/C,EAAKk/C,iBAAmB,+DAG/F,IAAKl/C,EAAKg/C,WACN,OAAOj2E,EAAQ,CAAEoW,MAAOigE,IAG5B,OAAQp/C,EAAKg/C,YACT,KAAKtH,GAAwBsG,QACzB,OAAOj1E,EAAQ,CAAEoW,MAAOigE,IAC5B,KAAK1H,GAAwBuG,SACzB,OAAIj+C,EAAKi/C,YAAc,EACZj2E,EAAO,IAAI,KAAyBg3B,EAAKk/C,mBACxCl/C,EAAKy/C,SAAYz/C,EAAKy/C,QAAQC,cAAgB1/C,EAAKy/C,QAAQC,aAAaC,wBAA0B7H,GAA8B2G,IAIrI11E,EAAQ,CAAEoW,MAAOigE,IAHbp2E,EAAO,IAAI,KAAyB,kDAInD,KAAK0uE,GAAwBwG,QACzB,OAAOl1E,EAAO,IAAI,KAAyB,6FAC/C,KAAK0uE,GAAwB9vE,MACzB,OAAOoB,EAAO,IAAI,KAAyBg3B,EAAKk/C,uBAI5D,IAAMU,EAAiB,CACnBC,OAAQN,EAAiBO,QACzBC,QAASR,EAAiBS,eAGxBC,EAAe,EAAKC,mBAAmBV,EAAWD,EAAiBpC,oBAEzE7oD,EAAO6rD,SAAStI,GAAqBsG,IAAKyB,EAAgBK,UAKlE,YAAAC,mBAAR,SAA2BV,EAA8BY,GACrD,IAAMC,EAA6B,CAC/BC,eAAgBx6E,KAAKy6E,sBAAsBf,EAAUlzD,iBAezD,OAZIkzD,EAAUngD,cACVghD,EAASG,QAAU16E,KAAK26E,sBAAsBjB,EAAUngD,cAGxDmgD,EAAUlzD,eAAeK,QACzB0zD,EAASK,OAASlB,EAAUlzD,eAAeK,OAG3C6yD,EAAUhkD,kBACV6kD,EAASM,gBAAkB76E,KAAKy6E,sBAAsBf,EAAUhkD,kBAG5D,CACJolD,SAAUP,EACVQ,aAAc,CACVC,YAAatB,EAAU38D,GACvBk+D,OAAQvB,EAAUn6D,OAClB27D,aAAcxB,EAAUx0B,aACxBi2B,aAAc,IACdC,cAAed,KAKnB,YAAAK,sBAAR,SAA8BphD,GAC1B,MAAO,CACH8hD,cAAej7B,OAAO7mB,EAAYoB,UAClC2gD,gBAAiBl7B,OAAO7mB,EAAYwB,SAASnJ,OAC7C2pD,eAAgBn7B,OAAO7mB,EAAYwB,SAASjJ,MAC5C0pD,cAAejiD,EAAY0B,OAC3Bu1C,SAAUpwB,OAAO7mB,EAAYkB,SAI7B,YAAAggD,sBAAR,SAA8B79D,GAC1B,IAAM6+D,EAAmC,CACrCC,UAAW9+D,EAAQI,UACnB2+D,SAAU/+D,EAAQK,SAClB2+D,SAAUh/D,EAAQQ,SAClBy+D,KAAMj/D,EAAQW,KACdu+D,MAAOl/D,EAAQa,gBACfs+D,WAAYn/D,EAAQiB,WACpBm+D,YAAap/D,EAAQmB,aAWzB,OARInB,EAAQU,WACRm+D,EAAgBQ,SAAWr/D,EAAQU,UAGnCV,EAAQoB,QACRy9D,EAAgBS,OAASt/D,EAAQoB,OAG9By9D,GAGH,YAAAxC,cAAR,WACI,IAAKj5E,KAAKg5E,KACN,MAAM,IAAI,KAAoB,KAAwBnpD,uBAG1D,OAAO7vB,KAAKg5E,MAEpB,EAvLA,G,GEdA,WACI,WACY7qD,EACAC,0BADAD,qBACAC,eAgBf,OAbG,YAAAyrB,KAAA,SAAKlW,EAAkByQ,GAAvB,WACUx4B,EAAMw4B,EAVC,gEACA,4DAWb,OAAOp0C,KAAKmuB,cACPG,WAAW1S,EAAM,MAAQ+nB,GACzB3f,MAAK,WACF,IAAK,EAAKoK,QAAQ+tD,SACd,MAAM,IAAI,KAGd,OAAO,EAAK/tD,QAAQ+tD,aAGpC,EAnBA,G,GCMA,WACI,WACYxqC,EACA2vB,EACAzuB,EACAokC,GAHAtlC,cACA2vB,6BACAzuB,mCACAokC,uBA+Ef,OA5ES,YAAA1J,QAAN,SAAc3nD,G,wIACV,SAAM5lB,KAAKi3E,gBAAgBp9B,KAAKj0B,EAAO7I,GAAI6I,EAAOvkB,OAAO+yC,W,OACpB,OADrC,SACM,KAAAp0C,KAAKi3E,iBAAgB/hB,UAAU,GAAMl1D,KAAKo8E,gBAAgBx2D,I,OAAhE,SAAM,WAA+B,Y,cAArC,S,YAGE,YAAA4nD,MAAN,SACIhc,EACA1sC,EACA9D,EACAk2D,G,qKAEM,EAAsFl3E,KAAK2xC,OAAO5c,WAAjFsU,EAAiB,gCAAsB0B,EAAuB,yCAC7E,EAAsDjmB,EAAO,QAAlD,GAAX,aAA+C,GAAE,GAAtCP,SAAA,WAAW,KAAE,EAAE,IAAAgV,YAAA,WAAc,KAAE,EAC5C1gB,EAAa,aAAoB0gB,IAAgB8P,EAAkB9P,EAAYxgB,eAC/E4jD,EAAM9jD,EAAaA,EAAW++D,IAAMV,GAAcA,EAAWta,UAG/D,GAAM58D,KAAKi3E,gBAAgBM,cAAc5a,IADzC,M,OACA,S,iBAIO,O,sBAAA,GAAMnL,EAAQ,UAAAh9B,MAAA,CAAM1P,EAAS,CAChC6C,QAAS,CACL4R,YAAa,CACT7K,aAAc,CAAErV,MAAO0xB,EAAwBxmB,GAAUmL,iBAGjE1O,I,OANJ,MAAO,CAAP,EAAO,U,OAQP,M,sBAAuB,MAAkB,UAAAqL,KAAA,CAAK,EAAM7T,KAAK5T,OAAQ,CAAE6iB,KAAM,6BACrE,MAAM,EAGW,SAAMznB,KAAKi3E,gBAAgBS,oBAAoB,EAAMl/D,KAAK4+D,gBAAiBp3E,KAAK23E,kB,cAA/FjpD,EAAe,SAEhBwoD,EAAD,MACO,GAAMl3E,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,UAAA5G,MAAA,CAAM1P,EAAQ6C,QAAS,CAC9F4R,YAAa,CAAE7K,aAAY,Q,OAD/B,MAAO,CAAP,EAAO,U,OAKX,SAAMwoD,EAAWja,OAAO,UAAAzoC,MAAA,CAAM1P,EAAQ6C,QAAS,CAC3C4R,YAAa,CAAE7K,aAAY,O,OAG/B,OAJA,SAIO,CAAP,EAAO1uB,KAAK2xC,OAAO5c,Y,yBAIb,YAAAqnD,gBAAd,SAA8Bx2D,G,gIAC1B,OAAIA,EAAO8J,YACA,CAAP,EAAO,EAAOA,aAGsC,GAAM1vB,KAAK2xC,OAAOc,SACtEzyC,KAAK6yC,4BAA4BvuB,kBAAkBsB,EAAO7I,M,OAG9D,MAAO,CAAP,KAJwD,SAEvD,wCAE8B6I,EAAO7I,IAAI2S,aAAe,YAGrD,YAAAioD,cAAR,WACI,IAAM7iD,EAAQ90B,KAAK2xC,OAAO5c,WACpBvO,EAAiBsO,EAAMtO,eAAeoe,2BACtClP,EAAkBZ,EAAMY,gBAAgB+C,qBACxClN,EAAWuJ,EAAMvJ,SAASqhB,qBAC1B1lB,EAAQ4N,EAAM5N,MAAMgmB,kBAE1B,MAAO,CACH1mB,eAAc,EACdkP,gBAAe,EACfwvB,aAAc35B,EAASG,KAAKpE,SAASG,KACrC1K,GAAImK,EAAMK,QAAQnG,WAClB7B,OAAQgM,EAASG,KAAK4uB,aAGlC,EApFA,IFfA,SAAYu+B,GACR,EAAAwD,cAAA,gBACA,EAAAC,iBAAA,mBACA,EAAAC,eAAA,iBAHJ,CAAY1D,QAAiB,KGsB7B,ICqBY2D,GDrBS,GAArB,WAMI,WACY7qC,EACA4B,EACAskB,EACAyJ,EACAzuB,EACA64B,EACA9nD,EACAkxC,EACA2nB,GARA9qC,cACA4B,8BACAskB,2BACAyJ,6BACAzuB,mCACA64B,qCACA9nD,sBACAkxC,6BACA2nB,wBAERz8E,KAAK08E,cAAgB,IAAI,EAAA51E,QAoNhC,OAjNG,YAAA2oB,WAAA,SAAWzO,GAAX,WAGI,GAFAhhB,KAAK44C,UAAY53B,EAAQuD,UAEpBvD,EAAQ27D,SACT,MAAM,IAAI,KAAqB,qFAGnC,IAAMC,EAAe57D,EAAQ27D,SAASC,cAAgB7gE,SAAS+3B,eAAe9yB,EAAQ27D,SAASC,cAO/F,OALIA,IACA58E,KAAK2zC,cAAgBipC,EACrB58E,KAAK2zC,cAAcxD,iBAAiB,QAASnwC,KAAK+4C,2BAG/C/4C,KAAK68E,iBAAiB77D,EAAQ27D,UAChC34D,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,WAQI,OAPI3yC,KAAK2zC,eACL3zC,KAAK2zC,cAAcrD,oBAAoB,QAAStwC,KAAK+4C,0BAGzD/4C,KAAK2zC,qBACL3zC,KAAK88E,uBAEEr5E,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAy8B,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACI,OAAOhhB,KAAK+8E,cACP34D,OAAM,YACH,GAAIllB,EAAM4R,UAAY,IAAqBL,eACvC,OAAO,EAAKusE,iBACPh5D,MAAK,WAAM,SAAK+4D,iBAGzB,MAAM79E,KAET8kB,MAAK,YACF,SAAKi5D,aAAat1D,EAAS7C,EAAQgoB,eAAgB9rB,OAI/D,YAAAg3C,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAA25E,iBAAR,SAAyB77D,GAAzB,WACU8T,EAAQ90B,KAAK2xC,OAAO5c,WACpBsD,EAAgBvD,EAAMwD,eAAeC,iBAAiBv4B,KAAK44C,WAC3DhgB,EAAc9D,EAAMzzB,OAAOw3B,iBAEjC,IAAKR,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGpD,IAAKioB,EACD,MAAM,IAAI,IAAiB,IAAqBvoB,uBAGpD,OAAOrQ,KAAK80D,sBAAsBjb,KAAKxhB,EAAch3B,OAAO+yC,UACvDpwB,MAAK,SAAC,G,IAAEixC,EAAQ,WACb,EAAK6nB,gBAAkB7nB,EAEnBj0C,EAAQk8D,eAAiBnhE,SAAS+3B,eAAe9yB,EAAQk8D,gBACzD,EAAKJ,gBAAgBK,gBAAgB,CACjClzB,MAAO,QACP9X,WAAY,CAACnxB,EAAQk8D,iBAI7B,EAAKJ,gBAAgB5nB,UAAU,CAC3Bvb,SAAU/gB,EAAYmB,aAAa6f,gBAGvC,EAAKkjC,gBAAgBjpD,GAAGglD,GAAkB0D,gBAAgB,WACtD,EAAKG,cAAcx8E,KAAK,CAAE6Q,KAAM8nE,GAAkB0D,iBAE9Cv7D,EAAQo8D,UACRp8D,EAAQo8D,cAIhB,EAAKN,gBAAgBjpD,GAAGglD,GAAkByD,kBAAkB,SAACx3D,GACzD,EAAKu4D,iBAAiBv4D,EAAQgxC,cACzB9xC,MAAK,WACF,EAAK04D,cAAcx8E,KAAK,CAAE6Q,KAAM8nE,GAAkByD,mBAE9Ct7D,EAAQ4pD,iBACR5pD,EAAQ4pD,4BAO5B,YAAAoS,eAAR,sBACI,OAAOh9E,KAAK2xC,OAAOc,SAASzyC,KAAK0rE,8BAA8Bxd,mBAAkB,WAkB7E,OAjBAplD,EAAK6oC,OAAOc,SAAS3pC,EAAK+pC,4BAA4BvuB,kBAAkBxb,EAAK8vC,YACxE50B,MAAK,YACF,IAAMqU,EAAgBvD,EAAMwD,eAAeC,iBAAiBzvB,EAAK8vC,WAEjE,IAAK9vC,EAAKg0E,gBACN,MAAM,IAAI,KAAoB,KAAwBjtD,uBAG1D,IAAKwI,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGpD7H,EAAKg0E,gBAAgBQ,uBACrBx0E,EAAKg0E,gBAAgBtnB,cAAcn9B,EAAcmC,mBAAmBw6B,qBAIrE,IAAIvxD,SAAQ,SAACR,EAASC,GACzB4F,EAAK4zE,cACAt5E,KAAK,SAAAusC,KAAA,CAAK,IACV3tC,WAAU,SAACstC,GACJA,EAAMv+B,OAAS8nE,GAAkB0D,eACjCr5E,EAAO,IAAI,IACJosC,EAAMv+B,OAAS8nE,GAAkByD,kBACxCr5E,YAIjB,CAAEshB,SAAUvkB,KAAK44C,YAAc,CAAEpG,QAAS,uBAGzC,YAAA6qC,iBAAR,SAAyBvnB,GAAzB,WAEUz9B,EADQr4B,KAAK2xC,OAAO5c,WACEuD,eAAeC,iBAAiBv4B,KAAK44C,WAC3D+c,EAAoBt9B,GAAiBA,EAAcmC,mBAAmBm7B,kBAE5E,OAAO31D,KAAK4jB,eAAe6T,KAAK,eAAgB,CAC5Chf,QAAS,CACLgM,OAAQ,YACR,eAAgB,oDAEpBjM,KAAM,CACFmM,OAAQ,wBACRgf,SAAU3jC,KAAK44C,UACfkd,aAAY,EACZH,kBAAiB,KAIpB3xC,MAAK,WAAM,OAAAvgB,QAAQysB,IAAI,CACpB,EAAKyhB,OAAOc,SAAS,EAAKc,uBAAuBne,uBACjD,EAAKuc,OAAOc,SAAS,EAAKI,4BAA4BvuB,kBAAkB,EAAKs0B,iBAEhF50B,MAAK,WAAM,SAAK2tB,OAAO5c,eAGxB,YAAAgoD,YAAR,sBACI,OAAO/8E,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBtkB,KAAK44C,YAC/E50B,MAAK,WACF,MAAuB,UAAnBlb,EAAK8vC,UACE9vC,EAAK2zE,iBAAiBhtD,aACxBzL,MAAK,YAAU,SAAOu5D,kBAGxB,MAEVv5D,MAAK,YACF,IACMqU,EADQvvB,EAAK6oC,OAAO5c,WACEuD,eAAeC,iBAAiBzvB,EAAK8vC,WAEjE,IAAKvgB,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGpD,IAAK0nB,EAAcmC,mBAAmBgjD,kBAClC,MAAM,IAAI,IAAiB,IAAqB/sE,gBAGpD,IAAM8oB,EAAc,CAChB3T,OAAQ9c,EAAK8vC,UACb6kC,aAAcplD,EAAcmC,mBAAmBgjD,kBAC/CE,IAAKrlD,EAAcmC,mBAAmBkjD,IACtCpD,cAAe3zB,KAAKtuB,EAAcmC,mBAAmBmjD,YACrD5iD,SAAU,CACNnJ,MAAOyG,EAAcmC,mBAAmBojD,QAAQx8D,WAAWy8D,OAAO,EAAG,GACrE/rD,KAAMuG,EAAcmC,mBAAmBojD,QAAQx8D,WAAWy8D,OAAO,EAAG,IAExEljD,SAAUtC,EAAcmC,mBAAmBsjD,WAC3CC,YAAa1lD,EAAcmC,mBAAmBujD,YAC9CC,UAAWC,EAAY,CAAEA,UAAS,WAGtC,MAAO,CACH15D,SAAUzb,EAAK8vC,UACfrf,YAAW,OAKnB,YAAA0jD,aAAR,SAAqBt1D,EAAkBmlB,EAA0B9rB,GAAjE,WACI,OAAOhhB,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY,CAAEnqB,eAAc,GAAI9rB,IAChFgD,MAAK,WAAM,SAAK2tB,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAczT,QAI1E,YAAAoxB,yBAAR,SAAiCzJ,GAC7BA,EAAM2J,iBAENj5C,KAAKg9E,kBAHT,sBADC,M,6CAML,EArOA,ICqBA,SAAYR,GACR,EAAA0B,gBAAA,mBADJ,CAAY1B,QAAoB,KCjChC,ICOY2B,G,GDPZ,qBAAAn5E,I,+CAwDC,OAxD6D,yBAE1D,YAAAgzD,SAAA,SAASh3C,GACL,IAAM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpB7N,EAAQ4N,EAAM5N,MAAMkR,WAE1B,OAAIlR,GAAS4N,EAAMnN,QAAQue,qBAAuB,KACvClmC,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBT,cAAclwC,EAAMK,QAASvG,IAG/Evd,QAAQP,OAAO,IAAI,KAGd,YAAA0pE,uBAAhB,SAAuC9nD,EAA2B9D,G,4IAI9D,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,eACA+oB,EAAO7tC,KAAKitE,aAGd,MAAM,IAAI,KAAoB,KAAwBp9C,uBAG1D,IAAKlI,IAAYA,EAAQpD,SACrB,MAAM,IAAI,GAA4B,CAAC,qB,iBAIvC,O,sBAAA,GAAMspB,EAAK0jB,Y,OACX,OADA7zB,EAAA,OACA,GAAM19B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OACvE,OADA0c,EAAA,OACA,GAAMmQ,EAAKovB,OAAOt1C,I,cAAlB+V,EAAA,O,aAEA,O,WAAO,CAAP,EAAO19B,KAAKo+E,iBAAiB,I,OAG1B,SAAMp+E,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBL,qB,OAA3D,MAAO,CAAP,EAAO95B,EAAA,gBAGD,YAAA0gD,iBAAV,SAA2Bl/E,GACvB,KAAMA,aAAiB,MACnB,OAAOuE,QAAQP,OAAOhE,GAG1B,IAAMm/E,EAAqDn/E,EAAMsZ,KAAK8hD,2BAGtE,OAAI+jB,GAA4BA,EAAyBttE,OAASyrE,GAAqB0B,gBAC5El+E,KAAKs+E,iBAAiBD,GAG1B56E,QAAQP,OAAOhE,IAGlB,YAAAo/E,iBAAR,SAAyBD,GACrB,OAAO,IAAI56E,SAAQ,WACfo0B,OAAOC,SAASlF,QAAQyrD,EAAyBnkD,KAAK8xC,kBAGlE,EAxDA,CAA8D,IEHxDuS,GAA0B,CAAC,SAAU,OAAQ,OAAQ,S,GAC3D,qBAAAv5E,I,+CAqCC,OArC0D,yBAEvC,YAAA6nE,0BAAhB,SAA0C/nD,EAA2B9D,G,4IAIjE,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAyU,EAAc5R,iBAAS4R,aAExB5R,IAAY4R,EACb,MAAM,IAAI,GAA4B,CAAC,wBAG3C,SAAMv5B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAAvE0c,EAAA,O,iBAGW,O,sBAAA,GAAM19B,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCACpEzT,GAAO,CACV4R,YAAa,yCACNA,GAAW,CACdpgB,iBAAkBnZ,KAAKw+E,wBAAwB72D,EAAQpD,SAAUgV,U,OAJzE,MAAO,CAAP,EAAOmE,EAAA,Q,OAQP,O,WAAO,CAAP,EAAO19B,KAAKo+E,iBAAiB,I,yBAI7B,YAAAI,wBAAR,SAAgCj6D,EAAkBgV,GAC9C,IAAMpgB,EAA2C,CAAEslE,WAAY,IACzDA,EAAa,eAAgBllD,EAC7BA,EAAYklD,WACZ,GAMN,OAJmD,IAA/CF,GAAwB34E,QAAQ2e,IAAoBk6D,IACpDtlE,EAAiBslE,WAAaA,GAG3BtlE,GAEf,EArCA,CAA2D,I,GCA3D,qBAAAnU,I,+CAoCC,OApC2D,yBAExC,YAAA6nE,0BAAhB,SAA0C/nD,EAA2B9D,G,4IAIjE,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAyU,EAAc5R,iBAAS4R,aAExB5R,IAAY4R,EACb,MAAM,IAAI,GAA4B,CAAC,wBAG3C,SAAMv5B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAAvE0c,EAAA,O,iBAGW,O,sBAAA,GAAM19B,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCACpEzT,GAAO,CACV4R,YAAa,yCACNA,GAAW,CACdpgB,iBAAkBnZ,KAAKw+E,wBAAwB72D,EAAQpD,SAAUgV,U,OAJzE,MAAO,CAAP,EAAOmE,EAAA,Q,OAQP,O,WAAO,CAAP,EAAO19B,KAAKo+E,iBAAiB,I,yBAI7B,YAAAI,wBAAR,SAAgCj6D,EAAkBgV,GAC9C,IAAMpgB,EAAkD,CAAEulE,KAAM,GAAIC,IAAK,IACnE,EAAgB,SAAUplD,EAAcA,EAAcpgB,EAApDulE,EAAI,OAAEC,EAAG,MAOjB,MAnCgC,SA8B5Bp6D,GAAgDxI,WAChD5C,EAAiBulE,KAAOA,EACxBvlE,EAAiBwlE,IAAMA,GAGpBxlE,GAEf,EApCA,CAA4D,I,GCA5D,qBAAAnU,I,+CAgCC,OAhC4D,yBAEzC,YAAA6nE,0BAAhB,SAA0C/nD,EAA2B9D,G,4IAIjE,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAyU,EAAc5R,iBAAS4R,aAExB5R,IAAY4R,EACb,MAAM,IAAI,GAA4B,CAAC,wBAG3C,SAAMv5B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAAvE0c,EAAA,O,iBAGW,O,sBAAA,GAAM19B,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCACpEzT,GAAO,CACV4R,YAAa,yCACNA,GAAW,CACdpgB,iBAAkBnZ,KAAKw+E,wBAAwB72D,EAAQpD,SAAUgV,U,OAJzE,MAAO,CAAP,EAAOmE,EAAA,Q,OAQP,O,WAAO,CAAP,EAAO19B,KAAKo+E,iBAAiB,I,yBAI7B,YAAAI,wBAAR,SAAgCj6D,EAAkBgV,GAC9C,GA3BiC,UA2BQhV,GAAY,QAASgV,EAC1D,MAAO,CAAEolD,IAAKplD,EAAYolD,MAKtC,EAhCA,CAA6D,I,GCA7D,qBAAA35E,I,+CAgCC,OAhC4D,yBAEzC,YAAA6nE,0BAAhB,SAA0C/nD,EAA2B9D,G,4IAIjE,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAyU,EAAc5R,GAAWA,EAAQ4R,aAElC5R,IAAY4R,EACb,MAAM,IAAI,GAA4B,CAAC,wBAG3C,SAAMv5B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAAvE0c,EAAA,O,iBAGW,O,sBAAA,GAAM19B,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCACpEzT,GAAO,CACV4R,YAAa,yCACNA,GAAW,CACdpgB,iBAAkBnZ,KAAKw+E,wBAAwB72D,EAAQpD,SAAUgV,U,OAJzE,MAAO,CAAP,EAAOmE,EAAA,Q,OAQP,O,WAAO,CAAP,EAAO19B,KAAKo+E,iBAAiB,I,yBAI7B,YAAAI,wBAAR,SAAgCj6D,EAAkBgV,GAC9C,GA3BiC,UA2BQhV,GAAY,mBAAoBgV,GAAe,kBAAmBA,EACvG,MAAO,CAAEqlD,eAAgBrlD,EAAYqlD,eAAgBC,cAAetlD,EAAYslD,gBAK5F,EAhCA,CAA6D,I,GCM7D,WAGI,WACYltC,EACA2lB,EACAO,EACAyJ,EACAzuB,EACAi2B,EACAgW,GANAntC,cACA2lB,0BACAO,2BACAyJ,6BACAzuB,mCACAi2B,iCACAgW,6BAuFf,OApFS,YAAArvD,WAAN,SAAiBzO,G,0IAIO,OAHM+pB,EAA8B/qC,KAAK2xC,OAAO5c,WAAU,uCACxEsD,EAAgB0S,EAAwB/pB,EAAQuD,SAAUvD,EAAQwX,WAExE,EAAAx4B,KAAoB,GAAMA,KAAK8+E,sBAAsBjlC,KAAKxhB,I,OAE1D,OAFA,EAAK0mD,aAAe,SAEb,CAAP,EAAO/+E,KAAK2xC,OAAO5c,oBAGvB,YAAA4d,aAAA,WAGI,OAFA3yC,KAAK++E,oBAEEt7E,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGjC,YAAAy8B,QAAN,SAAc1sC,EAA2B9D,G,gJACrC,IAAK8D,EAAQ6C,QACT,MAAM,IAAI,GAA4B,CAAC,oBAAqB,qBAIhE,GAFM,EAA0B7C,EAAQ6C,QAAhC6Q,EAAS,YAAEjU,EAAQ,YAEtBiU,IAAcjU,EACf,MAAM,IAAI,GAA4B,CAAC,oBAAqB,qB,OAGlCuoB,EAAmB9sC,KAAK2xC,OAAO5c,WAAWxJ,SAASqhB,qBAAoB,qBACjG9X,EAAQ90B,KAAK2xC,OAAO5c,oBAEpB+X,QACQ,GAAM9sC,KAAK2xC,OAAOc,SAASzyC,KAAK8oE,0BAA0BxL,iBAAiBxwB,K,OAAnFhY,EAAQ,S,iBAGZ,SAAM90B,KAAKs3D,mBAAmB/F,SAASz8B,EAAMvJ,SAAS4J,cAAenU,I,OAGrE,GAHA,SAEQjD,EAAgB/d,KAAK2xC,OAAO5c,WAAWvO,eAAeoe,2BAA0B,aACnF5kC,KAAKg/E,oBAAoBjhE,GAC1B,MAAM,IAAI,KAAqB,+DAG3B,SAAM/d,KAAK2xC,OAAOc,SACtBzyC,KAAK6yC,4BAA4BvuB,kBAAqBkU,EAAS,WAAWjU,K,OAG9E,OAJAuQ,EAAQ,SAIR,GAAM90B,KAAKi/E,oBAAoBlhE,EAAa+W,EAAMwD,eAAeC,iBAAiBhU,K,OAGlF,OAHA,SAGO,CAAP,EAAO,IAAI9gB,SAAQ,wBAGjB,YAAAu0D,SAAN,SAAeh3C,G,4IAKX,GAJM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpBpN,EAAUmN,EAAMnN,QAAQse,eACxB5kC,EAASyzB,EAAMzzB,OAAO2zB,oBAEvBrN,EACD,MAAM,IAAI,IAAiB,IAAqBzX,iBAGpD,IAAK7O,IAAWA,EAAOsmB,QAAQtO,MAC3B,MAAM,IAAI,IAAiB,IAAqBhJ,uBAQpD,OALMszD,EAAiB,CACnBp/C,SAAUoD,EAAQY,WAClBgR,YAAa,CAAEY,MAAO94B,EAAOsmB,QAAQtO,QAGzC,GAAMrZ,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY,GAAIj2C,K,OAEpE,OAFA,SAEO,CAAP,EAAOhhB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAcuoC,aAGjE,YAAAsb,oBAAR,SAA4BlhE,EAAqBsa,GAC7C,IAAKr4B,KAAK++E,eAAiB1mD,IAAkBA,EAAc3I,YACvD,MAAM,IAAI,KAAoB,KAAwBG,uBAG1D7vB,KAAK++E,aAAatvD,WAAW,CAAC1R,YAAW,IACzC/d,KAAK++E,aAAazV,SAAS,CAAEjwD,MAAOgf,EAAc3I,eAG9C,YAAAsvD,oBAAR,SAA6BjhE,GACzB,MAAuB,OAAhBA,GAEf,EAjGA,G,GCDA,WACI,WACYoQ,EACDC,0BADCD,qBACDC,eAgBd,OAbS,YAAAyrB,KAAN,SAAWj0B,G,gIACP,SAAM5lB,KAAKmuB,cAAcG,WAAWtuB,KAAKk/E,cAAct5D,EAAOvkB,OAAO+yC,Y,OAErE,GAFA,UAEKp0C,KAAKouB,QAAQm7C,SACd,MAAM,IAAI,KAGd,MAAO,CAAP,EAAOvpE,KAAKouB,QAAQm7C,kBAGhB,YAAA2V,cAAR,SAAsB9qC,GAClB,OAAOA,EApBF,oDADH,6CAuBV,EAnBA,G,GCAA,YACI,WACIlvB,EACAioD,EACAC,EACAC,EACQv4B,GALZ,MAOI,YAAM5vB,EAAOioD,EAAoBC,EAAsBC,IAAkB,K,OAFjEv4B,gB,EAgCf,OAtCoD,yBAWjD9vC,EAAA,UAAAwsD,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACI,OAAO,YAAMwwC,QAAO,UAAC1sC,EAAS9D,GACzBoD,OAAM,YACH,OAAMllB,aAAiB,MAAkB,UAAAmtB,KAAA,CAAKntB,EAAMsZ,KAAK5T,OAAQ,CAAE6iB,KAAM,4BAIlE,IAAIhkB,SAAQ,WACf,EAAKqxC,YAAYyC,SAASr4C,EAAMsZ,KAAK4+D,gBAAgB4C,QAAS,CAC1DmF,MAAOjgF,EAAMsZ,KAAK4+D,gBAAgBC,mBAClC+H,QAASlgF,EAAMsZ,KAAK4+D,gBAAgBiI,aACpCC,GAAIpgF,EAAMsZ,KAAK4+D,gBAAgB8C,mBAP5Bz2E,QAAQP,OAAOhE,OAatC,YAAA84D,SAAA,SAASh3C,GACL,IAAM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpB7N,EAAQ4N,EAAM5N,MAAMkR,WAE1B,OAAIlR,GAAS4N,EAAMnN,QAAQue,qBAAuB,KACvClmC,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBT,cAAclwC,EAAMK,QAASvG,IAG/Evd,QAAQP,OAAO,IAAI,KAElC,EAtCA,CAAqD,I,GCCrD,YACI,WACcyuC,EACAkmB,EACAyJ,EACAmL,EACA33B,GALd,MAOI,YACInD,EACAkmB,EACAyJ,EACAmL,IACH,K,OAXS96B,WACAkmB,wBACAyJ,0BACAmL,uBACA33B,gB,EA4EjB,OAlF8D,yBAgB3D,YAAAkjB,SAAA,SAASh3C,GACL,IAAM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpB7N,EAAQ4N,EAAM5N,MAAMkR,WAE1B,OAAIlR,GAAS4N,EAAMnN,QAAQue,qBAAuB,KACvClmC,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBT,cAAclwC,EAAMK,QAASvG,IAG/Evd,QAAQP,OAAO,IAAI,KAGd,YAAA2pE,0BAAhB,SAA0C/nD,EAA2B9D,G,mJAIjE,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAyU,EAAc5R,GAAWA,EAAQ4R,aAElC5R,IAAY4R,EACb,MAAM,IAAI,GAA4B,CAAC,wBAG3C,SAAMv5B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAAvE,S,iBAGW,O,sBAAA,GAAMhhB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCAAKzT,GAAO,CAAE4R,YAAW,O,OAApG,MAAO,CAAP,EAAO,U,OAEP,O,sBAAuB,MAAkB,UAAAlN,KAAA,CAAK,EAAM7T,KAAK5T,OAAQ,CAAE6iB,KAAM,4BAIlE,CAAP,EAAO,IAAIhkB,SAAQ,WAAM,SAAKqxC,YAAYyC,SAAS,EAAM/+B,KAAK4+D,gBAAgB4C,QAAS,CACnFmF,MAAO,EAAM3mE,KAAK4+D,gBAAgBC,oBAAsB,KACxD+H,QAAS,EAAM5mE,KAAK4+D,gBAAgBiI,cAAgB,KACpDC,GAAI,EAAM9mE,KAAK4+D,gBAAgB8C,eAAiB,WANzC,CAAP,EAAOz2E,QAAQP,OAAO,I,yBAWlB,YAAA0pE,uBAAhB,SAAuC9nD,EAA2B9D,G,mJAI9D,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,eACA+oB,EAAO7tC,KAAKitE,aAGd,MAAM,IAAI,KAAoB,KAAwBp9C,uBAG1D,IAAKlI,IAAYA,EAAQpD,SACrB,MAAM,IAAI,GAA4B,CAAC,qB,iBAIvC,O,sBAAA,GAAMspB,EAAK0jB,Y,OACX,OADA,SACA,GAAMvxD,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OACvE,OADA,SACA,GAAM6sB,EAAKovB,OAAOt1C,I,cAAlB,S,aAEA,O,sBAAuB,MAAkB,UAAA0E,KAAA,CAAK,EAAM7T,KAAK5T,OAAQ,CAAE6iB,KAAM,4BAIlE,CAAP,EAAO,IAAIhkB,SAAQ,WAAM,SAAKqxC,YAAYyC,SAAS,EAAM/+B,KAAK4+D,gBAAgB4C,QAAS,CACnFmF,MAAO,EAAM3mE,KAAK4+D,gBAAgBC,oBAAsB,KACxD+H,QAAS,EAAM5mE,KAAK4+D,gBAAgBiI,cAAgB,KACpDC,GAAI,EAAM9mE,KAAK4+D,gBAAgB8C,eAAiB,WANzC,CAAP,EAAOz2E,QAAQP,OAAO,I,OAUvB,SAAMlD,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBL,qB,OAA3D,MAAO,CAAP,EAAO,kBAEf,EAlFA,CAA+D,I,GCN/D,YACI,WACItyC,EACAioD,EACAC,EACAC,EACQC,GALZ,MAOI,YACIpoD,EACAioD,EACAC,EACAC,IACH,K,OAPOC,sB,EAsCf,OA5CuD,yBAgB9C,YAAA79C,WAAN,SAAiBzO,G,wIACb,SAAM,YAAMyO,WAAU,UAACzO,I,cAAvB,SAE0B+pB,EAA8B/qC,KAAK2xC,OAAO5c,WAAU,wCACxEsD,EAAgB0S,EAAwB/pB,EAAQuD,WAEpCljB,OAAO+oE,aACrB,GAAMpqE,KAAKstE,kBAAkBC,QAAQl1C,IADrC,M,OACA,S,iBAGJ,MAAO,CAAP,EAAOr4B,KAAK2xC,OAAO5c,oBAGjB/vB,EAAA,UAAAwsD,QAAN,SAAc1sC,EAA2B9D,G,mHAIrC,OAHQ,EAAoC8D,EAAO,QAAhC,cAAkB,GAAE,YAApB,WAAW,KAAE,KACwB9kB,KAAK2xC,OAAO5c,WAAU,wCAElDxQ,GAAUljB,OAAO+oE,aAClC,CAAP,EAAOpqE,KAAKstE,kBAAkBE,MAC1B,YAAMhc,QAAQrwD,KAAKnB,MACnB8kB,EACA9D,EACAhhB,KAAKitE,cAIN,CAAP,EAAO,YAAMzb,QAAO,UAAC1sC,EAAS9D,WAEtC,EA5CA,CAAwD,I,GCAxD,YACI,WACIkE,EACAioD,EACAC,EACAC,EACQC,GALZ,MAOI,YACIpoD,EACAioD,EACAC,EACAC,IACH,K,OAPOC,sB,EAsCf,OA5CyD,yBAgBhD,YAAA79C,WAAN,SAAiBzO,G,wIACb,SAAM,YAAMyO,WAAU,UAACzO,I,cAAvB,SAE0B+pB,EAA8B/qC,KAAK2xC,OAAO5c,WAAU,wCACxEsD,EAAgB0S,EAAwB/pB,EAAQuD,WAEpCljB,OAAO+oE,aACrB,GAAMpqE,KAAKstE,kBAAkBC,QAAQl1C,IADrC,M,OACA,S,iBAGJ,MAAO,CAAP,EAAOr4B,KAAK2xC,OAAO5c,oBAGjB/vB,EAAA,UAAAwsD,QAAN,SAAc1sC,EAA2B9D,G,mHAIrC,OAHQ,EAAoC8D,EAAO,QAAhC,cAAkB,GAAE,YAApB,WAAW,KAAE,KACwB9kB,KAAK2xC,OAAO5c,WAAU,wCAElDxQ,GAAUljB,OAAO+oE,aAClC,CAAP,EAAOpqE,KAAKstE,kBAAkBE,MAC1B,YAAMhc,QAAQrwD,KAAKnB,MACnB8kB,EACA9D,EACAhhB,KAAKitE,cAIN,CAAP,EAAO,YAAMzb,QAAO,UAAC1sC,EAAS9D,WAEtC,EA5CA,CAA0D,I,GCM1D,WASI,WACY2wB,EACAkB,EACAglB,EACAyJ,EACAwH,EACAyW,GALA5tC,cACAkB,mCACAglB,2BACAyJ,6BACAwH,iCACAyW,iCA8Lf,OA3LS,YAAA9vD,WAAN,SAAiBzO,G,yJAMU,OALvBhhB,KAAKw/E,+BAAiCx+D,EAAQy+D,aACxCpnD,EAAgBr4B,KAAK2xC,OAAO5c,WAAWuD,eAAeyS,wBAAwB/pB,EAAQuD,UACtF,EAAyC8T,EAAcmC,mBAArDyqC,EAAS,YAAmBhW,EAAM,kBAClCpwB,EAAgB7+B,KAAK0/E,oCAAmC,YAEhE,EAAA1/E,KAAuB,GAAMA,KAAKu/E,0BAA0B1lC,KAAKorB,EAAWhW,I,OAExD,OAFpB,EAAK0wB,gBAAkB,SAEvB,EAAA3/E,KAAoB,GAAMA,KAAK2xC,OAAO3vC,WAClC,SAAM8yB,GAAK,uD,qFACHA,EAAMgZ,kBAAkB3O,cAAcne,EAAQuD,WACxC8tB,EAAYt2B,SAAS+3B,eAAejV,KAGtCwT,EAAUwiB,UAAY,GAEtB,EAAA70D,KAAuB,GAAMA,KAAKu/E,0BAA0B1lC,KAAKorB,EAAWhW,KAH5E,MAHJn6B,M,OAMI,EAAK6qD,gBAAkB,S,iBAG3B,SAAM3/E,KAAK4/E,YAAY5+D,I,OAAvB,S,qCAGR,YACI,IAAMuK,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,OAAO5J,GAAYA,EAASwhB,sBAEhC,YACI,IAAMxhB,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,OAAO5J,GAAYA,EAAStD,Y,OAIpC,OA1BA,EAAKlmB,aAAe,SA0Bb,CAAP,EAAO/B,KAAK4/E,YAAY5+D,YAG5B,YAAA2xB,aAAA,WAKI,OAJI3yC,KAAK+B,cACL/B,KAAK+B,eAGF0B,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGjC,YAAAy8B,QAAN,SAAcua,EAAgC/qD,G,mJAClC2G,EAAsBokD,EAAY,QAAtB7kD,EAAK,iBAAK6kD,EAAxB,uBACwBj/B,EAAmB9sC,KAAK2xC,OAAO5c,WAAWxJ,SAASqhB,qBAAoB,sBAEjG,MACA,GAAM5sC,KAAK2xC,OAAOc,SAASzyC,KAAK8oE,0BAA0BxL,iBAAiBxwB,K,OAA3EpP,EAAA,O,iBAGJ,SAAM19B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAEvE,GAFA0c,EAAA,QAEK/V,IAAY3nB,KAAK6/E,uBAAyB7/E,KAAK8/E,0BAChD,MAAM,IAAI,KAAqB,uEAc5B,OAXDnc,EAAiB,CACnBp/C,SAAUoD,EAAQpD,SAClBgV,YAAa,CACTY,MAAOwd,KAAKC,UAAU,CAClB3iB,WAAYj1B,KAAK8/E,0BAA0B7qD,WAC3C1yB,OAAQvC,KAAK6/E,qBACbtqB,UAAWv1D,KAAK8/E,0BAA0BvqB,cAK/C,GAAMv1D,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAcuoC,K,OAA3E,MAAO,CAAP,EAAOjmC,EAAA,gBAGX,YAAAs6B,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAA68E,mBAAR,WACI,IAAK//E,KAAK2/E,gBACN,MAAM,IAAI,KAAoB,KAAwB9vD,uBAG1D,OAAO7vB,KAAK2/E,iBAGR,YAAAK,iBAAR,SAAyB9gF,GAGrB,OAFmBA,EAAK,OAEVigB,KAAI,YAAK,eAAWna,EAAEyiB,KAAO,aAAeziB,EAAEgP,WAAS6K,KAAK,OAGtE,YAAAohE,mBAAR,SAA2B/lD,GAA3B,WACUh7B,EAAQ,IAAI,KAAqB,0EAEvC,OAAO,IAAIuE,SAAQ,SAACR,EAASC,G,QACzB,GAAIg3B,GAAQ,EAAKgmD,iBAAkB,CACvB,MAAgBhmD,EAAK33B,OAAM,YACnC,EAAKs9E,qBAAuBM,EAAc,CACtC59E,OAAQ,oBACJwa,GAAImd,EAAK33B,OAAOwa,GAChBqjE,SAAUlmD,EAAK33B,OAAO69E,UACnBD,GAEPE,gBAAiBnmD,EAAKmmD,iBACtB,CACA99E,OAAQ,CACJwa,GAAImd,EAAK33B,OAAOwa,GAChBqjE,SAAUlmD,EAAK33B,OAAO69E,UAE1BC,gBAAiBnmD,EAAKmmD,iBAE1Bp9E,IACA,EAAKi9E,wBAELh9E,EAAOhE,GACyC,QAAhD,OAAKwgF,qCAAoC5oC,mBAAO,YAAG53C,OAKvD,YAAAohF,iBAAR,SAAyBpmD,G,QACjBA,IACuD,QAAvD,KAAAl6B,KAAK0/E,qCAAoCa,0BAAc,eAIvD,YAAAb,kCAAR,WACI,IAAK1/E,KAAKw/E,+BACN,MAAM,IAAI,KAAoB,KAAwB3vD,uBAG1D,OAAO7vB,KAAKw/E,gCAGF,YAAAI,YAAd,SAA0B5+D,G,+JACR,SAAMhhB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBtD,EAAQuD,Y,OAOpG,GAPMuQ,EAAQ,SACRkN,EAAUlN,EAAMtO,eAAeoe,2BAC/Bre,EAAWuO,EAAMvO,SAASkf,qBACxB+6C,EAA+BxgF,KAAK0/E,oCAAoC/a,cAAa,2BACvF,EAAiC3kE,KAAK0/E,oCAApC7gD,EAAW,cAAE8lC,EAAa,kBAC1Bj1C,EAAgBoF,EAAMwD,eAAeyS,wBAAwB/pB,EAAQuD,UAAS,aAGlF,MAAM,IAAI,IAAiB,IAAqB5T,sBAKpD,GAFA3Q,KAAK8/E,0BAA4BnoC,KAAKmG,MAAMpuB,IAEvC1vB,KAAK8/E,0BACN,MAAM,IAAI,IAAiB,IAAqBnvE,sBAiClB,OA9BlC3Q,KAAKkgF,iBAAmBlgF,KAAK0/E,oCAAoCe,aAC3DC,EAA4B,CAC9BnrB,UAAWv1D,KAAK8/E,0BAA0BvqB,UAC1Cv0C,QAAS,sBAAK2jD,GACdn+C,eAAgB,CACZxJ,UAAWglB,EAAQhlB,UACnBC,SAAU+kB,EAAQ/kB,SAClB4J,MAAOmb,EAAQnb,OAASN,EAASM,MACjCmpC,YAAahuB,EAAQhkB,MACrBpB,QAAS,CACL07B,MAAOtW,EAAQ5kB,SACfo7B,MAAOxW,EAAQ1kB,SACfC,KAAMykB,EAAQzkB,KACduX,MAAOkN,EAAQrkB,oBACfE,WAAYmkB,EAAQnkB,WACpBC,QAASkkB,EAAQjkB,cAGzByiE,2BAA0B,EAC1B9a,UAAW,SAACxrC,GACR,EAAK+lD,mBAAmB/lD,IAE5B6wC,QAAS,SAAC7wC,GACN,EAAKomD,iBAAiBpmD,IAE1B4c,QAAS,SAAC53C,G,QACAyhF,EAAmB,IAAI7+E,MAAM,EAAKk+E,iBAAiB9gF,IACT,QAAhD,OAAKwgF,qCAAoC5oC,mBAAO,YAAG6pC,KAG3D,EAAA3gF,KAAkC,GAAMA,KAAK+/E,qBAAqBa,aAAaF,I,OAG/E,OAHA,EAAKG,2BAA6B,SAClC7gF,KAAK6gF,2BAA2Bhd,MAAMhlC,GAE/B,CAAP,EAAO,WAEf,EA7MA,G,GCRA,WACI,WACY1Q,EACAu2C,EACAt2C,0BAFAD,qBACAu2C,yBACAt2C,eAef,OAZS,YAAAyrB,KAAN,SAAWorB,EAAmBhW,G,gIAC1B,SAAMxrD,QAAQysB,IAAI,CACdlwB,KAAK0kE,kBAAkBE,eAAe,yDACtC5kE,KAAKmuB,cAAcG,WAAW,uD,OAGlC,GALA,UAKKtuB,KAAKouB,QAAQ0yD,aACd,MAAM,IAAI,KAGd,MAAO,CAAP,EAAOr9E,QAAQR,QAAQ,IAAIjD,KAAKouB,QAAQ0yD,aAAa7b,EAAW,CAAEhW,OAAM,cAEhF,EAnBA,G,GCKA,WAEI,WACYtd,EACAkmB,EACAyJ,EACAxsB,GAHAnD,cACAkmB,2BACAyJ,6BACAxsB,mBA6Cf,OA1CS,YAAA0c,QAAN,SAAc1sC,EAA2B9D,G,mJAIrC,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAyU,EAAc5R,GAAWA,EAAQ4R,aAElC5R,IAAY4R,EACb,MAAM,IAAI,GAA4B,CAAC,wBAG3C,SAAMv5B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAAvE,S,iBAGW,O,sBAAA,GAAMhhB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCAAIzT,GAAO,CAAE4R,YAAW,O,OAAnG,MAAO,CAAP,EAAO,U,OAEP,O,WAAKv5B,KAAK+gF,4BAA4B,GAI/B,CAAP,EAAO,IAAIt9E,SAAQ,WACf,EAAKqxC,YAAYyC,SAAS,EAAM/+B,KAAK8hD,2BAA2BpgC,KAAK8xC,aAAc,QAJ5E,CAAP,EAAOvoE,QAAQP,OAAO,I,yBASlC,YAAA80D,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAusB,WAAA,WACI,OAAOhsB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG/B,YAAAgsD,4BAAR,SAAoC7hF,GAC1B,MAAyCA,EAAMsZ,KAA7C8hD,EAA0B,6BAElC,MAAkB,+BAFwB,UAGnCA,GACoC,qBAApCA,EAA2BvpD,MAE1C,EAnDA,G,GCQA,WAMI,WACY4gC,EACA4B,EACAV,EACA64B,EACApK,EACAzJ,EACAlf,EACAqoC,GAPArvC,cACA4B,8BACAV,mCACA64B,qCACApK,6BACAzJ,2BACAlf,kCACAqoC,yCAkNf,OA/MS,YAAAvxD,WAAN,SAAiBzO,G,0IAGC,OAFNuD,EAAavD,EAAO,SAEd,GAAMhhB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,K,OAO5F,OAPMuQ,EAAQ,SACd90B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeyS,wBAAwBxmB,GAEnEvkB,KAAKihF,kBAAoBjhF,KAAKm2D,qBAAqBn1C,GAEnDhhB,KAAKkhF,yBAA2BlhF,KAAKmhF,2BAA2B58D,GAE5DvkB,KAAKm1C,eAAe3a,mBAAmBL,MAChC,CAAP,EAAO12B,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,GAAM/0B,KAAK24C,2BAA2BlpB,WAAWlL,I,OAEjD,GAFA,UAEKvkB,KAAKihF,kBAAkBrE,aACxB,MAAM,IAAI,KAAqB,oCAKnC,KAFMA,EAAe7gE,SAAS+3B,eAAe9zC,KAAKihF,kBAAkBrE,eAGhE,MAAM,IAAI,KAAqB,+DAMnC,OAHA58E,KAAK2zC,cAAgBipC,EACrB58E,KAAK2zC,cAAcxD,iBAAiB,QAASnwC,KAAKkhF,0BAE3C,CAAP,EAAOz9E,QAAQR,QAAQjD,KAAK2xC,OAAO5c,qBAGvC,YAAA4d,aAAA,sBAQI,OAPI3yC,KAAK2zC,eAAiB3zC,KAAKkhF,0BAC3BlhF,KAAK2zC,cAAcrD,oBAAoB,QAAStwC,KAAKkhF,0BAGzDlhF,KAAKkhF,gCACLlhF,KAAK2zC,qBAEE3zC,KAAK24C,2BAA2BhG,eAClC3uB,MAAK,WAAM,OAAAlb,EAAK6oC,OAAO5c,eAG1B,YAAAy8B,QAAN,SAAc1sC,EAA2B9D,G,0JACrC,IAAKhhB,KAAKihF,kBACN,MAAM,IAAI,KAAqB,sFAGnC,IAAKn8D,EAAQ6C,QACT,MAAM,IAAI,GAA4B,CAAC,YAK7B,OAFNpD,EAAaO,EAAQ6C,QAAO,SAEtB,GAAM3nB,KAAK+8E,YAAYx4D,I,cAAjCoD,EAAU,UAED4R,YAAYY,OAAUxS,EAAQ4R,YAAYm2B,gBAAnD,OACM,EAGF1vD,KAAKihF,kBAFL,EAAA14E,EAAAuuC,QAAA,WAAU,eAAQ,EAClB,EAAAvuC,EAAAqiE,gBAAA,WAAkB,eAAQ,EAE9B,GAAM5qE,KAAKg9E,eAAez4D,EAAUqmD,EAAiB9zB,K,OAC3C,OADV,SACU,GAAM92C,KAAK+8E,YAAYx4D,I,OAEjC,KAFAoD,EAAU,UAEG4R,YAAYY,MACrB,MAAM,IAAI,IAAiB,IAAqB1pB,gB,iBAKpD,O,sBAAA,GAAMzQ,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY,CAAEnqB,eAAgBhoB,EAAQgoB,gBAAkB9rB,K,OAErG,OAFP,SAEO,GAAMhhB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAczT,K,OAA3E,MAAO,CAAP,EAAO,U,OAGP,M,WADsC,QAAtC,EAAA3nB,KAAKghF,6CAAiC,KAAEI,wBAAwB,GAC1D,E,yBAId,YAAAppB,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAAizD,qBAAR,SAA6Bn1C,GACzB,GAAyB,qBAArBA,EAAQuD,UAAmCvD,EAAQo1C,iBAAkB,CACrE,IAAKp2D,KAAKghF,kCACN,MAAM,IAAI,KAAoB,KAAwBnxD,uBAK1D,OAFA7vB,KAAKghF,kCAAkCvxD,WAAWzO,GAE3CA,EAAQo1C,iBAGnB,GAAyB,0BAArBp1C,EAAQuD,UAAwCvD,EAAQq1C,sBACxD,OAAOr1C,EAAQq1C,sBAGnB,GAAyB,yBAArBr1C,EAAQuD,UAAuCvD,EAAQu1C,qBACvD,OAAOv1C,EAAQu1C,qBAGnB,GAAyB,2BAArBv1C,EAAQuD,UAAyCvD,EAAQw1C,uBACzD,OAAOx1C,EAAQw1C,uBAGnB,GAAyB,uBAArBx1C,EAAQuD,UAAqCvD,EAAQs1C,mBACrD,OAAOt1C,EAAQs1C,mBAGnB,GAAyB,oBAArBt1C,EAAQuD,UAAkCvD,EAAQy1C,gBAClD,OAAOz1C,EAAQy1C,gBAGnB,MAAM,IAAI,KAAqB,uFAGrB,YAAAsmB,YAAd,SAA0Bx4D,G,wIACtB,IAAKA,EACD,MAAM,IAAI,KAAoB,KAAwBsL,uB,OAGtDiF,EAAQ90B,KAAK2xC,OAAO5c,WACxB/0B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeyS,wBAAwBxmB,GAEjDvkB,KAAKm1C,eAAe3a,mBAAkB,MAE5C,GAAMx6B,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,KADtF,M,OACAuQ,EAAQ,SACR90B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeyS,wBAAwBxmB,G,iBAKvE,OAF0BmrC,EAAoB1vD,KAAKm1C,eAAe3a,mBAAkB,iBAE7E,CAAP,EAAO,CACHjW,SAAQ,EACRgV,YAAa,CACT3T,OAAQrB,EACRmrC,gBAAe,EACfv1B,MAAOn6B,KAAKqhF,UAAU98D,EAAUvkB,KAAKm1C,2BAKzC,YAAAksC,UAAR,SAAkB98D,EAAkB,G,IAAwB4V,EAAK,2BAC7D,MAAiB,qBAAb5V,EACOozB,KAAKC,UAAU,CAClB7mC,KAAMwuD,GAAuBsB,UAC7BygB,eAAgBnnD,EAChBuoC,aAAcjE,OAIftkC,GAGG,YAAAo6B,2BAAd,SAAyCh7B,EAAgChV,G,gIACrE,IAAKA,EACD,MAAM,IAAI,KAAoB,KAAwBsL,uBAI1D,SAAM7vB,KAAK24C,2BAA2BS,cAAc7f,I,OAE7C,OAFP,SAEO,GAAM91B,QAAQysB,IAAI,CACrBlwB,KAAK2xC,OAAOc,SAASzyC,KAAKuzC,uBAAuBne,uBACjDp1B,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,O,OAF5E,MAAO,CAAP,EAAO,kBAMH,YAAA48D,2BAAR,SAAmC58D,GAAnC,WAEI,OAAO,SAAC+qB,GAGJ,GAFAA,WAAO2J,kBAEF10B,IAAa,EAAK08D,kBACnB,MAAM,IAAI,KAAoB,KAAwBpxD,uBAGpD,MAGF,EAAKoxD,kBAFL,IAAAnqC,QAAAvuC,OAAA,IAAU,eAAQ,EAClB,IAAAqiE,gBAAA,WAAkB,eAAQ,EAG9B,OAAO,EAAKj5B,OAAOc,SACf,EAAKi5B,8BAA8Bxd,mBAC/B,iH,uBAAY,SAAMluD,KAAKg9E,eAAez4D,EAAUqmD,EAAiB9zB,I,OAArD,4BACR,CAAEvyB,SAAQ,IAElB,CAAEiuB,QAAS,wBAKT,YAAAwqC,eAAd,SAA6Bz4D,EAAkBqmD,EAA6B9zB,G,wIAEhD,O,sBAAA,GAAM92C,KAAK24C,2BAA2BQ,iB,OAC1D,OADM5f,EAAc,SACpB,GAAMv5B,KAAKu0D,2BAA2Bh7B,EAAahV,I,OAEnD,OAFA,SAEO,CAAP,EAAO,K,OAEP,GAAyB,c,YAAfg9D,WACN,MAAM,IAAIz/E,MAAM,Y,OAEpBg1C,EAAQ,G,+BAGpB,EAhOA,G,GCXA,WAGI,WAAoBnF,EAA+B2vB,EAAqDnzC,GAApFwjB,cAA+B2vB,6BAAqDnzC,qBAmF3G,OAjFS,YAAAsB,WAAN,SAAiBzO,G,gJAKb,GAJM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpBsD,EAAgBvD,EAAMwD,eAAeyS,wBAAwB/pB,EAAQuD,YACrEqU,EAAc9D,EAAMzzB,OAAOw3B,kBAG7B,MAAM,IAAI,IAAiB,IAAqBxoB,uBAgBhC,OAbdoxD,EAA2B,CAC7Bv4D,IAAK,GACL9I,MAAO,IAGPi4B,EAAcmC,mBAAmBknC,WACjCD,EAAyBv4D,IAAM,YAC/Bu4D,EAAyBrhE,MAAQi4B,EAAcmC,mBAAmBknC,YAElED,EAAyBv4D,IAAM,YAC/Bu4D,EAAyBrhE,MAAQi4B,EAAcmC,mBAAmBmnC,WAGtE,EAAA3hE,KAAoB,GAAMA,KAAKmuB,cAAc0rB,MAAI,GAC7C+nB,YAAavpC,EAAch3B,OAAO+yC,SAAW,OAAS,cACtD6a,OAAQr2B,EAAYmB,aAAa6f,eACjC,EAAC6nB,EAAyBv4D,KAAMu4D,EAAyBrhE,MACzD,EAAAyhE,uBAAwBxpC,EAAcmC,mBAAmBqnC,uB,mBAJ7D,EAAKC,aAAe,S,YAQlB,YAAAsf,wBAAN,SAA8BliF,G,wIAC1B,OAAMA,aAAiB,MAAkB,UAAAmtB,KAAA,CAAKntB,EAAMsZ,KAAK5T,OAAQ,CAAC6iB,KAAM,+BAIxD,GAAMznB,KAAKkjE,cAAchkE,EAAMsZ,KAAKisD,gBAHzC,CAAP,EAAOhhE,QAAQP,OAAOhE,I,OAGpByoB,EAAU,S,iBAGL,O,sBAAA,GAAM3nB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCACpEzT,GAAO,CACV4R,YAAa,sBACN5R,EAAQ4R,kB,OAHnB,MAAO,CAAP,EAAO,U,OAOP,O,WAAO,CAAP,EAAOv5B,KAAKohF,wBAAwB,I,yBAIpC,YAAAle,cAAR,SAAsBxpC,GAAtB,WACI,OAAO,IAAIj2B,SAAQ,SAACR,EAASC,GACzB,IAAMogE,EAA2B3rB,KAAKmG,MAAMpkB,EAAiB/U,QAE3B,EAAKm+C,kBAAkBU,iBAAiBF,EAAa,CACnFG,oBAAqB,SAACC,GAClB,IAAMC,EAAiB,CACnBp/C,SAAU++C,EAAYM,kBACtBrqC,YAAa,CACTY,MAAOwd,KAAKC,UAAU8rB,EAAsBxpC,QAIpDj3B,EAAQ0gE,IAEZ3Z,KAAM,KACNlT,QAAS,SAAC53C,GAAsB,OAAAyJ,EAAOzJ,MAGjB2kE,MAAM,QAEhC3gE,EAAO,IAAI,QAIX,YAAA4/D,gBAAR,WACI,IAAK9iE,KAAK8hE,aACN,MAAM,IAAI,KAAoB,KAAwBjyC,uBAG1D,OAAO7vB,KAAK8hE,cAEpB,EAtFA,GCRa0f,GAAqB,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9FC,GAAoC,CAAC,M,GCiBlD,WAII,WACY9vC,EACAkmB,EACAhlB,EACAwgB,EACAquB,GAJA/vC,cACAkmB,2BACAhlB,mCACAwgB,oCACAquB,2BAmKf,OAhKG,YAAAjyD,WAAA,SAAWzO,GAAX,WACI,OAAOhhB,KAAK0hF,oBAAoB7nC,OAC3B71B,MAAK,YAAkB,EAAK29D,cAAgBC,KAC5C59D,MAAK,WAmBF,OAlBA,EAAKjiB,aAAe,EAAK4vC,OAAO3vC,WAC5B,YACQ8yB,EAAMgZ,kBAAkB3O,cAAcne,EAAQuD,WAC9C,EAAKq7D,YAAY5+D,MAGzB,YACI,IAAMuK,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,OAAO5J,GAAYA,EAASwhB,sBAEhC,YACI,IAAMxhB,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,OAAO5J,GAAYA,EAAStD,WAI7B,EAAK23D,YAAY5+D,MAE3BgD,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,WAKI,OAJI3yC,KAAK+B,cACL/B,KAAK+B,eAGF0B,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAy8B,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACI,IAAK8D,EAAQ6C,QACT,MAAM,IAAI,KAAqB,yEAGnC,IAAQ,EAAgD7C,EAAO,QAA5B6+C,GAAL,cAAmB,mBAAhC,kBAEjB,OAAO3jE,KAAK6hF,aACP79D,MAAK,SAAC,G,IAAuB89D,EAAkB,sBAAO,SAAKnwC,OAAOc,SAC/D,EAAK4gB,6BAA6BzC,kBAAkB+S,EAAep/C,SAAU,CAAEu9D,mBAAkB,QAEpG99D,MAAK,WAAM,SAAK2tB,OAAOc,SACpB,EAAKolB,oBAAoBZ,YAAY,yCAC9BnyC,GAAO,CACV6C,QAASg8C,EACT72B,eAAgBhoB,EAAQgoB,iBACzB9rB,QAIf,YAAAg3C,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAA08E,YAAR,SAAoB5+D,GAApB,WACI,IAAKA,EAAQ+gE,OACT,MAAM,IAAI,KAAqB,4EAG3B,MAA4C/gE,EAAO,SAAzC,EAAkCA,EAAO,OAA/BqxB,EAAS,YAAEyM,EAAM,SAE7C,OAAO9+C,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,IAC1EP,MAAK,YAAS,WAAIvgB,SAA4B,SAAAkF,GAC3C,IAAM0vB,EAAgBvD,EAAMwD,eAAeC,iBAAiBhU,GAE5D,IAAK8T,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGpD,IAAK,EAAKgxE,gBAAkBtpD,EAAc3I,YACtC,MAAM,IAAI,KAAoB,KAAwBG,uBAG1D,EAAK8xD,cAActtB,KAAK,CAAE2tB,aAAc3pD,EAAc3I,cAEtD,EAAKiyD,cAAc9nC,KAAK,CAAExH,UAAS,IAAI,YAC/ByM,GACAA,EAAOnmC,GAEX1V,EAAQ0V,aAKhB,YAAAspE,sBAAR,SAA8Bz7D,EAAgCkP,GAC1D,IAAK,UAAA/W,SAAA,CAAS,yBAAI6iE,GAAuBC,IAAoCj7D,EAAezI,aACxF,MAAO,GAGX,IAAMmc,EAAkC,CACpC4d,gBAAiB93C,KAAKkiF,oBAAoB17D,EAAgBA,EAAeK,QAO7E,OAJI6O,IACAwE,EAAKwd,iBAAmB13C,KAAKkiF,oBAAoBxsD,EAAiBlP,EAAeK,QAG9EqT,GAGH,YAAAioD,gBAAR,SAAwBpkE,GACpB,OAAO,UAAAY,SAAA,CAAS8iE,GAAmC1jE,IAG/C,YAAAmkE,oBAAR,SAA4BtlE,EAAkBiK,GAC1C,IAAMu7D,EAA+B,CACjCC,eAAgBzlE,EAAQQ,SACxBG,KAAMX,EAAQW,KACdO,QAASlB,EAAQmB,YACjBukE,WAAY1lE,EAAQI,UACpBulE,YAAa3lE,EAAQK,SACrBy7B,YAAa97B,EAAQiB,WACrBwwC,OAAQruD,KAAKmiF,gBAAgBvlE,EAAQmB,aAAenB,EAAQe,oBAAsBf,EAAQa,gBAC1FoJ,MAAK,GAWT,OARIjK,EAAQU,WACR8kE,EAAcI,gBAAkB5lE,EAAQU,UAGxCV,EAAQoB,QACRokE,EAAcpkE,MAAQpB,EAAQoB,OAG3BokE,GAGH,YAAAP,WAAR,sBACI,OAAO,IAAIp+E,SAAQ,SAACR,EAASC,GACzB,IAAMsjB,EAAiB1d,EAAK6oC,OAAO5c,WAAWvO,eAAe0R,oBACvDxC,EAAkB5sB,EAAK6oC,OAAO5c,WAAWW,gBAAgB+C,qBAE/D,IAAKjS,EACD,MAAM,IAAI,IAAiB,IAAqBxW,uBAGpD,IAAKlH,EAAK64E,cACN,MAAM,IAAI,KAAoB,KAAwB9xD,uBAG1D,IAAM4yD,EAAoB35E,EAAKm5E,sBAAsBz7D,EAAgBkP,GAErE5sB,EAAK64E,cAAcluB,UAAUgvB,GAAmB,YAC5C,OAAIC,EAAIC,SACG1/E,EAAQy/E,GAGfA,EAAIE,UACG1/E,EAAO,IAAI,SAGtBA,EAAO,IAAI,aAI3B,EA5KA,G,GCXA,WACI,WACYirB,wBAOf,OAJG,YAAA0rB,KAAA,WACI,OAAO75C,KAAKmuB,cAAcG,WARlB,wCASHtK,MAAK,WAAM,OAAC6T,OAAmC2oC,OAAOqiB,WAEnE,EATA,G,GCWA,WAII,WACYlxC,EACAkmB,EACAhlB,EACAwgB,EACAyvB,GAJAnxC,cACAkmB,2BACAhlB,mCACAwgB,oCACAyvB,6BA4Kf,OAzKG,YAAArzD,WAAA,SAAWzO,GAAX,WACI,OAAOhhB,KAAK8iF,sBAAsBjpC,OAC7B71B,MAAK,YAAoB,EAAK++D,gBAAkBC,KAChDh/D,MAAK,WAmBF,OAlBA,EAAKjiB,aAAe,EAAK4vC,OAAO3vC,WAC5B,YACQ8yB,EAAMgZ,kBAAkB3O,cAAcne,EAAQuD,WAC9C,EAAK0+D,oBAAoBjiE,MAGjC,YACI,IAAMuK,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,OAAO5J,GAAYA,EAASwhB,sBAEhC,YACI,IAAMxhB,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,OAAO5J,GAAYA,EAAStD,WAI7B,EAAKg7D,oBAAoBjiE,MAEnCgD,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,WAKI,OAJI3yC,KAAK+B,cACL/B,KAAK+B,eAGF0B,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAy8B,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACI,IAAK8D,EAAQ6C,QACT,MAAM,IAAI,KAAqB,yEAGnC,IAAQ,EAAgD7C,EAAO,QAA5B6+C,GAAL,cAAmB,mBAAhC,kBACTnrC,EAAcmrC,EAAc,UAEpC,IAAKnrC,EACD,MAAM,IAAI,KAAqB,mFAGnC,OAAOx4B,KAAK6hF,WAAWle,EAAep/C,UACjCP,MAAK,SAAC,G,IAAuB89D,EAAkB,sBAAO,SAAKnwC,OAAOc,SAC/D,EAAK4gB,6BAA6BzC,kBAAkBp4B,EAAW,CAAEspD,mBAAkB,QAEtF99D,MAAK,WAAM,SAAK2tB,OAAOc,SACpB,EAAKolB,oBAAoBZ,YAAY,yCAC9BnyC,GAAO,CACV6C,QAASg8C,EACT72B,eAAgBhoB,EAAQgoB,iBACzB9rB,QAIf,YAAAg3C,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAA+/E,oBAAR,SAA4BjiE,GAA5B,WACI,IAAKA,EAAQkiE,SACT,MAAM,IAAI,KAAqB,8EAG3B,MAAyDliE,EAAO,SAAtDwX,EAA+CxX,EAAO,UAA3C,EAAoCA,EAAO,SAA/BqxB,EAAS,YAAEyM,EAAM,SACpDhqB,EAAQ90B,KAAK2xC,OAAO5c,WAE1B,IAAKyD,EACD,MAAM,IAAI,KAAqB,mFAGnC,OAAOx4B,KAAKmjF,aAAa3qD,GAAWxU,MAAK,WAAM,WAAIvgB,SAA4B,YAC3E,IAAM40B,EAAgBvD,EAAMwD,eAAeyS,wBAAwBxmB,GAEnE,IAAK,EAAKw+D,kBAAoB1qD,EAAc3I,YACxC,MAAM,IAAI,KAAoB,KAAwBG,uBAG1D,EAAKkzD,gBAAgB1uB,KAAK,CAAE2tB,aAAc3pD,EAAc3I,cACxD,EAAKqzD,gBAAgBlpC,KAAK,CAAExH,UAAS,EAAE+wC,wBAAyB/qD,EAActb,KAAM,YAC5E+hC,GACAA,EAAOnmC,GAGX1V,EAAQ0V,aAKZ,YAAAspE,sBAAR,SAA8Bz7D,EAAgCkP,GAC1D,IAAK,UAAA/W,SAAA,CAAS,yBAAI6iE,GAAuBC,IAAoCj7D,EAAezI,aACxF,MAAO,GAGX,IAAMmc,EAAkC,CACpC4d,gBAAiB93C,KAAKkiF,oBAAoB17D,EAAgBA,EAAeK,QAO7E,OAJI6O,IACAwE,EAAKwd,iBAAmB13C,KAAKkiF,oBAAoBxsD,EAAiBlP,EAAeK,QAG9EqT,GAGH,YAAAioD,gBAAR,SAAwBpkE,GACpB,OAAO,UAAAY,SAAA,CAAS8iE,GAAmC1jE,IAG/C,YAAAmkE,oBAAR,SAA4BtlE,EAAkBiK,GAC1C,IAAMu7D,EAA+B,CACjCC,eAAgBzlE,EAAQQ,SACxBG,KAAMX,EAAQW,KACdO,QAASlB,EAAQmB,YACjBukE,WAAY1lE,EAAQI,UACpBulE,YAAa3lE,EAAQK,SACrBy7B,YAAa97B,EAAQiB,WACrBwwC,OAAQruD,KAAKmiF,gBAAgBvlE,EAAQmB,aAAenB,EAAQe,oBAAsBf,EAAQa,gBAC1FoJ,MAAK,GAWT,OARIjK,EAAQU,WACR8kE,EAAcI,gBAAkB5lE,EAAQU,UAGxCV,EAAQoB,QACRokE,EAAcpkE,MAAQpB,EAAQoB,OAG3BokE,GAGG,YAAAe,aAAd,SAA2B3qD,G,gIACvB,SAAMx4B,KAAK6yC,4BAA4BvuB,kBAAkBkU,GAAWj1B,a,cAApE,S,YAGI,YAAAs+E,WAAR,SAAmBt9D,GAAnB,WACI,OAAO,IAAI9gB,SAAqC,SAACR,EAASC,GACtD,IAAMsjB,EAAiB,EAAKmrB,OAAO5c,WAAWvO,eAAe0R,oBACvDxC,EAAkB,EAAKic,OAAO5c,WAAWW,gBAAgB+C,qBAE/D,IAAKjS,EACD,MAAM,IAAI,IAAiB,IAAqBxW,uBAGpD,IAAMyyE,EAAoB,EAAKR,sBAAsBz7D,EAAgBkP,GAErE,IAAK,EAAKqtD,gBACN,MAAM,IAAI,KAAoB,KAAwBlzD,uBAG1D,EAAKkzD,gBAAgBtvB,UAAU,CAAE2vB,wBAAyB7+D,GAAYk+D,GAAmB,YACrF,OAAIC,EAAIC,SACG1/E,EAAQy/E,GAGfA,EAAIE,UACG1/E,EAAO,IAAI,SAGtBA,EAAO,IAAI,aAI3B,EArLA,G,GCXA,WACI,WACYirB,wBAOf,OAJG,YAAA0rB,KAAA,WACI,OAAO75C,KAAKmuB,cAAcG,WARlB,4CASHtK,MAAK,WAAM,OAAC6T,OAAqC2oC,OAAO6iB,aAErE,EATA,G,GCDA,WACI,WACY1xC,EACAkmB,GADAlmB,cACAkmB,2BAkBf,OAfG,YAAArG,QAAA,SAAQ1sC,EAA2B9D,GAC/B,OAAOhhB,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAYnyC,EAAS9D,KAG9E,YAAAg3C,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAusB,WAAA,WACI,OAAOhsB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAE3C,EArBA,GCQqB,GAArB,WAKI,WACY4c,EACAkmB,EACAyJ,EACA/nB,GAHA5H,cACAkmB,2BACAyJ,6BACA/nB,+BA0Hf,OAvHG,YAAA9pB,WAAA,SAAWzO,GAAX,WACYuD,EAAavD,EAAO,SAEtB4X,EADQ54B,KAAK2xC,OAAO5c,WACA1zB,OAAOw3B,iBAGjC,GAFA74B,KAAKm1C,eAAiBn1C,KAAK2xC,OAAO5c,WAAWuD,eAAeC,iBAAiBhU,IAExEvkB,KAAKm1C,eACN,MAAM,IAAI,IAAiB,IAAqBxkC,sBAGpD,IAAKioB,EACD,MAAM,IAAI,KAAqB,0CAGnC,IAAM4gB,EAA+B,CACjCC,iBAAkBz5C,KAAKm1C,eAAe3a,mBAAmBkf,uBACzDC,SAAU/gB,EAAYmB,aAAa6f,cACnCxF,SAAUp0C,KAAKm1C,eAAe9zC,OAAO+yC,SACrCnf,WAAYj1B,KAAKm1C,eAAe3a,mBAAmBvF,YAGvD,OAAOj1B,KAAKu5C,wBAAwBM,KAAKL,GACpCx1B,MAAK,YAGF,GAFA,EAAK81B,kBAAoBC,GAEpB/4B,EAAQ+4B,WACT,MAAM,IAAI,KAAqB,uFAGnC,IAAM6iC,EAAgB57D,EAAQ+4B,WAAW6iC,cAAgB7gE,SAAS+3B,eAAe9yB,EAAQ+4B,WAAW6iC,cAOpG,OALIA,IACA,EAAKjpC,cAAgBipC,EACrB,EAAKjpC,cAAcxD,iBAAiB,QAAS,EAAK4I,2BAG/C,EAAKpH,OAAO5c,eAI/B,YAAA4d,aAAA,WAUI,OATA3yC,KAAKm1C,sBAEDn1C,KAAK2zC,eACL3zC,KAAK2zC,cAAcrD,oBAAoB,QAAStwC,KAAK+4C,0BAGzD/4C,KAAK2zC,qBACL3zC,KAAK85C,yBAEEr2C,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAy8B,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACY2G,EAAY7C,EAAO,QACrBoC,EAAQ,CAAE4lB,eAAgBhoB,EAAQgoB,gBAExC,IAAKnlB,EACD,MAAM,IAAI,KAAqB,gFAGnC,IAAK3nB,KAAKm1C,iBAAmBn1C,KAAKm1C,eAAe3a,qBAAuBx6B,KAAKm1C,eAAe3a,mBAAmBD,QAC3G,MAAM,IAAI,IAAiB,IAAqB5pB,sBAIpD,IAAM4oB,EAAcv5B,KAAKm1C,eAAe3a,mBAAmBjB,YAG3D,IAAKA,EACD,MAAM,IAAI,KAAqB,sGAGnC,OAAOv5B,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,IACnEgD,MAAK,WAAM,SAAK2tB,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAc,yCAAKzT,GAAO,CAAE4R,YAAW,UAG3G,YAAAy+B,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAAk3C,yBAAR,WACI,IAAMtlB,EAAQ90B,KAAK2xC,OAAO5c,WACpBxJ,EAAWuJ,EAAMvJ,SAAS4J,cAC1ByD,EAAc9D,EAAMzzB,OAAOw3B,iBAEjC,IAAKtN,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,IAAK0oB,EACD,MAAM,IAAI,IAAiB,IAAqBvoB,uBAGpD,IAAKrQ,KAAKm1C,iBAAmBn1C,KAAKm1C,eAAe3a,mBAC7C,MAAM,IAAI,IAAiB,IAAqB7pB,sBAGpD,MAAO,CACHskB,WAAYj1B,KAAKm1C,eAAe3a,mBAAmBvF,WACnDolB,iBAAkBr6C,KAAKm1C,eAAe3a,mBAAmB6f,iBACzD96B,OAAQgM,EAAS1D,SAASu+B,QAAQ,GAClC9+B,SAAUsR,EAAYtR,SAASG,KAC/B8yB,OAAQhvB,EAASG,KAAK3O,GACtBqL,YAAa,aAAe,cAK5B,YAAA2wB,yBAAR,SAAiCzJ,GAG7B,GAFAA,EAAM2J,iBAEDj5C,KAAK85C,kBAAV,CAIA,IAAMh1B,EAAU9kB,KAAKo6C,2BACrBp6C,KAAK85C,kBAAkBvuB,SAASzG,KARpC,sBADC,M,6CAWL,EAnIA,ItBGA,SAAYq5D,GACR,EAAAmF,WAAA,cADJ,CAAYnF,QAAuB,KAInC,IuBwPYoF,GCtQPC,G,GxBcL,WAQI,WACY7xC,EACA8xC,EACA5rB,EACAyJ,GAHA3vB,cACA8xC,2BACA5rB,2BACAyJ,6BAuLf,OApLS,YAAA7xC,WAAN,SAAiBzO,G,wJAGb,GAFQ0iE,EAAqB1iE,EAAO,OAApBuD,EAAavD,EAAO,UAE/B0iE,EACD,MAAM,IAAI,KAAqB,mFAKnC,GAHM5uD,EAAQ90B,KAAK2xC,OAAO5c,aACpB6D,EAAc9D,EAAMzzB,OAAOw3B,kBAG7B,MAAM,IAAI,IAAiB,IAAqBxoB,uBASpD,GANArQ,KAAKytE,mBAAqBiW,EAEpBprD,EAAiBxD,EAAMwD,eACvBD,EAAgBC,EAAeyS,wBAAwB/pB,EAAQuD,UAC7D,EAAqC8T,EAAa,OAAxC8b,EAAU,aAAEC,EAAQ,YAEjCD,EACD,MAAM,IAAI,KAAqB,+E,OAG/B5vB,IAAa45D,GAAwBmF,WAArC/+D,OACA,EAAAvkB,KAAqB,GAAMA,KAAK2jF,cAAcxvC,EAAYvb,EAAYmB,aAAa6f,cAAexF,K,OAAlG,EAAKwvC,cAAgB,SACrB5jF,KAAK6jF,iB,iBAGT,MAAO,CAAP,EAAOpgF,QAAQR,QAAQjD,KAAK2xC,OAAO5c,qBAGjC,YAAAy8B,QAAN,SAAc1sC,EAA2B9D,G,gKAMrC,GALQ2G,EAAsB7C,EAAO,QAAhBoC,EAAK,iBAAIpC,EAAxB,aACAyU,EAAc5R,iBAAS4R,YACvBmkC,EAAwD,QAAhC,eAAgC,WAAEA,qBAC1DC,EAAgE,QAAhC,eAAgC,WAAEA,8BAEnEh2C,IAAY4R,EACb,MAAM,IAAI,GAA4B,CAAE,Y,+CAIpC5R,EAAQpD,WAAa45D,GAAwBmF,WAA7C37D,MACA,GAAM3nB,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAEvE,OAFA,SAEIuY,GAAe,aAAoBA,GAC5B,CAAP,EAAOv5B,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAczT,KAGhD,GAAM3nB,KAAK8jF,mBAAmBC,e,OAEvD,OAFM,EAAmB,SAAjB1qE,EAAK,SAAEna,EAAK,SAGT,CAAP,EAAOuE,QAAQP,OAAOhE,IAGnB,GAAMc,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCACpEzT,GAAO,CACV4R,YAAa,CACTpgB,iBAAkB,CACdwpD,kBAAmB,CACftpD,MAAK,GAETukD,yBAA0BF,EAC1BG,iCAAkCF,EAClC+E,aAAcjE,Y,OAT1B,MAAO,CAAP,EAAO,U,OAcP,SAAMz+D,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAIhE,OAJP,SAEMgjE,EAAS,WAAYzqD,EAAcA,EAAYyqD,OAAS,GAEvD,GAAMhkF,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCACpEzT,GAAO,CACV4R,YAAa,yCACNA,GAAW,CACdpgB,iBAAkB,CACd6qE,OAAM,U,OALlB,MAAO,CAAP,EAAO,U,2BAYX,O,WAAO,CAAP,EAAOhkF,KAAK4iE,yBAAyB,I,0BAI7C,YAAA5K,SAAA,WACI,OAAOv0D,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WAKI,OAJA3yC,KAAK4jF,qBAEL5jF,KAAKikF,yBAEExgF,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG/B,YAAAkvD,uBAAR,WACI,IAAMC,EAAmBnoE,SAASq2B,iBAAiB,qBAEnD,UAAA+xC,KAAA,CAAKD,GAAkB,YAAa,SAAUr/E,YAE9C,IAAMu/E,EAAcroE,SAASq2B,iBAAiB,iCAE9C,UAAA+xC,KAAA,CAAKC,GAAa,YAAc,SAAWv/E,aAGvC,YAAA+9D,yBAAR,SAAiC1jE,GAC7B,KAAMA,aAAiB,MAAkB,UAAAmtB,KAAA,CAAKntB,EAAMsZ,KAAK5T,OAAQ,CAAC6iB,KAAM,gCACpE,OAAOhkB,QAAQP,OAAOhE,GAEqB,MAAqBA,EAAMsZ,KAAI,6CAE9E,OAAO,IAAI/U,SAAQ,WAAM,OAAAo0B,OAAOC,SAASlF,QAAQo5C,OAG7C,YAAAqY,sBAAR,WACI,IAAKrkF,KAAKytE,mBACN,MAAM,IAAI,KAAoB,KAAwB59C,uBAG1D,OAAO7vB,KAAKytE,oBAGR,YAAAkW,cAAR,SAAsBxvC,EAAoB8a,EAAgBq1B,GACtD,gBADsDA,UAClDtkF,KAAK4jF,cACEngF,QAAQR,QAAQjD,KAAK4jF,eAGzB5jF,KAAKyjF,oBACP5pC,KAAK1F,EAAY8a,EAAQq1B,IAG1B,YAAAR,iBAAR,WACI,IAAK9jF,KAAK4jF,cACN,MAAM,IAAI,KAAoB,KAAwB/zD,uBAG1D,OAAO7vB,KAAK4jF,eAYR,YAAAC,eAAR,eAEQxxC,EAFR,OACU,EAA+EryC,KAAKqkF,wBAAlFxlD,EAAW,cAAE0lD,EAAY,eAAEC,EAAS,YAAEC,EAAY,eAAEC,EAAY,eAAE3kC,EAAM,SAG5ElhB,IACAwT,EAAYt2B,SAAS+3B,eAAejV,IAGxC8hB,YAAW,WACP,IAAK9hB,GAA4C,UAA7BwT,iBAAW8D,MAAMmK,SAAoB,CACrD,IAAMqkC,EAAe,EAAKb,mBAE1B,EAAKc,mBAAqBD,EAAaE,gBAAgB,aAAc,CAAE9kC,OAAM,IAC7E,EAAK6kC,mBAAmB/gB,MAAM,IAAI6gB,GAElC,EAAKI,mBAAqBH,EAAaE,gBAAgB,aAAc,CAAE9kC,OAAM,IAC7E,EAAK+kC,mBAAmBjhB,MAAM,IAAI0gB,GAElC,EAAKQ,yBAA2BJ,EAAaE,gBAAgB,mBAAoB,CAAE9kC,OAAM,IACzF,EAAKglC,yBAAyBlhB,MAAM,IAAI2gB,GAExC,EAAKQ,mBAAqBL,EAAaE,gBAAgB,aAAc,CAAE9kC,OAAM,IAC7E,EAAKilC,mBAAmBnhB,MAAM,IAAI4gB,MAEvC,IAEX,EAnMA,G,GyBfA,WACI,WACYt2D,EACAC,0BADAD,qBACAC,eAsBf,OAlBG,YAAA62D,gBAAA,SAAgBptD,GAGZ,QAFuCA,EAEjBqtD,QAGpB,YAAArrC,KAAN,SAAW1F,EAAoB8a,EAAgBq1B,G,gIAC3C,SAAMtkF,KAAKmuB,cAAcG,WAAW,uC,OAEpC,GAFA,UAEKtuB,KAAKilF,gBAAgBjlF,KAAKouB,SAC3B,MAAM,IAAI,KAGd,MAAO,CAAP,EAAOpuB,KAAKouB,QAAQ82D,OAAO/wC,EAAY,CACnC8a,OAAM,EACNq1B,SAAQ,aAGpB,EAzBA,G,GCEA,WACI,WACY3yC,EACAkmB,GADAlmB,cACAkmB,2BAoBf,OAjBG,YAAArG,QAAA,SAAQua,EAAgC/qD,GACpC,OAAOhhB,KAAK2xC,OAAOc,SACfzyC,KAAK63D,oBAAoBZ,YAAY,UAAA12B,KAAA,CAAKwrC,EAAc,WAAY/qD,KAI5E,YAAAg3C,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAusB,WAAA,WACI,OAAOhsB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAE3C,EAvBA,G,GCFA,WACI,WACY4c,EACAkmB,GADAlmB,cACAkmB,2BAuBf,OApBG,YAAArG,QAAA,SAAQ1sC,EAA2B9D,GAC/B,IAAM2D,EAAS3kB,KAAK63D,oBAAoBZ,YAAY,yCAC7CnyC,GAAO,CACV6C,QAAS7C,EAAQ6C,QAAU,CAAEpD,SAAUO,EAAQ6C,QAAQpD,mBACxDvD,GAEH,OAAOhhB,KAAK2xC,OAAOc,SAAS9tB,IAGhC,YAAAqzC,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAusB,WAAA,WACI,OAAOhsB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAE3C,EA1BA,G,GCIA,WACI,WACY4c,EACAkmB,EACAyJ,GAFA3vB,cACAkmB,2BACAyJ,6BA0Df,OAvDG,YAAA9P,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACY2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACAqgE,EAAenlF,KAAKolF,yBAAyBz9D,GAAW7C,EAAUoC,EAClEqS,EAAc5R,GAAWA,EAAQ4R,YACjCxgB,EAAewgB,GAAgBA,EAAkCxgB,qBACjE2kD,EAAuBnkC,GAAgBA,EAAiCmkC,6BACxEC,EAA+BpkC,GAAgBA,EAAiCokC,qCAEtF,IAAKh2C,EACD,MAAM,IAAI,GAA4B,CAAC,YAGnC,MAAwBA,EAAO,SAArB6Q,EAAc7Q,EAAO,UAEvC,OAAO3nB,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAYkuB,EAAcnkE,IAC1EgD,MAAK,WACN,SAAK2tB,OAAOc,SAAS,EAAK6uB,sBAAsBhmC,yBAAyB,CACjE/W,SAAQ,EACRiU,UAAS,EACTzf,aAAY,EACZ2kD,qBAAoB,EACpBC,6BAA4B,SAK5C,YAAA3F,SAAA,SAASh3C,GACL,IAAM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpB7N,EAAQ4N,EAAM5N,MAAMkR,WACpB1f,EAASoc,EAAMnN,QAAQue,mBAE7B,OAAIhf,GAAUxO,IAAW,MAAkCA,IAAW,KAI/DjV,QAAQP,OAAO,IAAI,IAHflD,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBT,cAAclwC,EAAMK,QAASvG,KAM1F,YAAAyO,WAAA,WACI,OAAOhsB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG/B,YAAAqwD,yBAAR,SAAiCz9D,GAG7B,QAAKA,IAIwB,UAAtBA,EAAQ6Q,WAA+C,gBAAtB7Q,EAAQ6Q,WAAoD,iBAArB7Q,EAAQpD,WAE/F,EA9DA,G,GCDA,YACI,WACIW,EACAioD,EACAC,EACAC,EACQC,GALZ,MAOI,YACIpoD,EACAioD,EACAC,EACAC,IACH,K,OAPOC,sB,EA+Cf,OArDqD,yBAgB5C,YAAA79C,WAAN,SAAiBzO,G,wIACb,SAAM,YAAMyO,WAAU,UAACzO,I,cAAvB,SAE0B+pB,EAA8B/qC,KAAK2xC,OAAO5c,WAAU,wCACxEsD,EAAgB0S,EAAwB/pB,EAAQuD,WAEpCljB,OAAO+oE,aACrB,GAAMpqE,KAAKstE,kBAAkBC,QAAQl1C,IADrC,M,OACA,S,iBAGJ,MAAO,CAAP,EAAOr4B,KAAK2xC,OAAO5c,oBAGvB/vB,EAAA,UAAAwsD,QAAA,SAAQ1sC,EAA2B9D,GACvB,MAAoC8D,EAAO,QAAhC,cAAkB,GAAE,YAApB,WAAW,KAAE,EAC1B,EAAiF9kB,KAAK2xC,OAAO5c,WAAhFmR,EAAgB,2BAAsB6E,EAAuB,yCAEhF,OAAI7E,MAAuB,KAChBlmC,KAAK2xC,OAAOc,SACfzyC,KAAK63D,oBAAoBZ,YAAY,yCAC9BnyC,GAAO,CACV6C,QAAS,CAAEpD,SAAQ,KACpBvD,IAIP+pB,EAAwBxmB,GAAUljB,OAAO+oE,aAClCpqE,KAAKstE,kBAAkBE,MAC1B,YAAMhc,QAAQrwD,KAAKnB,MACnB8kB,EACA9D,EACAhhB,KAAKitE,aAIN,YAAMzb,QAAO,UAAC1sC,EAAS9D,IAEtC,EArDA,CAAsD,I,GCGtD,WAKI,WACY2wB,EACAkmB,EACA1pC,EACAC,0BAHAujB,cACAkmB,2BACA1pC,qBACAC,eANJ,KAAAi3D,kBAAA,EA8GX,OArGG,YAAA51D,WAAA,SAAWzO,GAAX,WACU8T,EAAQ90B,KAAK2xC,OAAO5c,WAK1B,OAHA/0B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeC,iBAAiBvX,EAAQuD,UACpEvkB,KAAKqlF,uBAAoBrkE,EAAQskE,eAAiBtkE,EAAQskE,cAAcC,iBAEnEvlF,KAAKwlF,sBAIHxlF,KAAKmuB,cAAcU,aACrB7K,MAAK,YAGF,GAFA,EAAKyhE,WAAa32D,GAEb,EAAKqmB,iBAAmB,EAAKA,eAAe9zC,OAAO8yC,WACpD,MAAM,IAAI,IAAiB,IAAqBxjC,sBAGpD,EAAK80E,WAAWl6D,SAAS8tD,MAAM,EAAKlkC,eAAe9zC,OAAO8yC,WAAY,CAClE2B,OAAQ,gBACR8rB,YAAa,EAAKzsB,eAAe9zC,OAAO+yC,SAAW,UAAY,kBAGtEpwB,MAAK,WAAM,SAAK2tB,OAAO5c,cAhBjBtxB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAmB3C,YAAA4d,aAAA,WAMI,OALI3yC,KAAKwlF,uBAAyBxlF,KAAKylF,aACnCzlF,KAAKylF,WAAWl6D,SAASm6D,YACzB1lF,KAAKylF,mBAGFhiF,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAy8B,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACU8N,EAAS9uB,KAAKylF,WAEpB,GAAIzlF,KAAK2lF,6BACL,OAAO3lF,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAYnyC,EAAS9D,IAG9E,IAAKhhB,KAAKwlF,uBAAyBxlF,KAAKqlF,iBACpC,OAAOrlF,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAYnyC,EAAS9D,IACrEgD,MAAK,YACF,IAAMqpB,EAAcvY,EAAMnN,QAAQwe,wBAOlC,OALIkH,IACA,EAAKjf,QAAQ88B,IAAIpzB,SAAS7b,KAAOoxB,GAI9B,IAAI5pC,SAAe,kBAItC,IAAKqrB,EACD,MAAM,IAAI,KAAoB,KAAwBe,uBAK1D,OAFAf,EAAOvD,SAASq6D,SAET5lF,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAYnyC,EAAS9D,IACrEgD,MAAK,YACF,IAAMqpB,EAAcvY,EAAMnN,QAAQwe,wBAOlC,OALIkH,GACAve,EAAOvD,SAASs6D,UAAUx4C,GAIvB,IAAI5pC,SAAe,kBAE7B2gB,OAAM,YAGH,OAFA0K,EAAOvD,SAASm6D,YAETjiF,QAAQP,OAAOhE,OAIlC,YAAA84D,SAAA,SAASh3C,GACL,IACMkG,EADQlnB,KAAK2xC,OAAO5c,WACN7N,MAAMkR,WAE1B,OAAIlR,GAASlnB,KAAK2lF,6BACP3lF,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBT,cAAclwC,EAAMK,QAASvG,IAG/Evd,QAAQP,OAAO,IAAI,KAGtB,YAAAyiF,2BAAR,WACI,IAAM7wD,EAAQ90B,KAAK2xC,OAAO5c,WAE1B,OAAOD,EAAMnN,QAAQue,qBAAuB,MACrCpR,EAAMnN,QAAQue,qBAAuB,MAGxC,YAAAs/C,oBAAR,WACI,SAAUxlF,KAAKm1C,iBAAkBn1C,KAAKm1C,eAAe9zC,OAAO8yC,aAEpE,EAjHA,G,aCCA,WACI,WACYxC,EACAkB,EACAizC,EACAjuB,EACAyJ,GAJA3vB,cACAkB,mCACAizC,iCACAjuB,2BACAyJ,6BA8Ef,OA3ES,YAAA7xC,WAAN,SAAiB,G,IAAElL,EAAQ,WAAEwhE,EAAc,iB,wJACvC,IAAKA,IAAmB/lF,KAAKgmF,iCAAiCD,GAC1D,MAAM,IAAI,KAAqB,qFAG+C,SAAM/lF,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,K,OAGhK,GAHM,EAA4E,SAAxDwmB,EAAuB,yCAAYjE,EAAc,sBACrE,EAAsCiE,EAAwBxmB,GAA5DmL,EAAW,cAAE8K,EAAkB,sBAElC9K,EACD,MAAM,IAAI,IAAiB,IAAqB/e,sBAMpD,OAHM,EAAmDm2B,IAA7CyT,EAAM,KAAoB2K,EAAY,gBAC5C+gC,EAAejmF,KAAKkmF,kBAAkB1rD,EAAoB0qB,EAAcx1B,GAE9E,GAAM1vB,KAAK8lF,0BAA0Br2D,WAAWs2D,EAAel4C,KAAM0M,EAAQ0rC,I,OAE7E,OAFA,SAEO,CAAP,EAAOjmF,KAAK2xC,OAAO5c,oBAGjB,YAAAy8B,QAAN,SAAc1sC,EAA2B9D,G,8IAGrC,GAFQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,cAED6C,EACD,MAAM,IAAI,GAA4B,CAAC,YAKa,OAFxD3nB,KAAK8lF,0BAA0Bv0B,WAEyB,GAAMvxD,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBqD,EAAQpD,Y,OAC1H,OADMwmB,EAA8B,SAAgG,uCACpI,GAAM/qC,KAAK8lF,0BAA0B7oB,OAAOlyB,EAAwBpjB,EAAQpD,UAAUljB,OAAO+oE,e,OAEjH,OAFQ7iD,EAAY,SAA0G,QAE9H,GAAMvnB,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAavE,OAbA,SAEMuY,EAAe,CACjBpgB,iBAAkB,CACdykD,yBAA0B,KAC1BC,iCAAkC,KAClCiZ,YAAa,KACbC,eAAgB,CACZx6B,SAAUh1B,KAKf,CAAP,EAAOvnB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCAAKzT,GAAO,CAAE4R,YAAW,eAGlG,YAAAy+B,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAyvC,aAAA,WAGI,OAFA3yC,KAAK8lF,0BAA0BnzC,eAExBlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG/B,YAAAixD,iCAAR,SAAyChlE,GACrC,QAAUA,EAA6D6sB,MAGnE,YAAAq4C,kBAAR,SAA0B1rD,EAAsD0qB,EAAwCx1B,GAC5G,MAAiC8K,EAAkB,SAAzCgiB,EAAuBhiB,EAAkB,OAE3D,MAAO,CACH,YAAakgB,EACb,cAJqClgB,EAAkB,WAKvD,oBAAqB9K,EACrBktB,WAAY,CAAC,iBACb1G,QAAOA,EACP5uB,SAAU49B,EACV1I,OAAM,IAGlB,EApFA,G,GCTA,WAGI,WACYmC,EACAyL,GAFZ,I,EAAA,OACYzL,gBACAyL,eAiDJ,KAAA2mB,YAAsC,W,MAC1C,EAAKC,aAAyB,QAAb,EAAC,EAAK5mB,mBAAO,WAAErjD,UAG5B,KAAAkqE,aAAuC,W,MAC3C,EAAKD,aAAyB,QAAb,EAAC,EAAK5mB,mBAAO,WAAE8mB,QApDhClxE,KAAKmxE,OAASp1D,SAASC,cAAc,SACrChc,KAAKmxE,OAAOh7B,MAAM+T,gBAAkB,cACpClqD,KAAKmxE,OAAOh7B,MAAMkK,OAAS,IAC3BrgD,KAAKmxE,OAAOh7B,MAAMmK,QAAU,QAC5BtgD,KAAKmxE,OAAOh7B,MAAM4U,OAAS,OAC3B/qD,KAAKmxE,OAAOh7B,MAAMoV,OAAS,IAC3BvrD,KAAKmxE,OAAOh7B,MAAMi7B,QAAU,OAC5BpxE,KAAKmxE,OAAOh7B,MAAMk7B,QAAU,IAC5BrxE,KAAKmxE,OAAOh7B,MAAMoK,MAAQ,OAC1BvgD,KAAKmxE,OAAO5V,YAAcv7D,KAAK2+C,SAAS4c,aAAe,GAEvDv7D,KAAKmxE,OAAOhhC,iBAAiB,OAAQnwC,KAAK+wE,aAC1C/wE,KAAKmxE,OAAOhhC,iBAAiB,QAASnwC,KAAKixE,cAE3CjxE,KAAKgxE,aAAyB,QAAb,EAAChxE,KAAKoqD,mBAAO,WAAErjD,SAwCvC,OArCG,YAAAuqE,SAAA,WACI,OAAOtxE,KAAKmxE,OAAO/wE,OAGvB,YAAA8+C,OAAA,WACI,IAAM7M,EAAYt2B,SAAS+3B,eAAe9zC,KAAK2+C,SAAS9f,aAExD,IAAKwT,EACD,MAAM,IAAI,KAGdA,EAAU2G,YAAYh5C,KAAKmxE,SAG/B,YAAAxxB,OAAA,W,MAC0B,QAAtB72C,EAAA9I,KAAKmxE,OAAOv9B,sBAAU,KAAEC,YAAY7zC,KAAKmxE,SAGrC,YAAAH,aAAR,SAAqBjxB,GAArB,WACSA,GAIa7+C,OAAOge,KAAK6gC,GAEpBj9C,SAAQ,YACd,EAAKquE,OAAOh7B,MAAMjtC,GAAO62C,EAAO72C,IAAQ,OAWpD,EA7DA,ITyQA,SAAYq6E,GACR,EAAA/S,SAAA,WACA,EAAAC,qBAAA,uBACA,EAAAC,WAAA,aACA,EAAAC,SAAA,WACA,EAAAC,WAAA,aACA,EAAAC,uBAAA,yBANJ,CAAY0S,QAA2B,KCtQvC,SAAKC,GACD,IAAAjjB,WAAA,gBACA,IAAAkR,uBAAA,4BAFJ,CAAK+R,QAA4B,KAKjC,ISqDY2C,GAYAC,G,GTjEZ,WAKI,WACYxqC,GADZ,WACYA,uCAqMJ,KAAAm1B,YAAgE,Y,QAC3C,QAAzB,EAAiB,QAAjB,IAAKkB,wBAAY,WAAE5V,kBAAM,YAAG,CACxB9xB,UAAW,EAAK2nC,cAAc5iC,EAAM6iC,cAIpC,KAAAlB,aAAiE,Y,QAC3C,QAA1B,EAAiB,QAAjB,IAAKgB,wBAAY,WAAE1V,mBAAO,YAAG,CACzBhyB,UAAW,EAAK2nC,cAAc5iC,EAAM6iC,cAIpC,KAAAG,sBAA0E,Y,UAC3C,QAAnC,EAAiB,QAAjB,IAAKL,wBAAY,WAAE3V,4BAAgB,YAAG,CAClCtX,SAAwB,QAAhB,EAAE1V,EAAMhG,MAAM,cAAE,WAAEv4B,QAI1B,KAAAwhE,0BAA8E,Y,QACxD,QAA1B,EAAiB,QAAjB,IAAKN,wBAAY,WAAEO,mBAAO,YAAG,CACzBjoC,UAAW,EAAK2nC,cAAc5iC,EAAM6iC,cAIpC,KAAAM,sBAA0E,Y,QACjD,QAA7B,EAAiB,QAAjB,IAAKR,wBAAY,WAAEzV,sBAAU,YAAG,CAC5BZ,QAAU16D,OAAOge,KAAKowB,EAAMmsB,QACvB9sB,OAAM,YAAG,aAAqB,QAArB,EAAIW,EAAMmsB,OAAOvyD,cAAI,WAAE0yD,WACrCh3D,OAAQ,EAAK8tE,qBAAqBpjC,EAAMmsB,WAInD,OAjOS,YAAAhsC,WAAN,SAAiBzO,EAAoCu5B,EAAgB0rC,G,wIACjE,SAAMjmF,KAAK47C,gCAAgCnsB,WAAWw2D,I,OAkBtD,OAlBA,SAEAjmF,KAAKiyE,aAAejxD,EACpBhhB,KAAKy6D,MAAQz6D,KAAKqmF,+BAA+BrlE,EAAQy6C,QACrD+nB,GAA6BjjB,WAC7BijB,GAA6B/R,uBAC3Bj7C,EAAS,CACXilC,OAAQz7D,KAAK2yE,iBAAiB3xD,EAAQy6C,QACtC1b,OAAQ/+B,EAAQ++B,QAAU//C,KAAK6yE,iBAAiB7xD,EAAQ++B,SAEtDumC,EAAS,CACXC,KAAMvmF,KAAK+wE,YACXG,MAAOlxE,KAAKixE,aACZuV,eAAgBxmF,KAAKsyE,sBACrBmU,eAAgBzmF,KAAKyyE,sBACrBiU,mBAAoB1mF,KAAKuyE,2BAG7B,GAAMvyE,KAAK47C,gCAAgC+qC,mBAAmBpsC,EAAQ/jB,EAAQ8vD,I,cAA9E,SAEItmF,KAAKqmF,+BAA+BrlE,EAAQy6C,UAC5Cz7D,KAAK+yE,eAAiB,IAAI,GACtB/xD,EAAQy6C,OAAOvgC,SACfla,EAAQ++B,QAEZ//C,KAAK+yE,eAAe7zB,U,YAItB,YAAA+d,OAAN,SAAamN,G,8IAOM,OANfpqE,KAAKuxD,WACCvwC,EAAmD,CACrDiyD,eAAmC,QAArB,EAAEjzE,KAAK+yE,0BAAc,WAAEzB,WACrCsV,cAAexc,EAAe,CAAC,qBAGpB,GAAMpqE,KAAK47C,gCAAgCirC,mBAAmB7lE,I,OAE7E,GAFMzc,EAAS,SAEX6lE,IAA2C,OAA1B7lE,EAAOuiF,gBAAqD,YAA1BviF,EAAOuiF,gBAC1D,MAAM,IAAI,KAAyB,yDAGvC,MAAO,CAAP,EAAOn+E,WAGX,YAAA4oD,SAAA,W,QACU,EAAsBvxD,KAAK47C,gCAAgCmrC,iCAAzDnrB,EAAO,UAAEH,EAAM,SAEvB,IAAIG,EAAJ,CAIA,IAAMh3D,EAAS5E,KAAK0yE,qBAAqBjX,GAOzC,MAL6B,QAA7B,EAAiB,QAAjB3yD,EAAA9I,KAAKiyE,wBAAY,WAAEzV,sBAAU,YAAG,CAC5B53D,OAAM,EACNg3D,SAAQA,IAGN,IAAI,GAAwBh3D,KAGtC,YAAA+tC,aAAA,WACI3yC,KAAK47C,gCAAgCjJ,gBAGjC,YAAAggC,iBAAR,SAAyBlX,GACrB,OAAIz7D,KAAKqmF,+BAA+B5qB,GAC7B,UAAAtnC,OAAA,CAAO,CACVnC,OAAQ,CACJigB,SAAU,IAAIwpB,EAAOtgC,WAAW0D,YAChC08B,YAAaE,EAAOtgC,WAAWogC,aAEnC6X,eAAgB,CACZnhC,SAAU,IAAIwpB,EAAOzgC,WAAW6D,YAChC08B,YAAaE,EAAOzgC,WAAWugC,aAEnC8X,IAAK5X,EAAO3gC,UAAY,CACpBmX,SAAU,IAAIwpB,EAAO3gC,SAAS+D,YAC9B08B,YAAaE,EAAO3gC,SAASygC,cAElC,GAAApE,OAGA,UAAAhjC,OAAA,CAAO,CACVnC,OAAQypC,EAAO7gC,wBAA0B,CACrCqX,SAAU,IAAIwpB,EAAO7gC,uBAAuBiE,YAC5C08B,YAAaE,EAAO7gC,uBAAuB2gC,aAE/C8X,IAAK5X,EAAO/gC,sBAAwB,CAChCuX,SAAU,IAAIwpB,EAAO/gC,qBAAqBmE,YAC1C08B,YAAaE,EAAO/gC,qBAAqB6gC,cAE9C,GAAApE,QAGC,YAAA0b,iBAAR,SAAyB7xD,GACrB,IAAMsyD,EAAY,SAACvzB,GACf,YAAO,IADQA,UACP7+C,OAAOge,KAAK6gC,GAAuD/5C,QAAO,SAACghF,EAAe99E,G,MAC9F,SAAOA,GAAO,yCAAM89E,KAAa,MAAG,UAAAC,UAAA,CAAU/9E,IAAO62C,EAAO72C,GAAI,IAAK89E,IACvE,KAGN,MAAO,CACHvT,MAAOH,EAAUtyD,EAAQja,SACzB,WAAYusE,EAAUtyD,EAAQ9hB,OAC9B,SAAUo0E,EAAUtyD,EAAQkwD,SAI5B,YAAAmV,+BAAR,SAAuC5qB,GACnC,QAAUA,EAAuCtgC,YAG7C,YAAA+2C,cAAR,SAAsBnhE,GAClB,OAAQA,GACJ,IAAK,SACD,OAAO/Q,KAAKy6D,QAAU+oB,GAA6B/R,uBAC/C8R,GAA4B1S,uBAC5B0S,GAA4B3S,WAEpC,IAAK,iBACD,OAAO2S,GAA4B7S,WAEvC,IAAK,MACD,OAAO1wE,KAAKy6D,QAAU+oB,GAA6B/R,uBAC/C8R,GAA4B9S,qBAC5B8S,GAA4B/S,SAEpC,QACI,MAAM,IAAI1uE,MAAM,2BAIpB,YAAA4wE,qBAAR,SACIjX,GADJ,WAGI,OAAQv6D,OAAOge,KAAKu8C,GACfz1D,QAAO,SAACzB,EAAQmvE,G,QAAa,OAAC,SAAD,SAAC,uBACxBnvE,KAAM,MACR,EAAK2tE,cAAcwB,KAA4B,QAAhB,IAAOA,cAAS,WAAE9X,gBAAsB,CACpE,EAAK+X,oBAAoB,EAAKzB,cAAcwB,KAC/C,MACD,KAGJ,YAAAC,oBAAR,SAA4BppC,GACxB,OAAQA,GACJ,KAAKg5C,GAA4B9S,qBAC7B,MAAO,CACHlmC,UAAS,EACTv2B,QAAS,oBACTjD,KAAM,qBAGd,KAAKwyE,GAA4B1S,uBAC7B,MAAO,CACHtmC,UAAS,EACTv2B,QAAS,sBACTjD,KAAM,uBAGd,KAAKwyE,GAA4B/S,SAC7B,MAAO,CACHjmC,UAAS,EACTv2B,QAAS,oBACTjD,KAAM,qBAGd,KAAKwyE,GAA4B7S,WAC7B,MAAO,CACHnmC,UAAS,EACTv2B,QAAS,sBACTjD,KAAM,uBAGd,KAAKwyE,GAA4B3S,WAC7B,MAAO,CACHrmC,UAAS,EACTv2B,QAAS,sBACTjD,KAAM,uBAGd,QACI,MAAO,CACHw5B,UAAS,EACTv2B,QAAS,gBACTjD,KAAM,aAqC1B,EA3OA,G,uBUiBA,WAII,WACY4gC,EACAkmB,EACAyJ,EACA1lB,EACAsrC,EACAC,EACA3oC,EACA4oC,EACAC,qBARA11C,cACAkmB,2BACAyJ,6BACA1lB,uCACAsrC,yCACAC,oCACA3oC,yBACA4oC,wBACAC,qBA6Mf,OA1MS,YAAA53D,WAAN,SAAiB,G,IAAE+I,EAAS,YAAEjU,EAAQ,WAAEwhE,EAAc,iB,+LAWlD,GAVM,EAIF/lF,KAAK2xC,OAAO5c,WAHMgW,EAAuB,yCACjCjE,EAAc,sBACJlC,EAAwB,0CAGtCpK,EAAuBuQ,EAAwBxmB,EAAUiU,GAAU,mBACnEjR,GAAF,EAA2BiT,UAAsB,IAAxC,QAAE8sD,EAAW,cAC5BtnF,KAAKunF,OAAS/uD,IAAc,KAAoBvqB,oCAE5CsZ,EAGA,OAFAvnB,KAAKwnF,SAAWjgE,EAET,CAAP,EAAOvnB,KAAK2xC,OAAO5c,YAGvB,IAAKgxD,EACD,MAAM,IAAI,KAAqB,2FAGnC,IAAK/lF,KAAKgmF,iCAAiCD,GACvC,MAAM,IAAI,KAAqB,sIAwCnC,OArCQ1zC,EAA2F0zC,EAAc,UAA9F0B,EAAgF1B,EAAc,mBAA1E2B,EAA4D3B,EAAc,gBAAzDxF,EAA2CwF,EAAc,eAAzCvqB,EAA2BuqB,EAAc,WAA7BvpB,EAAeupB,EAAc,WAC3G,EAAmDj/C,IAA7CyT,EAAM,KAAoB2K,EAAY,gBAC5C,EAAiCtgB,IAA/B5nB,EAAS,YAAEC,EAAQ,WAAE4J,EAAK,QAE5B8gE,EAA8Bt1C,EAAU3gB,MAAM,KAAK,GAEnDu0D,EAAejmF,KAAKkmF,kBAAkB1rD,EAAoB0qB,EAAcllD,KAAKunF,OAAShjE,UACtFs3B,EAA+B,CACjC1F,MAAOmxC,EACP9wC,UAAW,Y,MACP,EAAKoxC,0BAA0BpvD,GAC/B,EAAKie,iBAAiBvc,EAAMshC,GACN,QAAtB,IAAKhd,6BAAiB,KAAEiB,QAG5B3D,QAAS,SAAOv2B,EAAG21B,GAAO,uD,0DAStB,OARAl7C,KAAK6nF,4BAA4BrsB,EAAYhjC,EAAWjU,EAAUwhE,GAQ3D,CAAP,EAAO,GANoB,W,MAGvB,OAFsB,QAAtB,EAAAj9E,EAAK01C,6BAAiB,KAAEW,KAAKwoC,GAEtBzsC,EAAQj4C,YAGmBi4C,EAAQh4C,gBAElDk6E,SAAU,W,MACN,EAAKwK,0BAA0BpvD,GACT,QAAtB1vB,EAAA,EAAK01C,6BAAiB,KAAEiB,QAE5B3I,QAAS,SAAC9xC,G,QACN,EAAK4iF,0BAA0BpvD,GACT,QAAtB,IAAKgmB,6BAAiB,KAAEiB,OACF,QAAtB,IAAe3I,mBAAO,UAAtB,EAAyB9xC,KAIjC,GAAMhF,KAAK47C,gCAAgCnsB,WAAWw2D,SAAyBztD,I,OAI/E,GAJA,SAEMid,EAAaz1C,KAAKknF,kCAAkCjkF,QAAQshB,EAAUiU,GAExEx4B,KAAKunF,OAAS,CAEd,GADMzgE,EAAc9J,EAAS,IAAIC,GAC5BwqE,EACD,MAAM,IAAI,KAAqB,+GAEnCznF,KAAK47C,gCAAgCksC,aAAa,CAC9CL,mBAAkB,EAClBhyC,WAAU,EACViyC,gBAAe,EACf5gE,SAAQ,EACRD,MAAK,IAUb,OANA7mB,KAAK47C,gCAAgCrG,cAAcgF,EAAQlI,EAAWwJ,EAAc,CAChF0kC,eAAc,EACd9qC,WAAU,EACVsyC,kBAAmB,CAACp+B,YAAWA,KAG5B,CAAP,EAAO3pD,KAAK2xC,OAAO5c,oBAGjB,YAAAy8B,QAAN,SAAc1sC,EAA2B9D,G,0IAGrC,GAFQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,cAED6C,EACD,MAAM,IAAI,GAA4B,CAAC,YAG3C,IAAK3nB,KAAKwnF,SACN,MAAM,IAAI,KAcd,OAXMjuD,EAAe,CACjBpgB,iBAAkB,CACdykD,yBAA0B,KAC1BC,iCAAkC,KAClCiZ,YAAa,KACbkR,UAAWrgE,EAAQpD,SACnBwyD,eAAgB,CACZx6B,SAAUv8C,KAAKwnF,YAI3B,GAAMxnF,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAEvE,OAFA,SAEO,CAAP,EAAOhhB,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,yCAAKzT,GAAO,CAAE4R,YAAW,eAGlG,YAAAy+B,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGxB,YAAAyvC,aAAN,SAAmB,G,IAACna,EAAS,Y,yGAKzB,OAJAx4B,KAAK4nF,0BAA0BpvD,GAC/Bx4B,KAAKwnF,gBACLxnF,KAAK47C,gCAAgCjJ,eAE9B,CAAP,EAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,oBAG/B,YAAA8yD,4BAAR,SAAoCrsB,EAAwBhjC,EAAoBjU,EAAgBwhE,GAAhG,I,EAAA,OACS/lF,KAAKunF,OAMVvnF,KAAKonF,iBAAmBvvD,OAAO8oB,YAAW,kE,kFAIf,O,sBAFnB3gD,KAAKqnF,eA5JI,IA8JU,GAAMrnF,KAAKmnF,6BAA6Br9B,kB,OAE3D,GAnKc,cAiKN,EAAW,SAAwD,QAGvE9pD,KAAK4nF,0BAA0BpvD,GAC/Bx4B,KAAKy2C,iBAAiB,CAAE6F,QAASt8C,KAAK47C,gCAAgCqsC,cAAgBzsB,OACnF,IArKM,YAsKR,GArKS,0BAqK0B,KACpCx7D,KAAKqnF,cApKA,KA0KL,MAFArnF,KAAKkoF,qBAAqB,CAAE1vD,UAAS,EAAEjU,SAAQ,EAAEwhE,eAAc,IACzC,QAAtB,EAAA/lF,KAAKw+C,6BAAiB,KAAEiB,OAClB,IAAI,KAJVz/C,KAAK6nF,4BAA4BrsB,EAAYhjC,EAAWjU,EAAUwhE,G,qCAOtE/lF,KAAK4nF,0BAA0BpvD,GACT,QAAtB,IAAese,mBAAO,UAAtB,EAAyB,G,gCA/KhB,KAqJS,QAAtB,EAAA92C,KAAKw+C,6BAAiB,KAAEiB,QA+BxB,YAAAyoC,qBAAR,SAA6B,G,IAAE1vD,EAAS,YAAEjU,EAAQ,WAAEwhE,EAAc,iBAC9D/lF,KAAK2yC,aAAa,CAACpuB,SAAQ,EAAEiU,UAAS,IACtCx4B,KAAKyvB,WAAW,CAAE+I,UAAS,EAAEjU,SAAQ,EAAEwhE,eAAc,KAGjD,YAAA6B,0BAAR,SAAkCpvD,GAC1BA,IAAc,KAAoBvqB,sCAClCizC,aAAalhD,KAAKonF,kBAClBpnF,KAAKqnF,cAAgB,IAIrB,YAAArB,iCAAR,SAAyChlE,GACrC,QAAUA,EAAmDqxB,WAGzD,YAAAoE,iBAAR,SAAyB,EAAiC+kB,G,IAA/Blf,EAAO,UAC9Bt8C,KAAKwnF,SAAWlrC,EAChBkf,KAGI,YAAA0qB,kBAAR,SACI1rD,EACA0qB,EACAijC,GAEQ,MAA0E3tD,EAAkB,SAAlFgiB,EAAgEhiB,EAAkB,OAA1E2Z,EAAwD3Z,EAAkB,WAA9D4tD,EAA4C5tD,EAAkB,aAAhD6tD,EAA8B7tD,EAAkB,0BAapG,OAXqB,uCACjB,YAAakgB,EACb,cAAevG,EACf+B,QAAOA,EACP5uB,SAAU49B,EACV1I,OAAM,EACNI,WAAY,CAAC,UAAW,WAAY,SAAU,wBAC1CurC,GAAc,CAAE,iBAAkBA,IAClCE,GAA6B,CAAE,gBAAiBD,KAKhE,EA1NA,G,GCzBA,yBAmCC,OAlCG,YAAAnlF,QAAA,SAAQshB,EAAkBiU,GACtB,GAAIjU,IAAa,KAAoBzW,gBACjC,MAAO,SAGX,GAAIyW,IAAa,KAAoBxW,uBACjC,MAAO,WAGX,GAAIyqB,IAAc,KAAoBvqB,oCAClC,OAAQsW,GACJ,IAAK,aACD,MAAO,aACX,IAAK,UACD,MAAO,UACX,IAAK,aACD,MAAO,MACX,IAAK,MACD,MAAO,MACX,IAAK,QACD,MAAO,QACX,IAAK,SACD,MAAO,SACX,IAAK,SACD,MAAO,SACX,IAAK,OACD,MAAO,OACX,IAAK,UACD,MAAO,UAInB,MAAM,IAAIziB,MAAM,kCAExB,EAnCA,G,UCCA,cAEI,WACc6vC,iBAkBjB,OAfG,YAAA6f,QAAA,SAAQ82B,EAA4B3pC,GAChC,OAAOl7C,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAijC,SAAA,SAASrZ,GACL,OAAOl7C,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAAtF,WAAA,SAAWkvB,GACP,OAAOl7C,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,SAAagM,GACT,OAAOl7C,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAE3C,EArBA,G,GCOA,YACI,WACI7P,EACAioD,EACAC,EACAC,EACQv4B,GALZ,MAOI,YAAM5vB,EAAOioD,EAAoBC,EAAsBC,IAAkB,K,OAFjEv4B,gB,EAgCf,OAtCmD,yBAWhD9vC,EAAA,UAAAwsD,QAAA,SAAQ1sC,EAA2B9D,GAAnC,WACI,OAAO,YAAMwwC,QAAO,UAAC1sC,EAAS9D,GACzBoD,OAAM,SAACllB,GACJ,OAAMA,aAAiB,MAAkB,UAAAmtB,KAAA,CAAKntB,EAAMsZ,KAAK5T,OAAQ,CAAE6iB,KAAM,4BAIlE,IAAIhkB,SAAQ,WACf,EAAKqxC,YAAYyC,SAASr4C,EAAMsZ,KAAK4+D,gBAAgB4C,QAAS,CAC1DmF,MAAOjgF,EAAMsZ,KAAK4+D,gBAAgBC,mBAClC+H,QAASlgF,EAAMsZ,KAAK4+D,gBAAgBiI,aACpCC,GAAIpgF,EAAMsZ,KAAK4+D,gBAAgB8C,sBACrB,WARPz2E,QAAQP,OAAOhE,OAatC,YAAA84D,SAAA,SAASh3C,GACL,IAAM8T,EAAQ90B,KAAK2xC,OAAO5c,WACpB7N,EAAQ4N,EAAM5N,MAAMkR,WAE1B,OAAIlR,GAAS4N,EAAMnN,QAAQue,qBAAuB,KACvClmC,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBT,cAAclwC,EAAMK,QAASvG,IAG/E,YAAMg3C,SAAQ,UAACh3C,IAE9B,EAtCA,CAAoD,I,GCNpD,YACI,WAAYhN,GAAZ,MACI,YAAMA,GAAW,8BAA4B,K,OAE7C,EAAK3L,KAAO,0BACZ,EAAK0I,KAAO,sB,EAEnB,OAPoD,yBAOrD,EAPA,CAAqD,ON2DrD,SCAYo1E,GACR,EAAAoC,gBAAA,mBACA,EAAAC,SAAA,WACA,EAAAC,eAAA,kBACA,EAAAC,IAAA,MACA,EAAAC,WAAA,aACA,EAAAC,SAAA,iBACA,EAAAC,QAAA,cACA,EAAAC,KAAA,OACA,EAAAC,WAAA,mBDTJ,CCAY5C,QAAS,KAYrB,SAAYC,GACR,EAAA4C,SAAA,WACA,EAAAjvC,WAAA,aACA,EAAAkvC,KAAA,OAHJ,CAAY7C,QAAiB,KMzD7B,ICoQY8C,GAiiBAC,GAUAC,G,GD/yBZ,WAMI,WACYz3C,EACA4B,EACAskB,EACAyJ,EACAzuB,EACA64B,EACA9nD,EACAuK,GAPAwjB,cACA4B,8BACAskB,2BACAyJ,6BACAzuB,mCACA64B,qCACA9nD,sBACAuK,qBAyPf,OAtPG,YAAAsB,WAAA,SAAWzO,GAAX,WACYuD,EAAavD,EAAO,SAI5B,OAFAhhB,KAAKqpF,mBAAmB9kE,GAEjBvkB,KAAKmuB,cAAc0rB,OACrB71B,MAAK,YACF,WAAIvgB,SAAQ,SAACR,EAASC,GAClB,EAAKomF,aAAeC,EAChB,EAAKC,gBAAgBxoE,EAAS,CAAE/d,QAAO,EAAEC,OAAM,KAEnD,EAAKomF,aAAaG,cAEzBzlE,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAAy8B,QAAA,SAAQua,EAAgC/qD,GAAxC,WACY2G,EAAYokD,EAAY,QAEhC,IAAKpkD,IAAYA,EAAQpD,SACrB,MAAM,IAAI,KAAqB,yFAKnC,OAFAvkB,KAAKqpF,mBAAmB1hE,EAAQpD,UAEzBvkB,KAAK0pF,oBAAoB/hE,EAAQpD,UACnCP,MAAK,YACF,SAAK2tB,OAAOc,SAAS,EAAKolB,oBAAoBZ,YAAY,UAAA12B,KAAA,CAAKwrC,EAAc,WAAY/qD,IACxFgD,MAAK,WACF,SAAK2tB,OAAOc,SAAS,EAAK6uB,sBAAsBlmC,cAAc,yCAAKzT,GAAO,CAAE4R,YAAW,aAIvG,YAAAy+B,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAyvC,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG/B,YAAAs0D,mBAAR,SAA2B9kE,GACvB,IAAMuQ,EAAQ90B,KAAK2xC,OAAO5c,WAG1B,GAFA/0B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeC,iBAAiBhU,IAEvDvkB,KAAKm1C,iBAAmBn1C,KAAKm1C,eAAe3a,mBAC7C,MAAM,IAAI,IAAiB,IAAqB7pB,uBAIhD,YAAAg5E,gBAAR,SAAwBtgB,GACpB,OAAQA,EAAYugB,eAChB,IAAK,aACD,MAAO,KACX,IAAK,YACD,MAAO,KACX,QACI,MAAO,OAIX,YAAAF,oBAAR,SAA4BnlE,GAA5B,WAEU8T,EADQr4B,KAAK2xC,OAAO5c,WACEuD,eAAeC,iBAAiBhU,GAE5D,GAAI8T,EAAe,CACP,MAAuBA,EAAa,mBAC5C,GAAImC,GAAsBA,EAAmBjB,YAAYY,MACrD,OAAO12B,QAAQR,QAAQ,CAAEk3B,MAAO9B,EAAcmC,mBAAmBjB,YAAYY,QAIrF,OAAO,IAAI12B,SAAyB,SAACR,EAASC,GAC1C,IAAK,EAAKomF,aACN,MAAM,IAAI,KAAoB,KAAwBz5D,uBAGtD,EAAKg6D,uBACL,EAAKA,sBAAsB3mF,OAAO,IAAI,MAG1C,EAAK2mF,sBAAwB,CAAE5mF,QAAO,EAAEC,OAAM,GAC9C,EAAKomF,aAAaQ,uBAIlB,YAAAN,gBAAR,SAAwBxoE,EAAmC+oE,GAA3D,WACoBC,EAAkBhpE,EAAO,OAEzC,IAAKgpE,IAAkBhqF,KAAKm1C,eACxB,MAAM,IAAI,KAAqB,wEAKnC,OAFAn1C,KAAKiqF,eAAiBD,EAEf,4DACAhqF,KAAKiqF,gBACLjqF,KAAKm1C,eAAe3a,oBAAkB,CACzC6zC,UAAW,CACP6b,0BAA2B,SAACtlF,EAAQu1B,EAAOgwD,EAAUC,EAAgBC,GAC7DF,GAAYA,EAASG,sBAAwBlE,GAAkB6C,KAC/D,EAAKsB,2BAA2B3lF,EAAQu1B,EAAOgwD,EAAUC,EAAgBC,GAEzE,EAAKG,yBAAyB5lF,EAAQu1B,IAG9CswD,qBAAsB,WAAM,SAAKC,0BACjCC,iBAAkB,YACN,MAAeX,EAAa,WAEhCjwC,GACA,EAAK6wC,oBAAoBC,EAAS9wC,IAG1C+wC,kBAAmB,WACff,EAAS9mF,UACT,EAAK8nF,kBAETC,2BAA4B,WAAM,SAAS9nF,OAAO,IAAI,SAK1D,YAAAqnF,2BAAR,SACI3lF,EACAu1B,EACAgwD,EACAC,EACAC,GAEA,IAAMvzC,EAAU92C,KAAKiqF,gBAAkBjqF,KAAKiqF,eAAenzC,SAAW,EAAAoM,KAChE0nB,EAAkB5qE,KAAKiqF,gBAAkBjqF,KAAKiqF,eAAerf,iBAAmB,EAAA1nB,KAElFt+C,EACAkyC,EAAQlyC,GACDu1B,GAASn6B,KAAKm1C,gBACrBn1C,KAAKu0D,2BACDv0D,KAAKm1C,eAAep4B,GACpBod,EACAgwD,EACAC,EACAC,GAECrmE,KAAK4mD,GACLxmD,MAAM0yB,IAIX,YAAA0zC,yBAAR,SAAiC5lF,EAAiCu1B,GAC9D,IAAKn6B,KAAK6pF,sBACN,MAAM,IAAI,KAAoB,KAAwBh6D,wBAGtDsK,GAAUv1B,IAME5E,KAAKiqF,gBAAkBjqF,KAAKiqF,eAAenzC,SAAW,EAAAoM,MAE9Dt+C,GAER5E,KAAK6pF,sBAAsB3mF,OAAO0B,IAT9B5E,KAAK6pF,sBAAsB5mF,QAAQ,CAAEk3B,MAAK,KAY1C,YAAAo6B,2BAAR,SACIhwC,EACA4V,EACAgwD,EACAC,EACAC,GALJ,WAOI,OAAOrqF,KAAK2xC,OAAOc,SAASzyC,KAAK0rE,8BAA8Bxd,mBAAkB,WAC7E,OAAO,EAAK0H,yBAAyBz7B,EAAOgwD,EAAUC,EAAgBC,GACrErmE,MAAK,WACF,OAAAvgB,QAAQysB,IAAI,CACZ,EAAKyhB,OAAOc,SAAS,EAAKc,uBAAuBne,uBACjD,EAAKuc,OAAOc,SAAS,EAAKI,4BAA4BvuB,kBAAkBC,WAE7E,CAAEA,SAAQ,IAAK,CAAEiuB,QAAS,uBAGzB,YAAAk4C,uBAAR,WACI,IAAM51D,EAAQ90B,KAAK2xC,OAAO5c,WACpBxJ,EAAWuJ,EAAMvJ,SAAS4J,cAC1ByD,EAAc9D,EAAMzzB,OAAOw3B,iBAEjC,IAAKtN,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,IAAK0oB,EACD,MAAM,IAAI,IAAiB,IAAqBvoB,uBAGpD,MAAO,CACH46E,wBAAuBA,EACvBC,oBAAmBA,EACnBhmC,aAActsB,EAAYtR,SAASG,KACnC1J,YAAa/d,KAAK2pF,gBAAgB/wD,EAAYmB,aAAakvC,cAC3DjC,MAAO,CACH18B,MAAO1R,EAAYmB,aAAaoxD,UAChC5rE,OAAQ6vC,OAAO7jC,EAAS1D,UACxBujE,SAAQA,KAKZ,YAAAx1B,yBAAR,SAAiCz7B,EAAgBgwD,EAAqBC,EAA0BC,GAC5F,OAAOrqF,KAAK4jB,eAAe6T,KAAK,gBAAiB,CAC7Chf,QAAS,CACLgM,OAAQ,YACR,eAAgB,qCAEpBjM,KAAM,CACF2hB,MAAK,EACLwJ,SAAU,WACVhf,OAAQ,wBACRwlE,SAAUxyC,KAAKC,UAAUuyC,GACzBC,eAAgBzyC,KAAKC,UAAUwyC,GAC/BC,gBAAiB1yC,KAAKC,UAAUyyC,OAKpC,YAAAU,eAAR,WACI,IACMvkE,EADQxmB,KAAK2xC,OAAO5c,WACGvO,eAAe0R,oBAE5C,IAAKl4B,KAAKspF,aACN,MAAM,IAAI,KAAoB,KAAwBz5D,uBAGtDrJ,GAAkBA,EAAe3I,YACjC7d,KAAKspF,aAAa+B,cAAc7kE,EAAe3I,aAI/C,YAAA+sE,oBAAR,SAA4BC,EAAqCv4B,GAC7D,IAAMg5B,EAAgBvvE,SAAS+3B,eAAewe,EAAQi5B,WAElDD,GAAiBT,EAAQ9wC,aACzBuxC,EAAcn1C,MAAMmK,QAAU,iBAG1C,EAvQA,G,GEfA,WACI,WACYnyB,wBAWf,OARG,YAAA0rB,KAAA,WAGI,OAAO75C,KAAKmuB,cAAcG,WAFR,oCAGbtK,MAAK,WAAM,gBAAChD,GACT,WAAK6W,OAAmC2zD,cAAcxqE,QAGtE,EAbA,G,UDk3Be,SAASyqE,GAA+BC,GACnD,OAAO5yE,QAAS4yE,EAA8DC,2BAC1E7yE,QAAS4yE,EAA8DE,wBACvE9yE,QAAS4yE,EAA8DG,2BAlmB/E,SAAY3C,GACR,EAAA4C,MAAA,QACA,EAAAl1E,QAAA,UAFJ,CAAYsyE,QAAS,KAiiBrB,SAAYC,GACR,EAAA4C,OAAA,SACA,EAAAC,QAAA,UACA,EAAAtb,WAAA,aACA,EAAAE,WAAA,aACA,EAAArQ,WAAA,OACA,EAAAI,MAAA,YACA,EAAAsrB,KAAA,OAPJ,CAAY9C,QAAiB,KAU7B,SAAYC,GACR,EAAA2C,OAAA,SACA,EAAAxrB,WAAA,OACA,EAAAI,MAAA,QACA,EAAAsrB,KAAA,aAJJ,CAAY7C,QAAuB,KE1yBnC,IAAM8C,GAAe,CAAC/C,GAAkB4C,OAAQ5C,GAAkBxoB,O,GAElE,WAQI,WACYhvB,EACAkB,EACAyuB,EACAzJ,EACAs0B,EACArjB,EACAsjB,GANAz6C,cACAkB,mCACAyuB,6BACAzJ,2BACAs0B,2BACArjB,iCACAsjB,eAqbf,OAlbS,YAAA38D,WAAN,SAAiBzO,G,kJAOU,OANvBhhB,KAAKytE,mBAAqBzsD,EAEpBqX,EAAgBr4B,KAAK2xC,OAAO5c,WAAWuD,eAAeyS,wBAAwB/qC,KAAKqkF,wBAAwB9/D,UACzG,EAAkG8T,EAAa,mBAAzFgxB,EAAoB,uBAAEC,EAAsB,yBAAE+iC,EAAuB,0BAEnGrsF,KAAKssF,yBAA2BD,EAChC,EAAArsF,KAAuB,GAAMA,KAAKusF,cAAcljC,EAAsBC,I,OAChD,OADtB,EAAKkjC,gBAAkB,SACvB,EAAAxsF,KAAsB,GAAMA,KAAKysF,cAAczsF,KAAKqkF,wBAAwB9/D,W,OAE5E,OAFA,EAAKmoE,eAAiB,SAEf,CAAP,EAAOjpF,QAAQR,QAAQjD,KAAK2xC,OAAO5c,qBAGjC,YAAAy8B,QAAN,SAAcua,EAAgC/qD,G,wLAK1C,GAJQ2G,EAAsBokD,EAAY,QAAtB7kD,EAAK,iBAAK6kD,EAAxB,cAIDpkD,IAAYA,EAAQ4R,YACrB,MAAM,IAAI,GAA4B,CAAC,wB,OAGnCA,EAAqC5R,EAAO,YAA/B6Q,EAAwB7Q,EAAO,UAApBpD,EAAaoD,EAAO,SAC5C,GAAF,EAAyE4R,GAAvEmkC,qBAAA,WAAuB,GAAK,EAAE,IAAAC,6BAAA,WAA+B2K,GAAK,EACpEqkB,EAAoC,UAAAhuE,SAAA,CAASutE,GAAc3nE,IAElCuoB,EAAmB9sC,KAAK2xC,OAAO5c,WAAWxJ,SAASqhB,qBAAoB,sBAGlG,GAAM5sC,KAAK2xC,OAAOc,SAASzyC,KAAK8oE,0BAA0BxL,iBAAiBxwB,KAD3E,M,OACA,S,wBAGA,aAAoBvT,IAEElgB,EAAgFkgB,EAAW,aAA1E+oC,EAA+D/oC,EAAW,SAAlCkpC,EAAuBlpC,EAAW,MAEjHpgB,EAAmB,CACfC,aAAc,CAAEC,MAAK,GACrBipD,gCAA+B,EAC/BG,mBAAkB,EAClBmqB,SAAQA,G,OARZ,M,cAWID,EACA,GAAM3sF,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,KADvE2rE,M,OACA,S,iBAEU,SAAM3sF,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAqBkU,EAAS,WAAWjU,K,OAEpG,OAFTuQ,EAAQ,SACRuD,EAAgBvD,EAAMwD,eAAeyS,wBAAwBxmB,GACpD,GAAMvkB,KAAK6sF,sBAAsBx0D,I,OAA1C9zB,EAAS,SACH8U,GAAsD,QAAjD,EAAyB,QAAzB,EAAK9U,EAAOuoF,yBAAa,IAAIvoF,EAAO8zB,yBAAa,IAAI,CAAEtb,GAAI,KAAI,GAChFgwE,EAAcxoF,EAAOrF,MAErBia,EAAmB,CACfwpD,kBAAmB,CAAEtpD,MAAK,GAC1BukD,yBAA0BF,EAC1BkvB,SAAQA,G,wBAIXD,EAAD,OACA,GAAM3sF,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OAAvE,S,mBAGE2iD,EAAiB3jE,KAAKgtF,qBAAqBzoE,EAAUpL,EAAkBwkD,G,mBAGlE,O,yBAAA,GAAM39D,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAcuoC,K,QAA3E,MAAO,CAAP,EAAO,U,QAEA,O,WAAA,GAAM3jE,KAAK4iE,yBACd5iE,KAAKitF,+BAA+B,EAAOF,GAC3CxoE,EACAm5C,EACAC,I,QAJJ,MAAO,CAAP,EAAO,U,0BASf,YAAA3F,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAG9B,YAAAyvC,aAAA,WAGI,OAFA3yC,KAAKktF,kBAEEzpF,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAG/B,YAAAi4D,qBAAR,SAA6BzoE,EAAkBpL,EAA0CwkD,GAKrF,MAAO,CAAEp5C,SAAQ,EAAEgV,YAJCokC,EACd,CAAExkD,iBAAgB,EAAEwkD,6BAA4B,GAChD,CAAExkD,iBAAgB,KAKd,YAAAypD,yBAAd,SACI1jE,EACAqlB,EACAm5C,EACAC,G,sJAEA,KAAMz+D,aAAiB,MACnB,MAAMA,EAMV,OAHMiuF,EAA0B,UAAA9gE,KAAA,CAAKntB,EAAMsZ,KAAK5T,OAAQ,CAAE6iB,KAAM,+BAC1D2lE,EAA8B,UAAA/gE,KAAA,CAAKntB,EAAMsZ,KAAK5T,OAAQ,CAAE6iB,KAAM,4BAEhE0lE,IACMzvD,EAAiCx+B,EAAMsZ,KAAK8hD,6BAEpB,oBAAhB58B,EAAO3sB,KACV,CAAP,EAAO,IAAItN,SAAQ,WACXi6B,EAAOxD,KAAK8xC,cACZn0C,OAAOC,SAASlF,QAAQ8K,EAAOxD,KAAK8xC,kBAMhDohB,GACMC,EAAenuF,EAAMsZ,KAAK4+D,gBAAgB/9D,MACjC,GAAMrZ,KAAKstF,eAAeC,iBAAiBF,KAF1DD,M,OAEM7oF,EAAS,SACH8U,GAAU9U,EAAOuoF,eAAiB,CAAE/vE,GAAI,KAAI,GAElD5D,EAAmB,CACrBwpD,kBAAmB,CAAEtpD,MAAK,GAC1BukD,yBAA0BF,EAC1BkvB,SAAQA,GAGNjpB,EAAiB3jE,KAAKgtF,qBAAqBzoE,EAAUpL,EAAkBwkD,G,iBAGlE,O,sBAAA,GAAM39D,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAcuoC,K,OAA3E,MAAO,CAAP,EAAO,U,OAEP,M,WAAM3jE,KAAKitF,+BAA+B,EAAO1oF,EAAOrF,O,OAIhE,MAAMA,UAGF,YAAA+tF,+BAAR,SACI/tF,EACA6tF,GAEA,OAAM7tF,aAAiB,MAIhB,UAAAmtB,KAAA,CAAKntB,EAAMsZ,KAAK5T,OAAQ,CAAE6iB,KAAM,oBAAuBslE,EACxD,IAAIjrF,MAAMirF,EAAY/4E,SAJjB9U,GAQD,YAAA2tF,sBAAd,SAAoCx0D,G,gJAOhC,GAFqBg1D,EAAoCh1D,EAAa,YAAnCzS,EAAsByS,EAAa,OAA3B7N,EAAc6N,EAAa,WAEjEg1D,EACD,MAAM,IAAI,IAAiB,IAAqB18E,sB,OAG5CiV,G,KACCujE,GAAkB4C,OAAlB5C,Y,KAGAA,GAAkB5oB,WAAlB4oB,Y,KAcAA,GAAkBxoB,MAAlBwoB,Y,KAMAA,GAAkB8C,KAAlB9C,Y,mBAtBM,SAAMnpF,KAAKstF,eAAeE,qBAAqBH,EAAc,CAAEI,WAAYjjE,GAAa,CAAEkjE,eAAcA,K,OAA/G,MAAO,CAAP,EAAO,U,OASA,OANDz7D,EAAOjyB,KAAKssF,yBAA2BtsF,KAAK2tF,yBAAyB,GAAK3tF,KAAK4tF,oBAC/EC,EAAiB7tF,KAAK8tF,yBACxB9tF,KAAK2xC,OAAO5c,WAAWvO,eAAe0R,oBACtCl4B,KAAK2xC,OAAO5c,WAAWxO,SAAS4R,eAG7B,GAAMn4B,KAAKstF,eAAeS,oBAAoB,CACjDh9E,KAAMq4E,GAAwB7oB,WAC9BtuC,KAAI,EACJ+7D,gBAAiBH,K,OAHrB,MAAO,CAAP,EAAO,U,OAUA,OAFD3zD,EAAOl6B,KAAKiuF,sBAAsB7E,GAAwBzoB,MAAOn2C,GAEhE,GAAMxqB,KAAKstF,eAAeY,oBAAoBb,EAAcnzD,EAAM,CAAEwzD,eAAcA,K,OAAzF,MAAO,CAAP,EAAO,U,OAMA,OAFDxzD,EAAOl6B,KAAKiuF,sBAAsB7E,GAAwB6C,MAEzD,GAAMjsF,KAAKstF,eAAea,wBAAwBd,EAAcnzD,I,OAAvE,MAAO,CAAP,EAAO,U,OAIP,MAAM,IAAI,IAAiB,IAAqBvpB,8BAIpD,YAAA0zE,sBAAR,WACI,IAAKrkF,KAAKytE,mBACN,MAAM,IAAI,KAAoB,KAAwB59C,uBAG1D,OAAO7vB,KAAKytE,oBAGR,YAAA2gB,4BAAR,WACY,MAAapuF,KAAKqkF,wBAAuB,SAEjD,IAAKgK,EACD,MAAM,IAAI,KAAqB,qFAGnC,OAAOA,GAGH,YAAAT,kBAAR,WACI,IAAK5tF,KAAK0sF,eACN,MAAM,IAAI,KAAoB,KAAwB78D,uBAG1D,OAAO7vB,KAAK0sF,gBAGR,YAAAiB,uBAAR,WACI,IAAK3tF,KAAKsuF,oBACN,MAAM,IAAI,KAAoB,KAAwBz+D,uBAG1D,OAAO7vB,KAAKsuF,qBAGR,YAAAhB,aAAR,WACI,IAAKttF,KAAKwsF,gBACN,MAAM,IAAI,KAAoB,KAAwB38D,uBAG1D,OAAO7vB,KAAKwsF,iBAGF,YAAAD,cAAd,SAA4BljC,EAA8BC,G,gIACtD,OAAItpD,KAAKwsF,gBAA0B,CAAP,EAAO/oF,QAAQR,QAAQjD,KAAKwsF,kBAEjD,GAAMxsF,KAAKmsF,oBAAoBtyC,KAClCwP,EACAC,EACAtpD,KAAKosF,U,OAHT,MAAO,CAAP,EAAO,kBAOH,YAAAK,cAAR,SAAsBloE,GAAtB,IAIQgqE,EAJR,OACUC,EAAoBjqE,EACpB,EAA2BvkB,KAAKouF,8BAA9BptE,EAAO,UAAE6d,EAAW,cAI5B,OAAO,IAAIp7B,SAAQ,SAACR,EAASC,GAKzB,OAJK,EAAKurF,kBACN,EAAKA,gBAAkB,EAAKnB,eAAeoB,YAGvCF,GACJ,KAAKrF,GAAkB5oB,WACnB,GAAI,EAAK+rB,0BAA4Bb,GAA+BzqE,GAAU,CAClE,MAA8EA,EAAO,yBAA3D6qE,EAAoD7qE,EAAO,yBAAjC4qE,EAA0B5qE,EAAO,sBAEvF2tE,EAAoB,EAAKF,gBAAgBG,WAAWzF,GAAkBvY,aAAe,EAAK6d,gBAAgBxuF,OAAOkpF,GAAkBvY,WAAY+a,GAC/IkD,EAAoB,EAAKJ,gBAAgBG,WAAWzF,GAAkBzY,aAAe,EAAK+d,gBAAgBxuF,OAAOkpF,GAAkBzY,WAAYmb,GAC/IiD,EAAiB,EAAKL,gBAAgBG,WAAWzF,GAAkB6C,UAAY,EAAKyC,gBAAgBxuF,OAAOkpF,GAAkB6C,QAASJ,GAE5I,EAAK0C,oBAAsB,CAACK,EAAmBE,EAAmBC,GAClEP,EAAgB,EAAKD,oBAAoB,GAEzC,IACIK,EAAkB9qB,MAAM,IAAI8nB,EAAyB9sD,aACrDgwD,EAAkBhrB,MAAM,IAAIgoB,EAAyBhtD,aACrDiwD,EAAejrB,MAAM,IAAI+nB,EAAsB/sD,aACjD,MAAO3/B,GACLgE,EAAO,IAAI,KAAqB,sEAEjC,CACHqrF,EAAgB,EAAKE,gBAAgBG,WAAWJ,IAAsB,EAAKC,gBAAgBxuF,OAAOuuF,EAAmBxtE,GAErH,IACIutE,EAAc1qB,MAAM,IAAIhlC,GAC1B,MAAO3/B,GACLgE,EAAO,IAAI,KAAqB,kEAIxC,MACJ,KAAKimF,GAAkBxoB,MACvB,KAAKwoB,GAAkB8C,KACnBsC,EAAgB,EAAKE,gBAAgBG,WAAWJ,IAAsB,EAAKC,gBAAgBxuF,OAAOuuF,EAAmBxtE,GAErH,IACIutE,EAAc1qB,MAAM,IAAIhlC,GAC1B,MAAO3/B,GACLgE,EAAO,IAAI,KAAqB,iEAGpC,MAEJ,KAAKimF,GAAkB4C,QAI3B9oF,EAAQsrF,OAIR,YAAAQ,kBAAR,SAA0BnyE,GACtB,OAAIA,EAUO,CAAEW,KAFLX,EAAO,KAEIkB,QAFXlB,EAAO,YAEa07B,MAFpB17B,EAAO,SAEoB47B,MAF3B57B,EAAO,SAE2B87B,YAFlC97B,EAAO,WAEoDkY,MAF3DlY,EAAO,qBAKR,CAAE07B,MAAO,KAGZ,YAAAw1C,yBAAR,SAAiCtnE,EAAiCD,GACxD,MAA0BC,GAAkBD,GAAY,CAAEvJ,UAAW,QAASC,SAAU,IACxF5U,GADW,YACQ,IADE,YACa2mF,OAChChuE,EAAYhhB,KAAKouF,8BAA6B,QAEtD,GAAIpuF,KAAKssF,0BAA4Bb,GAA+BzqE,GAAU,CAClE,MAA0BA,EAAO,sBAEzC,GAAIiuE,EAAuB,CACvB,IAAMpxE,EAAa9B,SAAS+3B,eAAem7C,EAAsBpwD,aAAgB9iB,SAAS+3B,eAAem7C,EAAsBpwD,aAAkCz+B,MAAQ,GAErKyd,GAAc2I,IACdA,EAAiB,yCAAKA,GAAc,CAAE3I,WAAU,MAK5D,IAamBG,EAbbpB,EAAU,CACZA,QAAU5c,KAAK+uF,kBAAkBvoE,IAGrC,GAAID,GAAYA,EAASE,UAAU,IAAM,aAAqBF,EAASE,UAAU,IAAK,CAClF,IAAMmnC,EAAkBrnC,EAASE,UAAU,GACnCI,EAAUN,EAAQ,MAG1B,OAFQvI,EAAU4vC,EAAe,OAElB,yCAAKhxC,GAAO,CAAEiK,MAAK,EAAExe,KAAI,EAAE2V,MAAK,IAAK,yCAAKpB,GAAO,CAAEiK,MAAK,EAAExe,KAAI,IAGjF,OAAIme,GACQ,EAAiBA,EAAc,OAAxBxI,EAAUwI,EAAc,OAExB,yCAAK5J,GAAO,CAAEiK,MAAK,EAAExe,KAAI,EAAE2V,MAAK,IAAK,yCAAKpB,GAAO,CAAEiK,MAAK,EAAExe,KAAI,KAG1E,yCAAKuU,GAAO,CAAEvU,KAAI,KAMrB,YAAA4lF,sBAAR,SAA8B37B,EAAkC48B,G,MAGxD3qF,EAFEgiB,EAAWvmB,KAAK2xC,OAAO5c,WAAWxO,SAAS4R,cAC3C3R,EAAiBxmB,KAAK2xC,OAAO5c,WAAWvO,eAAe0R,oBAU7D,OAPA3zB,EAAS,CACL4qF,gBAAc,KACV,EAAC78B,GAAUA,IAAY82B,GAAwB7oB,YAAcvgE,KAAKssF,yBAA2BtsF,KAAK2tF,yBAAyB,GAAK3tF,KAAK4tF,oBACrI,EAAAI,gBAAiBhuF,KAAK8tF,yBAAyBtnE,EAAgBD,G,IAI/D+rC,GACJ,KAAK82B,GAAwB7oB,WACzB,IAAM70C,EAAO1rB,KAAK2xC,OAAO5c,WAAWrJ,KAAKkK,UAEzC,GAAIlK,GAAQ,aAAuBA,GAAQ,EAAG,CAC1C,IAAMgK,EAAkB11B,KAAK2xC,OAAO5c,WAAWW,gBAAgB+C,qBAC/Dl0B,EAAS,yCAAKA,GAAM,CAAE8kB,SAAUrpB,KAAKovF,0BAA0B15D,EAAiBnP,KAGpF,OAAO2oE,EAAO,yCAAK3qF,GAAM,CAAE8qF,mBAAoB,gBAAkB9qF,EAErE,KAAK6kF,GAAwBzoB,MACzB,OAAO,yCAAKp8D,GAAM,CAAEkpF,WAAYyB,IAIxC,OAAO3qF,GAGH,YAAA6qF,0BAAR,SAAkC15D,EAA2BnP,GACnD,MAA0BmP,GAAmBnP,GAAY,CAAEvJ,UAAW,QAASC,SAAU,IACzF5U,GADW,YACQ,IADE,YACa2mF,OAElCpyE,EAAU,CACZA,QAAU5c,KAAK+uF,kBAAkBr5D,IAGrC,GAAInP,GAAYA,EAASE,UAAU,GAAI,CACnC,IACQzI,EADgBuI,EAASE,UAAU,GACV,MAEjC,OAAO,yCAAK7J,GAAO,CAAEvU,KAAI,EAAE2V,MAAK,IAGpC,OAAI0X,GACQ1X,EAAU0X,EAAe,MAE1B,yCAAI9Y,GAAO,CAAEvU,KAAI,EAAE2V,MAAK,KAG5B,yCAAIpB,GAAO,CAAEvU,KAAI,KAGpB,YAAA6kF,gBAAR,WACQltF,KAAK0sF,iBACL1sF,KAAK0sF,eAAe7pB,UACpB7iE,KAAK0sF,wBAGjB,EApcA,G,GCrBA,WACI,WACYv+D,EACAC,0BADAD,qBACAC,eAmBf,OAhBG,YAAAyrB,KAAA,SAAKwP,EAA8BimC,EAAuBrgC,GAA1D,WACI,OAAOjvD,KAAKmuB,cACPG,WAAW,6BACXtK,MAAK,WACF,IAAK,EAAKoK,QAAQmhE,OACd,MAAM,IAAI,KAGd,OAAO,EAAKnhE,QAAQmhE,OAAOlmC,EAAsB,CAC7CimC,cAAa,EACbrgC,OAAM,EACNugC,MAAO,CAAC,wBAAyB,oBACjCnqC,WAAY,kCAIhC,EAtBA,G,GCGA,WAGI,WACYl3B,wBAmBf,OAhBG,YAAAsB,WAAA,sBACI,OAAOzvB,KAAKmuB,cACPG,WAXM,8CAYNtK,MAAK,WAAM,OAAAlb,EAAK2mF,YAAe53D,OAAkC63D,MAAMC,QACvE3rE,MAAK,WAAM,OAAAlb,MAGpB,YAAAy0E,aAAA,WACI,IAAKv9E,KAAKyvF,YACN,MAAM,IAAI,KAAoB,KAAwB5/D,uBAK1D,OAFA7vB,KAAKyvF,YAAYG,sBAEV5vF,KAAKyvF,YAAYI,kBAEhC,EAvBA,G,GCEA,YACI,WACI3qE,EACAioD,EACAC,EACAC,EACQoP,GALZ,MAOI,YAAMv3D,EAAOioD,EAAoBC,EAAsBC,IAAkB,K,OAFjEoP,qB,EAuBf,OA7BiD,yBAW9C,YAAAhtD,WAAA,SAAWzO,GAGP,OAFAhhB,KAAKy8E,iBAAiBhtD,aAEf,YAAMA,WAAU,UAACzO,IAG5Bhc,EAAA,UAAAwsD,QAAA,SAAQ1sC,EAA2B9D,GAC/B,IAAM3H,EAAQrZ,KAAKy8E,iBAAiBc,eAC9BuS,EAAmB,UAAAt7D,MAAA,CAAM,GAAI1P,EAAS,CACxC6C,QAAS,CACL4R,YAAa,CACTrV,gBAAiB7K,MAK7B,OAAO,YAAMm4C,QAAO,UAACs+B,EAAkB9uE,IAE/C,EA7BA,CAAkD,I,YCJlD,YACI,WAAYhN,GAAZ,MACI,YAAMA,GAAW,oFAAkF,K,OAEnG,EAAK3L,KAAO,6BACZ,EAAK0I,KAAO,mB,EAEnB,OAPuD,yBAOxD,EAPA,CAAwD,M,GCYxD,WAII,WACY4gC,EACAkmB,EACAyJ,EACAzuB,EACAi2B,EACAzV,EACA08B,EACAnsE,GAPA+tB,cACAkmB,2BACAyJ,6BACAzuB,mCACAi2B,iCACAzV,oCACA08B,wBACAnsE,sBA2If,OAxIS,YAAA6L,WAAN,W,sIACgB,SAAMzvB,KAAK+vF,iBAAiBl2C,Q,OAGxC,OAHMm2C,EAAM,SACZhwF,KAAKiwF,WAAaD,EAEX,CAAP,EAAOhwF,KAAK2xC,OAAO5c,oBAGvB,YAAA4d,aAAA,WAII,OAHA3yC,KAAKm1C,sBACLn1C,KAAKiwF,kBAEExsF,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGjC,YAAAy8B,QAAN,SAAc1sC,EAA2B9D,G,2JAIrC,GAHQ2G,EAAsB7C,EAAO,QAAjBoC,EAAK,iBAAKpC,EAAxB,aACcorE,EAAclwF,KAAI,YAEjC2nB,EACD,MAAM,IAAI,KAAqB,gFAGnC,IAAKuoE,EACD,MAAM,IAAI,KAAoB,KAAwBrgE,uB,iBAG5Bid,EAAmB9sC,KAAK2xC,OAAO5c,WAAWxJ,SAASqhB,qBAAoB,sBAEjG,MACA,GAAM5sC,KAAK2xC,OAAOc,SAASzyC,KAAK8oE,0BAA0BxL,iBAAiBxwB,K,OAA3E,S,iBAGJ,SAAM9sC,KAAK2xC,OAAOc,SAASzyC,KAAK63D,oBAAoBZ,YAAY/vC,EAAOlG,K,OACvE,OADA,SACA,GAAMhhB,KAAK2xC,OAAOc,SAASzyC,KAAKqzD,6BAA6BzC,kBAAkBjpC,EAAQpD,SAAU,CAAEuoB,eAAc,M,OAEnG,OAFd,SAEc,GAAM9sC,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBqD,EAAQpD,SAAUvD,K,OAI9G,GAJM8T,EAAQ,SAEd90B,KAAKm1C,eAAiBrgB,EAAMwD,eAAeC,iBAAiB5Q,EAAQpD,WAE/DvkB,KAAKm1C,iBAAmBn1C,KAAKm1C,eAAezlB,YAC7C,MAAM,IAAI,IAAiB,IAAqB/e,sB,IAGhD3Q,KAAKmwF,sBAALnwF,aAEA,IACI,EAAQ23C,KAAKmG,MAAM99C,KAAKm1C,eAAezlB,aACzC,MAAOxwB,GACL,MAAM,IAAI,IAAiB,IAAqByR,sBAGpD,SAAM3Q,KAAKowF,gCAAgCzoE,EAAQpD,SAAU,EAAMxH,K,OAAnE,S,iBAGW,O,uBAAA,GAAM/c,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,CAAC7W,SAAUoD,EAAQpD,SAAUgV,YAAa,CAAEY,MAAO,EAAMpd,Q,OAApI,MAAO,CAAP,EAAO,U,OAEP,I,sBAAqB,MAAsC,+BAAtB,EAAMvE,KAAKE,OAC5C,MAAO,CAAP,EAAO,IAAIjV,SAAQ,WACP,MAAiB,EAAM+U,KAAK8hD,2BAA2BpgC,KAAI,aACnErC,OAAOC,SAASlF,QAAQo5C,OAGhC,MAAM,E,QAIA,SAAM,IAAIvoE,SAA4B,SAACR,EAASC,GAC1DgtF,EAAUviE,SAAS0mC,KAAK,CACpBxV,WAAY,SAAO,G,IAAE5pB,EAAU,aAAEH,EAAK,Q,qIAClC,MAAc,cAAVA,EACO,CAAP,EAAO,EAAO,IAAI,KAGR,aAAVA,GAA4CG,EAC5C,GAAMj1B,KAAKowF,gCAAgCzoE,EAAQpD,SAAU0Q,IAD7DH,M,OAGA,OAFA,UAE2C,QAA3C,EAAuB,QAAvB,EAAI90B,KAAKm1C,0BAAc,WAAE3a,8BAAkB,WAAE61D,uBAClC,CAAP,EAAO,EAAQp7D,IAGZ,CAAP,EAAO,K,OAGX,MAAc,aAAVH,GAA4CG,EACrC,CAAP,EAAO,EAAQA,IAGL,aAAVH,EACO,CAAP,EAAO,EAAO,IAAI,GAA2B,yFAGjD5xB,EAAO,IAAI,M,aAEfotF,WAAY,YACR,IAAK,EAAKn7C,iBAAmB,EAAKA,eAAezlB,YAC7C,MAAM,IAAI,IAAiB,IAAqB/e,sBAGpD4/E,EAAU54C,KAAKmG,MAAM,EAAK3I,eAAezlB,qB,QAKrD,iBArCMyK,EAAQ,UAsCH,CAAP,EAAOn6B,KAAK2xC,OAAOc,SAASzyC,KAAKshE,sBAAsBlmC,cAAc,CACjE7W,SAAUoD,EAAQpD,SAClBgV,YAAa,CAAEY,MAAK,OAIrB,CAAP,EAAOn6B,KAAK2xC,OAAO5c,oBAGvB,YAAAijC,SAAA,WACI,OAAOv0D,QAAQP,OAAO,IAAI,KAGtB,YAAAitF,oBAAR,W,QACI,OAA8C,QAA9C,EAA0B,QAA1B,EAAOnwF,KAAKm1C,0BAAc,WAAE3a,8BAAkB,WAAEg2D,uBAG5C,YAAAJ,gCAAR,SAAwCzsD,EAAkB8sD,GACtD,IAAM70E,EAAM,2BAA2B+nB,EAAQ,oBACzC3iB,EAAU,CACZvI,QAAS,CACLgM,OAAQ,IAAYrM,OACpB,iBAAkB,MAEtBI,KAAM,CACFi4E,WAAU,EACV9sD,SAAQ,IAIhB,OAAO3jC,KAAK4jB,eAAe6T,KAAK7b,EAAKoF,IAE7C,EAvJA,G,GCdA,WACI,WACYmN,EACDC,0BADCD,qBACDC,eAcd,OAXG,YAAAyrB,KAAA,sBACI,OAAO75C,KAAKmuB,cACPG,WAAW,wDACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQsiE,IACd,MAAM,IAAI,KAGd,OAAO5nF,EAAKslB,QAAQsiE,QAGpC,EAjBA,G,ICHKC,G,YCUL,WACI,WACYC,mCAyHf,OAtHG,YAAAC,gBAAA,sBACI,OAAO,YAAS,SAAAvuF,WAAWrC,QAAO,SAAC6jB,GAC/BA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAqBrO,2BAEhD,IAAMo7E,EAAUhoF,EAAKioF,mBAAmB7rE,GAClC7L,EAAQvQ,EAAKkoF,uBAAuB9rE,GACpCwQ,EAAkB5sB,EAAKs9D,oBAAoBlhD,GAEjD,OAAOpc,EAAKmoF,qBAAqB53E,GAC5B2K,MAAK,YACF,OAAAlb,EAAK8nF,yBAAyBC,gBAAgB,yCACnCC,GAAO,CACVx3D,UAAW43D,EAAaz3D,mBAE5B/D,GAEC1R,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CACV,KAAqBpO,yBACrB6C,EACA04E,IAEJptE,EAAS3kB,iBAGpBilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAqBzO,sBAAuB+C,YAK7F,YAAAw4E,iBAAA,SAAiBp4E,GAAjB,WACI,OAAO,YAAS,SAAAzW,WAAWrC,QAAO,SAAC6jB,GAC/BA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAqBlO,iCAAsC,CAAEkD,aAAY,KAEpG,IAAM+3E,EAAU,EAAKC,mBAAmB7rE,GAClC7L,EAAQ,EAAK23E,uBAAuB9rE,GAE1C,OAAO,EAAK+rE,qBAAqB53E,GAC5B2K,MAAK,YACF,SAAK4sE,yBAAyBO,iBAAiB,yCACxCL,GAAO,CACVx3D,UAAW43D,EAAaz3D,mBACzB1gB,GACEiL,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAAqBjO,0BAA2B0C,EAAM,oBAC7EO,aAAY,GACTm4E,KAEPptE,EAAS3kB,iBAGpBilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAAqBtO,uBAAwB4C,EAAU,CAAEI,aAAY,aAK9G,YAAAq4E,yBAAR,SAAiC/3E,GAC7B,SAAKA,IAAUA,EAAMogB,mBC5Ed,SAAkB43D,GAC7B,OAAOA,EAAKC,UAAYrwE,KAAK++B,MADlB,ECAoBqxC,EFiFD,IAAIpwE,KAAK5H,EAAMk4E,mBADpB,GE/EnBC,EAAU,IAAIvwE,KAAKowE,EAAKnwE,YAEtBuwE,WAAWJ,EAAKK,aF6EC,GE3ElBF,IF2EH,IEhF2BH,EACzBG,GFqFE,YAAAR,uBAAR,SAA+B9rE,GACnB,IACFjB,EADkBiB,EAAM6P,WAAU,YACfkE,qBAEzB,GAAKhV,EAIL,MAAO,CACHwV,iBAAkBxV,EAAKwV,iBACvB83D,kBAAmBttE,EAAKstE,oBAIxB,YAAAN,qBAAR,SAA6B53E,GACzB,OAAOA,GAASrZ,KAAKoxF,yBAAyB/3E,GAC1C5V,QAAQR,QAAQoW,GAChBrZ,KAAK4wF,yBAAyBe,sBAAsB3tE,MAAK,SAAC,GAAa,OAAN,EAAD,SAGhE,YAAAoiD,oBAAR,SAA4BlhD,GAGxB,OAFcA,EAAM6P,WAEPW,gBAAgB+C,sBAGzB,YAAAs4D,mBAAR,SAA2B7rE,GACvB,IAAM4P,EAAQ5P,EAAM6P,WACd1zB,EAASyzB,EAAMzzB,OAAOw3B,iBACtBnN,EAAOoJ,EAAMpJ,KAAKkK,UAExB,IAAKv0B,EACD,MAAM,IAAI,IAAiB,IAAqBgP,uBAGpD,IAAKqb,EACD,MAAM,IAAI,IAAiB,IAAqBzb,aAOpD,MAAO,CACHyW,WALmBgF,EAAI,WAMvBkmE,QALgBvwF,EAAO04B,aAAY,QAMnCmrB,cALa7jD,EAAOg0C,gBAAgBw8C,gBAAkBxwF,EAAOg0C,gBAAkBh0C,EAAOimB,UAAQ,OAQ1G,EA3HA,G,GGFA,yBA+DC,OA9DGxe,EAAA,UAAAgpF,kBAAA,SACIn5E,GAEA,IAAM,EAAuB3Y,KAAKq7B,mBAAmB1iB,GAA7CH,EAAI,OAAKsM,EAAO,mBAAlB,UAEN,OAAO,yCACAA,GAAO,CACVtM,KAAM,CACFkpB,mBAAoB1hC,KAAK+xF,6BAA6Bv5E,EAAKw5E,yBAKvElpF,EAAA,UAAAmpF,uBAAA,SACIt5E,GAEA,OAAO3Y,KAAKq7B,mBAAmB1iB,IAGnC7P,EAAA,UAAAopF,6BAAA,SACIv5E,GAEA,OAAO,yCACAA,GAAQ,CACXH,KAAM,CACFihB,iBAAkB9gB,EAASH,KAAK0hB,KAAK7gB,MACrCk4E,kBAAmB54E,EAASH,KAAK0hB,KAAKi4D,eAK1C,YAAAJ,6BAAR,SAAqCrwD,GAArC,WACI,YAAO,IAD0BA,UAC1BA,EACFviB,KAAI,YACD,OAAI,EAAKizE,oBAAoBv5E,GC1CtC,SAA+BA,GAClC,MAAO,CACH0wB,YAAa1wB,EAAWO,aACxBi5E,kBAAmBx5E,EAAWy5E,mBAC9B3uD,SAAU9qB,EAAW8qB,SACrB8sD,WAAY53E,EAAW05E,YACvBC,uBAAwB35E,EAAW45E,yBACnC7sE,OAAQ,SACR7U,KAAM,WARP,CD2C0C8H,GAG7B,EAAK65E,kBAAkB75E,GE9CpC,SAA6BA,GAChC,MAAO,CACH0wB,YAAa1wB,EAAWO,aACxBi5E,kBAAmBx5E,EAAWy5E,mBAC9B3uD,SAAU9qB,EAAW8qB,SACrB8sD,WAAY53E,EAAW05E,YACvBC,uBAAwB35E,EAAW45E,yBACnCE,cAAe95E,EAAW+5E,eAC1B5O,OAAQnrE,EAAWmrE,OACnBtF,KAAM7lE,EAAW6lE,KACjB94D,OAAQ/M,EAAW+M,OACnB7U,KAAM,QAXP,CF+CwC8H,GG/CxC,SAA6BA,GAChC,MAAO,CACH0wB,YAAa1wB,EAAWO,aACxBi5E,kBAAmBx5E,EAAWy5E,mBAC9B3uD,SAAU9qB,EAAW8qB,SACrBi0C,IAAK/+D,EAAW++D,IAChBzuB,MAAOtwC,EAAWg6E,OAClBC,YAAaj6E,EAAW0pD,aACxBwwB,WAAYl6E,EAAW2pD,YACvBvgD,MAAOpJ,EAAWoJ,MAClBuwE,uBAAwB35E,EAAW45E,yBACnC7sE,OAAQ/M,EAAW+M,OACnB7U,KAAM,QAZP,CHkDoC8H,OAI/B,YAAAu5E,oBAAR,SAA4Bv5E,GACxB,MAAkC,WAA3BA,EAAWm6E,aAGd,YAAAN,kBAAR,SAA0B75E,GACtB,MAAkC,SAA3BA,EAAWm6E,aAGd,YAAA33D,mBAAR,SAA8B1iB,GAClB,IAAMH,EAAqBG,EAAQ,KAApBmM,EAAO,iBAAKnM,EAA7B,UAEN,OAAO,yCACAmM,GAAO,CACVtM,KAAI,KAGhB,EA/DA,G,GIAA,WAGI,WACYsX,EACAlM,GADAkM,eACAlM,sBAER5jB,KAAKizF,aAAe,IAAI,GAkF/B,OA/EG,YAAAtB,oBAAA,SACI,G,IAAEntE,YAAO,EAAqB,GAAE,WAIhC,OAAOxkB,KAAK4jB,eAAelb,IAFf,uDAE8D,CAAE8b,QAAO,IAAIR,MAAK,YAAY,OAAC,SAAD,SAAC,uBAClGrL,GAAQ,CACXH,KAAM,CACFihB,iBAAkB9gB,EAASH,KAAK0hB,KAAK7gB,MACrCk4E,kBAAmB54E,EAASH,KAAK0hB,KAAKi4D,kBAKlD,YAAAtB,gBAAA,SACIqC,EACAx9D,GAEA,OAAO,EACH11B,KAAKmzF,4BAA4BD,EAAgBx9D,GACjD11B,KAAKozF,iBAAiBF,IAG9B,YAAA/B,iBAAA,SACI+B,EACAn6E,GAFJ,WAIU+L,EAAU,yCACTouE,GAAc,CACjBn6E,aAAY,IAGhB,OAAO,IAAItV,SAAQ,SAACR,EAASC,GACzB,EAAK4sB,QAAQujE,wBACTvuE,GAAS,SACLsX,EACAzjB,GACE,SACFzV,EAAO,EAAK+vF,aAAahB,uBAAuB71D,IAChDn5B,EAAQ,EAAKgwF,aAAanB,kBAAkBn5E,WAKpD,YAAAy6E,iBAAR,SACIF,GADJ,WAGI,OAAO,IAAIzvF,SAAQ,SAACR,EAASC,GACzB,EAAK4sB,QAAQ+gE,gBACTqC,GAAgB,SACZ92D,EACAzjB,GACC,SACDzV,EAAO,EAAK+vF,aAAahB,uBAAuB71D,IAChDn5B,EAAQ,EAAKgwF,aAAanB,kBAAkBn5E,WAKpD,YAAAw6E,4BAAR,SACID,EACAx9D,GAFJ,WAIU5Q,EAAU,yCACTouE,GAAc,CACjBx9D,gBAAiB,aAAqBA,KAG1C,OAAO,IAAIjyB,SAAQ,SAACR,EAASC,GACzB,EAAK4sB,QAAQwjE,2BACTxuE,GAAS,SACLsX,EACAzjB,GACC,SACDzV,EAAO,EAAK+vF,aAAahB,uBAAuB71D,IAChDn5B,EAAQ,EAAKgwF,aAAanB,kBAAkBn5E,WAIhE,EAzFA,G,gCCFA,WACI,WACY46E,wCAiBf,OAdG,YAAAz8B,cAAA,SAAc91C,GAAd,WACI,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtBA,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA0B3J,iCAErD,EAAKm5E,8BAA8Bz8B,cAAc91C,GAC5CgD,MAAK,YACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA0B1J,+BAAgC1B,EAASH,KAAK0hB,OACnGpW,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAA0B/J,4BAA6B3B,WAI5G,EAnBA,G,GCHA,WACI,WACYiL,EACAmzC,GADAnzC,sBACAmzC,eAWf,OARG,YAAAD,cAAA,SAAc,G,IAAEtyC,YAAO,EAAqB,GAAE,WAEpC/L,EAAU,CACZ,kBAAmBzY,KAAK+2D,QAAQ9H,QAGpC,OAAOjvD,KAAK4jB,eAAelb,IALf,qCAKwB,CAAE+P,QAAO,EAAE+L,QAAO,KAE9D,EAdA,G,WCMA,WACI,WACYupC,4BA0Gf,OAvGG,YAAAp3B,cAAA,SAAc/Z,EAAsCoE,GAApD,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAM6D,EAAUzC,EAAM6P,WAAWpN,QAAQse,eACnC1hB,EAAWvD,GAAWA,EAAQuD,UAAYoD,GAAWA,EAAQY,WAEnEzE,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2BlZ,8BAAmC,CAAE0Z,SAAQ,KAEnG,EAAKwpC,kBAAkBrlD,IAAI6b,GACtBoS,cAAc/Z,EAAS,yCAAKoE,GAAO,CAAEuD,SAAQ,KAC7CP,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2BjZ,8BAAmC,CAAEyZ,SAAQ,KACnGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAA2BzZ,oBAAqB1L,EAAO,CAAEqlB,SAAQ,aAKlH,YAAAivE,aAAA,SAAan9D,EAA0BrV,GAAvC,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAM6D,EAAUzC,EAAM6P,WAAWpN,QAAQse,eACnC1hB,EAAWvD,GAAWA,EAAQuD,UAAYoD,GAAWA,EAAQY,WAEnEzE,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2B/Y,6BAAkC,CAAEuZ,SAAQ,KAElG,EAAKwpC,kBAAkBrlD,IAAI6b,GACtBivE,aAAan9D,EAAkB,yCAAKrV,GAAO,CAAEuD,SAAQ,KACrDP,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2B9Y,6BAAkC,CAAEsZ,SAAQ,KAClGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAA2BtZ,mBAAoB7L,EAAO,CAAEqlB,SAAQ,aAKjH,YAAAkL,WAAA,SAAWzO,GAAX,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMgR,EAAQ5P,EAAM6P,WACdpN,EAAUmN,EAAMnN,QAAQse,eACxB1hB,EAAWvD,GAAWA,EAAQuD,UAAYoD,GAAWA,EAAQY,WAC7DkrE,EAAgB,yCAAKzyE,GAAO,CAAEuD,SAAQ,IAE5C,GAAIA,GAAYuQ,EAAMmZ,mBAAmB9O,cAAc5a,GACnD,OAAOT,EAAS3kB,WAGpB2kB,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2B5Y,2BAAgC,CAAEoZ,SAAQ,KAEhG,EAAKwpC,kBAAkBrlD,IAAI6b,GACtBkL,WAAWgkE,GACXzvE,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2B3Y,2BAAgC,CAAEmZ,SAAQ,KAChGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAA2BnZ,iBAAkBhM,EAAO,CAAEqlB,SAAQ,aAK/G,YAAAouB,aAAA,SAAa3xB,GAAb,WACI,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMgR,EAAQ5P,EAAM6P,WACdpN,EAAUmN,EAAMnN,QAAQse,eACxB1hB,EAAWvD,GAAWA,EAAQuD,UAAYoD,GAAWA,EAAQY,WAEnE,GAAIhE,IAAauQ,EAAMmZ,mBAAmB9O,cAAc5a,GACpD,OAAOT,EAAS3kB,WAGpB2kB,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2BzY,6BAAkC,CAAEiZ,SAAQ,KAElG,EAAKwpC,kBAAkBrlD,IAAI6b,GACtBouB,aAAa,yCAAK3xB,GAAO,CAAEuD,SAAQ,KACnCP,MAAK,WACFF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2BxY,6BAAkC,CAAEgZ,SAAQ,KAClGT,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAA2BhZ,mBAAoBnM,EAAO,CAAEqlB,SAAQ,aAKjH,YAAA2pC,kBAAA,SAAkBtoC,EAA4B5E,GAC1C,OAAO,EAAA1e,WAAWrC,QAAO,SAAC6jB,GACtB,IACMG,EAAO,CAAEM,SADEvD,GAAWA,EAAQuD,UAGpCT,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2BvY,gCAAqCyY,IAE3F2B,IAAS5B,MAAK,WACVF,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,KAA2BtY,iCAAsCwY,IAC5FH,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,KAA2B3Y,wBAAyBxM,EAAO+kB,WAI5G,EA5GA,G,GCKA,WAII,WACY0tB,EACA+hD,EACA7gD,EACAwgB,EACAllC,GAJAwjB,cACA+hD,iCACA7gD,mCACAwgB,oCACAllC,qBAERnuB,KAAKouB,QAAUyJ,OAoJtB,OAjJG,YAAApI,WAAA,SAAWzO,GAAX,WACoBsyC,EAA4BtyC,EAAO,OAApBuD,EAAavD,EAAO,SAEnD,IAAKsyC,IAAkB/uC,EACnB,MAAM,IAAI,KAAqB,wEAGnC,OAAOvkB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,IAC1EP,MAAK,YAAS,WAAIvgB,SAAQ,SAACR,EAASC,GAGjC,GAFA,EAAKiyC,eAAiBrgB,EAAMwD,eAAeC,iBAAiBhU,IAEvD,EAAK4wB,eACN,MAAM,IAAI,IAAiB,IAAqBxkC,sBASpD,EAAKwd,cAAcggC,WAAW,EAAKhZ,gBANnB,WACZ,EAAKw+C,mBAAmBrgC,GACnBtvC,KAAK/gB,GACLmhB,MAAMlhB,MAIVkhB,MAAMlhB,SAEd8gB,MAAK,WAAM,SAAK2tB,OAAO5c,eAGhC,YAAA4d,aAAA,WAGI,OAFA3yC,KAAKm1C,sBAEE1xC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4B,cAAA,SAAc/Z,EAA6BoE,GACvC,IAAM4yE,EAA2B,yCAC1B5zF,KAAK2xC,OAAO5c,WAAWW,gBAAgB+C,sBAAoB,CAC9Dxa,aAAcrB,EAAQqB,eAG1B,OAAOje,KAAK2xC,OAAOc,SACfzyC,KAAK0zF,0BAA0B/8D,cAAci9D,EAA0B5yE,KAI/E,YAAAwyE,aAAA,SAAaK,EAAkB7yE,GAC3B,OAAOhhB,KAAK2xC,OAAOc,SACfzyC,KAAK0zF,0BAA0Bx9D,qBAAqB29D,EAAU7yE,KAI9D,YAAA2yE,mBAAR,SAA2B3yE,GAA3B,WACI,OAAO,IAAIvd,SAAQ,SAACR,EAASC,GACjB,MAAkF8d,EAAO,UAA9EzY,EAAuEyY,EAAO,gBAA9E,WAAkB,eAAQ,EAAE,EAA2CA,EAAO,QAAlD,WAAU,eAAQ,EAAE,EAAuBA,EAAO,QAA9B,WAAU,eAAQ,EAC/EmzB,EAAa,EAAKgB,gBAAkB,EAAKA,eAAe9zC,OAAO8yC,WAErE,IAAKp4B,SAAS+3B,eAAezB,GACzB,OAAOnvC,EAAO,IAAI,KAAqB,8EAG3C,IAAK,EAAKkrB,QAAQygC,kBACd,OAAO3rD,EAAO,IAAI,KAAoB,KAAwBmwB,yBAGlE,IAAK8gB,EACD,OAAOjxC,EAAO,IAAI,IAAiB,IAAqByN,uBAG5D,IAAMs6D,EAAS,IAAI,EAAK78C,QAAQygC,kBAAkBqc,QAAQ4oB,YAAY,CAClEppB,OAAQ,CACJC,WAAY,cAEhBhX,MAAO,6EACPuW,SAAU/1B,EACV4/C,gBAAiB,YACb,EAAKC,8BACAhwE,MAAK,WAAM,SAAgB8mD,MAC3B1mD,MAAM0yB,IAEfA,QAAS,YACL5zC,EAAOhE,GACP43C,EAAQ53C,IAEZ6rE,QAAS,YACL,EAAKC,sBAAsBF,GACtB9mD,MAAK,WACF/gB,IACA8nE,EAAQD,MAEX1mD,MAAM0yB,MAMnB,OAFAm0B,EAAO9pE,KAAKkxC,GAEL44B,MAIP,YAAA+oB,4BAAR,sBACUzvE,EAAWvkB,KAAKm1C,gBAAkBn1C,KAAKm1C,eAAep4B,GACtDyxC,EAASxuD,KAAK2xC,OAAO5c,WAAWgZ,eAAe5Y,YAAY,UAC3D60C,EAAcxb,EAASA,EAAOwb,mBAEpC,IAAKzlD,IAAaylD,EACd,MAAM,IAAI,KAGd,OAAOhqE,KAAK2xC,OAAOc,SACf,SAAA1uB,aAAA,CAAa,KAA2BlZ,8BAAmC,CAAE0Z,SAAQ,KAEpFP,MAAK,WAAM,OAAAlb,EAAK6oC,OAAOc,SACpB3pC,EAAKuqD,6BAA6B1C,mBAAmBpsC,EAAU,CAAEylD,YAAW,QAE/EhmD,MAAK,YACF,IAAMwqC,EAAS15B,EAAMiZ,eAAe5Y,YAAY,UAC1Ci2C,EAAgB5c,GAAUA,EAAOnlC,UAAYmlC,EAAOnlC,SAASzM,QAC7DA,EAAUkY,EAAMY,gBAAgB+C,qBAEtC,QAAI2yC,EACA,MAAM,IAAI,KAGd,OAAKA,GAAiB5B,GAAuB4B,EAAexuD,GAAW,IAC5D9T,EAAK6oC,OAAO5c,WAGhBjsB,EAAK6oC,OAAOc,SACf3pC,EAAK4qF,0BAA0B/8D,cAAc+yC,GAAuB0B,QAG3EpnD,MAAK,WAAM,OAAAlb,EAAK6oC,OAAOc,SACpB,SAAA1uB,aAAA,CAAa,KAA2BjZ,8BAAmC,CAAEyZ,SAAQ,QAExFH,OAAM,YAAS,OAAAtb,EAAK6oC,OAAOc,SACxB,SAAApuB,kBAAA,CAAkB,KAA2BzZ,oBAAqB1L,EAAO,CAAEqlB,SAAQ,SAIvF,YAAAymD,sBAAR,SAA8BF,GAC1B,OAAO9qE,KAAK2xC,OAAOc,SACfzyC,KAAKqzD,6BAA6Bn+B,eAAe,SAAU,CACvD80C,YAAac,EAAeQ,gCAI5C,EA/JA,G,GCLA,WACI,WACY35B,EACA+hD,EACA7gD,EACAW,EACAygD,GAJAtiD,cACA+hD,iCACA7gD,mCACAW,oCACAygD,sCA+Ef,OA5EG,YAAAt9D,cAAA,SAAc/Z,EAA6BoE,GACvC,IAAM0U,EAAkB11B,KAAK2xC,OAAO5c,WAAWW,gBAAgB+C,qBAE/D,IAAK/C,EACD,MAAM,IAAI,IAAiB,IAAqB7kB,wBAGpD,IAAM+iF,EAA2B,yCAC1Bl+D,GAAe,CAClBzX,aAAcrB,EAAQqB,eAG1B,OAAOje,KAAK2xC,OAAOc,SACfzyC,KAAK0zF,0BAA0B/8D,cAAci9D,EAA0B5yE,KAI/E,YAAAwyE,aAAA,SAAaK,EAAkB7yE,GAC3B,OAAOhhB,KAAK2xC,OAAOc,SACfzyC,KAAK0zF,0BAA0Bx9D,qBAAqB29D,EAAU7yE,KAIhE,YAAAyO,WAAN,SAAiBzO,G,gJAGb,GAFQyyB,EAAwBzyB,EAAO,UAApBuD,EAAavD,EAAO,UAElCyyB,IAAclvB,EACf,MAAM,IAAI,KAAqB,2EAGrB,SAAMvkB,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,K,OAG5F,OAHMuQ,EAAQ,SACRuD,EAAgBvD,EAAMwD,eAAeyS,wBAAwBxmB,GAEnE,GAAMvkB,KAAKwzC,6BAA6B/jB,WAAW4I,I,OASnD,OATA,SAEQszC,EAAiBtzC,EAAcmC,mBAAkB,aACnDoxC,EAAWn4B,EAAUygD,oBAEvBvoB,GAAgBC,GAChB5rE,KAAK8rE,gBAAgBF,EAAUD,EAAc,iBAG1C,CAAP,EAAO3rE,KAAK2xC,OAAO5c,oBAGjB,YAAA4d,aAAN,W,gIACI,SAAM3yC,KAAKwzC,6BAA6Bb,gB,OAExC,OAFA,SAEO,CAAP,EAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,qBAG/B,YAAA+2C,gBAAR,SAAwB/uD,EAAYw4C,EAAmB2W,GAAvD,WACUp2B,EAAS/5B,SAAS+3B,eAAe/2B,GAEvC,GAAK+4B,GAAWA,EAAOlC,WAAvB,CAIA,IAAMu4B,EAAQr2B,EAAOs2B,cACrBt2B,EAAOlC,WAAWy4B,aAAaF,EAAOr2B,GAEtCq2B,EAAMh8B,iBAAiB,SAAS,WAAM,SAAKm8B,qBAAoB,WAAM,WAAI7oE,QAAQ,EAAAy/C,YAEjFljD,KAAKwzC,6BAA6B+4B,WAAWxvD,EAAIw4C,EAAW2W,KAGxD,YAAAI,oBAAR,SAA4B7a,GACxB,OAAOzxD,KAAK2xC,OAAOc,SAASzyC,KAAKi0F,+BAA+B/lC,mBAAkB,WAE9E,OAAIuD,EACOA,IAGJhuD,QAAQP,YACf,CAAEsvC,QAAS,uBAEvB,EArFA,G,GCLA,WACI,WACYb,EACA+hD,GADA/hD,cACA+hD,iCAsBf,OAnBG,YAAA/8D,cAAA,SAAc/Z,EAA6BoE,GACvC,OAAOhhB,KAAK2xC,OAAOc,SACfzyC,KAAK0zF,0BAA0B/8D,cAAc/Z,EAASoE,KAI9D,YAAAwyE,aAAA,SAAaK,EAAkB7yE,GAC3B,OAAOhhB,KAAK2xC,OAAOc,SACfzyC,KAAK0zF,0BAA0Bx9D,qBAAqB29D,EAAU7yE,KAItE,YAAAyO,WAAA,WACI,OAAOhsB,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAGvC,YAAA4d,aAAA,WACI,OAAOlvC,QAAQR,QAAQjD,KAAK2xC,OAAO5c,aAE3C,EAzBA,G,YCKA,WACI,WACYnR,yBAkBf,OAfG,YAAAuwE,gBAAA,SACIC,EACApzE,GAFJ,WAII,OAAO,SAAAzb,OAAA,CACH,SAAAqf,GAAA,CAAG,SAAAb,aAAA,CAAaswE,GAAA,EAAsB75E,2BACtC,SAAAma,MAAA,EAAM,kE,4EACe,SAAM30B,KAAK4jB,eAAeuwE,gBAAgBC,EAAcpzE,I,OAEzE,OAFQxI,EAAS,SAAgE,KAE1E,CAAP,EAAO,SAAAuL,aAAA,CAAaswE,GAAA,EAAsB55E,yBAA0BjC,eAE1EpV,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiBy/D,GAAA,EAAsB35E,sBAAuBxb,QAG9F,EApBA,G,GCJA,WACI,WACY0kB,yBAoBf,OAjBG,YAAAuwE,gBAAA,SACI,EAIA,G,IAHIttE,EAAK,QACLwmB,EAAW,cAGX7oB,YAAO,EACS,GAAE,WAGhB/L,EAAU,CAAEgM,OAAQ,IAAYrM,QAEtC,OAAOpY,KAAK4jB,eAAe6T,KAHf,uCAGyB,CAAEjf,KAAM,CACzCqO,MAAK,EACLmlD,aAAc3+B,GAAe,aAASxV,OAAOqzB,IAAIpzB,SAAS7b,MAAMM,UACjE9D,QAAO,EAAE+L,QAAO,KAE3B,EAtBA,IhBLA,SAAKmsE,GACD,EAAA2D,YAAA,cADJ,CAAK3D,QAAoB,K,uBiBEnB4D,GAAY,UAAA9wE,QAAA,EAAQ,SAAIgwD,GAC1B,OAAIzsE,MAAM7B,QAAQsuE,GACPA,EAAMt0D,KAAI,SAAC/e,GAAsB,OACpCo0F,GAAcp0F,MAIlB,aAAcqzE,GACNvyE,OAAOge,KAAKu0D,GACfztE,QAAO,SAACzB,EAAQ2E,G,MAAQ,OAAC,SAAD,SAAC,uBACnB3E,KAAM,MACR2E,GAAMsrF,GAAc/gB,EAAMvqE,IAAK,MAChC,IAGLuqE,KAMX8gB,GAAUtjD,MAAQ,IAAIvrB,QAQtB,IAAM8uE,GAAgB,SAAI/gB,GACtB,MAAwB,YAAVA,IAAgC,OAAVA,EAChC8gB,GAAU9gB,GACVA,GAOO,SAASghB,GAA4B7yF,GAChD,OAAO,W,IAAE,sDAAmB,UAAcA,EAAE,aAAI0hB,K,0CCvC9CoxE,GAA6B,UAAAC,sBAAA,CAC/B,GAAAC,gBACA,SAACl3D,EAAQC,GAAW,YAAaD,EAAGC,MAGzB,gBAAqB+2D,ICN7B,SAASG,KACZ,ICiQM1/D,EAKAiD,EAKA6O,EAKAxO,EAiCAq8D,EAWA3+D,EAKA4+D,EAaAvpD,EAKAtT,EAsCA88D,EAKAlqD,EAKAvS,EAKA08D,EAUAr/D,EAKAwP,EAKAwD,EAKAzQ,EAKA+8D,EAKA9uD,EAKAC,EAQAoD,EAcAU,EAKAD,EAQAJ,EAQA5C,ECrLAiuD,EAaAC,EC4CAC,EAQAC,EAWAC,EAeAC,EAeAC,EAeAC,EH/ZAC,GCiQAxgE,EAAc,cAChB,SAAC,GAA4C,OAAjC,EAAD,SAA2CA,eACtD,YAAe,UAAMA,MAGnBiD,EAAW,cACb,SAAC,GAAyC,OAAjC,EAAD,MAAwCA,YAChD,YAAY,UAAMA,MAGhB6O,EAAY,cACd,SAAC,GAA0C,OAAjC,EAAD,OAAyCpO,kBAClD,YAAkB,UAAMA,MAGtBJ,EAAqB,cACvB,SAAC,GAAmD,OAAjC,EAAD,gBAAkDA,sBACpE,SAAC,GAA0C,OAAjC,EAAD,OAAyCzD,oBAClD,SAACyD,EAAoBzD,GAAqB,WAAM,WAC5C,IAAMU,EAAkB+C,IAClBz3B,EAAUg0B,IAEhB,IAAKU,EAAiB,CAClB,IAAK10B,IAAYA,EAAQ64B,eACrB,OAGJ,MAAO,CACH7c,UAAW,GACXC,SAAU,GACVC,QAAS,GACTE,SAAU,GACVE,SAAU,GACVC,KAAM,GACNE,gBAAiB,GACjBE,oBAAqB,GACrBE,WAAY,GACZC,QAAS,GACTE,MAAO,GACPC,aAAc,GACdF,YAAa/c,EAAQ64B,gBAI7B,OAAOnE,QAITo/D,EAAqB,cACvB,SAAC,GAAgD,OAAjC,EAAD,aAA+C3+D,mBAC9D,YAAmB,WAAM,WACrB,IAAMtZ,EAAesZ,IAErB,GAAItZ,GAAgBA,EAAapd,OAC7B,OAAOod,EAAa,GAAG+4E,+BAK7Bz/D,EAAkB,cACpB,SAAC,GAAgD,OAAjC,EAAD,aAA+CA,mBAC9D,YAAmB,UAAMA,MAGvB4+D,EAA4B,cAC9B,SAAC,GAAgD,OAAjC,EAAD,aAA+C5+D,mBAC9D,YAAmB,WAAM,WACrB,IAAMtZ,EAAesZ,IAErB,GAAKtZ,GAAiBA,EAAapd,OAInC,OAAOod,EAAa,GAAGwd,6BAIzBmR,EAAuB,cACzB,SAAC,GAAqD,OAAjC,EAAD,kBAAoDA,wBACxE,YAAwB,UAAMA,MAG5BtT,EAAoB,cACtB,SAAC,GAAkD,OAAjC,EAAD,eAAiDA,qBAClE,SAAC,GAA0C,OAAjC,EAAD,OAAyClD,oBAClD,SAACkD,EAAmBlD,GAAqB,WAAM,WAC3C,IAAMxO,EAAiB0R,IACjBl3B,EAAUg0B,IAKhB,QAJ+BxO,GAC3B,UAAAyT,OAAA,CAAO,UAAAsG,KAAA,CAAK/Z,EAAgB,oBAAqB,QAAS,OACrDmoB,OAAM,YAAO,OAACknD,IAAQA,EAAIp2F,YAG1BuB,GAAYA,EAAQ64B,eAIlB,CACH9c,GAAIyJ,EAAiBA,EAAezJ,GAAK,GACzCC,UAAW,GACXC,SAAU,GACVC,QAAS,GACTE,SAAU,GACVE,SAAU,GACVC,KAAM,GACNsJ,MAAOL,EAAiBA,EAAeK,MAAQ,GAC/CpJ,gBAAiB,GACjBE,oBAAqB,GACrBE,WAAY,GACZC,QAAS,GACTE,MAAO,GACPC,aAAc,GACdF,YAAa/c,EAAQ64B,gBAItBrT,QAITwuE,EAAsB,cACxB,SAAC,GAA6C,OAAjC,EAAD,UAA4CntD,gBACxD,YAAgB,UAAMA,MAGpBiD,EAAoB,cACtB,SAAC,GAAkD,OAAjC,EAAD,eAAiDA,qBAClE,YAAqB,UAAMA,MAGzBvS,EAAmB,cACrB,SAAC,GAAkD,OAAjC,EAAD,eAAiDA,oBAClE,YAAoB,UAAMA,MAGxB08D,EAA2B,cAC7B,SAAC,GAA2C,OAAjC,EAAD,QAA0ChvD,gBACpD,SAAC,GAAkD,OAAjC,EAAD,eAAiD1N,oBAClE,SAAC0N,EAAc1N,GAAqB,WAAM,WACtC,IAAM5Q,EAAUse,IAEhB,OAAOte,GAAW4Q,EAAiB5Q,EAAQY,WAAYZ,EAAQ6Q,iBAIjE5C,EAAU,cACZ,SAAC,GAAwC,OAAjC,EAAD,KAAuCA,WAC9C,YAAW,UAAMA,MAGfwP,EAAa,cACf,SAAC,GAA2C,OAAjC,EAAD,QAA0CA,cACpD,YAAc,UAAMA,MAGlBwD,EAAsB,cACxB,SAAC,GAAoD,OAAjC,EAAD,iBAAmDA,uBACtE,YAAuB,UAAMA,MAG3BzQ,EAAc,cAChB,SAAC,GAA4C,OAAjC,EAAD,SAA2CA,eACtD,YAAe,UAAMA,MAGnB+8D,EAAiB,cACnB,SAAC,GAA+C,OAAjC,EAAD,YAA8C5uD,YAC5D,YAAY,UAAMA,MAGhBF,EAAwB,cAC1B,SAAC,GAA2C,OAAjC,EAAD,QAA0CA,yBACpD,YAAyB,UAAMA,MAG7BC,EAAyB,cAC3B,SAAC,GAA2C,OAAjC,EAAD,QAA0CA,0BACpD,SAAC,GAAkD,OAAjC,EAAD,eAAiD9N,oBAClE,SAAC8N,EAAwB9N,GAAqB,WAAM,SAAChU,EAAkBiU,GACnE,OAAO6N,EAAuB9N,EAAiBhU,EAAUiU,UAI3DiR,EAAiB,cACnB,SAAC,GAA+C,OAAjC,EAAD,YAA8CA,kBAC5D,SAAC,GAA+C,OAAjC,EAAD,YAA8CP,iCAC5D,SAACO,EAAgBP,GAOb,OAAO,IAJP,SAAgC7Q,GAC5B,OAAOA,EAAgB6Q,EAA8B7Q,GAAiBoR,UAO5EU,EAA2B,cAC7B,SAAC,GAAwC,OAAjC,EAAD,KAAuCA,4BAC9C,YAA4B,UAAMA,MAGhCD,EAA0B,cAC5B,SAAC,GAAwC,OAAjC,EAAD,KAAuCA,2BAC9C,SAAC,GAA6C,OAAjC,EAAD,UAA4CrC,gBACxD,SAACqC,EAAyBrC,GAAiB,WAAM,SAAC9pB,GAC9C,OAAOmsB,EAAwBrC,IAAgB9pB,SAIjD+rB,EAA2B,cAC7B,SAAC,GAAwC,OAAjC,EAAD,KAAuCA,4BAC9C,SAAC,GAAqD,OAAjC,EAAD,kBAAoD0B,wBACxE,SAAC1B,EAA0B0B,GAAyB,WAAM,SAACztB,GACvD,OAAO+rB,EAAyB0B,IAAwBztB,SAI1DmpB,EAAmB,cACrB,SAAC,GAA0C,OAAjC,EAAD,OAAyCA,oBAClD,YAAoB,UAAMA,MAGvB,UAAAN,WAAA,EAAW,SACd9R,GAEA,MAAO,CACHK,YAAaA,EAAYL,GACzBsD,SAAUA,EAAStD,GACnBmS,UAAWA,EAAUnS,GACrBoS,iBAAkBA,EAAiBpS,GACnC2D,mBAAoBA,EAAmB3D,GACvCggE,mBAAoBA,EAAmBhgE,GACvCqB,gBAAiBA,EAAgBrB,GACjCigE,0BAA2BA,EAA0BjgE,GACrD0W,qBAAsBA,EAAqB1W,GAC3CoD,kBAAmBA,EAAkBpD,GACrCkgE,oBAAqBA,EAAoBlgE,GACzCgW,kBAAmBA,EAAkBhW,GACrCyD,iBAAkBA,EAAiBzD,GACnCmgE,yBAA0BA,EAAyBngE,GACnDc,QAASA,EAAQd,GACjBsQ,WAAYA,EAAWtQ,GACvB8T,oBAAqBA,EAAoB9T,GACzCqD,YAAaA,EAAYrD,GACzBsR,sBAAuBA,EAAsBtR,GAC7CuR,uBAAwBA,EAAuBvR,GAC/CogE,eAAgBA,EAAepgE,GAC/B2U,eAAgBA,EAAe3U,GAC/BqV,yBAA0BA,EAAyBrV,GACnDoV,wBAAyBA,EAAwBpV,GACjDgV,yBAA0BA,EAAyBhV,QD3frDghE,GEqSAX,EAAW,IACb,SAACljD,GAA2D,YAC5D,YAAY,kBACR,IAAkB,UAAA/wC,OAAOge,KAAK+yB,GAAZ,eAAoF,CAAjG,IAAM/oC,EAAG,KACJhK,EAAQ+yC,EAAS/oC,KAEvB,GAAIhK,EACA,OAAOA,OAMjBk2F,EAA+B,cACjC,SAAC,GAAsD,OAAjC,EAAD,mBAAqDzpD,wBAC1E,SAAC,GAAgD,OAAjC,EAAD,aAA+CY,gCAC9D,SAACZ,EAAsBY,GAAiC,gBAACzV,GACrD,OACI6U,KACAY,EAA6BzV,OAKlC,UAAA8P,WAAA,EAAW,SACd9R,GAEA,IAAMmd,EAAW,CACb8jD,qBAAsBjhE,EAAMvJ,SAASwZ,aACrCixD,uBAAwBlhE,EAAMvJ,SAASsZ,eACvCoxD,oBAAqBnhE,EAAMgZ,kBAAkB5C,gBAC7CgrD,sBAAuBphE,EAAMgZ,kBAAkB3C,iBAC/CgrD,kBAAmBrhE,EAAM5N,MAAM6d,aAC/BqxD,iBAAkBthE,EAAMpJ,KAAKqZ,aAC7BsxD,6BAA8BvhE,EAAMiV,UAAUhF,aAC9CuxD,8BAA+BxhE,EAAMkZ,kBAAkBjJ,aACvDwxD,2BAA4BzhE,EAAMwD,eAAeyM,aACjDyxD,0BAA2B1hE,EAAMwD,eAAe0S,mBAChDyrD,0BAA2B3hE,EAAMgZ,kBAAkB5I,mBACnDsD,eAAgB1T,EAAM8Y,mBAAmBpF,eACzCC,gBAAiB3T,EAAM8Y,mBAAmBnF,gBAC1CiuD,2BAA4B5hE,EAAM8Y,mBAAmB1I,mBACrD+G,4BAA6BnX,EAAMjY,aAAaovB,4BAChDmpD,6BAA8BA,EAA6BtgE,GAC3DgQ,wBAAyBhQ,EAAMtO,eAAese,wBAC9C6xD,6BAA8B7hE,EAAMtO,eAAeqe,eACnD+xD,4BAA6B9hE,EAAMjvB,cAAcg/B,eACjDgyD,8BAA+B/hE,EAAMmZ,mBAAmBvC,sBACxDorD,0BAA2BhiE,EAAMjY,aAAa+sB,eAC9CmtD,0BAA2BjiE,EAAMjY,aAAagoB,eAC9CmyD,2BAA4BliE,EAAMjY,aAAamvB,eAC/CirD,2BAA4BniE,EAAMmZ,mBAAmB/I,mBACrDgyD,yBAA0BpiE,EAAMlO,YAAY0e,cAC5C6xD,oBAAqBriE,EAAM7M,QAAQqd,cACnC8xD,qBAAsBtiE,EAAM7M,QAAQod,eACpCgyD,6BAA8BviE,EAAM7I,iBAAiBqZ,cACrDgyD,8BAA+BxiE,EAAM7I,iBAAiBoZ,eACtDkyD,wBAAyBziE,EAAMkE,YAAY+L,aAC3CyyD,yBAA0B1iE,EAAMkE,YAAY4Q,eAC5C6tD,mBAAoB3iE,EAAMzzB,OAAO0jC,aACjC2yD,oBAAqB5iE,EAAMoZ,YAAY3H,aACvCoxD,8BAA+B7iE,EAAMvO,SAASmf,sBAC9CkyD,8BAA+B9iE,EAAMvO,SAASqf,uBAGlD,OAAO,oBACHuvD,SAAUA,EAASljD,IAChBA,OFvWL4lD,GG6VAxC,EAAY,IACd,SAACpjD,GAA6D,YAC9D,YAAY,kBACR,OAAQ/wC,OAAOge,KAAK+yB,GACf5lB,MAAK,YAAO,SAASnjB,YAI5BosF,EAA4B,cAC9B,SAAC,GAAsD,OAAjC,EAAD,mBAAqDzyD,qBAC1E,SAAC,GAAgD,OAAjC,EAAD,aAA+CT,4BAC9D,SAACS,EAAmBT,GAA6B,gBAACtL,GAC9C,OACI+L,KACAT,EAAyBtL,OAK/By+D,EAAwB,cAC1B,SAAC,GAAsD,OAAjC,EAAD,mBAAqDz1D,kBAC1E,SAAC,GAAsD,OAAjC,EAAD,mBAAqDE,eAC1E,SAAC,GAAsD,OAAjC,EAAD,mBAAqDC,gBAC1E,SAAC,GAAsD,OAAjC,EAAD,mBAAqDC,uBAC1E,SAACJ,EAAgBE,EAAaC,EAAcC,GAAwB,gBAAC3b,GACjE,OACIub,EAAevb,IACfyb,EAAYzb,IACZ0b,EAAa1b,IACb2b,EAAoB3b,OAK1BixE,EAAwB,cAC1B,SAAC,GAAsD,OAAjC,EAAD,mBAAqD11D,kBAC1E,SAAC,GAAsD,OAAjC,EAAD,mBAAqD8C,qBAC1E,SAAC,GAAsD,OAAjC,EAAD,mBAAqDC,qBAC1E,SAAC,GAAsD,OAAjC,EAAD,mBAAqD3C,uBAC1E,SAACJ,EAAgB8C,EAAmBC,EAAmB3C,GAAwB,gBAAC3b,GAC5E,OACIub,EAAevb,IACfqe,EAAkBre,IAClBse,EAAkBte,IAClB2b,EAAoB3b,OAK1BkxE,EAAuB,cACzB,SAAC,GAAqD,OAAjC,EAAD,kBAAoD31D,kBACxE,SAAC,GAAqD,OAAjC,EAAD,kBAAoDyB,eACxE,SAAC,GAAqD,OAAjC,EAAD,kBAAoDC,gBACxE,SAAC,GAAqD,OAAjC,EAAD,kBAAoDtB,uBACxE,SAACJ,EAAgByB,EAAaC,EAActB,GAAwB,gBAAC3b,GACjE,OACIub,EAAevb,IACfgd,EAAYhd,IACZid,EAAajd,IACb2b,EAAoB3b,OAK1BmxE,EAAoB,cACtB,SAAC,GAAqD,OAAjC,EAAD,kBAAoDn0D,eACxE,SAAC,GAA4C,OAAjC,EAAD,SAA2CyL,wBACtD,SAACzL,EAAayL,GAAyB,gBAACzoB,GACpC,OACIgd,EAAYhd,IACZyoB,QAKL,UAAApG,WAAA,EAAW,SACd9R,GAEA,IAAMmd,EAAW,CACb6lD,kBAAmBhjE,EAAMvJ,SAAS0Z,UAClC8yD,mBAAoBjjE,EAAMvJ,SAAS4W,WACnC6K,qBAAsBlY,EAAMvJ,SAASyhB,qBACrC0oD,kBAAmBA,EAAkB5gE,GACrCkjE,kBAAmBljE,EAAMgZ,kBAAkBtM,aAC3Cy2D,eAAgBnjE,EAAM5N,MAAM+d,UAC5BizD,cAAepjE,EAAMpJ,KAAKuZ,UAC1BkzD,0BAA2BrjE,EAAMiV,UAAU9E,UAC3CmzD,2BAA4BtjE,EAAMkZ,kBAAkB/I,UACpDozD,wBAAyBvjE,EAAMwD,eAAe2M,UAC9CqzD,uBAAwBxjE,EAAMwD,eAAe2I,gBAC7Cs3D,sBAAuBzjE,EAAMgZ,kBAAkBhO,eAC/CE,YAAalL,EAAM8Y,mBAAmB5N,YACtCC,aAAcnL,EAAM8Y,mBAAmB3N,aACvCu4D,uBAAwB1jE,EAAM8Y,mBAAmB9N,eACjD0M,yBAA0B1X,EAAMjY,aAAa2vB,yBAC7C8oD,0BAA2BA,EAA0BxgE,GACrD2jE,yBAA0B3jE,EAAMtO,eAAe2b,WAC/Cu2D,wBAAyB5jE,EAAMjvB,cAAcs8B,WAC7CwD,0BAA2B7Q,EAAMvO,SAASof,0BAC1CE,0BAA2B/Q,EAAMvO,SAASsf,0BAC1Cb,oBAAqBlQ,EAAMtO,eAAewe,oBAC1C2zD,0BAA2B7jE,EAAMmZ,mBAAmBrL,kBACpDg2D,sBAAuB9jE,EAAMjY,aAAaslB,WAC1C02D,sBAAuB/jE,EAAMjY,aAAaglB,WAC1Ci3D,uBAAwBhkE,EAAMjY,aAAaurB,WAC3C2wD,uBAAwBjkE,EAAMmZ,mBAAmBnO,eACjDk5D,sBAAuBlkE,EAAMlO,YAAY2e,WACzC0C,iBAAkBnT,EAAM7M,QAAQsd,WAChC2C,iBAAkBpT,EAAM7M,QAAQud,WAChCuD,0BAA2BjU,EAAM7I,iBAAiBsZ,WAClDyD,0BAA2BlU,EAAM7I,iBAAiBuZ,WAClDyzD,qBAAsBnkE,EAAMkE,YAAYiM,UACxCi0D,qBAAsBpkE,EAAMkE,YAAY6I,WACxCs3D,gBAAiBrkE,EAAMzzB,OAAO4jC,UAC9Bm0D,qBAAsBtkE,EAAMoZ,YAAY1H,UACxC+uD,sBAAuBA,EAAsBzgE,GAC7C0gE,sBAAuBA,EAAsB1gE,GAC7C2gE,qBAAsBA,EAAqB3gE,IAG/C,OAAO,oBACHugE,UAAWA,EAAUpjD,IAClBA,OHrdX,OAAO,SAAC9D,GAKJ,MAAO,CACHjU,KALSy7D,EAA4BxnD,GAMrCvpC,OALWkxF,EAAiC3nD,GAM5CvR,SALai7D,EAAkC1pD,KIV3D,I,GAAA,WACI,WACYkrD,6BAQf,OALGvwF,EAAA,UAAAorB,UAAA,SAAUh1B,GCPC,IAAsBu0E,EDU7B,OAFAv0E,EAAM8U,SCRuBy/D,EDQAzzE,KAAKq5F,mBAAmBn6F,ICHlDu0E,EAAM/hD,MAAM,kBACdvS,KAAI,YAAQ,SAAKyT,QAAQ,SAAU,OACnC/T,KAAK,KACLmwE,OANM,GDQA9vF,GAEf,EAVA,GEqCqB,GAArB,WAQI,WACYyyC,EACAi4B,EACAr2B,EACAlf,EACA4hC,EACAy9B,EACA4F,EACAC,EACAzlC,EACA0lC,EACAC,EACAC,EACA7hC,EACAhlB,EACA64B,EACAiuB,EACA1F,EACA2F,EACAtsC,EACAwb,EACA+wB,EACAvlE,GC9DD,IACXwlE,E1BQA50E,EACA4pB,EAEMirD,EyB6BMpoD,cACAi4B,oCACAr2B,8BACAlf,4BACA4hC,8BACAy9B,iCACA4F,6BACAC,4BACAzlC,sCACA0lC,2BACAC,qCACAC,gCACA7hC,2BACAhlB,mCACA64B,qCACAiuB,qCACA1F,sCACA2F,iCACAtsC,oCACAwb,iCACA+wB,mCACAvlE,gCAERt0B,KAAKg6F,4BC/DTF,MAA8C,gBAArB7tC,KAElB,IAAI,IAAwB,YAC/B,IAAK6tC,IAmFb,SAAgC56F,GAC5B,SAAUA,EAAM4R,UAAW5R,EAAM6R,MADrC,CAnFsD7R,GAC1C,OAAOA,EAAM8U,QAGjB,OAAQ9U,EAAM4R,SAAW5R,EAAM6R,MAC/B,KAAK,IAAqBZ,oBACtB,MAAO,qBACDjR,EAAM8U,QAAO,2PAMvB,KAAK,IAAqB/D,YAC1B,KAAK,IAAqBC,gBACtB,MAAO,qBACDhR,EAAM8U,QAAO,gQAMvB,KAAK,IAAqB3D,sBACtB,MAAO,qBACDnR,EAAM8U,QAAO,oUAOvB,KAAK,IAAqB1D,aACtB,MAAO,qBACDpR,EAAM8U,QAAO,6PAMvB,KAAK,IAAqBxD,eACtB,MAAO,qBACDtR,EAAM8U,QAAO,8LAKvB,KAAK,IAAqBrD,qBACtB,MAAO,qBACDzR,EAAM8U,QAAO,2SAMvB,KAAK,KAAwBof,uBACzB,MAAO,4OAMX,KAAK,KAAwBvD,sBACzB,MAAO,qBACD3wB,EAAM8U,QAAO,yOAMvB,KAAK,KAAwBqf,uBACzB,MAAO,qBACDn0B,EAAM8U,QAAO,4OAMvB,QACI,OAAO9U,EAAM8U,aDjBjBhU,KAAKi6F,kBAAoBpF,KACzB70F,KAAKk6F,kBzBzDTh1E,EyByDsDllB,KAAK2xC,OzBxD3D7C,EyBwDmE9uC,KAAKi6F,kBzBtDlEF,EAAa,SAAAlrD,gBAAA,EACf,SAAC/Z,EAAOnQ,GAAW,SAAO5T,OAAS4/E,GAAqB2D,YACpD3vE,EAAOG,QACPgQ,IACJ5P,EAAM6P,WACN,CAAE+Z,iBAAgB,IAGtB5pB,EAAMljB,WAAU,YACZ+3F,EAAWtnD,SAAS,SAAA1uB,aAAA,CAAa4sE,GAAqB2D,YAAax/D,MACpE,CAAEqlE,SAAQA,IAENJ,GyB6sCV,OA/oCG,YAAAhlE,SAAA,WACI,OAAO/0B,KAAKk6F,iBAAiBnlE,YASjC,YAAAqlE,YAAA,WACIp6F,KAAKk6F,iBAAiBE,eAiC1B,YAAAp4F,UAAA,SACI7B,G,UACA,oDAEA,OAAO,EAAAH,KAAKk6F,kBAAiBl4F,UAAS,kCAAC7B,GAAe2xC,KAqB1D,YAAAvd,aAAA,SAAaxX,EAAaiE,GACtB,OAAOhhB,KAAKq6F,UAAUt9E,EAClB/c,KAAKuzC,uBAAuBhf,aAAaxX,EAAIiE,GAC7ChhB,KAAKuzC,uBAAuB1e,oBAAoB7T,KAiBxD,YAAAkU,eAAA,SAAepQ,EAA8B9D,GACzC,IAAM2D,EAAS3kB,KAAKuzC,uBAAuBre,eAAepQ,EAAS9D,GAEnE,OAAOhhB,KAAKq6F,UAAU11E,IAoB1B,YAAAqyC,UAAA,SAAUzvC,EAAiBvG,GAA3B,WACUs5E,EAAqBt6F,KAAK63D,oBAAoBb,UAAUzvC,EAASvG,GACjEu5E,EAAmBv6F,KAAKs0B,yBAAyBI,eAAe1T,GAChEw5E,EAAmBx6F,KAAKq0B,qBAAqBI,WAAWzT,GAE9D,OAAOvd,QAAQysB,IAAI,CACflwB,KAAKq6F,UAAUC,GACft6F,KAAKq6F,UAAUG,EAAkB,CAAEhoD,QAAS,WAC5CxyC,KAAKq6F,UAAUE,EAAkB,CAAE/nD,QAAS,iBAE3CxuB,MAAK,WAAM,SAAK+Q,eA2CzB,YAAAkiC,YAAA,SAAYnyC,EAA2B9D,GACnC,IAAM2D,EAAS3kB,KAAK0rE,8BAA8Bla,QAAQ1sC,EAAS9D,GAEnE,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,qBAiC7C,YAAAioD,sBAAA,SAAsBz5E,GAClB,IAAM2D,EAAS3kB,KAAK0rE,8BAA8B1T,SAASh3C,GAE3D,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,qBA0B7C,YAAA3uB,mBAAA,SAAmB7C,GACf,IAAM2D,EAAS3kB,KAAK6yC,4BAA4BhvB,mBAAmB7C,GAEnE,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,oBAe7C,YAAAluB,kBAAA,SAAkBC,EAAkBvD,GAChC,IAAM2D,EAAS3kB,KAAK6yC,4BAA4BvuB,kBAAkBC,EAAUvD,GAE5E,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,oBAuB7C,YAAAoe,kBAAA,SAAkB5vC,GACd,IAAM2D,EAAS3kB,KAAK0rE,8BAA8Bj8C,WAAWzO,GAE7D,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,qBAoB7C,YAAAkoD,oBAAA,SAAoB15E,GAChB,IAAM2D,EAAS3kB,KAAK0rE,8BAA8B/4B,aAAa3xB,GAE/D,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,qBAkB7C,YAAAmoD,qBAAA,SAAqB35E,GACjB,IAAM2D,EAAS3kB,KAAKs5F,sBAAsBxiC,cAAc91C,GAExD,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAoB7C,YAAAooD,sBAAA,SAAsB55E,GAClB,IAAM2D,EAAS3kB,KAAK25F,8BAA8B7iC,cAAc91C,GAEhE,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,uBAoB7C,YAAAqoD,yBAAA,SAAyB75E,GACrB,OAAOhhB,KAAK26F,qBAAqB35E,IAoBrC,YAAA85E,0BAAA,SAA0B95E,GACtB,OAAOhhB,KAAK46F,sBAAsB55E,IAqBtC,YAAA+5E,mBAAA,SAAmB/5E,GACf,IAAM2D,EAAS3kB,KAAK8zD,+BAA+BrkC,WAAWzO,GAE9D,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAoB7C,YAAAwoD,qBAAA,SAAqBh6E,GACjB,IAAM2D,EAAS3kB,KAAK8zD,+BAA+BnhB,aAAa3xB,GAEhE,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAgB7C,YAAA2hD,gBAAA,SAAgB8G,EAA4Cj6E,GACxD,IAAM2D,EAAS3kB,KAAK45F,0BAA0BzF,gBAAgB8G,EAAoBj6E,GAElF,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,iBA0B7C,YAAA0oD,sBAAA,SAAsB9wD,EAA6CppB,GAC/D,IAAM2D,EAAS3kB,KAAKi2D,uBAAuB1I,eAAenjB,EAAiBppB,GAE3E,OAAOhhB,KAAKq6F,UAAU11E,IA2B1B,YAAAw2E,sBAAA,SAAsBvtC,EAA6C5sC,GAC/D,IAAM2D,EAAS3kB,KAAKi2D,uBAAuB5R,cAAcuJ,EAAiB5sC,GAE1E,OAAOhhB,KAAKq6F,UAAU11E,IAU1B,YAAAs/B,oBAAA,SAAoBp+C,EAA8Bmb,GAC9C,IAAM2D,EAAS3kB,KAAK65F,4BAA4B51C,oBAAoBp+C,EAAemb,GAEnF,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,mBAiB7C,YAAA4oD,gBAAA,SAAgBnyC,EAA+BjoC,GAC3C,IAAM2D,EAAS3kB,KAAK4pE,6BAA6BwxB,gBAAgBnyC,EAAajoC,GAE9E,OAAOhhB,KAAKq6F,UAAU11E,IAwB1B,YAAAkpC,eAAA,SAAe5E,EAAkCjoC,GAC7C,IAAM2D,EAAS3kB,KAAK8zD,+BAA+B9F,OAAO/E,EAAajoC,GAEvE,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAgC7C,YAAAsb,gBAAA,SAAgB9sC,GACZ,IAAM2D,EAAS3kB,KAAK8zD,+BAA+B7F,QAAQjtC,GAE3D,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAoB7C,YAAAjc,oBAAA,SAAoBvV,GAChB,IAAM2D,EAAS3kB,KAAK0zF,0BAA0Bn9D,oBAAoBvV,GAElE,OAAOhhB,KAAKq6F,UAAU11E,IAsB1B,YAAAgsC,mBAAA,SAAmB3vC,GACf,IAAM2D,EAAS3kB,KAAKi0F,+BAA+BxkE,WAAWzO,GAE9D,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAoB7C,YAAA6oD,qBAAA,SAAqBr6E,GACjB,IAAM2D,EAAS3kB,KAAKi0F,+BAA+BthD,aAAa3xB,GAEhE,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAoB7C,YAAAtc,qBAAA,SAAqBG,EAA0BrV,GAC3C,IAAM2D,EAAS3kB,KAAKi0F,+BAA+BT,aAAan9D,EAAkBrV,GAElF,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBA4B7C,YAAA6G,sBAAA,SACIz8B,EACAoE,GAEA,IAAM2D,EAAS3kB,KAAKi0F,+BAA+Bt9D,cAAc/Z,EAASoE,GAE1E,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAgC7C,YAAA3b,mBAAA,SACIha,EACAmE,GAEA,IAAM2D,EAAS3kB,KAAK0zF,0BAA0B78D,mBAAmBha,EAAcmE,GAE/E,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAgB7C,YAAA1c,kBAAA,SACIgB,EACA9V,GAEA,IAAM2D,EAAS3kB,KAAK0zF,0BAA0B59D,kBAAkBgB,EAAe9V,GAE/E,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAoC7C,YAAA3c,kBAAA,SACIN,EACAvU,GAEA,IAAM2D,EAAS3kB,KAAK0zF,0BAA0B79D,kBAAkBN,EAAavU,GAE7E,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAc7C,YAAA8oD,qBAAA,SACI/lE,EACAvU,GAEA,IAAM2D,EAAS3kB,KAAK0zF,0BAA0B39D,qBAAqBR,EAAavU,GAEhF,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAc7C,YAAA+oD,uBAAA,SACIhmE,EACAvU,GAEA,IAAM2D,EAAS3kB,KAAK0zF,0BAA0Bp+D,uBAAuBC,EAAavU,GAElF,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAwB7C,YAAAgpD,gCAAA,SACI1kE,EACAT,EACArV,GAEA,IAAM2D,EAAS3kB,KAAK0zF,0BAA0B38D,qBAAqB,CAC/Dha,GAAI+Z,EACJT,iBAAgB,GACjBrV,GAEH,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,sBAsB7C,YAAAipD,qBAAA,SAAqB7+E,EAA6CoE,sBAC9D,IAAM2D,EAAS3kB,KAAK4pE,6BAA6BjzC,cAAc/Z,EAASoE,GAExE,OAAOhhB,KAAKq6F,UAAU11E,IAiB1B,YAAA24C,iBAAA,SAAiBxwB,EAAyB9rB,GACtC,IAAM2D,EAAS3kB,KAAK8oE,0BAA0BxL,iBAAiBxwB,EAAgB9rB,GAE/E,OAAOhhB,KAAKq6F,UAAU11E,IAkB1B,YAAAioC,YAAA,SAAYnlC,EAAczG,GACtB,IAAM2D,EAAS3kB,KAAKu5F,qBAAqB3sC,YAAYnlC,EAAMzG,GAE3D,OAAOhhB,KAAKq6F,UAAU11E,IAiB1B,YAAAkoC,aAAA,SAAaplC,EAAczG,GACvB,IAAM2D,EAAS3kB,KAAKu5F,qBAAqB1sC,aAAaplC,EAAMzG,GAE5D,OAAOhhB,KAAKq6F,UAAU11E,IAiB1B,YAAAqoC,qBAAA,SAAqBvlC,EAAczG,GAC/B,IAAM2D,EAAS3kB,KAAKy5F,8BAA8BzsC,qBAAqBvlC,EAAMzG,GAE7E,OAAOhhB,KAAKq6F,UAAU11E,IAiB1B,YAAAsoC,sBAAA,SAAsBxlC,EAAczG,GAChC,IAAM2D,EAAS3kB,KAAKy5F,8BAA8BxsC,sBAAsBxlC,EAAMzG,GAE9E,OAAOhhB,KAAKq6F,UAAU11E,IAmB1B,YAAAksE,gBAAA,WACI,IAAMlsE,EAAS3kB,KAAK05F,yBAAyB7I,kBAE7C,OAAO7wF,KAAKq6F,UAAU11E,IAkB1B,YAAAwsE,iBAAA,SAAiBp4E,GAAjB,WACU4L,EAAS3kB,KAAK05F,yBAAyBvI,iBAAiBp4E,GAE9D,OAAO/Y,KAAKq6F,UAAU11E,GACjBX,MAAK,WAAM,SAAK6sE,sBAezB,YAAA7kC,WAAA,SAAW9sD,GACP,IAAMylB,EAAS3kB,KAAKw5F,oBAAoBxtC,WAAW9sD,GAEnD,OAAOc,KAAKq6F,UAAU11E,IAsB1B,YAAA+2E,yBAAA,SAAyB16E,GACrB,IAAM2D,EAAS3kB,KAAKstD,6BAA6B79B,WAAWzO,GAE5D,OAAOhhB,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,oBAwB7C,YAAAmpD,iBAAA,WACI,IAAMh3E,EAAS3kB,KAAKstD,6BAA6BgE,+BAEjD,OAAOtxD,KAAKq6F,UAAU11E,EAAQ,CAAE6tB,QAAS,oBAUrC,YAAA6nD,UAAR,SAAkB11E,EAA2D3D,GAA7E,WACI,OAAOhhB,KAAK2xC,OAAOc,SAAS9tB,EAAQ3D,GAC/BgD,MAAK,WAAM,SAAK+Q,cAChB3Q,OAAM,YACH,MAAM,EAAK41E,kBAAkB9lE,UAAUh1B,OAlsCnB,sBADnC,MACoB,GAArB,G,UEKe,SAAS08F,GAAsB56E,GACP,WAA/BjF,SAAS+b,SAASxb,UAClBowC,IAAmB7pD,KAAK,uEAGH,eAArBopD,KACAS,IAAmB7pD,KAAK,6HAG5B,IAAMxB,EAAsB,CACxB4iB,KAAM,CACFwjB,eAAgBzmB,GAAWA,EAAQymB,eACnCE,2BAA6B9P,OAAwBgkE,oCAEzDj3F,OAAQ,GACRg4B,SAAU,IAER,EAA6C5b,GAAW,GAAtD,IAAAiuC,OAAA,WAAS,KAAE,EAAE,IAAA7gB,mBAAA,WAAqB,GAAI,EACxC2O,EAAgB,SAAAC,oBAAA,CAAoB,CAAEF,KAAM97B,GAAWA,EAAQ87B,OAC/D53B,EAAQ,aAAoB,CAAE7jB,OAAM,GAAI,CAAE+sC,mBAAkB,IAC5D0tD,EC1DK,SAA6B52E,GACxC,IAAM42E,EAAgB,0BAatB,OAXA52E,EAAMljB,WACF,YACI,IAAMX,EAASyzB,EAAMzzB,OAAOw3B,iBAExBx3B,GACAy6F,EAAcC,QAAQ16F,EAAOk9D,gBAAgBy9B,kBAGrD,YAAS,SAAM36F,OAAOw3B,oBAGnBijE,EAdI,CD0D+B52E,GACpC+2E,EAAqB,IAAI,GAAmBl/C,GAC5Cm/C,EAAwB,IAAI,IAAsBn/C,GAClDo/C,EAAsB,IAAI,IAAoB,IAAI,IAAoBp/C,IACtEq/C,EAAiBjpC,GAAqB,SAAAiK,mBAAA,IACtCi/B,EAA8B,IAAI,GAA4Bt/C,GAC9Du/C,EAA8B,IAAI,GAA4BF,EAAgBC,GAC9ElvB,EAAqB,IAAI,GAC3B8uB,EACA,IAAI,GAAkBC,IAEpBK,EAA6B,IAAI,KAA2B,IAAI,KAA2Bx/C,IAC3Fy/C,EAA0B,IAAI,IAAwB,IAAI,IAAwBz/C,IAClFO,EAAwB,IAAI,IAAsB4+C,EAAuBC,EAAqBK,GAEpG,OAAO,IAAI,GACPt3E,EACA,IAAI,IACA,IAAI,IAA4B63B,GAChCw/C,GAEJj/C,EACA6+C,EACA,IAAI,EACA,IAAI,EAAsBp/C,GAC1BO,EACAg/C,GAEJ,IAAI,KAAyB,IAAI,KAAyBv/C,GAAgBm/C,GAC1E,IAAI,GAAqB,IAAI,GAAqBn/C,EAAe,CAAEkS,OAAM,KACzE,IAAI,EAAoB,IAAI,EAAoBlS,IAChD,IAAI,EEhEG,SACX73B,EACA63B,GAEA,IAAMI,EAAW,IAAI,IACfC,EAAe,SAAAC,gBAAA,GACf6+C,EAAwB,IAAI,IAAsBn/C,GAClDO,EAAwB,IAAI,IAC9B4+C,EACA,IAAI,IAAoB,IAAI,IAAoBn/C,IAChD,IAAI,IAAwB,IAAI,IAAwBA,KAEtDE,EAAa,SAAAC,iBAAA,GACbu/C,EAA6B,IAAI,IAA2B,IAAI,IAA2B1/C,IAC3F2/C,EAA8B,IAAI,GAA4B3/C,GAC9D4/C,EAA8B,IAAI,GAA4BD,GAsJpE,OApJAv/C,EAASxhB,SAAS,oBAAoB,WAClC,WAAI,GACAzW,EACAy3E,EACA,aACIz3E,EACA,IAAI,MAER+3B,MAIRE,EAASxhB,SAAS,UAAU,WACxB,WAAI,GACAzW,EACAu3E,EACAE,EACAD,EACA,IAAI,EAAsBt/C,OAIlCD,EAASxhB,SAAS,aAAa,WAC3B,WAAI,GACAzW,EACAu3E,EACAE,EACA,kBAIRx/C,EAASxhB,SAAS,yBAAyB,WACvC,WAAI,GACAzW,EACAo4B,EACAm/C,EACA,IAAI,EAA8Bt/C,GAClCw/C,EACAvsC,EAA4ChT,EAAcL,GAC1D,IAAI,GAAyBK,OAIrCD,EAASxhB,SAAS,YAAY,WAC1B,WAAI,GACAzW,EACAu3E,EACAE,EACA,IAAI,GAAqBv/C,GACzBL,EACAE,MAIRE,EAASxhB,SAAS,YAAY,WAC1B,WAAI,GACAzW,EACA,IAAI,GAA4Bw3E,OAIxCv/C,EAASxhB,SAAS,cAAc,WAC5B,WAAI,GACAzW,EACAu3E,EACAE,EACA,IAAI,KAAuBv/C,OAInCD,EAASxhB,SAAS,yBAAyB,WACvC,WAAI,GACAzW,EACAy3E,EACA,aACIz3E,EACA,IAAI,MAER+3B,MAIRE,EAASxhB,SAAS,sBAAsB,WACpC,WAAI,GACAzW,EACAy3E,EACA,aACIz3E,EACA,IAAI,KACA,IAAI,IACA,IAAI,IAAsBk4B,MAItCH,MAIRE,EAASxhB,SAAS,wBAAwB,WACtC,WAAI,GACAzW,EACAy3E,EACA,aACIz3E,EACA,IAAI,KAAgC63B,IAExCE,MAIRE,EAASxhB,SAAS,0BAA0B,WACxC,WAAI,GACAzW,EACAy3E,EACA,aACIz3E,EACA,IAAI,MAER+3B,MAIRE,EAASxhB,SAAS,mBAAmB,WACjC,WAAI,GACAzW,EACAy3E,EACA,aACIz3E,EACA,IAAI,MAER+3B,MAIRE,EAASxhB,SAAS,WAAW,WACzB,WAAI,GACAzW,EACA,IAAI,EACA,IAAI,EAAsB63B,GAC1BO,EACA,IAAI,GACA6V,GAAqB/V,GACrB,IAAI,GAA4BL,SAMzCI,EArKI,CFgE0Dj4B,EAAO63B,IACxE,IAAI,EACJ,IAAI,EAA6B,IAAI,EAA6BA,IAClE,IAAI,GAAwB,IAAI,GAAwB++C,EAAe/+C,IACvEowB,EACA,IAAI,IAA2B,IAAI,IAA2BpwB,IAC9D,IAAI,GGlCG,SACX73B,EACA42E,EACA/+C,EACAq/C,EACAntC,GAEA,IAAM9R,EAAW,IAAI,GAAwBj4B,EAAO,CAAEs/B,aAAc,KAAoB73C,cAClFywC,EAAe,SAAAC,gBAAA,GACfu/C,EAA4B,IAAI,KAChCC,EAAuB,IAAI,KAAqBf,GAChDgB,EAA8B,IAAI,IACpC,IAAI,IAA4B//C,GAChC,IAAI,KAA2B,IAAI,KAA2BA,KAE5DggD,ECzEK,SAAyC3/C,GACpD,IAAMiT,EAAwB,IAAI,IAAsBjT,GAClDkT,EAAsB,IAAI,IAAoBD,GAC9C2sC,EAAsB,IAAI,GAAoB1sC,GAC9C2sC,EAAU,IAAI,GAEpB,OAAO,IAAI,GACP3sC,EACA0sC,EACAC,GATO,CDyEuD7/C,GAC5D8+C,EAAwB,IAAI,IAAsBn/C,GAClDmgD,EAAoB,IAAI,GAAkBhB,GAC1CI,EAA8B,IAAI,GAA4BF,EAAgB,IAAI,GAA4Br/C,IAC9GowB,EAAqB,IAAI,GAAmB,IAAI,GAAmBpwB,GAAgBmgD,GACnFC,EAA2B,IAAI,GAAyB,IAAI,GAAyBpgD,IACrFqgD,EAAkC,IAAI,GAAgCjqC,GAAqB,SAAAiK,mBAAA,KAC3FgQ,EAAuB,IAAI,GAAqByvB,EAAsB1vB,EAAoByvB,EAA2BQ,GACrHX,EAA6B,IAAI,IAA2B,IAAI,IAA2B1/C,IAC3F4/C,EAA8B,IAAI,GAA4B,IAAI,GAA4B5/C,IAC9Fo/C,EAAsB,IAAI,IAAoB,IAAI,IAAoBp/C,IACtEy/C,EAA0B,IAAI,IAAwB,IAAI,IAAwBz/C,IAClFO,EAAwB,IAAI,IAAsB4+C,EAAuBC,EAAqBK,GAC9Fa,EAA+B,IAAI,GAA6BlgD,EAAUgwB,EAAoBmvB,GAC9Fr/C,EAAa,SAAAC,iBAAA,GACbmwB,EAAoB,IAAI,GAAkBnoD,GA+jBhD,OA7jBAi4B,EAASxhB,SAAS,KAAoB/vB,SAAS,WAC3C,WAAI,GACAsZ,EACAkoD,EACAD,EACA,IAAI,GAAoB/vB,EAAc,SAAAkgD,oBAAA,QAI9CngD,EAASxhB,SAAS,KAAoB9vB,mBAAmB,WACrD,WAAI,GACAqZ,EACAo4B,EACAm/C,EACAY,EACAjwB,EACAD,EACA,aACIjoD,EACA,IAAI,MAER,IAAI,GACAA,EACAkoD,EACA,IAAI,GAAoBhwB,EAAc,SAAAkgD,oBAAA,SAKlDngD,EAASxhB,SAAS,KAAoB7vB,QAAQ,WAC1C,WAAI,GACAoZ,EACAioD,EACAC,EACAqvB,EACA,IAAI,OAIZt/C,EAASxhB,SAAS,KAAoB5vB,UAAU,WAC5C,WAAI,GACAmZ,EACAg4E,EACA/vB,EACAC,EACAqvB,EACAU,EACA,IAAI,GAAqB//C,OAIjCD,EAASxhB,SAAS,KAAoB3vB,QAAQ,WAC1C,WAAI,GACAkZ,EACAioD,EACA2vB,EACAH,EACA,IAAI,EAAsBv/C,OAIlCD,EAASxhB,SAAS,KAAoB1vB,yBAAyB,WAC3D,WAAI,GACAiZ,EACAo4B,EACAm/C,EACAY,EACAjwB,EACAD,EACA,aACIjoD,EACA,IAAI,UAKhBi4B,EAASxhB,SAAS,KAAoBzvB,aAAa,WAC/C,WAAI,GACAgZ,EACAm4E,EACAZ,EACAtvB,EACAC,EACA,kBAIRjwB,EAASxhB,SAAS,KAAoBxvB,UAAU,WAC5C,WAAI,GACA+Y,EACAioD,EACAC,EACAC,EACA,IAAI,GACAnoD,EACAkoD,EACA,IAAI,GAAe,IAAI,GAAqBhwB,SAKxDD,EAASxhB,SAAS,KAAoBvvB,YAAY,WAC9C,WAAI,GACA8Y,EACAioD,EACAC,MAIRjwB,EAASxhB,SAAS,KAAoBhvB,aAAa,WAC/C,WAAI,GACAuY,EACAioD,EACAC,EACAC,MAIRlwB,EAASxhB,SAAS,KAAoBrvB,aAAa,WAC/C,WAAI,GACA4Y,EACAioD,EACAC,EACAC,EACApwB,MAIRE,EAASxhB,SAAS,KAAoB9uB,UAAU,WAC5C,WAAI,GACAqY,EACAg4E,EACA/vB,EACAC,EACAqvB,EACAU,EACA,IAAI,GAAqB//C,OAIjCD,EAASxhB,SAAS,KAAoB5uB,aAAa,WAC/C,WAAI,GACAmY,EACAioD,EACAC,EACAC,EACA,IAAI,GACAnoD,EACAkoD,EACAqvB,EACA,IAAI,GAAe,IAAI,GAAqBr/C,SAKxDD,EAASxhB,SAAS,KAAoB3uB,eAAe,WACjD,WAAI,GACAkY,EACAioD,EACAC,EACAC,EACA,IAAI,GACAnoD,EACAkoD,EACA,IAAI,GAAe,IAAI,GAAqBhwB,SAKxDD,EAASxhB,SAAS,KAAoB1uB,cAAc,WAChD,WAAI,GACAiY,EACAu3E,EACAtvB,EACAC,EACA+vB,EACA,IAAI,GAAyB//C,EAAc,SAAAkgD,oBAAA,QAInDngD,EAASxhB,SAAS,KAAoBxuB,QAAQ,WAC1C,WAAI,GACA+X,EACAioD,EACAsvB,EACAE,EACA,IAAI,GAAmBv/C,OAI/BD,EAASxhB,SAAS,KAAoBvuB,UAAU,WAC5C,WAAI,GACA8X,EACAioD,EACAsvB,EACAE,EACA,IAAI,GAAqBv/C,OAIjCD,EAASxhB,SAAS,KAAoBruB,QAAQ,WAC1C,WAAI,GACA4X,EACAioD,MAIRhwB,EAASxhB,SAAS,KAAoBluB,SAAS,WAC3C,WAAI,GACAyX,EACAioD,MAIRhwB,EAASxhB,SAAS,KAAoBjuB,SAAS,WAC3C,WAAI,GACAwX,EACAioD,EACAC,MAIRjwB,EAASxhB,SAAS,KAAoBhuB,QAAQ,WAC1C,WAAI,GACAuX,EACAioD,EACAC,EACAC,EACA,IAAI,GACAnoD,EACAkoD,EACAqvB,EACA,IAAI,GAAe,IAAI,GAAqBr/C,SAKxDD,EAASxhB,SAAS,KAAoB/tB,gBAAgB,WAClD,WAAI,GACAsX,EACAioD,EACA,IAAI,KAAmB/vB,OAI/BD,EAASxhB,SAAS,KAAoB9tB,uBAAuB,WACzD,WAAI,GACAqX,EACAioD,EACA,IAAI,KAAmB/vB,OAI/BD,EAASxhB,SAAS,KAAoB3tB,6BAA6B,WAC/D,WAAI,GACAkX,EACAu3E,EACA,IAAI,GAAyB,aAAqCr/C,EAAcL,IAChFowB,EACAC,MAIRjwB,EAASxhB,SAAS,KAAoB7tB,iBAAiB,WACnD,WAAI,GACAoX,EACAioD,EACAC,EACA,aAAqChwB,EAAcL,GACnD,IAAI,GACJ,IAAI,KAA4BA,GAChC,IAAI,KAAiB,CAAEgD,OAAQ,CAAEmK,gBAAiB,eAI1D/M,EAASxhB,SAAS,KAAoB1tB,qCAAqC,WACvE,WAAI,GACAiX,EACAioD,EACAC,EACA,aAAqChwB,EAAcL,GACnD,IAAI,GACJ,IAAI,KAA4BA,GAChC,IAAI,KAAiB,CAAEgD,OAAQ,CAAEmK,gBAAiB,eAI1D/M,EAASxhB,SAAS,KAAoBztB,OAAO,WACzC,WAAIqvF,GACAr4E,MAIRi4B,EAASxhB,SAAS,KAAoBxtB,UAAU,WAC5C,WAAI,GACA+W,EACAioD,EACAC,EACAC,EACApwB,MAIRE,EAASxhB,SAAS,KAAoBvtB,QAAQ,WAC1C,WAAI,GACA8W,EACAo4B,EACA6vB,EACAC,EACAqvB,EACAY,EACAtgD,EACA,IAAI,GAAmBK,OAI/BD,EAASxhB,SAAS,KAAoBnuB,0BAA0B,WAC5D,WAAI,GACA0X,EACAioD,MAIRhwB,EAASxhB,SAAS,KAAoBrtB,WAAW,WAC7C,WAAI,GACA4W,EACAioD,EACAC,EACAqvB,EACAM,MAIR5/C,EAASxhB,SAAS,KAAoBptB,kBAAkB,WACpD,WAAI,GACA2W,EACAioD,EACAC,EACAqvB,EACAM,MAIR5/C,EAASxhB,SAAS,KAAoBntB,yBAAyB,WAC3D,WAAI,GACA0W,EACAioD,EACAC,EACAqvB,EACAM,SAKR5/C,EAASxhB,SAAS,KAAoBltB,yBAAyB,WAC3D,WAAI,GACAyW,EACAo4B,EACAm/C,EACAY,EACAjwB,EACAD,EACA/c,EAA4ChT,EAAcL,GAC1D,IAAI,GAAyBK,OAIrCD,EAASxhB,SAAS,KAAoBhtB,WAAW,WAC7C,WAAI,GACAuW,EACAo4B,EACA6vB,EACAC,EACAqvB,EACAY,EACAtgD,EACA,IAAI,GAAqBK,GACzB,IAAI,GAAgBA,OAI5BD,EAASxhB,SAAS,KAAoBjtB,sBAAsB,WACxD,WAAI,GACAwW,EACAo4B,EACAm/C,EACAY,EACAjwB,EACAD,EACA,aACIjoD,EACA,IAAI,KACA,IAAI,IACA,IAAI,IAAsBk4B,UAO9CD,EAASxhB,SAAS,KAAoB/sB,QAAQ,WAC1C,WAAI,GACAsW,EACAioD,EACAC,EACAC,EACA,IAAI,GAAgBjwB,OAI5BD,EAASxhB,SAAS,KAAoB9sB,YAAY,WAC9C,WAAI,GACAqW,EACAioD,EACAC,EACA,IAAI,KAAuBhwB,OAInCD,EAASxhB,SAAS,KAAoB7sB,mBAAmB,WACrD,WAAI,GACAoW,EACAo4B,EACAm/C,EACAY,EACAjwB,EACAD,EACA,aACIjoD,EACA,IAAI,UAKhBi4B,EAASxhB,SAAS,KAAoBzuB,0BAA0B,WAC5D,WAAI,GACAgY,EACAo4B,EACAm/C,EACAY,EACAjwB,EACAD,EACA,aACIjoD,EACA,IAAI,UAKhBi4B,EAASxhB,SAAS,KAAoB/uB,wBAAwB,WAC1D,WAAI,GACAsY,EACAo4B,EACAm/C,EACAY,EACAjwB,EACAD,EACA,aACIjoD,EACA,IAAI,KAAgC63B,QAKhDI,EAASxhB,SAAS,KAAoB3sB,KAAK,WACvC,WAAI,GACAkW,EACAioD,EACAC,EACAqvB,EACAU,EACAR,EACA,IAAI,GAAgBv/C,GACpBL,MAIRI,EAASxhB,SAAS,KAAoB7uB,UAAU,WAC5C,WAAI,GACAoY,EACAioD,EACAC,EACAC,EACApwB,MAIRE,EAASxhB,SAAS,KAAoBtuB,QAAQ,WAC1C,WAAI,GACA6X,EACAioD,EACAC,EACAnwB,MAIRE,EAASxhB,SAAS,KAAoB5sB,QAAQ,WAC1C,WAAI,GACAmW,EACAioD,EACAC,EACAnwB,MAIRE,EAASxhB,SAAS,KAAoBttB,UAAU,WAC5C,WAAI,GACA6W,EACAu3E,EACArvB,EACAD,EACA,IAAI,GAAmB/vB,GACvB+/C,EACAluC,MAIR9R,EAASxhB,SAAS,KAAoBtvB,MAAM,WACxC,WAAI,GACA6Y,EACAioD,EACAC,EACAqvB,EACAU,EACA,IAAI,GAAiB//C,OAI7BD,EAASxhB,SAAS,KAAoBpvB,iBAAiB,WACnD,WAAI,GACA2Y,EACAioD,EACAC,EACAC,MAIRlwB,EAASxhB,SAAS,KAAoBpuB,QAAQ,WAC1C,WAAI,GACA2X,EACA,IAAI,GAAmBk4B,GACvB+vB,EACAC,MAIRjwB,EAASxhB,SAAS,KAAoBlvB,kBAAkB,WACpD,WAAI,GACAyY,EACAioD,EACAC,EACAC,MAIRlwB,EAASxhB,SAAS,KAAoBjvB,mBAAmB,WACrD,WAAI,GACAwY,EACAioD,EACAC,EACAC,MAIRlwB,EAASxhB,SAAS,KAAoBnvB,mBAAmB,WACrD,WAAI,GACA0Y,EACAioD,EACAC,EACAC,MAIDlwB,EH1jBCqgD,CAA8Bt4E,EAAO42E,EAAe/+C,EAAeq/C,EAAgBntC,GACnFke,EACAmvB,GAEJ,IAAI,GAA6B,IAAI,GAA6Bv/C,EAAe,CAAEkS,OAAM,KACzF,IAAI,GKzFG,SACX/pC,EACA63B,GAEA,IAAMI,EAAW,IAAI,IACf++C,EAAwB,IAAI,IAAsBn/C,GAClD0gD,EAA2B,IAAI,KAAyB1gD,GACxD2gD,EAA2B,IAAI,KAAyBD,EAA0BvB,GA6BxF,OA3BA/+C,EAASxhB,SAAS,UAAU,WACxB,WAAI,GACAzW,EACAw4E,EACA,IAAI,IAA2B,IAAI,IAA2B3gD,IAC9D,IAAI,GAA4B,IAAI,GAA4BA,IAChE,IAAI,EAAsB,SAAAM,gBAAA,QAIlCF,EAASxhB,SAAS,aAAa,WAC3B,WAAI,GACAzW,EACAw4E,EACA,IAAI,IAA2B,IAAI,IAA2B3gD,IAC9D,cACA,IAAI,GAA8BI,OAI1CA,EAASxhB,SAAS,WAAW,WACzB,WAAI,GACAzW,EACAw4E,MAIDvgD,EApCI,CLyF0Dj4B,EAAO63B,IACxE,IAAI,GAAyB,IAAI,GAAyBA,IAC1Du/C,EACA,IAAI,GAAyB,IAAI,GAAyBv/C,IAC1Dw/C,EACAC,G,uDM3Fa,GAArB,WASI,WACIn7F,EACQs8F,kBAEF,MAAoC39F,KAAK49F,iBAAiBv8F,GAAxD4tD,EAAM,SAAE4uC,EAAO,UAAEC,EAAY,eAErC99F,KAAKosF,QAAUn9B,EACfjvD,KAAK+9F,SAAWF,EAChB79F,KAAKg+F,cAAgBF,EACrB99F,KAAKi+F,YAAc,GAiI1B,OAjHG,YAAAC,QAAA,SAAQp7C,GAAR,WACI5hD,OAAOge,KAAK4jC,GAAMhgD,SAAQ,YACtB,IAAMq7F,EAAoBC,sBAAct7C,EAAK55C,GAE7C,EAAK80F,cAAiBI,sBAAcl1F,GAAS,EAAK80F,cAAcG,OASxE,YAAAE,UAAA,WACI,OAAOr+F,KAAKs+F,mBAAqBt+F,KAAKosF,QA7DvB,MAkFnBtjF,EAAA,UAAAy1F,UAAA,SAAUr1F,EAAagxB,sBACnB,IAAMskE,EAAiBJ,sBAAcl1F,EAErC,GAA+C,iBAApClJ,KAAKg+F,cAAcQ,GAG1B,OAFAx+F,KAAK29F,QAAQ96F,KAAK,oBAAoB27F,EAAW,gBAE1CA,EAGX,IAAKx+F,KAAKi+F,YAAYO,GAAc,CAChC,IAAMC,EAAgB,IAAI,KAAcz+F,KAAK+9F,SAASS,IAEtDx+F,KAAKi+F,YAAYO,GAAeC,EAAcC,QAAQ1+F,KAAKg+F,cAAcQ,IAAgB,IAG7F,OAAOx+F,KAAKi+F,YAAYO,GAAax+F,KAAK2+F,eAAezkE,KAGrD,YAAA0jE,iBAAR,SAAyBv8F,sBACrB,IAAMsxB,EAAyB,CAC3BisE,oBAAqB,GACrBd,aAAc,GACdD,QAAS,GACT5uC,OAAQ5tD,EAAO4tD,QAzGJ,MA4GT4uC,EAAUx8F,EAAOw8F,SAAW,GAC5BC,EAAe99F,KAAK6+F,eAAex9F,EAAOy8F,cAAgB,IAC1Dc,EAAsB5+F,KAAK6+F,eAAex9F,EAAOu9F,qBAAuB,IAa9E,OAZwB,UAAAE,MAAA,CAAM59F,OAAOge,KAAK0/E,GAAsB19F,OAAOge,KAAK4+E,IAE5Dh7F,SAAQ,YAChBg7F,GAAgBA,EAAa50F,IAC7BypB,EAAOmrE,aAAa50F,GAAO40F,EAAa50F,GACxCypB,EAAOkrE,QAAQ30F,GAAO20F,EAAQ30F,IAAQypB,EAAOs8B,SAE7Ct8B,EAAOmrE,aAAa50F,GAAO01F,EAAoB11F,GAC/CypB,EAAOkrE,QAAQ30F,GAvHR,SA2HRypB,GAGH,YAAAksE,eAAR,SAAuBz1F,EAAsB7E,EAA2Bw6F,GAAxE,oBAA6Cx6F,mBAA2Bw6F,UACpE,IACI79F,OAAOge,KAAK9V,GAAQtG,SAAQ,YACxB,IAAM1C,EAAQgJ,EAAOF,GACf81F,EAAYD,EAAeA,EAAS,IAAI71F,EAAQA,EAEtD,GAAI,UAAA5D,SAAA,CAASlF,GACT,OAAO,EAAKy+F,eAAez+F,EAAOmE,EAAQy6F,GAG9Cz6F,EAAOy6F,GAAa5+F,KAE1B,MAAOE,GACLN,KAAK29F,QAAQ96F,KAAK,2BAA2BvC,GAGjD,OAAOiE,GAGH,YAAAo6F,eAAR,SAAuBzkE,GACnB,OAAOh5B,OAAOge,KAAKgb,GAAMl0B,QAAO,SAACzB,EAAQ2E,GACrC,IAAM9I,EAAQ85B,EAAKhxB,GAInB,OAFA3E,EAAO2E,GAAO9I,QAAwC,GAAKA,EAEpDmE,IACR,KAGC,YAAA+5F,iBAAR,sBACI,OAAOp9F,OAAOge,KAAKlf,KAAK+9F,UAAU5+E,KAAI,YAAO,OAAArW,EAAKi1F,SAAS70F,MACtDmY,QAAO,YAAQ,SAAKqQ,MAAM,KAAK,KAAO5oB,EAAKsjF,QAAQ16D,MAAM,KAAK,MAC9DjyB,OAAS,GAjJc,sBADnC,MACoB,GAArB,GCFe,SAASw/F,GAAsB59F,GAC1C,YAAO,IADmCA,UACnC,IAAI,GACPA,EACAqrD,KClBR,I,GAAA,WAOI,WACIwyC,GAEA,IAAKA,EACD,MAAM,IAAIp9F,MAAM,6BAIhB,MAKAo9F,EAAgB,cAJhBC,EAIAD,EAAgB,eAHhBE,EAGAF,EAAgB,OAFhBG,EAEAH,EAAgB,mBADhBI,EACAJ,EAAgB,iBAEpB,GAC8B,iBAAnBC,GACW,iBAAXC,GACuB,iBAAvBC,GACqB,iBAArBC,GACkB,iBAAlBtgF,EAEP,MAAM,IAAI,KAAqB,sCAGnChf,KAAK+iB,eAAiBw8E,SAASvgF,EAAe,IAC9Chf,KAAKw/F,gBAAkBL,EACvBn/F,KAAKy/F,QAAUL,EACfp/F,KAAK0/F,oBAAsBL,EAC3Br/F,KAAK2/F,kBAAoBL,EAyChC,OAtCG,YAAA7tE,OAAA,SAAOlS,GACH,GAAsB,iBAAXA,EACP,MAAM,IAAI,KAAqB,2BAGnC,IAAMqgF,EAAkB5/F,KAAK6/F,cAActgF,GAErCugF,EAAoB9/F,KAAK+/F,gBAAgBH,GAE/C,OAAOrgF,EAAS,EACZ,IAAIugF,EACJA,GAGA,YAAAD,cAAR,SAAsBtgF,GAClB,IAAMygF,EAAiBh9E,KAAKi9E,IAAI1gF,GAC1B,EAAyCvf,KAAKkgG,SAASF,EAAgBhgG,KAAK+iB,gBAAiB2O,MAAM,KAAjGhS,EAAa,KAAE,kBAAgB,KAAE,EACnCygF,EAAsBzgF,EAAckT,QAAQ,wBAAyB5yB,KAAK0/F,qBAEhF,OAAI1/F,KAAK+iB,eAAiB,EACfo9E,EAGJ,CACHA,EACAC,GACFvhF,KAAK7e,KAAK2/F,oBAGR,YAAAI,gBAAR,SAAwBH,GACpB,MAA+C,SAAvC5/F,KAAKw/F,gBAAgB3pD,cACzB,GAAG71C,KAAKy/F,QAAUG,EAClB,GAAGA,EAAkB5/F,KAAKy/F,SAG1B,YAAAS,SAAR,SAAiB9/F,EAAeigG,GAC5B,SAAUr9E,KAAKC,QAAQ7iB,EAAQ,IAAMigG,IAAc,KAAOA,IAAYj6C,QAAQi6C,IAEtF,EA7EA,GCKqB,GAArB,WAOI,WACYC,uBAERtgG,KAAKugG,mBAAqB,IAAI,GAAkBvgG,KAAKsgG,aAAajrD,iBAClEr1C,KAAKwgG,gBAAkB,IAAI,GAAkBxgG,KAAKsgG,aAAah5E,UAYtE,OATGxe,EAAA,UAAA23F,mBAAA,SAAmBlhF,GACf,IAAMmhF,EAAe1gG,KAAKsgG,aAAajrD,gBAAgBqrD,aAEvD,OAAO1gG,KAAKugG,mBAAmB9uE,OAAOlS,EAASmhF,IAGnD53F,EAAA,UAAA63F,gBAAA,SAAgBphF,GACZ,OAAOvf,KAAKwgG,gBAAgB/uE,OAAOlS,IArBP,sBADnC,MACoB,GAArB,GCYe,SAASqhF,GACpBv/F,GAEA,OAAO,IAAI,GAAgBA,G,ICHnBw/F,G,qBAAZ,SAAYA,GACR,IAAAC,SAAA,cACA,IAAAC,SAAA,cACA,IAAAC,QAAA,aACA,IAAAC,QAAA,aAJJ,CAAYJ,QAAc,KAO1B,IAAMK,GAAoD,CACtD36E,SAAUs6E,GAAeC,SACzBz3E,SAAUw3E,GAAeE,SACzB/+D,QAAS6+D,GAAeG,QACxBr5E,QAASk5E,GAAeI,S,GAG5B,WAWI,WACYE,EACAC,EACAC,EACR,G,IAAEC,YAAa,EAAwB,GAAE,iBAEzC,GALQH,uBACAC,eACAC,iBAbJ,KAAAE,kBAAA,EACA,KAAAC,gBAA8C,GAC9C,KAAAC,aAAuD,GACvD,KAAAC,mBAAyC,CAC7C,WACA,WACA,UACA,oBASIJ,EAA6B,CAC7B,GAAIA,EAAcj1E,MAAK,YAAS,QAAEjsB,KAAS8gG,OACvC,MAAM,IAAI,KACN,sDAAsD,UAAAhiF,KAAA,CAAKgiF,IAAgBriF,KAAK,MAAK,KAG7F7e,KAAK0hG,mBAAqBJ,GA2ZrC,OAtZGx4F,EAAA,UAAA64F,qBAAA,WACI,IAAI3hG,KAAKuhG,iBAAT,CAIA,IAAMh2E,EAAWvrB,KAAKm1B,cAEtB,GAAK5J,EAAL,CAKI,MASAA,EAAQ,QARRxB,EAQAwB,EAAQ,WAPRjC,EAOAiC,EAAQ,kBANR3B,EAMA2B,EAAQ,SALR,EAKAA,EAAQ,KAJJ/D,EAAS,YACT5F,EAAc,iBACd7E,EAAE,KAIJ6kF,EAAiB5hG,KAAK6hG,mBAAmB9kF,EAAIyK,GAEnDxnB,KAAKqhG,UAAUS,MAAM,mBAAoB9hG,KAAK+hG,mBAAmB,CAC7DC,QAASj4E,EACTV,SAAUC,EACV24E,IAAKr4E,EACLnK,SAAUmC,EACVqG,QAAO,EACPT,UAAS,EACTo6E,eAAc,KAGlB5hG,KAAKuhG,uBAGTz4F,EAAA,UAAAo5F,mBAAA,e,EAAA,OACUh7E,EAAQlnB,KAAKo4B,WAEnB,GAAKlR,EAAL,CAKI,MASAA,EAAK,WARLK,EAQAL,EAAK,QAPL8C,EAOA9C,EAAK,YANLoC,EAMApC,EAAK,kBALL0C,EAKA1C,EAAK,SAJLtF,EAIAsF,EAAK,eAHLe,EAGAf,EAAK,QAFLM,EAEAN,EAAK,UADLqzB,EACArzB,EAAK,OAET,GAAKkC,EAAL,CAIA,IAAMw4E,EAAiB5hG,KAAKmiG,mBAAmB5nD,GAE/C,GAAuB,OAAnBqnD,EAAJ,CAIA,IAAMQ,EACU,QADU,EAAGpiG,KAAKmhG,gBAAgBpsE,WAAWmF,KACxD+M,uBAAW,WAAEwmB,iBAAiB2Q,SAAS,sCAEtCt5C,EAAU9kB,KAAK+hG,mBAAmB,CACpCx6E,QAAO,EACPy6E,QAASh4E,EACTX,SAAUC,EACV24E,IAAKr4E,EACLnK,SAAUmC,EACVqG,QAAO,EACP25E,eAAc,EACdp6E,UAAS,IAGb,GAAI46E,GAAwBpiG,KAAKqhG,UAAUgB,gBAAgBv9E,GAsBvD,OArBA9kB,KAAKqhG,UAAUiB,IAAI,cAAe,CAC9B,MAAOx9E,EAAQyC,QACf,MAAOzC,EAAQy9E,YACf,MAAOz9E,EAAQk9E,QACf,MAAOl9E,EAAQuE,SACf,MAAOvE,EAAQm9E,IACf,OAAQn9E,EAAQiD,OAChB,MAAOjD,EAAQwC,WAGnBxC,EAAQ09E,SAASrjF,KAAI,YACjB,EAAKkiF,UAAUiB,IAAI,OAAQ,CACvB,MAAOx9E,EAAQyC,QACf,MAAOk7E,EAAQp6F,KACf,MAAOo6F,EAAQvgF,IACf,MAAO,GAAGugF,EAAQC,SAClB,MAAOD,EAAQ//E,MACf,MAAO+/E,EAAQziF,cAIhBhgB,KAAK2iG,mBAAmBpoD,GAGnCv6C,KAAKqhG,UAAUS,MAAM,kBAAmBh9E,GAExC9kB,KAAK2iG,mBAAmBpoD,OAG5BzxC,EAAA,UAAA85F,gBAAA,SAAgBv4E,GACZ,IAAMw4E,EAAS7iG,KAAK8iG,cAAcz4E,GAE7Bw4E,IAAU7iG,KAAK+iG,cAAcF,KAIlC7iG,KAAKgjG,YAAYH,GACjB7iG,KAAKijG,SAASJ,KAGlB/5F,EAAA,UAAAo6F,mBAAA,SAAmB74E,GACf,IAAMw4E,EAAS7iG,KAAK8iG,cAAcz4E,GAE7Bw4E,IAAU7iG,KAAKmjG,iBAAiBN,KAIrC7iG,KAAKijG,SAASJ,GACd7iG,KAAKojG,eAAeP,KAGhB,YAAAI,SAAR,SAAiBJ,GACb,IAAgB,UAAA7iG,KAAK0hG,mBAAL,eAAyB,CAApC,IAAM/6F,EAAC,KACFoW,EAAK/c,KAAK8iG,cAAcn8F,GAE9B,IAAKoW,EACD,MAOJ,GAJK/c,KAAK+iG,cAAchmF,IACpB/c,KAAKgjG,YAAYjmF,GAGjBA,IAAO8lF,EACP,MAGC7iG,KAAKmjG,iBAAiBpmF,IACvB/c,KAAKojG,eAAermF,KAKxBjU,EAAA,UAAAs6F,eAAR,SAAuBP,GACnB,IAAMQ,EAAiBrjG,KAAK+0F,4BACpB,GAAwB/0F,KAAKsjG,sBAAwB,IAAE,KAAjDh8E,WAAW,KAAE,EACrB+Q,EAAgBr4B,KAAKujG,uBAErBz+E,EAKF,CACAuF,KAAMw4E,EACNv7E,SAAQ,GAGR+7E,IACAv+E,EAAQu+E,eAAiBA,EAAe5gF,aAGxC4V,IACAvT,EAAQuT,cAAgBA,GAQvBvT,EAAQu+E,gBAAmBv+E,EAAQuT,gBACpCvT,EAAQu+E,eAAiB,KAG7BrjG,KAAKqhG,UAAUS,MAAM,0BAA2Bh9E,GAEhD,IAAM0+E,EAAmBH,EAAiBA,EAAetmF,GAAK,GACxD0mF,EAAkBZ,IAAWhC,GAAeE,SAC3C8B,EAAM,IAAIW,EACbX,EAEJ7iG,KAAKwhG,gBAAgBiC,OAGjB,YAAA1B,mBAAR,SAA2B,G,IACvBx6E,EAAO,UACPy6E,EAAO,UACP34E,EAAQ,WACR44E,EAAG,MACHxiF,EAAQ,WACRwI,EAAO,UACP25E,EAAc,iBACdp6E,EAAS,YAWD,GAAcxnB,KAAKsjG,sBAAwB,IAAE,KAA7C,WAAO,KAAE,EACT,GAAmBtjG,KAAK0jG,mBAAqB,IAAE,UAEvD,MAAO,CACHn8E,QAAO,EACPg7E,iBAAYA,IAJI,KAAE,EAKlBP,QAAShiG,KAAK2jG,kBAAkB3B,GAChC34E,SAAUrpB,KAAK2jG,kBAAkBt6E,GACjC44E,IAAKjiG,KAAK2jG,kBAAkB1B,GAC5BxiF,SAAUzf,KAAK2jG,kBAAkBlkF,GACjCsI,QAASE,GAAW,IAAI9I,KAAI,YAAU,SAAOsI,KAAKmiE,iBAAe/qE,KAAK,KACtEyI,SAAUG,EACV+6E,SAAUxiG,KAAK4jG,YAAYhC,EAAgBp6E,KAI3C,YAAA27E,iBAAR,SAAyBN,GACrB,IAAMnqE,EAAiB14B,KAAK+0F,4BACtByO,EAAmB9qE,EAAiBA,EAAe3b,GAAK,GAE9D,OAAO/c,KAAKwhG,gBAAgBj4F,eAAes5F,IAEnCA,IAAWhC,GAAeE,UAC1B/gG,KAAKwhG,gBAAgBj4F,eAAkBs5F,EAAM,IAAIW,IAIrD,YAAAT,cAAR,SAAsBF,GAClB,QAAS7iG,KAAKyhG,aAAaoB,IAGvB,YAAAC,cAAR,SAAsBz4E,GAClB,IAAMhiB,EAAOgiB,EAAKqH,MAAM,KAExB,OAAOwvE,GAAe74F,EAAK,KAAO,MAG9BS,EAAA,UAAAk6F,YAAR,SAAoBH,GAChB,IAAMv7E,EAAWtnB,KAAKsjG,qBAEtBtjG,KAAKqhG,UAAUS,MAAM,uBAAwB,CACzCz3E,KAAMw4E,EACNv7E,SAAUA,EAAWA,EAASG,KAAO,KAGzCznB,KAAKyhG,aAAaoB,OAGd,YAAAzqE,SAAR,WAGI,OAAM,EAFyBp4B,KAAKmhG,gBAAgBpsE,WAAU,kBAK1D,YAAAI,YAAR,WAGI,OAAM,EAF4Bn1B,KAAKmhG,gBAAgBpsE,WAAU,qBAK7D,YAAAuuE,mBAAR,WACoB,IACVjiG,KAD0BrB,KAAKmhG,gBAAgBpsE,WAAU,kBAG/D,OAAO1zB,GAAUA,EAAOg0C,iBAGpB,YAAAquD,gBAAR,WACoB,IACVriG,KAD0BrB,KAAKmhG,gBAAgBpsE,WAAU,kBAG/D,OAAO1zB,GAAUA,EAAO04B,cAGpBjxB,EAAA,UAAA66F,kBAAR,SAA0BpkF,GACd,IAAAva,GAAqBhF,KAAKsjG,sBAAwB,IAAE,aAApD,WAAe,IAAC,EAExB,OAAOtgF,KAAKC,MAAM1D,EAASmhF,EAAe,KAAO,KAG7C,YAAAmB,mBAAR,SAA2B9kF,EAAYyK,GACnC,IAAM0S,EAAO,yBACN1S,EAAUkD,cACVlD,EAAUmD,cACf3kB,QAAO,SAACzB,EAAQ6a,GAMd,OALA7a,EAAO6a,EAAKgD,WAAa,CACrBH,MAAO7C,EAAK6C,MAAQ7C,EAAK6C,MAAQ,GACjCygF,SAAUtjF,EAAK+C,cAAgB/C,EAAK+C,cAActD,KAAK,MAAQ,IAG5Dta,IACR,IAEH,IAGI,OAFAvE,KAAKohG,QAAQnjD,QAAQj+C,KAAK6jG,cAAc9mF,GAAK46B,KAAKC,UAAU1d,IAErDA,EACT,MAAO55B,GACL,MAAO,KAIP,YAAAujG,cAAR,SAAsB9mF,GAClB,OAAOA,EAAQ+mF,eAA2B/mF,EAAO,IAG7C,YAAAolF,mBAAR,SAA2BplF,GACvB,IACI,IAAMqC,EAAOpf,KAAKohG,QAAQzjD,QAAQ39C,KAAK6jG,cAAc9mF,IAErD,OAAOqC,EAAOu4B,KAAKmG,MAAM1+B,GAAQ,KACnC,MAAO9e,GACL,OAAO,OAIP,YAAAqiG,mBAAR,SAA2B5lF,GACvB,IACI/c,KAAKohG,QAAQrjD,WAAW/9C,KAAK6jG,cAAc9mF,IAC7C,MAAOzc,MAKL,YAAAy0F,0BAAR,WACY,IACFr8D,EADW14B,KAAKmhG,gBAAgBpsE,WAAU,KACpBggE,4BAE5B,OAAQr8D,GAAkBA,EAAe3b,IAAM2b,EAAejW,YAC1DiW,EACA,MAGA,YAAA6qE,qBAAR,WACY,IACFlrE,EADWr4B,KAAKmhG,gBAAgBpsE,WAAU,KACrBkgE,2BAE3B,OAAQ58D,GAAiBA,EAAch3B,QACnCg3B,EAAch3B,OAAO0xB,aACrB,IAGA,YAAA6wE,YAAR,SAAoBG,EAA2Bv8E,GAA/C,WACUyP,GAAmCzP,EAAUyP,aAAe,IAAI9X,KAAI,YAAQ,OAC9E6kF,WAAY5kF,EAAKrC,GACjBmF,IAAK9C,EAAK8C,IACVQ,MAAOtD,EAAKyC,UACZ7B,SAAUZ,EAAKY,SACf3X,KAAM+W,EAAK/W,SAGT47F,EAA2Cz8E,EAAUyE,iBAAiB9M,KAAI,YAC5E,MAAO,CACH6kF,WAAY5kF,EAAKrC,GACjB2F,MAAO,EAAKihF,kBAAkBvkF,EAAKG,QACnClX,KAAM+W,EAAK/W,KACX2X,SAAU,MAIZkkF,EAA8C,yBAC7C18E,EAAUkD,cACVlD,EAAUmD,cACfxL,KAAI,YACF,IAAIglF,EAOJ,OALI/kF,EAAK4B,SAAW5B,EAAK4B,QAAQvhB,SAC7B0kG,EAAiB/kF,EAAK4B,QAAQ7B,KAAI,YAAU,OAAGkD,EAAOha,KAAI,IAAIga,EAAOjiB,UACtDi4D,OAGZ,CACH2rC,WAAY5kF,EAAKgD,UACjBF,IAAK9C,EAAK8C,IACVQ,MAAOtD,EAAK0C,UACZsiF,UAAWhlF,EAAKE,SAChBjX,KAAM+W,EAAK/W,KACX2X,SAAUZ,EAAKY,SACfiC,MAAO8hF,EAAU3kF,EAAKgD,WAAa2hF,EAAU3kF,EAAKgD,WAAWH,MAAQ,GACrEygF,SAAUqB,EAAU3kF,EAAKgD,WAAa2hF,EAAU3kF,EAAKgD,WAAWsgF,SAAW,GAC3E2B,SAAUF,GAAkB,IAAItlF,KAAK,UAI7C,OAAO,yBACAoY,EACAitE,EACAD,IAGf,EAlbA,G,GCjCA,yBAgBC,OAfGn7F,EAAA,UAAA64F,qBAAA,aAIA74F,EAAA,UAAAo5F,mBAAA,aAIAp5F,EAAA,UAAA85F,gBAAA,aAIA95F,EAAA,UAAAo6F,mBAAA,aAGJ,EAhBA,GCwBe,SAASoB,GACpBnD,EACAoD,GAEQ,IACFljG,EADW8/F,EAAgBpsE,WAAU,KACvBkS,YAEpB,IAAK5lC,EACD,MAAM,IAAI,IAAiB,IAAqBgP,uBAKpD,OAF+BhP,EAAOosD,iBAAgB,oBCnCnD,SAAkC51B,GACrC,OAAO/e,QAAS+e,EAAkCwpE,WAD/C,CDqCgDxpE,QACxC,IAAI,GACPspE,EACA,KACAtpE,OAAOwpE,UACPkD,GAID,IAAI,GEhDf,IAAAv/F,EAAA,0DAAAA,EAAA,qDAAAA,EAAA,iEAAAA,EAAA,+CAAAA,EAAA,iEAAAA,EAAA,qDAAAA,EAAA,qDAAAA,EAAA,8C,kCCuBYw/F,EAQAC,EAKAC,EAQAC,E,yBCrCZ,WAGI,WACYx2E,wBAERnuB,KAAKouB,QAAUyJ,OA0CtB,OAvCS,YAAA+sE,mBAAN,SAAyBpuE,EAAoCquE,G,uIACzD7kG,KAAK8kG,gBAAgBtuE,EAAQquE,GAExB7kG,KAAKouB,QAAQ22E,iBAAd,MAGA,GAAM/kG,KAAKmuB,cAAcG,WAFP,uEAE6B,CAAClnB,OAAMA,EAAO+Y,WAAY,M,OAEzE,GAFA,UAEKngB,KAAKouB,QAAQ22E,iBACd,MAAM,IAAI,I,iBAIlB,SAAM/kG,KAAKouB,QAAQ22E,iBAAiBvuE,I,OAEpC,GAFA,UAEKx2B,KAAKouB,QAAQU,OACd,MAAM,IAAI,IAGd,MAAO,CAAP,EAAO9uB,KAAKouB,QAAQU,gBAGxB,YAAAg2E,gBAAA,SAAgB9jF,EAAqC6jF,GACjD,IAEIz/E,EAUJ,GARKpE,EAEOA,EANM,aAQNA,EAPQ,gBAOiB6jF,IACjCz/E,EARgB,eAMhBA,EAPc,YAKdA,EAAQ,UAORA,EACA,MAAM,IAAI,IAAqB,8BAA8BA,EAAK,iDAG9E,EAhDA,G,2CDgBA,SAAYo/E,GACR,EAAA11E,OAAA,SACA,EAAAvD,SAAA,WACA,EAAAy5E,OAAA,SACA,EAAAC,IAAA,MACA,EAAAC,YAAA,cALJ,CAAYV,MAAgB,KAQ5B,SAAYC,GACR,EAAAU,SAAA,WACA,EAAAC,WAAA,aAFJ,CAAYX,MAAiB,KAK7B,SAAYC,GACR,EAAAW,KAAA,OACA,EAAAC,KAAA,OACA,EAAAC,OAAA,SACA,EAAAC,MAAA,QACA,EAAAC,MAAA,QALJ,CAAYf,MAAgB,KAQ5B,SAAYC,GACR,EAAAe,KAAA,OACA,EAAAC,KAAA,OAFJ,CAAYhB,MAAgB,KET5B,I,EAAA,WAUI,WACYnqD,EACA2sC,GADA3sC,2BACA2sC,oCAyKJ,KAAAye,qBAAuB,SAACzvD,GAC5B,IAAM0vD,EAAY,sBAAkC1vD,GAC5C7L,EAAiD6L,EAAK,MAA/C8T,EAA0C9T,EAAK,MAAxC2vD,EAAmC3vD,EAAK,OAAhCC,EAA2BD,EAAK,MAAzB4U,EAAoB5U,EAAK,OAAjB4vD,EAAY5vD,EAAK,QA8B9D,OA5BI7L,IAAUk6D,EAAiBl6D,WACpBu7D,EAAav7D,MAGpBw7D,IAAWrB,EAAkBqB,WACtBD,EAAaC,OAGpB77C,IAAUy6C,EAAiBz6C,WACpB47C,EAAa57C,MAGpB7T,IAAUuuD,EAAiBvuD,WACpByvD,EAAazvD,MAGF,iBAAX2U,EACP86C,EAAa96C,OAASA,EAAS,GACzB,GACCA,EAAS,GAAK,GAAKA,SAEnB86C,EAAa96C,QAGD,kBAAZg7C,GAA0BA,GAAWF,EAAaC,SAAWrB,EAAkBA,EAAkBW,qBACjGS,EAAaE,QAGjBF,GAiBd,OAvNS,YAAAp2E,WAAN,SAAiBw2D,EAA0C4e,EAA4CrsE,G,sIACpF,OAAf,EAAAx4B,KAAe,GAAMA,KAAKw6C,oBAAoBoqD,mBAAmB3e,EAAc4e,I,OAG/E,OAHA,EAAK50E,QAAU,SACfjwB,KAAKgmG,WAAaxtE,EAEX,CAAP,EAAOx4B,KAAKiwB,iBAGhB,YAAAslB,cAAA,SAAcgF,EAAgBlI,EAAmB7b,EAA6ByvE,GAA9E,WACI,YAD6CzvE,mBAA6ByvE,WACrEjmG,KAAKiwB,UAAYjwB,KAAKiwB,QAAQ8lB,QAC/B,MAAM,IAAI,IAGN,MAAkDkwD,EAAc,kBAA7CxwD,EAA+BwwD,EAAc,WAAjC1lB,EAAmB0lB,EAAc,eAElEpqD,EAAY,yCACXrlB,GAAM,CACT6f,YAAa,WAAM,SAAKC,cAAciE,EAAQwtC,IAE9CjsC,QAAS,SAAO5hB,EAAMghB,GAAO,uD,qDAGzB,OAFAl7C,KAAKkmG,eAAiBhsE,EAAK+b,cAEpB,CAAP,EAAqB,QAArBttC,EAAO,EAAOmzC,mBAAO,gBAAd,EAAiB5hB,EAAMghB,aAuBtC,OAnBI1kB,EAAO2f,QACP0F,EAAa1F,MAAQn2C,KAAK4lG,qBAAqBpvE,EAAO2f,QAGtDV,IACAz1C,KAAKkmG,eAAiBlmG,KAAKiwB,QAAQylB,QAAQD,GAC3CoG,EAAa5F,cAAgBj2C,KAAKkmG,gBAGtClmG,KAAKmmG,eAAiBnmG,KAAKiwB,QAAQ8lB,QAAQ8F,GAEtC77C,KAAKmmG,eAAevvD,cACrB52C,KAAKomG,oBAAoBvqD,EAAcpG,GAG3C8qC,aAEAvgF,KAAKmmG,eAAetvD,OAAOxE,GAEpBryC,KAAKmmG,gBAGhB,YAAAre,aAAA,SAAa,G,IACTL,EAAkB,qBAClBhyC,EAAU,aACViyC,EAAe,kBACf5gE,EAAQ,WACRD,EAAK,QAEL,IAAK7mB,KAAKiwB,UAAYjwB,KAAKiwB,QAAQo2E,OAC/B,MAAM,IAAI,IAGd,IAAMC,EAA8B,CAChCrwD,cAAej2C,KAAKiwB,QAAQylB,QAAQD,GACpCU,MAAOuxC,EACPjsB,OAAQ,CACJpzD,KAAM,CACFjI,MAAO0mB,GAEXD,MAAO,CACHzmB,MAAOymB,KAKnB7mB,KAAKumG,cAAgBvmG,KAAKiwB,QAAQo2E,OAAOC,GAEzC,IAAME,EAAwBzqF,SAASw2C,cAAck1B,GAOrD,OANI+e,IACAA,EAAsB3xC,UAAY,IAGtC70D,KAAKumG,cAAc1vD,OAAO4wC,GAEnBznF,KAAKumG,eAGhB,YAAAte,WAAA,WACI,OAAOjoF,KAAKwnF,UAGhB,YAAAprC,eAAA,SAAeqqD,EAAmBp0D,GAC9B,IAAKryC,KAAKiwB,UAAYjwB,KAAKiwB,QAAQy2E,SAC/B,MAAM,IAAI,IAWd,OATA1mG,KAAK2mG,gBAAkB3mG,KAAKiwB,QAAQy2E,SAAS,CACzCnnF,OAAQknF,EACR7xD,UAAW,OACXuB,MAAO,CACH2vD,OAAQ,UAGhB9lG,KAAK2mG,gBAAgB9vD,OAAOxE,GAErBryC,KAAK2mG,iBAGV,YAAAhgB,mBAAN,SAAyBpsC,EAAgB/jB,EAAkC8vD,G,iJACvE,IAAKtmF,KAAKiwB,UAAYjwB,KAAKiwB,QAAQ22E,aAC/B,MAAM,IAAI,IAKd,GAFQnrC,EAAmBjlC,EAAM,OAAjBupB,EAAWvpB,EAAM,QAE5Bx2B,KAAKiwB,QAAQ22E,aAAahwD,aAC3B,MAAM,IAAI,IAAoB,IAAwB/mB,uBAGrC,OAArB,EAAA7vB,KAAqB,GAAMA,KAAKiwB,QAAQ22E,aAAa/vD,OAAO,CACxD4kB,OAAM,EACN1b,OAAM,EACN8mD,aAAYA,EACZxwD,YAAa,WAAM,SAAKC,cAAciE,EAAQ,CAAEqP,cAAaA,Q,cAJjE,EAAKk9C,cAAgB,SAOjBxgB,GACCplF,OAAOge,KAAKonE,GAA4CxjF,SAAQ,YAC5D,EAAKgkG,cAA6CjzE,GAAG3qB,EAAKo9E,EAAOp9E,O,YAKxE,YAAA29E,mBAAN,SAAyB7lE,G,yGACrB,IAAKhhB,KAAK8mG,cACN,MAAM,IAAI,IAAoB,IAAwBj3E,uBAG1D,MAAO,CAAP,EAAO7vB,KAAK8mG,cAAc7pC,OAAO,SAAA9oC,OAAA,CAAOnT,EAAS,EAAAm2C,gBAGrD,YAAA4vB,+BAAA,WACI,IAAK/mF,KAAK8mG,cACN,MAAM,IAAI,IAAoB,IAAwBj3E,uBAGlD,MAAW7vB,KAAK8mG,cAAc/xE,WAAU,OAKhD,MAAO,CAAE6mC,QAHQ16D,OAAOge,KAAKu8C,GACxB9sB,OAAM,YAAG,aAAe,QAAf,EAAI8sB,EAAOvyD,cAAI,WAAE0yD,WAEbH,OAAM,IAG5B,YAAA9oB,aAAA,W,QAC8B,QAA1B,EAAmB,QAAnB7pC,EAAA9I,KAAKmmG,0BAAc,WAAEtmD,iBAAK,aAC1B7/C,KAAKiwB,eACLjwB,KAAKmmG,sBACLnmG,KAAKkmG,sBACLlmG,KAAK8mG,sBAGK,YAAAxwD,cAAd,SAA4BiE,EAAgB/jB,G,gBAAAA,U,mIAGpB,OAFduxD,EAAoB,yCAAKvxD,GAAM,CAAEkzB,SAAkC,WAAxB1pD,KAAKkmG,gBAAuD,aAAxBlmG,KAAKkmG,iBACpFr8C,EAAQ7pD,KAAKgmG,aAAe,IAAoB/3F,oCAClC,GAAMjO,KAAKmnF,6BAA6B19B,aAAalP,EAAQ,yCAAIwtC,GAAiB,CAAEl+B,MAAK,M,OAG7G,OAHQtiC,EAAY,SAA2F,QAC/GvnB,KAAKwnF,SAAWjgE,EAET,CAAP,EAAO,WAsCH,YAAA6+E,oBAAR,SAA4BvqD,EAA8BpG,G,YACtD,GAAIA,KAA2B,QAAjB,EAAKz1C,KAAKiwB,mBAAO,WAAEylB,QAAQqxD,YACrClrD,EAAa5F,cAA4B,QAAf,EAAGj2C,KAAKiwB,mBAAO,WAAEylB,QAAQmF,OAEnD76C,KAAKmmG,eAA6B,QAAf,EAAGnmG,KAAKiwB,mBAAO,WAAE8lB,QAAQ8F,GAErB,QAAvB,EAAI77C,KAAKmmG,0BAAc,MAAEvvD,cAK7B,MAAM,IAAI,IAAoB,WAAU52C,KAAKkmG,gBAAkB,IAAE,2EAGzE,EAtOA,GC9Be,SAASc,EAAqC5pD,EAA4BL,GACrF,IAAMkqD,EAAqB,IAAI,EAA2B7pD,GACpD8pD,EAA8B,IAAI,IAA4BnqD,GAEpE,OAAO,IAAI,EAA+BkqD,EAAoBC,GANlE,mC,2DCIA,WAGI,WACYC,mCAuCf,OApCS,YAAA13E,WAAN,SAAiB4I,G,sIACU,OAAvB,EAAAr4B,KAAuB,GAAMA,KAAKmnG,yBAAyBttD,KAAKxhB,I,cAAhE,EAAK+uE,gBAAkB,S,YAG3B,YAAAz0D,aAAA,WAGI,OAFA3yC,KAAKonG,uBAEE3jG,QAAQR,WAGnB,YAAAspE,WAAA,SAAWX,EAAkBrW,EAAmB2W,GAC5ClsE,KAAKqnG,qBAAqBC,IAAIC,iBAAiB,IAAI37B,EAAY,CAC3D47B,wBAAyBjyC,EACzB2W,aAAY,KAIpB,YAAAj4B,aAAA,SAAapV,EAAqB7d,GAC9B,OAAOhhB,KAAKqnG,qBAAqBC,IAAIG,aAAa5oE,EAAa7d,IAG7D,YAAA6yC,QAAN,W,yGAKI,OAJI7zD,KAAKonG,iBACLpnG,KAAKonG,gBAAgBE,IAAIzzC,UAGtB,CAAP,EAAOpwD,QAAQR,kBAGX,YAAAokG,mBAAR,WACI,IAAKrnG,KAAKonG,gBACN,MAAM,IAAI,IAAoB,IAAwBv3E,uBAG1D,OAAO7vB,KAAKonG,iBAEpB,EA3CA,G,mBCAA,WACI,WACYj5E,EACAC,0BADAD,qBACAC,eAiBf,OAdS,YAAAyrB,KAAN,SAAWj0B,G,4IAOP,OALI,EACAA,EAAM,mBADgB,cAAkB,GAAE,UAApBjd,OAAA,IAAS,OAAI,EAGjC++F,EAAsB,IAA2Br5C,GAEvD,GAAMruD,KAAKmuB,cAAcG,WAAW,kBAAkBo5E,EAAiB,qC,OACvE,GADA,UACK1nG,KAAKouB,QAAQogC,OACd,MAAM,IAAI,IAGd,MAAO,CAAP,EAAOxuD,KAAKouB,QAAQogC,gBAE5B,EApBA,GCFe,SAASm5C,IACpB,OAAO,IAAI,EACP,IAAI,EAAwB,SAAAtqD,gBAAA,KAPpC,mC,6KCcA,WAKI,WACY1L,EACAkB,EACA+0D,EACAC,EACAj+B,EACA8pB,EACA9vE,GANA+tB,cACAkB,mCACA+0D,8BACAC,6BACAj+B,oCACA8pB,iCACA9vE,sBAgNf,OA7MG,YAAA6L,WAAA,SAAWlL,GAGP,OAFAvkB,KAAK44C,UAAYr0B,EAEVvkB,KAAK68E,oBAGhB,YAAAlqC,aAAA,WACI,OAAO3yC,KAAK6nG,sBAAsBpiG,YAGtC,YAAAwuC,aAAA,SACI6H,EACAgsD,EACAC,GAEA,YAHAD,MAAyB,IAAWnxF,gBACpCoxF,MAA2B,IAAYnxF,UAElC5W,KAAKgoG,iBACN,MAAM,IAAI,IAAoB,IAAwBn4E,uBAG1D,OAAO7vB,KAAKgoG,iBAAiB/zD,aAAa,CACtC8zD,YAAW,EACXD,WAAU,EACVhsD,QAAO,KAIf,YAAA3C,cAAA,WACI,IAAKn5C,KAAKgoG,iBACN,MAAM,IAAI,IAAoB,IAAwBn4E,uBAG1D,OAAO7vB,KAAKgoG,iBAAiBC,gBAAgBjoG,KAAKkoG,2BAGtD,YAAA9uD,cAAA,SAAc7f,GAAd,WACI,OAAOv5B,KAAK6nG,sBAAsB9iD,cAAcxrB,GAC3CvV,MAAK,SAAAlb,GAAmB,SAAK2mD,UAAU04C,MACvCnkF,MAAK,WAAM,SAAKokF,sBAAsB7uE,OAG/C,YAAA8f,sBAAA,SAAsB3jB,GAClB,OAAO11B,KAAK2xC,OAAOc,SACfzyC,KAAK0zF,0BAA0B/8D,cAAc32B,KAAKqoG,sCAAsC3yE,MAIxF,YAAAmnD,iBAAR,sBACUt4D,EAAWvkB,KAAK64C,eAEtB,OAAO74C,KAAK2xC,OAAOc,SAASzyC,KAAK6yC,4BAA4BvuB,kBAAkBC,IAC1EP,MAAK,YACF,IAAMqU,EAAgBvD,EAAMwD,eAAeC,iBAAiBhU,GACtDgH,EAAWuJ,EAAMvJ,SAAS4J,cAC1B0vB,IAAuB/vB,EAAMY,gBAAgB+C,qBAEnD,IAAKJ,EACD,MAAM,IAAI,IAAiB,IAAqB1nB,sBAGpD,IAAK4a,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAG5C,MAAamoB,EAAch3B,OAAM,SAEzC,OAAOoC,QAAQysB,IAAI,CACfpnB,EAAK8+F,uBAAuB/tD,OAC5B/wC,EAAK++F,sBAAsBp4E,WAAWlE,EAAU8M,EAAewsB,KAChE7gC,MAAK,SAAC,G,IAACskF,EAAS,KAAEC,EAAkB,KAInC,OAHAz/F,EAAKk/F,iBAAmBl/F,EAAK0/F,oBAAoBF,EAAWl0D,GAC5DtrC,EAAK2/F,oBAAsBF,EAEpBz/F,EAAKk/F,iBAAiBU,aAAa,CACtCjjD,sBAAuB,CACnB,CACI10C,KAAMw3F,EAAmB9iD,sBAAsB,GAAG10C,KAClD20C,WAAY,CACRC,mBAAoB4iD,EAAmB9iD,sBAAsB,GAAGC,WAAWC,mBAC3EC,oBAAqB2iD,EAAmB9iD,sBAAsB,GAAGC,WAAWE,uBAIxFP,WAAYkjD,EAAmBljD,WAC/BC,gBAAiBijD,EAAmBjjD,kBACrCthC,MAAK,YACJ,IAAIrL,EAASpU,OAIb,MAAM,IAAI,cAMtB,YAAAurD,oBAAR,SAA4BJ,GACxB,MAAO,CACH3+C,KAAM2+C,EAAgB1K,SACtBhzB,OAAQ09B,EAAgBzK,WAIxB,YAAAijD,uBAAR,WACI,IAAKloG,KAAKyoG,oBACN,MAAM,IAAI,IAGd,OAAOzoG,KAAKyoG,qBAGR,YAAAD,oBAAR,SAA4BG,EAAsBv0D,GAC9C,YAAIA,EACA,MAAM,IAAI,IAAiB,IAAqBzjC,sBAGpD,IAAMixD,EAA+BxtB,EAAW,OAAS,aAEzD,OAAO,IAAIu0D,EAAOvhF,SAASwhF,IAAIC,eAAe,CAAEjnC,YAAW,KAGvD,YAAA/oB,aAAR,WACI,IAAK74C,KAAK44C,UACN,MAAM,IAAI,IAAoB,IAAwB/oB,uBAG1D,OAAO7vB,KAAK44C,WAGR,YAAAkwD,qCAAR,SAA6CvvE,EAAgCxc,GACzE,IAAMC,EAAYuc,EAAY6tB,kBAAkB/0B,KAAK7L,eAAene,KAAKqpB,MAAM,KAAKhrB,MAAM,GAAI,GAAGmY,KAAK,KAChGzB,EAAYmc,EAAY6tB,kBAAkB/0B,KAAK7L,eAAepJ,SAC9DG,EAAQgc,EAAY6tB,kBAAkB/0B,KAAK7L,eAAe2pC,SAC1DtyC,EAAc0b,EAAY6tB,kBAAkB/0B,KAAK7L,eAAe3I,WAChEE,EAAewb,EAAY6tB,kBAAkB/0B,KAAK7L,eAAezI,YAEvE,KAAKf,GAAcI,GAAaG,GAASM,GAAeE,GACpD,MAAM,IAAI,IAAiB,IAAqB/N,uBAGpD,MAAO,CACH+M,GAAE,EACFC,UAAS,EACTC,SAAUsc,EAAY6tB,kBAAkB/0B,KAAK7L,eAAene,KAAKqpB,MAAM,KAAKhrB,OAAO,GAAGmY,KAAK,KAC3F3B,QAASqc,EAAY6tB,kBAAkB/0B,KAAK7L,eAAeuiF,YAC3D3rF,SAAQ,EACRE,SAAUic,EAAY6tB,kBAAkB/0B,KAAK7L,eAAelJ,SAAWic,EAAY6tB,kBAAkB/0B,KAAK7L,eAAewiF,SACzHzrF,KAAI,EACJE,gBAAiB8b,EAAY6tB,kBAAkB/0B,KAAK7L,eAAeyiF,mBACnEtrF,oBAAqB4b,EAAY6tB,kBAAkB/0B,KAAK7L,eAAeyiF,mBACvEprF,WAAU,EACVE,YAAW,EACXC,MAAOub,EAAY6tB,kBAAkB/0B,KAAK7L,eAAewpC,YACzD/xC,aAAc,GACd4I,MAAO0S,EAAY1S,QAInB,YAAAwhF,sCAAR,SAA8CzrF,GAC1C,MAAO,CACHI,UAAWJ,EAAQvU,KAAKqpB,MAAM,KAAKhrB,MAAM,GAAI,GAAGmY,KAAK,KACrD5B,SAAUL,EAAQvU,KAAKqpB,MAAM,KAAKhrB,OAAO,GAAGmY,KAAK,KACjD3B,QAASN,EAAQmsF,YACjB3rF,SAAUR,EAAQQ,SAClBE,SAAUV,EAAQU,SAAWV,EAAQosF,SACrCzrF,KAAMX,EAAQuzC,SACd1yC,gBAAiBb,EAAQqsF,mBACzBtrF,oBAAqBf,EAAQqsF,mBAC7BprF,WAAYjB,EAAQiB,WACpBE,YAAanB,EAAQmB,YACrBC,MAAOpB,EAAQozC,YACf/xC,aAAc,KAId,YAAAwxC,UAAR,SAAkBy5C,GACd,IAAMx5C,EAAkBw5C,EAAgBlxD,QAExC,OAAOh4C,KAAK4jB,eAAe6T,KAAK,gBAAiB,CAC7Chf,QAAS,CACLgM,OAAQ,YACR,eAAgB,qCAEpBjM,KAAM,CACFg/B,aAAc0xD,EAAgBn4F,KAC9BopB,MAAO+uE,EAAgB/uE,MACvBwJ,SAAU3jC,KAAK64C,eACfl0B,OAAQ,wBACRkrC,iBAAkB7vD,KAAK8vD,oBAAoBJ,OAK/C,YAAA04C,sBAAR,SAA8B7uE,GAC1B,IAAM4vE,EAAuBnpG,KAAK2xC,OAAO5c,WAAWvO,eAAe0R,oBAEnE,IAAKixE,EACD,MAAM,IAAI,IAAiB,IAAqBn5F,uBAGpD,IAAMo5F,EAAyBppG,KAAK8oG,qCAAqCvvE,EAAa4vE,EAAqBpsF,IAE3G,OAAO/c,KAAK2xC,OAAOc,SACfzyC,KAAK4pE,6BAA6BjzC,cAAcyyE,KAG5D,EA5NA,G,UCRA,WACI,WACYj7E,EACAC,0BADAD,qBACAC,eAcf,OAXG,YAAAyrB,KAAA,sBACI,OAAO75C,KAAKmuB,cACPG,WAAW,yCACXtK,MAAK,WACF,IAAKlb,EAAKslB,QAAQu6E,OACd,MAAM,IAAI,IAGd,OAAO7/F,EAAKslB,QAAQu6E,WAGpC,EAjBA,GCQe,SAASU,EAAgCnkF,EAAsBokF,GAC1E,IAAMvsD,EAAgB,SAAAC,oBAAA,GAChBI,EAAe,SAAAC,gBAAA,GAErB,OAAO,IAAI,EACPn4B,EACA,IAAI,IACA,IAAI,IAA2B63B,IAEnC,IAAI,EAAsBK,GAC1BksD,EACA,IAAI,IACA,IAAI,IAA4BvsD,GAChC,IAAI,IACA,IAAI,IAA2BA,KAGvC,IAAI,IACA,IAAI,IAAyBA,GAC7B,IAAI,IAAsBA,IAE9BA,GAnCR,mC,iFCKA,YACI,WAAYpkC,GAAZ,MACI,YAAMA,IAAS,K,OAEf,EAAKtQ,KAAO,2BACZ,EAAK0I,KAAO,uB,EAEnB,OAPqD,yBAOtD,EAPA,C,MAAsD,GCKtD,aACI,WACYw4F,sCAqBf,OAlBG,YAAAtlD,oBAAA,SACIp+C,EACAmb,GAFJ,WAII,OAAO,SAAAzb,OAAA,CACH,OAAAgD,EAAAqc,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAwBqZ,+BACxC,SAAAzI,MAAA,EAAM,kE,4EACe,SAAM30B,KAAKupG,4BAA4BtlD,oBAAoBp+C,EAAemb,I,OAE3F,OAFQxI,EAAS,SAAkF,KAE5F,CAAP,EAAO,SAAAuL,aAAA,CAAa,IAAwBsZ,6BAA8B7kB,eAEhFpV,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAChB,IAAwB0I,0BACxB,IAAI,EAAyBp+B,SAI7C,EAvBA,G,8FCJA,YACI,WAAY8U,GAAZ,MACI,YAAMA,GAAW,6EAA2E,K,OAE5F,EAAK3L,KAAO,+BACZ,EAAK0I,KAAO,8B,EAEnB,OAPyD,yBAO1D,EAPA,C,MAA0D,GCW1D,aACI,WACY6S,EACA4lF,GADA5lF,sBACA4lF,kCAgIf,OA7HG,YAAApO,gBAAA,SACInyC,EACAjoC,GAFJ,WAII,OAAO,YACH,IAAM8T,EAAQ5P,EAAM6P,WACdxJ,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD,IAAMqW,EAAWuO,EAAMvO,SAAS4R,cAEhC,GAAI5R,IAAaA,EAASI,QACtB,MAAM,IAAI,EAGd,IAEI8iF,EAFEjjF,EAAiBsO,EAAMtO,eAAe0R,oBAI5C,GAAK1R,EAEE,CACuDA,EAAc,QAAhE,IAAYkjF,EAAiC,iBAAKljF,EAApD,aAENijF,EAA4B,yCACrBC,GACAzgD,QANPwgD,EAA4BxgD,EAUhC,OAAO,SAAAz0B,MAAA,CACH,SAAAjvB,OAAA,CACI,OAAAgD,EAAAqc,GAAA,CAAG,SAAAb,aAAA,CAAa,IAAyBhR,2BACzC,SAAA4hB,MAAA,EAAM,kE,4EACe,SAAM30B,KAAK2pG,8BACxBp+E,EAASxO,GACT0sF,EACAzoF,I,OAGJ,OANQxI,EAAS,SAIhB,KAEM,CAAP,EAAO,SAAAuL,aAAA,CAAa,IAAyB/Q,yBAA0BwF,eAE7EpV,KACE,SAAAwxB,WAAA,EAAW,YAAS,mBAAiB,IAAyB3hB,sBAAuB/T,OAEzF,EAAK0qG,uBAAuB3gD,EAAajoC,MAKrD,YAAA2V,cAAA,SACI/Z,EACAoE,GAFJ,WAII,OAAO,YAAS,SAAA1e,WAAWrC,QAAO,SAAC6jB,GAC/B,IAAMgR,EAAQ5P,EAAM6P,WACdxJ,EAAWuJ,EAAMvJ,SAAS4J,cAEhC,IAAK5J,EACD,MAAM,IAAI,IAAiB,IAAqBrb,iBAGpD4T,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAyBnR,gCAEpD,IAAM4T,EAAiBsO,EAAMtO,eAAe0R,oBAOtCuxE,EAA4B,yCAC3B7sF,GAAO,CACViK,WAAMA,IAAQjK,EAAQiK,OAAyBL,EAAiBA,EAAeK,MAAQjK,EAAQiK,QAG/FL,GAAkBA,EAAezJ,KACjC0sF,EAA0B1sF,GAAKyJ,EAAezJ,IAGlD,EAAK4sF,8BAA8Bp+E,EAASxO,GAAI0sF,EAA2BzoF,GACtEgD,MAAK,SAAC,G,IAAExL,EAAI,OACTsL,EAAS5jB,KAAK,SAAA6jB,aAAA,CAAa,IAAyBlR,8BAA+B2F,IACnFsL,EAAS3kB,cAEZilB,OAAM,YACHN,EAAS5kB,MAAM,SAAAmlB,kBAAA,CAAkB,IAAyBvR,2BAA4B6F,YAK9F,YAAAixF,uBAAR,SACI,EAKA5oF,G,IAJI6F,EAAK,QACLgjF,EAA0B,6BAC1BC,EAA0B,6BAI9B,OAAI,MAACD,GACD,MAACC,EACM,SAAAnqG,MAAA,GAGJK,KAAKwpG,2BAA2BvlD,oBAAoB,CACvDp9B,MAAK,EACLijF,2BAA4BA,MAC5BD,2BAA4BA,OAC7B7oF,IAGC,YAAA2oF,8BAAR,SACI10E,EACArY,EACAoE,GAEA,OAAKpE,EAAQG,GAIN/c,KAAK4jB,eAAe+S,cAAc1B,EAAYrY,EAASoE,GAHnDhhB,KAAK4jB,eAAeygC,cAAcpvB,EAAYrY,EAASoE,IAK1E,EAnIA,G,+CCbe,SAAS+oF,EAAuBr+E,GAC3C,OCDsClE,EDCbkE,EAAKlE,UAAUkD,cAAcrJ,QAAO,YAAQ,OAACjC,EAAKkD,oBCApE,OAAA3Z,EAAA3C,OAAA,CAAOwhB,GAAW,SAACw/C,EAAO5nD,GAAS,OAAAtW,EAAQsW,EAAKY,WAAU,GADtD,IAA2BwH,EDF1C,6BAAA7gB,S,0FEFA,YAOa,EAAAjB,MAAQ,IAAI,EAAApD,YAAkB,SAAAnC,GAAc,OAAAA,EAAA,cAsDzD,iBAAsB6pG,GACpB,OAAOA,EAGT,SAAwBA,GACtB,OAAO,IAAI,EAAA1nG,YAAkB,SAAAnC,GAAc,OAAA6pG,EAAUC,UAAS,WAAM,OAAA9pG,EAAA,iBAJjD+pG,CAAeF,GAAa,EAAAtkG,Q,8EC5DjD,uBAA4BtF,GAC1B,OAAOA,GAA0C,mBAApBA,EAAO6pG,W,8ECHtC,YACA,SAEA,SAyGA,gBAAwBx2B,EAA2Bu2B,GACjD,OAAKA,EAMI,EAAAG,UAAU12B,EAAOu2B,GALpBv2B,aAAiB,EAAAnxE,WACZmxE,EAEF,IAAI,EAAAnxE,WAAc,EAAAmC,YAAYgvE,M,+GCjHzC,oBAA4BjwE,GAC1B,OAAOA,I,maCDT,IAQA,2B,+CAcA,OAd2C,OACzC,YAAAE,WAAA,SAAWI,EAAeG,EACfF,EAAoBqmG,EACpBC,GACTrqG,KAAKN,YAAYQ,KAAK+D,IAGxB,YAAAN,YAAA,SAAYzE,EAAYmrG,GACtBrqG,KAAKN,YAAYR,MAAMA,IAGzB,YAAA0E,eAAA,SAAeymG,GACbrqG,KAAKN,YAAYP,YAErB,EAdA,CARA,MAQ2CS,YAA9B,EAAA0qG,mB,8ECPb,cAGA,SACA,QAiBA,6BACEC,EACAhmG,EACAT,EACAC,EACAS,GAEA,QAFA,IAAAA,MAAA,IAAqC,EAAAgmG,gBAAgBD,EAAiBzmG,EAAYC,KAE9ES,EAAgB9D,OAGpB,OAAI6D,aAAkB,EAAAjC,WACbiC,EAAOvC,UAAUwC,GAEnB,EAAAC,YAAYF,EAAZ,CAAoBC,K,oHClChB,EAAAnC,WAAsC,mBAAXuG,QAAyBA,OAAOvG,YAAvC,gB,yaCAjC,YAwDA,kBAA0B4xB,EACA3sB,GACxB,OAAO,SAAgC/E,GACrC,OAAOA,EAAOJ,KAAK,IAAIsoG,EAAex2E,EAAW3sB,MAIrD,iBACE,WAAoB2sB,EACA3sB,GADA,KAAA2sB,YACAj0B,KAAAsH,UAMtB,OAHE,YAAA3F,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI0oG,EAAiBvqG,EAAYH,KAAKi0B,UAAWj0B,KAAKsH,WAElF,EARA,GAeA,cAIE,WAAY5H,EACQu0B,EACA3sB,GAFpB,MAGE,YAAM5H,IAAY,K,OAFA,EAAAu0B,YACA,EAAA3sB,UAJpB,EAAAI,MAAgB,E,EAsBlB,OAxBkC,OAYtB,YAAArH,MAAV,SAAgBD,GACd,IAAImE,EACJ,IACEA,EAASvE,KAAKi0B,UAAUtyB,KAAK3B,KAAKsH,QAASlH,EAAOJ,KAAK0H,SACvD,MAAOpH,GAEP,YADAN,KAAKN,YAAYR,MAAMoB,GAGrBiE,GACFvE,KAAKN,YAAYQ,KAAKE,IAG5B,EAxBA,CAAkC,EAAAR,a,8EC3ElC,aA6BA,qBAAgC+qG,EACA14D,GAC9B,OAAO,SAAmC1vC,GACxC,IAAIqoG,EASJ,GAPEA,EADqC,mBAA5BD,EAC0BA,EAElB,WACf,OAAmBA,GAIC,mBAAb14D,EACT,OAAO1vC,EAAOJ,KAAK,IAAI0oG,EAAkBD,EAAgB34D,IAG3D,IAAM64D,EAAmB5pG,OAAOjB,OAAOsC,EAAQ,EAAAwoG,iCAI/C,OAHAD,EAAYvoG,OAASA,EACrBuoG,EAAYF,eAAiBA,EAEKE,IAItC,iBACE,WAAoBF,EACA34D,GADA,KAAA24D,iBACA,KAAA34D,WAStB,OAPE,YAAAtwC,KAAA,SAAKxB,EAA2BoC,GACtB,IAAA0vC,EAAA,KAAAA,SACF3rC,EAAUtG,KAAK4qG,iBACfznG,EAAe8uC,EAAS3rC,GAAStE,UAAU7B,GAEjD,OADAgD,EAAatD,IAAI0C,EAAOP,UAAUsE,IAC3BnD,GAEX,EAXA,GAAa,EAAA0nG,qB,mCCzCTG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,E,oTACJ,SAAW99D,GACP,IAAI+9D,EAAyB,iBAAlB,IAAOC,EAAP,cAAOA,IAAsBA,EAAyB,YAAhB,oBAAOC,KAAP,cAAOA,OAAoBA,KAAuB,WAAhB,EAAOzsG,MAAoBA,KAAO,GAUrH,SAAS0sG,EAAe5kG,EAAS4wD,GAS7B,OARI5wD,IAAYykG,IACiB,mBAAlBrrG,OAAOjB,OACdiB,OAAOsH,eAAeV,EAAS,aAAc,CAAE1H,OAAO,IAGtD0H,EAAQkB,YAAa,GAGtB,SAAU+T,EAAI4vF,GAAK,OAAO7kG,EAAQiV,GAAM27C,EAAWA,EAAS37C,EAAI4vF,GAAKA,QAjBtE,gBAAiC7kG,GAoB9C,IAAU8kG,EACHC,EADGD,EApBuDF,EAAeH,EAAMG,EAAe5kG,IAqB9F+kG,EAAgB3rG,OAAO+S,gBACtB,CAAEC,UAAW,cAAgBlN,OAAS,SAAUoB,EAAGu1B,GAAKv1B,EAAE8L,UAAYypB,IACvE,SAAUv1B,EAAGu1B,GAAK,IAAK,IAAIn0B,KAAKm0B,EAAOA,EAAEp0B,eAAeC,KAAIpB,EAAEoB,GAAKm0B,EAAEn0B,KAEzEwhG,EAAY,SAAU5iG,EAAGu1B,GAErB,SAASmvE,IAAO9sG,KAAK+sG,YAAc3kG,EADnCykG,EAAczkG,EAAGu1B,GAEjBv1B,EAAEkB,UAAkB,OAANq0B,EAAaz8B,OAAOjB,OAAO09B,IAAMmvE,EAAGxjG,UAAYq0B,EAAEr0B,UAAW,IAAIwjG,IAGnF7B,EAAW/pG,OAAO8rG,QAAU,SAAUlkG,GAClC,IAAK,IAAIW,EAAG9C,EAAI,EAAGwC,EAAI3J,UAAUC,OAAQkH,EAAIwC,EAAGxC,IAE5C,IAAK,IAAI6C,KADTC,EAAIjK,UAAUmH,GACOzF,OAAOoI,UAAUC,eAAe5H,KAAK8H,EAAGD,KAAIV,EAAEU,GAAKC,EAAED,IAE9E,OAAOV,GAGXoiG,EAAS,SAAUzhG,EAAGzE,GAClB,IAAI8D,EAAI,GACR,IAAK,IAAIU,KAAKC,EAAOvI,OAAOoI,UAAUC,eAAe5H,KAAK8H,EAAGD,IAAMxE,EAAEY,QAAQ4D,GAAK,IAC9EV,EAAEU,GAAKC,EAAED,IACb,GAAS,MAALC,GAAqD,mBAAjCvI,OAAO+rG,sBACtB,KAAItmG,EAAI,EAAb,IAAgB6C,EAAItI,OAAO+rG,sBAAsBxjG,GAAI9C,EAAI6C,EAAE/J,OAAQkH,IAC3D3B,EAAEY,QAAQ4D,EAAE7C,IAAM,GAAKzF,OAAOoI,UAAU4jG,qBAAqBvrG,KAAK8H,EAAGD,EAAE7C,MACvEmC,EAAEU,EAAE7C,IAAM8C,EAAED,EAAE7C,KAE1B,OAAOmC,GAGXqiG,EAAa,SAAUgC,EAAYjnF,EAAQhd,EAAKkkG,GAC5C,IAA2HhlG,EAAvHD,EAAI3I,UAAUC,OAAQkJ,EAAIR,EAAI,EAAI+d,EAAkB,OAATknF,EAAgBA,EAAOlsG,OAAOmlB,yBAAyBH,EAAQhd,GAAOkkG,EACrH,GAAuB,YAAnB,oBAAOC,QAAP,cAAOA,WAAoD,mBAArBA,QAAQC,SAAyB3kG,EAAI0kG,QAAQC,SAASH,EAAYjnF,EAAQhd,EAAKkkG,QACpH,IAAK,IAAIzmG,EAAIwmG,EAAW1tG,OAAS,EAAGkH,GAAK,EAAGA,KAASyB,EAAI+kG,EAAWxmG,MAAIgC,GAAKR,EAAI,EAAIC,EAAEO,GAAKR,EAAI,EAAIC,EAAE8d,EAAQhd,EAAKP,GAAKP,EAAE8d,EAAQhd,KAASP,GAChJ,OAAOR,EAAI,GAAKQ,GAAKzH,OAAOsH,eAAe0d,EAAQhd,EAAKP,GAAIA,GAGhEyiG,EAAU,SAAUmC,EAAYC,GAC5B,OAAO,SAAUtnF,EAAQhd,GAAOskG,EAAUtnF,EAAQhd,EAAKqkG,KAG3DlC,EAAa,SAAUoC,EAAaC,GAChC,GAAuB,YAAnB,oBAAOL,QAAP,cAAOA,WAAoD,mBAArBA,QAAQ/mC,SAAyB,OAAO+mC,QAAQ/mC,SAASmnC,EAAaC,IAGpHpC,EAAY,SAAUhkG,EAASqmG,EAAYC,EAAGC,GAE1C,OAAO,IAAKD,IAAMA,EAAInqG,WAAU,SAAUR,EAASC,GAC/C,SAAS4qG,EAAU1tG,GAAS,IAAMiqB,EAAKwjF,EAAU3tG,KAAKE,IAAW,MAAO4E,GAAK9B,EAAO8B,IACpF,SAAS+oG,EAAS3tG,GAAS,IAAMiqB,EAAKwjF,EAAS,MAAUztG,IAAW,MAAO4E,GAAK9B,EAAO8B,IACvF,SAASqlB,EAAK9lB,GAJlB,IAAenE,EAIamE,EAAOypG,KAAO/qG,EAAQsB,EAAOnE,QAJ1CA,EAIyDmE,EAAOnE,MAJhDA,aAAiBwtG,EAAIxtG,EAAQ,IAAIwtG,GAAE,SAAU3qG,GAAWA,EAAQ7C,OAIT4jB,KAAK8pF,EAAWC,GAClG1jF,GAAMwjF,EAAYA,EAAUI,MAAM3mG,EAASqmG,GAAc,KAAKztG,YAItEqrG,EAAc,SAAUjkG,EAASkR,GAC7B,IAAsG8vD,EAAG4lC,EAAGplG,EAAGo/D,EAA3G3iD,EAAI,CAAE+kB,MAAO,EAAG6jE,KAAM,WAAa,GAAW,EAAPrlG,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOslG,KAAM,GAAIC,IAAK,IAChG,OAAOnmC,EAAI,CAAEhoE,KAAMouG,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAX1lG,SAA0Bs/D,EAAEt/D,OAAO2lG,UAAY,WAAa,OAAOvuG,OAAUkoE,EACvJ,SAASomC,EAAKnlG,GAAK,OAAO,SAAUwjG,GAAK,OACzC,SAAc6B,GACV,GAAIlmC,EAAG,MAAM,IAAI/gE,UAAU,mCAC3B,KAAOge,GAAG,IACN,GAAI+iD,EAAI,EAAG4lC,IAAMplG,EAAY,EAAR0lG,EAAG,GAASN,EAAC,OAAaM,EAAG,GAAKN,EAAC,SAAeplG,EAAIolG,EAAC,SAAeplG,EAAEnH,KAAKusG,GAAI,GAAKA,EAAEhuG,SAAW4I,EAAIA,EAAEnH,KAAKusG,EAAGM,EAAG,KAAKR,KAAM,OAAOllG,EAE3J,OADIolG,EAAI,EAAGplG,IAAG0lG,EAAK,CAAS,EAARA,EAAG,GAAQ1lG,EAAE1I,QACzBouG,EAAG,IACP,KAAK,EAAG,KAAK,EAAG1lG,EAAI0lG,EAAI,MACxB,KAAK,EAAc,OAAXjpF,EAAE+kB,QAAgB,CAAElqC,MAAOouG,EAAG,GAAIR,MAAM,GAChD,KAAK,EAAGzoF,EAAE+kB,QAAS4jE,EAAIM,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKjpF,EAAE8oF,IAAI9qF,MAAOgC,EAAE6oF,KAAK7qF,MAAO,SACxC,QACI,KAAkBza,GAAZA,EAAIyc,EAAE6oF,MAAY3uG,OAAS,GAAKqJ,EAAEA,EAAErJ,OAAS,MAAkB,IAAV+uG,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEjpF,EAAI,EAAG,SACjG,GAAc,IAAVipF,EAAG,MAAc1lG,GAAM0lG,EAAG,GAAK1lG,EAAE,IAAM0lG,EAAG,GAAK1lG,EAAE,IAAM,CAAEyc,EAAE+kB,MAAQkkE,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYjpF,EAAE+kB,MAAQxhC,EAAE,GAAI,CAAEyc,EAAE+kB,MAAQxhC,EAAE,GAAIA,EAAI0lG,EAAI,MAC7D,GAAI1lG,GAAKyc,EAAE+kB,MAAQxhC,EAAE,GAAI,CAAEyc,EAAE+kB,MAAQxhC,EAAE,GAAIyc,EAAE8oF,IAAI7oG,KAAKgpG,GAAK,MACvD1lG,EAAE,IAAIyc,EAAE8oF,IAAI9qF,MAChBgC,EAAE6oF,KAAK7qF,MAAO,SAEtBirF,EAAKh2F,EAAK7W,KAAK2F,EAASie,GAC1B,MAAOvgB,GAAKwpG,EAAK,CAAC,EAAGxpG,GAAIkpG,EAAI,EAjBrB,QAiBoC5lC,EAAIx/D,EAAI,EACtD,GAAY,EAAR0lG,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEpuG,MAAOouG,EAAG,GAAKA,EAAG,QAAK,EAAQR,MAAM,GArB9B3jF,CAAK,CAAClhB,EAAGwjG,OAyB7DL,EAAkB,SAAS/jG,EAAGL,EAAGkgE,EAAGqmC,QACrB1pG,IAAP0pG,IAAkBA,EAAKrmC,GAC3B7/D,EAAEkmG,GAAMvmG,EAAEkgE,IAGdojC,EAAe,SAAUtjG,EAAGJ,GACxB,IAAK,IAAI0B,KAAKtB,EAAa,YAANsB,GAAoB1B,EAAQyB,eAAeC,KAAI1B,EAAQ0B,GAAKtB,EAAEsB,KAGvFiiG,EAAW,SAAUljG,GACjB,IAAIkB,EAAsB,mBAAXb,QAAyBA,OAAO2lG,SAAUrmG,EAAIuB,GAAKlB,EAAEkB,GAAI9C,EAAI,EAC5E,GAAIuB,EAAG,OAAOA,EAAEvG,KAAK4G,GACrB,GAAIA,GAAyB,iBAAbA,EAAE9I,OAAqB,MAAO,CAC1CS,KAAM,WAEF,OADIqI,GAAK5B,GAAK4B,EAAE9I,SAAQ8I,OAAI,GACrB,CAAEnI,MAAOmI,GAAKA,EAAE5B,KAAMqnG,MAAOzlG,KAG5C,MAAM,IAAIhB,UAAUkC,EAAI,0BAA4B,oCAGxDiiG,EAAS,SAAUnjG,EAAGY,GAClB,IAAIjB,EAAsB,mBAAXU,QAAyBL,EAAEK,OAAO2lG,UACjD,IAAKrmG,EAAG,OAAOK,EACf,IAAmBI,EAAY3D,EAA3B2B,EAAIuB,EAAEvG,KAAK4G,GAAOmmG,EAAK,GAC3B,IACI,WAAc,IAANvlG,GAAgBA,KAAM,MAAQR,EAAIhC,EAAEzG,QAAQ8tG,MAAMU,EAAGlpG,KAAKmD,EAAEvI,OAExE,MAAOlB,GAAS8F,EAAI,CAAE9F,MAAOA,GAH7B,QAKI,IACQyJ,IAAMA,EAAEqlG,OAAS9lG,EAAIvB,EAAC,SAAauB,EAAEvG,KAAKgF,GADlD,QAGU,GAAI3B,EAAG,MAAMA,EAAE9F,OAE7B,OAAOwvG,GAGX/C,EAAW,WACP,IAAK,IAAI+C,EAAK,GAAI/nG,EAAI,EAAGA,EAAInH,UAAUC,OAAQkH,IAC3C+nG,EAAKA,EAAGnpG,OAAOmmG,EAAOlsG,UAAUmH,KACpC,OAAO+nG,GAGX9C,EAAiB,WACb,IAAK,IAAIniG,EAAI,EAAG9C,EAAI,EAAGgoG,EAAKnvG,UAAUC,OAAQkH,EAAIgoG,EAAIhoG,IAAK8C,GAAKjK,UAAUmH,GAAGlH,OACxE,IAAIkJ,EAAI3B,MAAMyC,GAAI2+D,EAAI,EAA3B,IAA8BzhE,EAAI,EAAGA,EAAIgoG,EAAIhoG,IACzC,IAAK,IAAI+2B,EAAIl+B,UAAUmH,GAAIioG,EAAI,EAAGC,EAAKnxE,EAAEj+B,OAAQmvG,EAAIC,EAAID,IAAKxmC,IAC1Dz/D,EAAEy/D,GAAK1qC,EAAEkxE,GACjB,OAAOjmG,GAGXkjG,EAAU,SAAUc,GAChB,OAAO3sG,gBAAgB6rG,GAAW7rG,KAAK2sG,EAAIA,EAAG3sG,MAAQ,IAAI6rG,EAAQc,IAGtEb,EAAmB,SAAUxkG,EAASqmG,EAAYE,GAC9C,IAAKjlG,OAAOkmG,cAAe,MAAM,IAAIvnG,UAAU,wCAC/C,IAAoDZ,EAAhDuhE,EAAI2lC,EAAUI,MAAM3mG,EAASqmG,GAAc,IAAQoB,EAAI,GAC3D,OAAOpoG,EAAI,GAAI2nG,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW3nG,EAAEiC,OAAOkmG,eAAiB,WAAc,OAAO9uG,MAAS2G,EACpH,SAAS2nG,EAAKnlG,GAAS++D,EAAE/+D,KAAIxC,EAAEwC,GAAK,SAAUwjG,GAAK,OAAO,IAAIlpG,SAAQ,SAAUi6B,EAAGC,GAAKoxE,EAAEvpG,KAAK,CAAC2D,EAAGwjG,EAAGjvE,EAAGC,IAAM,GAAKqxE,EAAO7lG,EAAGwjG,QAC9H,SAASqC,EAAO7lG,EAAGwjG,GAAK,KACVhkG,EADqBu/D,EAAE/+D,GAAGwjG,IACnBvsG,iBAAiByrG,EAAUpoG,QAAQR,QAAQ0F,EAAEvI,MAAMusG,GAAG3oF,KAAKirF,EAAS/rG,GAAUgsG,EAAOH,EAAE,GAAG,GAAIpmG,GADpE,MAAO3D,GAAKkqG,EAAOH,EAAE,GAAG,GAAI/pG,GAC3E,IAAc2D,EACd,SAASsmG,EAAQ7uG,GAAS4uG,EAAO,OAAQ5uG,GACzC,SAAS8C,EAAO9C,GAAS4uG,EAAO,QAAS5uG,GACzC,SAAS8uG,EAAO5mC,EAAGqkC,GAASrkC,EAAEqkC,GAAIoC,EAAEI,QAASJ,EAAEtvG,QAAQuvG,EAAOD,EAAE,GAAG,GAAIA,EAAE,GAAG,MAGhFhD,EAAmB,SAAUxjG,GACzB,IAAI5B,EAAG6C,EACP,OAAO7C,EAAI,GAAI2nG,EAAK,QAASA,EAAK,SAAS,SAAUtpG,GAAK,MAAMA,KAAOspG,EAAK,UAAW3nG,EAAEiC,OAAO2lG,UAAY,WAAc,OAAOvuG,MAAS2G,EAC1I,SAAS2nG,EAAKnlG,EAAGm/D,GAAK3hE,EAAEwC,GAAKZ,EAAEY,GAAK,SAAUwjG,GAAK,OAAQnjG,GAAKA,GAAK,CAAEpJ,MAAOyrG,EAAQtjG,EAAEY,GAAGwjG,IAAKqB,KAAY,WAAN7kG,GAAmBm/D,EAAIA,EAAEqkC,GAAKA,GAAOrkC,IAG/I0jC,EAAgB,SAAUzjG,GACtB,IAAKK,OAAOkmG,cAAe,MAAM,IAAIvnG,UAAU,wCAC/C,IAAiCZ,EAA7BuB,EAAIK,EAAEK,OAAOkmG,eACjB,OAAO5mG,EAAIA,EAAEvG,KAAK4G,IAAMA,EAAqCkjG,EAASljG,GAA2B5B,EAAI,GAAI2nG,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW3nG,EAAEiC,OAAOkmG,eAAiB,WAAc,OAAO9uG,MAAS2G,GAC9M,SAAS2nG,EAAKnlG,GAAKxC,EAAEwC,GAAKZ,EAAEY,IAAM,SAAUwjG,GAAK,OAAO,IAAIlpG,SAAQ,SAAUR,EAASC,IACvF,SAAgBD,EAASC,EAAQkF,EAAGukG,GAAKlpG,QAAQR,QAAQ0pG,GAAG3oF,MAAK,SAAS2oF,GAAK1pG,EAAQ,CAAE7C,MAAOusG,EAAGqB,KAAM5lG,MAASlF,GADJgsG,CAAOjsG,EAASC,GAA7BypG,EAAIpkG,EAAEY,GAAGwjG,IAA8BqB,KAAMrB,EAAEvsG,aAIpJ6rG,EAAuB,SAAUmD,EAAQC,GAErC,OADInuG,OAAOsH,eAAkBtH,OAAOsH,eAAe4mG,EAAQ,MAAO,CAAEhvG,MAAOivG,IAAiBD,EAAOC,IAAMA,EAClGD,GAGXlD,EAAe,SAAUoD,GACrB,GAAIA,GAAOA,EAAItmG,WAAY,OAAOsmG,EAClC,IAAI/qG,EAAS,GACb,GAAW,MAAP+qG,EAAa,IAAK,IAAIlnC,KAAKknC,EAASpuG,OAAOqI,eAAe5H,KAAK2tG,EAAKlnC,KAAI7jE,EAAO6jE,GAAKknC,EAAIlnC,IAE5F,OADA7jE,EAAM,QAAc+qG,EACb/qG,GAGX4nG,EAAkB,SAAUmD,GACxB,OAAQA,GAAOA,EAAItmG,WAAcsmG,EAAM,CAAE,QAAWA,IAGxDlD,EAAyB,SAAUmD,EAAUC,GACzC,IAAKA,EAAWC,IAAIF,GAChB,MAAM,IAAIhoG,UAAU,kDAExB,OAAOioG,EAAW9mG,IAAI6mG,IAG1BlD,EAAyB,SAAUkD,EAAUC,EAAYpvG,GACrD,IAAKovG,EAAWC,IAAIF,GAChB,MAAM,IAAIhoG,UAAU,kDAGxB,OADAioG,EAAWzpF,IAAIwpF,EAAUnvG,GAClBA,GAGXwsG,EAAS,YAAa5B,GACtB4B,EAAS,WAAY3B,GACrB2B,EAAS,SAAU1B,GACnB0B,EAAS,aAAczB,GACvByB,EAAS,UAAWxB,GACpBwB,EAAS,aAAcvB,GACvBuB,EAAS,YAAatB,GACtBsB,EAAS,cAAerB,GACxBqB,EAAS,eAAgBpB,GACzBoB,EAAS,kBAAmBN,GAC5BM,EAAS,WAAYnB,GACrBmB,EAAS,SAAUlB,GACnBkB,EAAS,WAAYjB,GACrBiB,EAAS,iBAAkBhB,GAC3BgB,EAAS,UAAWf,GACpBe,EAAS,mBAAoBd,GAC7Bc,EAAS,mBAAoBb,GAC7Ba,EAAS,gBAAiBZ,GAC1BY,EAAS,uBAAwBX,GACjCW,EAAS,eAAgBV,GACzBU,EAAS,kBAAmBT,GAC5BS,EAAS,yBAA0BR,GACnCQ,EAAS,yBAA0BP,IAhPzB,QAAU,CAAC,OAAX,aAHd,K,qDCvBIrB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,E,oTACJ,SAAW99D,GACP,IAAI+9D,EAAyB,iBAAlB,IAAOC,EAAP,cAAOA,IAAsBA,EAAyB,YAAhB,oBAAOC,KAAP,cAAOA,OAAoBA,KAAuB,WAAhB,EAAOzsG,MAAoBA,KAAO,GAUrH,SAAS0sG,EAAe5kG,EAAS4wD,GAS7B,OARI5wD,IAAYykG,IACiB,mBAAlBrrG,OAAOjB,OACdiB,OAAOsH,eAAeV,EAAS,aAAc,CAAE1H,OAAO,IAGtD0H,EAAQkB,YAAa,GAGtB,SAAU+T,EAAI4vF,GAAK,OAAO7kG,EAAQiV,GAAM27C,EAAWA,EAAS37C,EAAI4vF,GAAKA,QAjBtE,gBAAiC7kG,GAoB9C,IAAU8kG,EACHC,EADGD,EApBuDF,EAAeH,EAAMG,EAAe5kG,IAqB9F+kG,EAAgB3rG,OAAO+S,gBACtB,CAAEC,UAAW,cAAgBlN,OAAS,SAAUoB,EAAGu1B,GAAKv1B,EAAE8L,UAAYypB,IACvE,SAAUv1B,EAAGu1B,GAAK,IAAK,IAAIn0B,KAAKm0B,EAAOA,EAAEp0B,eAAeC,KAAIpB,EAAEoB,GAAKm0B,EAAEn0B,KAEzEwhG,EAAY,SAAU5iG,EAAGu1B,GAErB,SAASmvE,IAAO9sG,KAAK+sG,YAAc3kG,EADnCykG,EAAczkG,EAAGu1B,GAEjBv1B,EAAEkB,UAAkB,OAANq0B,EAAaz8B,OAAOjB,OAAO09B,IAAMmvE,EAAGxjG,UAAYq0B,EAAEr0B,UAAW,IAAIwjG,IAGnF7B,EAAW/pG,OAAO8rG,QAAU,SAAUlkG,GAClC,IAAK,IAAIW,EAAG9C,EAAI,EAAGwC,EAAI3J,UAAUC,OAAQkH,EAAIwC,EAAGxC,IAE5C,IAAK,IAAI6C,KADTC,EAAIjK,UAAUmH,GACOzF,OAAOoI,UAAUC,eAAe5H,KAAK8H,EAAGD,KAAIV,EAAEU,GAAKC,EAAED,IAE9E,OAAOV,GAGXoiG,EAAS,SAAUzhG,EAAGzE,GAClB,IAAI8D,EAAI,GACR,IAAK,IAAIU,KAAKC,EAAOvI,OAAOoI,UAAUC,eAAe5H,KAAK8H,EAAGD,IAAMxE,EAAEY,QAAQ4D,GAAK,IAC9EV,EAAEU,GAAKC,EAAED,IACb,GAAS,MAALC,GAAqD,mBAAjCvI,OAAO+rG,sBACtB,KAAItmG,EAAI,EAAb,IAAgB6C,EAAItI,OAAO+rG,sBAAsBxjG,GAAI9C,EAAI6C,EAAE/J,OAAQkH,IAC3D3B,EAAEY,QAAQ4D,EAAE7C,IAAM,GAAKzF,OAAOoI,UAAU4jG,qBAAqBvrG,KAAK8H,EAAGD,EAAE7C,MACvEmC,EAAEU,EAAE7C,IAAM8C,EAAED,EAAE7C,KAE1B,OAAOmC,GAGXqiG,EAAa,SAAUgC,EAAYjnF,EAAQhd,EAAKkkG,GAC5C,IAA2HhlG,EAAvHD,EAAI3I,UAAUC,OAAQkJ,EAAIR,EAAI,EAAI+d,EAAkB,OAATknF,EAAgBA,EAAOlsG,OAAOmlB,yBAAyBH,EAAQhd,GAAOkkG,EACrH,GAAuB,YAAnB,oBAAOC,QAAP,cAAOA,WAAoD,mBAArBA,QAAQC,SAAyB3kG,EAAI0kG,QAAQC,SAASH,EAAYjnF,EAAQhd,EAAKkkG,QACpH,IAAK,IAAIzmG,EAAIwmG,EAAW1tG,OAAS,EAAGkH,GAAK,EAAGA,KAASyB,EAAI+kG,EAAWxmG,MAAIgC,GAAKR,EAAI,EAAIC,EAAEO,GAAKR,EAAI,EAAIC,EAAE8d,EAAQhd,EAAKP,GAAKP,EAAE8d,EAAQhd,KAASP,GAChJ,OAAOR,EAAI,GAAKQ,GAAKzH,OAAOsH,eAAe0d,EAAQhd,EAAKP,GAAIA,GAGhEyiG,EAAU,SAAUmC,EAAYC,GAC5B,OAAO,SAAUtnF,EAAQhd,GAAOskG,EAAUtnF,EAAQhd,EAAKqkG,KAG3DlC,EAAa,SAAUoC,EAAaC,GAChC,GAAuB,YAAnB,oBAAOL,QAAP,cAAOA,WAAoD,mBAArBA,QAAQ/mC,SAAyB,OAAO+mC,QAAQ/mC,SAASmnC,EAAaC,IAGpHpC,EAAY,SAAUhkG,EAASqmG,EAAYC,EAAGC,GAE1C,OAAO,IAAKD,IAAMA,EAAInqG,WAAU,SAAUR,EAASC,GAC/C,SAAS4qG,EAAU1tG,GAAS,IAAMiqB,EAAKwjF,EAAU3tG,KAAKE,IAAW,MAAO4E,GAAK9B,EAAO8B,IACpF,SAAS+oG,EAAS3tG,GAAS,IAAMiqB,EAAKwjF,EAAS,MAAUztG,IAAW,MAAO4E,GAAK9B,EAAO8B,IACvF,SAASqlB,EAAK9lB,GAJlB,IAAenE,EAIamE,EAAOypG,KAAO/qG,EAAQsB,EAAOnE,QAJ1CA,EAIyDmE,EAAOnE,MAJhDA,aAAiBwtG,EAAIxtG,EAAQ,IAAIwtG,GAAE,SAAU3qG,GAAWA,EAAQ7C,OAIT4jB,KAAK8pF,EAAWC,GAClG1jF,GAAMwjF,EAAYA,EAAUI,MAAM3mG,EAASqmG,GAAc,KAAKztG,YAItEqrG,EAAc,SAAUjkG,EAASkR,GAC7B,IAAsG8vD,EAAG4lC,EAAGplG,EAAGo/D,EAA3G3iD,EAAI,CAAE+kB,MAAO,EAAG6jE,KAAM,WAAa,GAAW,EAAPrlG,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,IAAOslG,KAAM,GAAIC,IAAK,IAChG,OAAOnmC,EAAI,CAAEhoE,KAAMouG,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAX1lG,SAA0Bs/D,EAAEt/D,OAAO2lG,UAAY,WAAa,OAAOvuG,OAAUkoE,EACvJ,SAASomC,EAAKnlG,GAAK,OAAO,SAAUwjG,GAAK,OACzC,SAAc6B,GACV,GAAIlmC,EAAG,MAAM,IAAI/gE,UAAU,mCAC3B,KAAOge,GAAG,IACN,GAAI+iD,EAAI,EAAG4lC,IAAMplG,EAAY,EAAR0lG,EAAG,GAASN,EAAC,OAAaM,EAAG,GAAKN,EAAC,SAAeplG,EAAIolG,EAAC,SAAeplG,EAAEnH,KAAKusG,GAAI,GAAKA,EAAEhuG,SAAW4I,EAAIA,EAAEnH,KAAKusG,EAAGM,EAAG,KAAKR,KAAM,OAAOllG,EAE3J,OADIolG,EAAI,EAAGplG,IAAG0lG,EAAK,CAAS,EAARA,EAAG,GAAQ1lG,EAAE1I,QACzBouG,EAAG,IACP,KAAK,EAAG,KAAK,EAAG1lG,EAAI0lG,EAAI,MACxB,KAAK,EAAc,OAAXjpF,EAAE+kB,QAAgB,CAAElqC,MAAOouG,EAAG,GAAIR,MAAM,GAChD,KAAK,EAAGzoF,EAAE+kB,QAAS4jE,EAAIM,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKjpF,EAAE8oF,IAAI9qF,MAAOgC,EAAE6oF,KAAK7qF,MAAO,SACxC,QACI,KAAkBza,GAAZA,EAAIyc,EAAE6oF,MAAY3uG,OAAS,GAAKqJ,EAAEA,EAAErJ,OAAS,MAAkB,IAAV+uG,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEjpF,EAAI,EAAG,SACjG,GAAc,IAAVipF,EAAG,MAAc1lG,GAAM0lG,EAAG,GAAK1lG,EAAE,IAAM0lG,EAAG,GAAK1lG,EAAE,IAAM,CAAEyc,EAAE+kB,MAAQkkE,EAAG,GAAI,MAC9E,GAAc,IAAVA,EAAG,IAAYjpF,EAAE+kB,MAAQxhC,EAAE,GAAI,CAAEyc,EAAE+kB,MAAQxhC,EAAE,GAAIA,EAAI0lG,EAAI,MAC7D,GAAI1lG,GAAKyc,EAAE+kB,MAAQxhC,EAAE,GAAI,CAAEyc,EAAE+kB,MAAQxhC,EAAE,GAAIyc,EAAE8oF,IAAI7oG,KAAKgpG,GAAK,MACvD1lG,EAAE,IAAIyc,EAAE8oF,IAAI9qF,MAChBgC,EAAE6oF,KAAK7qF,MAAO,SAEtBirF,EAAKh2F,EAAK7W,KAAK2F,EAASie,GAC1B,MAAOvgB,GAAKwpG,EAAK,CAAC,EAAGxpG,GAAIkpG,EAAI,EAjBrB,QAiBoC5lC,EAAIx/D,EAAI,EACtD,GAAY,EAAR0lG,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEpuG,MAAOouG,EAAG,GAAKA,EAAG,QAAK,EAAQR,MAAM,GArB9B3jF,CAAK,CAAClhB,EAAGwjG,OAyB7DL,EAAkB,SAAS/jG,EAAGL,EAAGkgE,EAAGqmC,QACrB1pG,IAAP0pG,IAAkBA,EAAKrmC,GAC3B7/D,EAAEkmG,GAAMvmG,EAAEkgE,IAGdojC,EAAe,SAAUtjG,EAAGJ,GACxB,IAAK,IAAI0B,KAAKtB,EAAa,YAANsB,GAAoB1B,EAAQyB,eAAeC,KAAI1B,EAAQ0B,GAAKtB,EAAEsB,KAGvFiiG,EAAW,SAAUljG,GACjB,IAAIkB,EAAsB,mBAAXb,QAAyBA,OAAO2lG,SAAUrmG,EAAIuB,GAAKlB,EAAEkB,GAAI9C,EAAI,EAC5E,GAAIuB,EAAG,OAAOA,EAAEvG,KAAK4G,GACrB,GAAIA,GAAyB,iBAAbA,EAAE9I,OAAqB,MAAO,CAC1CS,KAAM,WAEF,OADIqI,GAAK5B,GAAK4B,EAAE9I,SAAQ8I,OAAI,GACrB,CAAEnI,MAAOmI,GAAKA,EAAE5B,KAAMqnG,MAAOzlG,KAG5C,MAAM,IAAIhB,UAAUkC,EAAI,0BAA4B,oCAGxDiiG,EAAS,SAAUnjG,EAAGY,GAClB,IAAIjB,EAAsB,mBAAXU,QAAyBL,EAAEK,OAAO2lG,UACjD,IAAKrmG,EAAG,OAAOK,EACf,IAAmBI,EAAY3D,EAA3B2B,EAAIuB,EAAEvG,KAAK4G,GAAOmmG,EAAK,GAC3B,IACI,WAAc,IAANvlG,GAAgBA,KAAM,MAAQR,EAAIhC,EAAEzG,QAAQ8tG,MAAMU,EAAGlpG,KAAKmD,EAAEvI,OAExE,MAAOlB,GAAS8F,EAAI,CAAE9F,MAAOA,GAH7B,QAKI,IACQyJ,IAAMA,EAAEqlG,OAAS9lG,EAAIvB,EAAC,SAAauB,EAAEvG,KAAKgF,GADlD,QAGU,GAAI3B,EAAG,MAAMA,EAAE9F,OAE7B,OAAOwvG,GAGX/C,EAAW,WACP,IAAK,IAAI+C,EAAK,GAAI/nG,EAAI,EAAGA,EAAInH,UAAUC,OAAQkH,IAC3C+nG,EAAKA,EAAGnpG,OAAOmmG,EAAOlsG,UAAUmH,KACpC,OAAO+nG,GAGX9C,EAAiB,WACb,IAAK,IAAIniG,EAAI,EAAG9C,EAAI,EAAGgoG,EAAKnvG,UAAUC,OAAQkH,EAAIgoG,EAAIhoG,IAAK8C,GAAKjK,UAAUmH,GAAGlH,OACxE,IAAIkJ,EAAI3B,MAAMyC,GAAI2+D,EAAI,EAA3B,IAA8BzhE,EAAI,EAAGA,EAAIgoG,EAAIhoG,IACzC,IAAK,IAAI+2B,EAAIl+B,UAAUmH,GAAIioG,EAAI,EAAGC,EAAKnxE,EAAEj+B,OAAQmvG,EAAIC,EAAID,IAAKxmC,IAC1Dz/D,EAAEy/D,GAAK1qC,EAAEkxE,GACjB,OAAOjmG,GAGXkjG,EAAU,SAAUc,GAChB,OAAO3sG,gBAAgB6rG,GAAW7rG,KAAK2sG,EAAIA,EAAG3sG,MAAQ,IAAI6rG,EAAQc,IAGtEb,EAAmB,SAAUxkG,EAASqmG,EAAYE,GAC9C,IAAKjlG,OAAOkmG,cAAe,MAAM,IAAIvnG,UAAU,wCAC/C,IAAoDZ,EAAhDuhE,EAAI2lC,EAAUI,MAAM3mG,EAASqmG,GAAc,IAAQoB,EAAI,GAC3D,OAAOpoG,EAAI,GAAI2nG,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW3nG,EAAEiC,OAAOkmG,eAAiB,WAAc,OAAO9uG,MAAS2G,EACpH,SAAS2nG,EAAKnlG,GAAS++D,EAAE/+D,KAAIxC,EAAEwC,GAAK,SAAUwjG,GAAK,OAAO,IAAIlpG,SAAQ,SAAUi6B,EAAGC,GAAKoxE,EAAEvpG,KAAK,CAAC2D,EAAGwjG,EAAGjvE,EAAGC,IAAM,GAAKqxE,EAAO7lG,EAAGwjG,QAC9H,SAASqC,EAAO7lG,EAAGwjG,GAAK,KACVhkG,EADqBu/D,EAAE/+D,GAAGwjG,IACnBvsG,iBAAiByrG,EAAUpoG,QAAQR,QAAQ0F,EAAEvI,MAAMusG,GAAG3oF,KAAKirF,EAAS/rG,GAAUgsG,EAAOH,EAAE,GAAG,GAAIpmG,GADpE,MAAO3D,GAAKkqG,EAAOH,EAAE,GAAG,GAAI/pG,GAC3E,IAAc2D,EACd,SAASsmG,EAAQ7uG,GAAS4uG,EAAO,OAAQ5uG,GACzC,SAAS8C,EAAO9C,GAAS4uG,EAAO,QAAS5uG,GACzC,SAAS8uG,EAAO5mC,EAAGqkC,GAASrkC,EAAEqkC,GAAIoC,EAAEI,QAASJ,EAAEtvG,QAAQuvG,EAAOD,EAAE,GAAG,GAAIA,EAAE,GAAG,MAGhFhD,EAAmB,SAAUxjG,GACzB,IAAI5B,EAAG6C,EACP,OAAO7C,EAAI,GAAI2nG,EAAK,QAASA,EAAK,SAAS,SAAUtpG,GAAK,MAAMA,KAAOspG,EAAK,UAAW3nG,EAAEiC,OAAO2lG,UAAY,WAAc,OAAOvuG,MAAS2G,EAC1I,SAAS2nG,EAAKnlG,EAAGm/D,GAAK3hE,EAAEwC,GAAKZ,EAAEY,GAAK,SAAUwjG,GAAK,OAAQnjG,GAAKA,GAAK,CAAEpJ,MAAOyrG,EAAQtjG,EAAEY,GAAGwjG,IAAKqB,KAAY,WAAN7kG,GAAmBm/D,EAAIA,EAAEqkC,GAAKA,GAAOrkC,IAG/I0jC,EAAgB,SAAUzjG,GACtB,IAAKK,OAAOkmG,cAAe,MAAM,IAAIvnG,UAAU,wCAC/C,IAAiCZ,EAA7BuB,EAAIK,EAAEK,OAAOkmG,eACjB,OAAO5mG,EAAIA,EAAEvG,KAAK4G,IAAMA,EAAqCkjG,EAASljG,GAA2B5B,EAAI,GAAI2nG,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW3nG,EAAEiC,OAAOkmG,eAAiB,WAAc,OAAO9uG,MAAS2G,GAC9M,SAAS2nG,EAAKnlG,GAAKxC,EAAEwC,GAAKZ,EAAEY,IAAM,SAAUwjG,GAAK,OAAO,IAAIlpG,SAAQ,SAAUR,EAASC,IACvF,SAAgBD,EAASC,EAAQkF,EAAGukG,GAAKlpG,QAAQR,QAAQ0pG,GAAG3oF,MAAK,SAAS2oF,GAAK1pG,EAAQ,CAAE7C,MAAOusG,EAAGqB,KAAM5lG,MAASlF,GADJgsG,CAAOjsG,EAASC,GAA7BypG,EAAIpkG,EAAEY,GAAGwjG,IAA8BqB,KAAMrB,EAAEvsG,aAIpJ6rG,EAAuB,SAAUmD,EAAQC,GAErC,OADInuG,OAAOsH,eAAkBtH,OAAOsH,eAAe4mG,EAAQ,MAAO,CAAEhvG,MAAOivG,IAAiBD,EAAOC,IAAMA,EAClGD,GAGXlD,EAAe,SAAUoD,GACrB,GAAIA,GAAOA,EAAItmG,WAAY,OAAOsmG,EAClC,IAAI/qG,EAAS,GACb,GAAW,MAAP+qG,EAAa,IAAK,IAAIlnC,KAAKknC,EAASpuG,OAAOqI,eAAe5H,KAAK2tG,EAAKlnC,KAAI7jE,EAAO6jE,GAAKknC,EAAIlnC,IAE5F,OADA7jE,EAAM,QAAc+qG,EACb/qG,GAGX4nG,EAAkB,SAAUmD,GACxB,OAAQA,GAAOA,EAAItmG,WAAcsmG,EAAM,CAAE,QAAWA,IAGxDlD,EAAyB,SAAUmD,EAAUC,GACzC,IAAKA,EAAWC,IAAIF,GAChB,MAAM,IAAIhoG,UAAU,kDAExB,OAAOioG,EAAW9mG,IAAI6mG,IAG1BlD,EAAyB,SAAUkD,EAAUC,EAAYpvG,GACrD,IAAKovG,EAAWC,IAAIF,GAChB,MAAM,IAAIhoG,UAAU,kDAGxB,OADAioG,EAAWzpF,IAAIwpF,EAAUnvG,GAClBA,GAGXwsG,EAAS,YAAa5B,GACtB4B,EAAS,WAAY3B,GACrB2B,EAAS,SAAU1B,GACnB0B,EAAS,aAAczB,GACvByB,EAAS,UAAWxB,GACpBwB,EAAS,aAAcvB,GACvBuB,EAAS,YAAatB,GACtBsB,EAAS,cAAerB,GACxBqB,EAAS,eAAgBpB,GACzBoB,EAAS,kBAAmBN,GAC5BM,EAAS,WAAYnB,GACrBmB,EAAS,SAAUlB,GACnBkB,EAAS,WAAYjB,GACrBiB,EAAS,iBAAkBhB,GAC3BgB,EAAS,UAAWf,GACpBe,EAAS,mBAAoBd,GAC7Bc,EAAS,mBAAoBb,GAC7Ba,EAAS,gBAAiBZ,GAC1BY,EAAS,uBAAwBX,GACjCW,EAAS,eAAgBV,GACzBU,EAAS,kBAAmBT,GAC5BS,EAAS,yBAA0BR,GACnCQ,EAAS,yBAA0BP,IAhPzB,QAAU,CAAC,OAAX,aAHd,K,+JCvCA,sBAA2B7oG,GACzB,MAAoB,mBAANA,I,+aCDhB,IAUA,cAOE,WAAsBwmG,EACA0F,GADtB,MAEE,YAAM1F,EAAW0F,IAAK,K,OAFF,EAAA1F,YACA,EAAA0F,OAHZ,EAAAtkB,SAAmB,E,EA4I/B,OAjJoC,OAY3B,YAAA6e,SAAP,SAAgBn1E,EAAW29B,GAEzB,QAFyB,IAAAA,MAAA,GAErBzyD,KAAKU,OACP,OAAOV,KAITA,KAAK80B,MAAQA,EAEb,IAAM/X,EAAK/c,KAAK+c,GACVitF,EAAYhqG,KAAKgqG,UAmCvB,OAZU,MAANjtF,IACF/c,KAAK+c,GAAK/c,KAAK2vG,eAAe3F,EAAWjtF,EAAI01C,IAK/CzyD,KAAKorF,SAAU,EAEfprF,KAAKyyD,MAAQA,EAEbzyD,KAAK+c,GAAK/c,KAAK+c,IAAM/c,KAAK4vG,eAAe5F,EAAWhqG,KAAK+c,GAAI01C,GAEtDzyD,MAGC,YAAA4vG,eAAV,SAAyB5F,EAA2BjtF,EAAU01C,GAC5D,YAD4D,IAAAA,MAAA,GACrDo9C,YAAY7F,EAAU8F,MAAM3uG,KAAK6oG,EAAWhqG,MAAOyyD,IAGlD,YAAAk9C,eAAV,SAAyB3F,EAA2BjtF,EAAS01C,GAE3D,QAF2D,IAAAA,MAAA,GAE7C,OAAVA,GAAkBzyD,KAAKyyD,QAAUA,IAA0B,IAAjBzyD,KAAKorF,QACjD,OAAOruE,EAITgzF,cAAchzF,IAQT,YAAAy0C,QAAP,SAAe18B,EAAU29B,GAEvB,GAAIzyD,KAAKU,OACP,OAAO,IAAIoB,MAAM,gCAGnB9B,KAAKorF,SAAU,EACf,IAAMlsF,EAAQc,KAAKgwG,SAASl7E,EAAO29B,GACnC,GAAIvzD,EACF,OAAOA,GACmB,IAAjBc,KAAKorF,SAAgC,MAAXprF,KAAK+c,KAcxC/c,KAAK+c,GAAK/c,KAAK2vG,eAAe3vG,KAAKgqG,UAAWhqG,KAAK+c,GAAI,QAIjD,YAAAizF,SAAV,SAAmBl7E,EAAU29B,GAC3B,IAAIw9C,GAAmB,EACnBC,OAAkBnrG,EACtB,IACE/E,KAAK0vG,KAAK56E,GACV,MAAO9vB,GACPirG,GAAU,EACVC,IAAelrG,GAAKA,GAAK,IAAIlD,MAAMkD,GAErC,GAAIirG,EAEF,OADAjwG,KAAKS,cACEyvG,GAKX,YAAAnuG,aAAA,WAEE,IAAMgb,EAAK/c,KAAK+c,GACVitF,EAAYhqG,KAAKgqG,UACjB9uD,EAAU8uD,EAAU9uD,QACpBp2C,EAAQo2C,EAAQt1C,QAAQ5F,MAE9BA,KAAK0vG,KAAQ,KACb1vG,KAAK80B,MAAQ,KACb90B,KAAKorF,SAAU,EACfprF,KAAKgqG,UAAY,MAEF,IAAXllG,GACFo2C,EAAQn1C,OAAOjB,EAAO,GAGd,MAANiY,IACF/c,KAAK+c,GAAK/c,KAAK2vG,eAAe3F,EAAWjtF,EAAI,OAG/C/c,KAAKyyD,MAAQ,MAEjB,EAjJA,CAVA,QAUoC09C,QAAvB,EAAAhpG,e,maCVb,aAMA,cAmBE,WAAYipG,EACApwD,QAAA,IAAAA,MAAoB,EAAAqwD,UAAUrwD,KAD1C,MAEE,YAAMowD,GAAiB,WACrB,OAAIlpG,EAAeopG,UAAYppG,EAAeopG,WAAa,EAClDppG,EAAeopG,SAAStwD,MAExBA,QAET,K,OAzBG,EAAA9E,QAAmC,GAOnC,EAAAq1D,QAAkB,EAQlB,EAAApG,eAAiBplG,E,EAgD1B,OAjEoC,OA8B3B,YAAAklG,SAAP,SAAmByF,EAAqDj9C,EAAmB39B,GACzF,YADsE,IAAA29B,MAAA,GAClEvrD,EAAeopG,UAAYppG,EAAeopG,WAAatwG,KAClDkH,EAAeopG,SAASrG,SAASyF,EAAMj9C,EAAO39B,GAE9C,YAAMm1E,SAAQ,UAACyF,EAAMj9C,EAAO39B,IAIhC,YAAAg7E,MAAP,SAAanrF,GAEJ,IAAAu2B,EAAA,KAAAA,QAEP,GAAIl7C,KAAKuwG,OACPr1D,EAAQ11C,KAAKmf,OADf,CAKA,IAAIzlB,EACJc,KAAKuwG,QAAS,EAEd,GACE,GAAIrxG,EAAQylB,EAAO6sC,QAAQ7sC,EAAOmQ,MAAOnQ,EAAO8tC,OAC9C,YAEK9tC,EAASu2B,EAAQi0D,SAI1B,GAFAnvG,KAAKuwG,QAAS,EAEVrxG,EAAO,CACT,KAAOylB,EAASu2B,EAAQi0D,SACtBxqF,EAAOlkB,cAET,MAAMvB,KAGZ,EAjEA,CAAoC,EAAAmxG,WAAvB,EAAAnpG,kB,8ECNb,YAEA,SACA,SAEA,qBAA6BusE,EAAqBu2B,GAChD,OAAKA,EAGI,EAAAwG,cAAc/8B,EAAOu2B,GAFrB,IAAI,EAAA1nG,WAAc,EAAAmuG,iBAAiBh9B,M,oFCA9C,IAAMi9B,EAA+B,WACnC,SAASA,IAIP,OAHA5uG,MAAMH,KAAK3B,MACXA,KAAKgU,QAAU,wBACfhU,KAAKqI,KAAO,0BACLrI,KAKT,OAFA0wG,EAA4BpnG,UAAYpI,OAAOjB,OAAO6B,MAAMwH,WAErDonG,EAV4B,GAuBxB,EAAAC,wBAAuDD,G,oFCvBpE,IAAME,EAAkB,WACtB,SAASA,IAIP,OAHA9uG,MAAMH,KAAK3B,MACXA,KAAKgU,QAAU,0BACfhU,KAAKqI,KAAO,aACLrI,KAKT,OAFA4wG,EAAetnG,UAAYpI,OAAOjB,OAAO6B,MAAMwH,WAExCsnG,EAVe,GAuBX,EAAAC,WAA6BD,G,6BC9B1C,SAAgBE,IACd,MAAsB,mBAAXloG,QAA0BA,OAAO2lG,SAIrC3lG,OAAO2lG,SAHL,a,sFAFX,sBAQa,EAAAA,SAAWuC,IAKX,EAAAC,WAAa,EAAAxC,U,maCX1B,YA4CA,0BAAqCyC,GACnC,YADmC,IAAAA,MAAA,MAC5B,SAACzuG,GAA0B,OAAAA,EAAOJ,KAAK,IAAI8uG,EAAhB,MAGpC,iBAEE,WAAoBD,GAAA,KAAAA,eAMtB,OAHE,YAAArvG,KAAA,SAAKxB,EAA+BoC,GAClC,OAAOA,EAAOP,UAAU,IAAIkvG,EAAyB/wG,EAAYH,KAAKgxG,gBAE1E,EARA,GAeA,cAGE,WAAYtxG,EAAwCsxG,GAApD,MACE,YAAMtxG,IAAY,K,OADgC,EAAAsxG,eAF5C,EAAAp+B,SAAmB,E,EAiB7B,OAlB6C,OAOjC,YAAAvyE,MAAV,SAAgBD,GACdJ,KAAK4yE,SAAU,EACf5yE,KAAKN,YAAYQ,KAAKE,IAGd,YAAAI,UAAV,WACMR,KAAK4yE,SACP5yE,KAAKN,YAAYQ,KAAKF,KAAKgxG,cAE7BhxG,KAAKN,YAAYP,YAErB,EAlBA,CAA6C,EAAAS,a,8HCjE7C,IAAIuxG,GAAsD,EAM7C,EAAA9vG,OAAS,CAKpBoC,aAASsB,EAUT,0CAA0C3E,GACxC,GAAIA,EAAO,CACT,IAAMlB,EAAQ,IAAI4C,MAClBc,QAAQC,KAAK,gGAAkG3D,EAAMkV,YAC5G+8F,GACTvuG,QAAQypD,IAAI,wDAEd8kD,EAAsD/wG,GAGxD,4CACE,OAAO+wG,K,oFCzBX,IAAMC,EAA+B,WACnC,SAASA,IAIP,OAHAtvG,MAAMH,KAAK3B,MACXA,KAAKgU,QAAU,sBACfhU,KAAKqI,KAAO,0BACLrI,KAKT,OAFAoxG,EAA4B9nG,UAAYpI,OAAOjB,OAAO6B,MAAMwH,WAErD8nG,EAV4B,GAsBxB,EAAA5qG,wBAAuD4qG,G,8EC3BpE,aACA,SACA,UAOA,SAAYC,GACV,WACA,YACA,eAHF,CAAY,EAAAA,mBAAA,EAAAA,iBAAgB,KAoB5B,iBAGE,WAAmBC,EAA8BlxG,EAAkBlB,GAAhD,KAAAoyG,OAA8B,KAAAlxG,QAAkB,KAAAlB,QACjEc,KAAKuxG,SAAoB,MAATD,EAgHpB,OAxGE,YAAAx+C,QAAA,SAAQhvC,GACN,OAAQ9jB,KAAKsxG,MACX,IAAK,IACH,OAAOxtF,EAAS5jB,MAAQ4jB,EAAS5jB,KAAKF,KAAKI,OAC7C,IAAK,IACH,OAAO0jB,EAAS5kB,OAAS4kB,EAAS5kB,MAAMc,KAAKd,OAC/C,IAAK,IACH,OAAO4kB,EAAS3kB,UAAY2kB,EAAS3kB,aAY3C,YAAAqyG,GAAA,SAAGtxG,EAA0BhB,EAA4BC,GAEvD,OADaa,KAAKsxG,MAEhB,IAAK,IACH,OAAOpxG,GAAQA,EAAKF,KAAKI,OAC3B,IAAK,IACH,OAAOlB,GAASA,EAAMc,KAAKd,OAC7B,IAAK,IACH,OAAOC,GAAYA,MAazB,YAAAsyG,OAAA,SAAOC,EAA2DxyG,EAA4BC,GAC5F,OAAIuyG,GAAuE,mBAAzBA,EAAgBxxG,KACzDF,KAAK8yD,QAA4B4+C,GAEjC1xG,KAAKwxG,GAAuBE,EAAgBxyG,EAAOC,IAS9D,YAAAwyG,aAAA,WAEE,OADa3xG,KAAKsxG,MAEhB,IAAK,IACH,OAAO,EAAA1sF,GAAG5kB,KAAKI,OACjB,IAAK,IACH,OAAO,EAAAykB,WAAW7kB,KAAKd,OACzB,IAAK,IACH,OAAO,EAAAS,QAEX,MAAM,IAAImC,MAAM,uCAcX,EAAA8vG,WAAP,SAAqBxxG,GACnB,YAAqB,IAAVA,EACF,IAAIyxG,EAAa,IAAKzxG,GAExByxG,EAAaC,4BAWf,EAAAh2E,YAAP,SAAsBx7B,GACpB,OAAO,IAAIuxG,EAAa,SAAK9sG,EAAWzE,IAQnC,EAAAyxG,eAAP,WACE,OAAOF,EAAaG,sBApCP,EAAAA,qBAA0C,IAAIH,EAAa,KAC3D,EAAAC,2BAAgD,IAAID,EAAa,SAAK9sG,GAqCvF,EApHA,GAAa,EAAA8sG,gB,8EC9Bb,aACA,SAEA,SAiGA,gB,IAAsB,sDACpB,IAAI7H,EAAY1mF,EAAKA,EAAK7jB,OAAS,GACnC,OAAI,EAAAwyG,YAAYjI,IACd1mF,EAAKC,MACE,EAAAitF,cAAcltF,EAAa0mF,IAE3B,EAAAkI,UAAU5uF,K,maC3GrB,YAEA,QAQA,yE,OACU,EAAAljB,MAAW,KACX,EAAA+xG,SAAmB,EACnB,EAAAC,cAAwB,E,EAmClC,OAtCqC,OAMnC,YAAAlwG,WAAA,SAAW/B,GACT,OAAIH,KAAKoG,UACPjG,EAAWjB,MAAMc,KAAKqG,aACf,EAAAxF,aAAa6E,OACX1F,KAAKoyG,cAAgBpyG,KAAKmyG,SACnChyG,EAAWD,KAAKF,KAAKI,OACrBD,EAAWhB,WACJ,EAAA0B,aAAa6E,OAEf,YAAMxD,WAAU,UAAC/B,IAG1B,YAAAD,KAAA,SAAKE,GACEJ,KAAKoyG,eACRpyG,KAAKI,MAAQA,EACbJ,KAAKmyG,SAAU,IAInB,YAAAjzG,MAAA,SAAMA,GACCc,KAAKoyG,cACR,YAAMlzG,MAAK,UAACA,IAIhB,YAAAC,SAAA,WACEa,KAAKoyG,cAAe,EAChBpyG,KAAKmyG,SACP,YAAMjyG,KAAI,UAACF,KAAKI,OAElB,YAAMjB,SAAQ,YAElB,EAtCA,CAAqC,EAAA2H,SAAxB,EAAAurG,gB,8ECTb,aACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SAIa,EAAA5tG,YAAc,SAAIF,GAC7B,GAAMA,GAA+C,mBAA9BA,EAAO,cAC5B,OAAO,EAAA+tG,sBAAsB/tG,GACxB,GAAI,EAAAguG,YAAYhuG,GACrB,OAAO,EAAAksG,iBAAiBlsG,GACnB,GAAI,EAAAiuG,UAAUjuG,GACnB,OAAO,EAAAkuG,mBAAmBluG,GACrB,GAAMA,GAA6C,mBAA5BA,EAAO,YACnC,OAAO,EAAAmuG,oBAAoBnuG,GAE3B,IAAMnE,EAAQ,EAAAkF,SAASf,GAAU,oBAAsB,IAAIA,EAAM,IAGjE,MAAM,IAAIgD,UAFE,gBAAgBnH,EAAK,+F,oFCrBrC,aAEA,SA2IA,oB,IAA0D,sDACxD,OAAO,EAAAuyG,WAAA,CAAe,EAAA/tF,GAAE,aAAIguF,M,6bC5I9B,YACA,SACA,QAgEA,SAAgBC,EACdxrG,EACAyrG,EACAC,GAEA,YAFA,IAAAA,MAAqB3yD,OAAO4yD,mBAEE,mBAAnBF,EAEF,SAACvwG,GAA0B,OAAAA,EAAOa,KACvCyvG,GAAS,SAACn1E,EAAG/2B,GAAM,SAAAqe,KAAK3d,EAAQq2B,EAAG/2B,IAAIvD,KACrC,EAAA+b,KAAI,SAACwe,EAAQs1E,GAAe,OAAAH,EAAep1E,EAAGC,EAAGh3B,EAArB,SAFE,MAKC,iBAAnBmsG,IAChBC,EAAaD,GAER,SAACvwG,GAA0B,OAAAA,EAAOJ,KAAK,IAAI+wG,EAAiB7rG,EAAjC,MAfpC,aAkBA,iBACE,WAAoBA,EACA0rG,QAAA,IAAAA,MAAqB3yD,OAAO4yD,mBAD5B,KAAA3rG,UACA,KAAA0rG,aAQtB,OALE,YAAApxG,KAAA,SAAKmiB,EAAyBvhB,GAC5B,OAAOA,EAAOP,UAAU,IAAImxG,EAC1BrvF,EAAU9jB,KAAKqH,QAASrH,KAAK+yG,cAGnC,EAVA,GAAa,EAAAG,mBAiBb,kBAME,WAAYxzG,EACQ2H,EACA0rG,QAAA,IAAAA,MAAqB3yD,OAAO4yD,mBAFhD,MAGE,YAAMtzG,IAAY,K,OAFA,EAAA2H,UACA,EAAA0rG,aAPZ,EAAAX,cAAwB,EACxB,EAAAgB,OAAc,GACd,EAAA7C,OAAiB,EACf,EAAAzrG,MAAgB,E,EA+D5B,OAnE8C,OAYlC,YAAAzE,MAAV,SAAgBD,GACVJ,KAAKuwG,OAASvwG,KAAK+yG,WACrB/yG,KAAKqzG,SAASjzG,GAEdJ,KAAKozG,OAAO5tG,KAAKpF,IAIX,YAAAizG,SAAV,SAAmBjzG,GACjB,IAAImE,EACEO,EAAQ9E,KAAK8E,QACnB,IACEP,EAASvE,KAAKqH,QAAQjH,EAAO0E,GAC7B,MAAOxE,GAEP,YADAN,KAAKN,YAAYR,MAAOoB,GAG1BN,KAAKuwG,SACLvwG,KAAKqE,UAAUE,IAGT,YAAAF,UAAR,SAAkBivG,GAChB,IAAM9uG,EAAkB,IAAI,EAAAX,sBAAsB7D,MAC5CN,EAAcM,KAAKN,YACzBA,EAAYG,IAAI2E,GAChB,IAAM+uG,EAAoB,EAAAC,eAAeF,EAAK9uG,GAI1C+uG,IAAsB/uG,GACxB9E,EAAYG,IAAI0zG,IAIV,YAAA/yG,UAAV,WACER,KAAKoyG,cAAe,EACA,IAAhBpyG,KAAKuwG,QAAuC,IAAvBvwG,KAAKozG,OAAO3zG,QACnCO,KAAKN,YAAYP,WAEnBa,KAAKS,eAGP,YAAAiD,WAAA,SAAWO,GACTjE,KAAKN,YAAYQ,KAAM+D,IAGzB,YAAAL,eAAA,WACE,IAAMwvG,EAASpzG,KAAKozG,OACpBpzG,KAAKuwG,SACD6C,EAAO3zG,OAAS,EAClBO,KAAKK,MAAM+yG,EAAOjE,SACO,IAAhBnvG,KAAKuwG,QAAgBvwG,KAAKoyG,cACnCpyG,KAAKN,YAAYP,YAGvB,EAnEA,CAA8C,EAAA+E,uBAAjC,EAAAivG,qBAwEA,EAAAzpE,QAAUmpE,G,qFClLvB,YAEA,qBAA0Bhd,GAKxB,OAAQ,EAAA1wF,QAAQ0wF,IAASA,EAAM4d,WAAW5d,GAAO,GAAM,I,maCPzD,aAGA,QAiCA,wBAAiC1yD,GAC/B,YAD+B,IAAAA,MAAA,GACxB,SAAC5gC,GACN,OAAOA,EAAOJ,KAAK,IAAIuxG,EAAqBvwE,MAIhD,iBACE,WAAoBA,GAAA,KAAAA,eAMtB,OAHE,YAAAxhC,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI2xG,EAAuBxzG,EAAYH,KAAKmjC,gBAExE,EAPA,GASA,cAGE,WAAYzjC,EAAoCyjC,GAAhD,MACE,YAAMzjC,IAAY,K,OAD4B,EAAAyjC,eAFxC,EAAAouE,UAAoB,E,EAwB9B,OAzBwC,OAO5B,YAAAlxG,MAAV,SAAgBD,GACdJ,KAAKuxG,UAAW,EAChBvxG,KAAKN,YAAYQ,KAAKE,IAGd,YAAAI,UAAV,WACE,GAAKR,KAAKuxG,SASN,OAAOvxG,KAAKN,YAAYP,WAR1B,IAAImB,OAAG,EACP,IACEA,EAAMN,KAAKmjC,eACX,MAAOn+B,GACP1E,EAAM0E,EAERhF,KAAKN,YAAYR,MAAMoB,IAK7B,EAzBA,CAAwC,EAAAV,YA2BxC,SAASg0G,IACP,OAAO,IAAI,EAAA/C,a,oFC9Eb,aACA,SACA,SAEA,SA2DA,kBAA6BgD,EAA8DC,GAMzF,OAAIt0G,UAAUC,QAAU,EACf,SAAwC8C,GAC7C,OAAO,EAAAa,KAAK,EAAA2wG,KAAKF,EAAaC,GAAO,EAAAE,SAAS,GAAI,EAAAC,eAAeH,GAA1D,CAAiEvxG,IAGrE,SAAgCA,GACrC,OAAO,EAAAa,KACL,EAAA2wG,MAAe,SAACG,EAAK9zG,EAAO0E,GAAU,OAAA+uG,EAAYK,EAAK9zG,EAAO0E,EAAxB,MACtC,EAAAkvG,SAAS,GAFJ,CAGLzxG,M,qJC/EN,YASA,0BAA+BuhB,GAC7B,KAAOA,GAAU,CACT,QAAE,IAAApjB,OAAQhB,EAAA,EAAAA,YAAaH,EAAA,EAAAA,UAC7B,GAAI,GAAUA,EACZ,OAAO,EAEPukB,EADSpkB,GAAeA,aAAuB,EAAAE,WACpCF,EAEA,KAGf,OAAO,I,8ECfT,2BAAgCY,GAC9BqgD,YAAW,WAAQ,MAAMrgD,IAAQ,K,wVCNnC,oBAAyBkD,GACvB,OAAa,OAANA,GAA2B,WAAb,EAAOA,K,8FCAjB,EAAAzD,aACO,mBAAX6I,OACHA,OAAO,gBACP,kBAAoBoa,KAAKmxF,SAKlB,EAAAC,eAAiB,EAAAr0G,c,oFCR9B,aAsBA,SAAgBuD,EAAoB+wG,GAClC,OAAmB,IAAfA,EAAI50G,OACC,EAAAilC,SAGU,IAAf2vE,EAAI50G,OACC40G,EAAI,GAGN,SAAe5gC,GACpB,OAAO4gC,EAAIruG,QAAO,SAACsuG,EAAW1yG,GAA4B,OAAAA,EAAA,KAAU6xE,IAfxE,kB,IAAqB,sDACnB,OAAOnwE,EAAc+wG,IAIvB,mB,maCtBA,YA2DA,sBACE,OAAO,SAAkC9xG,GACvC,OAAOA,EAAOJ,KAAK,IAAIoyG,EAAiBhyG,MAI5C,iBACE,WAAoBuoG,GAAA,KAAAA,cAgBtB,OAdE,YAAAnpG,KAAA,SAAKxB,EAA2BoC,GAEtB,IAAAuoG,EAAA,KAAAA,YACDA,EAAa0J,YAEpB,IAAMC,EAAa,IAAIC,EAAmBv0G,EAAY2qG,GAChD3nG,EAAeZ,EAAOP,UAAUyyG,GAMtC,OAJKA,EAAW/zG,SACP+zG,EAAYE,WAAa7J,EAAY8J,WAGvCzxG,GAEX,EAjBA,GAmBA,cAIE,WAAYzD,EACQorG,GADpB,MAEE,YAAMprG,IAAY,K,OADA,EAAAorG,c,EAyDtB,OA9DoC,OASxB,YAAA/oG,aAAV,WAEU,IAAA+oG,EAAA,KAAAA,YACR,GAAKA,EAAL,CAKA9qG,KAAK8qG,YAAc,KACnB,IAAM+J,EAAkB/J,EAAa0J,UACrC,GAAIK,GAAY,EACd70G,KAAK20G,WAAa,UAKpB,GADO7J,EAAa0J,UAAYK,EAAW,EACvCA,EAAW,EACb70G,KAAK20G,WAAa,SADpB,CA6BQ,IAAAA,EAAA,KAAAA,WACFG,EAA0BhK,EAAaiK,YAC7C/0G,KAAK20G,WAAa,MAEdG,GAAsBH,GAAcG,IAAqBH,GAC3DG,EAAiBr0G,oBA9CjBT,KAAK20G,WAAa,MAiDxB,EA9DA,CAAoC,EAAA/0G,a,+aCrFpC,YAEA,SAEA,QACA,SACA,SACA,SAQA,cAME,WAAYo1G,EACAC,EACQjL,QAFR,IAAAgL,MAAqB50D,OAAO4yD,wBAC5B,IAAAiC,MAAqB70D,OAAO4yD,mBADxC,MAGE,cAAO,K,OADW,EAAAhJ,YAPZ,EAAAkL,QAAkC,GAGlC,EAAAC,qBAA+B,EAMrC,EAAKC,YAAcJ,EAAa,EAAI,EAAIA,EACxC,EAAKK,YAAcJ,EAAa,EAAI,EAAIA,EAEpCA,IAAe70D,OAAO4yD,mBACxB,EAAKmC,qBAAsB,EAC3B,EAAKj1G,KAAO,EAAKo1G,wBAEjB,EAAKp1G,KAAO,EAAKq1G,e,EAoGvB,OArHsC,OAqB5B,YAAAD,uBAAR,SAA+Bl1G,GAC7B,IAAKJ,KAAKT,UAAW,CACnB,IAAM21G,EAAUl1G,KAAKk1G,QACrBA,EAAQ1vG,KAAKpF,GAGT80G,EAAQz1G,OAASO,KAAKo1G,aACxBF,EAAQ/F,QAGZ,YAAMjvG,KAAI,UAACE,IAGL,YAAAm1G,eAAR,SAAuBn1G,GAChBJ,KAAKT,YACRS,KAAKk1G,QAAQ1vG,KAAK,IAAIgwG,EAAYx1G,KAAKy1G,UAAWr1G,IAClDJ,KAAK01G,4BAEP,YAAMx1G,KAAI,UAACE,IAIb,YAAA8B,WAAA,SAAW/B,GAET,IAIIgD,EAJEgyG,EAAsBn1G,KAAKm1G,oBAC3BD,EAAUC,EAAsBn1G,KAAKk1G,QAAUl1G,KAAK01G,2BACpD1L,EAAYhqG,KAAKgqG,UACjB5kG,EAAM8vG,EAAQz1G,OAGpB,GAAIO,KAAKU,OACP,MAAM,IAAI,EAAA8F,wBAYZ,GAXWxG,KAAKT,WAAaS,KAAKoG,SAChCjD,EAAe,EAAAtC,aAAa6E,OAE5B1F,KAAKmG,UAAUX,KAAKrF,GACpBgD,EAAe,IAAI,EAAAyD,oBAAoB5G,KAAMG,IAG3C6pG,GACF7pG,EAAWN,IAAIM,EAAa,IAAI,EAAAw1G,oBAAuBx1G,EAAY6pG,IAGjEmL,EACF,IAAK,IAAIxuG,EAAI,EAAGA,EAAIvB,IAAQjF,EAAWO,OAAQiG,IAC7CxG,EAAWD,KAAQg1G,EAAQvuG,SAG7B,IAASA,EAAI,EAAGA,EAAIvB,IAAQjF,EAAWO,OAAQiG,IAC7CxG,EAAWD,KAAsBg1G,EAAQvuG,GAAIvG,OAUjD,OANIJ,KAAKoG,SACPjG,EAAWjB,MAAMc,KAAKqG,aACbrG,KAAKT,WACdY,EAAWhB,WAGNgE,GAGT,YAAAsyG,QAAA,WACE,OAAQz1G,KAAKgqG,WAAa,EAAA4L,OAAO51D,OAG3B,YAAA01D,yBAAR,WAYE,IAXA,IAAM11D,EAAMhgD,KAAKy1G,UACXL,EAAcp1G,KAAKo1G,YACnBC,EAAcr1G,KAAKq1G,YACnBH,EAA4Bl1G,KAAKk1G,QAEjCW,EAAcX,EAAQz1G,OACxBq2G,EAAc,EAKXA,EAAcD,KACd71D,EAAMk1D,EAAQY,GAAaC,KAAQV,IAGxCS,IAWF,OARID,EAAcT,IAChBU,EAAc9yF,KAAKmP,IAAI2jF,EAAaD,EAAcT,IAGhDU,EAAc,GAChBZ,EAAQnvG,OAAO,EAAG+vG,GAGbZ,GAGX,EArHA,CAAsC,EAAApuG,SAAzB,EAAAkvG,gBAuHb,MACE,SAAmBD,EAAqB31G,GAArB,KAAA21G,OAAqB,KAAA31G,U,8ECvI1C,YAEA,QAEA,yBAAiCqzE,EAAqBu2B,GACpD,OAAO,IAAI,EAAA1nG,YAAc,SAAAnC,GACvB,IAAMkF,EAAM,IAAI,EAAAxE,aACZ8F,EAAI,EAWR,OAVAtB,EAAIxF,IAAImqG,EAAUC,UAAS,WACrBtjG,IAAM8sE,EAAMh0E,QAIhBU,EAAWD,KAAKuzE,EAAM9sE,MACjBxG,EAAWO,QACd2E,EAAIxF,IAAIG,KAAKiqG,aALb9pG,EAAWhB,eAQRkG,O,8EClBX,YAiFA,SAASotC,EAAS,G,IAAEvzC,EAAA,EAAAA,MAAO,EAAAiB,WACdjB,MAAMA,GAdnB,sBAA2BA,EAAY8qG,GACrC,OAAKA,EAGI,IAAI,EAAA1nG,YAAW,SAAAnC,GAAc,OAAA6pG,EAAUC,SAASx3D,EAAU,EAAG,CAAEvzC,MAAK,EAAEiB,WAAzC,OAF7B,IAAI,EAAAmC,YAAW,SAAAnC,GAAc,OAAAA,EAAWjB,MAAX,Q,8ECrExC,qB,wbCCA,aACA,QAEA,SAGA,SACA,SAEM+2G,EAAO,GAsNb,2B,IACE,sDAEA,IAAInD,OAA8D/tG,EAC9DilG,OAAqCjlG,EAgBzC,OAdI,EAAAktG,YAAYW,EAAYA,EAAYnzG,OAAS,MAC/CuqG,EAAY4I,EAAYrvF,OAGyB,mBAAxCqvF,EAAYA,EAAYnzG,OAAS,KAC1CqzG,EAAiBF,EAAYrvF,OAKJ,IAAvBqvF,EAAYnzG,QAAgB,EAAA0F,QAAQytG,EAAY,MAClDA,EAAcA,EAAY,IAGrB,EAAAV,UAAUU,EAAa5I,GAAW7nG,KAAK,IAAI+zG,EAAsBpD,KAG1E,iBACE,WAAoBA,GAAA,KAAAA,iBAMtB,OAHE,YAAAnxG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIm0G,EAAwBh2G,EAAYH,KAAK8yG,kBAEzE,EAPA,GAAa,EAAAoD,wBAcb,kBAME,WAAYx2G,EAAoCozG,GAAhD,MACE,YAAMpzG,IAAY,K,OAD4B,EAAAozG,iBALxC,EAAAvC,OAAiB,EACjB,EAAAt2E,OAAgB,GAChB,EAAA24E,YAAqB,G,EA6D/B,OAhEmD,OAUvC,YAAAvyG,MAAV,SAAgBgC,GACdrC,KAAKi6B,OAAOz0B,KAAKywG,GACjBj2G,KAAK4yG,YAAYptG,KAAKnD,IAGd,YAAA7B,UAAV,WACE,IAAMoyG,EAAc5yG,KAAK4yG,YACnBxtG,EAAMwtG,EAAYnzG,OACxB,GAAY,IAAR2F,EACFpF,KAAKN,YAAYP,eACZ,CACLa,KAAKuwG,OAASnrG,EACdpF,KAAKo2G,UAAYhxG,EACjB,IAAK,IAAIuB,EAAI,EAAGA,EAAIvB,EAAKuB,IAAK,CAC5B,IAAMtE,EAAauwG,EAAYjsG,GAC/B3G,KAAKH,IAAI,EAAAw2G,kBAAkBr2G,KAAMqC,OAAY0C,EAAW4B,OAK9D,YAAA/C,eAAA,SAAe0yG,GACc,IAAtBt2G,KAAKuwG,QAAU,IAClBvwG,KAAKN,YAAYP,YAIrB,YAAAuE,WAAA,SAAWS,EAAgBF,EAChBF,GACT,IAAMk2B,EAASj6B,KAAKi6B,OACds8E,EAASt8E,EAAOl2B,GAChBqyG,EAAap2G,KAAKo2G,UAEpBG,IAAWN,IAASj2G,KAAKo2G,UAAYp2G,KAAKo2G,UAD1C,EAEJn8E,EAAOl2B,GAAcE,EAEH,IAAdmyG,IACEp2G,KAAK8yG,eACP9yG,KAAKw2G,mBAAmBv8E,GAExBj6B,KAAKN,YAAYQ,KAAM+5B,EAAOvzB,WAK5B,YAAA8vG,mBAAR,SAA2Bv8E,GACzB,IAAI11B,EACJ,IACEA,EAASvE,KAAK8yG,eAAgB7E,MAAMjuG,KAAMi6B,GAC1C,MAAO35B,GAEP,YADAN,KAAKN,YAAYR,MAAOoB,GAG1BN,KAAKN,YAAYQ,KAAMqE,IAE3B,EAhEA,CAAmD,EAAA+lG,iBAAtC,EAAA6L,2B,oFCrQb,aACA,SA6DA,oBAA4BpD,GAC1B,YAD0B,IAAAA,MAAqB3yD,OAAO4yD,mBAC/C,EAAAH,SAAS,EAAAnuE,SAAUquE,K,8EChE5B,YAEA,SACA,SAmDA,iBAA6D0D,GAC3D,OAAO,IAAI,EAAAn0G,YAA+B,SAAAnC,GACxC,IAAIszE,EACJ,IACEA,EAAQgjC,IACR,MAAOn2G,GAEP,YADAH,EAAWjB,MAAMoB,GAInB,OADemzE,EAAQ,EAAAzuD,KAAKyuD,GAAgD,EAAA9zE,SAC9DqC,UAAU7B,Q,maC/D5B,aACA,QAGA,QAEA,SACA,QAmEA,iB,IACE,sDAEA,IAAM2yG,EAA8CF,EAAYA,EAAYnzG,OAAS,GAIrF,MAH8B,mBAAnBqzG,GACTF,EAAYrvF,MAEP,EAAA2uF,UAAUU,OAAa7tG,GAAW5C,KAAK,IAAIu0G,EAAY5D,KAGhE,iBAIE,WAAYA,GACV9yG,KAAK8yG,eAAiBA,EAM1B,OAHE,YAAAnxG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI20G,EAAcx2G,EAAYH,KAAK8yG,kBAE/D,EAXA,GAAa,EAAA4D,cAkBb,kBAIE,WAAYh3G,EACQozG,EACR74E,QAAA,IAAAA,MAAc/4B,OAAOjB,OAAO,OAFxC,MAGE,YAAMP,IAAY,K,OAFA,EAAAozG,iBAJZ,EAAA8D,UAAsC,GACtC,EAAArG,OAAS,EAMf,EAAKuC,eAA4C,mBAAnBA,EAAiCA,OAAiB/tG,E,EAkGpF,OA1GyC,OAW7B,YAAA1E,MAAV,SAAgBD,GACd,IAAMw2G,EAAY52G,KAAK42G,UACnB,EAAAzxG,QAAQ/E,GACVw2G,EAAUpxG,KAAK,IAAIqxG,EAAoBz2G,IACI,mBAA3BA,EAAM,YACtBw2G,EAAUpxG,KAAK,IAAIsxG,EAAe12G,EAAM,gBAExCw2G,EAAUpxG,KAAK,IAAIuxG,EAAkB/2G,KAAKN,YAAaM,KAAMI,KAIvD,YAAAI,UAAV,WACE,IAAMo2G,EAAY52G,KAAK42G,UACjBxxG,EAAMwxG,EAAUn3G,OAItB,GAFAO,KAAKS,cAEO,IAAR2E,EAAJ,CAKApF,KAAKuwG,OAASnrG,EACd,IAAK,IAAIuB,EAAI,EAAGA,EAAIvB,EAAKuB,IAAK,CAC5B,IAAI4nG,EAA6CqI,EAAUjwG,GAC3D,GAAI4nG,EAASyI,kBACSh3G,KAAKN,YACbG,IAAI0uG,EAASvsG,kBAEzBhC,KAAKuwG,eAXPvwG,KAAKN,YAAYP,YAgBrB,YAAA83G,eAAA,WACEj3G,KAAKuwG,SACe,IAAhBvwG,KAAKuwG,QACPvwG,KAAKN,YAAYP,YAIrB,YAAA+3G,eAAA,WAME,IALA,IAAMN,EAAY52G,KAAK42G,UACjBxxG,EAAMwxG,EAAUn3G,OAChBC,EAAcM,KAAKN,YAGhBiH,EAAI,EAAGA,EAAIvB,EAAKuB,IAAK,CAE5B,GAAiC,mBAD7B4nG,EAAWqI,EAAUjwG,IACL4qG,WAA4BhD,EAASgD,WACvD,OAIJ,IAAI4F,GAAiB,EACf7zF,EAAc,GACpB,IAAS3c,EAAI,EAAGA,EAAIvB,EAAKuB,IAAK,CAC5B,IAAI4nG,EACAhqG,GADAgqG,EAAWqI,EAAUjwG,IACHzG,OAQtB,GAJIquG,EAAS6D,iBACX+E,GAAiB,GAGf5yG,EAAOypG,KAET,YADAtuG,EAAYP,WAIdmkB,EAAK9d,KAAKjB,EAAOnE,OAGfJ,KAAK8yG,eACP9yG,KAAKo3G,mBAAmB9zF,GAExB5jB,EAAYQ,KAAMojB,GAGhB6zF,GACFz3G,EAAYP,YAIN,YAAAi4G,mBAAV,SAA6B9zF,GAC3B,IAAI/e,EACJ,IACEA,EAASvE,KAAK8yG,eAAgB7E,MAAMjuG,KAAMsjB,GAC1C,MAAOhjB,GAEP,YADAN,KAAKN,YAAYR,MAAOoB,GAG1BN,KAAKN,YAAYQ,KAAMqE,IAE3B,EA1GA,CAAyC,EAAA3E,YAA5B,EAAA+2G,gBAiHb,iBAGE,WAAoBpI,GAAA,KAAAA,WAClBvuG,KAAKq3G,WAAa9I,EAASruG,OAiB/B,OAdE,YAAAqxG,SAAA,WACE,OAAO,GAGT,YAAArxG,KAAA,WACE,IAAMqE,EAASvE,KAAKq3G,WAEpB,OADAr3G,KAAKq3G,WAAar3G,KAAKuuG,SAASruG,OACzBqE,GAGT,YAAA6tG,aAAA,WACE,IAAMiF,EAAar3G,KAAKq3G,WACxB,OAAOv+F,QAAQu+F,GAAcA,EAAWrJ,OAE5C,EArBA,GAuBA,aAIE,WAAoBttE,GAAA,KAAAA,QAHZ,KAAA57B,MAAQ,EACR,KAAArF,OAAS,EAGfO,KAAKP,OAASihC,EAAMjhC,OAoBxB,OAjBE,YAAC,YAAD,WACE,OAAOO,MAGT,YAAAE,KAAA,SAAKE,GACH,IAAMuG,EAAI3G,KAAK8E,QACT47B,EAAQ1gC,KAAK0gC,MACnB,OAAO/5B,EAAI3G,KAAKP,OAAS,CAAEW,MAAOsgC,EAAM/5B,GAAIqnG,MAAM,GAAU,CAAE5tG,MAAO,KAAM4tG,MAAM,IAGnF,YAAAuD,SAAA,WACE,OAAOvxG,KAAK0gC,MAAMjhC,OAASO,KAAK8E,OAGlC,YAAAstG,aAAA,WACE,OAAOpyG,KAAK0gC,MAAMjhC,SAAWO,KAAK8E,OAEtC,EAzBA,GAgCA,cAKE,WAAYpF,EACQmC,EACAQ,GAFpB,MAGE,YAAM3C,IAAY,K,OAFA,EAAAmC,SACA,EAAAQ,aANpB,EAAA20G,mBAAoB,EACpB,EAAA5D,OAAc,GACd,EAAAhqF,YAAa,E,EAgDf,OAnDsC,OAWpC,YAAC,YAAD,WACE,OAAOppB,MAKT,YAAAE,KAAA,WACE,IAAMkzG,EAASpzG,KAAKozG,OACpB,OAAsB,IAAlBA,EAAO3zG,QAAgBO,KAAKopB,WACvB,CAAEhpB,MAAO,KAAM4tG,MAAM,GAErB,CAAE5tG,MAAOgzG,EAAOjE,QAAUnB,MAAM,IAI3C,YAAAuD,SAAA,WACE,OAAOvxG,KAAKozG,OAAO3zG,OAAS,GAG9B,YAAA2yG,aAAA,WACE,OAA8B,IAAvBpyG,KAAKozG,OAAO3zG,QAAgBO,KAAKopB,YAG1C,YAAAxlB,eAAA,WACM5D,KAAKozG,OAAO3zG,OAAS,GACvBO,KAAKopB,YAAa,EAClBppB,KAAK6B,OAAOo1G,kBAEZj3G,KAAKN,YAAYP,YAIrB,YAAAuE,WAAA,SAAWO,GACTjE,KAAKozG,OAAO5tG,KAAKvB,GACjBjE,KAAK6B,OAAOq1G,kBAGd,YAAAl1G,UAAA,WACE,OAAO,EAAAwxG,eAAexzG,KAAKqC,WAAY,IAAI,EAAAwB,sBAAsB7D,QAErE,EAnDA,CAAsC,EAAAkE,wB,maC9QtC,YACA,SACA,SAkDA,gBAAwBwD,GACtB,OAAO,SAACnF,GACN,OAAc,IAAVmF,EACK,EAAA/H,QAEA4C,EAAOJ,KAAK,IAAIm1G,EAAa5vG,MAK1C,iBACE,WAAoBs/D,GAClB,GADkB,KAAAA,QACdhnE,KAAKgnE,MAAQ,EACf,MAAM,IAAI,EAAA2pC,wBAOhB,OAHE,YAAAhvG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIu1G,EAAep3G,EAAYH,KAAKgnE,SAEhE,EAVA,GAiBA,cAGE,WAAYtnE,EAAoCsnE,GAAhD,MACE,YAAMtnE,IAAY,K,OAD4B,EAAAsnE,QAFxC,EAAAt/D,MAAgB,E,EAiB1B,OAlBgC,OAOpB,YAAArH,MAAV,SAAgBD,GACd,IAAM4mE,EAAQhnE,KAAKgnE,MACbt/D,IAAU1H,KAAK0H,MACjBA,GAASs/D,IACXhnE,KAAKN,YAAYQ,KAAKE,GAClBsH,IAAUs/D,IACZhnE,KAAKN,YAAYP,WACjBa,KAAKS,iBAIb,EAlBA,CAAgC,EAAAb,a,maC/EhC,YACA,SACA,SA8CA,oBAA4B8H,GAC1B,OAAO,SAAkCnF,GACvC,OAAc,IAAVmF,EACK,EAAA/H,QAEA4C,EAAOJ,KAAK,IAAIq1G,EAAiB9vG,MAK9C,iBACE,WAAoBs/D,GAClB,GADkB,KAAAA,QACdhnE,KAAKgnE,MAAQ,EACf,MAAM,IAAI,EAAA2pC,wBAOhB,OAHE,YAAAhvG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIy1G,EAAmBt3G,EAAYH,KAAKgnE,SAEpE,EAVA,GAiBA,cAIE,WAAYtnE,EAAoCsnE,GAAhD,MACE,YAAMtnE,IAAY,K,OAD4B,EAAAsnE,QAHxC,EAAA0wC,KAAiB,IAAI1wG,MACrB,EAAAU,MAAgB,E,EAmC1B,OArCoC,OAQxB,YAAArH,MAAV,SAAgBD,GACd,IAAMs3G,EAAO13G,KAAK03G,KACZ1wC,EAAQhnE,KAAKgnE,MACbt/D,EAAQ1H,KAAK0H,QAEfgwG,EAAKj4G,OAASunE,EAChB0wC,EAAKlyG,KAAKpF,GAGVs3G,EADchwG,EAAQs/D,GACR5mE,GAIR,YAAAI,UAAV,WACE,IAAMd,EAAcM,KAAKN,YACrBgI,EAAQ1H,KAAK0H,MAEjB,GAAIA,EAAQ,EAIV,IAHA,IAAMs/D,EAAQhnE,KAAK0H,OAAS1H,KAAKgnE,MAAQhnE,KAAKgnE,MAAQhnE,KAAK0H,MACrDgwG,EAAQ13G,KAAK03G,KAEV/wG,EAAI,EAAGA,EAAIqgE,EAAOrgE,IAAK,CAC9B,IAAMgxG,EAAOjwG,IAAWs/D,EACxBtnE,EAAYQ,KAAKw3G,EAAKC,IAI1Bj4G,EAAYP,YAEhB,EArCA,CAAoC,EAAAS,a,maC1EpC,YAoDA,gBAA2Bi0G,EAAqDC,GAC9E,IAAI8D,GAAU,EAUd,OAJIp4G,UAAUC,QAAU,IACtBm4G,GAAU,GAGL,SAA8Br1G,GACnC,OAAOA,EAAOJ,KAAK,IAAI01G,EAAahE,EAAaC,EAAM8D,MAI3D,iBACE,WAAoB/D,EAA6DC,EAAsB8D,QAAA,IAAAA,OAAA,GAAnF,KAAA/D,cAA6D,KAAAC,OAAsB,KAAA8D,UAKzG,OAHE,YAAAj2G,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI81G,EAAe33G,EAAYH,KAAK6zG,YAAa7zG,KAAK8zG,KAAM9zG,KAAK43G,WAE7F,EANA,GAaA,cAYE,WAAYl4G,EAAoCm0G,EAA6DkE,EACzFH,GADpB,MAEE,YAAMl4G,IAAY,K,OAF4B,EAAAm0G,cAA6D,EAAAkE,QACzF,EAAAH,UAZZ,EAAA9yG,MAAgB,E,EAoC1B,OArCmC,OAGjC,sBAAI,mBAAI,C,IAAR,WACE,OAAO9E,KAAK+3G,O,IAGd,SAAS33G,GACPJ,KAAK43G,SAAU,EACf53G,KAAK+3G,MAAQ33G,G,gCAQL,YAAAC,MAAV,SAAgBD,GACd,GAAKJ,KAAK43G,QAIR,OAAO53G,KAAKqzG,SAASjzG,GAHrBJ,KAAK8zG,KAAO1zG,EACZJ,KAAKN,YAAYQ,KAAKE,IAMlB,YAAAizG,SAAR,SAAiBjzG,GACf,IACImE,EADEO,EAAQ9E,KAAK8E,QAEnB,IACEP,EAASvE,KAAK6zG,YAAe7zG,KAAK8zG,KAAM1zG,EAAO0E,GAC/C,MAAOxE,GACPN,KAAKN,YAAYR,MAAMoB,GAEzBN,KAAK8zG,KAAOvvG,EACZvE,KAAKN,YAAYQ,KAAKqE,IAE1B,EArCA,CAAmC,EAAA3E,a,yaC9EnC,YACA,SACA,QAwEA,qBAAgB+tD,EACdtmD,EACAyrG,GAEA,MAA8B,mBAAnBA,EACF,SAACvwG,GAA0B,OAAAA,EAAOa,KACvCuqD,GAAU,SAACjwB,EAAG/2B,GAAM,SAAAqe,KAAK3d,EAAQq2B,EAAG/2B,IAAIvD,KACtC,EAAA+b,KAAI,SAACwe,EAAGs1E,GAAO,OAAAH,EAAep1E,EAAGC,EAAGh3B,EAArB,YAId,SAACpE,GAA0B,OAAAA,EAAOJ,KAAK,IAAI61G,EAAhB,MAGpC,iBACE,WAAoB3wG,GAAA,KAAAA,UAMtB,OAHE,YAAA1F,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIi2G,EAAoB93G,EAAYH,KAAKqH,WAErE,EAPA,GAcA,cAIE,WAAY3H,EACQ2H,GADpB,MAEE,YAAM3H,IAAY,K,OADA,EAAA2H,UAJZ,EAAAvC,MAAQ,E,EA2DlB,OA5DwC,OAS5B,YAAAzE,MAAV,SAAgBD,GACd,IAAImE,EACEO,EAAQ9E,KAAK8E,QACnB,IACEP,EAASvE,KAAKqH,QAAQjH,EAAO0E,GAC7B,MAAO5F,GAEP,YADAc,KAAKN,YAAYR,MAAOA,GAG1Bc,KAAKqE,UAAUE,IAGT,YAAAF,UAAR,SAAkBE,GAChB,IAAMgvG,EAAoBvzG,KAAKuzG,kBAC3BA,GACFA,EAAkB9yG,cAEpB,IAAM+D,EAAkB,IAAI,EAAAX,sBAAsB7D,MAC5CN,EAAcM,KAAKN,YACzBA,EAAYG,IAAI2E,GAChBxE,KAAKuzG,kBAAoB,EAAAC,eAAejvG,EAAQC,GAI5CxE,KAAKuzG,oBAAsB/uG,GAC7B9E,EAAYG,IAAIG,KAAKuzG,oBAIf,YAAA/yG,UAAV,WACS,IAAA+yG,EAAA,KAAAA,kBACFA,IAAqBA,EAAkB7yG,QAC1C,YAAMF,UAAS,WAEjBR,KAAKS,eAGG,YAAAsB,aAAV,WACE/B,KAAKuzG,uBAAoBxuG,GAG3B,YAAAnB,eAAA,WACE5D,KAAKuzG,uBAAoBxuG,EACrB/E,KAAKT,WACP,YAAMiB,UAAS,YAInB,YAAAkD,WAAA,SAAWO,GACPjE,KAAKN,YAAYQ,KAAM+D,IAE7B,EA5DA,CAAwC,EAAAC,wB,4FC3GxC,iBAKI,WACYg0G,GADZ,WACY,KAAAA,SAGRl4G,KAAKm4G,SAAW,aAEhBn4G,KAAKo4G,SAAW,IAAI30G,SAAQ,SAAAR,GACxB,EAAKk1G,SAAWl1G,KAqB5B,OAjBI,YAAA47C,WAAA,SAAW4S,GACPzxD,KAAKo4G,SAASp0F,KAAKytC,IAGvB,YAAAtyD,SAAA,WACIa,KAAKm4G,WAEDn4G,KAAKq4G,eACLxgF,OAAOqpB,aAAalhD,KAAKq4G,gBAIjC,YAAA7qC,MAAA,sBACQxtE,KAAKk4G,SACLl4G,KAAKq4G,cAAgBxgF,OAAO8oB,YAAW,WAAM,sBAAiB3gD,KAAKk4G,UAG/E,EAjCA,G,uGAAA,iBAKI,WACYA,GADZ,WACY,KAAAA,SAGRl4G,KAAKm4G,SAAW,aAEhBn4G,KAAKo4G,SAAW,IAAI30G,SAAQ,SAAAR,GACxB,EAAKk1G,SAAWl1G,KAqB5B,OAjBI,YAAA47C,WAAA,SAAW4S,GACPzxD,KAAKo4G,SAASp0F,KAAKytC,IAGvB,YAAAtyD,SAAA,WACIa,KAAKm4G,WAEDn4G,KAAKq4G,eACLxgF,OAAOqpB,aAAalhD,KAAKq4G,gBAIjC,YAAA7qC,MAAA,sBACQxtE,KAAKk4G,SACLl4G,KAAKq4G,cAAgBxgF,OAAO8oB,YAAW,WAAM,sBAAiB3gD,KAAKk4G,UAG/E,EAjCA,G,qGCIe,SAAe93G,GAC1B,GAAIA,QACA,SAGJ,W,oGCFW,SAAsBgJ,EAAQkvG,GACzC,KAAK,aAAL,GACI,SAKJ,OAFap3G,YAAb,GAEO,QAAY,cACf,IAAMd,EAAQgJ,EAAd,GAMA,OAJKkvG,EAAL,KACI/zG,QAGJ,IAPJ,KAdJ,I,EAAA,G,EAAA,S,2HCAA,cACA,U,0KA2CqBg0G,E,qLAKb,OAAO,IAAP,M,iCAOIlgF,GAAe,IACbtb,EAAOsb,EADM,GAOnB,OAJIA,WAAyBmgF,EAA7B,eACIz7F,EAAKsb,EAALtb,SA3CZ,SAAkCA,GAC9B,UACA,KAAKxO,EAAL,iBACA,KAAKC,EAAL,wBACA,KAAKiqG,EAAL,uBACA,KAAKC,EAAL,oBACI,SACJ,QACI,UAsCIC,CAAJ,GACWrqG,EAAP,UA/BZ,SAAuCyO,GACnC,UACA,KAAKhP,EAAL,uBACA,KAAK6qG,EAAL,6BACA,KAAK3qG,EAAL,oCACI,SACJ,QACI,UA2BI4qG,CAAJ,GACW/qG,EAAP,gBAGJ,O,+WCvEagrG,E,WAejB,e,4FAAoB,SAKhB94G,KAAA,S,8CAdUqB,GACV,OAAO,IAAIy3G,EAAX,O,kDA4BA,gBAAU94G,KAAV,0B,sCAOA,gBAAUA,KAAV,yC,kDAOA,gBAAUA,KAAV,gD,2BArBA,OAAOA,KAAKqB,OAAZ,S,iHC5BR,iBACA,WACA,SACA,aACA,aACA,a,sRAEqB03G,E,WAejB,iB,4FAAgD,SAK5C/4G,KAAA,iBAMAA,KAAA,qB,gDAlBA,OAAO,IAAI+4G,EAHYC,UAAvB,SAC2BC,UAA3B,c,uCA8BQr9F,EAAKse,EAAMlZ,EAASywC,GAAU,WAChCgiC,GAAgB,gBAAeylB,EAAf,QAAtB,GAEMC,EAAMn5G,KAAKo5G,eAAeC,cAAcz9F,EAAK63E,GAAe,YAC9D,IAAM96E,EAAW,kCAAjB,GAEA,KAIIzZ,GAAU,sBAAd,GAKAuyD,EAAS,KAATA,GAJIA,SAOF3sC,EAAU9kB,KAAKs5G,mBAAmBC,UAAUr/E,EAAMu5D,UAAxD,iBAEA0lB,Y,kCAUQv9F,EAAKse,EAAMlZ,EAASywC,GAC5B,IAAMgiC,GAAgB,kBAA0B,CAC5C7tE,OAAQs7C,SAGZlhE,KAAA,uB,0CAQgBm5G,GAChB,OAAOA,eAAqBA,SAA5B,Q,mICvFD,M,OACA,O,SACA,U,0HNFP,iBAKI,WACYjB,GADZ,WACY,KAAAA,SAGRl4G,KAAKm4G,SAAW,aAEhBn4G,KAAKo4G,SAAW,IAAI30G,SAAQ,SAAAR,GACxB,EAAKk1G,SAAWl1G,KAqB5B,OAjBI,YAAA47C,WAAA,SAAW4S,GACPzxD,KAAKo4G,SAASp0F,KAAKytC,IAGvB,YAAAtyD,SAAA,WACIa,KAAKm4G,WAEDn4G,KAAKq4G,eACLxgF,OAAOqpB,aAAalhD,KAAKq4G,gBAIjC,YAAA7qC,MAAA,sBACQxtE,KAAKk4G,SACLl4G,KAAKq4G,cAAgBxgF,OAAO8oB,YAAW,WAAM,sBAAiB3gD,KAAKk4G,UAG/E,EAjCA,G,6eOAA,QACA,SAWA,SAYA,SAGA,SAEA,UACA,UACA,UAKA,aAUI,WACIt5E,EACA0P,EACAttB,QADA,IAAAstB,MAAA,IAFJ,WAKItuC,KAAKw5G,SAAW56E,EAChB5+B,KAAK2+C,SAAQ,YACTlQ,kBAAmB,UACnBgrE,cAAeC,EACftrE,oBAAoB,EACpBU,iBAAkB,WACf9tB,GAEPhhB,KAAK25G,QAAU,IAAI,EAAAC,gBAAgB55G,KAAK2+C,SAAS7P,iBAAiBR,IAClEtuC,KAAK65G,eAAiB,IAAI,EAAA/yG,QAC1B9G,KAAK85G,aAAe,GACpB95G,KAAK+5G,gBAAkB,IAAI,EAAAjzG,QAC3B9G,KAAKg6G,QAAU,GAEfh6G,KAAK+5G,gBACA32G,KACG,EAAAyvG,UAAS,SAAAoH,GAAe,OAAAA,EAAY72G,KAAK,EAAA82G,WAAU,SAAAxrE,GAAW,OAAAA,SAC9D,EAAArtB,QAAO,SAAAsD,GAAU,QAAEA,EAAF,QACjB,EAAAovF,MACI,SAACoG,EAA+Cx1F,GAC5C,SAAKy1F,iBAAiBD,EAAQx1F,KAClC,CACImQ,MAAOwZ,EACP+rE,iBAAkBr6G,KAAK25G,QAAQroC,aAGvC,EAAAgpC,sBAAqB,SAAC,EAAmB,G,IAAjB,IAAAxlF,MAAmB,IAAAA,MACvC,SAAK6pB,SAAS86D,cAAcc,EAAQC,MAExC,EAAAr7F,KAAI,SAAC,GAAyB,OAAvB,EAAAk7F,qBAEVr4G,UAAUhC,KAAK25G,SAEpB35G,KAAKyyC,SAAS,CAAE1hC,KAAM,SA0J9B,OAvJI,YAAA0hC,SAAA,SACI9tB,EACA3D,GAEA,OAAI,UAAuB2D,GAChB3kB,KAAKy6G,0BAA0B91F,EAAQ3D,GAG5B,mBAAX2D,EACA3kB,KAAK06G,qBAAqB/1F,EAAQ3D,GAGtChhB,KAAK26G,gBAAgBh2F,IAGhC,YAAAoQ,SAAA,WACI,OAAO/0B,KAAK25G,QAAQroC,YAGxB,YAAA8oB,YAAA,WACIp6F,KAAK65G,eAAe35G,KAAKF,KAAK+0B,aAKlC,YAAA/yB,UAAA,SAAU7B,G,IAAV,WAAqD,oDACjD,IAAM6gB,EAAkE,WAAnB,EAAOsC,EAAK,IAAkBA,EAAK,QAAKve,EACvF+sC,EAA4C9wB,EAAWA,EAAQ8wB,SAAW,GAAMxuB,EAElFs3F,EAAwC56G,KAAK25G,QAE7C7nE,EAAQryC,OAAS,IACjBm7G,EAASA,EAAOx3G,KACZ,EAAAk3G,sBAAqB,SAACC,EAAQC,GAC1B,OAAA1oE,EAAQnD,OAAM,SAAAksE,GACV,SAAKl8D,SAAS86D,cAAcoB,EAASN,GAASM,EAASL,YAMnEx5F,IAA+B,IAApBA,EAAQm5E,UACnBygB,EAASA,EAAOx3G,KAAK,EAAA03G,KAAK,KAG9B,IAAMj1G,EAAgB,CAClB+0G,EAAO54G,UAAU7B,GACjBH,KAAK65G,eAAe73G,UAAU7B,IAGlC,OAAO,WAAM,OAAA0F,EAAc/C,SAAQ,SAAAK,GAAgB,OAAAA,EAAA,mBAG/C,YAAAi3G,iBAAR,SACID,EACAx1F,GAEA,IACI,IAAMo2F,GAAgD,IAArC/6G,KAAK2+C,SAASvQ,mBAC3BpuC,KAAKw5G,SAASW,EAAOrlF,MAAOnQ,GAC5B,UAAW3kB,KAAKw5G,SAASW,EAAOrlF,MAAOnQ,GAAS,CAC5C80F,cAAez5G,KAAK2+C,SAAS86D,cAC7BuB,cAAeb,EAAOrlF,QAI9B,MAAO,CAAEA,MAAOimF,EAAUV,iBAFDr6G,KAAK2+C,SAAS7P,iBAAiBisE,IAG1D,MAAO77G,GAGL,OAFAc,KAAKi7G,kBAAkBt2F,EAAOV,MAAQU,EAAOV,KAAKuuB,SAAStyC,KAAKhB,GAEzD,CAAE41B,MAAOqlF,EAAOrlF,MAAOulF,iBAAkBF,EAAOE,oBAIvD,YAAAM,gBAAR,SACIh2F,GAEA,OAAO3kB,KAAKy6G,0BACR91F,EAAOzlB,MAAQ,EAAA2lB,WAAWF,GAAU,EAAAC,GAAGD,KAIvC,YAAA81F,0BAAR,SACI/rE,EACA1tB,GAFJ,WAII,YAFA,IAAAA,MAAA,IAEO,IAAIvd,SAAQ,SAACR,EAASC,GACzB,IAAMg4G,EAAS,EAAKD,kBAAkBj6F,EAAQwxB,SACxC2oE,EAAqB,EAAKx8D,SAASlQ,kBACrC,EAAAzpB,KAAK0pB,GAAStrC,KACV,EAAA+b,KAAI,SAAAwF,GACA,OAAA3D,EAAQwxB,QACJ,EAAAhe,MAAM,GAAI7P,EAAQ,CAAEV,KAAM,CAAEuuB,QAASxxB,EAAQwxB,WAC7C7tB,OAKhB,EAAKy2F,eAAep6F,EAAQwxB,SAAStyC,KACjC,EAAA8kB,KAAKm2F,GACA/3G,KACG,EAAA+b,KAAI,SAACwF,EAAQ7f,GAST,OARc,IAAVA,GACAo2G,EAAO93G,KAAK,EAAA6jE,SAASjlE,UAAUkB,GAG/ByhB,EAAOzlB,OACPgE,EAAOyhB,EAAOG,SAGXH,KAEX,EAAAiQ,YAAW,SAAAjQ,GAGP,OAFAzhB,EAAOyhB,aAAkB7iB,MAAQ6iB,EAASA,EAAOG,SAE1C,EAAAF,GAAGD,MAEd,EAAA02F,IAAI,CACAl8G,SAAU,WACN8D,EAAQ,EAAK8xB,qBAQjC,YAAA2lF,qBAAR,SACIY,EACAt6F,GAFJ,WAII,YAFA,IAAAA,MAAA,IAEOhhB,KAAKy6G,0BAA0B,EAAA9lF,OAAM,WAAM,OAAA2mF,EAAA,MAAoBt6F,IAGlE,YAAAo6F,eAAR,SAAuB5oE,GAOnB,YAPmB,IAAAA,MAAA,WACdxyC,KAAK85G,aAAatnE,KACnBxyC,KAAK85G,aAAatnE,GAAW,IAAI,EAAA1rC,QAEjC9G,KAAK+5G,gBAAgB75G,KAAKF,KAAK85G,aAAatnE,KAGzCxyC,KAAK85G,aAAatnE,IAGrB,YAAAyoE,kBAAR,SAA0BzoE,GAKtB,YALsB,IAAAA,MAAA,WACjBxyC,KAAKg6G,QAAQxnE,KACdxyC,KAAKg6G,QAAQxnE,GAAW,IAAI,EAAA1rC,SAGzB9G,KAAKg6G,QAAQxnE,IAE5B,EA1MA,G,wJCpCA,YACA,SAUA,qBACIppC,EACA4X,GAEA,IACU,YAAE,IAAAy4F,cAAA,iBAA8B,IAAAuB,cAAA,oBAEtC,OAAI,EAAc5xG,EAAQ,IAAkBlI,OAAOq6G,SAAS,GACjD,EAGPr6G,OAAOq6G,SAASnyG,KAAapC,MAAM7B,QAAQiE,KAAY,EAAA0Q,cAAc1Q,GAC9DA,EAGPpC,MAAM7B,QAAQiE,GACPlI,OAAOs6G,OAAOpyG,EAAO+V,KAAI,SAAC/e,EAAO0E,GACpC,OAAA4+B,EAAWtjC,EAAO,CACdq5G,cAAa,EACbuB,cAAeh0G,MAAM7B,QAAQ,GAAiB,EAAcL,QAASC,QAK1E7D,OAAOs6G,OAAOt6G,OAAOklB,oBAAoBhd,GAAQpD,QAAO,SAACzB,EAAQ2E,GAQpE,OAPA3E,EAAO2E,GAAkBw6B,EAAWt6B,EAAOF,GAAiB,CACxDuwG,cAAa,EACbuB,cAAe,GAAiB,EAAczxG,eAAeL,GACxD,EAAsBA,QACvBnE,IAGDR,IACR,KACL,MAAOrF,GAGL,GAAIA,aAAiBqI,UACjB,OAAO6B,EAGX,MAAMlK,K,0FCpDd,YACA,SAKA,mBACIu8G,EACAz6F,GAEQ,cAAAy4F,qBAAA,UAER,OAAO,SAAC3kF,EAAOnQ,GACX,OAAAzjB,OAAOge,KAAKu8F,GAAUz1G,QAAO,SAACzB,EAAQ2E,GAClC,I,EAAM01B,EAAU68E,EAASvyG,GACnBwyG,EAAe5mF,EAAQA,EAAM5rB,QAAuBnE,EACpDg2G,EAAWn8E,EAAQ88E,EAAc/2F,GAEvC,OAAI80F,EAAciC,EAAcX,IAAax2G,EAClCA,EAGJ,EAAAyoG,OAAO,GAAIzoG,IAAM,MAAK2E,GAAM6xG,EAAQ,MAC5CjmF,GAAS,O,yFCvBpB,QAIA,mBACI/jB,EACA+T,EACAb,GAEA,GAAoB,iBAATlT,GAA8B,KAATA,EAC5B,MAAM,IAAIjP,MAAM,2BAGpB,mBAASiP,KAAI,GAAK,EAAAojB,OAAO,CAAErP,QAAO,EAAEb,KAAI,IAAI,SAAA7jB,GAAS,gBAAAA,Q,8ECZzD,aACA,SAEa,EAAAT,MAAuB,CAClCe,QAAQ,EACRR,KAAA,SAAKE,KACLlB,MAAA,SAAMoB,GACJ,GAAI,EAAAe,OAAOC,sCACT,MAAMhB,EAEN,EAAAmB,gBAAgBnB,IAGpBnB,SAAA,e,iHCNF,IAAMw8G,EAA2B,WAC/B,SAASA,EAAmC/2G,GAO1C,OANA9C,MAAMH,KAAK3B,MACXA,KAAKgU,QAAUpP,EACVA,EAAOnF,OAAM,4CACpBmF,EAAOua,KAAI,SAAC7e,EAAKqG,GAAM,OAAGA,EAAI,EAAC,KAAKrG,EAAb,cAA+Bue,KAAK,QAAY,GACrE7e,KAAKqI,KAAO,sBACZrI,KAAK4E,OAASA,EACP5E,KAKT,OAFA27G,EAAwBryG,UAAYpI,OAAOjB,OAAO6B,MAAMwH,WAEjDqyG,EAbwB,GAoBpB,EAAA12G,oBAA+C02G,G,maC5B5D,IA0DQC,EA1DR,QAEA,QACA,QACA,QAEA,SAKA,cAQE,WAAmBr5G,EACGqoG,GADtB,MAEE,cAAO,K,OAFU,EAAAroG,SACG,EAAAqoG,iBANZ,EAAA4J,UAAoB,EAG9B,EAAAqH,aAAc,E,EAsChB,OA5C8C,OAc5C,YAAA35G,WAAA,SAAW/B,GACT,OAAOH,KAAK87G,aAAa95G,UAAU7B,IAG3B,YAAA27G,WAAV,WACE,IAAMx1G,EAAUtG,KAAK+7G,SAIrB,OAHKz1G,IAAWA,EAAQ/G,YACtBS,KAAK+7G,SAAW/7G,KAAK4qG,kBAEhB5qG,KAAK+7G,UAGd,YAAAnH,QAAA,WACE,IAAID,EAAa30G,KAAK+0G,YAWtB,OAVKJ,IACH30G,KAAK67G,aAAc,GACnBlH,EAAa30G,KAAK+0G,YAAc,IAAI,EAAAl0G,cACzBhB,IAAIG,KAAKuC,OACjBP,UAAU,IAAIg6G,EAAsBh8G,KAAK87G,aAAc97G,QACtD20G,EAAWj0G,SACbV,KAAK+0G,YAAc,KACnBJ,EAAa,EAAA9zG,aAAa6E,QAGvBivG,GAGT,YAAAE,SAAA,WACE,OAAO,aAAsB70G,OAEjC,EA5CA,CAA8C,EAAAsC,YAAjC,EAAA25G,wBA8CA,EAAAlR,gCAEJ,CACL3oG,SAAU,CAAEhC,MAAO,MACnBo0G,UAAW,CAAEp0G,MAAO,EAAG87G,UAAU,GACjCH,SAAU,CAAE37G,MAAO,KAAc87G,UAAU,GAC3CnH,YAAa,CAAE30G,MAAO,KAAc87G,UAAU,GAC9Ch6G,WAAY,CAAE9B,OANVw7G,EAAwBK,EAAsB3yG,WAMZpH,YACtC25G,YAAa,CAAEz7G,MAAOw7G,EAAiBC,YAAaK,UAAU,GAC9DJ,WAAY,CAAE17G,MAAOw7G,EAAiBE,YACtClH,QAAS,CAAEx0G,MAAOw7G,EAAiBhH,SACnCC,SAAU,CAAEz0G,MAAOw7G,EAAiB/G,WAIxC,kBACE,WAAYn1G,EACQorG,GADpB,MAEE,YAAMprG,IAAY,K,OADA,EAAAorG,c,EAyBtB,OA3BuC,OAK3B,YAAAvqG,OAAV,SAAiBD,GACfN,KAAK+B,eACL,YAAMxB,OAAM,UAACD,IAEL,YAAAE,UAAV,WACER,KAAK8qG,YAAY+Q,aAAc,EAC/B77G,KAAK+B,eACL,YAAMvB,UAAS,YAEP,YAAAuB,aAAV,WACE,IAAM+oG,EAAmB9qG,KAAK8qG,YAC9B,GAAIA,EAAa,CACf9qG,KAAK8qG,YAAc,KACnB,IAAM6J,EAAa7J,EAAYiK,YAC/BjK,EAAY0J,UAAY,EACxB1J,EAAYiR,SAAW,KACvBjR,EAAYiK,YAAc,KACtBJ,GACFA,EAAWl0G,gBAInB,EA3BA,CAAuC,EAAAyF,mBAgDvC,GAnBA,WACE,WAAoB4kG,GAAA,KAAAA,cAEpB,YAAAnpG,KAAA,SAAKxB,EAA2BoC,GAEtB,IAAAuoG,EAAA,KAAAA,YACDA,EAAa0J,YAEpB,IAAMC,EAAa,IAAIC,EAAmBv0G,EAAY2qG,GAChD3nG,EAAeZ,EAAOP,UAAUyyG,GAMtC,OAJKA,EAAW/zG,SACP+zG,EAAYE,WAAa7J,EAAY8J,WAGvCzxG,GAfX,GAmBA,YAIE,WAAYzD,EACQorG,GADpB,MAEE,YAAMprG,IAAY,K,OADA,EAAAorG,c,EAwDtB,OA7DoC,OASxB,YAAA/oG,aAAV,WAEU,IAAA+oG,EAAA,KAAAA,YACR,GAAKA,EAAL,CAKA9qG,KAAK8qG,YAAc,KACnB,IAAM+J,EAAkB/J,EAAa0J,UACrC,GAAIK,GAAY,EACd70G,KAAK20G,WAAa,UAKpB,GADO7J,EAAa0J,UAAYK,EAAW,EACvCA,EAAW,EACb70G,KAAK20G,WAAa,SADpB,CA4BQ,IAAAA,EAAA,KAAAA,WACFG,EAA0BhK,EAAaiK,YAC7C/0G,KAAK20G,WAAa,MAEdG,GAAsBH,GAAcG,IAAqBH,GAC3DG,EAAiBr0G,oBA7CjBT,KAAK20G,WAAa,MAgDxB,EA7DA,CAAoC,EAAA/0G,c,+aCtHpC,IAOA,cAGE,WAAmB0G,EAA4BnG,GAA/C,MACE,cAAO,K,OADU,EAAAmG,UAA4B,EAAAnG,aAF/C,EAAAO,QAAkB,E,EA4BpB,OA7B4C,OAO1C,YAAAD,YAAA,WACE,IAAIT,KAAKU,OAAT,CAIAV,KAAKU,QAAS,EAEd,IAAM4F,EAAUtG,KAAKsG,QACfH,EAAYG,EAAQH,UAI1B,GAFAnG,KAAKsG,QAAU,KAEVH,GAAkC,IAArBA,EAAU1G,SAAgB6G,EAAQ/G,YAAa+G,EAAQ5F,OAAzE,CAIA,IAAMy7G,EAAkBh2G,EAAUP,QAAQ5F,KAAKG,aAEtB,IAArBg8G,GACFh2G,EAAUJ,OAAOo2G,EAAiB,MAGxC,EA7BA,CAPA,MAO4Ct7G,cAA/B,EAAA+F,uB,0cCTb,YACA,QACA,QAEA,QAoGA,mBAAiCw1G,EACAC,EACAC,EACAC,GAC/B,OAAO,SAACh6G,GACN,OAAAA,EAAOJ,KAAK,IAAIq6G,EAAgBJ,EAAaC,EAAiBC,EAAkBC,MAUpF,iBACE,WAAoBH,EACAC,EACAC,EACAC,GAHA,KAAAH,cACA,KAAAC,kBACA,KAAAC,mBACA,KAAAC,kBAQtB,OALE,YAAA56G,KAAA,SAAKxB,EAAiDoC,GACpD,OAAOA,EAAOP,UAAU,IAAIy6G,EAC1Bt8G,EAAYH,KAAKo8G,YAAap8G,KAAKq8G,gBAAiBr8G,KAAKs8G,iBAAkBt8G,KAAKu8G,mBAGtF,EAZA,GAmBA,cAKE,WAAY78G,EACQ08G,EACAC,EACAC,EACAC,GAJpB,MAKE,YAAM78G,IAAY,K,OAJA,EAAA08G,cACA,EAAAC,kBACA,EAAAC,mBACA,EAAAC,kBARZ,EAAAG,OAAiC,KAClC,EAAAC,wBAAkC,EAClC,EAAAj1G,MAAgB,E,EAoGzB,OAvGyC,OAa7B,YAAArH,MAAV,SAAgBD,GACd,IAAI8I,EACJ,IACEA,EAAMlJ,KAAKo8G,YAAYh8G,GACvB,MAAOE,GAEP,YADAN,KAAKd,MAAMoB,GAIbN,KAAK48G,OAAOx8G,EAAO8I,IAGb,YAAA0zG,OAAR,SAAex8G,EAAU8I,GACvB,IAAIwzG,EAAS18G,KAAK08G,OAEbA,IACHA,EAAS18G,KAAK08G,OAAS,IAAIG,KAG7B,IAEIvqD,EAFAwqD,EAAQJ,EAAOh0G,IAAIQ,GAGvB,GAAIlJ,KAAKq8G,gBACP,IACE/pD,EAAUtyD,KAAKq8G,gBAAgBj8G,GAC/B,MAAOE,GACPN,KAAKd,MAAMoB,QAGbgyD,EAAelyD,EAGjB,IAAK08G,EAAO,CACVA,EAAS98G,KAAKu8G,gBAAkBv8G,KAAKu8G,kBAAoB,IAAI,EAAAz1G,QAC7D41G,EAAO32F,IAAI7c,EAAK4zG,GAChB,IAAMC,EAAoB,IAAIC,EAAkB9zG,EAAK4zG,EAAO98G,MAE5D,GADAA,KAAKN,YAAYQ,KAAK68G,GAClB/8G,KAAKs8G,iBAAkB,CACzB,IAAIW,OAAQ,EACZ,IACEA,EAAWj9G,KAAKs8G,iBAAiB,IAAIU,EAAwB9zG,EAAiB4zG,IAC9E,MAAOx8G,GAEP,YADAN,KAAKd,MAAMoB,GAGbN,KAAKH,IAAIo9G,EAASj7G,UAAU,IAAIk7G,EAAwBh0G,EAAK4zG,EAAO98G,SAInE88G,EAAMp8G,QACTo8G,EAAM58G,KAAKoyD,IAIL,YAAA/xD,OAAV,SAAiBD,GACf,IAAMo8G,EAAS18G,KAAK08G,OAChBA,IACFA,EAAO55G,SAAQ,SAACg6G,EAAO5zG,GACrB4zG,EAAM59G,MAAMoB,MAGdo8G,EAAOS,SAETn9G,KAAKN,YAAYR,MAAMoB,IAGf,YAAAE,UAAV,WACE,IAAMk8G,EAAS18G,KAAK08G,OAChBA,IACFA,EAAO55G,SAAQ,SAACg6G,EAAO5zG,GACrB4zG,EAAM39G,cAGRu9G,EAAOS,SAETn9G,KAAKN,YAAYP,YAGnB,YAAAi+G,YAAA,SAAYl0G,GACVlJ,KAAK08G,OAAO/kF,OAAOzuB,IAGrB,YAAAzI,YAAA,WACOT,KAAKU,SACRV,KAAK28G,wBAAyB,EACX,IAAf38G,KAAK0H,OACP,YAAMjH,YAAW,aAIzB,EAvGA,CAAyC,EAAAb,YA8GzC,cACE,WAAoBsJ,EACA4zG,EACAj7G,GAFpB,MAGE,YAAMi7G,IAAM,K,OAHM,EAAA5zG,MACA,EAAA4zG,QACA,EAAAj7G,S,EAgBtB,OAnB4C,OAOhC,YAAAxB,MAAV,SAAgBD,GACdJ,KAAKb,YAIP,YAAA4C,aAAA,WACQ,IAAEF,EAAF,KAAEA,OAAQqH,EAAV,KAAUA,IAChBlJ,KAAKkJ,IAAMlJ,KAAK6B,OAAS,KACrBA,GACFA,EAAOu7G,YAAYl0G,IAGzB,EAnBA,CAA4C,EAAAtJ,YA6B5C,cAEE,WAAmBsJ,EACCm0G,EACAC,GAFpB,MAGE,cAAO,K,OAHU,EAAAp0G,MACC,EAAAm0G,eACA,EAAAC,uB,EActB,OAlB6C,OAS3C,YAAAp7G,WAAA,SAAW/B,GACT,IAAMgD,EAAe,IAAI,EAAAtC,aACjBy8G,EAAF,KAAEA,qBAAsBD,EAAxB,KAAwBA,aAK9B,OAJIC,IAAyBA,EAAqB58G,QAChDyC,EAAatD,IAAI,IAAI09G,EAA0BD,IAEjDn6G,EAAatD,IAAIw9G,EAAar7G,UAAU7B,IACjCgD,GAEX,EAlBA,CAA6C,EAAAb,YAAhC,EAAA06G,oBAyBb,kBACE,WAAoBn7G,GAApB,MACE,cAAO,K,OADW,EAAAA,SAElBA,EAAO6F,Q,EAaX,OAhBwC,OAMtC,YAAAjH,YAAA,WACE,IAAMoB,EAAS7B,KAAK6B,OACfA,EAAOnB,QAAWV,KAAKU,SAC1B,YAAMD,YAAW,WACjBoB,EAAO6F,OAAS,EACK,IAAjB7F,EAAO6F,OAAe7F,EAAO86G,wBAC/B96G,EAAOpB,gBAIf,EAhBA,CAAwC,EAAAI,e,maC9SxC,YAIA,SAQA,cAEE,WAAoB28G,GAApB,MACE,cAAO,K,OADW,EAAAA,S,EA8BtB,OAhCwC,OAMtC,sBAAI,oBAAK,C,IAAT,WACE,OAAOx9G,KAAKsxE,Y,gCAId,YAAApvE,WAAA,SAAW/B,GACT,IAAMgD,EAAe,YAAMjB,WAAU,UAAC/B,GAItC,OAHIgD,IAAoCA,EAAczC,QACpDP,EAAWD,KAAKF,KAAKw9G,QAEhBr6G,GAGT,YAAAmuE,SAAA,WACE,GAAItxE,KAAKoG,SACP,MAAMpG,KAAKqG,YACN,GAAIrG,KAAKU,OACd,MAAM,IAAI,EAAA8F,wBAEV,OAAOxG,KAAKw9G,QAIhB,YAAAt9G,KAAA,SAAKE,GACH,YAAMF,KAAI,UAACF,KAAKw9G,OAASp9G,IAE7B,EAhCA,CAAwC,EAAA0G,SAA3B,EAAA8yG,mB,8ECZb,cACA,UAgEa,EAAA6D,eAAiB,IAAI,EAAAC,eAAe,EAAAC,aAKpC,EAAA/H,MAAQ,EAAA6H,gB,oFC/CrB,iBASE,WAAoBrN,EACRpwD,QAAA,IAAAA,MAAoBqwD,EAAUrwD,KADtB,KAAAowD,kBAElBpwG,KAAKggD,IAAMA,EAiCf,OAHS,YAAAiqD,SAAP,SAAmByF,EAAqDj9C,EAAmB39B,GACzF,YADsE,IAAA29B,MAAA,GAC/D,IAAIzyD,KAAKowG,gBAAmBpwG,KAAM0vG,GAAMzF,SAASn1E,EAAO29B,IAnCnD,EAAAzS,IAAoB,WAAM,OAAA/+B,KAAA,OAqC1C,EA5CA,GAAa,EAAAovF,a,maCrBb,YAEA,SAuDA,qBAA6BrG,EAA0Bv3C,GACrD,YADqD,IAAAA,MAAA,GAC9C,SAAmClwD,GACxC,OAAOA,EAAOJ,KAAK,IAAIy7G,EAAkB5T,EAAWv3C,MAIxD,iBACE,WAAoBu3C,EAAkCv3C,QAAA,IAAAA,MAAA,GAAlC,KAAAu3C,YAAkC,KAAAv3C,QAMxD,OAHE,YAAA9wD,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI2zG,EAAoBx1G,EAAYH,KAAKgqG,UAAWhqG,KAAKyyD,SAErF,EAPA,GAAa,EAAAmrD,oBAcb,kBAQE,WAAYl+G,EACQsqG,EACAv3C,QAAA,IAAAA,MAAA,GAFpB,MAGE,YAAM/yD,IAAY,K,OAFA,EAAAsqG,YACA,EAAAv3C,Q,EA0BtB,OApC4C,OAEnC,EAAAhgB,SAAP,SAAyDorE,GAC/C,IAAAC,EAAA,EAAAA,aAAcp+G,EAAA,EAAAA,YACtBo+G,EAAahrD,QAAQpzD,GACrBM,KAAKS,eASC,YAAAs9G,gBAAR,SAAwBD,GACF99G,KAAKN,YACbG,IAAIG,KAAKgqG,UAAUC,SAC7B0L,EAAoBljE,SACpBzyC,KAAKyyD,MACL,IAAIurD,EAAiBF,EAAc99G,KAAKN,gBAIlC,YAAAW,MAAV,SAAgBD,GACdJ,KAAK+9G,gBAAgB,EAAAlM,aAAaD,WAAWxxG,KAGrC,YAAAG,OAAV,SAAiBD,GACfN,KAAK+9G,gBAAgB,EAAAlM,aAAa/1E,YAAYx7B,IAC9CN,KAAKS,eAGG,YAAAD,UAAV,WACER,KAAK+9G,gBAAgB,EAAAlM,aAAaE,kBAClC/xG,KAAKS,eAET,EApCA,CAA4C,EAAAb,YAA/B,EAAA+1G,sBAsCb,MACE,SAAmBmI,EACAp+G,GADA,KAAAo+G,eACA,KAAAp+G,eAFR,EAAAs+G,oB,8EC/GA,EAAAvN,iBAAmB,SAAI/vE,GAAwB,gBAACvgC,GAC3D,IAAK,IAAIwG,EAAI,EAAGvB,EAAMs7B,EAAMjhC,OAAQkH,EAAIvB,IAAQjF,EAAWO,OAAQiG,IACjExG,EAAWD,KAAKwgC,EAAM/5B,IAExBxG,EAAWhB,c,8ECVb,cACA,UAoCa,EAAA8+G,cAAgB,IAAI,EAAAC,cAAc,EAAAC,YAKlC,EAAAC,KAAO,EAAAH,e,oFCnCpB,IAAMI,EAAoB,WACxB,SAASA,IAIP,OAHAv8G,MAAMH,KAAK3B,MACXA,KAAKgU,QAAU,uBACfhU,KAAKqI,KAAO,eACLrI,KAKT,OAFAq+G,EAAiB/0G,UAAYpI,OAAOjB,OAAO6B,MAAMwH,WAE1C+0G,EAViB,GAoBb,EAAAC,aAAiCD,G,8EC3BjC,EAAA9L,YAAe,SAAI/uG,GAA8B,OAAAA,GAAyB,iBAAbA,EAAE/D,QAAd,mBAA4C+D,I,8ECK1G,qBAA0BpD,GACxB,QAASA,GAA2C,mBAArBA,EAAO4B,WAA2D,mBAAvB5B,EAAc4jB,O,8ECL1F,aAgEA,uBACE,OAAO,EAAAu6F,SAAY,K,wVClErB,cACA,UACA,SACA,UAEA,UACA,SACA,SACA,UAaA,qBAA6B9qC,EAA2Bu2B,GACtD,GAAa,MAATv2B,EAAe,CACjB,GAAI,EAAA+qC,oBAAoB/qC,GACtB,OAAO,EAAAgrC,mBAAmBhrC,EAAOu2B,GAC5B,GAAI,EAAAwI,UAAU/+B,GACnB,OAAO,EAAAirC,gBAAgBjrC,EAAOu2B,GACzB,GAAI,EAAAuI,YAAY9+B,GACrB,OAAO,EAAA+8B,cAAc/8B,EAAOu2B,GACtB,GAAI,EAAA2U,WAAWlrC,IAA2B,iBAAVA,EACtC,OAAO,EAAAmrC,iBAAiBnrC,EAAOu2B,GAInC,MAAM,IAAIziG,WAAqB,OAAVksE,GAAA,EAAyBA,IAASA,GAAS,wB,oFClClE,YAEA,SACA,SACA,SAqHA,mB,IAA4B,sDAC3B,IAAIs/B,EAAa3yD,OAAO4yD,kBACpBhJ,EAA2B,KAC1B7tE,EAAYy2E,EAAYA,EAAYnzG,OAAS,GAUjD,OATI,EAAAwyG,YAAY91E,IACd6tE,EAA2B4I,EAAYrvF,MACnCqvF,EAAYnzG,OAAS,GAAoD,iBAAxCmzG,EAAYA,EAAYnzG,OAAS,KACpEszG,EAAqBH,EAAYrvF,QAEV,iBAAT4Y,IAChB42E,EAAqBH,EAAYrvF,OAGjB,OAAdymF,GAA6C,IAAvB4I,EAAYnzG,QAAgBmzG,EAAY,aAAc,EAAAtwG,WACxDswG,EAAY,GAG7B,EAAA2L,SAAYxL,EAAZ,CAAwB,EAAAb,UAAeU,EAAa5I,M,8EC1I7D,YACA,SAgCa,EAAA6U,MAAQ,IAAI,EAAAv8G,WAAkB,EAAA4gD,MAK3C,mBACE,OAAO,EAAA27D,Q,8ECvCT,eAAoBC,EAAgBx3G,GAClC,SAASy3G,IACP,OAAgBA,EAASD,KAAK7Q,MAAa8Q,EAASz3G,QAAS9H,WAI/D,OAFOu/G,EAASD,KAAOA,EAChBC,EAASz3G,QAAUA,EACnBy3G,I,maCLT,YACA,SAKA,SAEA,SAoDA,kB,IAAwB,sDAGtB,GAA2B,IAAvBnM,EAAYnzG,OAAc,CAC5B,IAAI,EAAA0F,QAAQytG,EAAY,IAGtB,OAAOA,EAAY,GAFnBA,EAAcA,EAAY,GAM9B,OAAO,EAAAV,UAAUU,OAAa7tG,GAAW5C,KAAK,IAAI68G,IAGpD,+BAIA,OAHE,YAAAr9G,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIi9G,EAAe9+G,KAE/C,EAJA,GAAa,EAAA6+G,eAWb,kBAKE,WAAYt/G,GAAZ,MACE,YAAMA,IAAY,K,OALZ,EAAAw/G,UAAoB,EACpB,EAAAtM,YAAiC,GACjC,EAAA/sG,cAAgC,G,EAiD1C,OApDuC,OAS3B,YAAAxF,MAAV,SAAgBgC,GACdrC,KAAK4yG,YAAYptG,KAAKnD,IAGd,YAAA7B,UAAV,WACE,IAAMoyG,EAAc5yG,KAAK4yG,YACnBxtG,EAAMwtG,EAAYnzG,OAExB,GAAY,IAAR2F,EACFpF,KAAKN,YAAYP,eACZ,CACL,IAAK,IAAIwH,EAAI,EAAGA,EAAIvB,IAAQpF,KAAKk/G,SAAUv4G,IAAK,CAC9C,IAAMtE,EAAauwG,EAAYjsG,GACzBxD,EAAe,EAAAkzG,kBAAkBr2G,KAAMqC,OAAY0C,EAAW4B,GAEhE3G,KAAK6F,eACP7F,KAAK6F,cAAcL,KAAKrC,GAE1BnD,KAAKH,IAAIsD,GAEXnD,KAAK4yG,YAAc,OAIvB,YAAAlvG,WAAA,SAAWS,EAAgBF,EAChBF,GACT,IAAK/D,KAAKk/G,SAAU,CAClBl/G,KAAKk/G,UAAW,EAEhB,IAAK,IAAIv4G,EAAI,EAAGA,EAAI3G,KAAK6F,cAAcpG,OAAQkH,IAC7C,GAAIA,IAAM5C,EAAY,CACpB,IAAIZ,EAAenD,KAAK6F,cAAcc,GAEtCxD,EAAa1C,cACbT,KAAK6E,OAAO1B,GAIhBnD,KAAK6F,cAAgB,KAGvB7F,KAAKN,YAAYQ,KAAM+D,IAE3B,EApDA,CAAuC,EAAAqmG,iBAA1B,EAAA2U,kB,oFCtFb,YAEA,QACA,SACA,SAoFA,SAASxsE,EAA4C3d,GAC3C,IAAAhwB,EAAA,EAAAA,MAAOq6G,EAAA,EAAAA,OAAQh/G,EAAA,EAAAA,WAGvB,GAFAA,EAAWD,KAAK4E,IAEZ3E,EAAWO,OAAf,CAEO,IAAgB,IAAZy+G,EACT,OAAOh/G,EAAWhB,WAGpB21B,EAAMhwB,MAAQA,EAAQ,EACtB9E,KAAKiqG,SAASn1E,EAAOqqF,IA1CvB,iBAAsBC,EACAC,EACArV,QAFA,IAAAoV,MAAA,GAGpB,IAAID,GAAU,EAWd,OAVI,EAAAG,UAAUD,GACZF,EAAS/+D,OAAOi/D,GAAqB,EAAK,EAAKj/D,OAAOi/D,GAC7C,EAAApN,YAAYoN,KACrBrV,EAAYqV,GAGT,EAAApN,YAAYjI,KACfA,EAAY,EAAA5iG,OAGP,IAAI,EAAA9E,YAAW,SAAAnC,GACpB,IAAMo/G,EAAM,EAAAD,UAAUF,GACjBA,GACCA,EAAUpV,EAAUhqD,MAE1B,OAAOgqD,EAAUC,SAASx3D,EAAU8sE,EAAK,CACvCz6G,MAAO,EAAGq6G,OAAM,EAAEh/G,WAAU,S,maCxElC,YAgDA,iBAAyBm8G,GACvB,OAAO,SAA+B/5G,GACpC,OAAOA,EAAOJ,KAAK,IAAIq9G,EAAclD,MAIzC,iBACE,WAAoBA,GAAA,KAAAA,mBAMtB,OAHE,YAAA36G,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIy9G,EAAsBt/G,EAAYH,KAAKs8G,oBAEvE,EAPA,GAcA,cAME,WAAY58G,EACQ48G,GADpB,MAEE,YAAM58G,IAAY,K,OADA,EAAA48G,mBAJZ,EAAA/K,UAAoB,E,EAiD9B,OApDoC,OAWxB,YAAAlxG,MAAV,SAAgBD,GAGd,GAFAJ,KAAKI,MAAQA,EACbJ,KAAKuxG,UAAW,GACXvxG,KAAK0/G,UAAW,CACnB,IAAIzC,OAAQ,EACZ,IAEEA,GAAWX,EADH,KAAAA,kBACoBl8G,GAC5B,MAAOE,GACP,OAAON,KAAKN,YAAYR,MAAOoB,GAEjC,IAAMizG,EAAoB,EAAAC,eAAeyJ,EAAU,IAAI,EAAAp5G,sBAAsB7D,QACxEuzG,GAAqBA,EAAkB7yG,OAC1CV,KAAK2/G,gBAEL3/G,KAAKH,IAAIG,KAAK0/G,UAAYnM,KAKhC,YAAAoM,cAAA,WACQ,IAAEv/G,EAAF,KAAEA,MAAOmxG,EAAT,KAASA,SAAUmO,EAAnB,KAAmBA,UACrBA,IACF1/G,KAAK6E,OAAO66G,GACZ1/G,KAAK0/G,eAAY36G,EACjB26G,EAAUj/G,eAER8wG,IACFvxG,KAAKI,WAAQ2E,EACb/E,KAAKuxG,UAAW,EAChBvxG,KAAKN,YAAYQ,KAAME,KAI3B,YAAAsD,WAAA,WACE1D,KAAK2/G,iBAGP,YAAA/7G,eAAA,WACE5D,KAAK2/G,iBAET,EApDA,CAAoC,EAAAz7G,wB,8ECzEpC,aAuEA,qBACEmD,EACAyrG,GAEA,OAAO,EAAAD,SAASxrG,EAASyrG,EAAgB,K,oFC3E3C,kBAAuB1yG,GACrB,OAAOA,aAAiB6gB,OAAS2+F,OAAOx/G,K,maCA1C,YA8DA,gCAA2Cy/G,EAAmCzD,GAC5E,OAAO,SAAC75G,GAA0B,OAAAA,EAAOJ,KAAK,IAAI29G,EAAmCD,EAAnD,MAGpC,iBACE,WAAoBA,EACAzD,GADA,KAAAyD,UACA,KAAAzD,cAMtB,OAHE,YAAAz6G,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI+9G,EAA+B5/G,EAAYH,KAAK6/G,QAAS7/G,KAAKo8G,eAE9F,EARA,GAeA,cAIE,WAAY18G,EACAmgH,EACQzD,GAFpB,MAGE,YAAM18G,IAAY,K,OADA,EAAA08G,cAJZ,EAAA4D,QAAkB,EAMD,mBAAZH,IACT,EAAKA,QAAUA,G,EAgCrB,OAzCmD,OAazC,YAAAA,QAAR,SAAgBr8G,EAAQ0qG,GACtB,OAAO1qG,IAAM0qG,GAGL,YAAA7tG,MAAV,SAAgBD,GACd,IAAI8I,EACJ,IACU,IAAAkzG,EAAA,KAAAA,YACRlzG,EAAMkzG,EAAcA,EAAYh8G,GAASA,EACzC,MAAOE,GACP,OAAON,KAAKN,YAAYR,MAAMoB,GAEhC,IAAIiE,GAAS,EACb,GAAIvE,KAAKggH,OACP,IAEEz7G,GAASs7G,EADD,KAAAA,SACS7/G,KAAKkJ,IAAKA,GAC3B,MAAO5I,GACP,OAAON,KAAKN,YAAYR,MAAMoB,QAGhCN,KAAKggH,QAAS,EAEXz7G,IACHvE,KAAKkJ,IAAMA,EACXlJ,KAAKN,YAAYQ,KAAKE,KAG5B,EAzCA,CAAmD,EAAAR,a,0aChFnD,YA8CA,gBAAwBq0B,EACA3sB,GACtB,GAAyB,mBAAd2sB,EACT,MAAM,IAAI1sB,UAAU,+BAEtB,OAAO,SAAChF,GAA0B,OAAAA,EAAOJ,KAAK,IAAI89G,EAAkBhsF,EAAW1xB,GAAQ,EAArD,MAGpC,iBACE,WAAoB0xB,EACA1xB,EACA29G,EACA54G,GAHA,KAAA2sB,YACA,KAAA1xB,SACA,KAAA29G,aACAlgH,KAAAsH,UAMtB,OAHE,YAAA3F,KAAA,SAAKmiB,EAAyBvhB,GAC5B,OAAOA,EAAOP,UAAU,IAAIm+G,EAAoBr8F,EAAU9jB,KAAKi0B,UAAWj0B,KAAKuC,OAAQvC,KAAKkgH,WAAYlgH,KAAKsH,WAEjH,EAVA,GAAa,EAAA24G,oBAiBb,kBAGE,WAAYvgH,EACQu0B,EACA1xB,EACA29G,EACA54G,GAJpB,MAKE,YAAM5H,IAAY,K,OAJA,EAAAu0B,YACA,EAAA1xB,SACA,EAAA29G,aACA,EAAA54G,UANZ,EAAAxC,MAAgB,E,EAkC1B,OAnC4C,OAWlC,YAAAlB,eAAR,SAAuBxD,GACrB,IAAMV,EAAcM,KAAKN,YAEzBA,EAAYQ,KAAKE,GACjBV,EAAYP,WACZa,KAAKS,eAGG,YAAAJ,MAAV,SAAgBD,GACR,IAAC6zB,EAAD,KAACA,UAAW3sB,EAAZ,KAAYA,QACZxC,EAAQ9E,KAAK8E,QACnB,IACiBmvB,EAAUtyB,KAAK2F,GAAWtH,KAAMI,EAAO0E,EAAO9E,KAAKuC,SAEhEvC,KAAK4D,eAAe5D,KAAKkgH,WAAap7G,EAAQ1E,GAEhD,MAAOE,GACPN,KAAKN,YAAYR,MAAMoB,KAIjB,YAAAE,UAAV,WACER,KAAK4D,eAAe5D,KAAKkgH,YAAc,OAAIn7G,IAE/C,EAnCA,CAA4C,EAAAnF,YAA/B,EAAAugH,uB,maCnEb,YAOa,EAAAC,sBAAwC,CACnDC,SAAS,EACTC,UAAU,GAiDZ,oBAA4BhE,EACAj7G,GAC1B,YAD0B,IAAAA,MAAyB,EAAA++G,uBAC5C,SAAC79G,GAA0B,OAAAA,EAAOJ,KAAK,IAAIo+G,EAAiBjE,IAAoBj7G,EAAOg/G,UAAWh/G,EAAvE,aAGpC,iBACE,WAAoBi7G,EACA+D,EACAC,GAFA,KAAAhE,mBACA,KAAA+D,UACA,KAAAC,WAQtB,OALE,YAAA3+G,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UACZ,IAAIw+G,EAAmBrgH,EAAYH,KAAKs8G,iBAAkBt8G,KAAKqgH,QAASrgH,KAAKsgH,YAGnF,EAXA,GAkBA,cAKE,WAAsB5gH,EACF48G,EACAmE,EACAC,GAHpB,MAIE,YAAMhhH,IAAY,K,OAJE,EAAAA,cACF,EAAA48G,mBACA,EAAAmE,WACA,EAAAC,YALZ,EAAAC,WAAY,E,EAmEtB,OAtEuC,OAY3B,YAAAtgH,MAAV,SAAgBD,GACdJ,KAAK2gH,WAAY,EACjB3gH,KAAK4gH,WAAaxgH,EAEbJ,KAAK6gH,aACJ7gH,KAAKygH,SACPzgH,KAAK8gH,OAEL9gH,KAAK+gH,SAAS3gH,KAKZ,YAAA0gH,KAAR,WACQ,IAAEH,EAAF,KAAEA,UAAWC,EAAb,KAAaA,WACfD,IACF3gH,KAAKN,YAAYQ,KAAK0gH,GACtB5gH,KAAK+gH,SAASH,IAEhB5gH,KAAK2gH,WAAY,EACjB3gH,KAAK4gH,gBAAa77G,GAGZ,YAAAg8G,SAAR,SAAiB3gH,GACf,IAAM68G,EAAWj9G,KAAKghH,oBAAoB5gH,GACpC68G,GACJj9G,KAAKH,IAAIG,KAAK6gH,WAAa,EAAArN,eAAeyJ,EAAU,IAAI,EAAAp5G,sBAAsB7D,SAI1E,YAAAghH,oBAAR,SAA4B5gH,GAC1B,IACE,OAAOJ,KAAKs8G,iBAAiBl8G,GAC7B,MAAOE,GAEP,OADAN,KAAKN,YAAYR,MAAMoB,GAChB,OAIH,YAAA2gH,eAAR,WACQ,IAAEJ,EAAF,KAAEA,WAAYH,EAAd,KAAcA,UAChBG,GACFA,EAAWpgH,cAEbT,KAAK6gH,gBAAa97G,EAEd27G,GACF1gH,KAAK8gH,QAIT,YAAAp9G,WAAA,WACE1D,KAAKihH,kBAGP,YAAAr9G,eAAA,WACE5D,KAAKihH,kBAET,EAtEA,CAAuC,EAAA/8G,wB,maCrFvC,YAEA,SAEA,QA2DA,uBAAkCq7G,EACA2B,EACAlX,GAChC,YADgC,IAAAA,MAA2B,EAAA5iG,OACpD,SAAC7E,GACN,IAAI4+G,EAAkB,EAAAC,OAAO7B,GACzB8B,EAAUF,GAAoB5B,EAAMvV,EAAUhqD,MAASh9B,KAAKi9E,IAAYsf,GAC5E,OAAOh9G,EAAOJ,KAAK,IAAIm/G,EAAoBD,EAASF,EAAiBD,EAAgBlX,MAIzF,iBACE,WAAoBqX,EACAF,EACAD,EACAlX,GAHA,KAAAqX,UACA,KAAAF,kBACA,KAAAD,iBACA,KAAAlX,YAQtB,OALE,YAAAroG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIu/G,EAC1BphH,EAAYH,KAAKmhH,gBAAiBnhH,KAAKqhH,QAASrhH,KAAKkhH,eAAgBlhH,KAAKgqG,aAGhF,EAZA,GAmBA,cAIE,WAAYtqG,EACQyhH,EACAE,EACAH,EACAlX,GAJpB,MAKE,YAAMtqG,IAAY,K,OAJA,EAAAyhH,kBACA,EAAAE,UACA,EAAAH,iBACA,EAAAlX,YAElB,EAAKwX,kB,EAsCT,OAhD0C,OAazB,EAAAC,gBAAf,SAAqCthH,GAC3B,IAAA+gH,EAAA,EAAAA,eACR/gH,EAAWQ,yBACXR,EAAWN,IAAI,EAAA2zG,eAAe0N,EAAgB,IAAI,EAAAr9G,sBAAsB1D,MAGlE,YAAAqhH,gBAAR,WACU,IAAA78F,EAAA,KAAAA,OACJA,EAMF3kB,KAAK2kB,OAAyDA,EAAOslF,SAASjqG,KAAMA,KAAKqhH,SAEzFrhH,KAAKH,IAAIG,KAAK2kB,OAAyD3kB,KAAKgqG,UAAUC,SACpFsX,EAAsBE,gBAAwBzhH,KAAKqhH,QAASrhH,QAKxD,YAAAK,MAAV,SAAgBD,GACTJ,KAAKmhH,iBACRnhH,KAAKwhH,kBAEP,YAAMnhH,MAAK,UAACD,IAId,YAAA2B,aAAA,WACE/B,KAAK2kB,YAAS5f,EACd/E,KAAKgqG,UAAY,KACjBhqG,KAAKkhH,eAAiB,MAE1B,EAhDA,CAA0C,EAAAh9G,wB,gIC7E1C,iBAOI,WACYw9G,EACA99F,GADA,KAAA89F,kBACA,KAAA99F,iBARJ,KAAA+9F,SAA6C,GAC7C,KAAAC,kBAAsD,GAmFlE,OAzEI,YAAAtzF,WAAA,SAAW6rB,EAAan5B,GAAxB,WAwBI,OAvBKhhB,KAAK2hH,SAASxnE,KACfn6C,KAAK2hH,SAASxnE,GAAO,IAAI12C,SAAQ,SAACR,EAASC,GACvC,IAAM2lE,EAAS9sD,SAASC,cAAc,UAChC,QAAE,IAAA5U,aAAA,IAAQ,GAAR,EAAe,IAAA+Y,kBAAA,IAAa,EAAb,KAEvBjf,OAAOge,KAAKiB,GACPrd,SAAQ,SAAAoG,GACL2/D,EAAOrnB,aAAat4C,EAAKiX,EAAWjX,OAG5C2/D,EAAOg5C,OAAS,WAAM,OAAA5+G,KACtB4lE,EAAOi5C,mBAAqB,WAAM,OAAA7+G,KAClC4lE,EAAOk5C,QAAU,SAAAzyE,UACN,EAAKqyE,SAASxnE,GACrBj3C,EAAOosC,IAEXu5B,EAAOzhE,MAAQA,EACfyhE,EAAO1uB,IAAMA,EAEbp+B,SAASvD,KAAKwgC,YAAY6vB,OAI3B7oE,KAAK2hH,SAASxnE,IAGzB,YAAA6nE,YAAA,SAAYC,EAAgBjhG,GAA5B,WACI,OAAOvd,QAAQysB,IAAI+xF,EAAK9iG,KAAI,SAAAvD,GAAO,SAAK0S,WAAW1S,EAAhB,OAC9BoI,MAAK,gBAGd,YAAAk+F,cAAA,SAActmG,EAAaoF,GAA3B,WAkCI,OAjCKhhB,KAAK4hH,kBAAkBhmG,KACxB5b,KAAK4hH,kBAAkBhmG,GAAO,IAAInY,SAAQ,SAACR,EAASC,GACxC,cAAAi/G,SACFC,OADE,SACe,WAAa,UAEpC,GAAI,EAAKV,gBAAgBW,cAAcD,GAAM,CACzC,IAAME,EAAkBvmG,SAASC,cAAc,QAE/CsmG,EAAgBC,GAAK,SACrBD,EAAgBF,IAAMA,EACtBE,EAAgBrmG,KAAOL,EAEvB0mG,EAAgBT,OAAS,WACrB5+G,KAGJq/G,EAAgBP,QAAU,kBACf,EAAKH,kBAAkBhmG,GAC9B1Y,KAGJ6Y,SAAS2vC,KAAK1S,YAAYspE,QAE1B,EAAK1+F,eAAelb,IAAIkT,EAAK,CACzBqtC,aAAa,EACbxwC,QAAS,CAAEgM,OAAQ,4BAElBT,MAAK,WAAM,OAAA/gB,OACXmhB,MAAMlhB,OAKhBlD,KAAK4hH,kBAAkBhmG,IAGlC,YAAA4mG,eAAA,SAAeP,EAAgBjhG,GAA/B,WACI,OAAOvd,QAAQysB,IAAI+xF,EAAK9iG,KAAI,SAAAvD,GAAO,SAAKsmG,cAActmG,EAAnB,OAC9BoI,MAAK,gBAElB,EArFA,G,2FCjBA,aAEA,SACA,SAEA,qBACI,OAAO,IAAI,UACP,IAAI,UACJ,EAAAg5B,yB,8EpjBPR,cAAS,wBAAAj2C,QACT,cAAS,0BACT,aAAS,0BAGT,aAAS,qB,sYqjBLT,IAAI07G,EAAkB/4G,EAAQ,KAC1Bg5G,EAAeh5G,EAAQ,IACvBi5G,EAAkBj5G,EAAQ,KA0F9B,SAASk5G,EAAOxiH,EAAOyiH,GACtB,OAAIA,EAAKD,OACDC,EAAKC,OAASL,EAAgBriH,GAAS6/C,mBAAmB7/C,GAG3DA,EAiBR,SAAS2iH,EAAQC,GAChB,IAAIC,EAAaD,EAAIp9G,QAAQ,KAC7B,OAAoB,IAAhBq9G,EACI,GAEDD,EAAIt8G,MAAMu8G,EAAa,GAG/B,SAASnlE,EAAMklE,EAAKH,GAGnB,IAAIK,EAnFL,SAA8BL,GAC7B,IAAIt+G,EAEJ,OAAQs+G,EAAKM,aACZ,IAAK,QACJ,OAAO,SAAUj6G,EAAK9I,EAAOyzG,GAC5BtvG,EAAS,aAAa6+G,KAAKl6G,GAE3BA,EAAMA,EAAI0pB,QAAQ,WAAY,IAEzBruB,QAKoBQ,IAArB8uG,EAAY3qG,KACf2qG,EAAY3qG,GAAO,IAGpB2qG,EAAY3qG,GAAK3E,EAAO,IAAMnE,GAR7ByzG,EAAY3qG,GAAO9I,GAWtB,IAAK,UACJ,OAAO,SAAU8I,EAAK9I,EAAOyzG,GAC5BtvG,EAAS,UAAU6+G,KAAKl6G,GACxBA,EAAMA,EAAI0pB,QAAQ,QAAS,IAEtBruB,OAG2BQ,IAArB8uG,EAAY3qG,GAKvB2qG,EAAY3qG,GAAO,GAAG3D,OAAOsuG,EAAY3qG,GAAM9I,GAJ9CyzG,EAAY3qG,GAAO,CAAC9I,GAHpByzG,EAAY3qG,GAAO9I,GAUtB,QACC,OAAO,SAAU8I,EAAK9I,EAAOyzG,QACH9uG,IAArB8uG,EAAY3qG,GAKhB2qG,EAAY3qG,GAAO,GAAG3D,OAAOsuG,EAAY3qG,GAAM9I,GAJ9CyzG,EAAY3qG,GAAO9I,IA0CPijH,CAFhBR,EAAOH,EAAa,CAACS,YAAa,QAASN,IAMvCS,EAAMpiH,OAAOjB,OAAO,MAExB,MAAmB,iBAAR+iH,EACHM,GAGRN,EAAMA,EAAIh0B,OAAOp8D,QAAQ,SAAU,MAMnCowF,EAAItxF,MAAM,KAAK5uB,SAAQ,SAAUsiB,GAChC,IAAIm+F,EAAQn+F,EAAMwN,QAAQ,MAAO,KAAKlB,MAAM,KAGxCxoB,EAAMq6G,EAAMpU,QACZtZ,EAAM0tB,EAAM9jH,OAAS,EAAI8jH,EAAM1kG,KAAK,UAAO9Z,EAI/C8wF,OAAc9wF,IAAR8wF,EAAoB,KAAO8sB,EAAgB9sB,GAEjDqtB,EAAUP,EAAgBz5G,GAAM2sF,EAAKytB,MAG/BpiH,OAAOge,KAAKokG,GAAKjrD,OAAOryD,QAAO,SAAUzB,EAAQ2E,GACvD,IAAI2sF,EAAMytB,EAAIp6G,GAQd,OAPI4P,QAAQ+8E,IAAuB,WAAf,EAAOA,KAAqB7uF,MAAM7B,QAAQ0wF,GAE7DtxF,EAAO2E,GA3DV,SAASs6G,EAAW/vC,GACnB,OAAIzsE,MAAM7B,QAAQsuE,GACVA,EAAMpb,OACc,WAAjB,EAAOob,GACV+vC,EAAWtiH,OAAOge,KAAKu0D,IAAQpb,MAAK,SAAU36B,EAAGC,GACvD,OAAOyiB,OAAO1iB,GAAK0iB,OAAOziB,MACxBxe,KAAI,SAAUjW,GAChB,OAAOuqE,EAAMvqE,MAIRuqE,EAgDS+vC,CAAW3tB,GAEzBtxF,EAAO2E,GAAO2sF,EAGRtxF,IACLrD,OAAOjB,OAAO,QA3BTqjH,EA8BTx7G,EAAQi7G,QAAUA,EAClBj7G,EAAQg2C,MAAQA,EAEhBh2C,EAAQ8vC,UAAY,SAAU6rE,EAAKZ,IAShB,KAFlBA,EAAOH,EANQ,CACdE,QAAQ,EACRE,QAAQ,EACRK,YAAa,QAGgBN,IAErBxqD,OACRwqD,EAAKxqD,KAAO,cAGb,IAAI6qD,EApLL,SAA+BL,GAC9B,OAAQA,EAAKM,aACZ,IAAK,QACJ,OAAO,SAAUj6G,EAAK9I,EAAO0E,GAC5B,OAAiB,OAAV1E,EAAiB,CACvBwiH,EAAO15G,EAAK25G,GACZ,IACA/9G,EACA,KACC+Z,KAAK,IAAM,CACZ+jG,EAAO15G,EAAK25G,GACZ,IACAD,EAAO99G,EAAO+9G,GACd,KACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,KAGT,IAAK,UACJ,OAAO,SAAU3V,EAAK9I,GACrB,OAAiB,OAAVA,EAAiBwiH,EAAO15G,EAAK25G,GAAQ,CAC3CD,EAAO15G,EAAK25G,GACZ,MACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,KAGT,QACC,OAAO,SAAU3V,EAAK9I,GACrB,OAAiB,OAAVA,EAAiBwiH,EAAO15G,EAAK25G,GAAQ,CAC3CD,EAAO15G,EAAK25G,GACZ,IACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,MAmJM6kG,CAAsBb,GAEtC,OAAOY,EAAMviH,OAAOge,KAAKukG,GAAKprD,KAAKwqD,EAAKxqD,MAAMl5C,KAAI,SAAUjW,GAC3D,IAAI2sF,EAAM4tB,EAAIv6G,GAEd,QAAYnE,IAAR8wF,EACH,MAAO,GAGR,GAAY,OAARA,EACH,OAAO+sB,EAAO15G,EAAK25G,GAGpB,GAAI77G,MAAM7B,QAAQ0wF,GAAM,CACvB,IAAItxF,EAAS,GAUb,OARAsxF,EAAInvF,QAAQ5D,SAAQ,SAAU6gH,QAChB5+G,IAAT4+G,GAIJp/G,EAAOiB,KAAK09G,EAAUh6G,EAAKy6G,EAAMp/G,EAAO9E,YAGlC8E,EAAOsa,KAAK,KAGpB,OAAO+jG,EAAO15G,EAAK25G,GAAQ,IAAMD,EAAO/sB,EAAKgtB,MAC3CxhG,QAAO,SAAU7d,GACnB,OAAOA,EAAE/D,OAAS,KAChBof,KAAK,KAAO,IAGhB/W,EAAQ6T,SAAW,SAAUqnG,EAAKH,GACjC,MAAO,CACNjnG,IAAKonG,EAAItxF,MAAM,KAAK,IAAM,GAC1BkyF,MAAO9lE,EAAMilE,EAAQC,GAAMH,M,uHC5N7B,4BAEA,UACA,6BAMA,4BAEA,aAGI,WACYgB,EACA5nD,EACA6nD,EACAnlE,QAAA,IAAAA,MAAA,IAHA,KAAAklE,kBACA,KAAA5nD,sBACA,KAAA6nD,UACA,KAAAnlE,WAER3+C,KAAK+jH,OAAS/jH,KAAK2+C,SAAS1N,OAAS,IAAI,EAAA+yE,aAyHjD,OAtHI,YAAAjuD,YAAA,SAAe,EAAa,GAA5B,WACUqP,EAAiBplE,KAAKikH,qBAAqBroG,EAAKoF,GAChDkjG,EAAgBlkH,KAAKmkH,kBAAqBvoG,EAAKwpD,GAErD,GAAI8+C,EACA,OAAOzgH,QAAQR,QAAQihH,GAG3B,IAAM3sF,EAAUv3B,KAAK6jH,gBAAgBxK,cAAcr5G,KAAKokH,aAAaxoG,GAAMwpD,GAE3E,OAAO,IAAI3hE,SAAQ,SAACR,EAASC,GACzB,IAAMmhH,EAAiB,WACnB,IAAM1rG,EAAW,EAAKsjD,oBAAoBqoD,WAAc,GAEpD3rG,EAASD,QAAU,KAAOC,EAASD,OAAS,KAC5C,EAAK6rG,cAAc3oG,EAAKwpD,EAAgBzsD,GACxC1V,EAAQ0V,IAERzV,EAAOyV,IAIf4e,EAAQsqF,OAASwC,EACjB9sF,EAAQwqF,QAAUsC,EAClB9sF,EAAQitF,QAAUH,EAClB9sF,EAAQktF,UAAYJ,EAEhBj/C,EAAe5gD,mBAAmB,YAClC4gD,EAAe5gD,QAAQq6B,YAAW,WAAM,OAAAtnB,EAAA,WACxC6tC,EAAe5gD,QAAQgpD,SAGvB,UAAUpI,EAAe5gD,UACzB4gD,EAAe5gD,QAAQR,MAAK,WAAM,OAAAuT,EAAA,WAGtCA,EAAQupF,KAAK,EAAK7kD,oBAAoByoD,cAAct/C,QAI5D,YAAA18D,IAAA,SAAO,EAAa,GAChB,OAAO1I,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,UAGvD,YAAA6R,KAAA,SAAQ,EAAa,GACjB,OAAOz3B,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,WAGvD,YAAA8R,IAAA,SAAO,EAAa,GAChB,OAAO13B,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,UAGvD,YAAA++F,MAAA,SAAS,EAAa,GAClB,OAAO3kH,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,YAGvD,YAAA+R,OAAA,SAAU,EAAa,GACnB,OAAO33B,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,aAG/C,YAAAq+F,qBAAR,SAA6BroG,EAAaoF,GACtC,IAAM4jG,EAA0C,CAC5C37D,aAAa,EACb47D,cAAc,EACdpsG,QAAS,CACLgM,OAAQ,qCAEZmB,OAAQ,OAGNk/F,EAAY9kH,KAAK8jH,QAAQp7G,IAAI,cAUnC,OARIo8G,GAAaF,EAAensG,UAAYzY,KAAK+kH,gBAAgBnpG,EAAKoF,KAClE4jG,EAAensG,QAAQ,gBAAkBqsG,GAGzC9jG,GAAWA,EAAQxI,MAAQosG,EAAensG,UAC1CmsG,EAAensG,QAAQ,gBAAkB,oBAGtC,UAAM,GAAImsG,EAAgB5jG,IAG7B,YAAAojG,aAAR,SAAqBxoG,GACjB,OAAK5b,KAAK2+C,SAAS7B,MAAQ,eAAejhC,KAAKD,GACpCA,EAGD5b,KAAK2+C,SAAS7B,KAAKlqB,QAAQ,MAAO,IAAG,IAAIhX,EAAIgX,QAAQ,MAAO,KAGlE,YAAAoyF,oBAAR,SAA4BhkG,GAGxB,MAAgC,SAFjBA,EAAQ4E,QAAU,OAEnBgkE,eAA2B9wE,QAAQkI,EAAQiwB,QAGrD,YAAAkzE,kBAAR,SAA6BvoG,EAAaoF,GACtC,OAAIhhB,KAAKglH,oBAAoBhkG,GAClBhhB,KAAK+jH,OAAOkB,KAAQrpG,EAAKoF,GAG7B,MAGH,YAAAujG,cAAR,SAAyB3oG,EAAaoF,EAAyBrI,GACvD3Y,KAAKglH,oBAAoBhkG,IACzBhhB,KAAK+jH,OAAOmB,MAAMtpG,EAAKoF,EAASrI,IAIhC,YAAAosG,gBAAR,SAAwBnpG,EAAaoF,GACjC,QAAIA,IAAWA,EAAQ4E,QAA2C,QAAjC5E,EAAQ4E,OAAOgkE,gBAIzC,2CAA2C/tE,KAAKD,EAAI8V,MAAM,KAAK,KAE9E,EAlIA,G,4FCZA,+BAUA,OATI,YAAA2wF,cAAA,SAAcD,GACV,IAAMr3F,EAAOhP,SAASC,cAAc,QAEpC,SACI+O,EAAKo6F,SACLp6F,EAAKo6F,QAAQC,UACbr6F,EAAKo6F,QAAQC,SAAShD,KAGlC,EAVA,G,6ICiBA,iBAOI,WACYV,EACA99F,GADA,KAAA89F,kBACA,KAAA99F,iBARJ,KAAAyhG,aAAiD,GACjD,KAAAC,sBAA0D,GAsFtE,OA5EI,YAAA1gD,eAAA,SAAezqB,EAAan5B,GAA5B,WA2BI,OA1BKhhB,KAAKqlH,aAAalrE,KACnBn6C,KAAKqlH,aAAalrE,GAAO,IAAI12C,SAAQ,SAACR,EAASC,GAC3C,IAAMqiH,EAAaxpG,SAASC,cAAc,QACpC,QAAE,IAAAwpG,eAAA,IAAU,GAAV,EAAiB,IAAArlG,kBAAA,IAAa,EAAb,KAEzBjf,OAAOge,KAAKiB,GACPrd,SAAQ,SAAAoG,GACLq8G,EAAW/jE,aAAat4C,EAAKiX,EAAWjX,OAGhDq8G,EAAW1D,OAAS,WAAM,OAAA5+G,KAC1BsiH,EAAWxD,QAAU,SAAAzyE,UACV,EAAK+1E,aAAalrE,GACzBj3C,EAAOosC,IAEXi2E,EAAWnD,IAAM,aACjBmD,EAAWtpG,KAAOk+B,EAEdqrE,GAAWzpG,SAAS2vC,KAAK+5D,SAAS,GAClC1pG,SAAS2vC,KAAKid,aAAa48C,EAAYxpG,SAAS2vC,KAAK+5D,SAAS,IAE9D1pG,SAAS2vC,KAAK1S,YAAYusE,OAK/BvlH,KAAKqlH,aAAalrE,IAG7B,YAAAurE,gBAAA,SAAgBzD,EAAgBjhG,GAAhC,WACI,OAAOvd,QAAQysB,IAAI+xF,EAAK9iG,KAAI,SAAAvD,GAAO,SAAKgpD,eAAehpD,EAApB,OAC9BoI,MAAK,gBAGd,YAAA2hG,kBAAA,SAAkB/pG,EAAaoF,GAA/B,WAkCI,OAjCKhhB,KAAKslH,sBAAsB1pG,KAC5B5b,KAAKslH,sBAAsB1pG,GAAO,IAAInY,SAAQ,SAACR,EAASC,GAC5C,cAAAi/G,gBAAA,SACFC,EAAMD,EAAW,WAAa,UAEpC,GAAI,EAAKT,gBAAgBW,cAAcD,GAAM,CACzC,IAAMwD,EAAsB7pG,SAASC,cAAc,QAEnD4pG,EAAoBrD,GAAK,QACzBqD,EAAoBxD,IAAMD,EAAW,WAAa,UAClDyD,EAAoB3pG,KAAOL,EAE3BgqG,EAAoB/D,OAAS,WACzB5+G,KAGJ2iH,EAAoB7D,QAAU,SAAAzyE,UACnB,EAAKg2E,sBAAsB1pG,GAClC1Y,EAAOosC,IAGXvzB,SAAS2vC,KAAK1S,YAAY4sE,QAE1B,EAAKhiG,eAAelb,IAAIkT,EAAK,CACzBqtC,aAAa,EACbxwC,QAAS,CAAEgM,OAAQ,cAElBT,MAAK,WAAM,OAAA/gB,OACXmhB,MAAMlhB,OAKhBlD,KAAKslH,sBAAsB1pG,IAGtC,YAAAiqG,mBAAA,SAAmB5D,EAAgBjhG,GAAnC,WACI,OAAOvd,QAAQysB,IAAI+xF,EAAK9iG,KAAI,SAAAvD,GAAO,SAAK+pG,kBAAkB/pG,EAAvB,OAC9BoI,MAAK,gBAElB,EAxFA,G,2FCjBA,aAEA,SACA,SAEA,qBACI,OAAO,IAAI,UACP,IAAI,UACJ,EAAAg5B,yB,wYCPR,IAAIylE,EAAkB/4G,EAAQ,KAC1Bg5G,EAAeh5G,EAAQ,IACvBi5G,EAAkBj5G,EAAQ,KA0F9B,SAASk5G,EAAOxiH,EAAOyiH,GACtB,OAAIA,EAAKD,OACDC,EAAKC,OAASL,EAAgBriH,GAAS6/C,mBAAmB7/C,GAG3DA,EAiBR,SAAS2iH,EAAQC,GAChB,IAAIC,EAAaD,EAAIp9G,QAAQ,KAC7B,OAAoB,IAAhBq9G,EACI,GAEDD,EAAIt8G,MAAMu8G,EAAa,GAG/B,SAASnlE,EAAMklE,EAAKH,GAGnB,IAAIK,EAnFL,SAA8BL,GAC7B,IAAIt+G,EAEJ,OAAQs+G,EAAKM,aACZ,IAAK,QACJ,OAAO,SAAUj6G,EAAK9I,EAAOyzG,GAC5BtvG,EAAS,aAAa6+G,KAAKl6G,GAE3BA,EAAMA,EAAI0pB,QAAQ,WAAY,IAEzBruB,QAKoBQ,IAArB8uG,EAAY3qG,KACf2qG,EAAY3qG,GAAO,IAGpB2qG,EAAY3qG,GAAK3E,EAAO,IAAMnE,GAR7ByzG,EAAY3qG,GAAO9I,GAWtB,IAAK,UACJ,OAAO,SAAU8I,EAAK9I,EAAOyzG,GAC5BtvG,EAAS,UAAU6+G,KAAKl6G,GACxBA,EAAMA,EAAI0pB,QAAQ,QAAS,IAEtBruB,OAG2BQ,IAArB8uG,EAAY3qG,GAKvB2qG,EAAY3qG,GAAO,GAAG3D,OAAOsuG,EAAY3qG,GAAM9I,GAJ9CyzG,EAAY3qG,GAAO,CAAC9I,GAHpByzG,EAAY3qG,GAAO9I,GAUtB,QACC,OAAO,SAAU8I,EAAK9I,EAAOyzG,QACH9uG,IAArB8uG,EAAY3qG,GAKhB2qG,EAAY3qG,GAAO,GAAG3D,OAAOsuG,EAAY3qG,GAAM9I,GAJ9CyzG,EAAY3qG,GAAO9I,IA0CPijH,CAFhBR,EAAOH,EAAa,CAACS,YAAa,QAASN,IAMvCS,EAAMpiH,OAAOjB,OAAO,MAExB,MAAmB,iBAAR+iH,EACHM,GAGRN,EAAMA,EAAIh0B,OAAOp8D,QAAQ,SAAU,MAMnCowF,EAAItxF,MAAM,KAAK5uB,SAAQ,SAAUsiB,GAChC,IAAIm+F,EAAQn+F,EAAMwN,QAAQ,MAAO,KAAKlB,MAAM,KAGxCxoB,EAAMq6G,EAAMpU,QACZtZ,EAAM0tB,EAAM9jH,OAAS,EAAI8jH,EAAM1kG,KAAK,UAAO9Z,EAI/C8wF,OAAc9wF,IAAR8wF,EAAoB,KAAO8sB,EAAgB9sB,GAEjDqtB,EAAUP,EAAgBz5G,GAAM2sF,EAAKytB,MAG/BpiH,OAAOge,KAAKokG,GAAKjrD,OAAOryD,QAAO,SAAUzB,EAAQ2E,GACvD,IAAI2sF,EAAMytB,EAAIp6G,GAQd,OAPI4P,QAAQ+8E,IAAuB,WAAf,EAAOA,KAAqB7uF,MAAM7B,QAAQ0wF,GAE7DtxF,EAAO2E,GA3DV,SAASs6G,EAAW/vC,GACnB,OAAIzsE,MAAM7B,QAAQsuE,GACVA,EAAMpb,OACc,WAAjB,EAAOob,GACV+vC,EAAWtiH,OAAOge,KAAKu0D,IAAQpb,MAAK,SAAU36B,EAAGC,GACvD,OAAOyiB,OAAO1iB,GAAK0iB,OAAOziB,MACxBxe,KAAI,SAAUjW,GAChB,OAAOuqE,EAAMvqE,MAIRuqE,EAgDS+vC,CAAW3tB,GAEzBtxF,EAAO2E,GAAO2sF,EAGRtxF,IACLrD,OAAOjB,OAAO,QA3BTqjH,EA8BTx7G,EAAQi7G,QAAUA,EAClBj7G,EAAQg2C,MAAQA,EAEhBh2C,EAAQ8vC,UAAY,SAAU6rE,EAAKZ,IAShB,KAFlBA,EAAOH,EANQ,CACdE,QAAQ,EACRE,QAAQ,EACRK,YAAa,QAGgBN,IAErBxqD,OACRwqD,EAAKxqD,KAAO,cAGb,IAAI6qD,EApLL,SAA+BL,GAC9B,OAAQA,EAAKM,aACZ,IAAK,QACJ,OAAO,SAAUj6G,EAAK9I,EAAO0E,GAC5B,OAAiB,OAAV1E,EAAiB,CACvBwiH,EAAO15G,EAAK25G,GACZ,IACA/9G,EACA,KACC+Z,KAAK,IAAM,CACZ+jG,EAAO15G,EAAK25G,GACZ,IACAD,EAAO99G,EAAO+9G,GACd,KACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,KAGT,IAAK,UACJ,OAAO,SAAU3V,EAAK9I,GACrB,OAAiB,OAAVA,EAAiBwiH,EAAO15G,EAAK25G,GAAQ,CAC3CD,EAAO15G,EAAK25G,GACZ,MACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,KAGT,QACC,OAAO,SAAU3V,EAAK9I,GACrB,OAAiB,OAAVA,EAAiBwiH,EAAO15G,EAAK25G,GAAQ,CAC3CD,EAAO15G,EAAK25G,GACZ,IACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,MAmJM6kG,CAAsBb,GAEtC,OAAOY,EAAMviH,OAAOge,KAAKukG,GAAKprD,KAAKwqD,EAAKxqD,MAAMl5C,KAAI,SAAUjW,GAC3D,IAAI2sF,EAAM4tB,EAAIv6G,GAEd,QAAYnE,IAAR8wF,EACH,MAAO,GAGR,GAAY,OAARA,EACH,OAAO+sB,EAAO15G,EAAK25G,GAGpB,GAAI77G,MAAM7B,QAAQ0wF,GAAM,CACvB,IAAItxF,EAAS,GAUb,OARAsxF,EAAInvF,QAAQ5D,SAAQ,SAAU6gH,QAChB5+G,IAAT4+G,GAIJp/G,EAAOiB,KAAK09G,EAAUh6G,EAAKy6G,EAAMp/G,EAAO9E,YAGlC8E,EAAOsa,KAAK,KAGpB,OAAO+jG,EAAO15G,EAAK25G,GAAQ,IAAMD,EAAO/sB,EAAKgtB,MAC3CxhG,QAAO,SAAU7d,GACnB,OAAOA,EAAE/D,OAAS,KAChBof,KAAK,KAAO,IAGhB/W,EAAQ6T,SAAW,SAAUqnG,EAAKH,GACjC,MAAO,CACNjnG,IAAKonG,EAAItxF,MAAM,KAAK,IAAM,GAC1BkyF,MAAO9lE,EAAMilE,EAAQC,GAAMH,M,uHJ5N7B,4BAEA,UACA,6BAMA,4BAEA,aAGI,WACYgB,EACA5nD,EACA6nD,EACAnlE,QAAA,IAAAA,MAAA,IAHA,KAAAklE,kBACA,KAAA5nD,sBACA,KAAA6nD,UACA,KAAAnlE,WAER3+C,KAAK+jH,OAAS/jH,KAAK2+C,SAAS1N,OAAS,IAAI,EAAA+yE,aAyHjD,OAtHI,YAAAjuD,YAAA,SAAe,EAAa,GAA5B,WACUqP,EAAiBplE,KAAKikH,qBAAqBroG,EAAKoF,GAChDkjG,EAAgBlkH,KAAKmkH,kBAAqBvoG,EAAKwpD,GAErD,GAAI8+C,EACA,OAAOzgH,QAAQR,QAAQihH,GAG3B,IAAM3sF,EAAUv3B,KAAK6jH,gBAAgBxK,cAAcr5G,KAAKokH,aAAaxoG,GAAMwpD,GAE3E,OAAO,IAAI3hE,SAAQ,SAACR,EAASC,GACzB,IAAMmhH,EAAiB,WACnB,IAAM1rG,EAAW,EAAKsjD,oBAAoBqoD,WAAc,GAEpD3rG,EAASD,QAAU,KAAOC,EAASD,OAAS,KAC5C,EAAK6rG,cAAc3oG,EAAKwpD,EAAgBzsD,GACxC1V,EAAQ0V,IAERzV,EAAOyV,IAIf4e,EAAQsqF,OAASwC,EACjB9sF,EAAQwqF,QAAUsC,EAClB9sF,EAAQitF,QAAUH,EAClB9sF,EAAQktF,UAAYJ,EAEhBj/C,EAAe5gD,mBAAmB,YAClC4gD,EAAe5gD,QAAQq6B,YAAW,WAAM,OAAAtnB,EAAA,WACxC6tC,EAAe5gD,QAAQgpD,SAGvB,UAAUpI,EAAe5gD,UACzB4gD,EAAe5gD,QAAQR,MAAK,WAAM,OAAAuT,EAAA,WAGtCA,EAAQupF,KAAK,EAAK7kD,oBAAoByoD,cAAct/C,QAI5D,YAAA18D,IAAA,SAAO,EAAa,GAChB,OAAO1I,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,UAGvD,YAAA6R,KAAA,SAAQ,EAAa,GACjB,OAAOz3B,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,WAGvD,YAAA8R,IAAA,SAAO,EAAa,GAChB,OAAO13B,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,UAGvD,YAAA++F,MAAA,SAAS,EAAa,GAClB,OAAO3kH,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,YAGvD,YAAA+R,OAAA,SAAU,EAAa,GACnB,OAAO33B,KAAK+1D,YAAYn6C,EAAG,yBAAOoF,GAAO,CAAE4E,OAAQ,aAG/C,YAAAq+F,qBAAR,SAA6BroG,EAAaoF,GACtC,IAAM4jG,EAA0C,CAC5C37D,aAAa,EACb47D,cAAc,EACdpsG,QAAS,CACLgM,OAAQ,qCAEZmB,OAAQ,OAGNk/F,EAAY9kH,KAAK8jH,QAAQp7G,IAAI,cAUnC,OARIo8G,GAAaF,EAAensG,UAAYzY,KAAK+kH,gBAAgBnpG,EAAKoF,KAClE4jG,EAAensG,QAAQ,gBAAkBqsG,GAGzC9jG,GAAWA,EAAQxI,MAAQosG,EAAensG,UAC1CmsG,EAAensG,QAAQ,gBAAkB,oBAGtC,UAAM,GAAImsG,EAAgB5jG,IAG7B,YAAAojG,aAAR,SAAqBxoG,GACjB,OAAK5b,KAAK2+C,SAAS7B,MAAQ,eAAejhC,KAAKD,GACpCA,EAGD5b,KAAK2+C,SAAS7B,KAAKlqB,QAAQ,MAAO,IAAG,IAAIhX,EAAIgX,QAAQ,MAAO,KAGlE,YAAAoyF,oBAAR,SAA4BhkG,GAGxB,MAAgC,SAFjBA,EAAQ4E,QAAU,OAEnBgkE,eAA2B9wE,QAAQkI,EAAQiwB,QAGrD,YAAAkzE,kBAAR,SAA6BvoG,EAAaoF,GACtC,OAAIhhB,KAAKglH,oBAAoBhkG,GAClBhhB,KAAK+jH,OAAOkB,KAAQrpG,EAAKoF,GAG7B,MAGH,YAAAujG,cAAR,SAAyB3oG,EAAaoF,EAAyBrI,GACvD3Y,KAAKglH,oBAAoBhkG,IACzBhhB,KAAK+jH,OAAOmB,MAAMtpG,EAAKoF,EAASrI,IAIhC,YAAAosG,gBAAR,SAAwBnpG,EAAaoF,GACjC,QAAIA,IAAWA,EAAQ4E,QAA2C,QAAjC5E,EAAQ4E,OAAOgkE,gBAIzC,2CAA2C/tE,KAAKD,EAAI8V,MAAM,KAAK,KAE9E,EAlIA,G,4FKVA,cAEA,aAII,WACYo0F,EACAnnE,GADA,KAAAmnE,eACA,KAAAnnE,WA2BhB,OAxBI,YAAApH,SAAA,SAAS37B,EAAase,EAA8Bu3B,EAAuBvrC,GACvE,IAAM2nB,EAAO7tC,KAAK8lH,aAAar8B,MAAMzpF,KAAKokH,aAAaxoG,GAAMse,EAAMhU,GAEnE2R,OAAOsY,iBAAiB,UAAU,SAAS41E,IACvCluF,OAAOyY,oBAAoB,SAAUy1E,GAEjCt0D,GACAA,OAKR11C,SAASvD,KAAKwgC,YAAYnL,GAC1BA,EAAKovB,SACLlhD,SAASvD,KAAKq7B,YAAYhG,IAGtB,YAAAu2E,aAAR,SAAqBxoG,GACjB,OAAK5b,KAAK2+C,UAAa3+C,KAAK2+C,SAAS7B,OAAQ,EAAAkpE,cAAcpqG,GAIpD,EAAAqqG,UAAUjmH,KAAK2+C,SAAS7B,KAAMlhC,GAH1BA,GAKnB,EAjCA,G,2FAFA,cAEA,aAII,WACYkqG,EACAnnE,GADA,KAAAmnE,eACA,KAAAnnE,WA2BhB,OAxBI,YAAApH,SAAA,SAAS37B,EAAase,EAA8Bu3B,EAAuBvrC,GACvE,IAAM2nB,EAAO7tC,KAAK8lH,aAAar8B,MAAMzpF,KAAKokH,aAAaxoG,GAAMse,EAAMhU,GAEnE2R,OAAOsY,iBAAiB,UAAU,SAAS41E,IACvCluF,OAAOyY,oBAAoB,SAAUy1E,GAEjCt0D,GACAA,OAKR11C,SAASvD,KAAKwgC,YAAYnL,GAC1BA,EAAKovB,SACLlhD,SAASvD,KAAKq7B,YAAYhG,IAGtB,YAAAu2E,aAAR,SAAqBxoG,GACjB,OAAK5b,KAAK2+C,UAAa3+C,KAAK2+C,SAAS7B,OAAQ,EAAAkpE,cAAcpqG,GAIpD,EAAAqqG,UAAUjmH,KAAK2+C,SAAS7B,KAAMlhC,GAH1BA,GAKnB,EAjCA,G,iICJO,mB,SACA,sB,UACA,wB,4jBCEQ,SAAkBxb,GAC7B,OAAOA,qBAAkB,OAA8B4G,cAAvD,K,2HCLG,oB,icCCP,IAAIy7G,EAAkB/4G,EAAQ,KAC1Bg5G,EAAeh5G,EAAQ,IACvBi5G,EAAkBj5G,EAAQ,KA0F9B,SAASk5G,EAAOxiH,EAAOyiH,GACtB,OAAIA,EAAKD,OACDC,EAAKC,OAASL,EAAgBriH,GAAS6/C,mBAAmB7/C,GAG3DA,EAiBR,SAAS2iH,EAAQC,GAChB,IAAIC,EAAaD,EAAIp9G,QAAQ,KAC7B,OAAoB,IAAhBq9G,EACI,GAEDD,EAAIt8G,MAAMu8G,EAAa,GAG/B,SAASnlE,EAAMklE,EAAKH,GAGnB,IAAIK,EAnFL,SAA8BL,GAC7B,IAAIt+G,EAEJ,OAAQs+G,EAAKM,aACZ,IAAK,QACJ,OAAO,SAAUj6G,EAAK9I,EAAOyzG,GAC5BtvG,EAAS,aAAa6+G,KAAKl6G,GAE3BA,EAAMA,EAAI0pB,QAAQ,WAAY,IAEzBruB,QAKoBQ,IAArB8uG,EAAY3qG,KACf2qG,EAAY3qG,GAAO,IAGpB2qG,EAAY3qG,GAAK3E,EAAO,IAAMnE,GAR7ByzG,EAAY3qG,GAAO9I,GAWtB,IAAK,UACJ,OAAO,SAAU8I,EAAK9I,EAAOyzG,GAC5BtvG,EAAS,UAAU6+G,KAAKl6G,GACxBA,EAAMA,EAAI0pB,QAAQ,QAAS,IAEtBruB,OAG2BQ,IAArB8uG,EAAY3qG,GAKvB2qG,EAAY3qG,GAAO,GAAG3D,OAAOsuG,EAAY3qG,GAAM9I,GAJ9CyzG,EAAY3qG,GAAO,CAAC9I,GAHpByzG,EAAY3qG,GAAO9I,GAUtB,QACC,OAAO,SAAU8I,EAAK9I,EAAOyzG,QACH9uG,IAArB8uG,EAAY3qG,GAKhB2qG,EAAY3qG,GAAO,GAAG3D,OAAOsuG,EAAY3qG,GAAM9I,GAJ9CyzG,EAAY3qG,GAAO9I,IA0CPijH,CAFhBR,EAAOH,EAAa,CAACS,YAAa,QAASN,IAMvCS,EAAMpiH,OAAOjB,OAAO,MAExB,MAAmB,iBAAR+iH,EACHM,GAGRN,EAAMA,EAAIh0B,OAAOp8D,QAAQ,SAAU,MAMnCowF,EAAItxF,MAAM,KAAK5uB,SAAQ,SAAUsiB,GAChC,IAAIm+F,EAAQn+F,EAAMwN,QAAQ,MAAO,KAAKlB,MAAM,KAGxCxoB,EAAMq6G,EAAMpU,QACZtZ,EAAM0tB,EAAM9jH,OAAS,EAAI8jH,EAAM1kG,KAAK,UAAO9Z,EAI/C8wF,OAAc9wF,IAAR8wF,EAAoB,KAAO8sB,EAAgB9sB,GAEjDqtB,EAAUP,EAAgBz5G,GAAM2sF,EAAKytB,MAG/BpiH,OAAOge,KAAKokG,GAAKjrD,OAAOryD,QAAO,SAAUzB,EAAQ2E,GACvD,IAAI2sF,EAAMytB,EAAIp6G,GAQd,OAPI4P,QAAQ+8E,IAAuB,WAAf,EAAOA,KAAqB7uF,MAAM7B,QAAQ0wF,GAE7DtxF,EAAO2E,GA3DV,SAASs6G,EAAW/vC,GACnB,OAAIzsE,MAAM7B,QAAQsuE,GACVA,EAAMpb,OACc,WAAjB,EAAOob,GACV+vC,EAAWtiH,OAAOge,KAAKu0D,IAAQpb,MAAK,SAAU36B,EAAGC,GACvD,OAAOyiB,OAAO1iB,GAAK0iB,OAAOziB,MACxBxe,KAAI,SAAUjW,GAChB,OAAOuqE,EAAMvqE,MAIRuqE,EAgDS+vC,CAAW3tB,GAEzBtxF,EAAO2E,GAAO2sF,EAGRtxF,IACLrD,OAAOjB,OAAO,QA3BTqjH,EA8BTx7G,EAAQi7G,QAAUA,EAClBj7G,EAAQg2C,MAAQA,EAEhBh2C,EAAQ8vC,UAAY,SAAU6rE,EAAKZ,IAShB,KAFlBA,EAAOH,EANQ,CACdE,QAAQ,EACRE,QAAQ,EACRK,YAAa,QAGgBN,IAErBxqD,OACRwqD,EAAKxqD,KAAO,cAGb,IAAI6qD,EApLL,SAA+BL,GAC9B,OAAQA,EAAKM,aACZ,IAAK,QACJ,OAAO,SAAUj6G,EAAK9I,EAAO0E,GAC5B,OAAiB,OAAV1E,EAAiB,CACvBwiH,EAAO15G,EAAK25G,GACZ,IACA/9G,EACA,KACC+Z,KAAK,IAAM,CACZ+jG,EAAO15G,EAAK25G,GACZ,IACAD,EAAO99G,EAAO+9G,GACd,KACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,KAGT,IAAK,UACJ,OAAO,SAAU3V,EAAK9I,GACrB,OAAiB,OAAVA,EAAiBwiH,EAAO15G,EAAK25G,GAAQ,CAC3CD,EAAO15G,EAAK25G,GACZ,MACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,KAGT,QACC,OAAO,SAAU3V,EAAK9I,GACrB,OAAiB,OAAVA,EAAiBwiH,EAAO15G,EAAK25G,GAAQ,CAC3CD,EAAO15G,EAAK25G,GACZ,IACAD,EAAOxiH,EAAOyiH,IACbhkG,KAAK,MAmJM6kG,CAAsBb,GAEtC,OAAOY,EAAMviH,OAAOge,KAAKukG,GAAKprD,KAAKwqD,EAAKxqD,MAAMl5C,KAAI,SAAUjW,GAC3D,IAAI2sF,EAAM4tB,EAAIv6G,GAEd,QAAYnE,IAAR8wF,EACH,MAAO,GAGR,GAAY,OAARA,EACH,OAAO+sB,EAAO15G,EAAK25G,GAGpB,GAAI77G,MAAM7B,QAAQ0wF,GAAM,CACvB,IAAItxF,EAAS,GAUb,OARAsxF,EAAInvF,QAAQ5D,SAAQ,SAAU6gH,QAChB5+G,IAAT4+G,GAIJp/G,EAAOiB,KAAK09G,EAAUh6G,EAAKy6G,EAAMp/G,EAAO9E,YAGlC8E,EAAOsa,KAAK,KAGpB,OAAO+jG,EAAO15G,EAAK25G,GAAQ,IAAMD,EAAO/sB,EAAKgtB,MAC3CxhG,QAAO,SAAU7d,GACnB,OAAOA,EAAE/D,OAAS,KAChBof,KAAK,KAAO,IAGhB/W,EAAQ6T,SAAW,SAAUqnG,EAAKH,GACjC,MAAO,CACNjnG,IAAKonG,EAAItxF,MAAM,KAAK,IAAM,GAC1BkyF,MAAO9lE,EAAMilE,EAAQC,GAAMH,M,qHT5N7B,6BAEA,UACA,6BAMA,4BAEA,aAGI,WACYgB,EACA5nD,EACA6nD,EACAnlE,QAAA,IAAAA,MAAA,IAHA,KAAAklE,kBACA,KAAA5nD,sBACA,KAAA6nD,UACA,KAAAnlE,WAER3+C,KAAK+jH,OAAS/jH,KAAK2+C,SAAS1N,OAAS,IAAI,EAAA+yE,aAyHjD,OAtHI,YAAAjuD,YAAA,SAAqBn6C,EAAaoF,GAAlC,WACUokD,EAAiBplE,KAAKikH,qBAAqBroG,EAAKoF,GAChDkjG,EAAgBlkH,KAAKmkH,kBAAqBvoG,EAAKwpD,GAErD,GAAI8+C,EACA,OAAOzgH,QAAQR,QAAQihH,GAG3B,IAAM3sF,EAAUv3B,KAAK6jH,gBAAgBxK,cAAcr5G,KAAKokH,aAAaxoG,GAAMwpD,GAE3E,OAAO,IAAI3hE,SAAQ,SAACR,EAASC,GACzB,IAAMmhH,EAAiB,WACnB,IAAM1rG,EAAW,EAAKsjD,oBAAoBqoD,WAAW/sF,GAEjD5e,EAASD,QAAU,KAAOC,EAASD,OAAS,KAC5C,EAAK6rG,cAAc3oG,EAAKwpD,EAAgBzsD,GACxC1V,EAAQ0V,IAERzV,EAAOyV,IAIf4e,EAAQsqF,OAASwC,EACjB9sF,EAAQwqF,QAAUsC,EAClB9sF,EAAQitF,QAAUH,EAClB9sF,EAAQktF,UAAYJ,EAEhBj/C,EAAe5gD,mBAAmB,YAClC4gD,EAAe5gD,QAAQq6B,YAAW,WAAM,OAAAtnB,EAAA,WACxC6tC,EAAe5gD,QAAQgpD,SAGvB,UAAUpI,EAAe5gD,UACzB4gD,EAAe5gD,QAAQR,MAAK,WAAM,OAAAuT,EAAA,WAGtCA,EAAQupF,KAAK,EAAK7kD,oBAAoByoD,cAAct/C,QAI5D,YAAA18D,IAAA,SAAakT,EAAaoF,GACtB,OAAOhhB,KAAK+1D,YAAYn6C,EAAG,cAAOoF,EAAO,CAAE4E,OAAQ,UAGvD,YAAA6R,KAAA,SAAc7b,EAAaoF,GACvB,OAAOhhB,KAAK+1D,YAAYn6C,EAAG,cAAOoF,EAAO,CAAE4E,OAAQ,WAGvD,YAAA8R,IAAA,SAAa9b,EAAaoF,GACtB,OAAOhhB,KAAK+1D,YAAYn6C,EAAG,cAAOoF,EAAO,CAAE4E,OAAQ,UAGvD,YAAA++F,MAAA,SAAe/oG,EAAaoF,GACxB,OAAOhhB,KAAK+1D,YAAYn6C,EAAG,cAAOoF,EAAO,CAAE4E,OAAQ,YAGvD,YAAA+R,OAAA,SAAgB/b,EAAaoF,GACzB,OAAOhhB,KAAK+1D,YAAYn6C,EAAG,cAAOoF,EAAO,CAAE4E,OAAQ,aAG/C,YAAAq+F,qBAAR,SAA6BroG,EAAaoF,GACtC,IAAM4jG,EAA0C,CAC5C37D,aAAa,EACb47D,cAAc,EACdpsG,QAAS,CACLgM,OAAQ,qCAEZmB,OAAQ,OAGNk/F,EAAY9kH,KAAK8jH,QAAQp7G,IAAI,cAUnC,OARIo8G,GAAaF,EAAensG,UAAYzY,KAAK+kH,gBAAgBnpG,EAAKoF,KAClE4jG,EAAensG,QAAQ,gBAAkBqsG,GAGzC9jG,GAAWA,EAAQxI,MAAQosG,EAAensG,UAC1CmsG,EAAensG,QAAQ,gBAAkB,oBAGtC,UAAM,GAAImsG,EAAgB5jG,IAG7B,YAAAojG,aAAR,SAAqBxoG,GACjB,OAAK5b,KAAK2+C,SAAS7B,MAAQ,eAAejhC,KAAKD,GACpCA,EAGD5b,KAAK2+C,SAAS7B,KAAKlqB,QAAQ,MAAO,IAAG,IAAIhX,EAAIgX,QAAQ,MAAO,KAGlE,YAAAoyF,oBAAR,SAA4BhkG,GAGxB,MAAgC,SAFjBA,EAAQ4E,QAAU,OAEnBgkE,eAA2B9wE,QAAQkI,EAAQiwB,QAGrD,YAAAkzE,kBAAR,SAA6BvoG,EAAaoF,GACtC,OAAIhhB,KAAKglH,oBAAoBhkG,GAClBhhB,KAAK+jH,OAAOkB,KAAQrpG,EAAKoF,GAG7B,MAGH,YAAAujG,cAAR,SAAyB3oG,EAAaoF,EAAyBrI,GACvD3Y,KAAKglH,oBAAoBhkG,IACzBhhB,KAAK+jH,OAAOmB,MAAMtpG,EAAKoF,EAASrI,IAIhC,YAAAosG,gBAAR,SAAwBnpG,EAAaoF,GACjC,QAAIA,IAAWA,EAAQ4E,QAA2C,QAAjC5E,EAAQ4E,OAAOgkE,gBAIzC,2CAA2C/tE,KAAKD,EAAI8V,MAAM,KAAK,KAE9E,EAlIA,G,2GtjBXA,cAAS,wBAAA3qB,QACT,cAAS,0BACT,aAAS,0BAGT,aAAS,qB,sFANT,aAAS,iBAAAA,QACT,aAAS,uBAAAA,QACT,cAAS,4BAET,aAAS,6BACT,aAAS,mCACT,cAAS,iC,iRALT,aAAS,cAAAA,QAYT,aAAS,4BACT,cAAS,4BACT,aAAS,yBACT,cAAS,4BACT,cAAS,8BACT,aAAS,wB,mMgkBbT,mBACI4d,GAEA,MAC2D,mBAA/CA,EAAiC3iB,WACQ,mBAAzC2iB,EAAgCX,O,8ECNhD,mBACIW,GAEA,OAAOA,I,8ECPX,mBACImQ,GAEA,OAAOA,I,qXCHX,QACA,SAmCA,qB,IACI,sDAEA,IAAI2mF,EAA4Cn4F,EAC5CtC,EAAkC,GAED,WAAjC,EAAOsC,EAAKA,EAAK7jB,OAAS,MAC1Bg8G,EAAWn4F,EAAK5c,MAAM,GAAI,GAC1Bsa,EAAU,EAAH,YAAQA,EAAYsC,EAAKA,EAAK7jB,OAAS,KAG1C,QAAAg6G,qBAAA,UAER,OAAO,SAAC3kF,EAAOnQ,GACX,IAAMo2F,EAAW,EAAAmL,UACbzK,EACKp6F,QAAO,SAAAud,GAAW,WAAAA,EAAQn/B,UAC1B0f,KAAI,SAAAyf,GAAW,SAAAunF,WAAWvnF,EAAX,OAHP,CAIf9J,GAEF,OAAO2kF,EAAc3kF,EAAOimF,GAAYjmF,EAAQimF,K,8ECvDxD,aACA,SAGA,mBACIn8E,EACA0P,EACAttB,GAEA,MAAuB,mBAAZ4d,EACA,IAAI,UAAUA,EAAS0P,EAActtB,GAGzC,IAAI,UACP,UAAgB4d,EAAS,CAAE66E,cAAez4F,GAAWA,EAAQy4F,gBAC7DnrE,EACAttB,K,yFChBR,SAEA,mBACIjQ,EACA+T,EACAb,GAEA,qBACO,UAAalT,EAAM+T,EAASb,GAAK,CACpC/kB,OAAO,M,oFCTf,YAAS,EAAAoD,WAAA,EAAAA,WACT,aAAS,EAAA25G,sBAAA,EAAAA,sBACT,aAAS,EAAAe,kBAAA,EAAAA,kBAET,aAAS,EAAA36G,WAAA,EAAAA,WAGT,YAAS,EAAAyE,QAAA,EAAAA,QACT,aAAS,EAAA8yG,gBAAA,EAAAA,gBACT,aAAS,EAAA5D,cAAA,EAAAA,cACT,aAAS,EAAA3D,aAAA,EAAAA,aAGT,aAAS,EAAA+L,KAAA,EAAAA,KAAM,EAAAH,cAAA,EAAAA,cACf,YAAS,EAAA72G,MAAA,EAAAA,MAAO,EAAAH,eAAA,EAAAA,eAChB,aAAS,EAAA2uG,MAAA,EAAAA,MAAO,EAAA6H,eAAA,EAAAA,eAChB,cAAS,EAAA2I,eAAA,EAAAA,eAAgB,EAAAC,wBAAA,EAAAA,wBACzB,cAAS,EAAAC,qBAAA,EAAAA,qBAAsB,EAAAC,cAAA,EAAAA,cAC/B,aAAS,EAAAlW,UAAA,EAAAA,UAGT,YAAS,EAAAxvG,aAAA,EAAAA,aACT,YAAS,EAAAjB,WAAA,EAAAA,WAGT,aAAS,EAAAiyG,aAAA,EAAAA,aAAc,EAAAR,iBAAA,EAAAA,iBAGvB,aAAS,EAAAjuG,KAAA,EAAAA,KACT,aAAS,EAAA8/C,KAAA,EAAAA,KACT,aAAS,EAAAxe,SAAA,EAAAA,SACT,cAAS,EAAA8hF,aAAA,EAAAA,aAGT,aAAS,EAAA7V,wBAAA,EAAAA,wBACT,aAAS,EAAAE,WAAA,EAAAA,WACT,aAAS,EAAArqG,wBAAA,EAAAA,wBACT,aAAS,EAAAvB,oBAAA,EAAAA,oBACT,aAAS,EAAAq5G,aAAA,EAAAA,aAGT,cAAS,EAAAmI,aAAA,EAAAA,aACT,cAAS,EAAAC,iBAAA,EAAAA,iBACT,aAAS,EAAAC,cAAA,EAAAA,cACT,aAAS,EAAAphH,OAAA,EAAAA,OACT,aAAS,EAAAovB,MAAA,EAAAA,MACT,aAAS,EAAAh1B,MAAA,EAAAA,MACT,cAAS,EAAAinH,SAAA,EAAAA,SACT,aAAS,EAAA5hG,KAAA,EAAAA,KACT,cAAS,EAAAwqB,UAAA,EAAAA,UACT,cAAS,EAAAq3E,iBAAA,EAAAA,iBACT,cAAS,EAAAC,SAAA,EAAAA,SACT,cAAS,EAAAC,IAAA,EAAAA,IACT,cAAS,EAAAC,SAAA,EAAAA,SACT,aAAS,EAAAxyF,MAAA,EAAAA,MACT,aAAS,EAAAyyF,MAAA,EAAAA,MACT,aAAS,EAAAriG,GAAA,EAAAA,GACT,cAAS,EAAAsiG,kBAAA,EAAAA,kBACT,cAAS,EAAAC,MAAA,EAAAA,MACT,cAAS,EAAAC,UAAA,EAAAA,UACT,aAAS,EAAA7tD,KAAA,EAAAA,KACT,cAAS,EAAA8tD,MAAA,EAAAA,MACT,aAAS,EAAAxiG,WAAA,EAAAA,WACT,aAAS,EAAAyiG,MAAA,EAAAA,MACT,cAAS,EAAAC,MAAA,EAAAA,MACT,aAAS,EAAAv3B,IAAA,EAAAA,IACT,cAAS,EAAAma,UAAA,GAAAA,UAGT,cAAS,EAAAzkG,MAAA,GAAAA,MACT,cAAS,EAAAm5G,MAAA,GAAAA,MAMT,cAAS,EAAAx9G,OAAA,GAAAA,Q,8EC7ET,YACA,SACA,SAGA,wBACEqwG,EACAxyG,EACAC,GAEA,GAAIuyG,EAAgB,CAClB,GAAIA,aAA0B,EAAA9xG,WAC5B,OAAwB8xG,EAG1B,GAAIA,EAAe,EAAA3xG,cACjB,OAAO2xG,EAAe,EAAA3xG,gBAI1B,OAAK2xG,GAAmBxyG,GAAUC,EAI3B,IAAI,EAAAS,WAAW8xG,EAAgBxyG,EAAOC,GAHpC,IAAI,EAAAS,WAAW,EAAAD,S,maCrB1B,IAUA,cAEE,WAAsBqqG,EACA0F,GADtB,MAEE,YAAM1F,EAAW0F,IAAK,K,OAFF,EAAA1F,YACA,EAAA0F,O,EA8BxB,OAjCoC,OAO3B,YAAAzF,SAAP,SAAgBn1E,EAAW29B,GACzB,YADyB,IAAAA,MAAA,GACrBA,EAAQ,EACH,YAAMw3C,SAAQ,UAACn1E,EAAO29B,IAE/BzyD,KAAKyyD,MAAQA,EACbzyD,KAAK80B,MAAQA,EACb90B,KAAKgqG,UAAU8F,MAAM9vG,MACdA,OAGF,YAAAwxD,QAAP,SAAe18B,EAAU29B,GACvB,OAAQA,EAAQ,GAAKzyD,KAAKU,OACxB,YAAM8wD,QAAO,UAAC18B,EAAO29B,GACrBzyD,KAAKgwG,SAASl7E,EAAO29B,IAGf,YAAAm9C,eAAV,SAAyB5F,EAA2BjtF,EAAU01C,GAI5D,YAJ4D,IAAAA,MAAA,GAI7C,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkBzyD,KAAKyyD,MAAQ,EAC5D,YAAMm9C,eAAc,UAAC5F,EAAWjtF,EAAI01C,GAGtCu3C,EAAU8F,MAAM9vG,OAE3B,EAjCA,CAVA,OAUoCmH,aAAvB,EAAAw2G,e,maCTb,IAiBA,cACE,WAAY3T,EAAsB0F,G,OAChC,cAAO,KAeX,OAjB+B,OActB,YAAAzF,SAAP,SAAgBn1E,EAAW29B,GACzB,YADyB,IAAAA,MAAA,GAClBzyD,MAEX,EAjBA,CAjBA,MAiB+Ba,cAAlB,EAAAsvG,U,maClBb,IAEA,2B,+CACA,OADoC,OACpC,EADA,CAFA,OAEoCjpG,gBAAvB,EAAAw2G,kB,maCFb,cASA,cAEE,WAAsB1T,EACA0F,GADtB,MAEE,YAAM1F,EAAW0F,IAAK,K,OAFF,EAAA1F,YACA,EAAA0F,O,EAmCxB,OAtCmC,OAOvB,YAAAE,eAAV,SAAyB5F,EAA0BjtF,EAAU01C,GAE3D,YAF2D,IAAAA,MAAA,GAE7C,OAAVA,GAAkBA,EAAQ,EACrB,YAAMm9C,eAAc,UAAC5F,EAAWjtF,EAAI01C,IAG7Cu3C,EAAU9uD,QAAQ11C,KAAKxF,MAIhBgqG,EAAUG,YAAcH,EAAUG,UAAY,EAAAqd,UAAUC,aAC7Dzd,EAAU8F,MAAM3uG,KAAK6oG,EAAW,UAG1B,YAAA2F,eAAV,SAAyB3F,EAA0BjtF,EAAU01C,GAI3D,QAJ2D,IAAAA,MAAA,GAI5C,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkBzyD,KAAKyyD,MAAQ,EACnE,OAAO,YAAMk9C,eAAc,UAAC3F,EAAWjtF,EAAI01C,GAKZ,IAA7Bu3C,EAAU9uD,QAAQz7C,SACpB,EAAA+nH,UAAUE,eAAe3qG,GACzBitF,EAAUG,eAAYplG,IAK5B,EAtCA,CARA,OAQmCoC,aAAtB,EAAAg3G,c,+FCTb,IAAIwJ,EAAa,EACXC,EAAkBnkH,QAAA,UAClBokH,EAAwC,GAO9C,SAASC,EAAmB3tD,GAC1B,OAAIA,KAAU0tD,WACLA,EAAc1tD,IACd,GAQE,EAAAqtD,UAAY,CACvBC,aAAA,SAAaM,GACX,IAAM5tD,EAASwtD,IAGf,OAFAE,EAAc1tD,IAAU,EACxBytD,EAAS5jG,MAAK,WAAM,OAAA8jG,EAAmB3tD,IAAW4tD,OAC3C5tD,GAGTutD,eAAA,SAAevtD,GACb2tD,EAAmB3tD,KAOV,EAAA6tD,UAAY,CACvB58B,QAAO,WACL,OAAOlqF,OAAOge,KAAK2oG,GAAepoH,U,maCrCtC,IAEA,2B,+CA2BA,OA3BmC,OAC1B,YAAAqwG,MAAP,SAAanrF,GAEX3kB,KAAKuwG,QAAS,EACdvwG,KAAKmqG,eAAYplG,EAEV,IACH7F,EADGg8C,EAAA,KAAAA,QAEHp2C,GAAiB,EACjB4C,EAAgBwzC,EAAQz7C,OAC5BklB,EAASA,GAAUu2B,EAAQi0D,QAE3B,GACE,GAAIjwG,EAAQylB,EAAO6sC,QAAQ7sC,EAAOmQ,MAAOnQ,EAAO8tC,OAC9C,cAEO3tD,EAAQ4C,IAAUid,EAASu2B,EAAQi0D,UAI9C,GAFAnvG,KAAKuwG,QAAS,EAEVrxG,EAAO,CACT,OAAS4F,EAAQ4C,IAAUid,EAASu2B,EAAQi0D,UAC1CxqF,EAAOlkB,cAET,MAAMvB,IAGZ,EA3BA,CAFA,OAEmCgI,gBAAtB,EAAAg3G,iB,8ECHb,cACA,UAiCa,EAAAmI,wBAA0B,IAAI,EAAA4B,wBAAwB,EAAAC,sBAKtD,EAAA9B,eAAiB,EAAAC,yB,maCvC9B,IASA,cAEE,WAAsBrc,EACA0F,GADtB,MAEE,YAAM1F,EAAW0F,IAAK,K,OAFF,EAAA1F,YACA,EAAA0F,O,EAkCxB,OArC6C,OAOjC,YAAAE,eAAV,SAAyB5F,EAAoCjtF,EAAU01C,GAErE,YAFqE,IAAAA,MAAA,GAEvD,OAAVA,GAAkBA,EAAQ,EACrB,YAAMm9C,eAAc,UAAC5F,EAAWjtF,EAAI01C,IAG7Cu3C,EAAU9uD,QAAQ11C,KAAKxF,MAIhBgqG,EAAUG,YAAcH,EAAUG,UAAYge,uBACnD,WAAM,OAAAne,EAAU8F,MAAV,YAEA,YAAAH,eAAV,SAAyB3F,EAAoCjtF,EAAU01C,GAIrE,QAJqE,IAAAA,MAAA,GAItD,OAAVA,GAAkBA,EAAQ,GAAiB,OAAVA,GAAkBzyD,KAAKyyD,MAAQ,EACnE,OAAO,YAAMk9C,eAAc,UAAC3F,EAAWjtF,EAAI01C,GAKZ,IAA7Bu3C,EAAU9uD,QAAQz7C,SACpB2oH,qBAAqBrrG,GACrBitF,EAAUG,eAAYplG,IAK5B,EArCA,CATA,OAS6CoC,aAAhC,EAAA+gH,wB,maCRb,IAEA,2B,+CA2BA,OA3B6C,OACpC,YAAApY,MAAP,SAAanrF,GAEX3kB,KAAKuwG,QAAS,EACdvwG,KAAKmqG,eAAYplG,EAEV,IACH7F,EADGg8C,EAAA,KAAAA,QAEHp2C,GAAiB,EACjB4C,EAAgBwzC,EAAQz7C,OAC5BklB,EAASA,GAAUu2B,EAAQi0D,QAE3B,GACE,GAAIjwG,EAAQylB,EAAO6sC,QAAQ7sC,EAAOmQ,MAAOnQ,EAAO8tC,OAC9C,cAEO3tD,EAAQ4C,IAAUid,EAASu2B,EAAQi0D,UAI9C,GAFAnvG,KAAKuwG,QAAS,EAEVrxG,EAAO,CACT,OAAS4F,EAAQ4C,IAAUid,EAASu2B,EAAQi0D,UAC1CxqF,EAAOlkB,cAET,MAAMvB,IAGZ,EA3BA,CAFA,OAE6CgI,gBAAhC,EAAA+gH,2B,+aCHb,aAKA,cAOE,WAAY7X,EACOiY,QADP,IAAAjY,MAAsCmW,QAC/B,IAAA8B,MAAoBjoE,OAAO4yD,mBAD9C,MAEE,YAAM5C,GAAiB,WAAM,mBAAW,K,OADvB,EAAAiY,YAJZ,EAAA36C,MAAgB,EAChB,EAAA5oE,OAAiB,E,EAiC1B,OAtC0C,OAiBjC,YAAAgrG,MAAP,WAKE,IAHM,IACF5wG,EAAYylB,EADTu2B,EAAD,KAACA,QAASmtE,EAAV,KAAUA,WAGR1jG,EAASu2B,EAAQ,KAAOv2B,EAAO8tC,OAAS41D,IAC9CntE,EAAQi0D,QACRnvG,KAAK0tE,MAAQ/oD,EAAO8tC,QAEhBvzD,EAAQylB,EAAO6sC,QAAQ7sC,EAAOmQ,MAAOnQ,EAAO8tC,WAKlD,GAAIvzD,EAAO,CACT,KAAOylB,EAASu2B,EAAQi0D,SACtBxqF,EAAOlkB,cAET,MAAMvB,IAjCO,EAAAopH,gBAA0B,GAoC7C,EAtCA,CAHA,OAG0CphH,gBAA7B,EAAAo/G,uBA4Cb,kBAIE,WAAsBtc,EACA0F,EACA5qG,QAAA,IAAAA,MAAgBklG,EAAUllG,OAAS,GAFzD,MAGE,YAAMklG,EAAW0F,IAAK,K,OAHF,EAAA1F,YACA,EAAA0F,OACA,EAAA5qG,QAJZ,EAAAyrG,QAAkB,EAM1B,EAAKzrG,MAAQklG,EAAUllG,MAAQA,E,EAkDnC,OA1DsC,OAW7B,YAAAmlG,SAAP,SAAgBn1E,EAAW29B,GACzB,QADyB,IAAAA,MAAA,IACpBzyD,KAAK+c,GACR,OAAO,YAAMktF,SAAQ,UAACn1E,EAAO29B,GAE/BzyD,KAAKuwG,QAAS,EAKd,IAAM5rF,EAAS,IAAI4hG,EAAcvmH,KAAKgqG,UAAWhqG,KAAK0vG,MAEtD,OADA1vG,KAAKH,IAAI8kB,GACFA,EAAOslF,SAASn1E,EAAO29B,IAGtB,YAAAm9C,eAAV,SAAyB5F,EAAiCjtF,EAAU01C,QAAA,IAAAA,MAAA,GAClEzyD,KAAKyyD,MAAQu3C,EAAUt8B,MAAQjb,EACxB,IAAAvX,EAAA,EAAAA,QAGP,OAFAA,EAAQ11C,KAAKxF,MACZk7C,EAAoCmd,KAAKkuD,EAAcgC,cACjD,GAGC,YAAA5Y,eAAV,SAAyB3F,EAAiCjtF,EAAU01C,QAAA,IAAAA,MAAA,IAI1D,YAAAu9C,SAAV,SAAmBl7E,EAAU29B,GAC3B,IAAoB,IAAhBzyD,KAAKuwG,OACP,OAAO,YAAMP,SAAQ,UAACl7E,EAAO29B,IAInB,EAAA81D,YAAd,SAA6B7qF,EAAqBC,GAChD,OAAID,EAAE+0B,QAAU90B,EAAE80B,MACZ/0B,EAAE54B,QAAU64B,EAAE74B,MACT,EACE44B,EAAE54B,MAAQ64B,EAAE74B,MACd,GAEC,EAED44B,EAAE+0B,MAAQ90B,EAAE80B,MACd,GAEC,GAGd,EA1DA,CAAsC,EAAAtrD,aAAzB,EAAAo/G,iB,8ECjDb,YAOA,wBAAgC9C,GAC9B,QAASA,IAAQA,aAAe,EAAAnhH,YAAmC,mBAAbmhH,EAAIthH,MAAgD,mBAAlBshH,EAAIzhH,a,0FCP9F,YACA,SAEA,QACA,SACA,QACA,SAgPA,SAASywC,EAAqD3d,GAA9D,WAEUxR,EAAA,EAAAA,KAAMnjB,EAAA,EAAAA,WAAYq2B,EAAA,EAAAA,OAClBgyF,EAAA,EAAAA,aAAcxnH,EAAA,EAAAA,QAASgpG,EAAA,EAAAA,UACzB1jG,EAAA,EAAAA,QACN,IAAKA,EAAS,CACZA,EAAUkwB,EAAOlwB,QAAU,IAAI,EAAA+rG,aAO/B,IACEmW,EAAava,MAAMjtG,EAAasiB,EAAI,QANtB,W,IAAC,sDACf,IAAMljB,EAAQqoH,EAAUhpH,QAAU,EAAIgpH,EAAU,GAAKA,EACrD,EAAK5oH,IAAImqG,EAAUC,SAAuBye,EAAc,EAAG,CAAEtoH,MAAK,EAAEkG,QAAO,SAK3E,MAAOhG,GACPgG,EAAQpH,MAAMoB,IAIlBN,KAAKH,IAAIyG,EAAQtE,UAAU7B,IAQ7B,SAASuoH,EAAqD5zF,GACpD,IAAA10B,EAAA,EAAAA,MAAOkG,EAAA,EAAAA,QACfA,EAAQpG,KAAKE,GACbkG,EAAQnH,WAnGV,wBAAgBsnH,EACd+B,EACA1V,EACA9I,GAEA,GAAI8I,EAAgB,CAClB,IAAI,EAAAb,YAAYa,GAId,OAAO,W,IAAC,sDAAmB,OAAA2T,EAAa+B,EAAcxe,GAAU,aAAI1mF,GAAMlgB,KACxE,EAAA+b,KAAI,SAACmE,GAAS,SAAAne,QAAQme,GAAQwvF,EAAc,aAAIxvF,GAAQwvF,EAA1C,QAJhB9I,EAAY8I,EAShB,OAAO,W,IAAqB,sDAC1B,IACIxsG,EADEtF,EAAUhB,KAEVw2B,EAAS,CACbx1B,QAAO,EACPsF,QAAO,EACPkiH,aAAY,EACZxe,UAAS,GAEX,OAAO,IAAI,EAAA1nG,YAAc,SAAAnC,GACvB,GAAK6pG,EAmBE,CACL,IAAMl1E,EAA0B,CAC9BxR,KAAI,EAAEnjB,WAAU,EAAEq2B,OAAM,GAE1B,OAAOwzE,EAAUC,SAA2Bx3D,EAAU,EAAG3d,GAtBzD,IAAKxuB,EAAS,CACZA,EAAU,IAAI,EAAA+rG,aAMd,IACEmW,EAAava,MAAMjtG,EAAasiB,EAAI,QANtB,W,IAAC,sDACfhd,EAAQpG,KAAKuoH,EAAUhpH,QAAU,EAAIgpH,EAAU,GAAKA,GACpDniH,EAAQnH,eAKR,MAAOmB,GACH,EAAAqC,eAAe2D,GACjBA,EAAQpH,MAAMoB,GAEdsC,QAAQC,KAAKvC,IAInB,OAAOgG,EAAQtE,UAAU7B,S,0FC/NjC,YACA,SAGA,QACA,SACA,SACA,QA+NA,SAASsyC,EAAqD3d,GAA9D,WACU0B,EAAA,EAAAA,OAAQr2B,EAAA,EAAAA,WAAYa,EAAA,EAAAA,QACpBwnH,EAAA,EAAAA,aAAcllG,EAAA,EAAAA,KAAM0mF,EAAA,EAAAA,UACxB1jG,EAAUkwB,EAAOlwB,QAErB,IAAKA,EAAS,CACZA,EAAUkwB,EAAOlwB,QAAU,IAAI,EAAA+rG,aAY/B,IACEmW,EAAava,MAAMjtG,EAAasiB,EAAI,QAXtB,W,IAAC,sDACf,IAAMhjB,EAAMmoH,EAAUtZ,QACtB,GAAI7uG,EACF,EAAKT,IAAImqG,EAAUC,SAA8B0e,EAAe,EAAG,CAAEroH,IAAG,EAAEgG,QAAO,SAC5E,CACL,IAAMlG,EAAQqoH,EAAUhpH,QAAU,EAAIgpH,EAAU,GAAKA,EACrD,EAAK5oH,IAAImqG,EAAUC,SAA6Bye,EAAc,EAAG,CAAEtoH,MAAK,EAAEkG,QAAO,UAMnF,MAAOhG,GACPN,KAAKH,IAAImqG,EAAUC,SAA8B0e,EAAe,EAAG,CAAEroH,IAAG,EAAEgG,QAAO,MAIrFtG,KAAKH,IAAIyG,EAAQtE,UAAU7B,IAQ7B,SAASuoH,EAAgB7K,GACf,IAAAz9G,EAAA,EAAAA,MAAOkG,EAAA,EAAAA,QACfA,EAAQpG,KAAKE,GACbkG,EAAQnH,WAQV,SAASwpH,EAAiB9K,GAChB,IAAAv9G,EAAA,EAAAA,IAAK,EAAAgG,QACLpH,MAAMoB,GAzHhB,4BAAgBomH,EACd8B,EACA1V,EACA9I,GAGA,GAAI8I,EAAgB,CAClB,IAAI,EAAAb,YAAYa,GAId,OAAO,W,IAAC,sDAAmB,OAAA4T,EAAiB8B,EAAcxe,GAAU,aAAI1mF,GAAMlgB,KAC5E,EAAA+b,KAAI,SAAAmE,GAAQ,SAAAne,QAAQme,GAAQwvF,EAAc,aAAIxvF,GAAQwvF,EAA1C,QAJd9I,EAAY8I,EAShB,OAAO,W,IAAoB,sDACzB,IAAMt8E,EAAyB,CAC7BlwB,aAASvB,EACTue,KAAI,EACJklG,aAAY,EACZxe,UAAS,EACThpG,QAAShB,MAEX,OAAO,IAAI,EAAAsC,YAAc,SAAAnC,GACf,IAAAa,EAAA,EAAAA,QACFsF,EAAA,EAAAA,QACN,GAAK0jG,EA2BH,OAAOA,EAAUC,SAA2Bx3D,EAAU,EAAG,CAAEjc,OAAM,EAAEr2B,WAAU,EAAEa,QAAO,IA1BtF,IAAKsF,EAAS,CACZA,EAAUkwB,EAAOlwB,QAAU,IAAI,EAAA+rG,aAa/B,IACEmW,EAAava,MAAMjtG,EAAasiB,EAAI,QAbtB,W,IAAC,sDACf,IAAMhjB,EAAMmoH,EAAUtZ,QAElB7uG,EACFgG,EAAQpH,MAAMoB,IAIhBgG,EAAQpG,KAAKuoH,EAAUhpH,QAAU,EAAIgpH,EAAU,GAAKA,GACpDniH,EAAQnH,gBAKR,MAAOmB,GACH,EAAAqC,eAAe2D,GACjBA,EAAQpH,MAAMoB,GAEdsC,QAAQC,KAAKvC,IAInB,OAAOgG,EAAQtE,UAAU7B,S,maChNjC,IAQA,cAGE,WAAoB0B,EAAsCiC,EAAsBC,GAAhF,MACE,cAAO,K,OADW,EAAAlC,SAAsC,EAAAiC,aAAsB,EAAAC,aAFxE,EAAAe,MAAQ,E,EAmBlB,OApB2C,OAO/B,YAAAzE,MAAV,SAAgBD,GACdJ,KAAK6B,OAAO6B,WAAW1D,KAAK8D,WAAY1D,EAAOJ,KAAK+D,WAAY/D,KAAK8E,QAAS9E,OAGtE,YAAAO,OAAV,SAAiBrB,GACfc,KAAK6B,OAAO8B,YAAYzE,EAAOc,MAC/BA,KAAKS,eAGG,YAAAD,UAAV,WACER,KAAK6B,OAAO+B,eAAe5D,MAC3BA,KAAKS,eAET,EApBA,CARA,MAQ2Cb,YAA9B,EAAA4qG,mB,8ECPb,aAEa,EAAAiI,mBAAqB,SAAIr5C,GAA4B,gBAACj5D,GAWjE,OAVAi5D,EAAQp1C,MACN,SAAC5jB,GACMD,EAAWO,SACdP,EAAWD,KAAKE,GAChBD,EAAWhB,eAGf,SAACmB,GAAa,OAAAH,EAAWjB,MAAX,MAEf8kB,KAAK,KAAM,EAAAviB,iBACLtB,K,8ECbT,aAEa,EAAAuyG,oBAAsB,SAAIkW,GAA0B,gBAACzoH,GAGhE,IAFA,IAAMouG,EAAYqa,EAAiB,gBAEhC,CACD,IAAIxpG,OAAI,EACR,IACEA,EAAOmvF,EAASruG,OAChB,MAAOI,GAEP,OADAH,EAAWjB,MAAMoB,GACVH,EAET,GAAIif,EAAK4uF,KAAM,CACb7tG,EAAWhB,WACX,MAGF,GADAgB,EAAWD,KAAKkf,EAAKhf,OACjBD,EAAWO,OACb,MAaJ,MAR+B,mBAApB6tG,EAASsa,QAClB1oH,EAAWN,KAAI,WACT0uG,EAASsa,QACXta,EAASsa,YAKR1oH,K,8EChCT,aAOa,EAAAmyG,sBAAwB,SAAImR,GAAa,gBAACtjH,GACrD,IAAM2oH,EAAMrF,EAAI,gBAChB,GAA6B,mBAAlBqF,EAAI9mH,UAEb,MAAM,IAAIuF,UAAU,kEAEpB,OAAOuhH,EAAI9mH,UAAU7B,M,8ECdzB,YACA,QACA,SAGA,8BAAsCszE,EAA6Bu2B,GACjE,OAAO,IAAI,EAAA1nG,YAAc,SAAAnC,GACvB,IAAMkF,EAAM,IAAI,EAAAxE,aAShB,OARAwE,EAAIxF,IAAImqG,EAAUC,UAAS,WACzB,IAAM5nG,EAA8BoxE,EAAM,gBAC1CpuE,EAAIxF,IAAIwC,EAAWL,UAAU,CAC3B9B,KAAI,SAACE,GAASiF,EAAIxF,IAAImqG,EAAUC,UAAS,WAAM,OAAA9pG,EAAWD,KAAX,QAC/ChB,MAAK,SAACoB,GAAO+E,EAAIxF,IAAImqG,EAAUC,UAAS,WAAM,OAAA9pG,EAAWjB,MAAX,QAC9CC,SAAQ,WAAKkG,EAAIxF,IAAImqG,EAAUC,UAAS,WAAM,OAAA9pG,EAAA,uBAG3CkF,O,8EChBX,YAEA,QAEA,2BAAmCouE,EAAuBu2B,GACxD,OAAO,IAAI,EAAA1nG,YAAc,SAAAnC,GACvB,IAAMkF,EAAM,IAAI,EAAAxE,aAYhB,OAXAwE,EAAIxF,IAAImqG,EAAUC,UAAS,WAAM,OAAAx2B,EAAMzvD,MACrC,SAAA5jB,GACEiF,EAAIxF,IAAImqG,EAAUC,UAAS,WACzB9pG,EAAWD,KAAKE,GAChBiF,EAAIxF,IAAImqG,EAAUC,UAAS,WAAM,OAAA9pG,EAAA,sBAGrC,SAAAG,GACE+E,EAAIxF,IAAImqG,EAAUC,UAAS,WAAM,OAAA9pG,EAAWjB,MAAX,cAG9BmG,O,8EClBX,YAEA,QACA,SAEA,4BAAoCouE,EAAoBu2B,GACtD,IAAKv2B,EACH,MAAM,IAAI3xE,MAAM,2BAElB,OAAO,IAAI,EAAAQ,YAAc,SAAAnC,GACvB,IACIouG,EADElpG,EAAM,IAAI,EAAAxE,aAgChB,OA9BAwE,EAAIxF,KAAI,WAEF0uG,GAAuC,mBAApBA,EAASsa,QAC9Bta,EAASsa,YAGbxjH,EAAIxF,IAAImqG,EAAUC,UAAS,WACzBsE,EAAW96B,EAAM,cACjBpuE,EAAIxF,IAAImqG,EAAUC,UAAS,WACzB,IAAI9pG,EAAWO,OAAf,CAGA,IAAIN,EACA4tG,EACJ,IACE,IAAMzpG,EAASgqG,EAASruG,OACxBE,EAAQmE,EAAOnE,MACf4tG,EAAOzpG,EAAOypG,KACd,MAAO1tG,GAEP,YADAH,EAAWjB,MAAMoB,GAGf0tG,EACF7tG,EAAWhB,YAEXgB,EAAWD,KAAKE,GAChBJ,KAAKiqG,qBAIJ5kG,O,8ECzCX,aAGA,+BAAoCouE,GAClC,OAAOA,GAA6C,mBAA7BA,EAAM,gB,8ECL/B,aAGA,sBAA2BA,GACzB,OAAOA,GAA2C,mBAA3BA,EAAM,c,sGCJ/B,YAEA,QACA,QACA,SAEA,SAiKA,SAASs1C,EAAiBC,EAAiC9pG,GACzD,OAAO,IAAI,EAAA5c,YAAW,SAAAnC,GACpB,IAAMiF,EAAM4jH,EAAQvpH,OACpB,GAAY,IAAR2F,EAOJ,IAHA,IAAM60B,EAAS,IAAIjzB,MAAM5B,GACrB6jH,EAAY,EACZC,EAAU,E,WACLviH,GACP,IAAMpE,EAAS,EAAAyiB,KAAKgkG,EAAQriH,IACxB4qG,GAAW,EACfpxG,EAAWN,IAAI0C,EAAOP,UAAU,CAC9B9B,KAAM,SAAAE,GACCmxG,IACHA,GAAW,EACX2X,KAEFjvF,EAAOtzB,GAAKvG,GAEdlB,MAAO,SAAAoB,GAAO,OAAAH,EAAWjB,MAAX,IACdC,SAAU,aACR8pH,IACkB7jH,GAAQmsG,IACpB2X,IAAY9jH,GACdjF,EAAWD,KAAKgf,EACdA,EAAKlZ,QAAO,SAACzB,EAAQ2E,EAAKvC,GAAM,OAACpC,EAAO2E,GAAO+wB,EAAOtzB,GAAtB,IAAmC,IACnEszB,GAEJ95B,EAAWhB,iBApBVwH,EAAI,EAAGA,EAAIvB,EAAKuB,I,EAAhBA,QANPxG,EAAWhB,cA/BjB,sB,IACE,sDAEA,GAAuB,IAAnB6pH,EAAQvpH,OAAc,CACxB,IAAM,EAAQupH,EAAQ,GACtB,GAAI,EAAA7jH,QAAQ,GACV,OAAO4jH,EAAiB,EAAO,MAGjC,GAAI,EAAAzjH,SAAS,IAAUpE,OAAOsiC,eAAe,KAAWtiC,OAAOoI,UAAW,CACxE,IAAM4V,EAAOhe,OAAOge,KAAK,GACzB,OAAO6pG,EAAiB7pG,EAAKC,KAAI,SAAAjW,GAAO,eAAagW,IAKzD,GAA2C,mBAAhC8pG,EAAQA,EAAQvpH,OAAS,GAAmB,CACrD,IAAM,EAAiBupH,EAAQzlG,MAE/B,OAAOwlG,EADPC,EAA8B,IAAnBA,EAAQvpH,QAAgB,EAAA0F,QAAQ6jH,EAAQ,IAAOA,EAAQ,GAAKA,EACtC,MAAM5lH,KACrC,EAAA+b,KAAI,SAACmE,GAAgB,SAAc,aAAd,OAIzB,OAAOylG,EAAiBC,EAAS,Q,2GCpKnC,YACA,QACA,SAEA,QAEkC9nH,OAAOoI,UAAP,SA0KlC,qBAAgBkmC,EACdtpB,EACAijG,EACAnoG,EACA8xF,GAQA,OALI,EAAA7xG,WAAW+f,KAEb8xF,EAAiB9xF,EACjBA,OAAUjc,GAER+tG,EAEKtjE,EAAatpB,EAAQijG,EAA6CnoG,GAAS5d,KAChF,EAAA+b,KAAI,SAAAmE,GAAQ,SAAAne,QAAQme,GAAQwvF,EAAc,aAAIxvF,GAAQwvF,EAA1C,OAIT,IAAI,EAAAxwG,YAAc,SAAAnC,IAY3B,SAASipH,EAAqBC,EAA+BF,EAC/B7mE,EAAmCniD,EACnC6gB,GAC5B,IAAIvgB,EACJ,GA+BF,SAAuB4oH,GACrB,OAAOA,GAAmD,mBAA/BA,EAAUl5E,kBAA4E,mBAAlCk5E,EAAU/4E,oBAhCrFg5E,CAAcD,GAAY,CAC5B,IAAM,EAASA,EACfA,EAAUl5E,iBAAiBg5E,EAAW7mE,EAASthC,GAC/CvgB,EAAc,WAAM,SAAO6vC,oBAAoB64E,EAAW7mE,EAAtC,SACf,GAuBT,SAAmC+mE,GACjC,OAAOA,GAAqC,mBAAjBA,EAAUx1F,IAA8C,mBAAlBw1F,EAAU93C,IAxBhEg4C,CAA0BF,GAAY,CAC/C,IAAM,EAASA,EACfA,EAAUx1F,GAAGs1F,EAAW7mE,GACxB7hD,EAAc,WAAM,SAAO8wE,IAAI43C,EAAX,SACf,GAeT,SAAiCE,GAC/B,OAAOA,GAA8C,mBAA1BA,EAAU94E,aAAkE,mBAA7B84E,EAAU34E,eAhBzE84E,CAAwBH,GAAY,CAC7C,IAAM,EAASA,EACfA,EAAU94E,YAAY44E,EAAW7mE,GACjC7hD,EAAc,WAAM,SAAOiwC,eAAey4E,EAAtB,QACf,KAAIE,IAAcA,EAAkB5pH,OAKzC,MAAM,IAAI8H,UAAU,wBAJpB,IAAK,IAAIZ,EAAI,EAAGvB,EAAOikH,EAAkB5pH,OAAQkH,EAAIvB,EAAKuB,IACxDyiH,EAAkBC,EAAU1iH,GAAIwiH,EAAW7mE,EAASniD,EAAY6gB,GAMpE7gB,EAAWN,IAAIY,GA5Bb2oH,CAAkBljG,EAAQijG,GAP1B,SAAiBnkH,GACXxF,UAAUC,OAAS,EACrBU,EAAWD,KAAK8G,MAAMsC,UAAU5C,MAAM/E,KAAKnC,YAE3CW,EAAWD,KAAK8E,KAG0B7E,EAAY6gB,Q,oFC3M9D,YACA,QACA,SAEA,QAwIA,4BAAgB6lG,EAAoB4C,EACAC,EACA5W,GAElC,OAAIA,EAEK+T,EAAoB4C,EAAYC,GAAetmH,KACpD,EAAA+b,KAAI,SAAAmE,GAAQ,SAAAne,QAAQme,GAAQwvF,EAAc,aAAIxvF,GAAQwvF,EAA1C,OAIT,IAAI,EAAAxwG,YAAoB,SAAAnC,GAC7B,IAEIwpH,EAFErnE,EAAU,W,IAAC,sDAAc,OAAAniD,EAAWD,KAAkB,IAAb8E,EAAEvF,OAAeuF,EAAE,GAAKA,IAGvE,IACE2kH,EAAWF,EAAWnnE,GACtB,MAAOhiD,GAEP,YADAH,EAAWjB,MAAMoB,GAInB,GAAK,EAAAW,WAAWyoH,GAIhB,OAAO,WAAM,OAAAA,EAAcpnE,EAAd,S,8ECtKjB,YAEA,SAEA,SAwUA,SAAS7P,EAA4D3d,GAC3D,IAAA30B,EAAA,EAAAA,WAAYypH,EAAA,EAAAA,UACpB,IAAIzpH,EAAWO,OAAf,CAGA,GAAIo0B,EAAM+0F,YACR,IACE/0F,EAAMA,MAAQA,EAAMg1F,QAAQh1F,EAAMA,OAClC,MAAOx0B,GAEP,YADAH,EAAWjB,MAAMoB,QAInBw0B,EAAM+0F,aAAc,EAEtB,GAAID,EAAW,CACb,IAAIG,OAAe,EACnB,IACEA,EAAkBH,EAAU90F,EAAMA,OAClC,MAAOx0B,GAEP,YADAH,EAAWjB,MAAMoB,GAGnB,IAAKypH,EAEH,YADA5pH,EAAWhB,WAGb,GAAIgB,EAAWO,OACb,OAGJ,IAAIN,EACJ,IACEA,EAAQ00B,EAAMg+E,eAAeh+E,EAAMA,OACnC,MAAOx0B,GAEP,YADAH,EAAWjB,MAAMoB,GAGnB,IAAIH,EAAWO,SAGfP,EAAWD,KAAKE,IACZD,EAAWO,QAGf,OAAOV,KAAKiqG,SAASn1E,IAvHvB,oBAA+Bk1F,EACAJ,EACAE,EACAG,EACAjgB,GAE7B,IAAI8I,EACAxkE,EAEJ,GAAwB,GAApB9uC,UAAUC,OAAa,CACzB,IAAMuhB,EAAUgpG,EAChB17E,EAAettB,EAAQstB,aACvBs7E,EAAY5oG,EAAQ4oG,UACpBE,EAAU9oG,EAAQ8oG,QAClBhX,EAAiB9xF,EAAQ8xF,gBAAkB,EAAApuE,SAC3CslE,EAAYhpF,EAAQgpF,oBACoBjlG,IAA/BklH,GAA4C,EAAAhY,YAAYgY,IACjE37E,EAAe07E,EACflX,EAAiB,EAAApuE,SACjBslE,EAAYigB,IAEZ37E,EAAe07E,EACflX,EAAiBmX,GAGnB,OAAO,IAAI,EAAA3nH,YAAc,SAAAnC,GACvB,IAAI20B,EAAQwZ,EACZ,GAAI07D,EACF,OAAOA,EAAUC,SAA+Bx3D,EAAU,EAAG,CAC3DtyC,WAAU,EACV2pH,QAAO,EACPF,UAAS,EACT9W,eAAc,EACdh+E,MAAK,IAIT,OAAG,CACD,GAAI80F,EAAW,CACb,IAAIG,OAAe,EACnB,IACEA,EAAkBH,EAAU90F,GAC5B,MAAOx0B,GAEP,YADAH,EAAWjB,MAAMoB,GAGnB,IAAKypH,EAAiB,CACpB5pH,EAAWhB,WACX,OAGJ,IAAIiB,OAAK,EACT,IACEA,EAAQ0yG,EAAeh+E,GACvB,MAAOx0B,GAEP,YADAH,EAAWjB,MAAMoB,GAInB,GADAH,EAAWD,KAAKE,GACZD,EAAWO,OACb,MAEF,IACEo0B,EAAQg1F,EAAQh1F,GAChB,MAAOx0B,GAEP,YADAH,EAAWjB,MAAMoB,U,8EClUzB,aACA,SA2FA,eACEspH,EACAM,EACAC,GAEA,YAHA,IAAAD,MAAuC,EAAAxkH,YACvC,IAAAykH,MAAwC,EAAAzkH,OAEjC,EAAAivB,OAAM,WAAM,OAAAi1F,IAAcM,EAAd,O,8EClGrB,YACA,QAEA,SAqEA,SAASz3E,EAA+C3d,GAC9C,IAAA30B,EAAA,EAAAA,WAAYiqH,EAAA,EAAAA,QAASjL,EAAA,EAAAA,OAC7Bh/G,EAAWD,KAAKkqH,GAChBpqH,KAAKiqG,SAAS,CAAE9pG,WAAU,EAAEiqH,QAASA,EAAU,EAAGjL,OAAM,GAAIA,GArB9D,oBAAyBA,EACAnV,GASvB,YAVuB,IAAAmV,MAAA,QACA,IAAAnV,MAA2B,EAAA5iG,SAC7C,EAAAk4G,UAAUH,IAAWA,EAAS,KACjCA,EAAS,GAGNnV,GAA2C,mBAAvBA,EAAUC,WACjCD,EAAY,EAAA5iG,OAGP,IAAI,EAAA9E,YAAmB,SAAAnC,GAI5B,OAHAA,EAAWN,IACTmqG,EAAUC,SAASx3D,EAAU0sE,EAAQ,CAAEh/G,WAAU,EAAEiqH,QAAS,EAAGjL,OAAM,KAEhEh/G,O,oFCpEX,YAEA,SACA,QACA,SAwEA,6BAAgB+mH,I,IAAwB,sDAItC,GAAuB,IAAnB8B,EAAQvpH,OACV,OAAO,EAAAiG,MAGD,IAAAuhE,EAAA,KAAO,aAEf,OAAuB,IAAnB+hD,EAAQvpH,QAAgB,EAAA0F,QAAQ8hE,GAC3BigD,EAAiB,aAAIjgD,GAGvB,IAAI,EAAA3kE,YAAW,SAAAnC,GACpB,IAAMkqH,EAAU,WAAM,OAAAlqH,EAAWN,IAC/BqnH,EAAiB,aAAIoD,GAAWtoH,UADZ7B,KAItB,OAAO,EAAA6kB,KAAKiiD,GAAOjlE,UAAU,CAC3B9B,KAAI,SAACE,GAASD,EAAWD,KAAKE,IAC9BlB,MAAOmrH,EACPlrH,SAAUkrH,S,mGClGhB,YAGA,QA2EA,SAAgB53E,EACY3d,GAClB,IAAA5V,EAAA,EAAAA,KAAMpa,EAAA,EAAAA,MAAO3E,EAAA,EAAAA,WAAYgD,EAAA,EAAAA,aAAcsgH,EAAA,EAAAA,IAC/C,IAAKtjH,EAAWO,OACd,GAAIoE,EAAQoa,EAAKzf,OAAQ,CACvB,IAAMyJ,EAAMgW,EAAKpa,GACjB3E,EAAWD,KAAK,CAACgJ,EAAKu6G,EAAIv6G,KAC1B/F,EAAatD,IAAIG,KAAKiqG,SAAS,CAAE/qF,KAAI,EAAEpa,MAAOA,EAAQ,EAAG3E,WAAU,EAAEgD,aAAY,EAAEsgH,IAAG,UAEtFtjH,EAAWhB,WAlCjB,iBAAyBskH,EAAazZ,GACpC,OAAKA,EAYI,IAAI,EAAA1nG,YAAwB,SAAAnC,GACjC,IAAM+e,EAAOhe,OAAOge,KAAKukG,GACnBtgH,EAAe,IAAI,EAAAtC,aAIzB,OAHAsC,EAAatD,IACXmqG,EAAUC,SACPx3D,EAAU,EAAG,CAAEvzB,KAAI,EAAEpa,MAAO,EAAG3E,WAAU,EAAEgD,aAAY,EAAEsgH,IAAG,KAC1DtgH,KAjBF,IAAI,EAAAb,YAAwB,SAAAnC,GAEjC,IADA,IAAM+e,EAAOhe,OAAOge,KAAKukG,GAChB98G,EAAI,EAAGA,EAAIuY,EAAKzf,SAAWU,EAAWO,OAAQiG,IAAK,CAC1D,IAAMuC,EAAMgW,EAAKvY,GACb88G,EAAIl6G,eAAeL,IACrB/I,EAAWD,KAAK,CAACgJ,EAAKu6G,EAAIv6G,KAG9B/I,EAAWhB,eAejB,c,oFC9EA,aACA,SACA,SAEA,QAqDA,qBACEoD,EACA0xB,EACA3sB,GAEA,MAAO,CACL,EAAA+Z,OAAO4S,EAAW3sB,EAAlB,CAA2B,IAAI,EAAAhF,WAAc,EAAAmC,YAAYlC,KACzD,EAAA8e,OAAO,EAAAkpG,IAAIt2F,EAAW3sB,GAAtB,CAAuC,IAAI,EAAAhF,WAAc,EAAAmC,YAAYlC,Q,8EC/DzE,YAsEA,SAAgBkwC,EAAqC3d,GAC3C,IAAA04C,EAAA,EAAAA,MAAO1oE,EAAA,EAAAA,MAAO4C,EAAA,EAAAA,MAAOvH,EAAA,EAAAA,WAEzB2E,GAAS4C,EACXvH,EAAWhB,YAIbgB,EAAWD,KAAKstE,GAEZrtE,EAAWO,SAIfo0B,EAAMhwB,MAAQA,EAAQ,EACtBgwB,EAAM04C,MAAQA,EAAQ,EAEtBxtE,KAAKiqG,SAASn1E,KAnDhB,iBAAsB04C,EACA9lE,EACAsiG,GACpB,YAHoB,IAAAx8B,MAAA,GAGb,IAAI,EAAAlrE,YAAmB,SAAAnC,QACd4E,IAAV2C,IACFA,EAAQ8lE,EACRA,EAAQ,GAGV,IAAI1oE,EAAQ,EACR0lH,EAAUh9C,EAEd,GAAIw8B,EACF,OAAOA,EAAUC,SAASx3D,EAAU,EAAG,CACrC3tC,MAAK,EAAE4C,MAAK,EAAE8lE,MAAK,EAAErtE,WAAU,IAGjC,OAAG,CACD,GAAI2E,KAAW4C,EAAO,CACpBvH,EAAWhB,WACX,MAGF,GADAgB,EAAWD,KAAKsqH,KACZrqH,EAAWO,OACb,WAUV,c,8ECvEA,YAEA,SACA,SA8BA,iBAAyB+pH,EACAhU,GACvB,OAAO,IAAI,EAAAn0G,YAAc,SAAAnC,GACvB,IAAIuqH,EASAnmH,EAPJ,IACEmmH,EAAWD,IACX,MAAOnqH,GAEP,YADAH,EAAWjB,MAAMoB,GAKnB,IACEiE,EAASkyG,EAAkBiU,GAC3B,MAAOpqH,GAEP,YADAH,EAAWjB,MAAMoB,GAInB,IACM6C,GADSoB,EAAS,EAAAygB,KAAKzgB,GAAU,EAAAmB,OACX1D,UAAU7B,GACtC,OAAO,WACLgD,EAAa1C,cACTiqH,GACFA,EAASjqH,oB,oHC1DjB,6BACA,4BAEA,6BAQA,SAAwBgjB,EACpB7hB,EACAof,GAEM,kDAAEgiC,EAAA,EAAAA,QAASniC,EAAA,EAAAA,QACXowB,EAAQ,IAAI4rE,IACZhsE,EAAW,IAAI,UAAiB,CAClChwB,QAAO,EACPmiC,QAAO,EACPC,SAAU,SAAA/5C,GAAO,OAAA+nC,EAAMtZ,OAAN,MAEfgzF,EAAW,UAAc/oH,GAAI,W,IAAC,sDAAY,OAAAivC,EAASK,OAAM,MAAfL,EAAmBvtB,MAInE,OAFAqnG,EAAS15E,MAAQA,EAEV05E,EAfX,YAkBA,sBACI/oH,EACAof,GAEA,OAAOyC,EAAQ7hB,EAAE,cAAOof,EAAO,CAAEgiC,QAAS,O,kHCjC9C,QACA,4BAEA,UAqBA,aAMI,WAAYhiC,GALJ,KAAA4hC,QAAU,EACV,KAAAC,KAAwB,CAAEC,KAAM,IAChC,KAAAC,UAAmC,GAIvC/iD,KAAK2+C,SAAQ,YACT99B,QAAS,UACTmiC,QAAS,EACTC,SAAU,EAAAC,MACPliC,GA4If,OAxII,YAAAkwB,OAAA,W,IAAO,sDACH,IAAM3sC,EAASvE,KAAKmjD,YAAW,MAAhBnjD,KAAoBsjB,GAC3Bxe,EAAA,EAAAA,MAAOs+C,EAAA,EAAAA,UACTjkC,EAAA,EAAAA,IAYN,OAVIA,GAAOA,EAAIyR,SACXzR,EAAIkkC,YAEJlkC,EAAMnf,KAAKsjD,aAAaF,EAAW9/B,EAAK5c,MAAM5B,IAKlD9E,KAAKujD,oBAAoBpkC,GAElBA,EAAIyR,UAGf,YAAAogB,aAAA,W,IAAa,sDACD,IAAA7xB,EAAA,+BAAAA,IAER,OAAOA,EAAMA,EAAIkkC,UAAY,GAGzB,YAAAF,YAAR,W,UAAoB,kDAUhB,IATA,IAAIr+C,EAAQ,EACRs+C,EAAYpjD,KAAK6iD,KAQdO,EAAUN,KAAKrjD,QAAQ,CAG1B,IAFA,IAAI+jD,GAAY,EAEPC,EAAW,EAAGA,EAAWL,EAAUN,KAAKrjD,OAAQgkD,IAAY,CACjE,IAAMtkC,EAAMikC,EAAUN,KAAKW,GAE3B,GAAKzjD,KAAK2+C,SAAS99B,QAAQ1B,EAAI/e,MAAOkjB,EAAKxe,IAA3C,CAQA,IAFA,EAAAs+C,EAAUN,MAAKY,QAAO,QAAIN,EAAUN,KAAK/8C,OAAO09C,EAAU,KAErC,IAAhBngC,EAAK7jB,QAAgBqF,IAAUwe,EAAK7jB,OAAS,IAAM,EAAAkjD,sBAAsBxjC,GAC1E,MAAO,CAAEra,MAAK,EAAEqa,IAAG,EAAEikC,UAAS,GAGlCI,GAAY,EACZJ,EAAYjkC,EACZra,IAEA,OAGJ,IAAK0+C,EACD,MAIR,MAAO,CAAE1+C,MAAK,EAAEs+C,UAAS,IAGrB,YAAAE,aAAR,SAAqBzhD,EAAmDyhB,GACpE,IAEInE,EAFAra,EAAQ,EACRs+C,EAAYvhD,EAGhB,GACIsd,EAAM,CACF2jC,KAAM,GACNM,UAAS,EACTC,UAAW,EACXjjD,MAAOkjB,EAAKxe,IAMhBs+C,EAAUN,KAAKY,QAAQvkC,GAEvBikC,EAAYjkC,EACZra,UACKA,EAAQwe,EAAK7jB,QAEtB,IAAMkkD,EAAcxkC,EAIpB,OAFAwkC,EAAY/yB,SAAW,MAAK5wB,KAAK4iD,QAE1Be,GAGH,YAAAJ,oBAAR,SAA4BK,GACxB,GAAK5jD,KAAK2+C,SAASqE,QAAnB,CAIA,IAAMl+C,EAAQ9E,KAAK+iD,UAAUn9C,QAAQg+C,GAQrC,GANA5jD,KAAK+iD,UAAUh9C,QACA,IAAXjB,EAAe,EAAIA,GACR,IAAXA,EAAe,EAAI,EACnB8+C,KAGA5jD,KAAK+iD,UAAUtjD,QAAUO,KAAK2+C,SAASqE,SAA3C,CAIA,IAAM7jC,EAAMnf,KAAK+iD,UAAUx/B,MAEtBpE,IAILnf,KAAK6jD,WAAW1kC,GAChBnf,KAAK2+C,SAASsE,SAAS9jC,EAAIyR,cAGvB,YAAAizB,WAAR,SAAmB1kC,GACVA,EAAIikC,YAITjkC,EAAIikC,UAAUN,KAAK/8C,OAAOoZ,EAAIikC,UAAUN,KAAKl9C,QAAQuZ,GAAM,GAEvD,EAAAyrG,kBAAkBzrG,EAAIikC,YAI1BpjD,KAAK6jD,WAAW1kC,EAAIikC,aAE5B,EAvJA,G,2FCPA,iCAAsCjkC,GAClC,OAAOA,EAAI5V,eAAe,aAG9B,6BAAkC4V,GAC9B,OAAOA,EAAI5V,eAAe,e,gJCpB9B,aAAS,EAAAshH,MAAA,EAAAA,MACT,cAAS,EAAAC,UAAA,EAAAA,UACT,cAAS,EAAA1X,OAAA,EAAAA,OACT,cAAS,EAAA2X,YAAA,EAAAA,YACT,cAAS,EAAAC,WAAA,EAAAA,WACT,cAAS,EAAAC,aAAA,EAAAA,aACT,cAAS,EAAAC,WAAA,EAAAA,WACT,cAAS,EAAAt2F,WAAA,EAAAA,WACT,cAAS,EAAAu2F,WAAA,EAAAA,WACT,cAAS,EAAAxE,cAAA,EAAAA,cACT,cAAS,EAAAphH,OAAA,EAAAA,OACT,aAAS,EAAAotG,UAAA,EAAAA,UACT,aAAS,EAAAuH,UAAA,EAAAA,UACT,cAAS,EAAAkR,YAAA,EAAAA,YACT,cAAS,EAAA1jH,MAAA,EAAAA,MACT,cAAS,EAAA2jH,SAAA,EAAAA,SACT,cAAS,EAAAC,aAAA,EAAAA,aACT,aAAS,EAAArX,eAAA,EAAAA,eACT,cAAS,EAAAxhD,MAAA,EAAAA,MACT,cAAS,EAAA84D,UAAA,EAAAA,UACT,cAAS,EAAAC,cAAA,EAAAA,cACT,cAAS,EAAAC,SAAA,EAAAA,SACT,aAAS,EAAAnR,qBAAA,EAAAA,qBACT,cAAS,EAAAoR,wBAAA,EAAAA,wBACT,cAAS,EAAAC,UAAA,EAAAA,UACT,cAAS,EAAAC,QAAA,EAAAA,QACT,cAAS,EAAAj9E,MAAA,EAAAA,MACT,cAAS,EAAAk9E,QAAA,EAAAA,QACT,cAAS,EAAAC,WAAA,EAAAA,WACT,cAAS,EAAAC,OAAA,EAAAA,OACT,aAAS,EAAA1qG,OAAA,EAAAA,OACT,cAAS,EAAA22C,SAAA,EAAAA,SACT,aAAS,EAAA7tC,KAAA,EAAAA,KACT,cAAS,EAAAyW,UAAA,EAAAA,UACT,cAAS,EAAAqmC,MAAA,EAAAA,MACT,aAAS,EAAA+kD,QAAA,EAAAA,QACT,cAAS,EAAAC,eAAA,EAAAA,eACT,cAAS,EAAAr5C,QAAA,EAAAA,QACT,cAAS,EAAAz2C,KAAA,EAAAA,KACT,YAAS,EAAAhd,IAAA,EAAAA,IACT,cAAS,EAAA+sG,MAAA,EAAAA,MACT,cAAS,EAAAC,YAAA,EAAAA,YACT,cAAS,EAAAh6F,IAAA,EAAAA,IACT,cAAS,EAAAqC,MAAA,EAAAA,MACT,aAAS,EAAA+pF,SAAA,EAAAA,SACT,aAAS,EAAA1L,SAAA,EAAAA,SAAU,EAAAnpE,QAAA,EAAAA,QACnB,cAAS,EAAA0iF,WAAA,EAAAA,WACT,cAAS,EAAAC,UAAA,EAAAA,UACT,cAAS,EAAAC,IAAA,EAAAA,IACT,aAAS,EAAAC,UAAA,EAAAA,UACT,aAAS,EAAAC,UAAA,EAAAA,UACT,eAAS,EAAAtF,kBAAA,GAAAA,kBACT,eAAS,EAAAuF,SAAA,GAAAA,SACT,eAAS,EAAArF,UAAA,GAAAA,UACT,eAAS,EAAAsF,MAAA,GAAAA,MACT,eAAS,EAAAC,QAAA,GAAAA,QACT,eAAS,EAAAC,gBAAA,GAAAA,gBACT,eAAS,EAAAC,YAAA,GAAAA,YACT,eAAS,EAAAC,cAAA,GAAAA,cACT,eAAS,EAAAvzD,KAAA,GAAAA,KACT,cAAS,EAAAvzD,OAAA,GAAAA,OACT,eAAS,EAAA+mH,OAAA,GAAAA,OACT,eAAS,EAAAC,WAAA,GAAAA,WACT,eAAS,EAAAC,MAAA,GAAAA,MACT,eAAS,EAAAz6D,UAAA,GAAAA,UACT,cAAS,EAAAqiD,SAAA,GAAAA,SACT,eAAS,EAAAqY,OAAA,GAAAA,OACT,eAAS,EAAAC,WAAA,GAAAA,WACT,cAAS,EAAApZ,KAAA,GAAAA,KACT,eAAS,EAAAqZ,cAAA,GAAAA,cACT,eAAS,EAAAC,MAAA,GAAAA,MACT,eAAS,EAAApoG,YAAA,GAAAA,YACT,eAAS,EAAAqoG,OAAA,GAAAA,OACT,eAAS,EAAAxS,KAAA,GAAAA,KACT,eAAS,EAAAyS,SAAA,GAAAA,SACT,eAAS,EAAAC,UAAA,GAAAA,UACT,eAAS,EAAAC,UAAA,GAAAA,UACT,eAAS,EAAAC,UAAA,GAAAA,UACT,eAAS,EAAAC,YAAA,GAAAA,YACT,eAAS,EAAAC,UAAA,GAAAA,UACT,cAAS,EAAAjgE,UAAA,GAAAA,UACT,eAAS,EAAAkgE,YAAA,GAAAA,YACT,cAAS,EAAAl+E,KAAA,GAAAA,KACT,cAAS,EAAAqkE,SAAA,GAAAA,SACT,eAAS,EAAA8Z,UAAA,GAAAA,UACT,eAAS,EAAAC,UAAA,GAAAA,UACT,eAAS,EAAA1S,IAAA,GAAAA,IACT,cAAS,EAAA0F,SAAA,GAAAA,SACT,eAAS,EAAAiN,aAAA,GAAAA,aACT,cAAS,EAAAC,aAAA,GAAAA,aACT,eAAS,EAAAC,aAAA,GAAAA,aACT,eAAS,EAAA1pG,QAAA,GAAAA,QACT,cAAS,EAAA2pG,YAAA,GAAAA,YACT,eAAS,EAAAC,UAAA,GAAAA,UACT,eAAS,EAAAC,QAAA,GAAAA,QACT,eAAS,EAAAx2F,OAAA,GAAAA,OACT,eAAS,EAAAy2F,YAAA,GAAAA,YACT,eAAS,EAAArZ,WAAA,GAAAA,WACT,eAAS,EAAAsZ,aAAA,GAAAA,aACT,eAAS,EAAAC,WAAA,GAAAA,WACT,eAAS,EAAAC,eAAA,GAAAA,eACT,eAAS,EAAAz+B,IAAA,GAAAA,IACT,eAAS,EAAA0+B,OAAA,GAAAA,Q,8ECxGT,YACA,SACA,SAoDA,qBAA6BzR,EAAkBjT,GAC7C,YAD6C,IAAAA,MAA2B,EAAA5iG,OACjE,EAAAyjH,OAAM,WAAM,SAAAvD,MAAMrK,EAAN,Q,maCnDrB,YA0CA,kBAA0B0R,GACxB,OAAO,SAAgCpsH,GACrC,OAAOA,EAAOJ,KAAK,IAAIysH,EAAkBD,MAI7C,iBAEE,WAAoBA,GAAA,KAAAA,kBAMtB,OAHE,YAAAhtH,KAAA,SAAKxB,EAA6BoC,GAChC,OAAOA,EAAOP,UAAU,IAAI6sH,EAAiB1uH,EAAYH,KAAK2uH,mBAElE,EARA,GAeA,cAGE,WAAYjvH,EAA8BivH,GAA1C,MACE,YAAMjvH,IAAY,K,OAHZ,EAAA0zG,OAAc,GAIpB,EAAKvzG,IAAI,EAAA2zG,eAAemb,EAAiB,IAAI,EAAA9qH,sBAAsB,K,EAYvE,OAjBkC,OAQtB,YAAAxD,MAAV,SAAgBD,GACdJ,KAAKozG,OAAO5tG,KAAKpF,IAGnB,YAAAsD,WAAA,WACE,IAAM0vG,EAASpzG,KAAKozG,OACpBpzG,KAAKozG,OAAS,GACdpzG,KAAKN,YAAYQ,KAAMkzG,IAE3B,EAjBA,CAAkC,EAAAlvG,wB,yaClElC,YA2DA,uBAA+B8wG,EAAoB8Z,GACjD,YADiD,IAAAA,MAAA,MAC1C,SAAqCvsH,GAC1C,OAAOA,EAAOJ,KAAK,IAAI4sH,EAAuB/Z,EAAY8Z,MAI9D,iBAGE,WAAoB9Z,EAA4B8Z,GAA5B,KAAA9Z,aAA4B,KAAA8Z,mBAI5C9uH,KAAKgvH,gBAHFF,GAAoB9Z,IAAe8Z,EAGfG,EAFAC,EAS7B,OAHE,YAAAvtH,KAAA,SAAKxB,EAA6BoC,GAChC,OAAOA,EAAOP,UAAU,IAAIhC,KAAKgvH,gBAAgB7uH,EAAYH,KAAKg1G,WAAYh1G,KAAK8uH,oBAEvF,EAdA,GAqBA,cAGE,WAAYpvH,EAAsCs1G,GAAlD,MACE,YAAMt1G,IAAY,K,OAD8B,EAAAs1G,aAF1C,EAAA5B,OAAc,G,EAwBxB,OAzBuC,OAO3B,YAAA/yG,MAAV,SAAgBD,GACd,IAAMgzG,EAASpzG,KAAKozG,OAEpBA,EAAO5tG,KAAKpF,GAERgzG,EAAO3zG,QAAUO,KAAKg1G,aACxBh1G,KAAKN,YAAYQ,KAAKkzG,GACtBpzG,KAAKozG,OAAS,KAIR,YAAA5yG,UAAV,WACE,IAAM4yG,EAASpzG,KAAKozG,OAChBA,EAAO3zG,OAAS,GAClBO,KAAKN,YAAYQ,KAAKkzG,GAExB,YAAM5yG,UAAS,YAEnB,EAzBA,CAAuC,EAAAZ,YAgCvC,cAIE,WAAYF,EAAsCs1G,EAA4B8Z,GAA9E,MACE,YAAMpvH,IAAY,K,OAD8B,EAAAs1G,aAA4B,EAAA8Z,mBAHtE,EAAAK,QAAsB,GACtB,EAAAznH,MAAgB,E,EAoC1B,OAtC2C,OAQ/B,YAAArH,MAAV,SAAgBD,GACR,IAAE40G,EAAF,KAAEA,WAAY8Z,EAAd,KAAcA,iBAAkBK,EAAhC,KAAgCA,QAASznH,EAAzC,KAAyCA,MAE/C1H,KAAK0H,QACDA,EAAQonH,GAAqB,GAC/BK,EAAQ3pH,KAAK,IAGf,IAAK,IAAImB,EAAIwoH,EAAQ1vH,OAAQkH,KAAO,CAClC,IAAMysG,EAAS+b,EAAQxoH,GACvBysG,EAAO5tG,KAAKpF,GACRgzG,EAAO3zG,SAAWu1G,IACpBma,EAAQppH,OAAOY,EAAG,GAClB3G,KAAKN,YAAYQ,KAAKkzG,MAKlB,YAAA5yG,UAAV,WAGE,IAFM,IAAE2uH,EAAF,KAAEA,QAASzvH,EAAX,KAAWA,YAEVyvH,EAAQ1vH,OAAS,GAAG,CACzB,IAAI2zG,EAAS+b,EAAQhgB,QACjBiE,EAAO3zG,OAAS,GAClBC,EAAYQ,KAAKkzG,GAGrB,YAAM5yG,UAAS,YAGnB,EAtCA,CAA2C,EAAAZ,a,qbCtH3C,YAEA,QAEA,SAkEA,sBAA8BwvH,GAC5B,IAAI3vH,EAAiBD,UAAUC,OAE3BuqG,EAA2B,EAAA5iG,MAC3B,EAAA6qG,YAAYzyG,UAAUA,UAAUC,OAAS,MAC3CuqG,EAAYxqG,UAAUA,UAAUC,OAAS,GACzCA,KAGF,IAAI4vH,EAAiC,KACjC5vH,GAAU,IACZ4vH,EAAyB7vH,UAAU,IAGrC,IAAI8vH,EAAwBlvE,OAAO4yD,kBAKnC,OAJIvzG,GAAU,IACZ6vH,EAAgB9vH,UAAU,IAGrB,SAAoC+C,GACzC,OAAOA,EAAOJ,KAAK,IAAIotH,EAAsBH,EAAgBC,EAAwBC,EAAetlB,MAIxG,iBACE,WAAoBolB,EACAC,EACAC,EACAtlB,GAHA,KAAAolB,iBACA,KAAAC,yBACA,KAAAC,gBACA,KAAAtlB,YAQtB,OALE,YAAAroG,KAAA,SAAKxB,EAA6BoC,GAChC,OAAOA,EAAOP,UAAU,IAAIwtH,EAC1BrvH,EAAYH,KAAKovH,eAAgBpvH,KAAKqvH,uBAAwBrvH,KAAKsvH,cAAetvH,KAAKgqG,aAG7F,EAZA,GAcA,aACE,KAAAoJ,OAAc,IAqBhB,cAIE,WAAY1zG,EACQ0vH,EACAC,EACAC,EACAtlB,GAJpB,MAKE,YAAMtqG,IAAY,KAJA,EAAA0vH,iBACA,EAAAC,yBACA,EAAAC,gBACA,EAAAtlB,YAPZ,EAAAylB,SAA8B,GASpC,IAAMzuH,EAAU,EAAK0uH,cAErB,GADA,EAAKC,aAAyC,MAA1BN,GAAkCA,EAAyB,EAC3E,EAAKM,aAAc,CACrB,IAAMC,EAAoB,CAAEzvH,WAAY,EAAMa,QAAO,EAAEouH,eAAc,GACrE,EAAKvvH,IAAImB,EAAQ6uH,YAAc7lB,EAAUC,SAAS6lB,EAA4BV,EAAgBQ,QACzF,CACL,IAAMG,EAAa,CAAE5vH,WAAY,EAAMa,QAAO,GACxCgvH,EAAsC,CAAEZ,eAAc,EAAEC,uBAAsB,EAAElvH,WAAY,EAAM6pG,UAAS,GACjH,EAAKnqG,IAAImB,EAAQ6uH,YAAc7lB,EAAUC,SAA8BgmB,EAAqBb,EAAgBW,IAC5G,EAAKlwH,IAAImqG,EAAUC,SAA+BimB,EAAwBb,EAAwBW,I,SAsExG,OAzFsC,OAuB1B,YAAA3vH,MAAV,SAAgBD,GAId,IAHA,IAEI+vH,EAFEV,EAAWzvH,KAAKyvH,SAChBrqH,EAAMqqH,EAAShwH,OAEZkH,EAAI,EAAGA,EAAIvB,EAAKuB,IAAK,CAC5B,IAAM,EAAU8oH,EAAS9oH,GACnBysG,EAAS,EAAQA,OACvBA,EAAO5tG,KAAKpF,GACRgzG,EAAO3zG,QAAUO,KAAKsvH,gBACxBa,EAAsB,GAItBA,GACFnwH,KAAKowH,aAAaD,IAIZ,YAAA5vH,OAAV,SAAiBD,GACfN,KAAKyvH,SAAShwH,OAAS,EACvB,YAAMc,OAAM,UAACD,IAGL,YAAAE,UAAV,WAEE,IADM,IAAEivH,EAAF,KAAEA,SAAU/vH,EAAZ,KAAYA,YACX+vH,EAAShwH,OAAS,GAAG,CAC1B,IAAM,EAAUgwH,EAAStgB,QACzBzvG,EAAYQ,KAAK,EAAQkzG,QAE3B,YAAM5yG,UAAS,YAIjB,YAAAuB,aAAA,WACE/B,KAAKyvH,SAAW,MAGR,YAAAW,aAAV,SAAuBpvH,GACrBhB,KAAKqwH,aAAarvH,GAClB,IAAM6uH,EAAc7uH,EAAQ6uH,YAI5B,GAHAA,EAAYpvH,cACZT,KAAK6E,OAAOgrH,IAEP7vH,KAAKU,QAAUV,KAAK2vH,aAAc,CACrC3uH,EAAUhB,KAAK0vH,cACf,IAAMN,EAAiBpvH,KAAKovH,eACtBQ,EAAoB,CAAEzvH,WAAYH,KAAMgB,QAAO,EAAEouH,eAAc,GACrEpvH,KAAKH,IAAImB,EAAQ6uH,YAAc7vH,KAAKgqG,UAAUC,SAAS6lB,EAA4BV,EAAgBQ,MAIvG,YAAAF,YAAA,WACE,IAAM1uH,EAAsB,IAAIsvH,EAEhC,OADAtwH,KAAKyvH,SAASjqH,KAAKxE,GACZA,GAGT,YAAAqvH,aAAA,SAAarvH,GACXhB,KAAKN,YAAYQ,KAAKc,EAAQoyG,QAC9B,IAAMqc,EAAWzvH,KAAKyvH,UAEFA,EAAWA,EAAS7pH,QAAQ5E,IAAY,IACzC,GACjByuH,EAAS1pH,OAAO0pH,EAAS7pH,QAAQ5E,GAAU,IAGjD,EAzFA,CAAsC,EAAApB,YA2FtC,SAASkwH,EAAuDh7F,GAC9D,IAAM30B,EAAwC20B,EAAM30B,WAE9CowH,EAAcz7F,EAAM9zB,QACtBuvH,GACFpwH,EAAWkwH,aAAaE,GAGrBpwH,EAAWO,SACdo0B,EAAM9zB,QAAUb,EAAWuvH,cAC3B56F,EAAM9zB,QAAQ6uH,YAAc7vH,KAAKiqG,SAASn1E,EAAOA,EAAMs6F,iBAI3D,SAASc,EAAuEp7F,GACtE,IAAAu6F,EAAA,EAAAA,uBAAwBD,EAAA,EAAAA,eAAgBjvH,EAAA,EAAAA,WAAY6pG,EAAA,EAAAA,UACtDhpG,EAAUb,EAAWuvH,cAEtBvvH,EAAWO,SACdP,EAAWN,IAAImB,EAAQ6uH,YAAc7lB,EAAUC,SAA8BgmB,EAAqBb,EAAgB,CAAEjvH,WAAU,EAAEa,QAAO,KAFnFhB,KAG7CiqG,SAASn1E,EAAOu6F,IAI3B,SAASY,EAAuBpS,GACtB,IAAA19G,EAAA,EAAAA,WAAYa,EAAA,EAAAA,QACpBb,EAAWkwH,aAAarvH,K,+aCrP1B,YACA,SACA,SAkDA,wBACEwvH,EACAC,GAEA,OAAO,SAAsCluH,GAC3C,OAAOA,EAAOJ,KAAK,IAAIuuH,EAA2BF,EAAUC,MAIhE,iBAEE,WAAoBD,EACAC,GADA,KAAAD,WACA,KAAAC,kBAMtB,OAHE,YAAA9uH,KAAA,SAAKxB,EAA6BoC,GAChC,OAAOA,EAAOP,UAAU,IAAI2uH,EAAuBxwH,EAAYH,KAAKwwH,SAAUxwH,KAAKywH,mBAEvF,EATA,GAqBA,cAGE,WAAY/wH,EACA8wH,EACQC,GAFpB,MAGE,YAAM/wH,IAAY,K,OADA,EAAA+wH,kBAJZ,EAAAhB,SAAoC,GAM1C,EAAK5vH,IAAI,EAAAw2G,kBAAkB,EAAMma,I,EAuFrC,OA9F2C,OAU/B,YAAAnwH,MAAV,SAAgBD,GAGd,IAFA,IAAMqvH,EAAWzvH,KAAKyvH,SAChBrqH,EAAMqqH,EAAShwH,OACZkH,EAAI,EAAGA,EAAIvB,EAAKuB,IACvB8oH,EAAS9oH,GAAGysG,OAAO5tG,KAAKpF,IAIlB,YAAAG,OAAV,SAAiBD,GAEf,IADA,IAAMmvH,EAAWzvH,KAAKyvH,SACfA,EAAShwH,OAAS,GAAG,CAC1B,IAAM,EAAUgwH,EAAStgB,QACzB,EAAQhsG,aAAa1C,cACrB,EAAQ2yG,OAAS,KACjB,EAAQjwG,aAAe,KAEzBnD,KAAKyvH,SAAW,KAChB,YAAMlvH,OAAM,UAACD,IAGL,YAAAE,UAAV,WAEE,IADA,IAAMivH,EAAWzvH,KAAKyvH,SACfA,EAAShwH,OAAS,GAAG,CAC1B,IAAM,EAAUgwH,EAAStgB,QACzBnvG,KAAKN,YAAYQ,KAAM,EAAQkzG,QAC/B,EAAQjwG,aAAa1C,cACrB,EAAQ2yG,OAAS,KACjB,EAAQjwG,aAAe,KAEzBnD,KAAKyvH,SAAW,KAChB,YAAMjvH,UAAS,YAGjB,YAAAkD,WAAA,SAAWI,EAAiBG,GAC1BH,EAAa9D,KAAK4wH,YAAY9sH,GAAc9D,KAAK6wH,WAAW5sH,IAG9D,YAAAL,eAAA,SAAeymG,GACbrqG,KAAK4wH,YAAmBvmB,EAAUrpG,UAG5B,YAAA6vH,WAAR,SAAmBzwH,GACjB,IACE,IACMuuH,EADkB3uH,KAAKywH,gBACW9uH,KAAK3B,KAAMI,GAC/CuuH,GACF3uH,KAAK8wH,aAAanC,GAEpB,MAAOruH,GACPN,KAAKO,OAAOD,KAIR,YAAAswH,YAAR,SAAoB5vH,GAClB,IAAMyuH,EAAWzvH,KAAKyvH,SAEtB,GAAIA,GAAYzuH,EAAS,CACf,IAAAoyG,EAAA,EAAAA,OAAQjwG,EAAA,EAAAA,aAChBnD,KAAKN,YAAYQ,KAAMkzG,GACvBqc,EAAS1pH,OAAO0pH,EAAS7pH,QAAQ5E,GAAU,GAC3ChB,KAAK6E,OAAO1B,GACZA,EAAa1C,gBAIT,YAAAqwH,aAAR,SAAqBnC,GACnB,IAAMc,EAAWzvH,KAAKyvH,SAGhBtsH,EAAe,IAAI,EAAAtC,aACnBG,EAAU,CAAEoyG,OAFO,GAECjwG,aAAY,GACtCssH,EAASjqH,KAAKxE,GAEd,IAAMuyG,EAAoB,EAAA8C,kBAAkBr2G,KAAM2uH,EAAiB3tH,IAE9DuyG,GAAqBA,EAAkB7yG,OAC1CV,KAAK4wH,YAAY5vH,IAEhBuyG,EAA0BvyG,QAAUA,EAErChB,KAAKH,IAAI0zG,GACTpwG,EAAatD,IAAI0zG,KAGvB,EA9FA,CAA2C,EAAAjJ,kB,maClF3C,YAEA,QA4CA,sBAA8BmmB,GAC5B,OAAO,SAAUluH,GACf,OAAOA,EAAOJ,KAAK,IAAI4uH,EAAmBN,MAI9C,iBAEE,WAAoBA,GAAA,KAAAA,kBAMtB,OAHE,YAAA9uH,KAAA,SAAKxB,EAA6BoC,GAChC,OAAOA,EAAOP,UAAU,IAAIgvH,EAAqB7wH,EAAYH,KAAKywH,mBAEtE,EARA,GAeA,cAKE,WAAY/wH,EAAsC+wH,GAAlD,MACE,YAAM/wH,IAAY,K,OAD8B,EAAA+wH,kBAH1C,EAAAQ,aAAuB,EAK7B,EAAKJ,a,EA8DT,OArEsC,OAU1B,YAAAxwH,MAAV,SAAgBD,GACdJ,KAAKozG,OAAQ5tG,KAAKpF,IAGV,YAAAI,UAAV,WACE,IAAM4yG,EAASpzG,KAAKozG,OAChBA,GACFpzG,KAAKN,YAAYQ,KAAMkzG,GAEzB,YAAM5yG,UAAS,YAIjB,YAAAuB,aAAA,WACE/B,KAAKozG,YAASruG,EACd/E,KAAKixH,aAAc,GAGrB,YAAAvtH,WAAA,WACE1D,KAAK6wH,cAGP,YAAAjtH,eAAA,WACM5D,KAAKixH,YACPjxH,KAAKb,WAELa,KAAK6wH,cAIT,YAAAA,WAAA,WACQ,IAAAK,EAAA,KAAAA,oBAEFA,IACFlxH,KAAK6E,OAAOqsH,GACZA,EAAoBzwH,eAGtB,IAOIkuH,EAPEvb,EAASpzG,KAAKozG,OAChBpzG,KAAKozG,QACPpzG,KAAKN,YAAYQ,KAAMkzG,GAGzBpzG,KAAKozG,OAAS,GAGd,IAEEub,GAAkB8B,EADV,KAAAA,mBAER,MAAOnwH,GACP,OAAON,KAAKd,MAAMoB,GAEpB4wH,EAAsB,IAAI,EAAArwH,aAC1Bb,KAAKkxH,oBAAsBA,EAC3BlxH,KAAKH,IAAIqxH,GACTlxH,KAAKixH,aAAc,EACnBC,EAAoBrxH,IAAI,EAAA2zG,eAAemb,EAAiB,IAAI,EAAA9qH,sBAAsB7D,QAClFA,KAAKixH,aAAc,GAEvB,EArEA,CAAsC,EAAA/sH,wB,maCjEtC,YAkFA,sBACE+tC,GAEA,OAAO,SAAoC1vC,GACzC,IAAMH,EAAW,IAAI+uH,EAAcl/E,GAC7Bm/E,EAAS7uH,EAAOJ,KAAKC,GAC3B,OAAQA,EAASgvH,OAASA,IAI9B,iBAGE,WAAoBn/E,GAAA,KAAAA,WAMtB,OAHE,YAAAtwC,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIqvH,EAAgBlxH,EAAYH,KAAKiyC,SAAUjyC,KAAKoxH,UAEhF,EATA,GAgBA,cACE,WAAY1xH,EACQuyC,EACAm/E,GAFpB,MAGE,YAAM1xH,IAAY,K,OAFA,EAAAuyC,WACA,EAAAm/E,S,EA8BtB,OAjCoC,OAYlC,YAAAlyH,MAAA,SAAMoB,GACJ,IAAKN,KAAKT,UAAW,CACnB,IAAIgF,OAAM,EACV,IACEA,EAASvE,KAAKiyC,SAAS3xC,EAAKN,KAAKoxH,QACjC,MAAOE,GAEP,YADA,YAAMpyH,MAAK,UAACoyH,GAGdtxH,KAAKW,yBACL,IAAM6D,EAAkB,IAAI,EAAAX,sBAAsB7D,MAClDA,KAAKH,IAAI2E,GACT,IAAM+uG,EAAoB,EAAAC,eAAejvG,EAAQC,GAI7C+uG,IAAsB/uG,GACxBxE,KAAKH,IAAI0zG,KAIjB,EAjCA,CAAoC,EAAArvG,wB,8ECjHpC,aAsDA,sBAAiCmD,GAC/B,OAAO,SAAC9E,GAA0B,OAAAA,EAAOJ,KAAK,IAAI,EAAA+zG,sBAAhB,O,0FCtDpC,YACA,SACA,SAwCA,2B,IAAoC,sDAGlC,IAAI7uG,EAAwC,KAW5C,MAVmD,mBAAxCurG,EAAYA,EAAYnzG,OAAS,KAC1C4H,EAAwCurG,EAAYrvF,OAK3B,IAAvBqvF,EAAYnzG,QAAgB,EAAA0F,QAAQytG,EAAY,MAClDA,EAAoBA,EAAY,GAAIlsG,SAG/B,SAACnE,GAA0B,OAAAA,EAAOJ,KAAKR,KAAK,EAAAqjB,KAAI,CAAEziB,GAAM,OAAKqwG,IAAe,IAAI,EAAAsD,sBAArD,O,oFCzDpC,aA0BA,oB,IAA6B,sDAC3B,OAAO,SAAC3zG,GAA0B,OAAAA,EAAOJ,KAAKR,KAAK,EAAA4D,OAAY,cAAChD,GAAM,OAApC,Q,8EC3BpC,aAmEA,uBACEgvH,EACAze,GAEA,OAAO,EAAAoH,WAAU,WAAM,OAAAqX,IAAiBze,K,maCpE1C,YA6DA,iBAAyB7+E,GACvB,OAAO,SAAC1xB,GAA0B,OAAAA,EAAOJ,KAAK,IAAIqvH,EAAcv9F,EAA9B1xB,MAGpC,iBACE,WAAoB0xB,EACA1xB,GADA,KAAA0xB,YACA,KAAA1xB,SAMtB,OAHE,YAAAZ,KAAA,SAAKxB,EAAgCoC,GACnC,OAAOA,EAAOP,UAAU,IAAIyvH,EAAgBtxH,EAAYH,KAAKi0B,UAAWj0B,KAAKuC,UAEjF,EARA,GAeA,cAIE,WAAY7C,EACQu0B,EACA1xB,GAFpB,MAGE,YAAM7C,IAAY,K,OAFA,EAAAu0B,YACA,EAAA1xB,SALZ,EAAAmF,MAAgB,EAChB,EAAA5C,MAAgB,E,EAmC1B,OArCiC,OAUrB,YAAAzE,MAAV,SAAgBD,GACVJ,KAAKi0B,UACPj0B,KAAK0xH,cAActxH,GAEnBJ,KAAK0H,SAID,YAAAgqH,cAAR,SAAsBtxH,GACpB,IAAImE,EAEJ,IACEA,EAASvE,KAAKi0B,UAAU7zB,EAAOJ,KAAK8E,QAAS9E,KAAKuC,QAClD,MAAOjC,GAEP,YADAN,KAAKN,YAAYR,MAAMoB,GAIrBiE,GACFvE,KAAK0H,SAIC,YAAAlH,UAAV,WACER,KAAKN,YAAYQ,KAAKF,KAAK0H,OAC3B1H,KAAKN,YAAYP,YAErB,EArCA,CAAiC,EAAAS,a,maC9EjC,YAkDA,oBAA4B08G,GAC1B,OAAO,SAAC/5G,GAA0B,OAAAA,EAAOJ,KAAK,IAAIwvH,EAAhB,MAGpC,iBACE,WAAoBrV,GAAA,KAAAA,mBAMtB,OAHE,YAAA36G,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI4vH,EAAmBzxH,EAAYH,KAAKs8G,oBAEpE,EAPA,GAcA,cAKE,WAAY58G,EACQ48G,GADpB,MAEE,YAAM58G,IAAY,K,OADA,EAAA48G,mBAJZ,EAAA/K,UAAW,E,EAmErB,OArEuC,OAU3B,YAAAlxG,MAAV,SAAgBD,GACd,IACE,IAAMmE,EAASvE,KAAKs8G,iBAAiB36G,KAAK3B,KAAMI,GAE5CmE,GACFvE,KAAKqzG,SAASjzG,EAAOmE,GAEvB,MAAOjE,GACPN,KAAKN,YAAYR,MAAOoB,KAIlB,YAAAE,UAAV,WACER,KAAK6xH,YACL7xH,KAAKN,YAAYP,YAGX,YAAAk0G,SAAR,SAAiBjzG,EAAU68G,GACzB,IAAI95G,EAAenD,KAAK8xH,qBACxB9xH,KAAKI,MAAQA,EACbJ,KAAKuxG,UAAW,EACZpuG,IACFA,EAAa1C,cACbT,KAAK6E,OAAO1B,KAGdA,EAAe,EAAAqwG,eAAeyJ,EAAU,IAAI,EAAAp5G,sBAAsB7D,UAC7CmD,EAAazC,QAChCV,KAAKH,IAAIG,KAAK8xH,qBAAuB3uH,IAIzC,YAAAO,WAAA,WACE1D,KAAK6xH,aAGP,YAAAjuH,eAAA,WACE5D,KAAK6xH,aAGP,YAAAA,UAAA,WACE,GAAI7xH,KAAKuxG,SAAU,CACjB,IAAMnxG,EAAQJ,KAAKI,MACb+C,EAAenD,KAAK8xH,qBACtB3uH,IACFnD,KAAK8xH,0BAAuB/sH,EAC5B5B,EAAa1C,cACbT,KAAK6E,OAAO1B,IAOdnD,KAAKI,WAAQ2E,EACb/E,KAAKuxG,UAAW,EAChB,YAAMlxG,MAAK,UAACD,KAGlB,EArEA,CAAuC,EAAA8D,wB,maCvEvC,YAEA,QAuDA,wBAAgCk7G,EAAiBpV,GAC/C,YAD+C,IAAAA,MAA2B,EAAA5iG,OACnE,SAAC7E,GAA0B,OAAAA,EAAOJ,KAAK,IAAI4vH,EAAqB3S,EAArC,MAGpC,iBACE,WAAoBA,EAAyBpV,GAAzB,KAAAoV,UAAyB,KAAApV,YAM/C,OAHE,YAAAroG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIgwH,EAAuB7xH,EAAYH,KAAKo/G,QAASp/G,KAAKgqG,aAEtF,EAPA,GAcA,cAKE,WAAYtqG,EACQ0/G,EACApV,GAFpB,MAGE,YAAMtqG,IAAY,K,OAFA,EAAA0/G,UACA,EAAApV,YANZ,EAAAioB,sBAAsC,KACtC,EAAAC,UAAe,KACf,EAAA3gB,UAAoB,E,EA6C9B,OAhDwC,OAW5B,YAAAlxG,MAAV,SAAgBD,GACdJ,KAAKmyH,gBACLnyH,KAAKkyH,UAAY9xH,EACjBJ,KAAKuxG,UAAW,EAChBvxG,KAAKH,IAAIG,KAAKiyH,sBAAwBjyH,KAAKgqG,UAAUC,SAASye,EAAc1oH,KAAKo/G,QAASp/G,QAGlF,YAAAQ,UAAV,WACER,KAAKoyH,gBACLpyH,KAAKN,YAAYP,YAGnB,YAAAizH,cAAA,WAGE,GAFApyH,KAAKmyH,gBAEDnyH,KAAKuxG,SAAU,CACT,IAAA2gB,EAAA,KAAAA,UAMRlyH,KAAKkyH,UAAY,KACjBlyH,KAAKuxG,UAAW,EAChBvxG,KAAKN,YAAYQ,KAAKgyH,KAIlB,YAAAC,cAAR,WACE,IAAMF,EAAwBjyH,KAAKiyH,sBAEL,OAA1BA,IACFjyH,KAAK6E,OAAOotH,GACZA,EAAsBxxH,cACtBT,KAAKiyH,sBAAwB,OAGnC,EAhDA,CAAwC,EAAAryH,YAkDxC,SAAS8oH,EAAavoH,GACpBA,EAAWiyH,kB,maChIb,YACA,SAEA,QAEA,SAsDA,iBAAyB3/D,EACAu3C,QAAA,IAAAA,MAA2B,EAAA5iG,OAClD,IACMirH,EADgB,EAAAjR,OAAO3uD,IACMA,EAAQu3C,EAAUhqD,MAASh9B,KAAKi9E,IAAYxtC,GAC/E,OAAO,SAAClwD,GAA0B,OAAAA,EAAOJ,KAAK,IAAImwH,EAAcD,EAA9B,MAGpC,iBACE,WAAoB5/D,EACAu3C,GADA,KAAAv3C,QACA,KAAAu3C,YAMtB,OAHE,YAAAroG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIuwH,EAAgBpyH,EAAYH,KAAKyyD,MAAOzyD,KAAKgqG,aAE7E,EARA,GAqBA,cAwBE,WAAYtqG,EACQ+yD,EACAu3C,GAFpB,MAGE,YAAMtqG,IAAY,K,OAFA,EAAA+yD,QACA,EAAAu3C,YAzBZ,EAAA4L,MAAgC,GAChC,EAAArF,QAAkB,EAClB,EAAAN,SAAmB,E,EAgE7B,OAnEiC,OAKhB,EAAAx9D,SAAf,SAAiE3d,GAM/D,IALA,IAAMvyB,EAASuyB,EAAMvyB,OACfqzG,EAAQrzG,EAAOqzG,MACf5L,EAAYl1E,EAAMk1E,UAClBtqG,EAAco1B,EAAMp1B,YAEnBk2G,EAAMn2G,OAAS,GAAMm2G,EAAM,GAAGG,KAAO/L,EAAUhqD,OAAU,GAC9D41D,EAAMzG,QAAQ2O,aAAahrD,QAAQpzD,GAGrC,GAAIk2G,EAAMn2G,OAAS,EAAG,CACpB,IAAM,EAAQujB,KAAKmP,IAAI,EAAGyjF,EAAM,GAAGG,KAAO/L,EAAUhqD,OACpDhgD,KAAKiqG,SAASn1E,EAAO,QAErB90B,KAAKS,cACL8B,EAAOguG,QAAS,GAUZ,YAAAiiB,UAAR,SAAkBxoB,GAChBhqG,KAAKuwG,QAAS,EACMvwG,KAAKN,YACbG,IAAImqG,EAAUC,SAAwBsoB,EAAgB9/E,SAAUzyC,KAAKyyD,MAAO,CACtFlwD,OAAQvC,KAAMN,YAAaM,KAAKN,YAAasqG,UAAWA,MAIpD,YAAAyoB,qBAAR,SAA6B3U,GAC3B,IAAqB,IAAjB99G,KAAKiwG,QAAT,CAIA,IAAMjG,EAAYhqG,KAAKgqG,UACjBh2F,EAAU,IAAI0+G,EAAa1oB,EAAUhqD,MAAQhgD,KAAKyyD,MAAOqrD,GAC/D99G,KAAK41G,MAAMpwG,KAAKwO,IAEI,IAAhBhU,KAAKuwG,QACPvwG,KAAKwyH,UAAUxoB,KAIT,YAAA3pG,MAAV,SAAgBD,GACdJ,KAAKyyH,qBAAqB,EAAA5gB,aAAaD,WAAWxxG,KAG1C,YAAAG,OAAV,SAAiBD,GACfN,KAAKiwG,SAAU,EACfjwG,KAAK41G,MAAQ,GACb51G,KAAKN,YAAYR,MAAMoB,GACvBN,KAAKS,eAGG,YAAAD,UAAV,WACER,KAAKyyH,qBAAqB,EAAA5gB,aAAaE,kBACvC/xG,KAAKS,eAET,EAnEA,CAAiC,EAAAb,YAqEjC,EACE,SAA4Bm2G,EACA+H,GADA,KAAA/H,OACA,KAAA+H,iB,+aC7J9B,YACA,QAEA,SAEA,SAqEA,qBAA6B6U,EACAC,GAC3B,OAAIA,EACK,SAACrwH,GACN,WAAIswH,EAA4BtwH,EAAQqwH,GACrCzwH,KAAK,IAAI2wH,EAAkBH,KAE3B,SAACpwH,GAA0B,OAAAA,EAAOJ,KAAK,IAAI2wH,EAAhB,MAGpC,iBACE,WAAoBH,GAAA,KAAAA,wBAMtB,OAHE,YAAAhxH,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI+wH,EAAoB5yH,EAAYH,KAAK2yH,yBAErE,EAPA,GAcA,cAKE,WAAYjzH,EACQizH,GADpB,MAEE,YAAMjzH,IAAY,K,OADA,EAAAizH,wBALZ,EAAA1J,WAAqB,EACrB,EAAA+J,2BAAkD,GAClD,EAAAluH,MAAgB,E,EAuE1B,OA1EwC,OAUtC,YAAApB,WAAA,SAAWI,EAAemvH,EACf7uH,EAAqB8uH,EACrB7oB,GACTrqG,KAAKN,YAAYQ,KAAM4D,GACvB9D,KAAKmzH,mBAAmB9oB,GACxBrqG,KAAKozH,eAGP,YAAAzvH,YAAA,SAAYzE,EAAYmrG,GACtBrqG,KAAKO,OAAOrB,IAGd,YAAA0E,eAAA,SAAeymG,GACb,IAAMjqG,EAAQJ,KAAKmzH,mBAAmB9oB,GAClCjqG,GACFJ,KAAKN,YAAYQ,KAAME,GAEzBJ,KAAKozH,eAGG,YAAA/yH,MAAV,SAAgBD,GACd,IAAM0E,EAAQ9E,KAAK8E,QACnB,IACE,IAAMuuH,EAAgBrzH,KAAK2yH,sBAAsBvyH,EAAO0E,GACpDuuH,GACFrzH,KAAKszH,SAASD,EAAejzH,GAE/B,MAAOE,GACPN,KAAKN,YAAYR,MAAOoB,KAIlB,YAAAE,UAAV,WACER,KAAKipH,WAAY,EACjBjpH,KAAKozH,cACLpzH,KAAKS,eAGC,YAAA0yH,mBAAR,SAA2BhwH,GACzBA,EAAa1C,cAEb,IAAM8yH,EAAkBvzH,KAAKgzH,2BAA2BptH,QAAQzC,GAKhE,OAJyB,IAArBowH,GACFvzH,KAAKgzH,2BAA2BjtH,OAAOwtH,EAAiB,GAGnDpwH,EAAaW,YAGd,YAAAwvH,SAAR,SAAiBD,EAAgCjzH,GAC/C,IAAMozH,EAAuB,EAAAnd,kBAAkBr2G,KAAMqzH,EAAejzH,GAEhEozH,IAAyBA,EAAqB9yH,SAC5BV,KAAKN,YACbG,IAAI2zH,GAChBxzH,KAAKgzH,2BAA2BxtH,KAAKguH,KAIjC,YAAAJ,YAAR,WACMpzH,KAAKipH,WAAwD,IAA3CjpH,KAAKgzH,2BAA2BvzH,QACpDO,KAAKN,YAAYP,YAGvB,EA1EA,CAAwC,EAAAmrG,iBAiFxC,cACE,WAAmB/nG,EAA+BqwH,GAAlD,MACE,cAAO,K,OADU,EAAArwH,SAA+B,EAAAqwH,oB,EAQpD,OAT6C,OAM3C,YAAA1wH,WAAA,SAAW/B,GACTH,KAAK4yH,kBAAkB5wH,UAAU,IAAIyxH,EAA4BtzH,EAAYH,KAAKuC,UAEtF,EATA,CAA6C,EAAAD,YAgB7C,cAGE,WAAoBT,EAA+BU,GAAnD,MACE,cAAO,K,OADW,EAAAV,SAA+B,EAAAU,SAF3C,EAAAmxH,kBAA4B,E,EA2BtC,OA5B6C,OAOjC,YAAArzH,MAAV,SAAgBi2G,GACdt2G,KAAK2zH,qBAGG,YAAApzH,OAAV,SAAiBD,GACfN,KAAKS,cACLT,KAAK6B,OAAO3C,MAAMoB,IAGV,YAAAE,UAAV,WACER,KAAKS,cACLT,KAAK2zH,qBAGC,YAAAA,kBAAR,WACO3zH,KAAK0zH,mBACR1zH,KAAK0zH,kBAAmB,EACxB1zH,KAAKS,cACLT,KAAKuC,OAAOP,UAAUhC,KAAK6B,UAGjC,EA5BA,CAA6C,EAAAjC,a,maClM7C,YAkDA,2BACE,OAAO,SAAuC2C,GAC5C,OAAOA,EAAOJ,KAAK,IAAIyxH,KAI3B,+BAIA,OAHE,YAAAjyH,KAAA,SAAKxB,EAA6BoC,GAChC,OAAOA,EAAOP,UAAU,IAAI6xH,EAAwB1zH,KAExD,EAJA,GAWA,cACE,WAAYT,G,OACV,YAAMA,IAAY,KAMtB,OARmE,OAKvD,YAAAW,MAAV,SAAgBD,GACdA,EAAM0yD,QAAQ9yD,KAAKN,cAEvB,EARA,CAAmE,EAAAE,a,8bCjEnE,YA4DA,oBAA+Bw8G,EACA0X,GAC7B,OAAO,SAACvxH,GAA0B,OAAAA,EAAOJ,KAAK,IAAI4xH,EAAiB3X,EAAjC,MAGpC,iBACE,WAAoBA,EAAuC0X,GAAvC,KAAA1X,cAAuC,KAAA0X,UAM7D,OAHE,YAAAnyH,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIgyH,EAAmB7zH,EAAYH,KAAKo8G,YAAap8G,KAAK8zH,WAEtF,EAPA,GAcA,cAGE,WAAYp0H,EAAoC08G,EAA+B0X,GAA/E,MACE,YAAMp0H,IAAY,K,OAD4B,EAAA08G,cAFxC,EAAAniF,OAAS,IAAIg6F,IAKfH,GACF,EAAKj0H,IAAI,EAAA2zG,eAAesgB,EAAS,IAAI,EAAAjwH,sBAAsB,K,EAwCjE,OA/C8C,OAW5C,YAAAH,WAAA,WACE1D,KAAKi6B,OAAOkjF,SAGd,YAAAx5G,YAAA,SAAYzE,GACVc,KAAKO,OAAOrB,IAGJ,YAAAmB,MAAV,SAAgBD,GACVJ,KAAKo8G,YACPp8G,KAAKk0H,gBAAgB9zH,GAErBJ,KAAKm0H,cAAc/zH,EAAOA,IAItB,YAAA8zH,gBAAR,SAAwB9zH,GACtB,IAAI8I,EACIxJ,EAAA,KAAAA,YACR,IACEwJ,EAAMlJ,KAAKo8G,YAAah8G,GACxB,MAAOE,GAEP,YADAZ,EAAYR,MAAOoB,GAGrBN,KAAKm0H,cAAcjrH,EAAK9I,IAGlB,YAAA+zH,cAAR,SAAsBjrH,EAAU9I,GACtB,IAAA65B,EAAA,KAAAA,OACHA,EAAOw1E,IAAOvmG,KACjB+wB,EAAOp6B,IAAOqJ,GACdlJ,KAAKN,YAAYQ,KAAME,KAI7B,EA/CA,CAA8C,EAAA8D,uBAAjC,EAAA8vH,sB,8ECnFb,aA8EA,mCAA8D9qH,EAAQ22G,GACpE,OAAO,EAAAvF,sBAAqB,SAAC92G,EAAM0qG,GAAS,OAAA2R,EAAUA,EAAQr8G,EAAE0F,GAAMglG,EAAEhlG,IAAQ1F,EAAE0F,KAASglG,EAA/C,Q,oFC7E9C,aAGA,SACA,SACA,SACA,SAkDA,qBAA6BppG,EAAeksG,GAC1C,GAAIlsG,EAAQ,EAAK,MAAM,IAAI,EAAA6rG,wBAC3B,IAAMyjB,EAAkB50H,UAAUC,QAAU,EAC5C,OAAO,SAAC8C,GAA0B,OAAAA,EAAOa,KACvC,EAAAie,QAAO,SAACsrF,EAAGhmG,GAAM,OAAAA,IAAA,KACjB,EAAAgpC,KAAK,GACLykF,EACI,EAAAngB,eAAejD,GACf,EAAAid,cAAa,WAAM,WAAI,EAAJ,+B,oFCjE3B,aACA,SA8DA,qB,IAA2B,sDACzB,OAAO,SAAC1rH,GAA0B,SAAAgD,OAAOhD,EAAQ,EAAAqiB,GAAE,aAAjB,O,0aC/DpC,YAwBA,iBAAyBqP,EACA3sB,GACvB,OAAO,SAAC/E,GAA0B,OAAAA,EAAOJ,KAAK,IAAIkyH,EAAcpgG,EAAW3sB,EAAzC/E,MAGpC,iBACE,WAAoB0xB,EACA3sB,EACA/E,GAFA,KAAA0xB,YACAj0B,KAAAsH,UACA,KAAA/E,SAMtB,OAHE,YAAAZ,KAAA,SAAKmiB,EAA+BvhB,GAClC,OAAOA,EAAOP,UAAU,IAAIsyH,EAAgBxwG,EAAU9jB,KAAKi0B,UAAWj0B,KAAKsH,QAAStH,KAAKuC,UAE7F,EATA,GAgBA,cAGE,WAAY7C,EACQu0B,EACA3sB,EACA/E,GAHpB,MAIE,YAAM7C,IAAY,K,OAHA,EAAAu0B,YACA,EAAA3sB,UACA,EAAA/E,SALZ,EAAAuC,MAAgB,EAOtB,EAAKwC,QAAUA,GAAW,E,EAyB9B,OAjCiC,OAWvB,YAAA1D,eAAR,SAAuB2wH,GACrBv0H,KAAKN,YAAYQ,KAAKq0H,GACtBv0H,KAAKN,YAAYP,YAGT,YAAAkB,MAAV,SAAgBD,GACd,IAAImE,GAAS,EACb,IACEA,EAASvE,KAAKi0B,UAAUtyB,KAAK3B,KAAKsH,QAASlH,EAAOJ,KAAK8E,QAAS9E,KAAKuC,QACrE,MAAOjC,GAEP,YADAN,KAAKN,YAAYR,MAAMoB,GAIpBiE,GACHvE,KAAK4D,gBAAe,IAId,YAAApD,UAAV,WACER,KAAK4D,gBAAe,IAExB,EAjCA,CAAiC,EAAAhE,a,maC3CjC,YAiDA,qBACE,OAAO,SAAC2C,GAA0B,OAAAA,EAAOJ,KAAK,IAAZ,KAGpC,+BAIA,OAHE,YAAAR,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIwyH,EAAsBr0H,KAEtD,EAJA,GAWA,cAIE,WAAYT,GAAZ,MACE,YAAMA,IAAY,K,OAJZ,EAAA0yG,cAAwB,EACxB,EAAAqiB,iBAA2B,E,EA0BrC,OA5BuC,OAQ3B,YAAAp0H,MAAV,SAAgBD,GACTJ,KAAKy0H,kBACRz0H,KAAKy0H,iBAAkB,EACvBz0H,KAAKH,IAAI,EAAA2zG,eAAepzG,EAAO,IAAI,EAAAyD,sBAAsB7D,UAInD,YAAAQ,UAAV,WACER,KAAKoyG,cAAe,EACfpyG,KAAKy0H,iBACRz0H,KAAKN,YAAYP,YAIrB,YAAAyE,eAAA,WACE5D,KAAKy0H,iBAAkB,EACnBz0H,KAAKoyG,cACPpyG,KAAKN,YAAYP,YAGvB,EA5BA,CAAuC,EAAA+E,wB,yaC/DvC,YACA,SACA,QAuDA,sBAAgB4nH,EACdzkH,EACAyrG,GAEA,OAAIA,EAEK,SAACvwG,GAA0B,OAAAA,EAAOa,KACvC0oH,GAAW,SAACpuF,EAAG/2B,GAAM,SAAAqe,KAAK3d,EAAQq2B,EAAG/2B,IAAIvD,KACvC,EAAA+b,KAAI,SAACwe,EAAQs1E,GAAY,OAAAH,EAAep1E,EAAGC,EAAGh3B,EAArB,YAIxB,SAACpE,GACN,OAAAA,EAAOJ,KAAK,IAAIuyH,EAAmBrtH,MAGvC,iBACE,WAAoBA,GAAA,KAAAA,UAMtB,OAHE,YAAA1F,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI2yH,EAAqBx0H,EAAYH,KAAKqH,WAEtE,EAPA,GAcA,cAKE,WAAY3H,EACQ2H,GADpB,MAEE,YAAM3H,IAAY,K,OADA,EAAA2H,UALZ,EAAAotH,iBAAkB,EAClB,EAAAriB,cAAe,EACf,EAAAttG,MAAQ,E,EA6DlB,OAhEyC,OAU7B,YAAAzE,MAAV,SAAgBD,GACTJ,KAAKy0H,iBACRz0H,KAAK40H,QAAQx0H,IAIT,YAAAw0H,QAAR,SAAgBx0H,GACd,IAAImE,EACEO,EAAQ9E,KAAK8E,QACnB,IACEP,EAASvE,KAAKqH,QAAQjH,EAAO0E,GAC7B,MAAOxE,GAEP,YADAN,KAAKN,YAAYR,MAAOoB,GAG1BN,KAAKy0H,iBAAkB,EACvBz0H,KAAKqE,UAAUE,IAGT,YAAAF,UAAR,SAAkBE,GAChB,IAAMC,EAAkB,IAAI,EAAAX,sBAAsB7D,MAC5CN,EAAcM,KAAKN,YACzBA,EAAYG,IAAI2E,GAChB,IAAM+uG,EAAoB,EAAAC,eAAejvG,EAAQC,GAI7C+uG,IAAsB/uG,GACxB9E,EAAYG,IAAI0zG,IAIV,YAAA/yG,UAAV,WACER,KAAKoyG,cAAe,EACfpyG,KAAKy0H,iBACRz0H,KAAKN,YAAYP,WAEnBa,KAAKS,eAGP,YAAAiD,WAAA,SAAWO,GACTjE,KAAKN,YAAYQ,KAAM+D,IAGzB,YAAAN,YAAA,SAAYrD,GACVN,KAAKN,YAAYR,MAAOoB,IAG1B,YAAAsD,eAAA,WACE5D,KAAKy0H,iBAAkB,EACnBz0H,KAAKoyG,cACPpyG,KAAKN,YAAYP,YAGvB,EAhEA,CAAyC,EAAA+E,wB,yaCvFzC,YA2DA,kBAA6BmD,EACA0rG,EACA/I,GAG3B,YAJ2B,IAAA+I,MAAqB3yD,OAAO4yD,mBAEvDD,GAAcA,GAAc,GAAK,EAAI3yD,OAAO4yD,kBAAoBD,EAEzD,SAACxwG,GAA0B,OAAAA,EAAOJ,KAAK,IAAI0yH,EAAextH,EAAS0rG,EAAxC,MAGpC,iBACE,WAAoB1rG,EACA0rG,EACA/I,GAFA,KAAA3iG,UACA,KAAA0rG,aACA,KAAA/I,YAMtB,OAHE,YAAAroG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI8yH,EAAiB30H,EAAYH,KAAKqH,QAASrH,KAAK+yG,WAAY/yG,KAAKgqG,aAEjG,EATA,GAAa,EAAA6qB,iBAuBb,kBAME,WAAYn1H,EACQ2H,EACA0rG,EACA/I,GAHpB,MAIE,YAAMtqG,IAAY,K,OAHA,EAAA2H,UACA,EAAA0rG,aACA,EAAA/I,YARZ,EAAAllG,MAAgB,EAChB,EAAAyrG,OAAiB,EACjB,EAAA6B,cAAwB,EAQ1BW,EAAa3yD,OAAO4yD,oBACtB,EAAKI,OAAS,I,EAkEpB,OA9E4C,OAgB3B,EAAA3gE,SAAf,SAA8BorE,GACrB,IAAA19G,EAAA,EAAAA,WAAYoE,EAAA,EAAAA,OAAQnE,EAAA,EAAAA,MAAO0E,EAAA,EAAAA,MAClC3E,EAAW40H,sBAAsBxwH,EAAQnE,EAAO0E,IAGxC,YAAAzE,MAAV,SAAgBD,GACd,IAAMV,EAAcM,KAAKN,YAEzB,GAAIA,EAAYgB,OACdV,KAAKQ,gBADP,CAKA,IAAMsE,EAAQ9E,KAAK8E,QACnB,GAAI9E,KAAKuwG,OAASvwG,KAAK+yG,WAAY,CACjCrzG,EAAYQ,KAAME,GAClB,IACU,IACFmE,GAAS8C,EADP,KAAAA,SACejH,EAAO0E,GAC9B,GAAK9E,KAAKgqG,UAEH,CACL,IAAMl1E,EAA2B,CAAE30B,WAAYH,KAAMuE,OAAM,EAAEnE,MAAK,EAAE0E,MAAK,GACrD9E,KAAKN,YACbG,IAAIG,KAAKgqG,UAAUC,SAA4B6qB,EAAiBriF,SAAiB,EAAG3d,SAJhG90B,KAAK+0H,sBAAsBxwH,EAAQnE,EAAO0E,GAM5C,MAAOE,GACPtF,EAAYR,MAAO8F,SAGrBhF,KAAKozG,OAAQ5tG,KAAKpF,KAId,YAAA20H,sBAAR,SAA8BxwH,EAAanE,EAAU0E,GACnD9E,KAAKuwG,SACevwG,KAAKN,YACbG,IAAI,EAAA2zG,eAAejvG,EAAQ,IAAI,EAAAV,sBAAsB7D,SAGzD,YAAAQ,UAAV,WACER,KAAKoyG,cAAe,EAChBpyG,KAAKoyG,cAAgC,IAAhBpyG,KAAKuwG,QAC5BvwG,KAAKN,YAAYP,WAEnBa,KAAKS,eAGP,YAAAiD,WAAA,SAAWO,GACTjE,KAAKK,MAAM4D,IAGb,YAAAL,eAAA,WACE,IAAMwvG,EAASpzG,KAAKozG,OACpBpzG,KAAKuwG,SACD6C,GAAUA,EAAO3zG,OAAS,GAC5BO,KAAKK,MAAM+yG,EAAOjE,SAEhBnvG,KAAKoyG,cAAgC,IAAhBpyG,KAAKuwG,QAC5BvwG,KAAKN,YAAYP,YAGvB,EA9EA,CAA4C,EAAA+E,uBAA/B,EAAA4wH,oB,maC9Fb,YACA,QAYA,oBAA4BrjE,GAC1B,OAAO,SAAClvD,GAA0B,OAAAA,EAAOJ,KAAK,IAAI6yH,EAAhB,MAGpC,iBACE,WAAoBvjE,GAAA,KAAAA,WAMtB,OAHE,YAAA9vD,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIizH,EAAkB90H,EAAYH,KAAKyxD,YAEnE,EAPA,GAcA,cACE,WAAY/xD,EAA4B+xD,GAAxC,MACE,YAAM/xD,IAAY,K,OAClB,EAAKG,IAAI,IAAI,EAAAgB,aAAa4wD,I,EAE9B,OALmC,OAKnC,EALA,CAAmC,EAAA7xD,a,qFC/BnC,aA0CA,qBAA6Bq0B,EACA3sB,GAC3B,OAAO,SAAC/E,GAA0B,OAAAA,EAAOJ,KAAK,IAAI,EAAA89G,kBAAkBhsF,EAAW1xB,GAAQ,EAArD,O,oFC1CpC,aAEA,SACA,SACA,SACA,SACA,SAuEA,iBACE0xB,EACA+8E,GAEA,IAAMojB,EAAkB50H,UAAUC,QAAU,EAC5C,OAAO,SAAC8C,GAA0B,OAAAA,EAAOa,KACvC6wB,EAAY,EAAA5S,QAAO,SAACsrF,EAAGhmG,GAAM,OAAAstB,EAAU04E,EAAGhmG,EAAb,MAA2B,EAAA+9B,SACxD,EAAAiL,KAAK,GACLykF,EAAkB,EAAAngB,eAAsBjD,GAAgB,EAAAid,cAAa,WAAM,WAAI,EAAJ,kB,maCtF/E,YA8BA,4BACE,OAAO,SAAwC1rH,GAC7C,OAAOA,EAAOJ,KAAK,IAAI+yH,KAI3B,+BAIA,OAHE,YAAAvzH,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAImzH,EAAyBh1H,KAEzD,EAJA,GAWA,2B,+CAIA,OAJ0C,OAC9B,YAAAE,MAAV,SAAgBi2G,KAGlB,EAJA,CAA0C,EAAA12G,a,maChD1C,YAgEA,qBACE,OAAO,SAAC2C,GAA0B,OAAAA,EAAOJ,KAAK,IAAZ,KAGpC,+BAIA,OAHE,YAAAR,KAAA,SAAMmiB,EAA+BvhB,GACnC,OAAOA,EAAOP,UAAU,IAAIozH,EAAkBtxG,KAElD,EAJA,GAWA,cACE,WAAYpkB,G,OACV,YAAMA,IAAY,KAiBtB,OAnBgC,OAKtB,YAAAkE,eAAR,SAAuBgvE,GACrB,IAAMlzE,EAAcM,KAAKN,YAEzBA,EAAYQ,KAAK0yE,GACjBlzE,EAAYP,YAGJ,YAAAkB,MAAV,SAAgBD,GACdJ,KAAK4D,gBAAe,IAGZ,YAAApD,UAAV,WACER,KAAK4D,gBAAe,IAExB,EAnBA,CAAgC,EAAAhE,a,oFC7EhC,aAEA,SACA,SACA,SACA,SACA,SAkCA,gBACEq0B,EACA+8E,GAEA,IAAMojB,EAAkB50H,UAAUC,QAAU,EAC5C,OAAO,SAAC8C,GAA0B,OAAAA,EAAOa,KACvC6wB,EAAY,EAAA5S,QAAO,SAACsrF,EAAGhmG,GAAM,OAAAstB,EAAU04E,EAAGhmG,EAAb,MAA2B,EAAA+9B,SACxD,EAAAsvE,SAAS,GACTogB,EAAkB,EAAAngB,eAAsBjD,GAAgB,EAAAid,cAAa,WAAM,WAAI,EAAJ,kB,maClD/E,YAoCA,iBAA4B7tH,GAC1B,OAAO,SAACmC,GAA0B,OAAAA,EAAOJ,KAAK,IAAIkzH,EAAhB,MAGpC,iBAIE,WAAYj1H,GACVJ,KAAKI,MAAQA,EAMjB,OAHE,YAAAuB,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIszH,EAAgBn1H,EAAYH,KAAKI,SAEjE,EAXA,GAkBA,cAIE,WAAYV,EAA4BU,GAAxC,MACE,YAAMV,IAAY,K,OAClB,EAAKU,MAAQA,E,EAMjB,OAZoC,OASxB,YAAAC,MAAV,SAAgBmD,GACdxD,KAAKN,YAAYQ,KAAKF,KAAKI,QAE/B,EAZA,CAAoC,EAAAR,a,maCzDpC,YACA,SAqDA,yBACE,OAAO,SAAqC2C,GAC1C,OAAOA,EAAOJ,KAAK,IAAIozH,KAI3B,+BAIA,OAHE,YAAA5zH,KAAA,SAAKxB,EAAyCoC,GAC5C,OAAOA,EAAOP,UAAU,IAAIwzH,EAAsBr1H,KAEtD,EAJA,GAWA,cACE,WAAYT,G,OACV,YAAMA,IAAY,KAkBtB,OApBuC,OAK3B,YAAAW,MAAV,SAAgBD,GACdJ,KAAKN,YAAYQ,KAAK,EAAA2xG,aAAaD,WAAWxxG,KAGtC,YAAAG,OAAV,SAAiBD,GACf,IAAMZ,EAAcM,KAAKN,YACzBA,EAAYQ,KAAK,EAAA2xG,aAAa/1E,YAAYx7B,IAC1CZ,EAAYP,YAGJ,YAAAqB,UAAV,WACE,IAAMd,EAAcM,KAAKN,YACzBA,EAAYQ,KAAK,EAAA2xG,aAAaE,kBAC9BryG,EAAYP,YAEhB,EApBA,CAAuC,EAAAS,a,oFCzEvC,aAgDA,eAAuB61H,GACrB,IAAMtjG,EAA8C,mBAAbsjG,EACnC,SAACjyH,EAAG0qG,GAAM,OAAAunB,EAASjyH,EAAG0qG,GAAK,EAAI1qG,EAArB,GACV,SAACA,EAAG0qG,GAAM,OAAA1qG,EAAI0qG,EAAI1qG,EAAR,GAEd,OAAO,EAAAwC,OAAOmsB,K,oFCrDhB,aAsCA,mB,IAA4B,sDAC1B,OAAO,SAAC5vB,GAA0B,OAAAA,EAAOJ,KAAKR,KAAK,EAAA6yB,MAAW,cAACjyB,GAAM,OAAnC,Q,oFCrCpC,aAiDA,sBACEgvH,EACAze,EACAC,GAEA,YAFA,IAAAA,MAAqB3yD,OAAO4yD,mBAEE,mBAAnBF,EACF,EAAAD,UAAS,WAAM,OAAA0e,IAAiBze,EAAgBC,IAE3B,iBAAnBD,IACTC,EAAaD,GAER,EAAAD,UAAS,WAAM,OAAA0e,IAAiBxe,M,yaCzDzC,YAyCA,qBAAgCc,EACAC,EACAf,GAC9B,YAD8B,IAAAA,MAAqB3yD,OAAO4yD,mBACnD,SAACzwG,GAA0B,OAAAA,EAAOJ,KAAK,IAAIuzH,EAAkB7hB,EAAaC,EAA/C,MAGpC,iBACE,WAAoBD,EACAC,EACAf,GAFA,KAAAc,cACA,KAAAC,OACA,KAAAf,aAQtB,OALE,YAAApxG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI2zH,EAC1Bx1H,EAAYH,KAAK6zG,YAAa7zG,KAAK8zG,KAAM9zG,KAAK+yG,cAGpD,EAXA,GAAa,EAAA2iB,oBAkBb,kBAOE,WAAYh2H,EACQm0G,EACAK,EACAnB,GAHpB,MAIE,YAAMrzG,IAAY,K,OAHA,EAAAm0G,cACA,EAAAK,MACA,EAAAnB,aATZ,EAAAxB,UAAoB,EACpB,EAAAa,cAAwB,EACxB,EAAAgB,OAA4B,GAC5B,EAAA7C,OAAiB,EACf,EAAAzrG,MAAgB,E,EAsE5B,OA3E+C,OAcnC,YAAAzE,MAAV,SAAgBD,GACd,GAAIJ,KAAKuwG,OAASvwG,KAAK+yG,WAAY,CACjC,IAAMjuG,EAAQ9E,KAAK8E,QACbpF,EAAcM,KAAKN,YACrB4zG,OAAG,EACP,IAEEA,GAAMO,EADE,KAAAA,aACU7zG,KAAKk0G,IAAK9zG,EAAO0E,GACnC,MAAOE,GACP,OAAOtF,EAAYR,MAAO8F,GAE5BhF,KAAKuwG,SACLvwG,KAAKqE,UAAUivG,QAEftzG,KAAKozG,OAAO5tG,KAAKpF,IAIb,YAAAiE,UAAR,SAAkBivG,GAChB,IAAM9uG,EAAkB,IAAI,EAAAX,sBAAsB7D,MAC5CN,EAAcM,KAAKN,YACzBA,EAAYG,IAAI2E,GAChB,IAAM+uG,EAAoB,EAAAC,eAAeF,EAAK9uG,GAI1C+uG,IAAsB/uG,GACxB9E,EAAYG,IAAI0zG,IAIV,YAAA/yG,UAAV,WACER,KAAKoyG,cAAe,EACA,IAAhBpyG,KAAKuwG,QAAuC,IAAvBvwG,KAAKozG,OAAO3zG,UACb,IAAlBO,KAAKuxG,UACPvxG,KAAKN,YAAYQ,KAAMF,KAAKk0G,KAE9Bl0G,KAAKN,YAAYP,YAEnBa,KAAKS,eAGP,YAAAiD,WAAA,SAAWO,GACD,IAAAvE,EAAA,KAAAA,YACRM,KAAKk0G,IAAMjwG,EACXjE,KAAKuxG,UAAW,EAChB7xG,EAAYQ,KAAM+D,IAGpB,YAAAL,eAAA,WACE,IAAMwvG,EAASpzG,KAAKozG,OACpBpzG,KAAKuwG,SACD6C,EAAO3zG,OAAS,EAClBO,KAAKK,MAAM+yG,EAAOjE,SACO,IAAhBnvG,KAAKuwG,QAAgBvwG,KAAKoyG,gBACb,IAAlBpyG,KAAKuxG,UACPvxG,KAAKN,YAAYQ,KAAMF,KAAKk0G,KAE9Bl0G,KAAKN,YAAYP,aAGvB,EA3EA,CAA+C,EAAA+E,uBAAlC,EAAAyxH,uB,oFCtEb,aA+CA,eAAuBF,GACrB,IAAMnJ,EAA8C,mBAAbmJ,EACnC,SAACjyH,EAAG0qG,GAAM,OAAAunB,EAASjyH,EAAG0qG,GAAK,EAAI1qG,EAArB,GACV,SAACA,EAAG0qG,GAAM,OAAA1qG,EAAI0qG,EAAI1qG,EAAR,GACd,OAAO,EAAAwC,OAAOsmH,K,maClDhB,aAIA,QAEA,QAmFA,+B,IAAwC,sDAMtC,OAJ2B,IAAvBsJ,EAAYn2H,QAAgB,EAAA0F,QAAQywH,EAAY,MAClDA,EAAsCA,EAAY,IAG7C,SAACrzH,GAA0B,OAAAA,EAAOJ,KAAK,IAAI0zH,EAAhB,MAcpC,qC,IAA8C,sDAG5C,IAAItzH,EAQJ,OAN2B,IAAvBqzH,EAAYn2H,QAAgB,EAAA0F,QAAQywH,EAAY,MAClDA,EAAcA,EAAY,IAG5BrzH,EAASqzH,EAAYzmB,QAEd,EAAAnqF,KAAKziB,GAAQJ,KAAK,IAAI0zH,EAAgCD,KAG/D,iBACE,WAAoBA,GAAA,KAAAA,cAMtB,OAHE,YAAAj0H,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI8zH,EAA4B31H,EAAYH,KAAK41H,eAE7E,EAPA,GASA,cACE,WAAsBl2H,EACFk2H,GADpB,MAEE,YAAMl2H,IAAY,K,OAFE,EAAAA,cACF,EAAAk2H,c,EAuCtB,OAzCgD,OAM9C,YAAAjyH,YAAA,WACE3D,KAAK+1H,yBAGP,YAAAnyH,eAAA,WACE5D,KAAK+1H,yBAGG,YAAAx1H,OAAV,SAAiBD,GACfN,KAAK+1H,wBACL/1H,KAAKS,eAGG,YAAAD,UAAV,WACER,KAAK+1H,wBACL/1H,KAAKS,eAGC,YAAAs1H,sBAAR,WACE,IAAM71H,EAAOF,KAAK41H,YAAYzmB,QAC9B,GAAMjvG,EAAM,CACV,IAAMsE,EAAkB,IAAI,EAAAX,sBAAsB7D,MAC5CN,EAAcM,KAAKN,YACzBA,EAAYG,IAAI2E,GAChB,IAAM+uG,EAAoB,EAAAC,eAAetzG,EAAMsE,GAI3C+uG,IAAsB/uG,GACxB9E,EAAYG,IAAI0zG,QAGlBvzG,KAAKN,YAAYP,YAGvB,EAzCA,CAAgD,EAAA+E,wB,maCnIhD,YA8CA,sBACE,OAAO,SAAC3B,GAA0B,OAAAA,EAAOJ,KAAK,IAAZ,KAGpC,+BAIA,OAHE,YAAAR,KAAA,SAAKxB,EAAgCoC,GACnC,OAAOA,EAAOP,UAAU,IAAIg0H,EAAmB71H,KAEnD,EAJA,GAWA,cAIE,WAAYT,GAAZ,MACE,YAAMA,IAAY,K,OAHZ,EAAAu2H,SAAmB,E,EAqB7B,OAvBoC,OAQlC,YAAA51H,MAAA,SAAMD,GACJ,IAAI81H,EAEAl2H,KAAKi2H,QACPC,EAAO,CAACl2H,KAAKs0G,KAAMl0G,GAEnBJ,KAAKi2H,SAAU,EAGjBj2H,KAAKs0G,KAAOl0G,EAER81H,GACFl2H,KAAKN,YAAYQ,KAAKg2H,IAG5B,EAvBA,CAAoC,EAAAt2H,a,oFC/DpC,aACA,SAoDA,qBAA6Bq0B,EACA3sB,GAC3B,OAAO,SAAC/E,GAA0B,OAChC,EAAA8e,OAAO4S,EAAW3sB,EAAlB,CAA2B/E,GAC3B,EAAA8e,OAAO,EAAAkpG,IAAIt2F,EAAW3sB,GAAtB,CAAuC/E,O,oFCxD3C,YA6CA,mB,IAA4B,sDAC1B,IAAM9C,EAAS02H,EAAW12H,OAC1B,GAAe,IAAXA,EACF,MAAM,IAAIqC,MAAM,uCAElB,OAAO,SAACS,GAA0B,SAAA4c,IAGpC,SAAiBi3G,EAAiB32H,GAchC,OAbe,SAAC+D,GAEd,IADA,IAAI6yH,EAAc7yH,EACTmD,EAAI,EAAGA,EAAIlH,EAAQkH,IAAK,CAC/B,IAAM6C,EAAmB,MAAf6sH,EAAsBA,EAAYD,EAAMzvH,SAAM5B,EACxD,QAAU,IAANyE,EAGF,OAFA6sH,EAAc7sH,EAKlB,OAAO6sH,GAd6BC,CAAQH,EAAY12H,GAAxB,O,8EClDpC,YACA,SA4DA,mBAA8BwyC,GAC5B,OAAOA,EACL,EAAAs6E,WAAU,WAAM,WAAI,EAAJ,UAAkBt6E,GAClC,EAAAs6E,UAAU,IAAI,EAAAzlH,W,8EChElB,aACA,SAUA,2BAAmC1G,GACjC,OAAO,SAACmC,GAA0B,SAAAgqH,UAAU,IAAI,EAAA3S,gBAAmBx5G,GAAjC,O,8ECZpC,aACA,SA8DA,yBACE,OAAO,SAACmC,GAA0B,SAAAgqH,UAAU,IAAI,EAAAla,aAAd,O,8EChEpC,aACA,SASA,yBAAoC2C,EACAC,EACAshB,EACAvsB,GAE9BusB,GAAsD,mBAAxBA,IAChCvsB,EAAYusB,GAGd,IAAMtkF,EAA0C,mBAAxBskF,EAAqCA,OAAsBxxH,EAC7EuB,EAAU,IAAI,EAAA0vG,cAAiBhB,EAAYC,EAAYjL,GAE7D,OAAO,SAACznG,GAA0B,SAAAgqH,WAAU,WAAM,OAAAjmH,IAAS2rC,EAAzB,O,oFCtBpC,YAEA,SAsBA,kB,IAAwB,sDACtB,OAAO,SAA8B1vC,GAOnC,OAJ2B,IAAvBqwG,EAAYnzG,QAAgB,EAAA0F,QAAQytG,EAAY,MAClDA,EAAcA,EAAY,IAGrBrwG,EAAOJ,KAAKR,KAAK,EAAA43D,KAAU,cAACh3D,GAAM,OAAMqwG,Q,0aChCnD,YAEA,SA2DA,kBAA0BlrG,GACxB,YADwB,IAAAA,OAAiB,GAClC,SAACnF,GACN,OAAc,IAAVmF,EACK,EAAA/H,QACE+H,EAAQ,EACVnF,EAAOJ,KAAK,IAAIq0H,GAAgB,EAAGj0H,IAEnCA,EAAOJ,KAAK,IAAIq0H,EAAe9uH,EAAQ,EAAGnF,MAKvD,iBACE,WAAoBmF,EACAnF,GADA,KAAAmF,QACA,KAAAnF,SAKtB,OAHE,YAAAZ,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIy0H,EAAiBt2H,EAAYH,KAAK0H,MAAO1H,KAAKuC,UAE9E,EAPA,GAcA,cACE,WAAY7C,EACQgI,EACAnF,GAFpB,MAGE,YAAM7C,IAAY,K,OAFA,EAAAgI,QACA,EAAAnF,S,EActB,OAjBkC,OAMhC,YAAApD,SAAA,WACE,IAAKa,KAAKT,UAAW,CACb,IAAEgD,EAAF,KAAEA,OAAQmF,EAAV,KAAUA,MAChB,GAAc,IAAVA,EACF,OAAO,YAAMvI,SAAQ,WACZuI,GAAS,IAClB1H,KAAK0H,MAAQA,EAAQ,GAEvBnF,EAAOP,UAAUhC,KAAKW,4BAG5B,EAjBA,CAAkC,EAAAf,a,maCrFlC,YAIA,QAgCA,sBAA8B82H,GAC5B,OAAO,SAACn0H,GAA0B,OAAAA,EAAOJ,KAAK,IAAIw0H,EAAhB,MAGpC,iBACE,WAAsBD,GAAA,KAAAA,WAMxB,OAHE,YAAA/0H,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI40H,EAAqBz2H,EAAYH,KAAK02H,SAAUn0H,KAEhF,EAPA,GAcA,cAOE,WAAY7C,EACQg3H,EACAn0H,GAFpB,MAGE,YAAM7C,IAAY,K,OAFA,EAAAg3H,WACA,EAAAn0H,SAJZ,EAAAs0H,2BAAqC,E,EAwE/C,OA7EyC,OAavC,YAAAnzH,WAAA,WACE1D,KAAK62H,2BAA4B,EACjC72H,KAAKuC,OAAOP,UAAUhC,OAGxB,YAAA4D,eAAA,WACE,IAAuC,IAAnC5D,KAAK62H,0BACP,OAAO,YAAM13H,SAAQ,YAIzB,YAAAA,SAAA,WAGE,GAFAa,KAAK62H,2BAA4B,GAE5B72H,KAAKT,UAAW,CAInB,GAHKS,KAAK82H,SACR92H,KAAK+2H,sBAEF/2H,KAAKg3H,qBAAuBh3H,KAAKg3H,oBAAoBt2H,OACxD,OAAO,YAAMvB,SAAQ,WAGvBa,KAAKW,yBACLX,KAAKyrB,cAAevrB,UAAK6E,KAK7B,YAAAhD,aAAA,WACQ,IAAE0pB,EAAF,KAAEA,cAAeurG,EAAjB,KAAiBA,oBACnBvrG,IACFA,EAAchrB,cACdT,KAAKyrB,mBAAgB1mB,GAEnBiyH,IACFA,EAAoBv2H,cACpBT,KAAKg3H,yBAAsBjyH,GAE7B/E,KAAK82H,aAAU/xH,GAIjB,YAAApE,uBAAA,WACU,IAAAoB,EAAA,KAAAA,aAMR,OAJA/B,KAAK+B,aAAe,KACpB,YAAMpB,uBAAsB,WAC5BX,KAAK+B,aAAeA,EAEb/B,MAGD,YAAA+2H,mBAAR,WAEE,IAAID,EADJ92H,KAAKyrB,cAAgB,IAAI,EAAA3kB,QAEzB,IAEEgwH,GAAUJ,EADF,KAAAA,UACW12H,KAAKyrB,eACxB,MAAOzmB,GACP,OAAO,YAAM7F,SAAQ,WAEvBa,KAAK82H,QAAUA,EACf92H,KAAKg3H,oBAAsB,EAAAxjB,eAAesjB,EAAS,IAAI,EAAAjzH,sBAAsB7D,QAEjF,EA7EA,CAAyC,EAAAkE,wB,maCxDzC,YAmDA,iBAAyBwD,GACvB,YADuB,IAAAA,OAAiB,GACjC,SAACnF,GAA0B,OAAAA,EAAOJ,KAAK,IAAI80H,EAAcvvH,EAA9BnF,MAGpC,iBACE,WAAoBmF,EACAnF,GADA,KAAAmF,QACA,KAAAnF,SAMtB,OAHE,YAAAZ,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIk1H,EAAgB/2H,EAAYH,KAAK0H,MAAO1H,KAAKuC,UAE7E,EARA,GAeA,cACE,WAAY7C,EACQgI,EACAnF,GAFpB,MAGE,YAAM7C,IAAY,K,OAFA,EAAAgI,QACA,EAAAnF,S,EActB,OAjBiC,OAM/B,YAAArD,MAAA,SAAMoB,GACJ,IAAKN,KAAKT,UAAW,CACb,IAAEgD,EAAF,KAAEA,OAAQmF,EAAV,KAAUA,MAChB,GAAc,IAAVA,EACF,OAAO,YAAMxI,MAAK,UAACoB,GACVoH,GAAS,IAClB1H,KAAK0H,MAAQA,EAAQ,GAEvBnF,EAAOP,UAAUhC,KAAKW,4BAG5B,EAjBA,CAAiC,EAAAf,a,maCpEjC,YAIA,QAgBA,qBAA6B82H,GAC3B,OAAO,SAACn0H,GAA0B,OAAAA,EAAOJ,KAAK,IAAIg1H,EAAkBT,EAAlCn0H,MAGpC,iBACE,WAAsBm0H,EACAn0H,GADA,KAAAm0H,WACA,KAAAn0H,SAMxB,OAHE,YAAAZ,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIo1H,EAAoBj3H,EAAYH,KAAK02H,SAAU12H,KAAKuC,UAEpF,EARA,GAeA,cAME,WAAY7C,EACQg3H,EACAn0H,GAFpB,MAGE,YAAM7C,IAAY,K,OAFA,EAAAg3H,WACA,EAAAn0H,S,EA0DtB,OAlEwC,OAYtC,YAAArD,MAAA,SAAMoB,GACJ,IAAKN,KAAKT,UAAW,CAEnB,IAAIqF,EAAS5E,KAAK4E,OACdkyH,EAAe92H,KAAK82H,QACpBE,EAAsBh3H,KAAKg3H,oBAE/B,GAAKF,EAUH92H,KAAK4E,YAASG,EACd/E,KAAKg3H,yBAAsBjyH,MAXf,CACZH,EAAS,IAAI,EAAAkC,QACb,IAEEgwH,GAAUJ,EADF,KAAAA,UACW9xH,GACnB,MAAOI,GACP,OAAO,YAAM9F,MAAK,UAAC8F,GAErBgyH,EAAsB,EAAAxjB,eAAesjB,EAAS,IAAI,EAAAjzH,sBAAsB7D,OAM1EA,KAAKW,yBAELX,KAAK4E,OAASA,EACd5E,KAAK82H,QAAUA,EACf92H,KAAKg3H,oBAAsBA,EAE3BpyH,EAAQ1E,KAAKI,KAKjB,YAAAyB,aAAA,WACQ,IAAE6C,EAAF,KAAEA,OAAQoyH,EAAV,KAAUA,oBACZpyH,IACFA,EAAOnE,cACPT,KAAK4E,YAASG,GAEZiyH,IACFA,EAAoBv2H,cACpBT,KAAKg3H,yBAAsBjyH,GAE7B/E,KAAK82H,aAAU/xH,GAGjB,YAAArB,WAAA,WACU,IAAA3B,EAAA,KAAAA,aAER/B,KAAK+B,aAAe,KACpB/B,KAAKW,yBACLX,KAAK+B,aAAeA,EAEpB/B,KAAKuC,OAAOP,UAAUhC,OAE1B,EAlEA,CAAwC,EAAAkE,wB,maCrCxC,YA0CA,kBAA0BwyH,GACxB,OAAO,SAACn0H,GAA0B,OAAAA,EAAOJ,KAAK,IAAIk1H,EAAhB,MAGpC,iBACE,WAAoBX,GAAA,KAAAA,WAStB,OANE,YAAA/0H,KAAA,SAAKxB,EAA2BoC,GAC9B,IAAM+0H,EAAmB,IAAIC,EAAiBp3H,GACxCgD,EAAeZ,EAAOP,UAAUs1H,GAEtC,OADAn0H,EAAatD,IAAI,EAAA2zG,eAAexzG,KAAK02H,SAAU,IAAI,EAAA7yH,sBAAsByzH,KAClEn0H,GAEX,EAVA,GAiBA,yE,OAEU,EAAAouG,UAAoB,E,EAqB9B,OAvBqC,OAIzB,YAAAlxG,MAAV,SAAgBD,GACdJ,KAAKI,MAAQA,EACbJ,KAAKuxG,UAAW,GAGlB,YAAA7tG,WAAA,WACE1D,KAAK6xH,aAGP,YAAAjuH,eAAA,WACE5D,KAAK6xH,aAGP,YAAAA,UAAA,WACM7xH,KAAKuxG,WACPvxG,KAAKuxG,UAAW,EAChBvxG,KAAKN,YAAYQ,KAAMF,KAAKI,SAGlC,EAvBA,CAAqC,EAAA8D,wB,maClErC,YACA,QA6CA,sBAA8Bi7G,EAAgBnV,GAC5C,YAD4C,IAAAA,MAA2B,EAAA5iG,OAChE,SAAC7E,GAA0B,OAAAA,EAAOJ,KAAK,IAAIq1H,EAAmBrY,EAAnC,MAGpC,iBACE,WAAoBA,EACAnV,GADA,KAAAmV,SACA,KAAAnV,YAMtB,OAHE,YAAAroG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIy1H,EAAqBt3H,EAAYH,KAAKm/G,OAAQn/G,KAAKgqG,aAEnF,EARA,GAeA,cAIE,WAAYtqG,EACQy/G,EACAnV,GAFpB,MAGE,YAAMtqG,IAAY,K,OAFA,EAAAy/G,SACA,EAAAnV,YAJpB,EAAAuH,UAAoB,EAMlB,EAAK1xG,IAAImqG,EAAUC,SAASytB,EAAsBvY,EAAQ,CAAEh/G,WAAY,EAAMg/G,OAAM,K,EAcxF,OAtBsC,OAW1B,YAAA9+G,MAAV,SAAgBD,GACdJ,KAAKkyH,UAAY9xH,EACjBJ,KAAKuxG,UAAW,GAGlB,YAAA7tG,WAAA,WACM1D,KAAKuxG,WACPvxG,KAAKuxG,UAAW,EAChBvxG,KAAKN,YAAYQ,KAAKF,KAAKkyH,aAGjC,EAtBA,CAAsC,EAAAtyH,YAwBtC,SAAS83H,EAAoD5iG,GACrD,IAAA30B,EAAA,EAAAA,WAAYg/G,EAAA,EAAAA,OAClBh/G,EAAWuD,aACX1D,KAAKiqG,SAASn1E,EAAOqqF,K,maC5FvB,YA8DA,yBAAiCwY,EACA/+D,GAC/B,OAAO,SAACr2D,GAA0B,OAAAA,EAAOJ,KAAK,IAAIy1H,EAAsBD,EAAtC,MAGpC,iBACE,WAAoBA,EACA/+D,GADA,KAAA++D,YACA,KAAA/+D,aAMtB,OAHE,YAAAj3D,KAAA,SAAKxB,EAAiCoC,GACpC,OAAOA,EAAOP,UAAU,IAAI61H,EAAwB13H,EAAYH,KAAK23H,UAAW33H,KAAK44D,cAEzF,EARA,GAAa,EAAAg/D,wBAeb,kBAKE,WAAYl4H,EACQi4H,EACA/+D,GAFpB,MAGE,YAAMl5D,IAAY,K,OAFA,EAAAi4H,YACA,EAAA/+D,aANZ,EAAAk/D,GAAU,GACV,EAAAC,GAAU,GACV,EAAAC,cAAe,EAMpB,EAAKt4H,YAA6BG,IAAI83H,EAAU31H,UAAU,IAAIi2H,EAAiCv4H,EAAa,K,EA4DjH,OArEmD,OAYvC,YAAAW,MAAV,SAAgBD,GACVJ,KAAKg4H,cAAmC,IAAnBh4H,KAAK+3H,GAAGt4H,OAC/BO,KAAKk4H,MAAK,IAEVl4H,KAAK83H,GAAGtyH,KAAKpF,GACbJ,KAAKm4H,gBAIF,YAAA33H,UAAP,WACMR,KAAKg4H,aACPh4H,KAAKk4H,KAAwB,IAAnBl4H,KAAK83H,GAAGr4H,QAAmC,IAAnBO,KAAK+3H,GAAGt4H,QAE1CO,KAAKg4H,cAAe,EAEtBh4H,KAAKS,eAGP,YAAA03H,YAAA,WAEE,IADM,IAAEL,EAAF,KAAEA,GAAIC,EAAN,KAAMA,GAAIn/D,EAAV,KAAUA,WACTk/D,EAAGr4H,OAAS,GAAKs4H,EAAGt4H,OAAS,GAAG,CACrC,IAAIi+B,EAAIo6F,EAAG3oB,QACPxxE,EAAIo6F,EAAG5oB,QACPipB,GAAW,EACf,IACEA,EAAWx/D,EAAaA,EAAWl7B,EAAGC,GAAKD,IAAMC,EACjD,MAAO34B,GACPhF,KAAKN,YAAYR,MAAM8F,GAEpBozH,GACHp4H,KAAKk4H,MAAK,KAKhB,YAAAA,KAAA,SAAK93H,GACK,IAAAV,EAAA,KAAAA,YACRA,EAAYQ,KAAKE,GACjBV,EAAYP,YAGd,YAAAk5H,MAAA,SAAMj4H,GACAJ,KAAKg4H,cAAmC,IAAnBh4H,KAAK83H,GAAGr4H,OAC/BO,KAAKk4H,MAAK,IAEVl4H,KAAK+3H,GAAGvyH,KAAKpF,GACbJ,KAAKm4H,gBAIT,YAAAG,UAAA,WACMt4H,KAAKg4H,aACPh4H,KAAKk4H,KAAwB,IAAnBl4H,KAAK83H,GAAGr4H,QAAmC,IAAnBO,KAAK+3H,GAAGt4H,QAE1CO,KAAKg4H,cAAe,GAG1B,EArEA,CAAmD,EAAAp4H,YAAtC,EAAAi4H,0BAuEb,kBACE,WAAYn4H,EAAkCmC,GAA9C,MACE,YAAMnC,IAAY,K,OAD0B,EAAAmC,S,EAiBhD,OAlBqD,OAKzC,YAAAxB,MAAV,SAAgBD,GACdJ,KAAK6B,OAAOw2H,MAAMj4H,IAGV,YAAAG,OAAV,SAAiBD,GACfN,KAAK6B,OAAO3C,MAAMoB,GAClBN,KAAKS,eAGG,YAAAD,UAAV,WACER,KAAK6B,OAAOy2H,YACZt4H,KAAKS,eAET,EAlBA,CAAqD,EAAAb,a,8EC1JrD,aACA,SACA,QAIA,SAAS24H,IACP,OAAO,IAAI,EAAAzxH,QAeb,mBACE,OAAO,SAACvE,GAA0B,SAAAsyG,UAAA,CAAW,EAAA0X,UAAUgM,EAAV,CAAX,O,8VCvBpC,aAiEA,uBACEC,EACAvjB,EACAjL,GAEA,IAAI3oG,EAWJ,OATEA,EADEm3H,GAAoD,WAA9B,EAAOA,GACtBA,EAEA,CACPxjB,WAAYwjB,EACZvjB,WAAU,EACVJ,UAAU,EACV7K,UAAS,GAGN,SAACznG,GAA0B,OAAAA,EAAOJ,KAG3C,SAAgC,G,IAM1BmE,EAEAnD,EAPJ,IAAA6xG,kBAAA,IAAa,EAAb,2BACA,IAAAC,kBAAA,IAAa,EAAb,2BACA,IAAAJ,SACA7K,EAAA,EAAAA,UAGI6K,EAAW,EAEXzuG,GAAW,EACXgjB,GAAa,EAEjB,OAAO,SAEL7mB,GAGA,IAAI8nG,EADJwK,KAEKvuG,GAAWF,GACdA,GAAW,EACXE,EAAU,IAAI,EAAA0vG,cAAiBhB,EAAYC,EAAYjL,GACvDK,EAAW/jG,EAAQtE,UAAUhC,MAC7BmD,EAAeZ,EAAOP,UAAU,CAC9B9B,KAAI,SAACE,GACHkG,EAAQpG,KAAKE,IAEflB,MAAK,SAACoB,GACJ8F,GAAW,EACXE,EAAQpH,MAAMoB,IAEhBnB,SAAQ,WACNiqB,GAAa,EACbjmB,OAAe4B,EACfuB,EAAQnH,cAQRiqB,IACFjmB,OAAe4B,IAGjBslG,EAAW/jG,EAAQtE,UAAUhC,MAG/BA,KAAKH,KAAI,WACPg1G,IACAxK,EAAS5pG,cACT4pG,OAAWtlG,EACP5B,IAAiBimB,GAAcqvG,GAA4B,IAAb5jB,IAChD1xG,EAAa1C,cACb0C,OAAe4B,EACfuB,OAAUvB,OA1D8B2zH,CAAZ,O,maChFpC,YACA,SAkDA,kBAA0BzkG,GACxB,OAAO,SAAC1xB,GAA0B,OAAAA,EAAOJ,KAAK,IAAIw2H,EAAe1kG,EAA/B1xB,MAGpC,iBACE,WAAoB0xB,EACA1xB,GADA,KAAA0xB,YACA,KAAA1xB,SAMtB,OAHE,YAAAZ,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI42H,EAAiBz4H,EAAYH,KAAKi0B,UAAWj0B,KAAKuC,UAElF,EARA,GAeA,cAKE,WAAY7C,EACQu0B,EACA1xB,GAFpB,MAGE,YAAM7C,IAAY,K,OAFA,EAAAu0B,YACA,EAAA1xB,SANZ,EAAAs2H,WAAqB,EAErB,EAAA/zH,MAAgB,E,EA+C1B,OAlDkC,OAWxB,YAAAg0H,iBAAR,SAAyB14H,GACnBJ,KAAK64H,UACP74H,KAAKN,YAAYR,MAAM,4CAEvBc,KAAK64H,WAAY,EACjB74H,KAAK+4H,YAAc34H,IAIb,YAAAC,MAAV,SAAgBD,GACd,IAAM0E,EAAQ9E,KAAK8E,QAEf9E,KAAKi0B,UACPj0B,KAAK40H,QAAQx0H,EAAO0E,GAEpB9E,KAAK84H,iBAAiB14H,IAIlB,YAAAw0H,QAAR,SAAgBx0H,EAAU0E,GACxB,IACM9E,KAAKi0B,UAAU7zB,EAAO0E,EAAO9E,KAAKuC,SACpCvC,KAAK84H,iBAAiB14H,GAExB,MAAOE,GACPN,KAAKN,YAAYR,MAAMoB,KAIjB,YAAAE,UAAV,WACE,IAAMd,EAAcM,KAAKN,YAErBM,KAAK8E,MAAQ,GACfpF,EAAYQ,KAAKF,KAAK64H,UAAY74H,KAAK+4H,iBAAch0H,GACrDrF,EAAYP,YAEZO,EAAYR,MAAM,IAAI,EAAA2xG,aAG5B,EAlDA,CAAkC,EAAAjxG,a,maCvElC,YAeA,gBAAwB8H,GACtB,OAAO,SAACnF,GAA0B,OAAAA,EAAOJ,KAAK,IAAI62H,EAAhB,MAGpC,iBACE,WAAoBhyD,GAAA,KAAAA,QAMtB,OAHE,YAAArlE,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIi3H,EAAe94H,EAAYH,KAAKgnE,SAEhE,EAPA,GAcA,cAGE,WAAYtnE,EAAoCsnE,GAAhD,MACE,YAAMtnE,IAAY,K,OAD4B,EAAAsnE,QAFhD,EAAAt/D,MAAgB,E,EAWlB,OAZgC,OAOpB,YAAArH,MAAV,SAAgBmD,KACRxD,KAAK0H,MAAQ1H,KAAKgnE,OACtBhnE,KAAKN,YAAYQ,KAAKsD,IAG5B,EAZA,CAAgC,EAAA5D,a,maCjChC,YACA,SA0CA,oBAA4B8H,GAC1B,OAAO,SAACnF,GAA0B,OAAAA,EAAOJ,KAAK,IAAI+2H,EAAhB,MAGpC,iBACE,WAAoBC,GAClB,GADkB,KAAAA,aACdn5H,KAAKm5H,WAAa,EACpB,MAAM,IAAI,EAAAxoB,wBAahB,OATE,YAAAhvG,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAwB,IAApBvC,KAAKm5H,WAGA52H,EAAOP,UAAU,IAAI,EAAApC,WAAWO,IAEhCoC,EAAOP,UAAU,IAAIo3H,EAAmBj5H,EAAYH,KAAKm5H,cAGtE,EAhBA,GAuBA,cAIE,WAAYz5H,EAAoCy5H,GAAhD,MACE,YAAMz5H,IAAY,K,OAD4B,EAAAy5H,aAFxC,EAAAE,OAAiB,EAIvB,EAAKC,MAAQ,IAAItyH,MAASmyH,G,EAkB9B,OAxBoC,OASxB,YAAA94H,MAAV,SAAgBD,GACd,IAAMm5H,EAAYv5H,KAAKm5H,WACjBzxH,EAAQ1H,KAAKq5H,SAEnB,GAAI3xH,EAAQ6xH,EACVv5H,KAAKs5H,MAAM5xH,GAAStH,MACf,CACL,IAAMo5H,EAAe9xH,EAAQ6xH,EACvB7hB,EAAO13G,KAAKs5H,MACZG,EAAW/hB,EAAK8hB,GAEtB9hB,EAAK8hB,GAAgBp5H,EACrBJ,KAAKN,YAAYQ,KAAKu5H,KAG5B,EAxBA,CAAoC,EAAA75H,a,maClEpC,YAyCA,qBAA6B82H,GAC3B,OAAO,SAACn0H,GAA0B,OAAAA,EAAOJ,KAAK,IAAIu3H,EAAhB,MAGpC,iBACE,WAAoBhD,GAAA,KAAAA,WAMtB,OAHE,YAAA/0H,KAAA,SAAKjC,EAA4B6C,GAC/B,OAAOA,EAAOP,UAAU,IAAI23H,EAAoBj6H,EAAaM,KAAK02H,YAEtE,EAPA,GAcA,cAKE,WAAYh3H,EAA4Bg3H,GAAxC,MACE,YAAMh3H,IAAY,KAJZ,EAAA6xG,UAAoB,EAK1B,IAAM/sG,EAAkB,IAAI,EAAAX,sBAAsB,GAClD,EAAKhE,IAAI2E,GACT,EAAK+uG,kBAAoB/uG,EACzB,IAAM+uG,EAAoB,EAAAC,eAAekjB,EAAUlyH,G,OAI/C+uG,IAAsB/uG,IACxB,EAAK3E,IAAI0zG,GACT,EAAKA,kBAAoBA,G,EAoB/B,OApCwC,OAoB5B,YAAAlzG,MAAV,SAAgBD,GACVJ,KAAKuxG,UACP,YAAMlxG,MAAK,UAACD,IAIhB,YAAAsD,WAAA,WACE1D,KAAKuxG,UAAW,EACZvxG,KAAKuzG,mBACPvzG,KAAKuzG,kBAAkB9yG,eAI3B,YAAAmD,eAAA,aAGF,EApCA,CAAwC,EAAAM,wB,maC9DxC,YAeA,qBAA6B+vB,GAC3B,OAAO,SAAC1xB,GAA0B,OAAAA,EAAOJ,KAAK,IAAIy3H,EAAhB,MAGpC,iBACE,WAAoB3lG,GAAA,KAAAA,YAMtB,OAHE,YAAAtyB,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI63H,EAAoB15H,EAAYH,KAAKi0B,aAErE,EAPA,GAcA,cAIE,WAAYv0B,EACQu0B,GADpB,MAEE,YAAMv0B,IAAY,K,OADA,EAAAu0B,YAJZ,EAAA6lG,UAAoB,EACpB,EAAAh1H,MAAgB,E,EA0B1B,OA5BqC,OASzB,YAAAzE,MAAV,SAAgBD,GACd,IAAMV,EAAcM,KAAKN,YACrBM,KAAK85H,UACP95H,KAAK+5H,iBAAiB35H,GAGnBJ,KAAK85H,UACRp6H,EAAYQ,KAAKE,IAIb,YAAA25H,iBAAR,SAAyB35H,GACvB,IACE,IAAMmE,EAASvE,KAAKi0B,UAAU7zB,EAAOJ,KAAK8E,SAC1C9E,KAAK85H,SAAWhhH,QAAQvU,GACxB,MAAOjE,GACPN,KAAKN,YAAYR,MAAMoB,KAG7B,EA5BA,CAAqC,EAAAV,a,oFClCrC,aACA,SAiEA,uB,IAAgC,sDAC9B,IAAMoqG,EAAYtpE,EAAMA,EAAMjhC,OAAS,GACvC,OAAI,EAAAwyG,YAAYjI,IAEdtpE,EAAMnd,MACC,SAAChhB,GAA0B,SAAAgD,OAAOm7B,EAAcn+B,EAArB,KAE3B,SAACA,GAA0B,SAAAgD,OAAOm7B,EAAP,M,8ECvEtC,cA6CA,uBAA+BspE,EAA0Bv3C,GACvD,YADuD,IAAAA,MAAA,GAChD,SAAqClwD,GAC1C,OAAOA,EAAOJ,KAAK,IAAI63H,EAAuBhwB,EAAWv3C,MAI7D,iBACE,WAAoBu3C,EACAv3C,GADA,KAAAu3C,YACA,KAAAv3C,QAOtB,OALE,YAAA9wD,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAO,IAAI,EAAA03H,sBACT13H,EAAQvC,KAAKyyD,MAAOzyD,KAAKgqG,WACzBhoG,UAAU7B,IAEhB,EATA,I,maCnDA,YACA,SACA,SAYA,cAYE,WAAmBoC,EACC23H,EACAlwB,QADA,IAAAkwB,MAAA,QACA,IAAAlwB,MAA2B,EAAAoU,MAF/C,MAGE,cAAO,K,OAHU,EAAA77G,SACC,EAAA23H,YACA,EAAAlwB,cAEb,EAAAsV,UAAU4a,IAAcA,EAAY,KACvC,EAAKA,UAAY,GAEdlwB,GAA2C,mBAAvBA,EAAUC,WACjC,EAAKD,UAAY,EAAAoU,M,EAcvB,OAlC8C,OAErC,EAAAn+G,OAAP,SAAiBsC,EAAuBkwD,EAAmBu3C,GACzD,YADsC,IAAAv3C,MAAA,QAAmB,IAAAu3C,MAA2B,EAAAoU,MAC7E,IAAI6b,EAAsB13H,EAAQkwD,EAAOu3C,IAI3C,EAAAv3D,SAAP,SAA6CorE,GACnC,IAAAt7G,EAAA,EAAAA,OAAQpC,EAAA,EAAAA,WAChB,OAAOH,KAAKH,IAAI0C,EAAOP,UAAU7B,KAgBnC,YAAA+B,WAAA,SAAW/B,GACT,IAAMsyD,EAAQzyD,KAAKk6H,UACb33H,EAASvC,KAAKuC,OAGpB,OAFkBvC,KAAKgqG,UAENC,SAA2BgwB,EAAsBxnF,SAAUggB,EAAO,CACjFlwD,OAAM,EAAEpC,WAAU,KAGxB,EAlCA,CAA8C,EAAAmC,YAAjC,EAAA23H,yB,8EChBb,aACA,SA4DA,uBACE,OAAO,EAAAtsE,UAAU,EAAAjpB,Y,8EC9DnB,aAkDA,uBACE6sF,EACAze,GAEA,OAAOA,EAAiB,EAAAnlD,WAAU,WAAM,OAAA4jE,IAAiBze,GAAkB,EAAAnlD,WAAU,WAAM,OAAA4jE,O,maClD7F,YA0CA,qBAA6BmF,GAC3B,OAAO,SAACn0H,GAA0B,OAAAA,EAAOJ,KAAK,IAAIg4H,EAAhB,MAGpC,iBACE,WAAoBzD,GAAA,KAAAA,WAYtB,OATE,YAAA/0H,KAAA,SAAKxB,EAA2BoC,GAC9B,IAAM63H,EAAsB,IAAIC,EAAoBl6H,GAC9CqzH,EAAuB,EAAAhgB,eAAexzG,KAAK02H,SAAU,IAAI,EAAA7yH,sBAAsBu2H,IACrF,OAAI5G,IAAyB4G,EAAoBvB,WAC/CuB,EAAoBv6H,IAAI2zH,GACjBjxH,EAAOP,UAAUo4H,IAEnBA,GAEX,EAbA,GAoBA,cAGE,WAAY16H,GAAZ,MACE,YAAMA,IAAY,K,OAHpB,EAAAm5H,WAAY,E,EAcd,OAfwC,OAOtC,YAAAn1H,WAAA,WACE1D,KAAK64H,WAAY,EACjB74H,KAAKb,YAGP,YAAAyE,eAAA,aAGF,EAfA,CAAwC,EAAAM,wB,maCrExC,YAmDA,qBACI+vB,EACAqmG,GACF,YADE,IAAAA,OAAA,GACK,SAAC/3H,GACG,OAAAA,EAAOJ,KAAK,IAAIo4H,EAAkBtmG,EAAWqmG,MAG1D,iBACE,WACYrmG,EACAqmG,GADA,KAAArmG,YACA,KAAAqmG,YAMd,OAJE,YAAA34H,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UACV,IAAIw4H,EAAoBr6H,EAAYH,KAAKi0B,UAAWj0B,KAAKs6H,aAEjE,EATA,GAgBA,cAGE,WACI56H,EACQu0B,EACAqmG,GAHZ,MAIE,YAAM56H,IAAY,K,OAFR,EAAAu0B,YACA,EAAAqmG,YALJ,EAAAx1H,MAAgB,E,EAgC1B,OAjCqC,OAUzB,YAAAzE,MAAV,SAAgBD,GACd,IACImE,EADE7E,EAAcM,KAAKN,YAEzB,IACE6E,EAASvE,KAAKi0B,UAAU7zB,EAAOJ,KAAK8E,SACpC,MAAOxE,GAEP,YADAZ,EAAYR,MAAMoB,GAGpBN,KAAKy6H,eAAer6H,EAAOmE,IAGrB,YAAAk2H,eAAR,SAAuBr6H,EAAUs6H,GAC/B,IAAMh7H,EAAcM,KAAKN,YACrBoZ,QAAQ4hH,GACVh7H,EAAYQ,KAAKE,IAEbJ,KAAKs6H,WACP56H,EAAYQ,KAAKE,GAEnBV,EAAYP,aAGlB,EAjCA,CAAqC,EAAAS,a,maC3ErC,YAGA,SACA,SA6DA,eAAuB8xG,EACAxyG,EACAC,GACrB,OAAO,SAA6BoD,GAClC,OAAOA,EAAOJ,KAAK,IAAIw4H,EAAWjpB,EAAgBxyG,EAAOC,MAI7D,iBACE,WAAoBuyG,EACAxyG,EACAC,GAFA,KAAAuyG,iBACA,KAAAxyG,QACA,KAAAC,WAKtB,OAHE,YAAAwC,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAI44H,EAAcz6H,EAAYH,KAAK0xG,eAAgB1xG,KAAKd,MAAOc,KAAKb,YAEhG,EARA,GAgBA,cASE,WAAYO,EACAqB,EACA7B,EACAC,GAHZ,MAII,YAAMO,IAAY,K,OAVd,EAAAm7H,SAAiC,EAAA33E,KAEjC,EAAA43E,UAAkC,EAAA53E,KAElC,EAAA63E,aAA6B,EAAA73E,KAOjC,EAAK43E,UAAY57H,GAAS,EAAAgkD,KAC1B,EAAK63E,aAAe57H,GAAY,EAAA+jD,KAC5B,EAAAjiD,WAAWF,IACb,EAAKK,SAAW,EAChB,EAAKy5H,SAAW95H,GACPA,IACT,EAAKK,SAAWL,EAChB,EAAK85H,SAAW95H,EAAeb,MAAQ,EAAAgjD,KACvC,EAAK43E,UAAY/5H,EAAe7B,OAAS,EAAAgkD,KACzC,EAAK63E,aAAeh6H,EAAe5B,UAAY,EAAA+jD,M,EAiCvD,OAxD+B,OA2B7B,YAAA7iD,MAAA,SAAMD,GACJ,IACEJ,KAAK66H,SAASl5H,KAAK3B,KAAKoB,SAAUhB,GAClC,MAAOE,GAEP,YADAN,KAAKN,YAAYR,MAAMoB,GAGzBN,KAAKN,YAAYQ,KAAKE,IAGxB,YAAAG,OAAA,SAAOD,GACL,IACEN,KAAK86H,UAAUn5H,KAAK3B,KAAKoB,SAAUd,GACnC,MAAOA,GAEP,YADAN,KAAKN,YAAYR,MAAMoB,GAGzBN,KAAKN,YAAYR,MAAMoB,IAGzB,YAAAE,UAAA,WACE,IACER,KAAK+6H,aAAap5H,KAAK3B,KAAKoB,UAC5B,MAAOd,GAEP,YADAN,KAAKN,YAAYR,MAAMoB,GAGzB,OAAON,KAAKN,YAAYP,YAE5B,EAxDA,CAA+B,EAAAS,a,maCzF/B,YAEA,QAEA,SAkFA,wBAAgCq9G,EACAjT,EACA3oG,GAC9B,YAF8B,IAAA2oG,MAA2B,EAAA5iG,YAC3B,IAAA/F,MAAyB,EAAA++G,uBAChD,SAAC79G,GAA0B,OAAAA,EAAOJ,KAAK,IAAI64H,EAAqB/d,EAAUjT,EAAW3oG,EAAOg/G,QAASh/G,EAA1E,aAGpC,iBACE,WAAoB47G,EACAjT,EACAqW,EACAC,GAHA,KAAArD,WACA,KAAAjT,YACA,KAAAqW,UACA,KAAAC,WAQtB,OALE,YAAA3+G,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UACZ,IAAIi5H,EAAuB96H,EAAYH,KAAKi9G,SAAUj9G,KAAKgqG,UAAWhqG,KAAKqgH,QAASrgH,KAAKsgH,YAG/F,EAZA,GAmBA,cAKE,WAAY5gH,EACQu9G,EACAjT,EACAqW,EACAC,GAJpB,MAKE,YAAM5gH,IAAY,K,OAJA,EAAAu9G,WACA,EAAAjT,YACA,EAAAqW,UACA,EAAAC,WAPZ,EAAA4a,mBAA6B,EAC7B,EAAAC,eAAoB,K,EAiD9B,OApDwC,OAa5B,YAAA96H,MAAV,SAAgBD,GACVJ,KAAK0/G,UACH1/G,KAAKsgH,WACPtgH,KAAKm7H,eAAiB/6H,EACtBJ,KAAKk7H,mBAAoB,IAG3Bl7H,KAAKH,IAAIG,KAAK0/G,UAAY1/G,KAAKgqG,UAAUC,SAAyBye,EAAc1oH,KAAKi9G,SAAU,CAAE98G,WAAYH,QACzGA,KAAKqgH,QACPrgH,KAAKN,YAAYQ,KAAKE,GACbJ,KAAKsgH,WACdtgH,KAAKm7H,eAAiB/6H,EACtBJ,KAAKk7H,mBAAoB,KAKrB,YAAA16H,UAAV,WACMR,KAAKk7H,mBACPl7H,KAAKN,YAAYQ,KAAKF,KAAKm7H,gBAC3Bn7H,KAAKN,YAAYP,YAEjBa,KAAKN,YAAYP,YAIrB,YAAAwgH,cAAA,WACE,IAAMD,EAAY1/G,KAAK0/G,UACnBA,IACE1/G,KAAKsgH,UAAYtgH,KAAKk7H,oBACxBl7H,KAAKN,YAAYQ,KAAKF,KAAKm7H,gBAC3Bn7H,KAAKm7H,eAAiB,KACtBn7H,KAAKk7H,mBAAoB,GAE3Bxb,EAAUj/G,cACVT,KAAK6E,OAAO66G,GACZ1/G,KAAK0/G,UAAY,OAGvB,EApDA,CAAwC,EAAA9/G,YA0DxC,SAAS8oH,EAAgB7K,GACf,EAAA19G,WACGw/G,kB,oFC1Kb,YAEA,SACA,SACA,QA+CA,wBAAgC3V,GAC9B,YAD8B,IAAAA,MAA2B,EAAA5iG,OAClD,SAAC7E,GAA0B,SAAAoyB,OAAM,WACtC,OAAOpyB,EAAOa,KAEZ,EAAA2wG,MACE,SAAC,EAAa3zG,G,IAAXoqH,EAAA,EAAAA,QAAqB,MAAC,CAAEpqH,MAAK,EAAEoqH,QAASxgB,EAAUhqD,MAAO7jB,KAAMquF,KAClE,CAAEA,QAASxgB,EAAUhqD,MAAO5/C,WAAO2E,EAAYo3B,UAAMp3B,IAEvD,EAAAoa,KAA0B,SAAC,G,IAAEqrG,EAAA,EAAAA,QAASruF,EAAA,EAAAA,KAAM/7B,EAAA,EAAAA,MAAY,WAAIg7H,EAAah7H,EAAOoqH,EAAUruF,YAWhG,MACE,SAAmB/7B,EAAiB4mH,GAAjB,KAAA5mH,QAAiB,KAAA4mH,YADzB,EAAAoU,gB,8ECxEb,YAKA,SAEA,SACA,SAgFA,mBAA2B7b,EACAvV,GACzB,YADyB,IAAAA,MAA2B,EAAA5iG,OAC7C,EAAA+mH,YAAY5O,EAAK,EAAA16F,WAAW,IAAI,EAAAy5F,cAAiBtU,K,oFCzF1D,YAEA,QAoCA,qBAA6BA,GAC3B,YAD2B,IAAAA,MAA2B,EAAA5iG,OAC/C,EAAA+X,KAAI,SAAC/e,GAAa,WAAIi7H,EAAUj7H,EAAO4pG,EAArB,WAI3B,MACE,SAAmB5pG,EAAiBguH,GAAjB,KAAAhuH,QAAiB,KAAAguH,aADzB,EAAAiN,a,oFC5Cb,aAGA,SAASC,EAAkBC,EAAUn8G,EAASta,GAC5C,OAAc,IAAVA,EACK,CAACsa,IAEVm8G,EAAI/1H,KAAK4Z,GACFm8G,GAkCT,qBACE,OAAO,EAAAv1H,OAAOs1H,EAAgB,M,maCzChC,YAGA,QA6CA,kBAA0BE,GACxB,OAAO,SAAgCj5H,GACrC,OAAOA,EAAOJ,KAAK,IAAIs5H,EAAeD,MAI1C,iBAEE,WAAoBA,GAAA,KAAAA,mBAWtB,OARE,YAAA75H,KAAA,SAAKxB,EAAuCoC,GAC1C,IAAMm5H,EAAmB,IAAIC,EAAiBx7H,GACxCy7H,EAAqBr5H,EAAOP,UAAU05H,GAI5C,OAHKE,EAAmBl7H,QACtBg7H,EAAiB77H,IAAI,EAAA2zG,eAAexzG,KAAKw7H,iBAAkB,IAAI,EAAA33H,sBAAsB63H,KAEhFE,GAEX,EAbA,GAoBA,cAIE,WAAYl8H,GAAZ,MACE,YAAMA,IAAY,K,OAHZ,EAAAm4B,OAAqB,IAAI,EAAA/wB,QAI/BpH,EAAYQ,KAAK,EAAK23B,Q,EA2C1B,OAjDkC,OAShC,YAAAn0B,WAAA,WACE1D,KAAK67H,cAGP,YAAAl4H,YAAA,SAAYzE,GACVc,KAAKO,OAAOrB,IAGd,YAAA0E,eAAA,WACE5D,KAAKQ,aAGG,YAAAH,MAAV,SAAgBD,GACdJ,KAAK63B,OAAO33B,KAAKE,IAGT,YAAAG,OAAV,SAAiBD,GACfN,KAAK63B,OAAO34B,MAAMoB,GAClBN,KAAKN,YAAYR,MAAOoB,IAGhB,YAAAE,UAAV,WACER,KAAK63B,OAAO14B,WACZa,KAAKN,YAAYP,YAInB,YAAA4C,aAAA,WACE/B,KAAK63B,OAAS,MAGR,YAAAgkG,WAAR,WACE,IAAMC,EAAa97H,KAAK63B,OACpBikG,GACFA,EAAW38H,WAEb,IAAMO,EAAcM,KAAKN,YACnBq8H,EAAY/7H,KAAK63B,OAAS,IAAI,EAAA/wB,QACpCpH,EAAYQ,KAAM67H,IAEtB,EAjDA,CAAkC,EAAA73H,wB,maC3ElC,YAEA,QAkEA,uBAA+B83H,EACAC,GAC7B,YAD6B,IAAAA,MAAA,GACtB,SAAqC15H,GAC1C,OAAOA,EAAOJ,KAAK,IAAI+5H,EAAuBF,EAAYC,MAI9D,iBAEE,WAAoBD,EACAC,GADA,KAAAD,aACA,KAAAC,mBAMtB,OAHE,YAAAt6H,KAAA,SAAKxB,EAAuCoC,GAC1C,OAAOA,EAAOP,UAAU,IAAIm6H,EAAsBh8H,EAAYH,KAAKg8H,WAAYh8H,KAAKi8H,oBAExF,EATA,GAgBA,cAIE,WAAsBv8H,EACFs8H,EACAC,GAFpB,MAGE,YAAMv8H,IAAY,K,OAHE,EAAAA,cACF,EAAAs8H,aACA,EAAAC,mBALZ,EAAAG,QAAwB,CAAE,IAAI,EAAAt1H,SAC9B,EAAAY,MAAgB,EAMtBhI,EAAYQ,KAAK,EAAKk8H,QAAQ,I,EAgDlC,OAxDuC,OAW3B,YAAA/7H,MAAV,SAAgBD,GAOd,IANA,IAAM67H,EAAoBj8H,KAAKi8H,iBAAmB,EAAKj8H,KAAKi8H,iBAAmBj8H,KAAKg8H,WAC9Et8H,EAAcM,KAAKN,YACnBs8H,EAAah8H,KAAKg8H,WAClBI,EAAUp8H,KAAKo8H,QACfh3H,EAAMg3H,EAAQ38H,OAEXkH,EAAI,EAAGA,EAAIvB,IAAQpF,KAAKU,OAAQiG,IACvCy1H,EAAQz1H,GAAGzG,KAAKE,GAElB,IAAM+H,EAAInI,KAAK0H,MAAQs0H,EAAa,EAIpC,GAHI7zH,GAAK,GAAKA,EAAI8zH,GAAqB,IAAMj8H,KAAKU,QAChD07H,EAAQjtB,QAAQhwG,aAEZa,KAAK0H,MAAQu0H,GAAqB,IAAMj8H,KAAKU,OAAQ,CACzD,IAAM,EAAS,IAAI,EAAAoG,QACnBs1H,EAAQ52H,KAAK,GACb9F,EAAYQ,KAAK,KAIX,YAAAK,OAAV,SAAiBD,GACf,IAAM87H,EAAUp8H,KAAKo8H,QACrB,GAAIA,EACF,KAAOA,EAAQ38H,OAAS,IAAMO,KAAKU,QACjC07H,EAAQjtB,QAAQjwG,MAAMoB,GAG1BN,KAAKN,YAAYR,MAAMoB,IAGf,YAAAE,UAAV,WACE,IAAM47H,EAAUp8H,KAAKo8H,QACrB,GAAIA,EACF,KAAOA,EAAQ38H,OAAS,IAAMO,KAAKU,QACjC07H,EAAQjtB,QAAQhwG,WAGpBa,KAAKN,YAAYP,YAGT,YAAA4C,aAAV,WACE/B,KAAK0H,MAAQ,EACb1H,KAAKo8H,QAAU,MAEnB,EAxDA,CAAuC,EAAAx8H,a,qbC5FvC,YAEA,QACA,QAGA,SACA,SA+FA,sBAA8By8H,GAC5B,IAAIryB,EAA2B,EAAA5iG,MAC3Bk1H,EAAiC,KACjCC,EAAwBn8E,OAAO4yD,kBAkBnC,OAhBI,EAAAf,YAAYzyG,UAAU,MACxBwqG,EAAYxqG,UAAU,IAGpB,EAAAyyG,YAAYzyG,UAAU,IACxBwqG,EAAYxqG,UAAU,GACb,EAAA8/G,UAAU9/G,UAAU,MAC7B+8H,EAAgBn8E,OAAO5gD,UAAU,KAG/B,EAAAyyG,YAAYzyG,UAAU,IACxBwqG,EAAYxqG,UAAU,GACb,EAAA8/G,UAAU9/G,UAAU,MAC7B88H,EAAyBl8E,OAAO5gD,UAAU,KAGrC,SAAoC+C,GACzC,OAAOA,EAAOJ,KAAK,IAAIq6H,EAAsBH,EAAgBC,EAAwBC,EAAevyB,MAIxG,iBAEE,WAAoBqyB,EACAC,EACAC,EACAvyB,GAHA,KAAAqyB,iBACA,KAAAC,yBACA,KAAAC,gBACA,KAAAvyB,YAQtB,OALE,YAAAroG,KAAA,SAAKxB,EAAuCoC,GAC1C,OAAOA,EAAOP,UAAU,IAAIy6H,EAC1Bt8H,EAAYH,KAAKq8H,eAAgBr8H,KAAKs8H,uBAAwBt8H,KAAKu8H,cAAev8H,KAAKgqG,aAG7F,EAbA,GAuCA,yE,OACU,EAAA0yB,sBAAgC,E,EAU1C,OAXgC,OAG9B,YAAAx8H,KAAA,SAAKE,GACHJ,KAAK08H,wBACL,YAAMx8H,KAAI,UAACE,IAGb,sBAAI,mCAAoB,C,IAAxB,WACE,OAAOJ,KAAK08H,uB,gCAEhB,EAXA,CAAgC,EAAA51H,SAkBhC,cAGE,WAAsBpH,EACF28H,EACAC,EACAC,EACAvyB,GAJpB,MAKE,YAAMtqG,IAAY,KALE,EAAAA,cACF,EAAA28H,iBACA,EAAAC,yBACA,EAAAC,gBACA,EAAAvyB,YANZ,EAAAoyB,QAA+B,GASrC,IAAMvkG,EAAS,EAAKgkG,aACpB,GAA+B,OAA3BS,GAAmCA,GAA0B,EAAG,CAClE,IAAMvM,EAA4B,CAAE5vH,WAAY,EAAM03B,OAAM,EAAE72B,QAAc,MACtEgvH,EAAkC,CAAEqM,eAAc,EAAEC,uBAAsB,EAAEn8H,WAAY,EAAM6pG,UAAS,GAC7G,EAAKnqG,IAAImqG,EAAUC,SAAwB0yB,EAAqBN,EAAgBtM,IAChF,EAAKlwH,IAAImqG,EAAUC,SAA2B2yB,EAAwBN,EAAwBtM,QACzF,CACL,IAAMJ,EAA0C,CAAEzvH,WAAY,EAAM03B,OAAM,EAAEwkG,eAAc,GAC1F,EAAKx8H,IAAImqG,EAAUC,SAA+B4yB,EAA4BR,EAAgBzM,I,SAkDpG,OApEsC,OAsB1B,YAAAvvH,MAAV,SAAgBD,GAGd,IAFA,IAAMg8H,EAAUp8H,KAAKo8H,QACfh3H,EAAMg3H,EAAQ38H,OACXkH,EAAI,EAAGA,EAAIvB,EAAKuB,IAAK,CAC5B,IAAM,EAASy1H,EAAQz1H,GAClB,EAAOjG,SACV,EAAOR,KAAKE,GACR,EAAO08H,sBAAwB98H,KAAKu8H,eACtCv8H,KAAK+8H,YAAY,MAMf,YAAAx8H,OAAV,SAAiBD,GAEf,IADA,IAAM87H,EAAUp8H,KAAKo8H,QACdA,EAAQ38H,OAAS,GACtB28H,EAAQjtB,QAAQjwG,MAAMoB,GAExBN,KAAKN,YAAYR,MAAMoB,IAGf,YAAAE,UAAV,WAEE,IADA,IAAM47H,EAAUp8H,KAAKo8H,QACdA,EAAQ38H,OAAS,GAAG,CACzB,IAAM,EAAS28H,EAAQjtB,QAClB,EAAOzuG,QACV,EAAOvB,WAGXa,KAAKN,YAAYP,YAGZ,YAAA08H,WAAP,WACE,IAAMhkG,EAAS,IAAImlG,EAInB,OAHAh9H,KAAKo8H,QAAQ52H,KAAKqyB,GACE73B,KAAKN,YACbQ,KAAK23B,GACVA,GAGF,YAAAklG,YAAP,SAAmBllG,GACjBA,EAAO14B,WACP,IAAMi9H,EAAUp8H,KAAKo8H,QACrBA,EAAQr2H,OAAOq2H,EAAQx2H,QAAQiyB,GAAS,IAE5C,EApEA,CAAsC,EAAAj4B,YAsEtC,SAASi9H,EAA2E/nG,GAC1E,IAAA30B,EAAA,EAAAA,WAAYk8H,EAAA,EAAAA,eAAgBxkG,EAAA,EAAAA,OAChCA,GACF13B,EAAW48H,YAAYllG,GAEzB/C,EAAM+C,OAAS13B,EAAW07H,aAC1B77H,KAAKiqG,SAASn1E,EAAOunG,GAGvB,SAASO,EAAmE9nG,GAClE,IAAAunG,EAAA,EAAAA,eAAgBl8H,EAAA,EAAAA,WAAY6pG,EAAA,EAAAA,UAAWsyB,EAAA,EAAAA,uBACzCzkG,EAAS13B,EAAW07H,aAEtB76H,EAAiC,CAAE2jB,OADxB3kB,KACgCmD,aAAmB,MAC5D85H,EAA+B,CAAE98H,WAAU,EAAE03B,OAAM,EAAE72B,QAAO,GAClEA,EAAQmC,aAAe6mG,EAAUC,SAAwB0yB,EAAqBN,EAAgBY,GAH/Ej9H,KAIRH,IAAImB,EAAQmC,cAJJnD,KAKRiqG,SAASn1E,EAAOwnG,GAGzB,SAASK,EAAuB7nG,GACtB,IAAA30B,EAAA,EAAAA,WAAY03B,EAAA,EAAAA,OAAQ72B,EAAA,EAAAA,QACxBA,GAAWA,EAAQ2jB,QAAU3jB,EAAQmC,cACvCnC,EAAQ2jB,OAAO9f,OAAO7D,EAAQmC,cAEhChD,EAAW48H,YAAYllG,K,+aCrRzB,YACA,QACA,SAEA,SAmDA,wBAAmC24F,EACAC,GACjC,OAAO,SAACluH,GAA0B,OAAAA,EAAOJ,KAAK,IAAI+6H,EAA2B1M,EAA3C,MAGpC,iBAEE,WAAoBA,EACAC,GADA,KAAAD,WACA,KAAAC,kBAQtB,OALE,YAAA9uH,KAAA,SAAKxB,EAAuCoC,GAC1C,OAAOA,EAAOP,UAAU,IAAIm7H,EAC1Bh9H,EAAYH,KAAKwwH,SAAUxwH,KAAKywH,mBAGtC,EAXA,GAuBA,cAIE,WAAY/wH,EACQ8wH,EACAC,GAFpB,MAGE,YAAM/wH,IAAY,K,OAFA,EAAA8wH,WACA,EAAAC,kBALZ,EAAAhB,SAA+B,GAOrC,EAAK5vH,IAAI,EAAKu9H,iBAAmB,EAAA/mB,kBAAkB,EAAMma,EAAUA,I,EAoHvE,OA5H2C,OAW/B,YAAAnwH,MAAV,SAAgBD,GACN,IAAAqvH,EAAA,KAAAA,SACR,GAAIA,EAEF,IADA,IAAMrqH,EAAMqqH,EAAShwH,OACZkH,EAAI,EAAGA,EAAIvB,EAAKuB,IACvB8oH,EAAS9oH,GAAGkxB,OAAO33B,KAAKE,IAKpB,YAAAG,OAAV,SAAiBD,GAEP,IAAAmvH,EAAA,KAAAA,SAGR,GAFAzvH,KAAKyvH,SAAW,KAEZA,EAIF,IAHA,IAAMrqH,EAAMqqH,EAAShwH,OACjBqF,GAAS,IAEJA,EAAQM,GAAK,CACpB,IAAM,EAAUqqH,EAAS3qH,GACzB,EAAQ+yB,OAAO34B,MAAMoB,GACrB,EAAQ6C,aAAa1C,cAIzB,YAAMF,OAAM,UAACD,IAGL,YAAAE,UAAV,WACU,IAAAivH,EAAA,KAAAA,SAER,GADAzvH,KAAKyvH,SAAW,KACZA,EAGF,IAFA,IAAMrqH,EAAMqqH,EAAShwH,OACjBqF,GAAS,IACJA,EAAQM,GAAK,CACpB,IAAM,EAAUqqH,EAAS3qH,GACzB,EAAQ+yB,OAAO14B,WACf,EAAQgE,aAAa1C,cAGzB,YAAMD,UAAS,YAIjB,YAAAuB,aAAA,WACU,IAAA0tH,EAAA,KAAAA,SAER,GADAzvH,KAAKyvH,SAAW,KACZA,EAGF,IAFA,IAAMrqH,EAAMqqH,EAAShwH,OACjBqF,GAAS,IACJA,EAAQM,GAAK,CACpB,IAAM,EAAUqqH,EAAS3qH,GACzB,EAAQ+yB,OAAOp3B,cACf,EAAQ0C,aAAa1C,gBAK3B,YAAAiD,WAAA,SAAWI,EAAiBG,EACjBF,EAAoBqmG,EACpBC,GAET,GAAIvmG,IAAe9D,KAAKwwH,SAAU,CAChC,IAAI7B,OAAe,EACnB,IAEEA,GAAkB8B,EADV,KAAAA,iBAC0BxsH,GAClC,MAAOe,GACP,OAAOhF,KAAKd,MAAM8F,GAGpB,IAAM,EAAS,IAAI,EAAA8B,QACb3D,EAAe,IAAI,EAAAtC,aACnB,EAAU,CAAEg3B,OAAM,EAAE10B,aAAY,GACtCnD,KAAKyvH,SAASjqH,KAAK,GACnB,IAAM+tG,EAAoB,EAAA8C,kBAAkBr2G,KAAM2uH,EAAiB,GAE/Dpb,EAAkB7yG,OACpBV,KAAK+8H,YAAY/8H,KAAKyvH,SAAShwH,OAAS,IAElC8zG,EAAmBvyG,QAAU,EACnCmC,EAAatD,IAAI0zG,IAGnBvzG,KAAKN,YAAYQ,KAAK,QAEtBF,KAAK+8H,YAAY/8H,KAAKyvH,SAAS7pH,QAAQ9B,KAI3C,YAAAH,YAAA,SAAYrD,GACVN,KAAKd,MAAMoB,IAGb,YAAAsD,eAAA,SAAey5H,GACTA,IAAUr9H,KAAKo9H,kBACjBp9H,KAAK+8H,YAAY/8H,KAAKyvH,SAAS7pH,QAAey3H,EAAOr8H,WAIjD,YAAA+7H,YAAR,SAAoBj4H,GAClB,IAAe,IAAXA,EAAJ,CAIQ,IAAA2qH,EAAA,KAAAA,SACFzuH,EAAUyuH,EAAS3qH,GACjB+yB,EAAA,EAAAA,OAAQ10B,EAAA,EAAAA,aAChBssH,EAAS1pH,OAAOjB,EAAO,GACvB+yB,EAAO14B,WACPgE,EAAa1C,gBAEjB,EA5HA,CAA2C,EAAA6pG,kB,maCnF3C,YAEA,SAEA,SAgDA,sBAA8BmmB,GAC5B,OAAO,SAAoCluH,GACzC,OAAOA,EAAOJ,KAAK,IAAIs5H,EAAkBhL,MAI7C,iBACE,WAAoBA,GAAA,KAAAA,kBAMtB,OAHE,YAAA9uH,KAAA,SAAKxB,EAAuCoC,GAC1C,OAAOA,EAAOP,UAAU,IAAI25H,EAAiBx7H,EAAYH,KAAKywH,mBAElE,EAPA,GAcA,cAIE,WAAsB/wH,EACF+wH,GADpB,MAEE,YAAM/wH,IAAY,K,OAFE,EAAAA,cACF,EAAA+wH,kBAElB,EAAKoL,a,EAgET,OAvEkC,OAUhC,YAAAn4H,WAAA,SAAWS,EAAgB8uH,EAChB7uH,EAAqB8uH,EACrB7oB,GACTrqG,KAAK67H,WAAWxxB,IAGlB,YAAA1mG,YAAA,SAAYzE,GACVc,KAAKO,OAAOrB,IAGd,YAAA0E,eAAA,SAAeymG,GACbrqG,KAAK67H,WAAWxxB,IAGR,YAAAhqG,MAAV,SAAgBD,GACdJ,KAAK63B,OAAQ33B,KAAKE,IAGV,YAAAG,OAAV,SAAiBD,GACfN,KAAK63B,OAAQ34B,MAAMoB,GACnBN,KAAKN,YAAYR,MAAMoB,GACvBN,KAAKs9H,kCAGG,YAAA98H,UAAV,WACER,KAAK63B,OAAQ14B,WACba,KAAKN,YAAYP,WACjBa,KAAKs9H,kCAGC,YAAAA,+BAAR,WACMt9H,KAAKu9H,qBACPv9H,KAAKu9H,oBAAoB98H,eAIrB,YAAAo7H,WAAR,SAAmBxxB,QAAA,IAAAA,MAAA,MACbA,IACFrqG,KAAK6E,OAAOwlG,GACZA,EAAS5pG,eAGX,IAAMq7H,EAAa97H,KAAK63B,OACpBikG,GACFA,EAAW38H,WAGb,IAGIwvH,EAHE92F,EAAS73B,KAAK63B,OAAS,IAAI,EAAA/wB,QACjC9G,KAAKN,YAAYQ,KAAK23B,GAGtB,IAEE82F,GAAkB8B,EADV,KAAAA,mBAER,MAAOzrH,GAGP,OAFAhF,KAAKN,YAAYR,MAAM8F,QACvBhF,KAAK63B,OAAO34B,MAAM8F,GAGpBhF,KAAKH,IAAIG,KAAKu9H,oBAAsB,EAAAlnB,kBAAkBr2G,KAAM2uH,KAEhE,EAvEA,CAAkC,EAAArkB,kB,ocCxElC,aAEA,SAiEA,4B,IAAqC,sDACnC,OAAO,SAAC/nG,GACN,IAAI8E,EACiC,mBAA1Bic,EAAKA,EAAK7jB,OAAS,KAC5B4H,EAAUic,EAAKC,OAEjB,IAAMqvF,EAAiCtvF,EACvC,OAAO/gB,EAAOJ,KAAK,IAAIq7H,EAAuB5qB,EAAavrG,MAI/D,iBACE,WAAoBurG,EACAvrG,GADA,KAAAurG,cACA,KAAAvrG,UAMtB,OAHE,YAAA1F,KAAA,SAAKxB,EAA2BoC,GAC9B,OAAOA,EAAOP,UAAU,IAAIy7H,EAAyBt9H,EAAYH,KAAK4yG,YAAa5yG,KAAKqH,WAE5F,EARA,GAeA,cAIE,WAAY3H,EACQkzG,EACAvrG,GAFpB,MAGE,YAAM3H,IAAY,KAFA,EAAAkzG,cACA,EAAAvrG,UAJZ,EAAA+uG,UAAsB,GAM5B,IAAMhxG,EAAMwtG,EAAYnzG,OACxB,EAAKw6B,OAAS,IAAIjzB,MAAM5B,GAExB,IAAK,IAAIuB,EAAI,EAAGA,EAAIvB,EAAKuB,IACvB,EAAKyvG,UAAU5wG,KAAKmB,GAGtB,IAASA,EAAI,EAAGA,EAAIvB,EAAKuB,IAAK,CAC5B,IAAItE,EAAauwG,EAAYjsG,GAC7B,EAAK9G,IAAI,EAAAw2G,kBAAwB,EAAMh0G,OAAY0C,EAAW4B,I,SAyCpE,OA1D6C,OAqB3C,YAAAjD,WAAA,SAAWS,EAAgBF,EAChBF,GACT/D,KAAKi6B,OAAOl2B,GAAcE,EAC1B,IAAMmyG,EAAYp2G,KAAKo2G,UACvB,GAAIA,EAAU32G,OAAS,EAAG,CACxB,IAAMi+H,EAAQtnB,EAAUxwG,QAAQ7B,IACjB,IAAX25H,GACFtnB,EAAUrwG,OAAO23H,EAAO,KAK9B,YAAA95H,eAAA,aAIU,YAAAvD,MAAV,SAAgBD,GACd,GAA8B,IAA1BJ,KAAKo2G,UAAU32G,OAAc,CAC/B,IAAM6jB,EAAO,CAACljB,GAAK,OAAKJ,KAAKi6B,QACzBj6B,KAAKqH,QACPrH,KAAK29H,YAAYr6G,GAEjBtjB,KAAKN,YAAYQ,KAAMojB,KAKrB,YAAAq6G,YAAR,SAAoBr6G,GAClB,IAAI/e,EACJ,IACEA,EAASvE,KAAKqH,QAAS4mG,MAAMjuG,KAAMsjB,GACnC,MAAOhjB,GAEP,YADAN,KAAKN,YAAYR,MAAOoB,GAG1BN,KAAKN,YAAYQ,KAAMqE,IAE3B,EA1DA,CAA6C,EAAA+lG,kB,oFChG7C,aAsCA,iB,IAA0B,sDACxB,OAAO,SAA6B/nG,GAClC,OAAOA,EAAOJ,KAAKR,KAAK,EAAAquF,IAAS,cAAIztF,GAAM,OAAKqwG,Q,8ECxCpD,aASA,kBAA6BvrG,GAC3B,OAAO,SAAC9E,GAA0B,OAAAA,EAAOJ,KAAK,IAAI,EAAAu0G,YAAhB,O,2FCVpC,yBAEA,6BACA,6BACA,4BAGA,mBAA4C11F,GACxC,OAAO,IAAI,UACP,IAAI,UACJ,IAAI,UACJ48G,EACA58G,K,8HCTR,6BAEM68G,EAA2B,4BAC3BC,EAAsC,qCAE5C,2BAqEA,OApEI,YAAApZ,cAAA,SAAc1jG,GACV,IAAM+8G,EAAc/8G,EAAQvI,QAAUzY,KAAKg+H,WAAWh9G,EAAQvI,QAAS,gBAAkB,GAEzF,GAAIuI,EAAQxI,KAAM,CACd,GAAIqlH,EAAyBhiH,KAAKkiH,GAC9B,OAAOpmF,KAAKC,UAAU52B,EAAQxI,MAGlC,GAAIslH,EAAoCjiH,KAAKkiH,GACzC,OAAO,UAAiB/8G,EAAQxI,MAIxC,OAAOwI,EAAQxI,MAGnB,YAAA8rG,WAAA,SAAwB,GACpB,IAAM7rG,EAAUzY,KAAKi+H,sBAAsB9kB,EAAI+kB,yBAQ/C,MAAO,CACH1lH,KANSxY,KAAKm+H,mBACd,aAAchlB,EAAMA,EAAIxgG,SAAYwgG,EAAYilB,aAChD3lH,GAKAA,QAAO,EACPC,OAAQygG,EAAIzgG,OACZ6iB,WAAY49E,EAAI59E,aAIhB,YAAA4iG,mBAAR,SAA2B3lH,EAAcC,GACrC,IAAMslH,EAAc/9H,KAAKg+H,WAAWvlH,EAAS,gBAE7C,OAAID,GAAQqlH,EAAyBhiH,KAAKkiH,GAC/BpmF,KAAKmG,MAAMtlC,GAGfA,GAGH,YAAAylH,sBAAR,SAA8BI,GAG1B,OAFcA,EAAaA,EAAWzrG,QAAQ,eAAgB,KAAKlB,MAAM,SAAW,IAEvE1rB,QAAO,SAACyS,EAASkvD,G,MACpB47C,EAAQ57C,EAAKj2C,MAAM,KACnBxoB,GAAOq6G,EAAMpU,SAAW,IAAIngB,OAElC,OAAK9lF,EAIL,yBACOuP,KAAO,MACTvP,EAAI2sC,eAAgB0tE,EAAM1kG,KAAK,KAAKmwE,OAAM,IALpCv2E,IAOZ,KAGC,YAAAulH,WAAR,SAAmBvlH,EAAkBvP,GACjC,OAAKuP,GAAYvP,IAIVuP,EAAQvP,IAAQuP,EAAQvP,EAAI2sC,iBAHxB,IAKnB,EArEA,G,6XCRA,mBAAyC3b,GACrC,MAAoB,WAAhB,EAAOA,IAA8B,OAATA,EACrBA,EAGJh5B,OAAOge,KAAKgb,GACd7Y,QAAO,SAAAnY,GAAO,gBAAAgxB,EAAKhxB,MACnBiW,KAAI,SAAAjW,GACD,IAAM9I,EAAQ85B,EAAKhxB,GAEnB,MAAqB,iBAAV9I,EACG8I,EAAG,IAAI+2C,mBAAmB7/C,GAG9B8I,EAAG,IAAI+2C,mBAAmBtI,KAAKC,UAAUx3C,IAAU,OAEhEye,KAAK,O,0GChBd,E,OAAA,qBAKA,2BAwCA,OAvCI,YAAAw6F,cAAA,SAAcz9F,EAAaoF,GACvB,IAAMm4F,EAAM,IAAImlB,eAIhB,OAFAt+H,KAAKu+H,kBAAkBplB,EAAKv9F,EAAKoF,GAE1Bm4F,GAGH,YAAAolB,kBAAR,SAA0BplB,EAAqBv9F,EAAaoF,QAAA,IAAAA,MAAA,IACxDm4F,EAAI7zC,KAAKtkD,EAAQ4E,QAAU,MAAO5lB,KAAKw+H,WAAW5iH,EAAKoF,EAAQwV,OAAQxV,EAAQ6jG,eAAe,GAE1F7jG,EAAQvI,SACRzY,KAAKy+H,yBAAyBtlB,EAAKn4F,EAAQvI,SAGZ,kBAAxBuI,EAAQioC,cACfkwD,EAAIulB,gBAAkB19G,EAAQioC,aAGH,iBAApBjoC,EAAQwD,UACf20F,EAAI30F,QAAUxD,EAAQwD,UAItB,YAAAi6G,yBAAR,SAAiCtlB,EAAqB1gG,GAClDvX,OAAOge,KAAKzG,GACP,QAAO,YAAO,gBAAQ,MACtB,SAAQ,YACT,EAAI,iBAAiB,EAAK,EAAQ,QAIlC,uBAAR,SAAmB,EAAa,EAAiB,GAC7C,YAD6C,cACxC,GAAyC,IAA/B,OAAO,KAAK,GAAQ,OAIzB,EAAG,IAAI,EAAY,UAAU,EAAQ,CAAE,OAAQ,IAH9C,GAKnB,EAxCA,G,qGCLA,E,OAAA,qBAcA,0BACqB,KAAAsrG,OAAmB,GAqBxC,OAnBI,YAAAkB,KAAA,SAAQrpG,EAAaoF,GACjB,IAAM4P,EAAW5wB,KAAKkxC,OAAOt1B,EAAKoF,EAAQwV,QAE1C,OAAOx2B,KAAK+jH,OAAOnzF,IAAa,MAGpC,YAAAs0F,MAAA,SAAStpG,EAAaoF,EAAyBrI,GAC3C,IAAMiY,EAAW5wB,KAAKkxC,OAAOt1B,EAAKoF,EAAQwV,QAE1Cx2B,KAAK+jH,OAAOnzF,GAAYjY,GAGpB,YAAAu4B,OAAR,SAAet1B,EAAa4a,GACxB,YADwB,IAAAA,MAAA,IACW,IAA/Bt1B,OAAOge,KAAKsX,GAAQ/2B,OACbmc,EAGDA,EAAG,IAAI+iH,EAAY/mF,UAAUphB,IAE/C,EAtBA,GAAa,EAAAwtF,gB,wVCdb,mBAAkC5qD,GAC9B,QAASA,IACe,WAAnB,EAAOA,IAA2C,mBAAZA,IACf,mBAAjBA,EAAQp1C,O,kFCHvB,E,OAAA,wBAEA,mBAAsCyuC,GAClC,OAAO,IAAI,UAAQA,K,8ECHvB,IAGIniC,EAHJ,SAKA,qBAKI,OAJKA,IACDA,EAAW,aAGRA,I,8ECVX,IAGIA,EAHJ,SAKA,qBAKI,OAJKA,IACDA,EAAW,aAGRA,I,0FvsBTX,cAAS,wBAAAvpB,QACT,cAAS,0BACT,aAAS,0BAGT,aAAS,qB,2F+rBNT,yBAEA,6BACA,6BACA,4BAGA,mBAA4Cia,GACxC,OAAO,IAAI,UACP,IAAI,UACJ,IAAI,UACJ48G,EACA58G,K,8HCTR,6BAEM68G,EAA2B,4BAC3BC,EAAsC,qCAE5C,2BAqEA,OApEI,YAAApZ,cAAA,SAAc1jG,GACV,IAAM+8G,EAAc/8G,EAAQvI,QAAUzY,KAAKg+H,WAAWh9G,EAAQvI,QAAS,gBAAkB,GAEzF,GAAIuI,EAAQxI,KAAM,CACd,GAAIqlH,EAAyBhiH,KAAKkiH,GAC9B,OAAOpmF,KAAKC,UAAU52B,EAAQxI,MAGlC,GAAIslH,EAAoCjiH,KAAKkiH,GACzC,OAAO,UAAiB/8G,EAAQxI,MAIxC,OAAOwI,EAAQxI,MAGnB,YAAA8rG,WAAA,SAAwB,GACpB,IAAM7rG,EAAUzY,KAAKi+H,sBAAsB9kB,EAAI+kB,yBAQ/C,MAAO,CACH1lH,KANSxY,KAAKm+H,mBACd,aAAchlB,EAAMA,EAAIxgG,SAAYwgG,EAAYilB,aAChD3lH,GAKAA,QAAO,EACPC,OAAQygG,EAAIzgG,OACZ6iB,WAAY49E,EAAI59E,aAIhB,YAAA4iG,mBAAR,SAA2B3lH,EAAcC,GACrC,IAAMslH,EAAc/9H,KAAKg+H,WAAWvlH,EAAS,gBAE7C,OAAID,GAAQqlH,EAAyBhiH,KAAKkiH,GAC/BpmF,KAAKmG,MAAMtlC,GAGfA,GAGH,YAAAylH,sBAAR,SAA8BI,GAG1B,OAFcA,EAAaA,EAAWzrG,QAAQ,eAAgB,KAAKlB,MAAM,SAAW,IAEvE1rB,QAAO,SAACyS,EAASkvD,G,MACpB47C,EAAQ57C,EAAKj2C,MAAM,KACnBxoB,GAAOq6G,EAAMpU,SAAW,IAAIngB,OAElC,OAAK9lF,EAIL,yBACOuP,KAAO,MACTvP,EAAI2sC,eAAgB0tE,EAAM1kG,KAAK,KAAKmwE,OAAM,IALpCv2E,IAOZ,KAGC,YAAAulH,WAAR,SAAmBvlH,EAAkBvP,GACjC,OAAKuP,GAAYvP,IAIVuP,EAAQvP,IAAQuP,EAAQvP,EAAI2sC,iBAHxB,IAKnB,EArEA,G,6XCRA,mBAAyC3b,GACrC,MAAoB,WAAhB,EAAOA,IAA8B,OAATA,EACrBA,EAGJh5B,OAAOge,KAAKgb,GACd7Y,QAAO,SAAAnY,GAAO,gBAAAgxB,EAAKhxB,MACnBiW,KAAI,SAAAjW,GACD,IAAM9I,EAAQ85B,EAAKhxB,GAEnB,MAAqB,iBAAV9I,EACG8I,EAAG,IAAI+2C,mBAAmB7/C,GAG9B8I,EAAG,IAAI+2C,mBAAmBtI,KAAKC,UAAUx3C,IAAU,OAEhEye,KAAK,O,0GChBd,E,OAAA,qBAKA,2BAwCA,OAvCI,YAAAw6F,cAAA,SAAcz9F,EAAaoF,GACvB,IAAMm4F,EAAM,IAAImlB,eAIhB,OAFAt+H,KAAKu+H,kBAAkBplB,EAAKv9F,EAAKoF,GAE1Bm4F,GAGH,YAAAolB,kBAAR,SAA0BplB,EAAqBv9F,EAAaoF,QAAA,IAAAA,MAAA,IACxDm4F,EAAI7zC,KAAKtkD,EAAQ4E,QAAU,MAAO5lB,KAAKw+H,WAAW5iH,EAAKoF,EAAQwV,OAAQxV,EAAQ6jG,eAAe,GAE1F7jG,EAAQvI,SACRzY,KAAKy+H,yBAAyBtlB,EAAKn4F,EAAQvI,SAGZ,kBAAxBuI,EAAQioC,cACfkwD,EAAIulB,gBAAkB19G,EAAQioC,aAGH,iBAApBjoC,EAAQwD,UACf20F,EAAI30F,QAAUxD,EAAQwD,UAItB,YAAAi6G,yBAAR,SAAiCtlB,EAAqB1gG,GAClDvX,OAAOge,KAAKzG,GACP,QAAO,YAAO,gBAAQ,MACtB,SAAQ,YACT,EAAI,iBAAiB,EAAK,EAAQ,QAIlC,uBAAR,SAAmB,EAAa,EAAiB,GAC7C,YAD6C,cACxC,GAAyC,IAA/B,OAAO,KAAK,GAAQ,OAIzB,EAAG,IAAI,EAAY,UAAU,EAAQ,CAAE,OAAQ,IAH9C,GAKnB,EAxCA,G,qGCLA,E,OAAA,qBAcA,0BACqB,KAAAsrG,OAAmB,GAqBxC,OAnBI,YAAAkB,KAAA,SAAQrpG,EAAaoF,GACjB,IAAM4P,EAAW5wB,KAAKkxC,OAAOt1B,EAAKoF,EAAQwV,QAE1C,OAAOx2B,KAAK+jH,OAAOnzF,IAAa,MAGpC,YAAAs0F,MAAA,SAAStpG,EAAaoF,EAAyBrI,GAC3C,IAAMiY,EAAW5wB,KAAKkxC,OAAOt1B,EAAKoF,EAAQwV,QAE1Cx2B,KAAK+jH,OAAOnzF,GAAYjY,GAGpB,YAAAu4B,OAAR,SAAet1B,EAAa4a,GACxB,YADwB,IAAAA,MAAA,IACW,IAA/Bt1B,OAAOge,KAAKsX,GAAQ/2B,OACbmc,EAGDA,EAAG,IAAI+iH,EAAY/mF,UAAUphB,IAE/C,EAtBA,GAAa,EAAAwtF,gB,wVCdb,mBAAkC5qD,GAC9B,QAASA,IACe,WAAnB,EAAOA,IAA2C,mBAAZA,IACf,mBAAjBA,EAAQp1C,O,kFCHvB,E,OAAA,wBAEA,mBAAsCyuC,GAClC,OAAO,IAAI,UAAQA,K,kFrsBHvB,cAAS,qBAAA1rD,QACT,aAAS,eAAAA,S,8EwsBDT,cACA,SAGA,mBAAyCia,GACrC,IAAM49G,EAAc,IAAI,UAGxB,OAFmB,IAAI,UAAWA,EAAa59G,K,gGCNnD,+BA6BA,OA5BI,YAAAyoE,MAAA,SAAM7tE,EAAase,EAA8BhU,GAAjD,WACU2nB,EAAO9xB,SAASC,cAAc,QAepC,OAbA6xB,EAAKsI,MAAMmK,QAAU,OAErBzS,EAAK2T,aAAa,SAAU5lC,GAC5BiyB,EAAK2T,aAAa,SAAU,QAC5B3T,EAAK2T,aAAa,SAAUt7B,GAAU,QAEtChlB,OAAOge,KAAKgb,GACPp3B,SAAQ,SAAAoG,GACL,IAAM9I,EAAQ85B,EAAKhxB,GAEnB2kC,EAAKmL,YAAY,EAAK6lF,aAAaz+H,EAAO8I,OAG3C2kC,GAGH,YAAAgxF,aAAR,SAAqBz+H,EAAY8I,GAC7B,IAAMuqE,EAAQ13D,SAASC,cAAc,SAMrC,OAJAy3D,EAAMjyB,aAAa,OAAQt4C,GAC3BuqE,EAAMjyB,aAAa,OAAQ,UAC3BiyB,EAAMjyB,aAAa,QAASphD,GAErBqzE,GAEf,EA7BA,G,sGCAA,yBAA8B73D,GAC1B,MAAO,eAAeC,KAAKD,IAG/B,qBAA0BkjH,EAAeC,GACrC,OAA8BD,EAIlBlsG,QAAQ,MAAO,IAJS,IAOxC,SAA4BosG,GACxB,OAAOA,EAAKpsG,QAAQ,MAAO,IARaqsG,CAAmBF,K,6FCCxD,SAAsB19H,GACzB,OAAO69H,iBAAP,IAPJ,I,EAAA,G,EAAA,U,2HCAA,eACA,aACA,aACA,aACA,aACA,a,sRAEqBA,E,WA4BjB,uB,4FAME,SAKEl/H,KAAA,SAMAA,KAAA,mBAMAA,KAAA,4BAMAA,KAAA,uBAMAA,KAAA,qB,8CA1DUqB,GACV,IAAM89H,GAAe,gBAAiBC,EAAjB,QAArB,GACMC,EAA4BC,iBAAlC,GAKA,OAAO,IAAIJ,EAAO,EAJOK,iBAAzB,GAIO,EAHsBC,iBAA7B,GAC2BC,iBAA3B,Q,mCA4DI3iF,GACJ98C,KAAA,gB,+CASqBk6B,EAAMu3B,EAAUvrC,GACrClmB,KAAA,4D,oCAQUk6B,EAAMu3B,GAChBzxD,KAAA,sC,0CAQgBk6B,EAAMu3B,GACtBzxD,KAAA,gD,sCAWYk6B,EAAMu3B,GAClBzxD,KAAA,0C,iDAYuBk6B,EAAMu3B,GAC7BzxD,KAAA,qD,8CAYoBk6B,EAAMu3B,GAC1BzxD,KAAA,oD,iHChJR,cACA,SACA,aACA,Y,sRAEqBs/H,E,WAmBjB,mB,4FAAkD,SAK9Ct/H,KAAA,YAMAA,KAAA,aAMAA,KAAA,gB,8CA/BUqB,GAKV,OAAO,IAAIi+H,EAJOxmB,iBAAlB,IACmB,IAAnB,oBACsB4mB,UAAtB,c,oDAsCqBxlG,EAAMu3B,EAAUvrC,GAAQ,MACdgU,EADc,cACrC7B,OADqC,WAG7C,GAAIA,SAAuB3b,EAA3B,OACI,MAAM,IAAI5a,MAAM,GAAV,OAAau2B,EAAb,KAAN,uBAGJ,IAAMvT,EAAU9kB,KAAK2/H,cAAcC,aAAnC,GACMhkH,EAAM5b,KAAK6/H,UAAjB,uBAEA7/H,KAAA,iC,gG7sB7DR,cAAS,qBAAA+G,QACT,aAAS,eAAAA,S,8EwsBDT,cACA,SAGA,mBAAyCia,GACrC,IAAM49G,EAAc,IAAI,UAGxB,OAFmB,IAAI,UAAWA,EAAa59G,K,gGCNnD,+BA6BA,OA5BI,YAAAyoE,MAAA,SAAM7tE,EAAase,EAA8BhU,GAAjD,WACU2nB,EAAO9xB,SAASC,cAAc,QAepC,OAbA6xB,EAAKsI,MAAMmK,QAAU,OAErBzS,EAAK2T,aAAa,SAAU5lC,GAC5BiyB,EAAK2T,aAAa,SAAU,QAC5B3T,EAAK2T,aAAa,SAAUt7B,GAAU,QAEtChlB,OAAOge,KAAKgb,GACPp3B,SAAQ,SAAAoG,GACL,IAAM9I,EAAQ85B,EAAKhxB,GAEnB2kC,EAAKmL,YAAY,EAAK6lF,aAAaz+H,EAAO8I,OAG3C2kC,GAGH,YAAAgxF,aAAR,SAAqBz+H,EAAY8I,GAC7B,IAAMuqE,EAAQ13D,SAASC,cAAc,SAMrC,OAJAy3D,EAAMjyB,aAAa,OAAQt4C,GAC3BuqE,EAAMjyB,aAAa,OAAQ,UAC3BiyB,EAAMjyB,aAAa,QAASphD,GAErBqzE,GAEf,EA7BA,G,sGCAA,yBAA8B73D,GAC1B,MAAO,eAAeC,KAAKD,IAG/B,qBAA0BkjH,EAAeC,GACrC,OAA8BD,EAIlBlsG,QAAQ,MAAO,IAJS,IAOxC,SAA4BosG,GACxB,OAAOA,EAAKpsG,QAAQ,MAAO,IARaqsG,CAAmBF,K,gHIL/D,eACA,QACA,aACA,aACA,aACA,YACA,a,sRAEqBW,E,WAsBjB,uB,4FAA2F,SAKvF1/H,KAAA,gBAMAA,KAAA,iBAMAA,KAAA,aAMAA,KAAA,wBAMAA,KAAA,c,gDAxCA,OAAO,IAAI0/H,EANWI,UAAtB,SACuBC,UAAvB,SACmBC,UAAnB,SAC8BznB,UAA9B,SACoB0nB,UAApB,c,wCAiDS/lG,GAAM,IAEXZ,EACAY,EAHW,YAGXA,EAHW,MAEAhT,OAFA,aAGXgT,EAHW,QAEYvS,OAFZ,aAGXuS,EAHW,cAE0B7B,OAF1B,WAKTvT,GAAU,aACZ,CACIvF,OAAQ2H,aAAmBA,aAAnBA,cADZ,KAEI+6E,IAAK/6E,WAAiBA,WAAjBA,cAFT,KAGIg5G,cAHJ,EAII54G,SAAUJ,EAJd,SAKIqT,QAASv6B,KAAKmgI,sBAAsBC,QALxC,GAMIC,WAAYn5G,EANhB,YAOIq1B,SAAUr1B,WAAgB,IAAA9F,UAAS8F,EAAzBA,SAPd,KAQIo5G,WAAYvkH,eAAiBA,SAAjBA,MARhB,KASIwkH,kBAAmBloG,EATvB,GAUImoG,aAAct5G,WAAgB,IAAA9F,UAAS8F,EAAzBA,SAVlB,KAWIumE,WAAYp1D,cAA4BnR,UAAgBA,UAAhBA,UAA5BmR,OAEhBr4B,KAAKygI,cAAcC,oBAdP,GAeZ1gI,KAAK2gI,eAAeC,cAfR,GAgBZ5gI,KAAK6gI,WAAWC,UAhBJ,GAiBZ9gI,KAAKygI,cAAcM,qBAjBP,GAkBZ/gI,KAAKghI,YAAYC,WAlBrB,IALe,EA0BmBt5G,EA1BnB,iBA0BPxO,OA1BO,WA8Bf,OAFA,mBAEO,IAAA+nH,SAAP,O,gHC3FO,SAAkB75G,EAAOjI,GACpC,IAAKpY,cAAD,IAAJ,iBAAoCqgB,EAChC,SAGJ,WAAOA,e,wFCHI,SAA+Bje,GAC1C,OAAO,eAAqB+3H,EAA5B,UARJ,iBACA,Y,6ICMe,SAA4B/gI,GACvC,OAAO,kBAAwB,aAA/B,IARJ,iBACA,Y,6ICGe,SAAuBA,GAClC,WAAOA,I,wFCEI,SAAiBgJ,GAC5B,OAAO,eAAqB+tD,EAA5B,UARJ,gBACA,Y,oJCGe,SAAkB/2D,GAC7B,OAAOqzG,eAAP,I,mGCDW,SAAqB2tB,GAChC,oBAAWA,EACP,SAGJ,OAAOA,+DAAP,gB,sHCLW,SAAkBhhI,GAC7B,oBAAWA,EACP,SAGJ,GAAqB,iBAAVA,IAAuBggD,aAAlC,GACI,OAAOhgD,EAAP,WAGJ,W,+FCbJ,Y,kSAEqB0/H,E,qLAKb,OAAO,IAAP,M,6CAOgB5lG,GAChB,OAAOl6B,KAAKqhI,aAAannG,EAAzB,oB,2CAOiBA,GACjB,OAAOl6B,KAAKqhI,aAAannG,EAAzB,qB,mCASSA,EAAMonG,GAAY,MACrB1kH,EAAUsd,MAAhB,GACMqnG,GAAsB,IAAAC,aAA5B,GAEA,OAAO,IAAAN,UAAA,4BAC8BtkH,EAD9B,kCAEiCA,EAFjC,0CAGsCA,EAHtC,yCAIiCA,EAJjC,wCAKoCA,EALpC,yCAMmCA,EANnC,oCAO+BA,EAP/B,sCAQoCA,EARpC,wCAS+BA,EAT/B,uCAUkCA,EAVlC,2CAWkCA,EAXlC,sCAY6BA,EAZ7B,UAAP,S,kJCpCR,Y,0KAEqBmjH,E,qLAKb,OAAO,IAAP,M,uCAOU7lG,GAAM,MACsCA,EADtC,SACR3T,OADQ,aACsC2T,EADtC,UACON,OADP,aACsCM,EADtC,MACuBhV,OADvB,WAGhB,OAAO,IAAAg8G,SAAQ,CACXO,sBAAuB3iE,UADZ,UAEX4iE,eAAgBn7G,EAFL,MAGXo7G,oBAAqBp7G,EAHV,UAIXq7G,6BAA8BhoG,UAAoBA,UAApBA,eAJnB,KAKXioG,YAAat7G,EALF,WAMXu7G,mBAAoBv7G,EANT,SAOXw7G,gBAAiB78G,EAPN,cAQX88G,cAAez7G,EARJ,KASX07G,eAAgB17G,EATL,YAUX27G,mBAAoB37G,EAASM,a,4IC3BzC,Y,0KAEqBm5G,E,qLAKb,OAAO,IAAP,M,mCAOM9lG,GAAM,IACJ33B,EAAW23B,EADP,OAGZ,OAAO,IAAAgnG,SAAQ,CACXiB,cAAepmH,SADJ,SAEXqmH,YAFW,EAGXC,gBAAiBvjE,UAAUwjE,iB,6KCpBhC,c,eACA,gB,yTCDA,Y,mBACA,kB,0BACA,wB,yBACA,wB,sBACA,qB,kBAEA,iB,sCACA,mC,yBACA,uB,+BACA,6B,gHCTP,Y,0KAEqBrC,E,qLAKb,OAAO,IAAP,M,oCAOO/lG,GAAM,MACUA,EADV,MACLhV,OADK,WAGb,OAAO,IAAAg8G,SAAQ,CACXqB,WAAYr9G,EADD,UAEXs9G,SAAUt9G,WAAgB,IAAA9D,UAAS8D,EAAzBA,SAA0C,Y,4ICnBhE,aACA,aACA,YACA,Y,sRAEqBq6G,E,WAmBjB,mB,4FAAqD,SAKjDv/H,KAAA,YAMAA,KAAA,gBAMAA,KAAA,gB,8CA/BUqB,GAKV,OAAO,IAAIk+H,EAJOzmB,iBAAlB,GACsBC,UAAtB,SACsB2mB,UAAtB,c,yCAqCUxlG,EAAMu3B,GAAU,MACKv3B,EADL,cAClB7B,OADkB,WAG1B,GAAIA,SAAuBoqG,EAA3B,IACI,MAAM,IAAI3gI,MAAM,GAAV,OAAau2B,EAAb,KAAN,uBAGJ,IAAMvT,EAAU9kB,KAAK2/H,cAAcC,aAAnC,GACMhkH,EAAM5b,KAAK6/H,UAAjB,gBACM7+G,EAAU,CACZvI,QAASzY,KAAK2/H,cAAc+C,aAAaxoG,IAG7Cl6B,KAAA,uC,iHC/DR,YACA,aACA,aACA,aACA,a,sRAEqB0/H,E,WAmBjB,qB,4FAAqE,SAKjE1/H,KAAA,iBAMAA,KAAA,cAMAA,KAAA,gBAMAA,KAAA,c,gDAhCA,OAAO,IAAI0/H,EALYK,UAAvB,SACoB4C,UAApB,SACsBC,UAAtB,SACoB3C,UAApB,c,wCAyCS/lG,GAAM,MAC0BA,EAD1B,MACPhT,OADO,WACKwS,EAAqBQ,EAD1B,iBAGf,OAAO,IAAAgnG,SAAQ,CACX36G,SAAUvmB,KAAK2gI,eAAeC,cADnB,GAEXP,WAAYn5G,EAFD,YAGXA,MAAOlnB,KAAK6iI,YAAYC,WAHb,GAIXn7G,QAAS3nB,KAAK+iI,cAAcC,aAJjB,GAKX99G,MAAOllB,KAAKghI,YAAYC,WALb,GAMXgC,kBAAmBvpG,M,mCAQdQ,GAAM,IACPZ,EAAcY,EADP,UAGf,OAAO,IAAAgnG,SAAQ,CACXh4E,cAAe5vB,Q,kIC5E3B,Y,0KAEqBymG,E,qLAKb,OAAO,IAAP,M,uCAOU7lG,GAAM,MAC0BA,EAD1B,SACR3T,OADQ,aAC0B2T,EAD1B,UACON,OADP,WAGhB,OAAO,IAAAsnG,SAAQ,CACXgC,eAAgB38G,EAAA,kBAA6B,CAAEle,KAAMke,EAASQ,mBADnD,KAEXo8G,oBAAqBvpG,UAAoBA,UAApBA,eAFV,KAGX7c,GAAIwJ,cAAsB,IAAAnF,UAASmF,EAA/BA,YAHO,KAIX68G,cAAexpG,UAAoBA,UAApBA,YAAoD,Y,oLCrB/E,Y,0KAEqB+oG,E,qLAKb,OAAO,IAAP,M,oCAOOzoG,GAAM,MACUA,EADV,MACLhT,OADK,WAGb,OAAO,IAAAg6G,SAAQ,CACXppF,gBAAiB93C,KAAK0gI,oBADX,GAEXz4G,QAASjoB,KAAKqjI,aAFH,GAGX/7G,SAAUJ,EAHC,SAIXnK,GAAImK,WAAgB,IAAA9F,UAAS8F,EAAzBA,SAJO,KAKXG,MAAOrnB,KAAKsjI,WALD,GAMXj6G,SAAUrpB,KAAKujI,cANJ,GAOX7rF,iBAAkB13C,KAAK+gI,qBAPZ,GAQX1nH,MAAO6N,EARI,MASXs8G,OAAQxjI,KAAKyjI,iBAAiBvpG,O,0CASlBA,GAAM,MACIA,EADJ,SACd3T,OADc,WAEhB3J,EAAU5c,KAAKqhI,aAAannG,EAAlC,kBAMA,OAJI3T,EAAJ,QACI3J,QAAgB2J,EAAhB3J,OAGJ,I,oCAQUsd,GAAM,MACqBA,kBADrB,GACRzX,EADQ,cACKK,EADL,cAGhB,SACW,EAAC,IAAA4gH,uBAAsB,CAC1B99G,OAD0B,EAE1B+9G,aAAc7gH,KAItB,K,sCAQyB,QAAdoE,aAAc,MAAN,GAAM,EACzB,OAAIA,UAAgBA,SAApB,QACWA,EAAA,oBAAyB,kBAAe,CAAEO,KAAjB,WAGpC,K,2CAQiByS,GACjB,OAAOl6B,KAAKqhI,aAAannG,EAAzB,qB,mCASSA,EAAMonG,GACf,IAAM1kH,EAAUsd,MAAhB,GAEA,OAAO,IAAAwpG,uBAAsB,CACzBnmH,KAAMX,EADmB,KAEzBM,QAASN,EAFgB,QAGzB67B,aAAc77B,EAHW,YAIzBkB,QAASlB,EAJgB,QAKzBs7B,WAAYt7B,EALa,UAMzBu7B,UAAWv7B,EANc,SAOzBoB,MAAOpB,EAPkB,MAQzBgnH,WAAYhnH,EARa,aASzBkY,MAAOlY,EATkB,SAUzBinH,SAAUjnH,EAVe,aAWzBknH,SAAUlnH,EAXe,aAYzBozE,IAAKpzE,EAAQgB,a,iCASVsc,GAAM,MACoBA,EADpB,KAGb,YAHa,MACE,CAAE7S,MAAO,IADX,GAGN,WAAe,mBAAc,IAAA65G,SAAQ,CACxCz5G,KAAMs8G,EADkC,GAExCC,WAAYD,EAF4B,UAGxC17H,KAAM07H,EAHkC,KAIxCrhH,MAAOqhH,EAJiC,cAKxC18D,WAAY08D,EAL4B,iBAMxC/jH,SAAU+jH,EAN8B,SAOxC7hH,IAAK6hH,EAAS7hH,W,uCASLgY,GAAM,MACIA,EADJ,MACXhT,OADW,WAGnB,OAAO,IAAAg6G,SAAQ,CACX+C,YAAa/8G,aAAmBA,aAAnBA,cADF,KAEX2C,SAAU3C,WAAiBA,WAAjBA,cAFC,KAGXmC,SAAUnC,WAAiBA,WAAjBA,cAHC,KAIXW,SAAUX,WAAiBA,WAAjBA,cAJC,KAKX+6E,IAAK/6E,WAAiBA,WAAjBA,cAAgD,Y,4IC/IjE,eACA,QAEA,Y,sRAEqB07G,E,WAejB,e,4FAAmC,SAK/B5iI,KAAA,wB,gDAZA,OAAO,IAAI4iI,EAFmBrqB,UAA9B,c,wCAqBSr+E,GAAM,MAMXA,EANW,MAEXhT,OAFW,aAMXgT,EANW,UAGX/S,OAHW,aAMX+S,EANW,QAIXvS,OAJW,aAMXuS,EANW,cAKX7B,OALW,WAQTvT,EAAU,CACZgyD,YAAanvD,kBAA0BA,EAA1BA,gBADD,KAEZu8G,OAAQ/8G,EAAA,kBAA8B,CAAEg9G,eAAgBh9G,EAAUi9G,mBAFtD,KAGZ7pG,QAASv6B,KAAKmgI,sBAAsBC,QAHxB,GAIZC,WAAYn5G,EAJA,YAKZumE,WAAYp1D,cAA4BnR,UAAgBA,UAAhBA,UAL5B,MAMZ02C,yBAA2Bj2C,EAAD,aANd,KAMsCA,EAAxB,qBAC1Bk2C,iCAAmCl2C,gBAAwBA,EAAzB,qBAAyDA,EAAzD,6BAAgG,MAG9H/B,EAAWyS,EAlBJ,OAoBf,IACI,eAAsB,CAAEzS,WAG5B,IAAMuU,EAAQxS,SAAiB0Q,EAA/B,MAwBA,OAtBI1Q,EAAJ,kBACI,eAAsBA,EAAtB,kBACOA,EAAJ,cACH,eAAsB,CAClBvO,aAAcpZ,KAAKqkI,iBAAiBnqG,KAEjCC,GACP,eAAsB,CAClBwoC,kBAAmB,CACftpD,MAAO8gB,KAGRxS,EAAJ,cACH,eAAsB,CAClB28G,uBAAwBtkI,KAAKukI,gBAAgBrqG,MAGjD,eAAsB,CAClB6jC,YAAa/9D,KAAKwkI,gBAAgBtqG,MAInC,IAAAgnG,SAAP,K,sCAQYhnG,GAAM,MACOA,EADP,QACVvS,OADU,WAGlB,OAAO,IAAAu5G,SAAQ,CACXuD,aAAc98G,EADH,OAEXiK,MAAOjK,YAAmB,IAAA+8G,UAAS/8G,WAA5BA,OAFI,KAGXqK,OAAQrK,EAHG,SAIX86C,mBAAoB96C,EAJT,MAKXmK,KAAMnK,YAAmB,IAAA+8G,UAAS/8G,WAA5BA,MALK,KAMXg9G,cAAeh9G,EANJ,eAOXi9G,eAAgBj9G,EAPL,aAQXk9G,kBAAmBl9G,EAAQkT,oB,0CASL,IAAXlT,EAAW,EAAXA,QACf,OAAO,IAAAu5G,SAAQ,CACX5+D,gCAAiC36C,EADtB,SAEXtO,MAAOsO,EAFI,aAGX86C,mBAAoB96C,EAHT,MAIXm9G,mBAAoBn9G,EAJT,MAKXi9G,eAAgBj9G,EALL,aAMXk9G,kBAAmBl9G,EAAQkT,oB,yCASN,IAAXlT,EAAW,EAAXA,QACd,OAAO,IAAAu5G,SAAQ,CACX6D,mBAAoBp9G,EADT,aAEX+1D,IAAK/1D,EAFM,IAGXwvD,IAAKxvD,EAHM,cAIXiK,MAAOjK,YAAmB,IAAA+8G,UAAS/8G,WAA5BA,OAJI,KAKXqK,OAAQrK,EALG,SAMXmK,KAAMnK,YAAmB,IAAA+8G,UAAS/8G,WAA5BA,MANK,KAOXq9G,aAAcr9G,EAAQo2D,kB,kICpIlC,Y,0KAEqBkiD,E,qLAKb,OAAO,IAAP,M,oCAOO/lG,GAAM,MACUA,EADV,MACLhV,OADK,WAGb,OAAO,IAAAg8G,SAAQ,CACX9kH,KAAM8I,EADK,UAEXnI,GAAImI,WAAgB,IAAA9D,UAAS8D,EAAzBA,SAFO,KAGX7c,KAAM6c,EAAMimE,iB,8ICpBxB,aACA,S,EAEwB,CACpB1yE,QAAS,CACLgM,OAAQwgH,EADH,iBAEL,eAAgBA,oBAEpBr/G,OAAQs/G,O,6JCRZ,I,EAAA,G,EAAA,Q,2BACA,SACA,Q,0KAEqBjsB,E,qLAKb,OAAO,IAAP,M,mCAQM/+E,GAAsC,IAAhC6jG,EAAgC,uDAAlBkH,mBAC1B,OAAI/qG,IAAQ,IAAAvb,UAAA,EAAsBsmH,EAAlC,kBACWttF,eAAP,GAGJ,I,mCAUSwhE,GACT,IAAM1gG,EAAUzY,KAAKmlI,qBAAqBhsB,EAA1C,yBACM4kB,EAAc5kB,oBAApB,gBACQzgG,EAAuBygG,EAHjB,OAGE59E,EAAe49E,EAHjB,WAKVj/E,EAAO,aAAci/E,EAAMA,EAApB,SAAmCA,EAA9C,aAMA,OAJIj/E,IAAQ,IAAAvb,UAAA,EAAsBsmH,EAAlC,oBACI/qG,EAAOyd,WAAPzd,IAGG,CACHA,KADG,EACGzhB,QADH,EACYC,OADZ,EACoB6iB,gB,2CASV8iG,GAGjB,OAFcA,EAAaA,oCAAH,SAAxB,IAEO,QAAa,cAChB,IAAM9a,EAAQ57C,QAAd,KACMz+D,GAAOq6G,WAAD,IAAZ,OAEA,UAIO,kB,sHAAA,IACFr6G,EADE,cACkBq6G,YADzB,SAHI,IALR,S,wUCxDavK,E,qLAKb,OAAO,IAAP,M,uCASUp9F,EAAKoF,EAASywC,GACxB,IAAM0nD,EAAM,IAAZ,eAiBA,OAfAA,UAAc,WACV,GACI1nD,EAAS,IAAI3vD,MAAMq3G,EAAnB1nD,cAIR0nD,SAAa,WACT,GACI1nD,KAIR0nD,OAASn4F,EAATm4F,aACAn5G,KAAA,gBAEA,I,iCASOm5G,EAAK1gG,GACOvX,YAAnB,GAEAkkI,SAAmB,YACf,IAAMhlI,EAAQqY,EAAd,GAEA0gG,6B,iCAUGA,EAAKn4F,GACZm4F,kBAAsBn4F,EAAtBm4F,gBAEIn4F,EAAJ,SACIhhB,KAAA,aAAqBghB,EAArB,c,4IC7DZ,gBACA,aACA,Y,sRAEqBw+G,E,WAmBjB,mB,4FAAyD,SAKrDx/H,KAAA,YAMAA,KAAA,gBAMAA,KAAA,oB,8CA/BUqB,GAKV,OAAO,IAAIm+H,EAJO1mB,iBAAlB,GACsBC,UAAtB,SAC0BssB,UAA1B,c,+CAoCgBnrG,EAAMu3B,GACtB,IAAM71C,EAAM5b,KAAK6/H,UAAjB,4BACM/6G,EAAU9kB,KAAKslI,kBAAkBC,iBAAvC,GAEAvlI,KAAA,wC,iHCpDR,YACA,aACA,aACA,aACA,a,sRAEqBqlI,E,WAmBjB,qB,4FAAiE,SAK7DrlI,KAAA,aAMAA,KAAA,gBAMAA,KAAA,cAMAA,KAAA,c,gDAhCA,OAAO,IAAIqlI,EALQG,UAAnB,SACsBC,UAAtB,SACoBC,UAApB,SACoBzF,UAApB,c,4CAyCa/lG,GACb,OAAO,IAAAgnG,SAAQ,CACXx1G,KAAM1rB,KAAK2lI,WAAWC,UADX,GAEXrrG,QAASv6B,KAAK6lI,cAAcC,aAFjB,GAGXC,MAAO/lI,KAAKgmI,YAAYC,WAHb,GAIX/gH,MAAOllB,KAAKghI,YAAYC,WAAW/mG,S,6HC5D/C,Y,0KAEqBsrG,E,qLAKb,OAAO,IAAP,M,mCAOMtrG,GAAM,MACUA,EADV,KACJxO,OADI,WAGZ,OAAO,IAAAw1G,SAAQ,CACXgF,cAAex6G,EADJ,SAEXrE,MAAOrnB,KAAKsjI,WAFD,GAGXE,OAAQxjI,KAAKyjI,iBAAiBvpG,O,iCAS3BA,GAAM,aACoBA,EADpB,KAGb,YAHa,MACE,CAAE7S,MAAO,IADX,GAGN,WAAe,mBAAc,IAAA65G,SAAQ,CACxCt5D,gBAAiBm8D,EADuB,gBAExC17H,KAAM07H,EAFkC,KAGxCrhH,MAAOqhH,EAHiC,cAIxC18D,WAAY08D,EAJ4B,iBAKxC/jH,SAAU+jH,EAL8B,SAMxC7hH,IAAK6hH,EANmC,IAOxCh9D,WAAYg9D,EAP4B,WAQxCxkH,OAAQwkH,EARgC,2BASxChzH,KAAM,sB,uCASGmpB,GAAM,MACGA,EADH,KACXxO,OADW,WAGnB,OAAO,IAAAw1G,SAAQ,CACXiF,eAAgBz6G,WAAgBA,WAAhBA,cADL,KAEXu4G,YAAav4G,aAAkBA,aAAlBA,cAFF,KAGX06G,eAAgB16G,WAAgBA,WAAhBA,cAHL,KAIX7D,SAAU6D,WAAgBA,WAAhBA,cAJC,KAKX26G,gBAAiB36G,WAAgBA,WAAhBA,cALN,KAMX46G,UAAW56G,WAAgBA,WAAhBA,cAA8C,S,gCASvDq4G,GAON,MANc,CACVwC,mBADU,WAEVC,kBAFU,UAGVC,0BAA2B,aAGlB1C,EAAb,W,4IC3ER,I,EAAA,QACA,G,EAAA,S,8PAEqB0B,E,WAcjB,e,4FAAmC,SAK/BzlI,KAAA,wB,gDAZA,OAAO,IAAIylI,EAFmBltB,UAA9B,c,wCAqBSr+E,GAAM,MACgBA,EADhB,cACP7B,OADO,WAGf,OAAO,IAAA6oG,SAAQ,CACX74H,KAAMrI,KAAKmgI,sBAAsBC,QAAQ/nG,S,iHCjCrD,Y,0KAEqBqtG,E,qLAKb,OAAO,IAAP,M,oCAOOxrG,GACP,OAAO,IAAAgnG,SAAQ,CACXppF,gBAAiB93C,KAAKqhI,aAAannG,EADxB,kBAEXwd,iBAAkB13C,KAAKqhI,aAAannG,EAAM,uB,mCAUrCA,EAAMonG,GAAY,MACDpnG,EADC,SACnB3T,OADmB,WAErB3J,EAAUsd,MAAhB,GAEA,OAAO,IAAAgnG,SAAQ,CACX7oF,eAAgBz7B,EADL,aAEX27B,eAAgB37B,EAFL,aAGXW,KAAMX,EAHK,KAIXM,QAASN,EAJE,QAKX67B,aAAc77B,EALH,YAMXiK,MAAON,EANI,MAOX2xB,WAAYt7B,EAPD,UAQXu7B,UAAWv7B,EARA,SASXoB,MAAOpB,EATI,MAUX87B,YAAa97B,EAVF,SAWXkY,MAAOlY,EAAQY,gB,4IC1C3B,Y,0KAEqByiH,E,qLAKb,OAAO,IAAP,M,oCAOO/lG,GACP,OAAO,IAAAgnG,SAAQ,CACXjyE,OAAQjvD,KAAK0mI,YADF,GAEXC,eAAgB3mI,KAAK4mI,cAFV,GAGX3kB,KAAMjiH,KAAK6mI,UAAU3sG,O,kCASjBA,GAAM,MACSA,EADT,MACNhV,OADM,WAGd,OAAO,IAAAg8G,SAAQ,CACXzoF,aAAcvzB,EADH,YAEXghH,cAAehhH,EAFJ,aAGX4hH,cAAe5hH,EAAM00B,kB,oCASf1f,GAAM,MACOA,EADP,MACRhV,OADQ,WAGhB,OAAO,IAAAg8G,SAAQ,CACXnkH,GAAImI,WAAgB,IAAAw/G,UAASx/G,EAAzBA,SADO,KAEX7c,KAAM6c,EAAMimE,c,gCASVjxD,GAAM,MACWA,EADX,MACJhV,OADI,WAGZ,OAAO,IAAAg8G,SAAQ,CACXx1G,KAAMxG,EADK,SAEXqG,SAAUrG,EAFC,aAGX6hH,aAAc7hH,EAHH,sBAIX8hH,KAAM9hH,EAAMgvB,gB,4IC/DxB,gBACA,SACA,aACA,U,sRAKqBurF,E,WAiBjB,iB,4FAAsC,SAKlCz/H,KAAA,YAMAA,KAAA,gB,8CAvBUqB,GAIV,OAAO,IAAIo+H,EAHO3mB,iBAAlB,GACsBC,UAAtB,c,2CA6BY7+E,EAAMu3B,GAClB,IAAM71C,EAAM5b,KAAK6/H,UAAUoH,kBACvB/sG,EADQ,QAERA,EAFQ,WAGRA,EAHJ,cAKMlZ,EAAU,CACZvI,SAAS,IAAAiqH,cAAA,IAGb1iI,KAAA,wC,iDAQuBk6B,EAAMu3B,GAC7B,IAAM71C,EAAM5b,KAAK6/H,UAAUqH,6BACvBhtG,EADQ,QAERA,EAFQ,WAGRA,EAHJ,cAKMpV,GAAU,IAAAqiH,oCAAhB,GACMnmH,EAAU,CACZ4E,OAAQs7C,EADI,KAEZzoD,SAAS,IAAAiqH,cAAA,IAGb1iI,KAAA,qC,8CAQoBk6B,EAAMu3B,GAC1B,IAAM71C,EAAM5b,KAAK6/H,UAAUuH,qBACvBltG,EADQ,QAERA,EAFQ,WAGRA,EAHQ,aAIRA,EAJJ,cAMMlZ,EAAU,CACZ4E,OAAQyhH,EADI,OAEZ5uH,SAAS,IAAAiqH,cAAA,IAGb1iI,KAAA,0C,0VC9Fa84G,E,WAejB,e,4FAAoB,SAKhB94G,KAAA,S,8CAdUqB,GACV,OAAO,IAAIy3G,EAAX,O,6CAmCclnB,EAASlrE,EAAYw+B,GACnC,gBAAUllD,KAAV,mG,mDASyB4xF,EAASlrE,EAAYw+B,GAC9C,gBAAUllD,KAAV,4H,2CAUiB4xF,EAASlrE,EAAY3N,EAAcmsC,GACpD,gBAAUllD,KAAV,iH,2BAnCA,IAAKA,KAAD,SAAiBA,KAAKqB,OAA1B,KACI,MAAM,IAAIS,MAAV,yCAGJ,OAAO9B,KAAKqB,OAAZ,S,yHCvBD,WAA2C,IAAX64B,EAAW,uDAAJ,GAEtCotG,EAEAptG,EAJ0C,aAG1Cm4D,EACAn4D,EAJ0C,kBAMxCyJ,GAAW,IAAAu9F,SAAQ,CAAE74H,KAAMi/H,IAEjC,OAAO,IAAApG,SAAQ,CACXv9F,SADW,EAEXo6B,aAmEiB,EArEN,EAqE2B,IAAnBiP,kBAAmB,MAAN,GAAM,EACpCt+C,GAAe,IAAAwyG,SAAQl0D,EAA7B,eAEO,IAAAk0D,SAAQ,CACXqG,gBAAiBv6D,EADN,eAEXh7C,OAAQg7C,EAFG,OAGXp7C,MAAOo7C,EAHI,MAIXl7C,KAAMk7C,EAJK,KAKXw6D,kBAAmBx6D,EALR,iBAMXy6D,YAAaz6D,EANF,WAOX06D,WAAY16D,EAPD,UAQX26D,aAAc36D,EARH,YASX46D,WAAY56D,EATD,UAUX66D,gBAAiB76D,EAVN,cAWX86D,SAAU96D,EAXC,QAYX+6D,gBAAiB/6D,EAZN,eAaXg7D,eAAgBh7D,EAbL,cAcXi7D,yBAA0Bj7D,EAdf,uBAeXk7D,kBAAmBl7D,EAfR,gBAgBX43D,eAAgBl2G,KArFhBopB,gBAAiBupF,EAAannG,EAHnB,gBAIXo4D,mBAAoBD,IAiE5B,IAAyB,EAAqB,EAAnBrlB,EACjBt+C,G,qCAzDH,WAAuD,IAAXwL,EAAW,uDAAJ,GACtD,OAAO,IAAAgnG,SAAQ,CACXxpF,iBAAkB2pF,EAAannG,EAAD,oB,eAS/B,WAAyD,IAAtBgvB,GAAsB,uDAAJ,IAA7B5vB,UAC3B,OAAO,IAAA4nG,SAAQ,CACXh4E,mBA5CR,YAoDA,SAASm4E,IAA2B,IAuBhB55G,EAAMpf,EAvBJuU,EAAc,uDAAJ,GACtBkY,GAsBUrN,EAtBS7K,EAAD,aAsBFvU,EAtByBuU,EAA/C,UAuBO,IAAAskH,SAAQ,CACXz5G,KADW,EAEXpf,UAvBJ,OAAO,IAAA64H,SAAQ,CACX7oF,eAAgBz7B,EADL,aAEX27B,eAAgB37B,EAFL,aAGXW,KAAMX,EAHK,KAIXM,QAASN,EAJE,QAKX67B,aAAc77B,EALH,YAMXiK,MAAOjK,EANI,MAOXs7B,WAAYt7B,EAPD,UAQXu7B,UAAWv7B,EARA,SASXoB,MAAOpB,EATI,MAUX87B,YAAa97B,EAVF,SAWXkY,Y,+FClER,I,EAAuB,CACnBgoB,KAAM,I,yThDDV,yBAEA,6BACA,6BACA,4BAGA,mBAA4C97B,GACxC,OAAO,IAAI,UACP,IAAI,UACJ,IAAI,UACJ48G,EACA58G,K,4HCTR,6BAEM68G,EAA2B,4BAC3BC,EAAsC,qCAE5C,2BAqEA,OApEI,YAAApZ,cAAA,SAAc1jG,GACV,IAAM+8G,EAAc/8G,EAAQvI,QAAUzY,KAAKg+H,WAAWh9G,EAAQvI,QAAS,gBAAkB,GAEzF,GAAIuI,EAAQxI,KAAM,CACd,GAAIqlH,EAAyBhiH,KAAKkiH,GAC9B,OAAOpmF,KAAKC,UAAU52B,EAAQxI,MAGlC,GAAIslH,EAAoCjiH,KAAKkiH,GACzC,OAAO,UAAiB/8G,EAAQxI,MAIxC,OAAOwI,EAAQxI,MAGnB,YAAA8rG,WAAA,SAAWnL,GACP,IAAM1gG,EAAUzY,KAAKi+H,sBAAsB9kB,EAAI+kB,yBAQ/C,MAAO,CACH1lH,KANSxY,KAAKm+H,mBACd,aAAchlB,EAAMA,EAAIxgG,SAAYwgG,EAAYilB,aAChD3lH,GAKAA,QAAO,EACPC,OAAQygG,EAAIzgG,OACZ6iB,WAAY49E,EAAI59E,aAIhB,YAAA4iG,mBAAR,SAA2B3lH,EAAcC,GACrC,IAAMslH,EAAc/9H,KAAKg+H,WAAWvlH,EAAS,gBAE7C,OAAID,GAAQqlH,EAAyBhiH,KAAKkiH,GAC/BpmF,KAAKmG,MAAMtlC,GAGfA,GAGH,YAAAylH,sBAAR,SAA8BI,GAG1B,OAFcA,EAAaA,EAAWzrG,QAAQ,eAAgB,KAAKlB,MAAM,SAAW,IAEvE1rB,QAAO,SAACyS,EAASkvD,G,MACpB47C,EAAQ57C,EAAKj2C,MAAM,KACnBxoB,GAAOq6G,EAAMpU,SAAW,IAAIngB,OAElC,OAAK9lF,EAIL,cACOuP,IAAO,MACTvP,EAAI2sC,eAAgB0tE,EAAM1kG,KAAK,KAAKmwE,OAAM,IALpCv2E,IAOZ,KAGC,YAAAulH,WAAR,SAAmBvlH,EAAkBvP,GACjC,OAAKuP,GAAYvP,IAIVuP,EAAQvP,IAAQuP,EAAQvP,EAAI2sC,iBAHxB,IAKnB,EArEA,G,6XCRA,mBAAyC3b,GACrC,MAAoB,WAAhB,EAAOA,IAA8B,OAATA,EACrBA,EAGJh5B,OAAOge,KAAKgb,GACd7Y,QAAO,SAAAnY,GAAO,gBAAAgxB,EAAKhxB,MACnBiW,KAAI,SAAAjW,GACD,IAAM9I,EAAQ85B,EAAKhxB,GAEnB,MAAqB,iBAAV9I,EACG8I,EAAG,IAAI+2C,mBAAmB7/C,GAG9B8I,EAAG,IAAI+2C,mBAAmBtI,KAAKC,UAAUx3C,IAAU,OAEhEye,KAAK,O,oGChBd,E,KAAA,qBAKA,2BAsCA,OArCI,YAAAw6F,cAAA,SAAcz9F,EAAaoF,GACvB,IAAMm4F,EAAM,IAAImlB,eAIhB,OAFAt+H,KAAKu+H,kBAAkBplB,EAAKv9F,EAAKoF,GAE1Bm4F,GAGH,YAAAolB,kBAAR,SAA0BplB,EAAqBv9F,EAAaoF,QAAA,IAAAA,MAAA,IACxDm4F,EAAI7zC,KAAKtkD,EAAQ4E,QAAU,MAAO5lB,KAAKw+H,WAAW5iH,EAAKoF,EAAQwV,OAAQxV,EAAQ6jG,eAAe,GAE1F7jG,EAAQvI,SACRzY,KAAKy+H,yBAAyBtlB,EAAKn4F,EAAQvI,SAGZ,kBAAxBuI,EAAQioC,cACfkwD,EAAIulB,gBAAkB19G,EAAQioC,aAGH,iBAApBjoC,EAAQwD,UACf20F,EAAI30F,QAAUxD,EAAQwD,UAItB,YAAAi6G,yBAAR,SAAiCtlB,EAAqB1gG,GAClDvX,OAAOge,KAAKzG,GAAS3V,SAAQ,SAAAoG,GACzBiwG,EAAIgvB,iBAAiBj/H,EAAKuP,EAAQvP,QAIlC,YAAAs1H,WAAR,SAAmB5iH,EAAa4a,EAAiBquF,GAC7C,YAD6C,IAAAA,OAAA,GACxCruF,GAAyC,IAA/Bt1B,OAAOge,KAAKsX,GAAQ/2B,OAIzBmc,EAAG,IAAI+iH,EAAY/mF,UAAUphB,EAAQ,CAAEosF,OAAQiC,IAH9CjpG,GAKnB,EAtCA,G,oHCLA,E,KAAA,qBAcA,0BACqB,KAAAmoG,OAAmB,GAqBxC,OAnBI,YAAAkB,KAAA,SAAQrpG,EAAaoF,GACjB,IAAM4P,EAAW5wB,KAAKkxC,OAAOt1B,EAAKoF,EAAQwV,QAE1C,OAAOx2B,KAAK+jH,OAAOnzF,IAAa,MAGpC,YAAAs0F,MAAA,SAAStpG,EAAaoF,EAAyBrI,GAC3C,IAAMiY,EAAW5wB,KAAKkxC,OAAOt1B,EAAKoF,EAAQwV,QAE1Cx2B,KAAK+jH,OAAOnzF,GAAYjY,GAGpB,YAAAu4B,OAAR,SAAet1B,EAAa4a,GACxB,YADwB,IAAAA,MAAA,IACW,IAA/Bt1B,OAAOge,KAAKsX,GAAQ/2B,OACbmc,EAGDA,EAAG,IAAI+iH,EAAY/mF,UAAUphB,IAE/C,EAtBA,GAAa,EAAAwtF,gB,wVCdb,mBAAkC5qD,GAC9B,QAASA,IACe,WAAnB,EAAOA,IAA2C,mBAAZA,IACf,mBAAjBA,EAAQp1C,O,kFCHvB,E,KAAA,wBAEA,mBAAsCyuC,GAClC,OAAO,IAAI,UAAQA","file":"transients~checkout-740c0ada.js","sourcesContent":["import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","/** @prettier */\nimport { Subscription } from './Subscription';\nimport { Subscriber } from './Subscriber';\nimport { Observable } from './Observable';\nimport { subscribeTo } from './util/subscribeTo';\n\ninterface SimpleOuterSubscriberLike<T> {\n  /**\n   * A handler for inner next notifications from the inner subscription\n   * @param innerValue the value nexted by the inner producer\n   */\n  notifyNext(innerValue: T): void;\n  /**\n   * A handler for inner error notifications from the inner subscription\n   * @param err the error from the inner producer\n   */\n  notifyError(err: any): void;\n  /**\n   * A handler for inner complete notifications from the inner subscription.\n   */\n  notifyComplete(): void;\n}\n\nexport class SimpleInnerSubscriber<T> extends Subscriber<T> {\n  constructor(private parent: SimpleOuterSubscriberLike<any>) {\n    super();\n  }\n\n  protected _next(value: T): void {\n    this.parent.notifyNext(value);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete();\n    this.unsubscribe();\n  }\n}\n\nexport class ComplexInnerSubscriber<T, R> extends Subscriber<R> {\n  constructor(private parent: ComplexOuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n\nexport class SimpleOuterSubscriber<T, R> extends Subscriber<T> implements SimpleOuterSubscriberLike<R> {\n  notifyNext(innerValue: R): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error(err);\n  }\n\n  notifyComplete(): void {\n    this.destination.complete();\n  }\n}\n\n/**\n * DO NOT USE (formerly \"OuterSubscriber\")\n * TODO: We want to refactor this and remove it. It is retaining values it shouldn't for long\n * periods of time.\n */\nexport class ComplexOuterSubscriber<T, R> extends Subscriber<T> {\n  /**\n   * @param _outerValue Used by: bufferToggle, delayWhen, windowToggle\n   * @param innerValue Used by: subclass default, combineLatest, race, bufferToggle, windowToggle, withLatestFrom\n   * @param _outerIndex Used by: combineLatest, race, withLatestFrom\n   * @param _innerSub Used by: delayWhen\n   */\n  notifyNext(_outerValue: T, innerValue: R, _outerIndex: number, _innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any): void {\n    this.destination.error(error);\n  }\n\n  /**\n   * @param _innerSub Used by: race, bufferToggle, delayWhen, windowToggle, windowWhen\n   */\n  notifyComplete(_innerSub: ComplexInnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n\nexport function innerSubscribe(result: any, innerSubscriber: Subscriber<any>): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  let subscription: Subscription;\n  try {\n    subscription = subscribeTo(result)(innerSubscriber) as Subscription;\n  } catch (error) {\n    innerSubscriber.error(error);\n  }\n  return subscription;\n}\n","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (this as any)._ctorUnsubscribe = true;\n      (this as any)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _ctorUnsubscribe, _unsubscribe, _subscriptions } = (this as any);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      // It's only possible to null _unsubscribe - to release the reference to\n      // any teardown function passed in the constructor - if the property was\n      // actually assigned in the constructor, as there are some classes that\n      // are derived from Subscriber (which derives from Subscription) that\n      // implement an _unsubscribe method as a mechanism for obtaining\n      // unsubscription notifications and some of those subscribers are\n      // recycled. Also, in some of those subscribers, _unsubscribe switches\n      // from a prototype method to an instance property - see notifyNext in\n      // RetryWhenSubscriber.\n      if (_ctorUnsubscribe) {\n        (this as any)._unsubscribe = undefined;\n      }\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!teardown) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","export { default as includes } from './includes';\nexport { default as isNil } from './is-nil';\nexport { default as isObject } from './is-object';\nexport { default as omitEmptyStringAndNil } from './omit-emptystring-and-nil';\nexport { default as omitNil } from './omit-nil';\nexport { default as omitProperty } from './omit-property';\nexport { default as toNumber } from './to-number';\nexport { default as toSnakeCase } from './to-snake-case';\nexport { default as toString } from './to-string';\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","export { default as createFormPoster } from './create-form-poster';\nexport { default as FormPoster } from './form-poster';\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n */\nexport const asyncScheduler = new AsyncScheduler(AsyncAction);\n\n/**\n * @deprecated renamed. Use {@link asyncScheduler}\n */\nexport const async = asyncScheduler;","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Applies a given `project` function to each value emitted by the source\n * Observable, and emits the resulting values as an Observable.\n *\n * <span class=\"informal\">Like [Array.prototype.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map),\n * it passes each source value through a transformation function to get\n * corresponding output values.</span>\n *\n * ![](map.png)\n *\n * Similar to the well known `Array.prototype.map` function, this operator\n * applies a projection to each value and emits that projection in the output\n * Observable.\n *\n * ## Example\n * Map every click to the clientX position of that click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(map(ev => ev.clientX));\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mapTo}\n * @see {@link pluck}\n *\n * @param {function(value: T, index: number): R} project The function to apply\n * to each `value` emitted by the source Observable. The `index` parameter is\n * the number `i` for the i-th emission that has happened since the\n * subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to define what `this` is in the\n * `project` function.\n * @return {Observable<R>} An Observable that emits the values from the source\n * Observable transformed by the given `project` function.\n * @method map\n * @owner Observable\n */\nexport function map<T, R>(project: (value: T, index: number) => R, thisArg?: any): OperatorFunction<T, R> {\n  return function mapOperation(source: Observable<T>): Observable<R> {\n    if (typeof project !== 'function') {\n      throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');\n    }\n    return source.lift(new MapOperator(project, thisArg));\n  };\n}\n\nexport class MapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => R, private thisArg: any) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapSubscriber<T, R> extends Subscriber<T> {\n  count: number = 0;\n  private thisArg: any;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => R,\n              thisArg: any) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  // NOTE: This looks unoptimized, but it's actually purposefully NOT\n  // using try/catch optimizations.\n  protected _next(value: T) {\n    let result: R;\n    try {\n      result = this.project.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(result);\n  }\n}\n"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 200);\n","module.exports = require(\"tslib\");","module.exports = require(\"@bigcommerce/data-store\");","module.exports = require(\"lodash\");","module.exports = require(\"rxjs\");","module.exports = require(\"@bigcommerce/memoize\");","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nimport { ConsignmentMeta } from './consignment';\n\nexport enum ConsignmentActionType {\n    CreateConsignmentsRequested = 'CREATE_CONSIGNMENTS_REQUESTED',\n    CreateConsignmentsSucceeded = 'CREATE_CONSIGNMENTS_SUCCEEDED',\n    CreateConsignmentsFailed = 'CREATE_CONSIGNMENTS_FAILED',\n\n    UpdateConsignmentRequested = 'UPDATE_CONSIGNMENT_REQUESTED',\n    UpdateConsignmentSucceeded = 'UPDATE_CONSIGNMENT_SUCCEEDED',\n    UpdateConsignmentFailed = 'UPDATE_CONSIGNMENT_FAILED',\n\n    DeleteConsignmentRequested = 'DELETE_CONSIGNMENT_REQUESTED',\n    DeleteConsignmentSucceeded = 'DELETE_CONSIGNMENT_SUCCEEDED',\n    DeleteConsignmentFailed = 'DELETE_CONSIGNMENT_FAILED',\n\n    UpdateShippingOptionRequested = 'UPDATE_SHIPPING_OPTION_REQUESTED',\n    UpdateShippingOptionSucceeded = 'UPDATE_SHIPPING_OPTION_SUCCEEDED',\n    UpdateShippingOptionFailed = 'UPDATE_SHIPPING_OPTION_FAILED',\n\n    LoadShippingOptionsRequested = 'LOAD_SHIPPING_OPTIONS_REQUESTED',\n    LoadShippingOptionsSucceeded = 'LOAD_SHIPPING_OPTIONS_SUCCEEDED',\n    LoadShippingOptionsFailed = 'LOAD_SHIPPING_OPTIONS_FAILED',\n}\n\nexport type ConsignmentAction =\n    CreateConsignmentsAction |\n    UpdateConsignmentAction |\n    DeleteConsignmentAction |\n    UpdateShippingOptionAction |\n    LoadShippingOptionsAction;\n\nexport type CreateConsignmentsAction =\n    CreateConsignmentsRequestedAction |\n    CreateConsignmentsSucceededAction |\n    CreateConsignmentsFailedAction;\n\nexport type UpdateConsignmentAction =\n    UpdateConsignmentRequestedAction |\n    UpdateConsignmentSucceededAction |\n    UpdateConsignmentFailedAction;\n\nexport type DeleteConsignmentAction =\n    DeleteConsignmentRequestedAction |\n    DeleteConsignmentSucceededAction |\n    DeleteConsignmentFailedAction;\n\nexport type UpdateShippingOptionAction =\n    UpdateShippingOptionRequestedAction |\n    UpdateShippingOptionSucceededAction |\n    UpdateShippingOptionFailedAction;\n\nexport type LoadShippingOptionsAction =\n    LoadShippingOptionsRequestedAction |\n    LoadShippingOptionsSucceededAction |\n    LoadShippingOptionsFailedAction;\n\nexport interface CreateConsignmentsRequestedAction extends Action {\n    type: ConsignmentActionType.CreateConsignmentsRequested;\n}\n\nexport interface CreateConsignmentsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.CreateConsignmentsSucceeded;\n}\n\nexport interface CreateConsignmentsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.CreateConsignmentsFailed;\n}\n\nexport interface UpdateConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentRequested;\n}\n\nexport interface UpdateConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentSucceeded;\n}\n\nexport interface UpdateConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateConsignmentFailed;\n}\n\nexport interface DeleteConsignmentRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentRequested;\n}\n\nexport interface DeleteConsignmentSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentSucceeded;\n}\n\nexport interface DeleteConsignmentFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.DeleteConsignmentFailed;\n}\n\nexport interface UpdateShippingOptionRequestedAction extends Action<null, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionRequested;\n}\n\nexport interface UpdateShippingOptionSucceededAction extends Action<Checkout, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionSucceeded;\n}\n\nexport interface UpdateShippingOptionFailedAction extends Action<Error, ConsignmentMeta> {\n    type: ConsignmentActionType.UpdateShippingOptionFailed;\n}\n\nexport interface LoadShippingOptionsRequestedAction extends Action {\n    type: ConsignmentActionType.LoadShippingOptionsRequested;\n}\n\nexport interface LoadShippingOptionsSucceededAction extends Action<Checkout> {\n    type: ConsignmentActionType.LoadShippingOptionsSucceeded;\n}\n\nexport interface LoadShippingOptionsFailedAction extends Action<Error> {\n    type: ConsignmentActionType.LoadShippingOptionsFailed;\n}\n","module.exports = require(\"rxjs/operators\");","import { Action } from '@bigcommerce/data-store';\n\nexport enum ShippingStrategyActionType {\n    UpdateAddressFailed = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_FAILED',\n    UpdateAddressRequested = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_REQUESTED',\n    UpdateAddressSucceeded = 'SHIPPING_STRATEGY_UPDATE_ADDRESS_SUCCEEDED',\n    SelectOptionFailed = 'SHIPPING_STRATEGY_SELECT_OPTION_FAILED',\n    SelectOptionRequested = 'SHIPPING_STRATEGY_SELECT_OPTION_REQUESTED',\n    SelectOptionSucceeded = 'SHIPPING_STRATEGY_SELECT_OPTION_SUCCEEDED',\n    InitializeFailed = 'SHIPPING_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'SHIPPING_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'SHIPPING_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'SHIPPING_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'SHIPPING_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'SHIPPING_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'SHIPPING_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'SHIPPING_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'SHIPPING_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type ShippingStrategyAction =\n    ShippingStrategyUpdateAddressAction |\n    ShippingStrategySelectOptionAction |\n    ShippingStrategyInitializeAction |\n    ShippingStrategyDeinitializeAction |\n    ShippingStrategyWidgetAction;\n\nexport type ShippingStrategyUpdateAddressAction =\n    UpdateAddressRequestedAction |\n    UpdateAddressSucceededAction |\n    UpdateAddressFailedAction;\n\nexport type ShippingStrategySelectOptionAction =\n    SelectOptionRequestedAction |\n    SelectOptionSucceededAction |\n    SelectOptionFailedAction;\n\nexport type ShippingStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type ShippingStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type ShippingStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface UpdateAddressRequestedAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressRequested;\n}\n\nexport interface UpdateAddressSucceededAction extends Action {\n    type: ShippingStrategyActionType.UpdateAddressSucceeded;\n}\n\nexport interface UpdateAddressFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.UpdateAddressFailed;\n}\n\nexport interface SelectOptionRequestedAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionRequested;\n}\n\nexport interface SelectOptionSucceededAction extends Action {\n    type: ShippingStrategyActionType.SelectOptionSucceeded;\n}\n\nexport interface SelectOptionFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.SelectOptionFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: ShippingStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: ShippingStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: ShippingStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: ShippingStrategyActionType.WidgetInteractionFailed;\n}\n","enum PaymentStrategyType {\n    ADYENV2 = 'adyenv2',\n    ADYENV2_GOOGLEPAY = 'googlepayadyenv2',\n    AFFIRM = 'affirm',\n    AFTERPAY = 'afterpay',\n    AMAZON = 'amazon',\n    AUTHORIZENET_GOOGLE_PAY = 'googlepayauthorizenet',\n    AMAZONPAYV2 = 'amazonpay',\n    BARCLAYS = 'barclays',\n    BLUESNAPV2 = 'bluesnapv2',\n    BOLT = 'bolt',\n    CHECKOUTCOM = 'checkoutcom',\n    CHECKOUTCOM_APM = 'checkoutcomapm',\n    CHECKOUTCOM_FAWRY = 'checkoutcomfawry',\n    CHECKOUTCOM_SEPA = 'checkoutcomsepa',\n    CHECKOUTCOM_IDEAL = 'checkoutcomideal',\n    CREDIT_CARD = 'creditcard',\n    CHECKOUTCOM_GOOGLE_PAY = 'googlepaycheckoutcom',\n    CLEARPAY = 'clearpay',\n    CONVERGE = 'converge',\n    CYBERSOURCE = 'cybersource',\n    CYBERSOURCEV2 = 'cybersourcev2',\n    DIGITALRIVER = 'digitalriver',\n    CYBERSOURCEV2_GOOGLE_PAY = 'googlepaycybersourcev2',\n    KLARNA = 'klarna',\n    KLARNAV2 = 'klarnav2',\n    LAYBUY = 'laybuy',\n    LEGACY = 'legacy',\n    MOLLIE = 'mollie',\n    NO_PAYMENT_DATA_REQUIRED = 'nopaymentdatarequired',\n    OFFLINE = 'offline',\n    OFFSITE = 'offsite',\n    PAYPAL = 'paypal',\n    PAYPAL_EXPRESS = 'paypalexpress',\n    PAYPAL_EXPRESS_CREDIT = 'paypalexpresscredit',\n    PAYPAL_COMMERCE = 'paypalcommerce',\n    PAYPAL_COMMERCE_CREDIT = 'paypalcommercecredit',\n    PAYPAL_COMMERCE_CREDIT_CARD = 'paypalcommercecreditcards',\n    PAYPAL_COMMERCE_ALTERNATIVE_METHODS = 'paypalcommercealternativemethods',\n    PPSDK = 'PAYMENT_TYPE_SDK',\n    SAGE_PAY = 'sagepay',\n    SQUARE = 'squarev2',\n    STRIPEV3 = 'stripev3',\n    BRAINTREE = 'braintree',\n    BRAINTREE_PAYPAL = 'braintreepaypal',\n    BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit',\n    BRAINTREE_VISA_CHECKOUT = 'braintreevisacheckout',\n    BRAINTREE_GOOGLE_PAY = 'googlepaybraintree',\n    CHASE_PAY = 'chasepay',\n    WE_PAY = 'wepay',\n    MASTERPASS = 'masterpass',\n    STRIPE_GOOGLE_PAY = 'googlepaystripe',\n    SEZZLE = 'sezzle',\n    ZIP = 'zip',\n}\n\nexport default PaymentStrategyType;\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum CustomerStrategyActionType {\n    SignInFailed = 'CUSTOMER_STRATEGY_SIGN_IN_FAILED',\n    SignInRequested = 'CUSTOMER_STRATEGY_SIGN_IN_REQUESTED',\n    SignInSucceeded = 'CUSTOMER_STRATEGY_SIGN_IN_SUCCEEDED',\n    SignOutFailed = 'CUSTOMER_STRATEGY_SIGN_OUT_FAILED',\n    SignOutRequested = 'CUSTOMER_STRATEGY_SIGN_OUT_REQUESTED',\n    SignOutSucceeded = 'CUSTOMER_STRATEGY_SIGN_OUT_SUCCEEDED',\n    InitializeFailed = 'CUSTOMER_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'CUSTOMER_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'CUSTOMER_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'CUSTOMER_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'CUSTOMER_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'CUSTOMER_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'CUSTOMER_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type CustomerStrategyAction =\n    CustomerStrategySignInAction |\n    CustomerStrategySignOutAction |\n    CustomerStrategyInitializeAction |\n    CustomerStrategyDeinitializeAction |\n    CustomerStrategyWidgetAction;\n\nexport type CustomerStrategySignInAction =\n    SignInRequestedAction |\n    SignInSucceededAction |\n    SignInFailedAction;\n\nexport type CustomerStrategySignOutAction =\n    SignOutRequestedAction |\n    SignOutSucceededAction |\n    SignOutFailedAction;\n\nexport type CustomerStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type CustomerStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type CustomerStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface SignInRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignInRequested;\n}\n\nexport interface SignInSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignInSucceeded;\n}\n\nexport interface SignInFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignInFailed;\n}\n\nexport interface SignOutRequestedAction extends Action {\n    type: CustomerStrategyActionType.SignOutRequested;\n}\n\nexport interface SignOutSucceededAction extends Action {\n    type: CustomerStrategyActionType.SignOutSucceeded;\n}\n\nexport interface SignOutFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.SignOutFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: CustomerStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: CustomerStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: CustomerStrategyActionType.WidgetInteractionFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderPaymentsAction } from '../order';\n\nexport enum PaymentStrategyActionType {\n    ExecuteFailed = 'PAYMENT_STRATEGY_EXECUTE_FAILED',\n    ExecuteRequested = 'PAYMENT_STRATEGY_EXECUTE_REQUESTED',\n    ExecuteSucceeded = 'PAYMENT_STRATEGY_EXECUTE_SUCCEEDED',\n    FinalizeFailed = 'PAYMENT_STRATEGY_FINALIZE_FAILED',\n    FinalizeRequested = 'PAYMENT_STRATEGY_FINALIZE_REQUESTED',\n    FinalizeSucceeded = 'PAYMENT_STRATEGY_FINALIZE_SUCCEEDED',\n    InitializeFailed = 'PAYMENT_STRATEGY_INITIALIZE_FAILED',\n    InitializeRequested = 'PAYMENT_STRATEGY_INITIALIZE_REQUESTED',\n    InitializeSucceeded = 'PAYMENT_STRATEGY_INITIALIZE_SUCCEEDED',\n    DeinitializeFailed = 'PAYMENT_STRATEGY_DEINITIALIZE_FAILED',\n    DeinitializeRequested = 'PAYMENT_STRATEGY_DEINITIALIZE_REQUESTED',\n    DeinitializeSucceeded = 'PAYMENT_STRATEGY_DEINITIALIZE_SUCCEEDED',\n    WidgetInteractionStarted = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_STARTED',\n    WidgetInteractionFinished = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FINISHED',\n    WidgetInteractionFailed = 'PAYMENT_STRATEGY_WIDGET_INTERACTION_FAILED',\n}\n\nexport type PaymentStrategyAction =\n    PaymentStrategyExecuteAction |\n    PaymentStrategyFinalizeAction |\n    PaymentStrategyInitializeAction |\n    PaymentStrategyDeinitializeAction |\n    PaymentStrategyWidgetAction;\n\nexport type PaymentStrategyExecuteAction =\n    ExecuteRequestedAction |\n    ExecuteSucceededAction |\n    ExecuteFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyFinalizeAction =\n    FinalizeRequestedAction |\n    FinalizeSucceededAction |\n    FinalizeFailedAction |\n    LoadOrderPaymentsAction;\n\nexport type PaymentStrategyInitializeAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction;\n\nexport type PaymentStrategyDeinitializeAction =\n    DeinitializeRequestedAction |\n    DeinitializeSucceededAction |\n    DeinitializeFailedAction;\n\nexport type PaymentStrategyWidgetAction =\n    WidgetInteractionStartedAction |\n    WidgetInteractionFinishedAction |\n    WidgetInteractionFailedAction;\n\nexport interface ExecuteRequestedAction extends Action {\n    type: PaymentStrategyActionType.ExecuteRequested;\n}\n\nexport interface ExecuteSucceededAction extends Action {\n    type: PaymentStrategyActionType.ExecuteSucceeded;\n}\n\nexport interface ExecuteFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.ExecuteFailed;\n}\n\nexport interface FinalizeRequestedAction extends Action {\n    type: PaymentStrategyActionType.FinalizeRequested;\n}\n\nexport interface FinalizeSucceededAction extends Action {\n    type: PaymentStrategyActionType.FinalizeSucceeded;\n}\n\nexport interface FinalizeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.FinalizeFailed;\n}\n\nexport interface InitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.InitializeFailed;\n}\n\nexport interface DeinitializeRequestedAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeRequested;\n}\n\nexport interface DeinitializeSucceededAction extends Action {\n    type: PaymentStrategyActionType.DeinitializeSucceeded;\n}\n\nexport interface DeinitializeFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.DeinitializeFailed;\n}\n\nexport interface WidgetInteractionStartedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionStarted;\n}\n\nexport interface WidgetInteractionFinishedAction extends Action {\n    type: PaymentStrategyActionType.WidgetInteractionFinished;\n}\n\nexport interface WidgetInteractionFailedAction extends Action<Error> {\n    type: PaymentStrategyActionType.WidgetInteractionFailed;\n}\n","import StandardError from './standard-error';\n\nexport enum MissingDataErrorType {\n    MissingBillingAddress,\n    MissingCart,\n    MissingCheckout,\n    MissingConsignments,\n    MissingCustomer,\n    MissingCheckoutConfig,\n    MissingOrder,\n    MissingOrderConfig,\n    MissingOrderId,\n    MissingPayment,\n    MissingPaymentInstrument,\n    MissingPaymentMethod,\n    MissingPaymentToken,\n    MissingShippingAddress,\n}\n\n/**\n * Throw this error when data that is expected to exist is missing. Usually it\n * is due to the fact that certain data has not been retrieved from or saved to\n * the server yet. And such data is required to perform certain actions.\n */\nexport default class MissingDataError extends StandardError {\n    constructor(\n        public subtype: MissingDataErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'MissingDataError';\n        this.type = 'missing_data';\n    }\n}\n\nfunction getErrorMessage(type: MissingDataErrorType): string {\n    switch (type) {\n    case MissingDataErrorType.MissingBillingAddress:\n        return 'Unable to proceed because billing address data is unavailable.';\n\n    case MissingDataErrorType.MissingCart:\n        return 'Unable to proceed because cart data is unavailable.';\n\n    case MissingDataErrorType.MissingConsignments:\n        return 'Unable to proceed because consignments data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckout:\n        return 'Unable to proceed because checkout data is unavailable.';\n\n    case MissingDataErrorType.MissingCustomer:\n        return 'Unable to proceed because customer data is unavailable.';\n\n    case MissingDataErrorType.MissingCheckoutConfig:\n    case MissingDataErrorType.MissingOrderConfig:\n        return 'Unable to proceed because configuration data is unavailable.';\n\n    case MissingDataErrorType.MissingOrder:\n        return 'Unable to proceed because order data is unavailable.';\n\n    case MissingDataErrorType.MissingOrderId:\n        return 'Unable to proceed because order ID is unavailable or not generated yet.';\n\n    case MissingDataErrorType.MissingPayment:\n        return 'Unable to proceed because payment data is unavailable.';\n\n    case MissingDataErrorType.MissingPaymentToken:\n        return 'Unable to proceed because the token required to submit a payment is missing.';\n\n    case MissingDataErrorType.MissingPaymentMethod:\n        return 'Unable to proceed because payment method data is unavailable or not properly configured.';\n\n    case MissingDataErrorType.MissingShippingAddress:\n        return 'Unable to proceed because shipping address data is unavailable.';\n\n    default:\n        return 'Unable to proceed because the required data is unavailable.';\n    }\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadConfigAction } from '../config';\nimport { LoadFormFieldsAction } from '../form';\n\nimport Checkout from './checkout';\n\nexport enum CheckoutActionType {\n    LoadCheckoutRequested = 'LOAD_CHECKOUT_REQUESTED',\n    LoadCheckoutSucceeded = 'LOAD_CHECKOUT_SUCCEEDED',\n    LoadCheckoutFailed = 'LOAD_CHECKOUT_FAILED',\n\n    UpdateCheckoutRequested = 'UPDATE_CHECKOUT_REQUESTED',\n    UpdateCheckoutSucceeded = 'UPDATE_CHECKOUT_SUCCEEDED',\n    UpdateCheckoutFailed = 'UPDATE_CHECKOUT_FAILED',\n}\n\nexport type CheckoutAction = LoadCheckoutAction | UpdateCheckoutAction;\n\nexport type LoadCheckoutAction =\n    LoadCheckoutRequestedAction |\n    LoadCheckoutSucceededAction |\n    LoadCheckoutFailedAction |\n    LoadFormFieldsAction |\n    LoadConfigAction;\n\nexport type UpdateCheckoutAction =\n    UpdateCheckoutRequestedAction |\n    UpdateCheckoutSucceededAction |\n    UpdateCheckoutFailedAction;\n\nexport interface LoadCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.LoadCheckoutRequested;\n}\n\nexport interface LoadCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.LoadCheckoutSucceeded;\n}\n\nexport interface LoadCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.LoadCheckoutFailed;\n}\n\nexport interface UpdateCheckoutRequestedAction extends Action {\n    type: CheckoutActionType.UpdateCheckoutRequested;\n}\n\nexport interface UpdateCheckoutSucceededAction extends Action<Checkout> {\n    type: CheckoutActionType.UpdateCheckoutSucceeded;\n}\n\nexport interface UpdateCheckoutFailedAction extends Action<Error> {\n    type: CheckoutActionType.UpdateCheckoutFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { InternalOrderResponseData } from './internal-order-responses';\nimport Order from './order';\n\nexport enum OrderActionType {\n    LoadOrderRequested = 'LOAD_ORDER_REQUESTED',\n    LoadOrderSucceeded = 'LOAD_ORDER_SUCCEEDED',\n    LoadOrderFailed = 'LOAD_ORDER_FAILED',\n\n    LoadOrderPaymentsRequested = 'LOAD_ORDER_PAYMENTS_REQUESTED',\n    LoadOrderPaymentsSucceeded = 'LOAD_ORDER_PAYMENTS_SUCCEEDED',\n    LoadOrderPaymentsFailed = 'LOAD_ORDER_PAYMENTS_FAILED',\n\n    SubmitOrderRequested = 'SUBMIT_ORDER_REQUESTED',\n    SubmitOrderSucceeded = 'SUBMIT_ORDER_SUCCEEDED',\n    SubmitOrderFailed = 'SUBMIT_ORDER_FAILED',\n\n    FinalizeOrderRequested = 'FINALIZE_ORDER_REQUESTED',\n    FinalizeOrderSucceeded = 'FINALIZE_ORDER_SUCCEEDED',\n    FinalizeOrderFailed = 'FINALIZE_ORDER_FAILED',\n}\n\nexport type OrderAction = LoadOrderAction |\n    LoadOrderPaymentsAction |\n    SubmitOrderAction |\n    FinalizeOrderAction;\n\nexport type LoadOrderPaymentsAction = LoadOrderPaymentsRequestedAction |\n    LoadOrderPaymentsSucceededAction |\n    LoadOrderPaymentsFailedAction;\n\nexport type LoadOrderAction =\n    LoadOrderRequestedAction |\n    LoadOrderSucceededAction |\n    LoadOrderFailedAction;\n\nexport type SubmitOrderAction =\n    SubmitOrderRequestedAction |\n    SubmitOrderSucceededAction |\n    SubmitOrderFailedAction |\n    LoadOrderAction;\n\nexport type FinalizeOrderAction =\n    FinalizeOrderRequestedAction |\n    FinalizeOrderSucceededAction |\n    FinalizeOrderFailedAction |\n    LoadOrderAction;\n\nexport interface LoadOrderRequestedAction extends Action {\n    type: OrderActionType.LoadOrderRequested;\n}\n\nexport interface LoadOrderSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderSucceeded;\n}\n\nexport interface LoadOrderFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderFailed;\n}\n\nexport interface LoadOrderPaymentsRequestedAction extends Action {\n    type: OrderActionType.LoadOrderPaymentsRequested;\n}\n\nexport interface LoadOrderPaymentsSucceededAction extends Action<Order> {\n    type: OrderActionType.LoadOrderPaymentsSucceeded;\n}\n\nexport interface LoadOrderPaymentsFailedAction extends Action<Error> {\n    type: OrderActionType.LoadOrderPaymentsFailed;\n}\n\nexport interface SubmitOrderRequestedAction extends Action {\n    type: OrderActionType.SubmitOrderRequested;\n}\n\nexport interface SubmitOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.SubmitOrderSucceeded;\n}\n\nexport interface SubmitOrderFailedAction extends Action<Error> {\n    type: OrderActionType.SubmitOrderFailed;\n}\n\nexport interface FinalizeOrderRequestedAction extends Action {\n    type: OrderActionType.FinalizeOrderRequested;\n}\n\nexport interface FinalizeOrderSucceededAction extends Action<InternalOrderResponseData> {\n    type: OrderActionType.FinalizeOrderSucceeded;\n}\n\nexport interface FinalizeOrderFailedAction extends Action<Error> {\n    type: OrderActionType.FinalizeOrderFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\n\nexport enum PaymentMethodActionType {\n    LoadPaymentMethodRequested = 'LOAD_PAYMENT_METHOD_REQUESTED',\n    LoadPaymentMethodSucceeded = 'LOAD_PAYMENT_METHOD_SUCCEEDED',\n    LoadPaymentMethodFailed = 'LOAD_PAYMENT_METHOD_FAILED',\n\n    LoadPaymentMethodsRequested = 'LOAD_PAYMENT_METHODS_REQUESTED',\n    LoadPaymentMethodsSucceeded = 'LOAD_PAYMENT_METHODS_SUCCEEDED',\n    LoadPaymentMethodsFailed = 'LOAD_PAYMENT_METHODS_FAILED',\n}\n\nexport type PaymentMethodAction = LoadPaymentMethodAction | LoadPaymentMethodsAction;\n\nexport type LoadPaymentMethodAction =\n    LoadPaymentMethodRequestedAction |\n    LoadPaymentMethodSucceededAction |\n    LoadPaymentMethodFailedAction;\n\nexport type LoadPaymentMethodsAction =\n    LoadPaymentMethodsRequestedAction |\n    LoadPaymentMethodsSucceededAction |\n    LoadPaymentMethodsFailedAction;\n\nexport interface LoadPaymentMethodRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodRequested;\n}\n\nexport interface LoadPaymentMethodSucceededAction extends Action<PaymentMethod> {\n    type: PaymentMethodActionType.LoadPaymentMethodSucceeded;\n}\n\nexport interface LoadPaymentMethodFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodFailed;\n}\n\nexport interface LoadPaymentMethodsRequestedAction extends Action {\n    type: PaymentMethodActionType.LoadPaymentMethodsRequested;\n}\n\nexport interface LoadPaymentMethodsSucceededAction extends Action<PaymentMethod[], PaymentMethodMeta> {\n    type: PaymentMethodActionType.LoadPaymentMethodsSucceeded;\n}\n\nexport interface LoadPaymentMethodsFailedAction extends Action<Error> {\n    type: PaymentMethodActionType.LoadPaymentMethodsFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum BillingAddressActionType {\n    UpdateBillingAddressRequested = 'UPDATE_BILLING_ADDRESS_REQUESTED',\n    UpdateBillingAddressSucceeded = 'UPDATE_BILLING_ADDRESS_SUCCEEDED',\n    UpdateBillingAddressFailed = 'UPDATE_BILLING_ADDRESS_FAILED',\n\n    ContinueAsGuestRequested = 'CONTINUE_AS_GUEST_REQUESTED',\n    ContinueAsGuestSucceeded = 'CONTINUE_AS_GUEST_SUCCEEDED',\n    ContinueAsGuestFailed = 'CONTINUE_AS_GUEST_FAILED',\n}\n\nexport type BillingAddressAction =\n    ContinueAsGuestAction |\n    UpdateBillingAddressAction;\n\nexport type UpdateBillingAddressAction =\n    UpdateBillingAddressRequested |\n    UpdateBillingAddressSucceeded |\n    UpdateBillingAddressFailed;\n\nexport type ContinueAsGuestAction =\n    ContinueAsGuestRequested |\n    ContinueAsGuestSucceeded |\n    ContinueAsGuestFailed;\n\nexport interface UpdateBillingAddressRequested extends Action {\n    type: BillingAddressActionType.UpdateBillingAddressRequested;\n}\n\nexport interface UpdateBillingAddressSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.UpdateBillingAddressSucceeded;\n}\n\nexport interface UpdateBillingAddressFailed extends Action<Error> {\n    type: BillingAddressActionType.UpdateBillingAddressFailed;\n}\n\nexport interface ContinueAsGuestRequested extends Action {\n    type: BillingAddressActionType.ContinueAsGuestRequested;\n}\n\nexport interface ContinueAsGuestSucceeded extends Action<Checkout> {\n    type: BillingAddressActionType.ContinueAsGuestSucceeded;\n}\n\nexport interface ContinueAsGuestFailed extends Action<Error> {\n    type: BillingAddressActionType.ContinueAsGuestFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadPaymentMethodAction } from '../payment';\n\nimport { CheckoutButtonMethodType } from './strategies';\n\nexport enum CheckoutButtonActionType {\n    InitializeButtonFailed = 'INITIALIZE_BUTTON_FAILED',\n    InitializeButtonRequested = 'INITIALIZE_BUTTON_REQUESTED',\n    InitializeButtonSucceeded = 'INITIALIZE_BUTTON_SUCCEEDED',\n\n    DeinitializeButtonFailed = 'DEINITIALIZE_BUTTON_FAILED',\n    DeinitializeButtonRequested = 'DEINITIALIZE_BUTTON_REQUESTED',\n    DeinitializeButtonSucceeded = 'DEINITIALIZE_BUTTON_SUCCEEDED',\n}\n\nexport type CheckoutButtonAction = InitializeButtonAction | DeinitializeButtonAction;\n\nexport type InitializeButtonAction =\n    InitializeButtonRequestedAction |\n    InitializeButtonSucceededAction |\n    InitializeButtonFailedAction |\n    LoadPaymentMethodAction;\n\nexport type DeinitializeButtonAction =\n    DeinitializeButtonRequestedAction |\n    DeinitializeButtonSucceededAction |\n    DeinitializeButtonFailedAction;\n\nexport interface CheckoutButtonActionMeta {\n    methodId: CheckoutButtonMethodType;\n}\n\nexport interface InitializeButtonActionMeta extends CheckoutButtonActionMeta {\n    containerId: string;\n}\n\nexport interface InitializeButtonRequestedAction extends Action<undefined, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonRequested;\n}\n\nexport interface InitializeButtonSucceededAction extends Action<undefined, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonSucceeded;\n}\n\nexport interface InitializeButtonFailedAction extends Action<Error, InitializeButtonActionMeta> {\n    type: CheckoutButtonActionType.InitializeButtonFailed;\n}\n\nexport interface DeinitializeButtonRequestedAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonRequested;\n}\n\nexport interface DeinitializeButtonSucceededAction extends Action<undefined, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonSucceeded;\n}\n\nexport interface DeinitializeButtonFailedAction extends Action<Error, CheckoutButtonActionMeta> {\n    type: CheckoutButtonActionType.DeinitializeButtonFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum CouponActionType {\n    ApplyCouponRequested = 'APPLY_COUPON_REQUESTED',\n    ApplyCouponSucceeded = 'APPLY_COUPON_SUCCEEDED',\n    ApplyCouponFailed = 'APPLY_COUPON_FAILED',\n\n    RemoveCouponRequested = 'REMOVE_COUPON_REQUESTED',\n    RemoveCouponSucceeded = 'REMOVE_COUPON_SUCCEEDED',\n    RemoveCouponFailed = 'REMOVE_COUPON_FAILED',\n}\n\nexport type CouponAction =\n    ApplyCouponAction |\n    RemoveCouponAction;\n\nexport type ApplyCouponAction =\n    ApplyCouponRequestedAction |\n    ApplyCouponSucceededAction |\n    ApplyCouponFailedAction;\n\nexport type RemoveCouponAction =\n    RemoveCouponRequestedAction |\n    RemoveCouponSucceededAction |\n    RemoveCouponFailedAction;\n\nexport interface ApplyCouponRequestedAction extends Action {\n    type: CouponActionType.ApplyCouponRequested;\n}\n\nexport interface ApplyCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.ApplyCouponSucceeded;\n}\n\nexport interface ApplyCouponFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: CouponActionType.ApplyCouponFailed;\n}\n\nexport interface RemoveCouponRequestedAction extends Action {\n    type: CouponActionType.RemoveCouponRequested;\n}\n\nexport interface RemoveCouponSucceededAction extends Action<Checkout> {\n    type: CouponActionType.RemoveCouponSucceeded;\n}\n\nexport interface RemoveCouponFailedAction extends Action<RequestError> {\n    type: CouponActionType.RemoveCouponFailed;\n}\n","import { setPrototypeOf } from '../../utility';\n\nimport CustomError from './custom-error';\n\n/**\n * This error type should not be constructed directly. It is a base class for\n * all custom errors thrown in this library.\n */\nexport default abstract class StandardError extends Error implements CustomError {\n    name = 'StandardError';\n    type = 'standard';\n\n    constructor(message?: string) {\n        super(message || 'An unexpected error has occurred.');\n\n        setPrototypeOf(this, new.target.prototype);\n\n        if (typeof Error.captureStackTrace === 'function') {\n            Error.captureStackTrace(this, new.target);\n        } else {\n            this.stack = (new Error(this.message)).stack;\n        }\n    }\n}\n","export default function setPrototypeOf(object: any, prototype: object) {\n    if (Object.setPrototypeOf) {\n        Object.setPrototypeOf(object, prototype);\n    } else {\n        object.__proto__ = prototype;\n    }\n\n    return object;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadCheckoutAction } from '../checkout';\nimport { SpamProtectionAction } from '../spam-protection';\n\nimport Customer from './customer';\nimport { InternalCustomerResponseData } from './internal-customer-responses';\n\nexport enum CustomerActionType {\n    SignInCustomerRequested = 'SIGN_IN_CUSTOMER_REQUESTED',\n    SignInCustomerSucceeded = 'SIGN_IN_CUSTOMER_SUCCEEDED',\n    SignInCustomerFailed = 'SIGN_IN_CUSTOMER_FAILED',\n\n    SignOutCustomerRequested = 'SIGN_OUT_CUSTOMER_REQUESTED',\n    SignOutCustomerSucceeded = 'SIGN_OUT_CUSTOMER_SUCCEEDED',\n    SignOutCustomerFailed = 'SIGN_OUT_CUSTOMER_FAILED',\n\n    CreateCustomerRequested = 'CREATE_CUSTOMER_REQUESTED',\n    CreateCustomerSucceeded = 'CREATE_CUSTOMER_SUCCEEDED',\n    CreateCustomerFailed = 'CREATE_CUSTOMER_FAILED',\n\n    CreateCustomerAddressRequested = 'CREATE_CUSTOMER_ADDRESS_REQUESTED',\n    CreateCustomerAddressSucceeded = 'CREATE_CUSTOMER_ADDRESS_SUCCEEDED',\n    CreateCustomerAddressFailed = 'CREATE_CUSTOMER_ADDRESS_FAILED',\n}\n\nexport type CustomerAction =\n    SignInCustomerAction |\n    SignOutCustomerAction |\n    CreateCustomerAddressAction |\n    CreateCustomerAction;\n\nexport type CreateCustomerAction =\n    CreateCustomerRequestedAction |\n    CreateCustomerSucceededAction |\n    CreateCustomerFailedAction |\n    SpamProtectionAction |\n    LoadCheckoutAction;\n\nexport type CreateCustomerAddressAction =\n    CreateCustomerAddressRequestedAction |\n    CreateCustomerAddressSucceededAction |\n    CreateCustomerAddressFailedAction |\n    LoadCheckoutAction;\n\nexport type SignInCustomerAction =\n    SignInCustomerRequestedAction |\n    SignInCustomerSucceededAction |\n    SignInCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport type SignOutCustomerAction =\n    SignOutCustomerRequestedAction |\n    SignOutCustomerSucceededAction |\n    SignOutCustomerFailedAction |\n    LoadCheckoutAction;\n\nexport interface SignInCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignInCustomerRequested;\n}\n\nexport interface SignInCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignInCustomerSucceeded;\n}\n\nexport interface SignInCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignInCustomerFailed;\n}\n\nexport interface SignOutCustomerRequestedAction extends Action {\n    type: CustomerActionType.SignOutCustomerRequested;\n}\n\nexport interface SignOutCustomerSucceededAction extends Action<InternalCustomerResponseData> {\n    type: CustomerActionType.SignOutCustomerSucceeded;\n}\n\nexport interface SignOutCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.SignOutCustomerFailed;\n}\n\nexport interface CreateCustomerRequestedAction extends Action {\n    type: CustomerActionType.CreateCustomerRequested;\n}\n\nexport interface CreateCustomerSucceededAction extends Action {\n    type: CustomerActionType.CreateCustomerSucceeded;\n}\n\nexport interface CreateCustomerFailedAction extends Action<Error> {\n    type: CustomerActionType.CreateCustomerFailed;\n}\n\nexport interface CreateCustomerAddressRequestedAction extends Action {\n    type: CustomerActionType.CreateCustomerAddressRequested;\n}\n\nexport interface CreateCustomerAddressSucceededAction extends Action<Customer> {\n    type: CustomerActionType.CreateCustomerAddressSucceeded;\n}\n\nexport interface CreateCustomerAddressFailedAction extends Action<Error> {\n    type: CustomerActionType.CreateCustomerAddressFailed;\n}\n","import EmbeddedCheckoutError from './embedded-checkout-error';\nimport { EmbeddedContentOptions } from './iframe-content';\n\nexport enum EmbeddedCheckoutEventType {\n    CheckoutComplete = 'CHECKOUT_COMPLETE',\n    CheckoutError = 'CHECKOUT_ERROR',\n    CheckoutLoaded = 'CHECKOUT_LOADED',\n    FrameError = 'FRAME_ERROR',\n    FrameLoaded = 'FRAME_LOADED',\n    SignedOut = 'SIGNED_OUT',\n}\n\nexport interface EmbeddedCheckoutEventMap {\n    [EmbeddedCheckoutEventType.CheckoutComplete]: EmbeddedCheckoutCompleteEvent;\n    [EmbeddedCheckoutEventType.CheckoutError]: EmbeddedCheckoutErrorEvent;\n    [EmbeddedCheckoutEventType.CheckoutLoaded]: EmbeddedCheckoutLoadedEvent;\n    [EmbeddedCheckoutEventType.FrameError]: EmbeddedCheckoutFrameErrorEvent;\n    [EmbeddedCheckoutEventType.FrameLoaded]: EmbeddedCheckoutFrameLoadedEvent;\n    [EmbeddedCheckoutEventType.SignedOut]: EmbeddedCheckoutSignedOutEvent;\n}\n\nexport type EmbeddedCheckoutEvent = (\n    EmbeddedCheckoutCompleteEvent |\n    EmbeddedCheckoutErrorEvent |\n    EmbeddedCheckoutFrameErrorEvent |\n    EmbeddedCheckoutFrameLoadedEvent |\n    EmbeddedCheckoutLoadedEvent |\n    EmbeddedCheckoutSignedOutEvent\n);\n\nexport interface EmbeddedCheckoutCompleteEvent {\n    type: EmbeddedCheckoutEventType.CheckoutComplete;\n}\n\nexport interface EmbeddedCheckoutErrorEvent {\n    type: EmbeddedCheckoutEventType.CheckoutError;\n    payload: EmbeddedCheckoutError;\n}\n\nexport interface EmbeddedCheckoutLoadedEvent {\n    type: EmbeddedCheckoutEventType.CheckoutLoaded;\n}\n\nexport interface EmbeddedCheckoutFrameErrorEvent {\n    type: EmbeddedCheckoutEventType.FrameError;\n    payload: EmbeddedCheckoutError;\n}\n\nexport interface EmbeddedCheckoutFrameLoadedEvent {\n    type: EmbeddedCheckoutEventType.FrameLoaded;\n    payload?: EmbeddedContentOptions;\n}\n\nexport interface EmbeddedCheckoutSignedOutEvent {\n    type: EmbeddedCheckoutEventType.SignedOut;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { VaultAccessToken } from './instrument';\nimport { InstrumentsResponseBody } from './instrument-response-body';\n\nexport enum InstrumentActionType {\n    LoadInstrumentsRequested = 'LOAD_INSTRUMENTS_REQUESTED',\n    LoadInstrumentsSucceeded = 'LOAD_INSTRUMENTS_SUCCEEDED',\n    LoadInstrumentsFailed = 'LOAD_INSTRUMENTS_FAILED',\n\n    DeleteInstrumentRequested = 'DELETE_INSTRUMENT_REQUESTED',\n    DeleteInstrumentSucceeded = 'DELETE_INSTRUMENT_SUCCEEDED',\n    DeleteInstrumentFailed = 'DELETE_INSTRUMENT_FAILED',\n}\n\nexport type InstrumentAction =\n    LoadInstrumentsAction |\n    DeleteInstrumentAction;\n\nexport type LoadInstrumentsAction =\n    LoadInstrumentsRequestedAction |\n    LoadInstrumentsSucceededAction |\n    LoadInstrumentsFailedAction;\n\nexport type DeleteInstrumentAction =\n    DeleteInstrumentRequestedAction |\n    DeleteInstrumentSucceededAction |\n    DeleteInstrumentFailedAction;\n\nexport interface LoadInstrumentsRequestedAction extends Action {\n    type: InstrumentActionType.LoadInstrumentsRequested;\n}\n\nexport interface LoadInstrumentsSucceededAction extends Action<InstrumentsResponseBody, VaultAccessToken> {\n    type: InstrumentActionType.LoadInstrumentsSucceeded;\n}\n\nexport interface LoadInstrumentsFailedAction extends Action<Error> {\n    type: InstrumentActionType.LoadInstrumentsFailed;\n}\n\nexport interface DeleteInstrumentRequestedAction extends Action {\n    type: InstrumentActionType.DeleteInstrumentRequested;\n}\n\nexport interface DeleteInstrumentSucceededAction extends Action<InstrumentsResponseBody, VaultAccessToken & { instrumentId: string }> {\n    type: InstrumentActionType.DeleteInstrumentSucceeded;\n}\n\nexport interface DeleteInstrumentFailedAction extends Action<Error> {\n    type: InstrumentActionType.DeleteInstrumentFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum GiftCertificateActionType {\n    ApplyGiftCertificateRequested = 'APPLY_GIFT_CERTIFICATE_REQUESTED',\n    ApplyGiftCertificateSucceeded = 'APPLY_GIFT_CERTIFICATE_SUCCEEDED',\n    ApplyGiftCertificateFailed = 'APPLY_GIFT_CERTIFICATE_FAILED',\n\n    RemoveGiftCertificateRequested = 'REMOVE_GIFT_CERTIFICATE_REQUESTED',\n    RemoveGiftCertificateSucceeded = 'REMOVE_GIFT_CERTIFICATE_SUCCEEDED',\n    RemoveGiftCertificateFailed = 'REMOVE_GIFT_CERTIFICATE_FAILED',\n}\n\nexport type GiftCertificateAction =\n    ApplyGiftCertificateAction |\n    RemoveGiftCertificateAction;\n\nexport type ApplyGiftCertificateAction =\n    ApplyGiftCertificateRequestedAction |\n    ApplyGiftCertificateSucceededAction |\n    ApplyGiftCertificateFailedAction;\n\nexport type RemoveGiftCertificateAction =\n    RemoveGiftCertificateRequestedAction |\n    RemoveGiftCertificateSucceededAction |\n    RemoveGiftCertificateFailedAction;\n\nexport interface ApplyGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.ApplyGiftCertificateRequested;\n}\n\nexport interface ApplyGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.ApplyGiftCertificateSucceeded;\n}\n\nexport interface ApplyGiftCertificateFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: GiftCertificateActionType.ApplyGiftCertificateFailed;\n}\n\nexport interface RemoveGiftCertificateRequestedAction extends Action {\n    type: GiftCertificateActionType.RemoveGiftCertificateRequested;\n}\n\nexport interface RemoveGiftCertificateSucceededAction extends Action<Checkout> {\n    type: GiftCertificateActionType.RemoveGiftCertificateSucceeded;\n}\n\nexport interface RemoveGiftCertificateFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: GiftCertificateActionType.RemoveGiftCertificateFailed;\n}\n","import { Checkout } from '../../../checkout';\nimport PaymentMethod from '../../payment-method';\nimport { BraintreeModuleCreator, GooglePayBraintreeSDK } from '../braintree';\n\nexport type EnvironmentType = 'PRODUCTION' | 'TEST';\nexport type TokenizeType = 'AndroidPayCard' | 'CreditCard' | 'CARD';\n\nexport interface GooglePayInitializer {\n    initialize(checkout: Checkout, paymentMethod: PaymentMethod, hasShippingAddress: boolean, publishableKey?: string): Promise<GooglePayPaymentDataRequestV2>;\n    teardown(): Promise<void>;\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload>;\n}\n\nexport interface GooglePayCreator extends BraintreeModuleCreator<GooglePayBraintreeSDK> {}\n\nexport interface GooglePayPaymentOptions {\n    environment: EnvironmentType;\n}\n\nexport interface GooglePayIsReadyToPayResponse {\n    result: boolean;\n    paymentMethodPresend?: boolean;\n}\n\nexport interface GooglePaySDK {\n    payments: {\n        api: {\n            PaymentsClient: new(options: GooglePayPaymentOptions) => GooglePayClient;\n        };\n    };\n}\n\nexport interface GooglePayClient {\n    isReadyToPay(options: object): Promise<GooglePayIsReadyToPayResponse>;\n    loadPaymentData(paymentDataRequest: GooglePayPaymentDataRequestV2): Promise<GooglePaymentData>;\n    createButton(options: { [key: string]: string | object }): HTMLElement;\n}\n\nexport interface GooglePayHostWindow extends Window {\n    google?: GooglePaySDK;\n}\n\nexport interface TokenizePayload {\n    nonce: string;\n    details: {\n        cardType: string;\n        lastFour: string;\n        lastTwo?: string;\n    };\n    description?: string;\n    type: TokenizeType;\n    binData?: {\n        commercial: string;\n        countryOfIssuance: string;\n        debit: string;\n        durbinRegulated: string;\n        healthcare: string;\n        issuingBank: string;\n        payroll: string;\n        prepaid: string;\n        productId: string;\n    };\n}\n\nexport interface GooglePaymentData {\n    apiVersion: number;\n    apiVersionMinor: number;\n    paymentMethodData: {\n        description: string;\n        info: {\n            cardDetails: string;\n            cardNetwork: string;\n            billingAddress: GooglePayAddress;\n        };\n        tokenizationData: {\n            token: string;\n            type: string;\n        };\n        type: string;\n    };\n    shippingAddress: GooglePayAddress;\n    email: string;\n}\n\nexport interface GooglePayAddress {\n    address1: string;\n    address2: string;\n    address3: string;\n    administrativeArea: string;\n    companyName: string;\n    countryCode: string;\n    locality: string;\n    name: string;\n    postalCode: string;\n    sortingCode: string;\n    phoneNumber: string;\n}\n\nexport interface GooglePaymentsError {\n    statusCode: string;\n    statusMessage?: string;\n}\n\nexport interface PaymentMethodData {\n    methodId: string;\n    paymentData: {\n        method: string;\n        nonce: string;\n        cardInformation: {\n            type: string;\n            number: string;\n        };\n    };\n}\n\nexport enum ButtonType {\n    Long = 'long',\n    Short = 'short',\n}\nexport enum ButtonColor {\n    Default = 'default',\n    Black = 'black',\n    White = 'white',\n}\n\nexport interface TokenizationSpecification {\n    type: string;\n    parameters: {\n        gateway: string;\n        gatewayMerchantId?: string;\n        'braintree:apiVersion'?: string;\n        'braintree:clientKey'?: string;\n        'braintree:merchantId'?: string;\n        'braintree:sdkVersion'?: string;\n        'braintree:authorizationFingerprint'?: string;\n        'stripe:version'?: string;\n        'stripe:publishableKey'?: string;\n    };\n}\n\nexport enum BillingAddressFormat {\n    /*\n     * Name, country code, and postal code (default).\n     */\n    Min = 'MIN',\n    /*\n     * Name, street address, locality, region, country code, and postal code.\n     */\n    Full = 'FULL',\n}\n\nexport interface GooglePayPaymentDataRequestV2 {\n    apiVersion: number;\n    apiVersionMinor: number;\n    merchantInfo: {\n        authJwt?: string;\n        merchantId?: string;\n        merchantName?: string;\n    };\n    allowedPaymentMethods: [{\n        type: string;\n        parameters: {\n            allowedAuthMethods: string[];\n            allowedCardNetworks: string[];\n            allowPrepaidCards?: boolean;\n            billingAddressRequired?: boolean;\n            billingAddressParameters?: {\n                format?: BillingAddressFormat;\n                phoneNumberRequired?: boolean;\n            };\n        };\n        tokenizationSpecification?: TokenizationSpecification;\n    }];\n    transactionInfo: {\n        currencyCode: string;\n        countryCode?: string;\n        totalPriceStatus: string;\n        totalPrice?: string;\n        checkoutOption?: string;\n    };\n    emailRequired?: boolean;\n    shippingAddressRequired?: boolean;\n    shippingAddressParameters?: {\n        allowedCountryCodes?: string[];\n        phoneNumberRequired?: boolean;\n    };\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { AmazonPayRemoteCheckout } from './methods';\n\nexport enum RemoteCheckoutActionType {\n    InitializeRemoteBillingRequested = 'INITIALIZE_REMOTE_BILLING_REQUESTED',\n    InitializeRemoteBillingSucceeded = 'INITIALIZE_REMOTE_BILLING_SUCCEEDED',\n    InitializeRemoteBillingFailed = 'INITIALIZE_REMOTE_BILLING_FAILED',\n\n    InitializeRemoteShippingRequested = 'INITIALIZE_REMOTE_SHIPPING_REQUESTED',\n    InitializeRemoteShippingSucceeded = 'INITIALIZE_REMOTE_SHIPPING_SUCCEEDED',\n    InitializeRemoteShippingFailed = 'INITIALIZE_REMOTE_SHIPPING_FAILED',\n\n    InitializeRemotePaymentRequested = 'INITIALIZE_REMOTE_PAYMENT_REQUESTED',\n    InitializeRemotePaymentSucceeded = 'INITIALIZE_REMOTE_PAYMENT_SUCCEEDED',\n    InitializeRemotePaymentFailed = 'INITIALIZE_REMOTE_PAYMENT_FAILED',\n\n    LoadRemoteSettingsRequested = 'LOAD_REMOTE_SETTINGS_REQUESTED',\n    LoadRemoteSettingsSucceeded = 'LOAD_REMOTE_SETTINGS_SUCCEEDED',\n    LoadRemoteSettingsFailed = 'LOAD_REMOTE_SETTINGS_FAILED',\n\n    SignOutRemoteCustomerRequested = 'SIGN_OUT_REMOTE_CUSTOMER_REQUESTED',\n    SignOutRemoteCustomerSucceeded = 'SIGN_OUT_REMOTE_CUSTOMER_SUCCEEDED',\n    SignOutRemoteCustomerFailed = 'SIGN_OUT_REMOTE_CUSTOMER_FAILED',\n\n    UpdateRemoteCheckout = 'UPDATE_REMOTE_CHECKOUT',\n}\n\nexport type RemoteCheckoutAction = InitializeRemoteBillingAction |\n    InitializeRemoteShippingAction |\n    InitializeRemotePaymentAction |\n    SignOutRemoteCustomerAction |\n    LoadRemoteSettingsAction |\n    UpdateRemoteCheckoutAction;\n\nexport type InitializeRemoteBillingAction = InitializeRemoteBillingSucceededAction |\n    InitializeRemoteBillingFailedAction |\n    InitializeRemoteBillingRequestedAction;\n\nexport interface InitializeRemoteBillingSucceededAction extends Action<AmazonPayRemoteCheckout> {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingSucceeded;\n}\n\nexport interface InitializeRemoteBillingFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingFailed;\n}\n\nexport interface InitializeRemoteBillingRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteBillingRequested;\n}\n\nexport type InitializeRemoteShippingAction = InitializeRemoteShippingSucceededAction |\n    InitializeRemoteShippingFailedAction |\n    InitializeRemoteShippingRequestedAction;\n\nexport interface InitializeRemoteShippingSucceededAction extends Action<AmazonPayRemoteCheckout> {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingSucceeded;\n}\n\nexport interface InitializeRemoteShippingFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingFailed;\n}\n\nexport interface InitializeRemoteShippingRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemoteShippingRequested;\n}\n\nexport type InitializeRemotePaymentAction = InitializeRemotePaymentSucceededAction |\n    InitializeRemotePaymentFailedAction |\n    InitializeRemotePaymentRequestedAction;\n\nexport interface InitializeRemotePaymentSucceededAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentSucceeded;\n}\n\nexport interface InitializeRemotePaymentFailedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentFailed;\n}\n\nexport interface InitializeRemotePaymentRequestedAction extends Action {\n    type: RemoteCheckoutActionType.InitializeRemotePaymentRequested;\n}\n\nexport type SignOutRemoteCustomerAction = SignOutRemoteCustomerSucceededAction |\n    SignOutRemoteCustomerFailedAction |\n    SignOutRemoteCustomerRequestedAction;\n\nexport interface SignOutRemoteCustomerSucceededAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerSucceeded;\n}\n\nexport interface SignOutRemoteCustomerFailedAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerFailed;\n}\n\nexport interface SignOutRemoteCustomerRequestedAction extends Action {\n    type: RemoteCheckoutActionType.SignOutRemoteCustomerRequested;\n}\n\nexport type LoadRemoteSettingsAction = LoadRemoteSettingsSucceededAction |\n    LoadRemoteSettingsRequestedAction |\n    LoadRemoteSettingsFailedAction;\n\nexport interface LoadRemoteSettingsSucceededAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsSucceeded;\n}\n\nexport interface LoadRemoteSettingsRequestedAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsRequested;\n}\n\nexport interface LoadRemoteSettingsFailedAction extends Action {\n    type: RemoteCheckoutActionType.LoadRemoteSettingsFailed;\n}\n\nexport interface UpdateRemoteCheckoutAction extends Action {\n    type: RemoteCheckoutActionType.UpdateRemoteCheckout;\n}\n","module.exports = require(\"@bigcommerce/script-loader\");","enum ContentType {\n    Json = 'application/json',\n    JsonV1 = 'application/vnd.bc.v1+json',\n}\n\nexport default ContentType;\n","export const ACKNOWLEDGE = 'ACKNOWLEDGE';\nexport const FINALIZE = 'FINALIZE';\nexport const INITIALIZE = 'INITIALIZE';\n","module.exports = require(\"card-validator\");","import { Response } from '@bigcommerce/request-sender';\n\nimport StandardError from './standard-error';\n\nconst DEFAULT_RESPONSE = {\n    body: {},\n    headers: {},\n    status: 0,\n};\n\n/**\n * Throw this error if we are unable to make a request to the server. It wraps\n * any server response into a JS error object.\n */\nexport default class RequestError<TBody = any> extends StandardError {\n    body: TBody | {};\n    headers: { [key: string]: any };\n    errors: Array<{ code: string; message?: string }>;\n    status: number;\n\n    constructor(\n        response?: Response<TBody | {}>,\n        { message, errors }: {\n            message?: string;\n            errors?: Array<{ code: string; message?: string }>;\n        } = {}\n    ) {\n        const { body, headers, status } = response || DEFAULT_RESPONSE;\n\n        super(message || 'An unexpected error has occurred.');\n\n        this.name = 'RequestError';\n        this.type = 'request';\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.errors = errors || [];\n    }\n}\n","import { FormattedPayload, FormattedVaultedInstrument, HostedVaultedInstrument, PaymentInstrument, VaultedInstrument } from './payment';\n\nexport default function isVaultedInstrument(instrument: PaymentInstrument): instrument is VaultedInstrument {\n    return Boolean((instrument as VaultedInstrument).instrumentId);\n}\n\nexport function isHostedVaultedInstrument(instrument: PaymentInstrument): instrument is HostedVaultedInstrument {\n    return (\n        Boolean((instrument as HostedVaultedInstrument).instrumentId) &&\n        !instrument.hasOwnProperty('ccNumber') &&\n        !instrument.hasOwnProperty('ccCvv')\n    );\n}\n\nexport function isFormattedVaultedInstrument(instrument: PaymentInstrument): instrument is FormattedPayload<FormattedVaultedInstrument> {\n    const formattedInstrument = (instrument as FormattedPayload<FormattedVaultedInstrument>).formattedPayload;\n\n    if (!formattedInstrument) {\n        return false;\n    }\n\n    return typeof formattedInstrument.bigpay_token === 'string' ||\n        Boolean(formattedInstrument.bigpay_token && formattedInstrument.bigpay_token.token);\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport Config from './config';\n\nexport enum ConfigActionType {\n    LoadConfigRequested = 'LOAD_CONFIG_REQUESTED',\n    LoadConfigSucceeded = 'LOAD_CONFIG_SUCCEEDED',\n    LoadConfigFailed = 'LOAD_CONFIG_FAILED',\n}\n\nexport type LoadConfigAction =\n    LoadConfigRequestedAction |\n    LoadConfigSucceededAction |\n    LoadConfigFailedAction;\n\nexport interface LoadConfigRequestedAction extends Action {\n    type: ConfigActionType.LoadConfigRequested;\n}\n\nexport interface LoadConfigSucceededAction extends Action<Config> {\n    type: ConfigActionType.LoadConfigSucceeded;\n}\n\nexport interface LoadConfigFailedAction extends Action<Error> {\n    type: ConfigActionType.LoadConfigFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { FormFields } from './form-field';\n\nexport enum FormFieldsActionType {\n    LoadFormFieldsRequested = 'LOAD_FORM_FIELDS_REQUESTED',\n    LoadFormFieldsSucceeded = 'LOAD_FORM_FIELDS_SUCCEEDED',\n    LoadFormFieldsFailed = 'LOAD_FORM_FIELDS_FAILED',\n}\n\nexport type LoadFormFieldsAction =\n    LoadFormFieldsRequestedAction |\n    LoadFormFieldsSucceededAction |\n    LoadFormFieldsFailedAction;\n\nexport interface LoadFormFieldsRequestedAction extends Action {\n    type: FormFieldsActionType.LoadFormFieldsRequested;\n}\n\nexport interface LoadFormFieldsSucceededAction extends Action<FormFields> {\n    type: FormFieldsActionType.LoadFormFieldsSucceeded;\n}\n\nexport interface LoadFormFieldsFailedAction extends Action<Error> {\n    type: FormFieldsActionType.LoadFormFieldsFailed;\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the client library of a payment method fails\n * to load, or for some reason, it is inaccessible.\n */\nexport default class PaymentMethodClientUnavailableError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed because the client library of a payment method is not loaded or ready to be used.');\n\n        this.name = 'PaymentMethodClientUnavailableError';\n        this.type = 'payment_method_client_unavailable';\n    }\n}\n","import { isPlainObject as lodashIsPlainObject } from 'lodash';\n\n// We need this wrapper because Lodash's version doesn't act as a type guard\nexport default function isPlainObject(value: any): value is object {\n    return lodashIsPlainObject(value);\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport Country from './country';\n\nexport enum CountryActionType {\n    LoadCountriesRequested = 'LOAD_COUNTRIES_REQUESTED',\n    LoadCountriesSucceeded = 'LOAD_COUNTRIES_SUCCEEDED',\n    LoadCountriesFailed = 'LOAD_COUNTRIES_FAILED',\n}\n\nexport type LoadCountriesAction =\n    LoadCountriesRequestedAction |\n    LoadCountriesSucceededAction |\n    LoadCountriesFailedAction;\n\nexport interface LoadCountriesRequestedAction extends Action {\n    type: CountryActionType.LoadCountriesRequested;\n}\n\nexport interface LoadCountriesSucceededAction extends Action<Country[]> {\n    type: CountryActionType.LoadCountriesSucceeded;\n}\n\nexport interface LoadCountriesFailedAction extends Action<Error> {\n    type: CountryActionType.LoadCountriesFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Country } from '../geography';\n\nexport enum ShippingCountryActionType {\n    LoadShippingCountriesRequested = 'LOAD_SHIPPING_COUNTRIES_REQUESTED',\n    LoadShippingCountriesSucceeded = 'LOAD_SHIPPING_COUNTRIES_SUCCEEDED',\n    LoadShippingCountriesFailed = 'LOAD_SHIPPING_COUNTRIES_FAILED',\n}\n\nexport type LoadShippingCountriesAction = LoadShippingCountriesRequestedAction |\n    LoadShippingCountriesSucceededAction |\n    LoadShippingCountriesFailedAction;\n\nexport interface LoadShippingCountriesRequestedAction extends Action {\n    type: ShippingCountryActionType.LoadShippingCountriesRequested;\n}\n\nexport interface LoadShippingCountriesSucceededAction extends Action<Country[]> {\n    type: ShippingCountryActionType.LoadShippingCountriesSucceeded;\n}\n\nexport interface LoadShippingCountriesFailedAction extends Action<Error> {\n    type: ShippingCountryActionType.LoadShippingCountriesFailed;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { SignInEmail } from './signin-email';\n\nexport enum SignInEmailActionType {\n    SendSignInEmailRequested = 'SEND_SIGNIN_EMAIL_REQUESTED',\n    SendSignInEmailSucceeded = 'SEND_SIGNIN_EMAIL_SUCCEEDED',\n    SendSignInEmailFailed = 'SEND_SIGNIN_EMAIL_FAILED',\n}\nexport type SendSignInEmailAction =\n    SendSignInEmailRequestedAction |\n    SendSignInEmailSucceededAction |\n    SendSignInEmailFailedAction;\n\nexport interface SendSignInEmailRequestedAction extends Action {\n    type: SignInEmailActionType.SendSignInEmailRequested;\n}\n\nexport interface SendSignInEmailSucceededAction extends Action<SignInEmail> {\n    type: SignInEmailActionType.SendSignInEmailSucceeded;\n}\n\nexport interface SendSignInEmailFailedAction extends Action<Error> {\n    type: SignInEmailActionType.SendSignInEmailFailed;\n}\n","module.exports = require(\"@bigcommerce/request-sender\");","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport enum StoreCreditActionType {\n    ApplyStoreCreditRequested = 'APPLY_STORE_CREDIT_REQUESTED',\n    ApplyStoreCreditSucceeded = 'APPLY_STORE_CREDIT_SUCCEEDED',\n    ApplyStoreCreditFailed = 'APPLY_STORE_CREDIT_FAILED',\n}\n\nexport type StoreCreditAction =\n    ApplyStoreCreditAction;\n\nexport type ApplyStoreCreditAction =\n    ApplyStoreCreditRequestedAction |\n    ApplyStoreCreditSucceededAction |\n    ApplyStoreCreditFailedAction;\n\nexport interface ApplyStoreCreditRequestedAction extends Action {\n    type: StoreCreditActionType.ApplyStoreCreditRequested;\n}\n\nexport interface ApplyStoreCreditSucceededAction extends Action<Checkout> {\n    type: StoreCreditActionType.ApplyStoreCreditSucceeded;\n}\n\nexport interface ApplyStoreCreditFailedAction extends Action<RequestError<StorefrontErrorResponseBody>> {\n    type: StoreCreditActionType.ApplyStoreCreditFailed;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorData, PaymentErrorResponseBody } from '../../common/error';\nimport HostedFieldType from '../hosted-field-type';\n\nimport HostedInputInitializeErrorData from './hosted-input-initialize-error-data';\nimport HostedInputValidateResults from './hosted-input-validate-results';\n\n// Event types\nexport enum HostedInputEventType {\n    AttachSucceeded = 'HOSTED_INPUT:ATTACH_SUCCEEDED',\n    AttachFailed = 'HOSTED_INPUT:ATTACH_FAILED',\n    BinChanged = 'HOSTED_INPUT:BIN_CHANGED',\n    Blurred = 'HOSTED_INPUT:BLURRED',\n    Changed = 'HOSTED_INPUT:CHANGED',\n    CardTypeChanged = 'HOSTED_INPUT:CARD_TYPE_CHANGED',\n    Entered = 'HOSTED_INPUT:ENTERED',\n    Focused = 'HOSTED_INPUT:FOCUSED',\n    SubmitSucceeded = 'HOSTED_INPUT:SUBMIT_SUCCEEDED',\n    SubmitFailed = 'HOSTED_INPUT:SUBMIT_FAILED',\n    Validated = 'HOSTED_INPUT:VALIDATED',\n}\n\n// Event mapping\nexport interface HostedInputEventMap {\n    [HostedInputEventType.AttachSucceeded]: HostedInputAttachSuccessEvent;\n    [HostedInputEventType.AttachFailed]: HostedInputAttachErrorEvent;\n    [HostedInputEventType.BinChanged]: HostedInputBinChangeEvent;\n    [HostedInputEventType.Blurred]: HostedInputBlurEvent;\n    [HostedInputEventType.Changed]: HostedInputChangeEvent;\n    [HostedInputEventType.CardTypeChanged]: HostedInputCardTypeChangeEvent;\n    [HostedInputEventType.Entered]: HostedInputEnterEvent;\n    [HostedInputEventType.Focused]: HostedInputFocusEvent;\n    [HostedInputEventType.SubmitSucceeded]: HostedInputSubmitSuccessEvent;\n    [HostedInputEventType.SubmitFailed]: HostedInputSubmitErrorEvent;\n    [HostedInputEventType.Validated]: HostedInputValidateEvent;\n}\n\n// Events\nexport type HostedInputEvent = (\n    HostedInputAttachSuccessEvent |\n    HostedInputAttachErrorEvent |\n    HostedInputBinChangeEvent |\n    HostedInputBlurEvent |\n    HostedInputChangeEvent |\n    HostedInputCardTypeChangeEvent |\n    HostedInputEnterEvent |\n    HostedInputFocusEvent |\n    HostedInputSubmitSuccessEvent |\n    HostedInputSubmitErrorEvent |\n    HostedInputValidateEvent\n);\n\nexport interface HostedInputAttachSuccessEvent {\n    type: HostedInputEventType.AttachSucceeded;\n}\n\nexport interface HostedInputAttachErrorEvent {\n    type: HostedInputEventType.AttachFailed;\n    payload: {\n        error: HostedInputInitializeErrorData;\n    };\n}\n\nexport interface HostedInputBinChangeEvent {\n    type: HostedInputEventType.BinChanged;\n    payload: {\n        bin?: string;\n    };\n}\n\nexport interface HostedInputBlurEvent {\n    type: HostedInputEventType.Blurred;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputChangeEvent {\n    type: HostedInputEventType.Changed;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputCardTypeChangeEvent {\n    type: HostedInputEventType.CardTypeChanged;\n    payload: {\n        cardType?: string;\n    };\n}\n\nexport interface HostedInputFocusEvent {\n    type: HostedInputEventType.Focused;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputEnterEvent {\n    type: HostedInputEventType.Entered;\n    payload: {\n        fieldType: HostedFieldType;\n    };\n}\n\nexport interface HostedInputSubmitSuccessEvent {\n    type: HostedInputEventType.SubmitSucceeded;\n}\n\nexport interface HostedInputSubmitErrorEvent {\n    type: HostedInputEventType.SubmitFailed;\n    payload: {\n        error: PaymentErrorData;\n        response?: Response<PaymentErrorResponseBody>;\n    };\n}\n\nexport interface HostedInputValidateEvent {\n    type: HostedInputEventType.Validated;\n    payload: HostedInputValidateResults;\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nimport Url from './url';\n\nexport default function parseUrl(url: string): Url {\n    if (!/^(https?:)?\\/\\//.test(url)) {\n        throw new InvalidArgumentError('The provided URL must be absolute.');\n    }\n\n    // new URL() is not supported in IE11, use anchor tag instead\n    const anchor = document.createElement('a');\n\n    anchor.href = url;\n\n    // IE11 returns 80 or 443 for the port number depending on the URL scheme,\n    // even if the port number is not specified in the URL.\n    const port = anchor.port && url.indexOf(`${anchor.hostname}:${anchor.port}`) !== -1 ?\n        anchor.port :\n        '';\n\n    return {\n        hash: anchor.hash,\n        hostname: anchor.hostname,\n        href: anchor.href,\n        origin: `${anchor.protocol}//${anchor.hostname}${port ? ':' + port : ''}`,\n        pathname: anchor.pathname,\n        port,\n        protocol: anchor.protocol,\n        search: anchor.search,\n    };\n}\n","import StandardError from './standard-error';\n\n/**\n * This error should be thrown when a method is unable to proceed because the\n * caller has not provided all the arguments according to their requirements,\n * i.e.: if an argument is missing or it is not the expected data type.\n */\nexport default class InvalidArgumentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Invalid arguments have been provided.');\n\n        this.name = 'InvalidArgumentError';\n        this.type = 'invalid_argument';\n    }\n}\n","import IframeEvent from './iframe-event';\n\nexport default function isIframeEvent<TEvent extends IframeEvent<TType>, TType extends string>(\n    object: any,\n    type: TType\n): object is TEvent {\n    return object.type === type;\n}\n","export const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","import { isBillingAddressLike, BillingAddress } from '../billing';\nimport { Consignment } from '../shipping';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalAddress(\n    address: Address | BillingAddress,\n    consignments?: Consignment[]\n): InternalAddress<any> {\n    let addressId;\n\n    if (isBillingAddressLike(address)) {\n        addressId = address.id;\n    } else if (consignments && consignments.length) {\n        addressId = consignments[0].id;\n    }\n\n    return {\n        id: addressId,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        addressLine1: address.address1,\n        addressLine2: address.address2,\n        city: address.city,\n        province: address.stateOrProvince,\n        provinceCode: address.stateOrProvinceCode,\n        postCode: address.postalCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","export const INTERNAL_USE_ONLY = 'This API endpoint is for internal use only and may change in the future';\n","import { Action } from '@bigcommerce/data-store';\n\nimport { LoadOrderAction } from '../order';\n\nimport PaymentResponseBody from './payment-response-body';\n\nexport enum PaymentActionType {\n    SubmitPaymentRequested = 'SUBMIT_PAYMENT_REQUESTED',\n    SubmitPaymentSucceeded = 'SUBMIT_PAYMENT_SUCCEEDED',\n    SubmitPaymentFailed = 'SUBMIT_PAYMENT_FAILED',\n\n    InitializeOffsitePaymentRequested = 'INITIALIZE_OFFSITE_PAYMENT_REQUESTED',\n    InitializeOffsitePaymentSucceeded = 'INITIALIZE_OFFSITE_PAYMENT_SUCCEEDED',\n    InitializeOffsitePaymentFailed = 'INITIALIZE_OFFSITE_PAYMENT_FAILED',\n}\n\nexport type PaymentAction = SubmitPaymentAction |\n    InitializeOffsitePaymentAction;\n\nexport type SubmitPaymentAction =\n    SubmitPaymentRequestedAction |\n    SubmitPaymentSucceededAction |\n    SubmitPaymentFailedAction |\n    LoadOrderAction;\n\nexport type InitializeOffsitePaymentAction =\n    InitializeOffsitePaymentRequestedAction |\n    InitializeOffsitePaymentSucceededAction |\n    InitializeOffsitePaymentFailedAction;\n\nexport interface SubmitPaymentRequestedAction extends Action {\n    type: PaymentActionType.SubmitPaymentRequested;\n}\n\nexport interface SubmitPaymentSucceededAction extends Action<PaymentResponseBody> {\n    type: PaymentActionType.SubmitPaymentSucceeded;\n}\n\nexport interface SubmitPaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.SubmitPaymentFailed;\n}\n\nexport interface InitializeOffsitePaymentRequestedAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentRequested;\n}\n\nexport interface InitializeOffsitePaymentSucceededAction extends Action {\n    type: PaymentActionType.InitializeOffsitePaymentSucceeded;\n}\n\nexport interface InitializeOffsitePaymentFailedAction extends Action<Error> {\n    type: PaymentActionType.InitializeOffsitePaymentFailed;\n}\n","import { uniq } from 'lodash';\n\nexport default function joinIncludes<T>(includes: T[]): string {\n    return uniq(includes).join(',');\n}\n","import InternalLineItem from './internal-line-item';\nimport { LineItem } from './line-item';\nimport LineItemMap from './line-item-map';\nimport mapGiftCertificateToInternalLineItem from './map-gift-certificate-to-internal-line-item';\nimport mapToInternalLineItem from './map-to-internal-line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItems(\n    itemMap: LineItemMap,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem[] {\n    return (Object.keys(itemMap) as Array<keyof LineItemMap>)\n        .reduce((result, key) => [\n            ...result,\n            ...(itemMap[key] as LineItem[]).map((item: any) => {\n                if (key === 'giftCertificates') {\n                    return mapGiftCertificateToInternalLineItem(item, decimalPlaces);\n                }\n\n                return mapToInternalLineItem(\n                    item,\n                    mapToInternalLineItemType(key),\n                    decimalPlaces,\n                    idKey\n                );\n            }),\n        ], [] as InternalLineItem[]);\n}\n\nfunction mapToInternalLineItemType(type: string): string {\n    switch (type) {\n        case 'physicalItems':\n            return 'ItemPhysicalEntity';\n\n        case 'digitalItems':\n            return 'ItemDigitalEntity';\n\n        case 'giftCertificates':\n            return 'ItemGiftCertificateEntity';\n\n        default:\n            return '';\n    }\n}\n","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { GiftCertificateItem } from './line-item';\n\nexport default function mapGiftCertificateToInternalLineItem(\n    item: GiftCertificateItem,\n    decimalPlaces: number\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: item.id,\n        imageUrl: '',\n        name: item.name,\n        amount: item.amount,\n        amountAfterDiscount: item.amount,\n        discount: 0,\n        integerAmount: amountTransformer.toInteger(item.amount),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerUnitPrice: amountTransformer.toInteger(item.amount),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.amount),\n        integerDiscount: 0,\n        quantity: 1,\n        sender: item.sender,\n        recipient: item.recipient,\n        type: 'ItemGiftCertificateEntity',\n        attributes: [],\n        variantId: null,\n    };\n}\n","module.exports = require(\"local-storage-fallback\");","import { Action } from '@bigcommerce/data-store';\n\nimport { Checkout } from '../checkout';\n\nexport enum SpamProtectionActionType {\n    InitializeFailed = 'SPAM_PROTECTION_INITIALIZE_FAILED',\n    InitializeSucceeded = 'SPAM_PROTECTION_INITIALIZE_SUCCEEDED',\n    InitializeRequested = 'SPAM_PROTECTION_INITIALIZE_REQUESTED',\n    VerifyCheckoutRequested = 'SPAM_PROTECTION_CHECKOUT_VERIFY_REQUESTED',\n    VerifyCheckoutSucceeded = 'SPAM_PROTECTION_CHECKOUT_VERIFY_SUCCEEDED',\n    VerifyCheckoutFailed = 'SPAM_PROTECTION_CHECKOUT_VERIFY_FAILED',\n    ExecuteRequested = 'SPAM_PROTECTION_EXECUTE_REQUESTED',\n    ExecuteSucceeded = 'SPAM_PROTECTION_EXECUTE_SUCCEEDED',\n    ExecuteFailed = 'SPAM_PROTECTION_EXECUTE_FAILED',\n}\n\nexport type SpamProtectionAction =\n    InitializeRequestedAction |\n    InitializeSucceededAction |\n    InitializeFailedAction |\n    ExecuteRequestedAction |\n    ExecuteSucceededAction |\n    ExecuteFailedAction |\n    CheckoutVerifyRequestedAction |\n    CheckoutVerifyFailedAction |\n    CheckoutVerifySucceededAction;\n\nexport interface InitializeRequestedAction extends Action {\n    type: SpamProtectionActionType.InitializeRequested;\n}\n\nexport interface InitializeSucceededAction extends Action {\n    type: SpamProtectionActionType.InitializeSucceeded;\n}\n\nexport interface InitializeFailedAction extends Action<Error> {\n    type: SpamProtectionActionType.InitializeFailed;\n}\n\nexport interface ExecuteRequestedAction extends Action {\n    type: SpamProtectionActionType.ExecuteRequested;\n}\n\nexport interface ExecuteSucceededAction extends Action<{ token: string }> {\n    type: SpamProtectionActionType.ExecuteSucceeded;\n}\n\nexport interface ExecuteFailedAction extends Action {\n    type: SpamProtectionActionType.ExecuteFailed;\n}\n\nexport interface CheckoutVerifyRequestedAction extends Action {\n    type: SpamProtectionActionType.VerifyCheckoutRequested;\n}\n\nexport interface CheckoutVerifyFailedAction extends Action<Error> {\n    type: SpamProtectionActionType.VerifyCheckoutFailed;\n}\n\nexport interface CheckoutVerifySucceededAction extends Action<Checkout> {\n    type: SpamProtectionActionType.VerifyCheckoutSucceeded;\n}\n","module.exports = require(\"shallowequal\");","import { CardInstrument } from '../payment/instrument';\n\nimport HostedFieldType from './hosted-field-type';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport enum HostedFieldEventType {\n    AttachRequested = 'HOSTED_FIELD:ATTACH_REQUESTED',\n    SubmitRequested = 'HOSTED_FIELD:SUBMITTED_REQUESTED',\n    ValidateRequested = 'HOSTED_FIELD:VALIDATE_REQUESTED',\n}\n\nexport interface HostedFieldEventMap {\n    [HostedFieldEventType.AttachRequested]: HostedFieldAttachEvent;\n    [HostedFieldEventType.SubmitRequested]: HostedFieldSubmitRequestEvent;\n    [HostedFieldEventType.ValidateRequested]: HostedFieldValidateRequestEvent;\n}\n\nexport type HostedFieldEvent = (\n    HostedFieldAttachEvent |\n    HostedFieldSubmitRequestEvent |\n    HostedFieldValidateRequestEvent\n);\n\nexport interface HostedFieldAttachEvent {\n    type: HostedFieldEventType.AttachRequested;\n    payload: {\n        accessibilityLabel?: string;\n        cardInstrument?: CardInstrument;\n        fontUrls?: string[];\n        placeholder?: string;\n        styles?: HostedFieldStylesMap;\n        origin?: string;\n        type: HostedFieldType;\n    };\n}\n\nexport interface HostedFieldSubmitRequestEvent {\n    type: HostedFieldEventType.SubmitRequested;\n    payload: {\n        data: HostedFormOrderData;\n        fields: HostedFieldType[];\n    };\n}\n\nexport interface HostedFieldValidateRequestEvent {\n    type: HostedFieldEventType.ValidateRequested;\n}\n","export interface CompareOptions {\n    keyFilter?(key: string): boolean;\n}\n\nexport default function isEqual(objectA: any, objectB: any, options?: CompareOptions): boolean {\n    if (objectA === objectB) {\n        return true;\n    }\n\n    if (objectA && objectB && typeof objectA === 'object' && typeof objectB === 'object') {\n        if (Array.isArray(objectA) && Array.isArray(objectB)) {\n            return isArrayEqual(objectA, objectB, options);\n        }\n\n        if (Array.isArray(objectA) || Array.isArray(objectB)) {\n            return false;\n        }\n\n        if ((objectA instanceof Date) && (objectB instanceof Date)) {\n            return isDateEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof Date) || (objectB instanceof Date)) {\n            return false;\n        }\n\n        if ((objectA instanceof RegExp) && (objectB instanceof RegExp)) {\n            return isRegExpEqual(objectA, objectB);\n        }\n\n        if ((objectA instanceof RegExp) || (objectB instanceof RegExp)) {\n            return false;\n        }\n\n        return isObjectEqual(objectA, objectB, options);\n    }\n\n    return objectA === objectB;\n}\n\nfunction isRegExpEqual(objectA: RegExp, objectB: RegExp): boolean {\n    return objectA.toString() === objectB.toString();\n}\n\nfunction isDateEqual(objectA: Date, objectB: Date): boolean {\n    return objectA.getTime() === objectB.getTime();\n}\n\nfunction isArrayEqual(objectA: any[], objectB: any[], options?: CompareOptions): boolean {\n    if (objectA.length !== objectB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = objectA.length; index < length; index++) {\n        if (!isEqual(objectA[index], objectB[index], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isObjectEqual(\n    objectA: { [key: string]: any },\n    objectB: { [key: string]: any },\n    options?: CompareOptions\n): boolean {\n    const filter = options && options.keyFilter;\n    const keysA = filter ? Object.keys(objectA).filter(filter) : Object.keys(objectA);\n    const keysB = filter ? Object.keys(objectB).filter(filter) : Object.keys(objectB);\n\n    if (keysA.length !== keysB.length) {\n        return false;\n    }\n\n    for (let index = 0, length = keysA.length; index < length; index++) {\n        const key = keysA[index];\n\n        if (!objectB.hasOwnProperty(key)) {\n            return false;\n        }\n\n        if (!isEqual(objectA[key], objectB[key], options)) {\n            return false;\n        }\n    }\n\n    return true;\n}\n","module.exports = require(\"@bigcommerce/form-poster\");","import { AmountTransformer } from '../common/utility';\n\nimport InternalLineItem from './internal-line-item';\nimport { DigitalItem, LineItem } from './line-item';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalLineItem(\n    item: LineItem,\n    type: string,\n    decimalPlaces: number,\n    idKey: keyof LineItem = 'id'\n): InternalLineItem {\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: (item[idKey] as string | number),\n        imageUrl: item.imageUrl,\n        amount: item.extendedListPrice,\n        amountAfterDiscount: item.extendedSalePrice,\n        discount: item.discountAmount,\n        integerAmount: amountTransformer.toInteger(item.extendedListPrice),\n        integerAmountAfterDiscount: amountTransformer.toInteger(item.extendedSalePrice),\n        integerDiscount: amountTransformer.toInteger(item.discountAmount),\n        integerUnitPrice: amountTransformer.toInteger(item.listPrice),\n        integerUnitPriceAfterDiscount: amountTransformer.toInteger(item.salePrice),\n        downloadsPageUrl: (item as DigitalItem).downloadPageUrl,\n        name: item.name,\n        quantity: item.quantity,\n        brand: item.brand,\n        sku: item.sku,\n        categoryNames: item.categoryNames,\n        variantId: item.variantId,\n        productId: item.productId,\n        attributes: (item.options || []).map(option => ({\n            name: option.name,\n            value: option.value,\n        })),\n        addedByPromotion: item.addedByPromotion,\n        type,\n    };\n}\n","module.exports = require(\"reselect\");","import InternalShippingOption from './internal-shipping-option';\nimport ShippingOption from './shipping-option';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalShippingOption(option: ShippingOption, isSelected: boolean): InternalShippingOption {\n    return {\n        description: option.description,\n        module: option.type,\n        price: option.cost,\n        id: option.id,\n        selected: isSelected,\n        isRecommended: option.isRecommended,\n        imageUrl: option.imageUrl,\n        transitTime: option.transitTime,\n    };\n}\n","export default class AmountTransformer {\n    constructor(private _decimalPlaces: number) {}\n\n    toInteger(amount: number): number {\n        return Math.round(amount * Math.pow(10, this._decimalPlaces));\n    }\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { createSelector as defaultSelectorCreator } from 'reselect';\n\n/**\n * Decorate selector creators with the ability to memoize the return value of\n * their combiner if it is a function (which effectively works as a partially\n * applied combiner).\n */\nexport default function withMemoizedCombiner<T extends typeof defaultSelectorCreator>(\n    creator: T\n): T {\n    return ((...args: any[]) => {\n        const combiner = args.pop();\n\n        // Reselect's default `createSelector` has many overloads. To avoid having\n        // to redefine all of them, we're using `any` to bypass the typechecker.\n        return (creator as any)(...args, (...combinerArgs: any[]) => {\n            // Although there are many overloads, all of them have the last argument\n            // as the combiner.\n            const result = combiner(...combinerArgs);\n\n            if (typeof result === 'function') {\n                return memoize(result);\n            }\n\n            return result;\n        });\n    }) as T;\n}\n","import { Action } from '@bigcommerce/data-store';\n\nexport enum ErrorActionType {\n    ClearError = 'CLEAR_ERROR',\n}\n\nexport type ErrorAction = ClearErrorAction;\n\nexport interface ClearErrorAction extends Action {\n    type: ErrorActionType.ClearError;\n    payload: Error;\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { cachableAction, ActionOptions } from '../common/data-store';\nimport { RequestOptions } from '../common/http-request';\n\nimport { LoadPaymentMethodsAction, LoadPaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodRequestSender from './payment-method-request-sender';\n\nexport default class PaymentMethodActionCreator {\n    constructor(\n        private _requestSender: PaymentMethodRequestSender\n    ) {}\n\n    loadPaymentMethods(options?: RequestOptions): Observable<LoadPaymentMethodsAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodsAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsRequested));\n\n            this._requestSender.loadPaymentMethods(options)\n                .then(response => {\n                    const meta = {\n                        deviceSessionId: response.headers['x-device-session-id'],\n                        sessionHash: response.headers['x-session-hash'],\n                    };\n\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodsSucceeded, response.body, meta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodsFailed, response));\n                });\n        });\n    }\n\n    @cachableAction\n    loadPaymentMethod(methodId: string, options?: RequestOptions & ActionOptions): Observable<LoadPaymentMethodAction> {\n        return Observable.create((observer: Observer<LoadPaymentMethodAction>) => {\n            observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodRequested, undefined, { methodId }));\n\n            this._requestSender.loadPaymentMethod(methodId, options)\n                .then(response => {\n                    observer.next(createAction(PaymentMethodActionType.LoadPaymentMethodSucceeded, response.body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(PaymentMethodActionType.LoadPaymentMethodFailed, response, { methodId }));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport PaymentMethod from './payment-method';\n\nexport default class PaymentMethodRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadPaymentMethods({ timeout }: RequestOptions = {}): Promise<Response<PaymentMethod[]>> {\n        const url = '/api/storefront/payments';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n\n    loadPaymentMethod(methodId: string, { timeout }: RequestOptions = {}): Promise<Response<PaymentMethod>> {\n        const url = `/api/storefront/payments/${methodId}`;\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","const CHECKOUT_DEFAULT_INCLUDES = [\n    'cart.lineItems.physicalItems.options',\n    'cart.lineItems.digitalItems.options',\n    'customer',\n    'customer.customerGroup',\n    'payments',\n    'promotions.banners',\n];\n\nexport default CHECKOUT_DEFAULT_INCLUDES;\n","import { createErrorAction, Action } from '@bigcommerce/data-store';\nimport { concat, of, throwError, Observable } from 'rxjs';\n\nexport default function throwErrorAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    error?: TPayload,\n    meta?: TMeta\n): Observable<Action<TPayload, TMeta, TType>> {\n    if (isErrorAction(error)) {\n        return concat(of(error), throwError(createErrorAction(type, error.payload, meta)));\n    }\n\n    return throwError(createErrorAction(type, error, meta));\n}\n\nfunction isErrorAction(action: any): action is Action {\n    return action && action.type && action.error;\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when a payment method experiences some kind of\n * failure (i.e.: its client library returns a rejected promise). And there is\n * no other error type that is more specific than this one.\n */\nexport default class PaymentMethodFailedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed because the client library of a payment method has thrown an unexpected error.');\n\n        this.name = 'PaymentMethodFailedError';\n        this.type = 'payment_method_client_invalid';\n    }\n}\n","import { Action, ThunkAction } from '@bigcommerce/data-store';\nimport { memoize } from '@bigcommerce/memoize';\nimport { from, Observable } from 'rxjs';\nimport { shareReplay } from 'rxjs/operators';\n\nexport default function cacheAction<TFunction extends CreateActionFn>(\n    fn: TFunction\n): TFunction {\n    function decoratedFn(this: any, ...args: any[]) {\n        const action = fn.call(this, ...args);\n\n        if (action instanceof Observable) {\n            return from(action).pipe(shareReplay());\n        }\n\n        if (typeof action === 'function') {\n            return memoize(store => from(action(store)).pipe(shareReplay()));\n        }\n\n        return action;\n    }\n\n    return memoize(decoratedFn as TFunction);\n}\n\ntype CreateActionFn = (...args: any[]) => Observable<Action> | ThunkAction<Action> | Action;\n","import ActionOptions from './action-options';\n\nexport default function isActionOptions(param: any): param is ActionOptions {\n    return param && typeof param.useCache === 'boolean';\n}\n","import cacheAction from './cache-action';\nimport isActionOptions from './is-action-options';\n\nexport default function cachableActionDecorator<TMethod extends (...args: any[]) => any>(\n    _: object,\n    key: string,\n    descriptor: TypedPropertyDescriptor<TMethod>\n): TypedPropertyDescriptor<TMethod> {\n    const memoizedMethods = new WeakMap<object, { [key: string]: TMethod }>();\n\n    function decorateMethod(this: object, method: TMethod): TMethod {\n        return ((...args: any[]) => {\n            const lastArg = args[args.length - 1];\n            const { useCache } = isActionOptions(lastArg) ? lastArg : { useCache: false };\n\n            if (!useCache) {\n                return method.call(this, ...args);\n            }\n\n            const instanceMethods = memoizedMethods.get(this) || {};\n\n            if (!memoizedMethods.get(this)) {\n                memoizedMethods.set(this, instanceMethods);\n            }\n\n            if (!instanceMethods[key]) {\n                instanceMethods[key] = cacheAction(method);\n            }\n\n            return instanceMethods[key].call(this, ...args);\n        }) as TMethod;\n    }\n\n    return {\n        get() {\n            if (typeof descriptor.value !== 'function') {\n                throw new Error('Decorator should be used in functions');\n            }\n\n            const value = decorateMethod.call(this, descriptor.value);\n\n            Object.defineProperty(this, key, { ...descriptor, value });\n\n            return value;\n        },\n    };\n}\n","/**\n * Decorates a class or a method by binding all its prototype methods or itself\n * to the calling instance respectively.\n */\nfunction bindDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>;\nfunction bindDecorator<T extends Constructor<object>>(target: T): T;\nfunction bindDecorator(target: any, key?: any, descriptor?: any): any {\n    if (!key || !descriptor) {\n        return bindClassDecorator(target);\n    }\n\n    return bindMethodDecorator(target, key, descriptor);\n}\n\nexport default bindDecorator;\n\n/**\n * Decorates a class by binding all its prototype methods to the calling\n * instance.\n */\nexport function bindClassDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                bindMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\n/**\n * Decorates a method by binding it to the calling instance.\n */\nexport function bindMethodDecorator<T extends Method>(_: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let method: T = descriptor.value;\n\n    return {\n        get() {\n            const boundMethod = method.bind(this) as T;\n\n            Object.defineProperty(this, key, {\n                ...descriptor,\n                value: boundMethod,\n            });\n\n            return boundMethod;\n        },\n        set(value) {\n            method = value;\n        },\n    };\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\nexport type Method = (...args: any[]) => any;\n","import { mapToInternalAddress } from '../address';\nimport { BillingAddress } from '../billing';\n\nimport { Customer } from '.';\nimport InternalCustomer from './internal-customer';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCustomer(customer: Customer, billingAddress: BillingAddress): InternalCustomer {\n    const firstName = customer.firstName || billingAddress.firstName || '';\n    const lastName = customer.lastName || billingAddress.lastName || '';\n\n    return {\n        addresses: (customer.addresses || []).map(address => mapToInternalAddress(address)),\n        customerId: customer.id,\n        isGuest: customer.isGuest,\n        storeCredit: customer.storeCredit,\n        email: customer.email || billingAddress.email || '',\n        firstName,\n        lastName,\n        name: customer.fullName || [firstName, lastName].join(' '),\n        customerGroupName: customer.customerGroup && customer.customerGroup.name,\n    };\n}\n","import { filter, find, keyBy, reduce } from 'lodash';\n\nimport { mapToInternalLineItems, LineItem } from '../cart';\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon } from '../coupon';\nimport { HOSTED } from '../payment';\n\nimport InternalOrder, { InternalGiftCertificateList, InternalIncompleteOrder, InternalOrderPayment, InternalSocialDataList } from './internal-order';\nimport Order, { GatewayOrderPayment, GiftCertificateOrderPayment, OrderPayment, OrderPayments } from './order';\nimport { OrderMetaState } from './order-state';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalOrder(order: Order, orderMeta: OrderMetaState = {}): InternalOrder {\n    const decimalPlaces = order.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: order.orderId,\n        items: mapToInternalLineItems(order.lineItems, order.currency.decimalPlaces, 'productId'),\n        orderId: order.orderId,\n        currency: order.currency.code,\n        customerCanBeCreated: order.customerCanBeCreated,\n        payment: mapToInternalOrderPayment(order.payments, orderMeta.payment),\n        subtotal: {\n            amount: order.baseAmount,\n            integerAmount: amountTransformer.toInteger(order.baseAmount),\n        },\n        coupon: {\n            discountedAmount: reduce(order.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: order.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: order.discountAmount,\n            integerAmount: amountTransformer.toInteger(order.discountAmount),\n        },\n        token: orderMeta.orderToken,\n        callbackUrl: orderMeta.callbackUrl,\n        discountNotifications: [],\n        giftCertificate: mapToGiftCertificates(order.payments),\n        socialData: mapToInternalSocialDataList(order),\n        status: order.status,\n        hasDigitalItems: order.hasDigitalItems,\n        isDownloadable: order.isDownloadable,\n        isComplete: order.isComplete,\n        shipping: {\n            amount: order.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.shippingCostTotal),\n            amountBeforeDiscount: order.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(order.shippingCostBeforeDiscount),\n        },\n        storeCredit: {\n            amount: mapToStoreCredit(order.payments),\n        },\n        taxes: order.taxes,\n        taxTotal: {\n            amount: order.taxTotal,\n            integerAmount: amountTransformer.toInteger(order.taxTotal),\n        },\n        handling: {\n            amount: order.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(order.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: order.orderAmount,\n            integerAmount: order.orderAmountAsInteger,\n        },\n    };\n}\n\nexport function mapToInternalIncompleteOrder(checkout: Checkout): InternalIncompleteOrder {\n    const payment = find(checkout.payments, { providerType: HOSTED });\n\n    return {\n        orderId: null,\n        isComplete: false,\n        payment: !payment ? {} : {\n            id: payment.providerId,\n            gateway: payment.gatewayId,\n            status: mapToInternalPaymentStatus(payment.detail.step),\n        },\n    };\n}\n\nfunction mapToInternalPaymentStatus(status: string): string {\n    return `PAYMENT_STATUS_${status}`;\n}\n\nfunction mapToStoreCredit(payments?: OrderPayments): number {\n    const item = find(payments, { providerId: 'storecredit' });\n\n    return item ? item.amount : 0;\n}\n\nfunction mapToGiftCertificates(payments?: OrderPayments): InternalGiftCertificateList {\n    const items = filter(payments, { providerId: 'giftcertificate' }) as GiftCertificateOrderPayment[];\n\n    return {\n        totalDiscountedAmount: reduce(items, (sum, item) => item.amount + sum, 0),\n        appliedGiftCertificates: keyBy(items.map(item => ({\n            code: item.detail.code,\n            discountedAmount: item.amount,\n            remainingBalance: item.detail.remaining,\n            giftCertificate: {\n                balance: item.amount + item.detail.remaining,\n                code: item.detail.code,\n                purchaseDate: '',\n            },\n        })), 'code'),\n    };\n}\n\nfunction mapToInternalOrderPayment(payments?: OrderPayments, payment: InternalOrderPayment = {}): InternalOrderPayment {\n    const item = find(payments, isDefaultOrderPayment) as GatewayOrderPayment;\n\n    if (!item) {\n        return {};\n    }\n\n    return {\n        id: item.providerId,\n        status: mapToInternalPaymentStatus(item.detail.step),\n        helpText: item.detail.instructions,\n        returnUrl: payment.returnUrl,\n    };\n}\n\nfunction isDefaultOrderPayment(payment: OrderPayment): payment is GatewayOrderPayment {\n    return payment.providerId !== 'giftcertificate' && payment.providerId !== 'storecredit';\n}\n\nfunction mapToInternalSocialDataList(order: Order): { [itemId: string]: InternalSocialDataList } | undefined {\n    const socialDataObject: { [itemId: string]: InternalSocialDataList } = {};\n    const items = [\n        ...order.lineItems.physicalItems,\n        ...order.lineItems.digitalItems,\n    ];\n\n    items.forEach(item => {\n        socialDataObject[item.id] = mapToInternalSocialData(item);\n    });\n\n    return socialDataObject;\n}\n\nfunction mapToInternalSocialData(lineItem: LineItem): InternalSocialDataList {\n    const codes = ['fb', 'tw', 'gp'];\n\n    return codes.reduce((socialData, code) => {\n        const item = lineItem.socialMedia && find(lineItem.socialMedia, item => item.code === code);\n\n        if (!item) {\n            return socialData;\n        }\n\n        socialData[code] = {\n            name: lineItem.name,\n            description: lineItem.name,\n            image: lineItem.imageUrl,\n            url: item.link,\n            shareText: item.text,\n            sharingLink: item.link,\n            channelName: item.channel,\n            channelCode: item.code,\n        };\n\n        return socialData;\n    }, {} as InternalSocialDataList);\n}\n","import { keyBy, reduce, some } from 'lodash';\n\nimport { Checkout } from '../checkout';\nimport { AmountTransformer } from '../common/utility';\nimport { mapToInternalCoupon, mapToInternalGiftCertificate } from '../coupon';\nimport { mapToDiscountNotifications } from '../promotion';\n\nimport InternalCart from './internal-cart';\nimport mapToInternalLineItems from './map-to-internal-line-items';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCart(checkout: Checkout): InternalCart {\n    const decimalPlaces = checkout.cart.currency.decimalPlaces;\n    const amountTransformer = new AmountTransformer(decimalPlaces);\n\n    return {\n        id: checkout.cart.id,\n        items: mapToInternalLineItems(checkout.cart.lineItems, decimalPlaces),\n        currency: checkout.cart.currency.code,\n        coupon: {\n            discountedAmount: reduce(checkout.cart.coupons, (sum, coupon) => {\n                return sum + coupon.discountedAmount;\n            }, 0),\n            coupons: checkout.cart.coupons.map(mapToInternalCoupon),\n        },\n        discount: {\n            amount: checkout.cart.discountAmount,\n            integerAmount: amountTransformer.toInteger(checkout.cart.discountAmount),\n        },\n        discountNotifications: mapToDiscountNotifications(checkout.promotions),\n        giftCertificate: {\n            totalDiscountedAmount: reduce(checkout.giftCertificates, (sum, certificate) => {\n                return sum + certificate.used;\n            }, 0),\n            appliedGiftCertificates: keyBy(checkout.giftCertificates.map(mapToInternalGiftCertificate), 'code'),\n        },\n        shipping: {\n            amount: checkout.shippingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.shippingCostTotal),\n            amountBeforeDiscount: checkout.shippingCostBeforeDiscount,\n            integerAmountBeforeDiscount: amountTransformer.toInteger(checkout.shippingCostBeforeDiscount),\n            required: some(checkout.cart.lineItems.physicalItems, lineItem => lineItem.isShippingRequired),\n        },\n        subtotal: {\n            amount: checkout.subtotal,\n            integerAmount: amountTransformer.toInteger(checkout.subtotal),\n        },\n        storeCredit: {\n            amount: checkout.customer ? checkout.customer.storeCredit : 0,\n        },\n        taxSubtotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        taxes: checkout.taxes,\n        taxTotal: {\n            amount: checkout.taxTotal,\n            integerAmount: amountTransformer.toInteger(checkout.taxTotal),\n        },\n        handling: {\n            amount: checkout.handlingCostTotal,\n            integerAmount: amountTransformer.toInteger(checkout.handlingCostTotal),\n        },\n        grandTotal: {\n            amount: checkout.grandTotal,\n            integerAmount: amountTransformer.toInteger(checkout.grandTotal),\n        },\n    };\n}\n","import { DiscountNotification } from '../discount';\n\nimport { Promotion } from '.';\n\nexport default function mapToDiscountNotifications(promotions?: Promotion[]): DiscountNotification[] {\n    const notifications: DiscountNotification[] = [];\n\n    (promotions || []).forEach(promotion => {\n        (promotion.banners || []).forEach(banner => {\n            notifications.push({\n                placeholders: [],\n                discountType: null,\n                message: '',\n                messageHtml: banner.text,\n            });\n        });\n    });\n\n    return notifications;\n}\n","module.exports = require(\"@bigcommerce/bigpay-client\");","export type EnvironmentType = 'PRODUCTION' | 'TEST';\n\nexport interface AmazonPayV2Options {\n    environment: EnvironmentType;\n}\n\nexport interface AmazonPayV2SDK {\n    Pay: AmazonPayV2Client;\n}\n\nexport interface AmazonPayV2Client {\n    /**\n     * Render the Amazon Pay button to a HTML container element.\n     *\n     * @param containerId - HTML element id.\n     * @param params - Button rendering params.\n     */\n    renderButton(containerId: string, params: AmazonPayV2ButtonParams): HTMLElement;\n\n    /**\n     * Bind click events to HTML elements, so that when the element is clicked, the buyer can select a different shipping address or payment method.\n     *\n     * @param buttonId - HTML element id.\n     * @param options - Element binding options.\n     */\n    bindChangeAction(buttonId: string, options: AmazonPayV2ChangeActionOptions): void;\n\n    /**\n     * Allow buyers to sign out from their Amazon account.\n     */\n    signout(): void;\n}\n\nexport interface AmazonPayV2HostWindow extends Window {\n    amazon?: AmazonPayV2SDK;\n}\n\nexport interface AmazonPayV2ButtonParams {\n    /**\n     * Amazon Pay merchant account identifier.\n     */\n    merchantId: string;\n\n    /**\n     * Configuration for calling the endpoint to Create Checkout Session.\n     */\n    createCheckoutSession: AmazonPayV2CheckoutSession;\n\n    /**\n     * Placement of the Amazon Pay button on your website.\n     */\n    placement: AmazonPayV2Placement;\n\n    /**\n     * Ledger currency provided during registration for the given merchant identifier.\n     */\n    ledgerCurrency: AmazonPayV2LedgerCurrency;\n\n    /**\n     * Product type selected for checkout. Default is 'PayAndShip'.\n     */\n    productType?: AmazonPayV2PayOptions;\n\n    /**\n     * Language used to render the button and text on Amazon Pay hosted pages.\n     */\n    checkoutLanguage?: AmazonPayV2CheckoutLanguage;\n\n    /**\n     * Sets button to Sandbox environment. Default is false.\n     */\n    sandbox?: boolean;\n}\n\nexport interface AmazonPayV2CheckoutSession {\n    /**\n     * Endpoint URL to Create Checkout Session.\n     */\n    url: string;\n\n    /**\n     * HTTP request method. Default is 'POST'.\n     */\n    method?: 'GET' | 'POST';\n\n    /**\n     * Checkout Session ID parameter in the response. Default is 'checkoutSessionId'.\n     */\n    extractAmazonCheckoutSessionId?: string;\n}\n\nexport type AmazonPayV2ChangeActionType = 'changeAddress' | 'changePayment';\n\nexport interface AmazonPayV2ChangeActionOptions {\n    /**\n     * Amazon Pay Checkout Session identifier.\n     */\n    amazonCheckoutSessionId: string;\n\n    /**\n     * Update requested by the buyer.\n     */\n    changeAction: AmazonPayV2ChangeActionType;\n}\n\nexport enum AmazonPayV2Regions {\n    de = 'eu',\n    jp = 'fe',\n    uk = 'eu',\n    us = 'na',\n}\n\nexport enum AmazonPayV2CheckoutLanguage {\n    en_US = 'en_US',\n    en_GB = 'en_GB',\n    de_DE = 'de_DE',\n    fr_FR = 'fr_FR',\n    it_IT = 'it_IT',\n    es_ES = 'es_ES',\n    ja_JP = 'ja_JP',\n}\n\nexport enum AmazonPayV2Placement {\n    /** Initial or main page. */\n    Home = 'Home',\n\n    /** Product details page. */\n    Product = 'Product',\n\n    /** Cart review page before buyer starts checkout. */\n    Cart = 'Cart',\n\n    /** Any page after buyer starts checkout. */\n    Checkout = 'Checkout',\n\n    /** Any page that doesn't fit the previous descriptions. */\n    Other = 'Other',\n}\n\nexport enum AmazonPayV2LedgerCurrency {\n    USD = 'USD',\n    EUR = 'EUR',\n    GBP = 'GBP',\n    JPY = 'JPY',\n}\n\nexport enum AmazonPayV2PayOptions {\n    /** Select this product type if you need the buyer's shipping details. */\n    PayAndShip = 'PayAndShip',\n\n    /** Select this product type if you do not need the buyer's shipping details. */\n    PayOnly = 'PayOnly',\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport { GooglePayCreator } from '../googlepay';\n\nimport { BraintreeClientCreator, BraintreeDataCollectorCreator, BraintreeHostedFieldsCreator, BraintreeHostWindow, BraintreePaypalCheckoutCreator, BraintreePaypalCreator, BraintreeThreeDSecureCreator, BraintreeVisaCheckoutCreator } from './braintree';\n\nexport default class BraintreeScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: BraintreeHostWindow = window\n    ) {}\n\n    loadClient(): Promise<BraintreeClientCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.70.0/js/client.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.client) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.client;\n            });\n    }\n\n    load3DS(): Promise<BraintreeThreeDSecureCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.70.0/js/three-d-secure.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.threeDSecure) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.threeDSecure;\n            });\n    }\n\n    loadDataCollector(): Promise<BraintreeDataCollectorCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.70.0/js/data-collector.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.dataCollector) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.dataCollector;\n            });\n    }\n\n    loadPaypal(): Promise<BraintreePaypalCreator> {\n\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.70.0/js/paypal.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypal) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.paypal;\n            });\n    }\n\n    loadPaypalCheckout(): Promise<BraintreePaypalCheckoutCreator> {\n\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.70.0/js/paypal-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.paypalCheckout) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.paypalCheckout;\n            });\n    }\n\n    loadVisaCheckout(): Promise<BraintreeVisaCheckoutCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.70.0/js/visa-checkout.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.visaCheckout) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.visaCheckout;\n            });\n    }\n\n    loadGooglePayment(): Promise<GooglePayCreator> {\n        return this._scriptLoader\n            .loadScript('//js.braintreegateway.com/web/3.70.0/js/google-payment.min.js')\n            .then(() => {\n                if (!this._window.braintree || !this._window.braintree.googlePayment) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.braintree.googlePayment;\n            });\n    }\n\n    async loadHostedFields(): Promise<BraintreeHostedFieldsCreator> {\n        await this._scriptLoader.loadScript('//js.braintreegateway.com/web/3.70.0/js/hosted-fields.min.js');\n\n        if (!this._window.braintree || !this._window.braintree.hostedFields) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.braintree.hostedFields;\n    }\n}\n","import { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport { BraintreeClient,\n    BraintreeDataCollector,\n    BraintreeHostedFields,\n    BraintreeHostedFieldsCreatorConfig,\n    BraintreeModule,\n    BraintreePaypal,\n    BraintreePaypalCheckout,\n    BraintreeThreeDSecure,\n    BraintreeVisaCheckout, Config,\n    GooglePayBraintreeSDK,\n    PaypalClientInstance,\n    RenderButtons } from './braintree';\nimport BraintreeScriptLoader from './braintree-script-loader';\n\nexport default class BraintreeSDKCreator {\n    private _client?: Promise<BraintreeClient>;\n    private _3ds?: Promise<BraintreeThreeDSecure>;\n    private _paypal?: Promise<BraintreePaypal>;\n    private _paypalCheckout?: Promise<BraintreePaypalCheckout>;\n    private _clientToken?: string;\n    private _visaCheckout?: Promise<BraintreeVisaCheckout>;\n    private _dataCollectors: {\n        default?: Promise<BraintreeDataCollector>;\n        paypal?: Promise<BraintreeDataCollector>;\n    } = {};\n    private _googlePay?: Promise<GooglePayBraintreeSDK>;\n\n    constructor(\n        private _braintreeScriptLoader: BraintreeScriptLoader\n    ) {}\n\n    initialize(clientToken: string) {\n        this._clientToken = clientToken;\n    }\n\n    getClient(): Promise<BraintreeClient> {\n        if (!this._clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!this._client) {\n            this._client = this._braintreeScriptLoader.loadClient()\n                .then(client => client.create({ authorization: this._clientToken }));\n        }\n\n        return this._client;\n    }\n\n    getPaypal(): Promise<BraintreePaypal> {\n        if (!this._paypal) {\n            this._paypal = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypal(),\n            ])\n                .then(([client, paypal]) => paypal.create({ client }));\n        }\n\n        return this._paypal;\n    }\n\n    getPaypalCheckout(config: Config, renderButtonCallback: RenderButtons): Promise<BraintreePaypalCheckout> {\n        if (!this._paypalCheckout) {\n            this._paypalCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadPaypalCheckout(),\n            ])\n                .then(([client, paypalCheckout]) => paypalCheckout.create({ client }, (_error: string, instance: PaypalClientInstance) =>  {\n                    instance.loadPayPalSDK({\n                        currency: config.currency,\n                    }, () => {\n                        renderButtonCallback(instance);\n                    });\n                }));\n        }\n\n        return this._paypalCheckout;\n    }\n\n    get3DS(): Promise<BraintreeThreeDSecure> {\n        if (!this._3ds) {\n            this._3ds = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.load3DS(),\n            ])\n                .then(([client, threeDSecure]) => threeDSecure.create({ client, version: 2}));\n        }\n\n        return this._3ds;\n    }\n\n    getDataCollector(options?: { paypal: boolean }): Promise<BraintreeDataCollector> {\n        const cacheKey = options && options.paypal ? 'paypal' : 'default';\n        let cached = this._dataCollectors[cacheKey];\n\n        if (!cached) {\n            cached = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadDataCollector(),\n            ])\n                .then(([client, dataCollector]) => dataCollector.create({ client, kount: true, ...options }))\n                .catch(error => {\n                    if (error && error.code === 'DATA_COLLECTOR_KOUNT_NOT_ENABLED') {\n                        return { deviceData: undefined, teardown: () => Promise.resolve() };\n                    }\n\n                    throw error;\n                });\n\n            this._dataCollectors[cacheKey] = cached;\n        }\n\n        return cached;\n    }\n\n    getVisaCheckout(): Promise<BraintreeVisaCheckout> {\n        if (!this._visaCheckout) {\n            this._visaCheckout = Promise.all([\n                this.getClient(),\n                this._braintreeScriptLoader.loadVisaCheckout(),\n            ])\n                .then(([client, visaCheckout]) => visaCheckout.create({ client }));\n        }\n\n        return this._visaCheckout;\n    }\n\n    getGooglePaymentComponent(): Promise<GooglePayBraintreeSDK> {\n        if (!this._googlePay) {\n            this._googlePay = Promise.all ([\n                this.getClient(),\n                this._braintreeScriptLoader.loadGooglePayment(),\n            ])\n                .then(([client, googlePay]) => googlePay.create({ client }));\n        }\n\n        return this._googlePay;\n    }\n\n    async createHostedFields(\n        options: Pick<BraintreeHostedFieldsCreatorConfig, 'fields' | 'styles'>\n    ): Promise<BraintreeHostedFields> {\n        const [client, hostedFields] = await Promise.all([\n            this.getClient(),\n            this._braintreeScriptLoader.loadHostedFields(),\n        ]);\n\n        return hostedFields.create({ ...options, client });\n    }\n\n    teardown(): Promise<void> {\n        return Promise.all([\n            this._teardown(this._3ds),\n            this._teardown(this._dataCollectors.default),\n            this._teardown(this._dataCollectors.paypal),\n            this._teardown(this._visaCheckout),\n            this._teardown(this._googlePay),\n        ]).then(() => {\n            this._3ds = undefined;\n            this._visaCheckout = undefined;\n            this._dataCollectors = {};\n            this._googlePay = undefined;\n        });\n    }\n\n    private _teardown(module?: Promise<BraintreeModule>) {\n        return module ?\n            module.then(mod => mod.teardown()) :\n            Promise.resolve();\n    }\n}\n","import EmbeddedCheckoutStyles from '../embedded-checkout-styles';\n\nexport enum EmbeddedContentEventType {\n    StyleConfigured = 'STYLE_CONFIGURED',\n}\n\nexport interface EmbeddedContentEventMap {\n    [EmbeddedContentEventType.StyleConfigured]: EmbeddedContentStyleConfiguredEvent;\n}\n\nexport type EmbeddedContentEvent = (\n    EmbeddedContentStyleConfiguredEvent\n);\n\nexport interface EmbeddedContentStyleConfiguredEvent {\n    type: EmbeddedContentEventType.StyleConfigured;\n    payload: EmbeddedCheckoutStyles;\n}\n","import { Address } from '../address';\n\nimport BillingAddress from './billing-address';\n\nexport default function isBillingAddressLike(address: Address): address is BillingAddress {\n    const billingAddress = address as BillingAddress;\n\n    return typeof billingAddress.id !== 'undefined';\n}\n","import CardExpiryDate from './card-expiry-date';\n\nconst NUMBER_SEPARATOR = '/';\n\nexport default class CardExpiryFormatter {\n    format(value: string): string {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n        const trimmedMonth = month.slice(0, 2);\n        const trimmedYear = year.length === 4 ? year.slice(-2) : (year ? year.slice(0, 2) : month.slice(2));\n\n        // i.e.: '1'\n        if (value.length < 2) {\n            return month;\n        }\n\n        // ie.: '10 /' (without trailing space)\n        if (value.length > 3 && !trimmedYear) {\n            return trimmedMonth;\n        }\n\n        return `${trimmedMonth} ${NUMBER_SEPARATOR} ${trimmedYear}`;\n    }\n\n    toObject(value: string): CardExpiryDate {\n        const [month = '', year = ''] = value.split(new RegExp(`\\\\s*${NUMBER_SEPARATOR}\\\\s*`));\n\n        if (!/^\\d+$/.test(month) || !/^\\d+$/.test(year)) {\n            return { month: '', year: '' };\n        }\n\n        return {\n            month: month.length === 1 ? `0${month}` : month.slice(0, 2),\n            year: year.length === 2 ? `20${year}` : year.slice(0, 4),\n        };\n    }\n}\n","import { creditCardType, number } from 'card-validator';\nimport { max } from 'lodash';\n\nconst NUMBER_SEPARATOR = ' ';\n\nexport default class CardNumberFormatter {\n    format(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        const maxLength = max(creditCardType(value).map(info => max(info.lengths)));\n        const unformattedValue = this.unformat(value).slice(0, maxLength);\n\n        return card.gaps\n            .filter(gapIndex => unformattedValue.length > gapIndex)\n            .reduce((output, gapIndex, index) => (\n                [\n                    output.slice(0, gapIndex + index),\n                    output.slice(gapIndex + index),\n                ].join(NUMBER_SEPARATOR)\n            ), unformattedValue);\n    }\n\n    unformat(value: string): string {\n        const { card } = number(value);\n\n        if (!card) {\n            return value;\n        }\n\n        return value.replace(new RegExp(NUMBER_SEPARATOR, 'g'), '');\n    }\n}\n","import Coupon from './coupon';\nimport InternalCoupon from './internal-coupon';\n\nconst couponTypes = [\n    'per_item_discount',\n    'percentage_discount',\n    'per_total_discount',\n    'shipping_discount',\n    'free_shipping',\n];\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalCoupon(coupon: Coupon): InternalCoupon {\n    return {\n        code: coupon.code,\n        discount: coupon.displayName,\n        discountType: couponTypes.indexOf(coupon.couponType),\n    };\n}\n","import parseUrl from './parse-url';\nimport Url from './url';\n\nexport default function appendWww(url: Url): Url {\n    return parseUrl(\n        url.hostname.indexOf('www') === 0 ?\n            url.href :\n            url.href.replace(url.hostname, `www.${url.hostname}`)\n    );\n}\n","import StandardError from './standard-error';\n\nexport enum NotInitializedErrorType {\n    CheckoutButtonNotInitialized,\n    CustomerNotInitialized,\n    PaymentNotInitialized,\n    ShippingNotInitialized,\n    SpamProtectionNotInitialized,\n}\n\n/**\n * Throw this error if a method requires a certain initialization call to be\n * made first. Some objects can be constructed but they cannot be used until a\n * separate initialization call is made.\n */\nexport default class NotInitializedError extends StandardError {\n    constructor(\n        public subtype: NotInitializedErrorType\n    ) {\n        super(getErrorMessage(subtype));\n\n        this.name = 'NotInitializedError';\n        this.type = 'not_initialized';\n    }\n}\n\nfunction getErrorMessage(type: NotInitializedErrorType): string {\n    switch (type) {\n    case NotInitializedErrorType.CustomerNotInitialized:\n        return 'Unable to proceed because the customer step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.PaymentNotInitialized:\n        return 'Unable to proceed because the payment step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.ShippingNotInitialized:\n        return 'Unable to proceed because the shipping step of checkout has not been initialized.';\n\n    case NotInitializedErrorType.SpamProtectionNotInitialized:\n        return 'Unable to proceed because the checkout spam protection has not been initialized.';\n\n    default:\n        return 'Unable to proceed because the required component has not been initialized.';\n    }\n}\n","import joinIncludes from './join-includes';\nimport mergeIncludes from './merge-includes';\n\n/**\n * Joins or merges a base list of includes with a set of additional includes.\n */\nexport default function joinOrMergeIncludes<T extends string>(\n    baseIncludes: T[],\n    includeDictionaryOrList: { [key in T]?: boolean } | T[] = []\n): string {\n    return Array.isArray(includeDictionaryOrList) ?\n        joinIncludes([\n            ...baseIncludes,\n            ...includeDictionaryOrList,\n        ]) :\n        mergeIncludes(baseIncludes, includeDictionaryOrList);\n}\n","import { difference, filter, keys, pickBy } from 'lodash';\n\nimport joinIncludes from './join-includes';\n\n/**\n * Merges includes given a list of base includes and a dictionary\n * of includes\n */\nexport default function mergeIncludes<T extends string>(\n    baseIncludes: T[],\n    includesDictionary?: { [key in T]?: boolean }\n): string {\n    const deletions = keys(pickBy(includesDictionary, on => !on));\n    const additions = keys(filter(includesDictionary));\n\n    return joinIncludes([\n            ...difference(baseIncludes, deletions),\n            ...additions,\n        ]);\n}\n","module.exports = require(\"iframe-resizer\");","module.exports = require(\"iframe-resizer/js/iframeResizer.contentWindow\");","import { isPlainObject, omitBy, transform } from 'lodash';\n\nexport default function omitDeep(object: any, predicate: (value: any, key: string) => boolean): any {\n    if (Array.isArray(object)) {\n        return object.map(value => omitDeep(value, predicate));\n    }\n\n    if (isPlainObject(object)) {\n        return transform(omitBy(object, predicate), (result, value, key) => {\n            result[key] = omitDeep(value, predicate);\n        }, {} as { [key: string]: any });\n    }\n\n    return object;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, merge, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { ConfigActionCreator } from '../config';\nimport { FormFieldsActionCreator } from '../form';\n\nimport { CheckoutRequestBody } from './checkout';\nimport { CheckoutActionType, LoadCheckoutAction, UpdateCheckoutAction } from './checkout-actions';\nimport CheckoutRequestSender from './checkout-request-sender';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport default class CheckoutActionCreator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender,\n        private _configActionCreator: ConfigActionCreator,\n        private _formFieldsActionCreator: FormFieldsActionCreator\n    ) {}\n\n    loadCheckout(id: string, options?: RequestOptions): Observable<LoadCheckoutAction> {\n        return concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            merge(\n                this._configActionCreator.loadConfig({ ...options, useCache: true }),\n                this._formFieldsActionCreator.loadFormFields({ ...options, useCache: true }),\n                defer(() => this._checkoutRequestSender.loadCheckout(id, options)\n                    .then(({ body }) => createAction(CheckoutActionType.LoadCheckoutSucceeded, body)))\n            )\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    loadDefaultCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CheckoutActionType.LoadCheckoutRequested)),\n            merge(\n                this._configActionCreator.loadConfig(),\n                this._formFieldsActionCreator.loadFormFields({ ...options, useCache: true })\n            ),\n            defer(async () => {\n                const state = store.getState();\n                const context = state.config.getContextConfig();\n\n                if (!context || !context.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                const { body } = await this._checkoutRequestSender.loadCheckout(context.checkoutId, options);\n\n                return createAction(CheckoutActionType.LoadCheckoutSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(CheckoutActionType.LoadCheckoutFailed, error))\n        );\n    }\n\n    updateCheckout(\n        body: CheckoutRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateCheckoutAction, InternalCheckoutSelectors> {\n        return store => new Observable(observer => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CheckoutActionType.UpdateCheckoutRequested));\n\n            this._checkoutRequestSender.updateCheckout(checkout.id, body, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CheckoutActionType.UpdateCheckoutSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CheckoutActionType.UpdateCheckoutFailed, response));\n                });\n        });\n    }\n\n    loadCurrentCheckout(options?: RequestOptions): ThunkAction<LoadCheckoutAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            return this.loadCheckout(checkout.id, options);\n        };\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { find } from 'lodash';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { Cart } from '../cart';\nimport { CheckoutIncludes, CheckoutParams, CheckoutRequestSender, InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport Consignment, { ConsignmentsRequestBody, ConsignmentAssignmentRequestBody, ConsignmentCreateRequestBody, ConsignmentLineItem, ConsignmentRequestBody, ConsignmentShippingOptionRequestBody, ConsignmentUpdateRequestBody } from './consignment';\nimport { ConsignmentActionType, CreateConsignmentsAction, DeleteConsignmentAction, LoadShippingOptionsAction, UpdateConsignmentAction, UpdateShippingOptionAction } from './consignment-actions';\nimport ConsignmentRequestSender from './consignment-request-sender';\n\nexport default class ConsignmentActionCreator {\n    constructor(\n        private _consignmentRequestSender: ConsignmentRequestSender,\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    unassignItemsByAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<DeleteConsignmentAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const existingConsignment = state.consignments.getConsignmentByAddress(consignment.shippingAddress);\n\n            if (!existingConsignment) {\n                throw new InvalidArgumentError('No consignment found for the specified address');\n            }\n\n            const lineItems = this._removeLineItems(\n                consignment.lineItems,\n                existingConsignment,\n                state.cart.getCart()\n            );\n\n            if (!lineItems.length) {\n                return this.deleteConsignment(existingConsignment.id, options)(store);\n            }\n\n            return this.updateConsignment({\n                id: existingConsignment.id,\n                shippingAddress: consignment.shippingAddress,\n                lineItems,\n            }, options)(store);\n        };\n    }\n\n    assignItemsByAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateConsignmentAction | CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const existingConsignment = state.consignments.getConsignmentByAddress(consignment.shippingAddress);\n\n            return this._createOrUpdateConsignment({\n                id: existingConsignment && existingConsignment.id,\n                shippingAddress: consignment.shippingAddress,\n                lineItems: this._addLineItems(\n                    consignment.lineItems,\n                    existingConsignment,\n                    state.cart.getCart()\n                ),\n            }, options)(store);\n        };\n    }\n\n    selectShippingOption(\n        id: string,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n            const consignments = state.consignments.getConsignments();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (!consignments || !consignments.length) {\n                throw new MissingDataError(MissingDataErrorType.MissingConsignments);\n            }\n\n            const consignmentUpdateBody = {\n                id: consignments[0].id,\n                shippingOptionId: id,\n            };\n\n            const consignmentMeta = {\n                id: consignments[0].id,\n            };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignmentUpdateBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(\n                        ConsignmentActionType.UpdateShippingOptionSucceeded,\n                        body,\n                        consignmentMeta\n                    ));\n\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(\n                        ConsignmentActionType.UpdateShippingOptionFailed,\n                        response,\n                        consignmentMeta\n                    ));\n                });\n        });\n    }\n\n    loadShippingOptions(options?: RequestOptions): ThunkAction<LoadShippingOptionsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<LoadShippingOptionsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.LoadShippingOptionsRequested));\n\n            this._checkoutRequestSender.loadCheckout(checkout.id, {\n                ...options,\n                params: {\n                    include: [CheckoutIncludes.AvailableShippingOptions],\n                },\n            })\n            .then(({ body }) => {\n                observer.next(createAction(ConsignmentActionType.LoadShippingOptionsSucceeded, body));\n                observer.complete();\n            })\n            .catch(response => {\n                observer.error(createErrorAction(ConsignmentActionType.LoadShippingOptionsFailed, response));\n            });\n        });\n    }\n\n    updateAddress(\n        address: AddressRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<CreateConsignmentsAction | UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => {\n            const consignment = this._getUpdateAddressRequestBody(address, store);\n            const consignments = store.getState().consignments.getConsignments();\n\n            if (consignments && consignments.length) {\n                (consignment as ConsignmentUpdateRequestBody).id = consignments[0].id;\n            }\n\n            return this._createOrUpdateConsignment(consignment, options)(store);\n        };\n    }\n\n    createConsignments(\n        consignments: ConsignmentsRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CreateConsignmentsAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.CreateConsignmentsRequested));\n\n            this._consignmentRequestSender.createConsignments(checkout.id, consignments, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.CreateConsignmentsSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.CreateConsignmentsFailed, response));\n                });\n        });\n    }\n\n    updateConsignment(\n        consignment: ConsignmentUpdateRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<UpdateConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    deleteConsignment(\n        consignmentId: string,\n        options?: RequestOptions\n    ): ThunkAction<DeleteConsignmentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<DeleteConsignmentAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n            const consignmentMeta = { id: consignmentId };\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(ConsignmentActionType.DeleteConsignmentRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.deleteConsignment(checkout.id, consignmentId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.DeleteConsignmentSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.DeleteConsignmentFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    updateShippingOption(\n        consignment: ConsignmentShippingOptionRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<UpdateShippingOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateShippingOptionAction>) => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const consignmentMeta = { id: consignment.id };\n\n            observer.next(createAction(ConsignmentActionType.UpdateShippingOptionRequested, undefined, consignmentMeta));\n\n            this._consignmentRequestSender.updateConsignment(checkout.id, consignment, options)\n                .then(({ body }) => {\n                    observer.next(createAction(ConsignmentActionType.UpdateShippingOptionSucceeded, body, consignmentMeta));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConsignmentActionType.UpdateShippingOptionFailed, response, consignmentMeta));\n                });\n        });\n    }\n\n    private _createOrUpdateConsignment(\n        consignment: ConsignmentCreateRequestBody | ConsignmentUpdateRequestBody,\n        options?: RequestOptions<CheckoutParams>\n    ): ThunkAction<UpdateConsignmentAction | CreateConsignmentsAction, InternalCheckoutSelectors> {\n        return store => {\n            const checkout = store.getState().checkout.getCheckout();\n\n            if (!checkout || !checkout.id) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            if (this._isUpdateConsignmentRequest(consignment)) {\n                return this.updateConsignment(consignment, options)(store);\n            }\n\n            return this.createConsignments([consignment], options)(store);\n        };\n    }\n\n    private _getUpdateAddressRequestBody(\n        shippingAddress: AddressRequestBody,\n        store: ReadableCheckoutStore\n    ): ConsignmentRequestBody {\n        const state = store.getState();\n        const cart = state.cart.getCart();\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n        const { physicalItems, customItems = [] } = cart.lineItems;\n\n        return {\n            shippingAddress,\n            lineItems: [ ...physicalItems, ...customItems ].map(item => ({\n                itemId: item.id,\n                quantity: item.quantity,\n            })),\n        };\n    }\n\n    private _removeLineItems(\n        lineItems: ConsignmentLineItem[],\n        consignment: Consignment,\n        cart?: Cart\n    ): ConsignmentLineItem[] {\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return this._hydrateLineItems(consignment.lineItemIds, cart).map(existingItem => {\n            const sharedItem = find(lineItems, lineItem => lineItem.itemId === existingItem.itemId);\n\n            return {\n                ...existingItem,\n                quantity: sharedItem ? (existingItem.quantity - sharedItem.quantity) : existingItem.quantity,\n            };\n        }).filter(lineItem => lineItem.quantity > 0);\n    }\n\n    private _addLineItems(\n        lineItems: ConsignmentLineItem[],\n        consignment?: Consignment,\n        cart?: Cart\n    ): ConsignmentLineItem[] {\n        if (!consignment) {\n            return lineItems;\n        }\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        return lineItems\n            .concat(this._hydrateLineItems(consignment.lineItemIds, cart))\n            .filter(lineItem => lineItem.quantity > 0);\n    }\n\n    private _hydrateLineItems(lineItemIds: string[], cart: Cart): ConsignmentLineItem[] {\n        return lineItemIds.map(itemId => {\n            const item = find(cart.lineItems.physicalItems, lineItem => lineItem.id === itemId);\n\n            return {\n                itemId,\n                quantity: item ? item.quantity : 0,\n            };\n        });\n    }\n\n    private _isUpdateConsignmentRequest(\n        request: ConsignmentRequestBody\n    ): request is ConsignmentUpdateRequestBody {\n        const updateRequest = request as ConsignmentUpdateRequestBody;\n\n        return !!updateRequest.id;\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CheckoutParams } from '../checkout';\nimport { joinIncludes, joinOrMergeIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport { ConsignmentsRequestBody, ConsignmentUpdateRequestBody } from './consignment';\n\nconst DEFAULT_INCLUDES = [\n        'consignments.availableShippingOptions',\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ];\n\nexport default class ConsignmentRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createConsignments(\n        checkoutId: string,\n        consignments: ConsignmentsRequestBody,\n        { timeout, params: { include } = {} }: RequestOptions<CheckoutParams> = {}\n    ): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            body: consignments,\n            params: {\n                include: joinOrMergeIncludes(DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    updateConsignment(\n        checkoutId: string,\n        consignment: ConsignmentUpdateRequestBody,\n        { timeout, params: { include } = {} }: RequestOptions<CheckoutParams> = {}\n    ): Promise<Response<Checkout>> {\n        const { id, ...body } = consignment;\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, {\n            body,\n            params: {\n                include: joinOrMergeIncludes(DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    deleteConsignment(\n        checkoutId: string,\n        consignmentId: string,\n        { timeout }: RequestOptions = {}\n    ): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/consignments/${consignmentId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n        const include = joinIncludes(DEFAULT_INCLUDES);\n\n        return this._requestSender.delete(url, { params: { include }, headers, timeout });\n    }\n}\n","export default function getCallbackUrl(origin: string): string {\n    return `${window.location.origin}/checkout.php?action=set_external_checkout&provider=masterpass&gateway=stripe&origin=${origin}`;\n}\n","import { pick } from 'lodash';\n\nimport { mapToInternalAddress } from '../address';\nimport { mapToInternalCart } from '../cart';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { mapToInternalCustomer } from '../customer';\nimport { HostedFormOrderData } from '../hosted-form';\nimport { CardExpiryFormatter, CardNumberFormatter, HostedInputValues } from '../hosted-form/iframe-content';\nimport { mapToInternalOrder } from '../order';\nimport { mapToInternalShippingOption } from '../shipping';\n\nimport isVaultedInstrument, { isFormattedVaultedInstrument } from './is-vaulted-instrument';\nimport Payment, { HostedCreditCardInstrument, HostedVaultedInstrument, PaymentInstrument } from './payment';\nimport PaymentMethod from './payment-method';\nimport PaymentRequestBody from './payment-request-body';\n\nexport default class PaymentRequestTransformer {\n    private _cardExpiryFormatter = new CardExpiryFormatter();\n    private _cardNumberFormatter = new CardNumberFormatter();\n\n    transform(payment: Payment, checkoutState: InternalCheckoutSelectors): PaymentRequestBody {\n        const billingAddress = checkoutState.billingAddress.getBillingAddress();\n        const checkout = checkoutState.checkout.getCheckout();\n        const customer = checkoutState.customer.getCustomer();\n        const order = checkoutState.order.getOrder();\n        const paymentMethod = checkoutState.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n        const shippingAddress = checkoutState.shippingAddress.getShippingAddress();\n        const consignments = checkoutState.consignments.getConsignments();\n        const shippingOption = checkoutState.consignments.getShippingOption();\n        const storeConfig = checkoutState.config.getStoreConfig();\n        const contextConfig = checkoutState.config.getContextConfig();\n        const instrumentMeta = checkoutState.instruments.getInstrumentsMeta();\n        const paymentMeta = checkoutState.paymentMethods.getPaymentMethodsMeta();\n        const orderMeta = checkoutState.order.getOrderMeta();\n        const internalCustomer = customer && billingAddress && mapToInternalCustomer(customer, billingAddress);\n\n        const authToken = instrumentMeta && payment.paymentData &&\n            (isVaultedInstrument(payment.paymentData) || isFormattedVaultedInstrument(payment.paymentData)) ?\n            `${checkoutState.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            checkoutState.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\n        }\n\n        return {\n            additionalAction: payment.additionalAction,\n            authToken,\n            customer: internalCustomer,\n            billingAddress: billingAddress && mapToInternalAddress(billingAddress),\n            shippingAddress: shippingAddress && mapToInternalAddress(shippingAddress, consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: payment.paymentData,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            quoteMeta: {\n                request: {\n                    ...paymentMeta,\n                    geoCountryCode: contextConfig && contextConfig.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: pick(storeConfig && storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    transformWithHostedFormData(values: HostedInputValues, data: HostedFormOrderData, nonce: string): PaymentRequestBody {\n        const { additionalAction, authToken, checkout, config, order, orderMeta, payment = {}, paymentMethod, paymentMethodMeta } = data;\n        const consignment = checkout && checkout.consignments[0];\n        const shippingAddress = consignment && consignment.shippingAddress;\n        const shippingOption = consignment && consignment.selectedShippingOption;\n\n        return {\n            additionalAction,\n            authToken,\n            paymentMethod: paymentMethod && this._transformPaymentMethod(paymentMethod),\n            customer: order && order.billingAddress && checkout && mapToInternalCustomer(checkout.customer, order.billingAddress),\n            billingAddress: order && order.billingAddress && mapToInternalAddress(order.billingAddress),\n            shippingAddress: shippingAddress && checkout && mapToInternalAddress(shippingAddress, checkout.consignments),\n            shippingOption: shippingOption && mapToInternalShippingOption(shippingOption, true),\n            cart: checkout && mapToInternalCart(checkout),\n            order: order && mapToInternalOrder(order, orderMeta),\n            orderMeta,\n            payment: this._transformHostedInputValues(values, payment, nonce),\n            quoteMeta: {\n                request: {\n                    ...paymentMethodMeta,\n                    geoCountryCode: config && config.context.geoCountryCode,\n                },\n            },\n            source: 'bigcommerce-checkout-js-sdk',\n            store: config && pick(config.storeConfig.storeProfile, [\n                'storeHash',\n                'storeId',\n                'storeLanguage',\n                'storeName',\n            ]),\n        };\n    }\n\n    private _transformPaymentMethod(paymentMethod: PaymentMethod): PaymentMethod {\n        if (paymentMethod.method === 'multi-option' && !paymentMethod.gateway) {\n            return { ...paymentMethod, gateway: paymentMethod.id };\n        }\n\n        if (paymentMethod.initializationData && paymentMethod.initializationData.gateway) {\n            return { ...paymentMethod, id: paymentMethod.initializationData.gateway };\n        }\n\n        return paymentMethod;\n    }\n\n    private _transformHostedInputValues(\n        values: HostedInputValues,\n        payment: HostedCreditCardInstrument | HostedVaultedInstrument,\n        nonce: string\n    ): PaymentInstrument {\n        return 'instrumentId' in payment ?\n            {\n                ...payment,\n                ccCvv: values.cardCodeVerification,\n                ccNumber: values.cardNumberVerification && this._cardNumberFormatter.unformat(values.cardNumberVerification),\n                hostedFormNonce: nonce,\n            } :\n            {\n                ...payment,\n                ccCvv: values.cardCode,\n                ccExpiry: this._cardExpiryFormatter.toObject(values.cardExpiry || ''),\n                ccName: values.cardName || '',\n                ccNumber: this._cardNumberFormatter.unformat(values.cardNumber || ''),\n                hostedFormNonce: nonce,\n            };\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentRequestBody from './payment-request-body';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class PaymentRequestSender {\n    /**\n     * @constructor\n     * @param {BigpayClient} client\n     */\n    constructor(\n        private _client: any\n    ) {}\n\n    submitPayment(payload: PaymentRequestBody): Promise<Response<any>> {\n        return new Promise((resolve, reject) => {\n            this._client.submitPayment(payload, (error: any, response: any) => {\n                if (error) {\n                    reject(this._transformResponse(error));\n                } else {\n                    resolve(this._transformResponse(response));\n                }\n            });\n        });\n    }\n\n    initializeOffsitePayment(payload: PaymentRequestBody, target?: string): Promise<void> {\n        return new Promise(() => {\n            this._client.initializeOffsitePayment(payload, null, target);\n        });\n    }\n\n    private _transformResponse(response: any): Response<any> {\n        return {\n            headers: response.headers,\n            body: response.data,\n            status: response.status,\n            statusText: response.statusText,\n        };\n    }\n}\n","export default function isPrivate(key: string): boolean {\n    return `${key}`.indexOf('$$') === 0 || `${key}`.indexOf('_') === 0;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\n/**\n * Throw this error if there is an unexpected error and it is not possible to\n * recover from unless the shopper creates a new checkout session.\n */\nexport default class UnrecoverableError<T = any> extends RequestError {\n    constructor(response: Response<T>, message?: string) {\n        super(response, {\n            message: message || 'An unexpected error has occurred. The checkout process cannot continue as a result.',\n        });\n\n        this.name = 'UnrecoverableError';\n        this.type = 'unrecoverable';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromInternalErrorResponse(\n    response: Response<InternalErrorResponseBody>,\n    message?: string\n): RequestError {\n    const { body } = response;\n    const { errors = [] } = body;\n\n    return new RequestError(response, {\n        message: joinErrors(errors) || body.detail || body.title || message,\n        errors: errors.length ?\n            errors.map(message => ({ code: body.type, message })) :\n            [{ code: body.type, message: body.detail || body.title }],\n    });\n}\n\nfunction joinErrors(errors: string[]): string | undefined {\n    return errors.reduce((result: string[], error) => {\n        if (error) {\n            return [...result, error];\n        }\n\n        return result;\n    }, []).join(' ');\n}\n","import { Response } from '@bigcommerce/request-sender';\nimport { last } from 'lodash';\n\nimport ErrorResponseBody, { InternalErrorResponseBody, StorefrontErrorResponseBody } from './error-response-body';\nimport { mapFromInternalErrorResponse, mapFromPaymentErrorResponse, mapFromStorefrontErrorResponse, RequestError, TimeoutError } from './errors';\n\nexport default class RequestErrorFactory {\n    private _factoryMethods: { [key: string]: ErrorFactoryMethod } = {};\n\n    constructor() {\n        this.register('default', (response, message) => new RequestError(response, { message }));\n        this.register('internal', (response, message) => mapFromInternalErrorResponse(response, message));\n        this.register('storefront', (response, message) => mapFromStorefrontErrorResponse(response, message));\n        this.register('payment', (response, message) => mapFromPaymentErrorResponse(response, message));\n        this.register('timeout', response => new TimeoutError(response));\n    }\n\n    register(type: string, factoryMethod: ErrorFactoryMethod): void {\n        this._factoryMethods[type] = factoryMethod;\n    }\n\n    createError(response: Response<any>, message?: string): RequestError {\n        const factoryMethod = this._factoryMethods[this._getType(response)] || this._factoryMethods.default;\n\n        return factoryMethod(response, message);\n    }\n\n    private _getType(response: Response<ErrorResponseBody>): string {\n        if (response.status === 0) {\n            return 'timeout';\n        }\n\n        if (this._isStorefrontErrorResponseBody(response.body)) {\n            return 'storefront';\n        }\n\n        if (this._isInternalErrorResponseBody(response.body)) {\n            const internalType = last(response.body.type.split('/'));\n\n            return internalType && this._factoryMethods[internalType] ?\n                internalType :\n                'internal';\n        }\n\n        const error = last(response.body && response.body.errors);\n\n        if (error && error.code && this._factoryMethods[error.code]) {\n            return error.code;\n        }\n\n        return 'payment';\n    }\n\n    private _isStorefrontErrorResponseBody(\n        errorResponse: ErrorResponseBody\n    ): errorResponse is StorefrontErrorResponseBody {\n        const storefrontErrorResponse = errorResponse as StorefrontErrorResponseBody;\n\n        return !this._isInternalErrorResponseBody(errorResponse) &&\n            typeof storefrontErrorResponse.title === 'string' &&\n            typeof storefrontErrorResponse.type === 'string' &&\n            typeof storefrontErrorResponse.status === 'number' &&\n            typeof storefrontErrorResponse.detail === 'string';\n    }\n\n    private _isInternalErrorResponseBody(\n        errorResponse: ErrorResponseBody\n    ): errorResponse is InternalErrorResponseBody {\n        const internalErrorResponse = errorResponse as InternalErrorResponseBody;\n\n        return typeof internalErrorResponse.errors === 'object' &&\n            typeof internalErrorResponse.title === 'string' &&\n            typeof internalErrorResponse.type === 'string' &&\n            typeof internalErrorResponse.status === 'number';\n    }\n}\n\nexport type ErrorFactoryMethod<T = any> = (response: Response<T>, message?: string) => RequestError;\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { StorefrontErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromStorefrontErrorResponse(\n    response: Response<StorefrontErrorResponseBody>,\n    message?: string\n): RequestError<StorefrontErrorResponseBody> {\n    const { body } = response;\n\n    return new RequestError(response, {\n        message: message || body.detail || body.title,\n        errors: [{\n            code: body.code || body.type,\n            message: body.detail || body.title,\n        }],\n    });\n}\n","import { Action } from '@bigcommerce/data-store';\n\nimport { omitDeep } from '../utility';\n\nimport { ClearErrorAction, ErrorActionType } from './error-actions';\n\nexport default function clearErrorReducer<TState extends { [key: string]: any }, TAction extends Action>(\n    state: TState,\n    action: TAction\n): TState | undefined {\n    if (isClearErrorAction(action)) {\n        return omitDeep(state, value => value === action.payload);\n    }\n\n    return state;\n}\n\nfunction isClearErrorAction(action: Action): action is ClearErrorAction {\n    return action.type === ErrorActionType.ClearError;\n}\n","import isEqual from './is-equal';\n\n/**\n * Replace the current value with a new value if the former is different to the\n * latter.\n */\nexport default function replace<T>(currentValue: T, newValue?: T): T {\n    if (newValue === undefined || isEqual(currentValue, newValue)) {\n        return currentValue;\n    }\n\n    return newValue;\n}\n","import isEqual from './is-equal';\n\n/**\n * Set a new value to an object under a key if the new value is different to the\n * current value of the key.\n */\nexport default function objectSet<T extends { [key: string]: any }, K extends keyof T>(\n    object: T | undefined,\n    key: K,\n    value: T[K]\n): T {\n    if (object && object.hasOwnProperty(key) && isEqual(object[key], value)) {\n        return object;\n    }\n\n    return {\n        ...object as any,\n        [key]: value,\n    };\n}\n","import BillingAddress from './billing-address';\n\nexport default interface BillingAddressState {\n    data?: BillingAddress;\n    errors: BillingAddressErrorsState;\n    statuses: BillingAddressStatusesState;\n}\n\nexport interface BillingAddressErrorsState {\n    loadError?: Error;\n    updateError?: Error;\n    continueAsGuestError?: Error;\n}\n\nexport interface BillingAddressStatusesState {\n    isLoading?: boolean;\n    isUpdating?: boolean;\n    isContinuingAsGuest?: boolean;\n}\n\nexport const DEFAULT_STATE: BillingAddressState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { objectSet, replace } from '../common/utility';\nimport { OrderAction, OrderActionType } from '../order';\nimport { SubscriptionsActionType, UpdateSubscriptionsAction } from '../subscription';\n\nimport BillingAddress from './billing-address';\nimport { BillingAddressAction, BillingAddressActionType } from './billing-address-actions';\nimport BillingAddressState, { BillingAddressErrorsState, BillingAddressStatusesState, DEFAULT_STATE } from './billing-address-state';\n\nexport default function billingAddressReducer(\n    state: BillingAddressState = DEFAULT_STATE,\n    action: Action\n): BillingAddressState {\n    const reducer = combineReducers<BillingAddressState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: BillingAddress | undefined,\n    action: CheckoutAction | BillingAddressAction | OrderAction\n): BillingAddress | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return replace(data, action.payload && action.payload.billingAddress);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: BillingAddressErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | BillingAddressAction | OrderAction | UpdateSubscriptionsAction\n): BillingAddressErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return objectSet(errors, 'updateError', undefined);\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n        return objectSet(errors, 'updateError', action.payload);\n\n    case SubscriptionsActionType.UpdateSubscriptionsRequested:\n    case SubscriptionsActionType.UpdateSubscriptionsSucceeded:\n    case BillingAddressActionType.ContinueAsGuestRequested:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return objectSet(errors, 'continueAsGuestError', undefined);\n\n    case SubscriptionsActionType.UpdateSubscriptionsFailed:\n    case BillingAddressActionType.ContinueAsGuestFailed:\n        return objectSet(errors, 'continueAsGuestError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: BillingAddressStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | BillingAddressAction | OrderAction | UpdateSubscriptionsAction\n): BillingAddressStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case BillingAddressActionType.UpdateBillingAddressRequested:\n        return objectSet(statuses, 'isUpdating', true);\n\n    case BillingAddressActionType.UpdateBillingAddressFailed:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n        return objectSet(statuses, 'isUpdating', false);\n\n    case BillingAddressActionType.ContinueAsGuestRequested:\n    case SubscriptionsActionType.UpdateSubscriptionsRequested:\n        return objectSet(statuses, 'isContinuingAsGuest', true);\n\n    case SubscriptionsActionType.UpdateSubscriptionsSucceeded:\n    case SubscriptionsActionType.UpdateSubscriptionsFailed:\n    case BillingAddressActionType.ContinueAsGuestFailed:\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n        return objectSet(statuses, 'isContinuingAsGuest', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { isArray } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\nimport objectMerge from './object-merge';\nimport replace from './replace';\n\nexport interface ArrayReplaceOptions {\n    matchObject(objectA: any, objectB: any): boolean;\n}\n\nfunction arrayReplace<T>(currentArray: T[] | undefined, newArray: T[], options?: ArrayReplaceOptions): T[];\nfunction arrayReplace<T>(currentArray: T[], newArray?: T[], options?: ArrayReplaceOptions): undefined;\nfunction arrayReplace<T>(currentArray?: T[], newArray?: T[], options?: ArrayReplaceOptions): T[] | undefined;\nfunction arrayReplace<T>(currentArray?: T[], newArray?: T[], options?: ArrayReplaceOptions): T[] | undefined {\n    const { matchObject = (a: any, b: any) => a.id !== undefined && a.id === b.id } = options || {};\n\n    // Return the new array if the current array does not exist\n    if (!currentArray) {\n        return newArray;\n    }\n\n    // If the new array does not exist, or the current array is strictly equal\n    // to the new array, exit early and return the current array so that the\n    // object reference doesn't change\n    if (!newArray || currentArray === newArray) {\n        return currentArray;\n    }\n\n    // Otherwise, try to replace the items of the current array with the new\n    // array. If the item from the two arrays are the same, keep the current\n    // one. Do it recursively until all arrays are replaced.\n    let sameAsCurrentCount = 0;\n    let sameAsNewCount = 0;\n\n    const countSameAsReplaced = <T>(replacedValue: T, currentValue: T, newValue: T): T => {\n        sameAsCurrentCount += replacedValue === currentValue ? 1 : 0;\n        sameAsNewCount += replacedValue === newValue ? 1 : 0;\n\n        return replacedValue;\n    };\n\n    const result = newArray.map((newItem, index) => {\n        const currentItem = currentArray && currentArray[index];\n\n        if (isPlainObject(currentItem) && isPlainObject(newItem)) {\n            if (matchObject(currentItem, newItem)) {\n                return countSameAsReplaced(\n                    objectMerge(currentItem, newItem),\n                    currentItem,\n                    newItem\n                );\n            }\n\n            return countSameAsReplaced(\n                replace(currentItem, newItem),\n                currentItem,\n                newItem\n            );\n        }\n\n        if (isArray(currentItem) && isArray(newItem)) {\n            return countSameAsReplaced(\n                arrayReplace(currentItem, newItem),\n                currentItem,\n                newItem\n            );\n        }\n\n        return countSameAsReplaced(\n            replace(currentItem, newItem),\n            currentItem,\n            newItem\n        );\n    }) as T[];\n\n    // If all items in the result are identical to the current array, and the\n    // current array and the new array have the same size, simply return the\n    // current array instead of the result.\n    if (sameAsCurrentCount === newArray.length && (currentArray && currentArray.length === newArray.length)) {\n        return currentArray;\n    }\n\n    // If all items in the result are identical to the new array, simply return\n    // the new array.\n    if (sameAsNewCount === newArray.length) {\n        return newArray;\n    }\n\n    return result;\n}\n\nexport default arrayReplace;\n","import { isArray } from 'lodash';\n\nimport arrayReplace from './array-replace';\nimport isPlainObject from './is-plain-object';\nimport objectSet from './object-set';\n\nfunction objectMerge<T extends object>(currentObject: T, newObject?: Partial<T>): T;\nfunction objectMerge<T extends object>(currentObject: T | undefined, newObject: Partial<T>): Partial<T>;\nfunction objectMerge<T extends object>(currentObject?: T, newObject?: Partial<T>): T | undefined;\nfunction objectMerge<T extends object>(currentObject?: T, newObject?: Partial<T>): T | Partial<T> | undefined {\n    if (!currentObject) {\n        return newObject;\n    }\n\n    // If the new object does not exist but the current object does, or the new\n    // object is strictly equal to the current object, return the current object\n    if (!newObject || currentObject === newObject) {\n        return currentObject;\n    }\n\n    // If both objects exist, but some values might be different, perform a merge.\n    // Retain values that are equal and only replace them with the new values if\n    // they are different.\n    return (Object.keys(newObject) as Array<keyof T>)\n        .reduce((result, key) => {\n            const currentValue = result[key];\n            const newValue = newObject[key];\n\n            if (isPlainObject(currentValue) && isPlainObject(newValue)) {\n                return objectSet(result, key, objectMerge(currentValue, newValue));\n            }\n\n            if (isArray(currentValue) && isArray(newValue)) {\n                return objectSet(result, key, arrayReplace(currentValue, newValue) as any);\n            }\n\n            return objectSet(result, key, newValue as any);\n        }, currentObject);\n}\n\nexport default objectMerge;\n","import Cart from './cart';\n\nexport default interface CartState {\n    data?: Cart;\n    errors: CartErrorsState;\n    statuses: CartStatusesState;\n}\n\nexport interface CartErrorsState {\n    loadError?: Error;\n}\n\nexport interface CartStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: CartState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing';\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType, GiftCertificateAction, GiftCertificateActionType } from '../coupon';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport Cart from './cart';\nimport CartState, { CartErrorsState, CartStatusesState, DEFAULT_STATE } from './cart-state';\n\nexport default function cartReducer(\n    state: CartState = DEFAULT_STATE,\n    action: Action\n): CartState {\n    const reducer = combineReducers<CartState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Cart | undefined,\n    action: BillingAddressAction | CheckoutAction | ConsignmentAction | CouponAction | GiftCertificateAction\n): Cart | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return objectMerge(data, action.payload && action.payload.cart);\n\n    default:\n        return data;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CartStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction\n): CartStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n\nfunction errorsReducer(\n    errors: CartErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction\n): CartErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n","import { CheckoutButtonMethodType } from './strategies';\n\nexport default interface CheckoutButtonState {\n    data: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonDataState | undefined\n    };\n    errors: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonErrorsState | undefined\n    };\n    statuses: {\n        [key in CheckoutButtonMethodType]?: CheckoutButtonStatusesState | undefined\n    };\n}\n\nexport interface CheckoutButtonDataState {\n    initializedContainers: {\n        [key: string]: boolean;\n    };\n}\n\nexport interface CheckoutButtonErrorsState {\n    initializeError?: Error;\n    deinitializeError?: Error;\n}\n\nexport interface CheckoutButtonStatusesState {\n    isInitializing?: boolean;\n    isDeinitializing?: boolean;\n}\n\nexport const DEFAULT_STATE: CheckoutButtonState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport { CheckoutButtonAction, CheckoutButtonActionType } from './checkout-button-actions';\nimport CheckoutButtonState, { CheckoutButtonDataState, CheckoutButtonErrorsState, CheckoutButtonStatusesState, DEFAULT_STATE } from './checkout-button-state';\n\nconst DEFAULT_DATA_STATE: CheckoutButtonDataState = { initializedContainers: {} };\nconst DEFAULT_ERROR_STATE: CheckoutButtonErrorsState = {};\nconst DEFAULT_STATUS_STATE: CheckoutButtonStatusesState = {};\n\nexport default function checkoutButtonReducer(\n    state: CheckoutButtonState = DEFAULT_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<CheckoutButtonState>({\n        data: combineReducers({\n            [action.meta.methodId]: dataReducer,\n        }),\n        errors: combineReducers({\n            [action.meta.methodId]: errorsReducer,\n        }),\n        statuses: combineReducers({\n            [action.meta.methodId]: statusesReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CheckoutButtonDataState = DEFAULT_DATA_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonDataState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        if (!action.meta || !action.meta.containerId) {\n            return data;\n        }\n\n        return objectMerge(data, {\n            initializedContainers: {\n                [action.meta.containerId]: true,\n            },\n        });\n\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(data, 'initializedContainers', {});\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: CheckoutButtonErrorsState = DEFAULT_ERROR_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonErrorsState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return objectSet(errors, 'initializeError', undefined);\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n        return objectSet(errors, 'initializeError', action.payload);\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(errors, 'deinitializeError', undefined);\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n        return objectSet(errors, 'deinitializeError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutButtonStatusesState = DEFAULT_STATUS_STATE,\n    action: CheckoutButtonAction\n): CheckoutButtonStatusesState {\n    switch (action.type) {\n    case CheckoutButtonActionType.InitializeButtonRequested:\n        return objectSet(statuses, 'isInitializing', true);\n\n    case CheckoutButtonActionType.InitializeButtonFailed:\n    case CheckoutButtonActionType.InitializeButtonSucceeded:\n        return objectSet(statuses, 'isInitializing', false);\n\n    case CheckoutButtonActionType.DeinitializeButtonRequested:\n        return objectSet(statuses, 'isDeinitializing', true);\n\n    case CheckoutButtonActionType.DeinitializeButtonFailed:\n    case CheckoutButtonActionType.DeinitializeButtonSucceeded:\n        return objectSet(statuses, 'isDeinitializing', false);\n\n    default:\n        return statuses;\n    }\n}\n","import Config from './config';\n\nexport default interface ConfigState {\n    data?: Config;\n    meta?: ConfigMetaState;\n    errors: ConfigErrorsState;\n    statuses: ConfigStatusesState;\n}\n\nexport interface ConfigMetaState {\n    externalSource?: string;\n    variantIdentificationToken?: string;\n}\n\nexport interface ConfigErrorsState {\n    loadError?: Error;\n}\n\nexport interface ConfigStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: ConfigState = {\n    meta: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport Config from './config';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\nimport ConfigState, { ConfigErrorsState, ConfigStatusesState, DEFAULT_STATE } from './config-state';\n\nexport default function configReducer(\n    state: ConfigState = DEFAULT_STATE,\n    action: Action\n): ConfigState {\n    const reducer = combineReducers<ConfigState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Config | undefined,\n    action: LoadConfigAction\n): Config | undefined {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConfigErrorsState = DEFAULT_STATE.errors,\n    action: LoadConfigAction\n): ConfigErrorsState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case ConfigActionType.LoadConfigFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConfigStatusesState = DEFAULT_STATE.statuses,\n    action: LoadConfigAction\n): ConfigStatusesState {\n    switch (action.type) {\n    case ConfigActionType.LoadConfigRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ConfigActionType.LoadConfigSucceeded:\n    case ConfigActionType.LoadConfigFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nimport Coupon from './coupon';\n\nexport default interface CouponState {\n    data?: Coupon[];\n    errors: CouponErrorsState;\n    statuses: CouponStatusesState;\n}\n\nexport interface CouponErrorsState {\n    applyCouponError?: RequestError<StorefrontErrorResponseBody>;\n    removeCouponError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface CouponStatusesState {\n    isApplyingCoupon?: boolean;\n    isRemovingCoupon?: boolean;\n}\n\nexport const DEFAULT_STATE: CouponState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { OrderAction, OrderActionType } from '../order';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport Coupon from './coupon';\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport CouponState, { CouponErrorsState, CouponStatusesState, DEFAULT_STATE } from './coupon-state';\n\nexport default function couponReducer(\n    state: CouponState = DEFAULT_STATE,\n    action: Action\n): CouponState {\n    const reducer = combineReducers<CouponState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Coupon[] | undefined,\n    action: CouponAction | CheckoutAction | OrderAction | ConsignmentAction\n): Coupon[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case OrderActionType.LoadOrderSucceeded:\n        return arrayReplace(data, action.payload && action.payload.coupons);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CouponErrorsState = {},\n    action: CouponAction\n): CouponErrorsState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n    case CouponActionType.ApplyCouponSucceeded:\n        return objectSet(errors, 'applyCouponError', undefined);\n\n    case CouponActionType.ApplyCouponFailed:\n        return objectSet(errors, 'applyCouponError', action.payload);\n\n    case CouponActionType.RemoveCouponRequested:\n    case CouponActionType.RemoveCouponSucceeded:\n        return objectSet(errors, 'removeCouponError', undefined);\n\n    case CouponActionType.RemoveCouponFailed:\n        return objectSet(errors, 'removeCouponError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CouponStatusesState = {},\n    action: CouponAction\n): CouponStatusesState {\n    switch (action.type) {\n    case CouponActionType.ApplyCouponRequested:\n        return objectSet(statuses, 'isApplyingCoupon', true);\n\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.ApplyCouponFailed:\n        return objectSet(statuses, 'isApplyingCoupon', false);\n\n    case CouponActionType.RemoveCouponRequested:\n        return objectSet(statuses, 'isRemovingCoupon', true);\n\n    case CouponActionType.RemoveCouponSucceeded:\n    case CouponActionType.RemoveCouponFailed:\n        return objectSet(statuses, 'isRemovingCoupon', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nimport GiftCertificate from './gift-certificate';\n\nexport default interface GiftCertificateState {\n    data?: GiftCertificate[];\n    errors: GiftCertificateErrorsState;\n    statuses: GiftCertificateStatusesState;\n}\n\nexport interface GiftCertificateErrorsState {\n    applyGiftCertificateError?: RequestError<StorefrontErrorResponseBody>;\n    removeGiftCertificateError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface GiftCertificateStatusesState {\n    isApplyingGiftCertificate?: boolean;\n    isRemovingGiftCertificate?: boolean;\n}\n\nexport const DEFAULT_STATE: GiftCertificateState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\n\nimport { CouponAction, CouponActionType } from './coupon-actions';\nimport GiftCertificate from './gift-certificate';\nimport { GiftCertificateAction, GiftCertificateActionType } from './gift-certificate-actions';\nimport GiftCertificateState, { DEFAULT_STATE, GiftCertificateErrorsState, GiftCertificateStatusesState } from './gift-certificate-state';\n\nexport default function giftCertificateReducer(\n    state: GiftCertificateState = DEFAULT_STATE,\n    action: Action\n): GiftCertificateState {\n    const reducer = combineReducers<GiftCertificateState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: GiftCertificate[] | undefined,\n    action: CheckoutAction | GiftCertificateAction | ConsignmentAction | CouponAction\n): GiftCertificate[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return arrayReplace(data, action.payload && action.payload.giftCertificates);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: GiftCertificateErrorsState = DEFAULT_STATE.errors,\n    action: GiftCertificateAction\n): GiftCertificateErrorsState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n        return objectSet(errors, 'applyGiftCertificateError', undefined);\n\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return objectSet(errors, 'applyGiftCertificateError', action.payload);\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n        return objectSet(errors, 'removeGiftCertificateError', undefined);\n\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return objectSet(errors, 'removeGiftCertificateError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: GiftCertificateStatusesState = DEFAULT_STATE.statuses,\n    action: GiftCertificateAction\n): GiftCertificateStatusesState {\n    switch (action.type) {\n    case GiftCertificateActionType.ApplyGiftCertificateRequested:\n        return objectSet(statuses, 'isApplyingGiftCertificate', true);\n\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateFailed:\n        return objectSet(statuses, 'isApplyingGiftCertificate', false);\n\n    case GiftCertificateActionType.RemoveGiftCertificateRequested:\n        return objectSet(statuses, 'isRemovingGiftCertificate', true);\n\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateFailed:\n        return objectSet(statuses, 'isRemovingGiftCertificate', false);\n\n    default:\n        return statuses;\n    }\n}\n","import Customer from './customer';\n\nexport default interface CustomerState {\n    data?: Customer;\n    statuses: CustomerStatusesState;\n    errors: CustomerErrorsState;\n}\n\nexport interface CustomerErrorsState {\n    createError?: Error;\n    createAddressError?: Error;\n}\n\nexport interface CustomerStatusesState {\n    isCreating?: boolean;\n    isCreatingAddress?: boolean;\n}\n\nexport const DEFAULT_STATE: CustomerState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers } from '@bigcommerce/data-store';\n\nimport { BillingAddressActionType, ContinueAsGuestAction } from '../billing';\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport Customer from './customer';\nimport { CustomerAction, CustomerActionType } from './customer-actions';\nimport CustomerState, { CustomerErrorsState, CustomerStatusesState, DEFAULT_STATE } from './customer-state';\n\nexport default function customerReducer(\n    state: CustomerState = DEFAULT_STATE,\n    action: CheckoutAction | ContinueAsGuestAction | CustomerAction\n): CustomerState {\n    const reducer = combineReducers<CustomerState, CheckoutAction | CustomerAction | ContinueAsGuestAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Customer | undefined,\n    action: CheckoutAction | ContinueAsGuestAction | CustomerAction\n): Customer | undefined {\n    switch (action.type) {\n    case BillingAddressActionType.ContinueAsGuestSucceeded:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectMerge(data, action.payload && action.payload.customer);\n\n    case CustomerActionType.CreateCustomerAddressSucceeded:\n            return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CustomerErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | ContinueAsGuestAction | CustomerAction\n): CustomerErrorsState {\n    switch (action.type) {\n    case CustomerActionType.CreateCustomerRequested:\n    case CustomerActionType.CreateCustomerSucceeded:\n        return objectSet(errors, 'createError', undefined);\n\n    case CustomerActionType.CreateCustomerFailed:\n        return objectSet(errors, 'createError', action.payload);\n\n    case CustomerActionType.CreateCustomerAddressRequested:\n    case CustomerActionType.CreateCustomerAddressSucceeded:\n        return objectSet(errors, 'createAddressError', undefined);\n\n    case CustomerActionType.CreateCustomerAddressFailed:\n        return objectSet(errors, 'createAddressError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CustomerStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | ContinueAsGuestAction | CustomerAction\n): CustomerStatusesState {\n    switch (action.type) {\n    case CustomerActionType.CreateCustomerRequested:\n        return objectSet(statuses, 'isCreating', true);\n\n    case CustomerActionType.CreateCustomerFailed:\n    case CustomerActionType.CreateCustomerSucceeded:\n        return objectSet(statuses, 'isCreating', false);\n\n    case CustomerActionType.CreateCustomerAddressRequested:\n        return objectSet(statuses, 'isCreatingAddress', true);\n\n    case CustomerActionType.CreateCustomerAddressFailed:\n    case CustomerActionType.CreateCustomerAddressSucceeded:\n        return objectSet(statuses, 'isCreatingAddress', false);\n    default:\n        return statuses;\n    }\n}\n","export default interface CustomerStrategyState {\n    data: CustomerStrategyDataState;\n    errors: CustomerStrategyErrorsState;\n    statuses: CustomerStrategyStatusesState;\n}\n\nexport interface CustomerStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface CustomerStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    signInError?: Error;\n    signInMethodId?: string;\n    signOutError?: Error;\n    signOutMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface CustomerStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isSigningIn?: boolean;\n    isSigningOut?: boolean;\n    signInMethodId?: string;\n    signOutMethodId?: string;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: CustomerStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { CustomerStrategyAction, CustomerStrategyActionType } from './customer-strategy-actions';\nimport CustomerStrategyState, { CustomerStrategyDataState, CustomerStrategyErrorsState, CustomerStrategyStatusesState, DEFAULT_STATE } from './customer-strategy-state';\n\nexport default function customerStrategyReducer(\n    state: CustomerStrategyState = DEFAULT_STATE,\n    action: Action\n): CustomerStrategyState {\n    const reducer = combineReducers<CustomerStrategyState, CustomerStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CustomerStrategyDataState = DEFAULT_STATE.data,\n    action: CustomerStrategyAction\n): CustomerStrategyDataState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: CustomerStrategyErrorsState = DEFAULT_STATE.errors,\n    action: CustomerStrategyAction\n): CustomerStrategyErrorsState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignInRequested:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return objectMerge(errors, {\n            signInError: undefined,\n            signInMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignInFailed:\n        return objectMerge(errors, {\n            signInError: action.payload,\n            signInMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignOutRequested:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return objectMerge(errors, {\n            signOutError: undefined,\n            signOutMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignOutFailed:\n        return objectMerge(errors, {\n            signOutError: action.payload,\n            signOutMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n        return objectMerge(errors, {\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(errors, {\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CustomerStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: CustomerStrategyAction\n): CustomerStrategyStatusesState {\n    switch (action.type) {\n    case CustomerStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.InitializeFailed:\n    case CustomerStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.DeinitializeFailed:\n    case CustomerStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignInRequested:\n        return objectMerge(statuses, {\n            isSigningIn: true,\n            signInMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignInFailed:\n    case CustomerStrategyActionType.SignInSucceeded:\n        return objectMerge(statuses, {\n            isSigningIn: false,\n            signInMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.SignOutRequested:\n        return objectMerge(statuses, {\n            isSigningOut: true,\n            signOutMethodId: action.meta && action.meta.methodId,\n        });\n\n    case CustomerStrategyActionType.SignOutFailed:\n    case CustomerStrategyActionType.SignOutSucceeded:\n        return objectMerge(statuses, {\n            isSigningOut: false,\n            signOutMethodId: undefined,\n        });\n\n    case CustomerStrategyActionType.WidgetInteractionStarted:\n        return objectMerge(statuses, {\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta.methodId,\n         });\n\n    case CustomerStrategyActionType.WidgetInteractionFinished:\n    case CustomerStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(statuses, {\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n         });\n\n    default:\n        return statuses;\n    }\n}\n","import { FormFields } from './form-field';\n\nexport default interface FormFieldsState {\n    data?: FormFields;\n    errors: FormFieldsErrorState;\n    statuses: FormFieldsStatusesState;\n}\n\nexport interface FormFieldsErrorState {\n    loadError?: Error;\n}\n\nexport interface FormFieldsStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: FormFieldsState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport { FormFields } from './form-field';\nimport { FormFieldsActionType, LoadFormFieldsAction } from './form-fields-actions';\nimport FormFieldsState, { DEFAULT_STATE, FormFieldsErrorState, FormFieldsStatusesState } from './form-fields-state';\n\nexport default function formFieldsReducer(\n    state: FormFieldsState = DEFAULT_STATE,\n    action: Action\n): FormFieldsState {\n    const reducer = combineReducers<FormFieldsState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: FormFields | undefined,\n    action: LoadFormFieldsAction\n): FormFields | undefined {\n    switch (action.type) {\n    case FormFieldsActionType.LoadFormFieldsSucceeded:\n        return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: FormFieldsErrorState = DEFAULT_STATE.errors,\n    action: LoadFormFieldsAction\n): FormFieldsErrorState {\n    switch (action.type) {\n    case FormFieldsActionType.LoadFormFieldsSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case FormFieldsActionType.LoadFormFieldsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: FormFieldsStatusesState = DEFAULT_STATE.statuses,\n    action: LoadFormFieldsAction\n): FormFieldsStatusesState {\n    switch (action.type) {\n    case FormFieldsActionType.LoadFormFieldsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case FormFieldsActionType.LoadFormFieldsSucceeded:\n    case FormFieldsActionType.LoadFormFieldsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import Country from './country';\n\nexport default interface CountryState {\n    data?: Country[];\n    errors: CountryErrorsState;\n    statuses: CountryStatusesState;\n}\n\nexport interface CountryErrorsState {\n    loadError?: Error;\n}\n\nexport interface CountryStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: CountryState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\n\nimport Country from './country';\nimport { CountryActionType, LoadCountriesAction } from './country-actions';\nimport CountryState, { CountryErrorsState, CountryStatusesState, DEFAULT_STATE } from './country-state';\n\nexport default function countryReducer(\n    state: CountryState = DEFAULT_STATE,\n    action: Action\n): CountryState {\n    const reducer = combineReducers<CountryState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Country[] | undefined,\n    action: LoadCountriesAction\n): Country[] | undefined {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesSucceeded:\n        return arrayReplace(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CountryErrorsState = DEFAULT_STATE.errors,\n    action: LoadCountriesAction\n): CountryErrorsState {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesRequested:\n    case CountryActionType.LoadCountriesSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CountryActionType.LoadCountriesFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CountryStatusesState = DEFAULT_STATE.statuses,\n    action: LoadCountriesAction\n): CountryStatusesState {\n    switch (action.type) {\n    case CountryActionType.LoadCountriesRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CountryActionType.LoadCountriesSucceeded:\n    case CountryActionType.LoadCountriesFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { Omit } from '../common/types';\n\nimport { InternalOrderMeta, InternalOrderPayment } from './internal-order';\nimport Order from './order';\n\nexport default interface OrderState {\n    data?: OrderDataState;\n    meta?: OrderMetaState;\n    errors: OrderErrorsState;\n    statuses: OrderStatusesState;\n}\n\nexport type OrderDataState = Omit<Order, 'billingAddress' | 'coupons'>;\n\nexport interface OrderMetaState extends InternalOrderMeta {\n    token?: string;\n    orderToken?: string;\n    callbackUrl?: string;\n    payment?: InternalOrderPayment;\n}\n\nexport interface OrderErrorsState {\n    loadError?: Error;\n    submitError?: Error;\n    finalizeError?: Error;\n}\n\nexport interface OrderStatusesState {\n    isLoading?: boolean;\n    isSubmitting?: boolean;\n    isFinalizing?: boolean;\n}\n\nexport const DEFAULT_STATE: OrderState = {\n    errors: {},\n    meta: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport { OrderAction, OrderActionType } from './order-actions';\nimport OrderState, { DEFAULT_STATE, OrderDataState, OrderErrorsState, OrderMetaState, OrderStatusesState } from './order-state';\n\nexport default function orderReducer(\n    state: OrderState = DEFAULT_STATE,\n    action: Action\n): OrderState {\n    const reducer = combineReducers<OrderState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: OrderDataState | undefined,\n    action: OrderAction\n): OrderDataState | undefined {\n    switch (action.type) {\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n        return objectMerge(data, omit(action.payload, ['billingAddress', 'coupons'])) as OrderDataState;\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: OrderMetaState | undefined,\n    action: OrderAction\n): OrderMetaState | undefined {\n    switch (action.type) {\n    case OrderActionType.FinalizeOrderSucceeded:\n    case OrderActionType.SubmitOrderSucceeded:\n        return objectMerge(meta, {\n            ...action.meta,\n            callbackUrl: action.payload && action.payload.order.callbackUrl,\n            orderToken: action.payload && action.payload.order.token,\n            payment: action.payload && action.payload.order && action.payload.order.payment,\n        });\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: OrderErrorsState = DEFAULT_STATE.errors,\n    action: OrderAction\n): OrderErrorsState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return objectSet(errors, 'loadError', undefined);\n\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: OrderStatusesState = DEFAULT_STATE.statuses,\n    action: OrderAction\n): OrderStatusesState {\n    switch (action.type) {\n    case OrderActionType.LoadOrderRequested:\n    case OrderActionType.LoadOrderPaymentsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case OrderActionType.LoadOrderSucceeded:\n    case OrderActionType.LoadOrderFailed:\n    case OrderActionType.LoadOrderPaymentsSucceeded:\n    case OrderActionType.LoadOrderPaymentsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { PaymentAction, PaymentActionType } from './payment-actions';\nimport PaymentResponseBody from './payment-response-body';\nimport PaymentState from './payment-state';\n\nexport default function paymentReducer(state: PaymentState = {}, action: PaymentAction): PaymentState {\n    const reducer = combineReducers<PaymentState, PaymentAction>({\n        data: dataReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(data: PaymentResponseBody | undefined, action: PaymentAction): PaymentResponseBody | undefined {\n    switch (action.type) {\n    case PaymentActionType.SubmitPaymentSucceeded:\n        return action.payload;\n\n    default:\n        return data;\n    }\n}\n","import PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\n\nexport default interface PaymentMethodState {\n    data?: PaymentMethod[];\n    meta?: PaymentMethodMeta;\n    errors: PaymentMethodErrorsState;\n    statuses: PaymentMethodStatusesState;\n}\n\nexport interface PaymentMethodErrorsState {\n    loadMethodId?: string;\n    loadError?: Error;\n    loadMethodError?: Error;\n}\n\nexport interface PaymentMethodStatusesState {\n    loadMethodId?: string;\n    isLoading?: boolean;\n    isLoadingMethod?: boolean;\n}\n\nexport const DEFAULT_STATE: PaymentMethodState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, mergeOrPush, objectMerge, objectSet } from '../common/utility';\n\nimport PaymentMethod from './payment-method';\nimport { PaymentMethodAction, PaymentMethodActionType } from './payment-method-actions';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState, { DEFAULT_STATE, PaymentMethodErrorsState, PaymentMethodStatusesState } from './payment-method-state';\n\nexport default function paymentMethodReducer(\n    state: PaymentMethodState = DEFAULT_STATE,\n    action: Action\n): PaymentMethodState {\n    const reducer = combineReducers<PaymentMethodState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentMethod[] | undefined,\n    action: PaymentMethodAction\n): PaymentMethod[] | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return mergeOrPush(data || [], action.payload, action.payload && {\n            id: action.payload.id,\n            gateway: action.payload.gateway,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return arrayReplace(data, action.payload, {\n            matchObject: (methodA, methodB) => (\n                methodA.id === methodB.id && methodA.gateway === methodB.gateway\n            ),\n        });\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: PaymentMethodMeta | undefined,\n    action: PaymentMethodAction\n): PaymentMethodMeta | undefined {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return objectMerge(meta, action.meta);\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: PaymentMethodErrorsState = DEFAULT_STATE.errors,\n    action: PaymentMethodAction\n): PaymentMethodErrorsState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n        return objectMerge(errors, {\n            loadMethodId: undefined,\n            loadMethodError: undefined,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return objectMerge(errors, {\n            loadMethodId: action.meta.methodId,\n            loadMethodError: action.payload,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentMethodStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentMethodAction\n): PaymentMethodStatusesState {\n    switch (action.type) {\n    case PaymentMethodActionType.LoadPaymentMethodsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case PaymentMethodActionType.LoadPaymentMethodsSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case PaymentMethodActionType.LoadPaymentMethodRequested:\n        return objectMerge(statuses, {\n            isLoadingMethod: true,\n            loadMethodId: action.meta.methodId,\n        });\n\n    case PaymentMethodActionType.LoadPaymentMethodSucceeded:\n    case PaymentMethodActionType.LoadPaymentMethodFailed:\n        return objectMerge(statuses, {\n            isLoadingMethod: false,\n            loadMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { findIndex, pick, pickBy, ValueKeyIteratee } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\nimport objectMerge from './object-merge';\n\n/**\n * Push an item to an array if it doesn't exist in the array. Otherwise, merge\n * with the existing item in the array. This function always returns a new array.\n */\nexport default function mergeOrPush<T>(\n    array: T[],\n    item?: T,\n    predicate?: ValueKeyIteratee<T>\n): T[] {\n    if (!item) {\n        return array;\n    }\n\n    const defaultPredicate = pick(item, 'id');\n    const index = findIndex(array, typeof predicate === 'object' ? pickBy(predicate) : (predicate || defaultPredicate));\n    const newArray = [...array];\n\n    if (index === -1) {\n        newArray.push(item);\n    } else {\n        const existingItem = array[index];\n\n        newArray[index] = isPlainObject(existingItem) && isPlainObject(item) ?\n            objectMerge(existingItem, item) :\n            item;\n    }\n\n    return newArray;\n}\n","export default interface PaymentStrategyState {\n    data: PaymentStrategyDataState;\n    errors: PaymentStrategyErrorsState;\n    statuses: PaymentStrategyStatusesState;\n}\n\nexport interface PaymentStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface PaymentStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    executeError?: Error;\n    executeMethodId?: string;\n    finalizeError?: Error;\n    finalizeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface PaymentStrategyStatusesState {\n    deinitializeMethodId?: string;\n    executeMethodId?: string;\n    finalizeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isExecuting?: boolean;\n    isFinalizing?: boolean;\n    isInitializing?: boolean;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: PaymentStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { PaymentStrategyAction, PaymentStrategyActionType } from './payment-strategy-actions';\nimport PaymentStrategyState, { DEFAULT_STATE, PaymentStrategyDataState, PaymentStrategyErrorsState, PaymentStrategyStatusesState } from './payment-strategy-state';\n\nexport default function paymentStrategyReducer(\n    state: PaymentStrategyState = DEFAULT_STATE,\n    action: Action\n): PaymentStrategyState {\n    const reducer = combineReducers<PaymentStrategyState, PaymentStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentStrategyDataState = DEFAULT_STATE.data,\n    action: PaymentStrategyAction\n): PaymentStrategyDataState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: PaymentStrategyErrorsState = DEFAULT_STATE.errors,\n    action: PaymentStrategyAction\n): PaymentStrategyErrorsState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.ExecuteRequested:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return objectMerge(errors, {\n            executeError: undefined,\n            executeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.ExecuteFailed:\n        return objectMerge(errors, {\n            executeError: action.payload,\n            executeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.FinalizeRequested:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return objectMerge(errors, {\n            finalizeError: undefined,\n            finalizeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.FinalizeFailed:\n        return objectMerge(errors, {\n            finalizeError: action.payload,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n        return objectMerge(errors, {\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(errors, {\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: PaymentStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: PaymentStrategyAction\n): PaymentStrategyStatusesState {\n    switch (action.type) {\n    case PaymentStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.InitializeFailed:\n    case PaymentStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.DeinitializeFailed:\n    case PaymentStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.ExecuteRequested:\n        return objectMerge(statuses, {\n            isExecuting: true,\n            executeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.ExecuteFailed:\n    case PaymentStrategyActionType.ExecuteSucceeded:\n        return objectMerge(statuses, {\n            isExecuting: false,\n            executeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.FinalizeRequested:\n        return objectMerge(statuses, {\n            isFinalizing: true,\n            finalizeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.FinalizeFailed:\n    case PaymentStrategyActionType.FinalizeSucceeded:\n        return objectMerge(statuses, {\n            isFinalizing: false,\n            finalizeMethodId: undefined,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionStarted:\n        return objectMerge(statuses, {\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta.methodId,\n        });\n\n    case PaymentStrategyActionType.WidgetInteractionFinished:\n    case PaymentStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(statuses, {\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import PaymentInstrument, { VaultAccessToken } from './instrument';\n\nexport default interface InstrumentState {\n    data?: PaymentInstrument[];\n    meta?: InstrumentMeta;\n    errors: InstrumentErrorState;\n    statuses: InstrumentStatusState;\n}\n\nexport interface InstrumentErrorState {\n    deleteError?: Error;\n    failedInstrument?: string;\n    loadError?: Error;\n    vaultError?: Error;\n}\n\nexport interface InstrumentStatusState {\n    isDeleting?: boolean;\n    isLoading?: boolean;\n    isVaulting?: boolean;\n    deletingInstrument?: string;\n}\n\nexport type InstrumentMeta = VaultAccessToken;\n\nexport const DEFAULT_STATE = {\n    data: [],\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../../common/error';\nimport { arrayReplace, objectMerge, objectSet } from '../../common/utility';\n\nimport PaymentInstrument from './instrument';\nimport { InstrumentAction, InstrumentActionType } from './instrument-actions';\nimport InstrumentState, { DEFAULT_STATE, InstrumentErrorState, InstrumentMeta, InstrumentStatusState } from './instrument-state';\n\nexport default function instrumentReducer(\n    state: InstrumentState = DEFAULT_STATE,\n    action: Action\n): InstrumentState {\n    const reducer = combineReducers<InstrumentState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        meta: metaReducer,\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: PaymentInstrument[] = DEFAULT_STATE.data,\n    action: InstrumentAction\n): PaymentInstrument[] {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n        return arrayReplace(data, action.payload && action.payload.vaultedInstruments || []);\n\n    default:\n        return data;\n    }\n}\n\nfunction metaReducer(\n    meta: InstrumentMeta | undefined,\n    action: InstrumentAction\n): InstrumentMeta | undefined {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n        return objectMerge(meta, action.meta);\n\n    default:\n        return meta;\n    }\n}\n\nfunction errorsReducer(\n    errors: InstrumentErrorState = DEFAULT_STATE.errors,\n    action: InstrumentAction\n): InstrumentErrorState {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsRequested:\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case InstrumentActionType.DeleteInstrumentRequested:\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n        return objectMerge(errors, {\n            deleteError: undefined,\n            failedInstrument: undefined,\n        });\n\n    case InstrumentActionType.LoadInstrumentsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case InstrumentActionType.DeleteInstrumentFailed:\n        return objectMerge(errors, {\n            deleteError: action.payload,\n            failedInstrument: action.meta.instrumentId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: InstrumentStatusState = DEFAULT_STATE.statuses,\n    action: InstrumentAction\n): InstrumentStatusState {\n    switch (action.type) {\n    case InstrumentActionType.LoadInstrumentsRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case InstrumentActionType.DeleteInstrumentRequested:\n        return objectMerge(statuses, {\n            isDeleting: true,\n            deletingInstrument: action.meta.instrumentId,\n        });\n\n    case InstrumentActionType.LoadInstrumentsSucceeded:\n    case InstrumentActionType.LoadInstrumentsFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case InstrumentActionType.DeleteInstrumentSucceeded:\n    case InstrumentActionType.DeleteInstrumentFailed:\n        return objectMerge(statuses, {\n            isDeleting: false,\n            deletingInstrument: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { AmazonPayRemoteCheckout } from './methods';\n\nexport default interface RemoteCheckoutState {\n    data: RemoteCheckoutStateData;\n}\n\nexport interface RemoteCheckoutStateData {\n    amazon?: AmazonPayRemoteCheckout;\n}\n\nexport const DEFAULT_STATE: RemoteCheckoutState = {\n    data: {},\n};\n","import { combineReducers } from '@bigcommerce/data-store';\n\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport RemoteCheckout from './remote-checkout';\nimport { RemoteCheckoutAction, RemoteCheckoutActionType } from './remote-checkout-actions';\nimport RemoteCheckoutState, { DEFAULT_STATE, RemoteCheckoutStateData } from './remote-checkout-state';\n\nexport default function remoteCheckoutReducer(\n    state: RemoteCheckoutState = DEFAULT_STATE,\n    action: RemoteCheckoutAction\n): RemoteCheckoutState {\n    if (!action.meta || !action.meta.methodId) {\n        return state;\n    }\n\n    const reducer = combineReducers<RemoteCheckoutState>({\n        data: combineReducers<RemoteCheckoutStateData>({\n            [action.meta.methodId]: dataReducer,\n        }),\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: RemoteCheckout,\n    action: RemoteCheckoutAction\n): RemoteCheckout {\n    switch (action.type) {\n    case RemoteCheckoutActionType.InitializeRemoteBillingSucceeded:\n        return objectSet(data, 'billing' as any, action.payload && action.payload.billing);\n\n    case RemoteCheckoutActionType.InitializeRemoteShippingSucceeded:\n        return objectSet(data, 'shipping' as any, action.payload && action.payload.shipping);\n\n    case RemoteCheckoutActionType.LoadRemoteSettingsSucceeded:\n        return objectSet(data, 'settings', action.payload);\n\n    case RemoteCheckoutActionType.UpdateRemoteCheckout:\n        return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n","import Consignment from './consignment';\n\nexport default interface ConsignmentState {\n    data?: Consignment[];\n    errors: ConsignmentErrorsState;\n    statuses: ConsignmentStatusesState;\n}\n\nexport interface ConsignmentErrorsState {\n    loadError?: Error;\n    loadShippingOptionsError?: Error;\n    createError?: Error;\n    updateError: { [key: string]: Error | undefined };\n    deleteError: { [key: string]: Error | undefined };\n    updateShippingOptionError: { [key: string]: Error | undefined };\n}\n\nexport interface ConsignmentStatusesState {\n    isLoading?: boolean;\n    isLoadingShippingOptions?: boolean;\n    isCreating?: boolean;\n    isUpdating: { [key: string]: boolean };\n    isDeleting: { [key: string]: boolean };\n    isUpdatingShippingOption: { [key: string]: boolean };\n}\n\nexport const DEFAULT_STATE: ConsignmentState = {\n    errors: {\n        updateShippingOptionError: {},\n        updateError: {},\n        deleteError: {},\n    },\n    statuses: {\n        isUpdating: {},\n        isUpdatingShippingOption: {},\n        isDeleting: {},\n    },\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { CheckoutAction, CheckoutActionType } from '../checkout';\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType } from '../coupon';\nimport { CustomerAction, CustomerActionType } from '../customer';\n\nimport Consignment from './consignment';\nimport { ConsignmentAction, ConsignmentActionType } from './consignment-actions';\nimport ConsignmentState, { ConsignmentErrorsState, ConsignmentStatusesState, DEFAULT_STATE } from './consignment-state';\n\nexport default function consignmentReducer(\n    state: ConsignmentState = DEFAULT_STATE,\n    action: Action\n): ConsignmentState {\n    const reducer = combineReducers<ConsignmentState, ConsignmentAction | CheckoutAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Consignment[] | undefined,\n    action: ConsignmentAction | CheckoutAction | CouponAction | CustomerAction\n): Consignment[] | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n        return arrayReplace(data, action.payload && action.payload.consignments);\n\n    case CustomerActionType.SignOutCustomerSucceeded:\n        return arrayReplace(data, []);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ConsignmentErrorsState = DEFAULT_STATE.errors,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n        return objectSet(errors, 'createError', undefined);\n\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return objectSet(errors, 'createError', action.payload);\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(errors, {\n                deleteError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                deleteError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateShippingOptionError: {\n                    [action.meta.id]: undefined,\n                },\n            });\n        }\n\n        return errors;\n\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            return objectMerge(errors, {\n                updateShippingOptionError: {\n                    [action.meta.id]: action.payload,\n                },\n            });\n        }\n\n        return errors;\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ConsignmentStatusesState = DEFAULT_STATE.statuses,\n    action: ConsignmentAction | CheckoutAction\n): ConsignmentStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ConsignmentActionType.LoadShippingOptionsRequested:\n        return objectSet(statuses, 'isLoadingShippingOptions', true);\n\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsFailed:\n        return objectSet(statuses, 'isLoadingShippingOptions', false);\n\n    case ConsignmentActionType.CreateConsignmentsRequested:\n        return objectSet(statuses, 'isCreating', true);\n\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.CreateConsignmentsFailed:\n        return objectSet(statuses, 'isCreating', false);\n\n    case ConsignmentActionType.UpdateConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdating: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.UpdateConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdating: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isDeleting: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isDeleting: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionRequested:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdatingShippingOption: {\n                    [action.meta.id]: true,\n                },\n            });\n        }\n\n        return statuses;\n\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionFailed:\n        if (action.meta) {\n            return objectMerge(statuses, {\n                isUpdatingShippingOption: {\n                    [action.meta.id]: false,\n                },\n            });\n        }\n\n        return statuses;\n\n    default:\n        return statuses;\n    }\n}\n","import { Country } from '../geography';\n\nexport default interface ShippingCountryState {\n    data?: Country[];\n    errors: ShippingCountryErrorsState;\n    statuses: ShippingCountryStatusesState;\n}\n\nexport interface ShippingCountryErrorsState {\n    loadError?: Error;\n}\n\nexport interface ShippingCountryStatusesState {\n    isLoading?: boolean;\n}\n\nexport const DEFAULT_STATE: ShippingCountryState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { arrayReplace, objectSet } from '../common/utility';\nimport { Country } from '../geography';\n\nimport { LoadShippingCountriesAction, ShippingCountryActionType } from './shipping-country-actions';\nimport ShippingCountryState, { DEFAULT_STATE, ShippingCountryErrorsState, ShippingCountryStatusesState } from './shipping-country-state';\n\nexport default function shippingCountryReducer(\n    state: ShippingCountryState = DEFAULT_STATE,\n    action: Action\n): ShippingCountryState {\n    const reducer = combineReducers<ShippingCountryState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: Country[] | undefined,\n    action: LoadShippingCountriesAction\n): Country[] | undefined {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n        return arrayReplace(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: ShippingCountryErrorsState = DEFAULT_STATE.errors,\n    action: LoadShippingCountriesAction\n): ShippingCountryErrorsState {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesRequested:\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case ShippingCountryActionType.LoadShippingCountriesFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ShippingCountryStatusesState = DEFAULT_STATE.statuses,\n    action: LoadShippingCountriesAction\n): ShippingCountryStatusesState {\n    switch (action.type) {\n    case ShippingCountryActionType.LoadShippingCountriesRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case ShippingCountryActionType.LoadShippingCountriesSucceeded:\n    case ShippingCountryActionType.LoadShippingCountriesFailed:\n        return objectSet(statuses, 'isLoading', false);\n\n    default:\n        return statuses;\n    }\n}\n","export default interface ShippingStrategyState {\n    data: ShippingStrategyDataState;\n    errors: ShippingStrategyErrorsState;\n    statuses: ShippingStrategyStatusesState;\n}\n\nexport interface ShippingStrategyDataState {\n    [key: string]: {\n        isInitialized: boolean;\n    };\n}\n\nexport interface ShippingStrategyErrorsState {\n    deinitializeError?: Error;\n    deinitializeMethodId?: string;\n    initializeError?: Error;\n    initializeMethodId?: string;\n    updateAddressError?: Error;\n    updateAddressMethodId?: string;\n    selectOptionError?: Error;\n    selectOptionMethodId?: string;\n    widgetInteractionError?: Error;\n    widgetInteractionMethodId?: string;\n}\n\nexport interface ShippingStrategyStatusesState {\n    deinitializeMethodId?: string;\n    initializeMethodId?: string;\n    isDeinitializing?: boolean;\n    isInitializing?: boolean;\n    isUpdatingAddress?: boolean;\n    isSelectingOption?: boolean;\n    updateAddressMethodId?: string;\n    selectOptionMethodId?: string;\n    isWidgetInteracting?: boolean;\n    widgetInteractionMethodId?: string;\n}\n\nexport const DEFAULT_STATE: ShippingStrategyState = {\n    data: {},\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge } from '../common/utility';\n\nimport { ShippingStrategyAction, ShippingStrategyActionType } from './shipping-strategy-actions';\nimport ShippingStrategyState, { DEFAULT_STATE, ShippingStrategyDataState, ShippingStrategyErrorsState, ShippingStrategyStatusesState } from './shipping-strategy-state';\n\nexport default function shippingStrategyReducer(\n    state: ShippingStrategyState = DEFAULT_STATE,\n    action: Action\n): ShippingStrategyState {\n    const reducer = combineReducers<ShippingStrategyState, ShippingStrategyAction>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: ShippingStrategyDataState = DEFAULT_STATE.data,\n    action: ShippingStrategyAction\n): ShippingStrategyDataState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: true,\n            },\n        });\n\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(data, {\n            [action.meta && action.meta.methodId]: {\n                isInitialized: false,\n            },\n        });\n    }\n\n    return data;\n}\n\nfunction errorsReducer(\n    errors: ShippingStrategyErrorsState = DEFAULT_STATE.errors,\n    action: ShippingStrategyAction\n): ShippingStrategyErrorsState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(errors, {\n            initializeError: undefined,\n            initializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.InitializeFailed:\n        return objectMerge(errors, {\n            initializeError: action.payload,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(errors, {\n            deinitializeError: undefined,\n            deinitializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n        return objectMerge(errors, {\n            deinitializeError: action.payload,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return objectMerge(errors, {\n            updateAddressError: undefined,\n            updateAddressMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n        return objectMerge(errors, {\n            updateAddressError: action.payload,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return objectMerge(errors, {\n            selectOptionError: undefined,\n            selectOptionMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n        return objectMerge(errors, {\n            selectOptionError: action.payload,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.WidgetInteractionStarted:\n    case ShippingStrategyActionType.WidgetInteractionFinished:\n        return objectMerge(errors, {\n            widgetInteractionError: undefined,\n            widgetInteractionMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(errors, {\n            widgetInteractionError: action.payload,\n            widgetInteractionMethodId: action.meta && action.meta.methodId,\n        });\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: ShippingStrategyStatusesState = DEFAULT_STATE.statuses,\n    action: ShippingStrategyAction\n): ShippingStrategyStatusesState {\n    switch (action.type) {\n    case ShippingStrategyActionType.InitializeRequested:\n        return objectMerge(statuses, {\n            isInitializing: true,\n            initializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.InitializeFailed:\n    case ShippingStrategyActionType.InitializeSucceeded:\n        return objectMerge(statuses, {\n            isInitializing: false,\n            initializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.DeinitializeRequested:\n        return objectMerge(statuses, {\n            isDeinitializing: true,\n            deinitializeMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.DeinitializeFailed:\n    case ShippingStrategyActionType.DeinitializeSucceeded:\n        return objectMerge(statuses, {\n            isDeinitializing: false,\n            deinitializeMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressRequested:\n        return objectMerge(statuses, {\n            isUpdatingAddress: true,\n            updateAddressMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.UpdateAddressFailed:\n    case ShippingStrategyActionType.UpdateAddressSucceeded:\n        return objectMerge(statuses, {\n            isUpdatingAddress: false,\n            updateAddressMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.SelectOptionRequested:\n        return objectMerge(statuses, {\n            isSelectingOption: true,\n            selectOptionMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.SelectOptionFailed:\n    case ShippingStrategyActionType.SelectOptionSucceeded:\n        return objectMerge(statuses, {\n            isSelectingOption: false,\n            selectOptionMethodId: undefined,\n        });\n\n    case ShippingStrategyActionType.WidgetInteractionStarted:\n        return objectMerge(statuses, {\n            isWidgetInteracting: true,\n            widgetInteractionMethodId: action.meta && action.meta.methodId,\n        });\n\n    case ShippingStrategyActionType.WidgetInteractionFinished:\n    case ShippingStrategyActionType.WidgetInteractionFailed:\n        return objectMerge(statuses, {\n            isWidgetInteracting: false,\n            widgetInteractionMethodId: undefined,\n        });\n\n    default:\n        return statuses;\n    }\n}\n","import { SignInEmail } from './signin-email';\n\nexport default interface SignInEmailState {\n    data?: SignInEmail;\n    errors: SignInEmailErrorsState;\n    statuses: SignInEmailStatusesState;\n}\n\nexport interface SignInEmailErrorsState {\n    sendError?: Error;\n}\n\nexport interface SignInEmailStatusesState {\n    isSending?: boolean;\n}\n\nexport const DEFAULT_STATE: SignInEmailState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\n\nimport { SignInEmail } from './signin-email';\nimport { SendSignInEmailAction, SignInEmailActionType } from './signin-email-actions';\nimport SignInEmailState, { DEFAULT_STATE, SignInEmailErrorsState, SignInEmailStatusesState } from './signin-email-state';\n\nexport default function signInEmailReducer(\n    state: SignInEmailState = DEFAULT_STATE,\n    action: Action\n): SignInEmailState {\n    const reducer = combineReducers<SignInEmailState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: SignInEmail | undefined,\n    action: SendSignInEmailAction\n): SignInEmail | undefined {\n    switch (action.type) {\n    case SignInEmailActionType.SendSignInEmailSucceeded:\n        return objectMerge(data, action.payload);\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: SignInEmailErrorsState = DEFAULT_STATE.errors,\n    action: SendSignInEmailAction\n): SignInEmailErrorsState {\n    switch (action.type) {\n    case SignInEmailActionType.SendSignInEmailRequested:\n    case SignInEmailActionType.SendSignInEmailSucceeded:\n        return objectSet(errors, 'sendError', undefined);\n\n    case SignInEmailActionType.SendSignInEmailFailed:\n        return objectSet(errors, 'sendError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: SignInEmailStatusesState = DEFAULT_STATE.statuses,\n    action: SendSignInEmailAction\n): SignInEmailStatusesState {\n    switch (action.type) {\n    case SignInEmailActionType.SendSignInEmailRequested:\n        return objectSet(statuses, 'isSending', true);\n\n    case SignInEmailActionType.SendSignInEmailFailed:\n    case SignInEmailActionType.SendSignInEmailSucceeded:\n        return objectSet(statuses, 'isSending', false);\n    default:\n        return statuses;\n    }\n}\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectSet } from '../common/utility';\n\nimport { StoreCreditAction, StoreCreditActionType } from './store-credit-actions';\nimport StoreCreditState, { StoreCreditErrorsState, StoreCreditStatusesState } from './store-credit-state';\n\nconst DEFAULT_STATE: StoreCreditState = {\n    errors: {},\n    statuses: {},\n};\n\nexport default function storeCreditReducer(\n    state: StoreCreditState = DEFAULT_STATE,\n    action: Action\n): StoreCreditState {\n    const reducer = combineReducers<StoreCreditState>({\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: StoreCreditErrorsState = DEFAULT_STATE.errors,\n    action: StoreCreditAction\n): StoreCreditErrorsState {\n    switch (action.type) {\n    case StoreCreditActionType.ApplyStoreCreditRequested:\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n        return objectSet(errors, 'applyError', undefined);\n\n    case StoreCreditActionType.ApplyStoreCreditFailed:\n        return objectSet(errors, 'applyError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: StoreCreditStatusesState = DEFAULT_STATE.statuses,\n    action: StoreCreditAction\n): StoreCreditStatusesState {\n    switch (action.type) {\n    case StoreCreditActionType.ApplyStoreCreditRequested:\n        return objectSet(statuses, 'isApplying', true);\n\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n    case StoreCreditActionType.ApplyStoreCreditFailed:\n        return objectSet(statuses, 'isApplying', false);\n\n    default:\n        return statuses;\n    }\n}\n","export default interface SubscriptionsState {\n    errors: SubscriptionsErrorsState;\n    statuses: SubscriptionsStatusesState;\n}\n\nexport interface SubscriptionsErrorsState {\n    updateError?: Error;\n}\n\nexport interface SubscriptionsStatusesState {\n    isUpdating?: boolean;\n}\n\nexport const DEFAULT_STATE: SubscriptionsState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\n\nimport { clearErrorReducer } from '../common/error';\nimport { objectSet } from '../common/utility';\nimport { SubscriptionsActionType, UpdateSubscriptionsAction } from '../subscription';\n\nimport SubscriptionsState, { DEFAULT_STATE, SubscriptionsErrorsState, SubscriptionsStatusesState } from './subscriptions-state';\n\nexport default function subscriptionsReducer(\n    state: SubscriptionsState = DEFAULT_STATE,\n    action: Action\n): SubscriptionsState {\n    const reducer = combineReducers<SubscriptionsState>({\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction errorsReducer(\n    errors: SubscriptionsErrorsState = DEFAULT_STATE.errors,\n    action: UpdateSubscriptionsAction\n): SubscriptionsErrorsState {\n    switch (action.type) {\n    case SubscriptionsActionType.UpdateSubscriptionsRequested:\n    case SubscriptionsActionType.UpdateSubscriptionsSucceeded:\n        return objectSet(errors, 'updateError', undefined);\n\n    case SubscriptionsActionType.UpdateSubscriptionsFailed:\n        return objectSet(errors, 'updateError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: SubscriptionsStatusesState = DEFAULT_STATE.statuses,\n    action: UpdateSubscriptionsAction\n): SubscriptionsStatusesState {\n    switch (action.type) {\n    case SubscriptionsActionType.UpdateSubscriptionsRequested:\n        return objectSet(statuses, 'isUpdating', true);\n\n    case SubscriptionsActionType.UpdateSubscriptionsFailed:\n    case SubscriptionsActionType.UpdateSubscriptionsSucceeded:\n        return objectSet(statuses, 'isUpdating', false);\n    default:\n        return statuses;\n    }\n}\n","import { Omit } from '../common/types';\n\nimport Checkout from './checkout';\n\nexport default interface CheckoutState {\n    data?: CheckoutDataState;\n    errors: CheckoutErrorsState;\n    statuses: CheckoutStatusesState;\n}\n\nexport type CheckoutDataState = Omit<Checkout, 'billingAddress' | 'cart' | 'consignments' | 'coupons' | 'giftCertificates'>;\n\nexport interface CheckoutErrorsState {\n    loadError?: Error;\n    updateError?: Error;\n}\n\nexport interface CheckoutStatusesState {\n    isExecutingSpamCheck?: boolean;\n    isLoading?: boolean;\n    isUpdating?: boolean;\n}\n\nexport const DEFAULT_STATE: CheckoutState = {\n    errors: {},\n    statuses: {},\n};\n","import { combineReducers, composeReducers, Action } from '@bigcommerce/data-store';\nimport { omit } from 'lodash';\n\nimport { BillingAddressAction, BillingAddressActionType } from '../billing';\nimport { clearErrorReducer } from '../common/error';\nimport { objectMerge, objectSet } from '../common/utility';\nimport { CouponAction, CouponActionType, GiftCertificateAction, GiftCertificateActionType } from '../coupon';\nimport { OrderAction, OrderActionType } from '../order';\nimport { ConsignmentAction, ConsignmentActionType } from '../shipping';\nimport { SpamProtectionAction, SpamProtectionActionType } from '../spam-protection';\nimport { StoreCreditAction, StoreCreditActionType } from '../store-credit';\n\nimport { CheckoutAction, CheckoutActionType } from './checkout-actions';\nimport CheckoutState, { CheckoutDataState, CheckoutErrorsState, CheckoutStatusesState, DEFAULT_STATE } from './checkout-state';\n\nexport default function checkoutReducer(\n    state: CheckoutState = DEFAULT_STATE,\n    action: Action\n): CheckoutState {\n    const reducer = combineReducers<CheckoutState>({\n        data: dataReducer,\n        errors: composeReducers(errorsReducer, clearErrorReducer),\n        statuses: statusesReducer,\n    });\n\n    return reducer(state, action);\n}\n\nfunction dataReducer(\n    data: CheckoutDataState | undefined,\n    action: CheckoutAction | BillingAddressAction | ConsignmentAction | CouponAction |\n        GiftCertificateAction | OrderAction | SpamProtectionAction | StoreCreditAction\n): CheckoutDataState | undefined {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutSucceeded:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n    case StoreCreditActionType.ApplyStoreCreditSucceeded:\n    case BillingAddressActionType.UpdateBillingAddressSucceeded:\n    case CouponActionType.ApplyCouponSucceeded:\n    case CouponActionType.RemoveCouponSucceeded:\n    case ConsignmentActionType.CreateConsignmentsSucceeded:\n    case ConsignmentActionType.UpdateConsignmentSucceeded:\n    case ConsignmentActionType.DeleteConsignmentSucceeded:\n    case ConsignmentActionType.UpdateShippingOptionSucceeded:\n    case ConsignmentActionType.LoadShippingOptionsSucceeded:\n    case GiftCertificateActionType.ApplyGiftCertificateSucceeded:\n    case GiftCertificateActionType.RemoveGiftCertificateSucceeded:\n    case SpamProtectionActionType.VerifyCheckoutSucceeded:\n        return objectMerge(data, omit(action.payload, [\n            'billingAddress',\n            'cart',\n            'consignments',\n            'customer',\n            'coupons',\n            'giftCertificates',\n        ])) as CheckoutDataState;\n\n    case OrderActionType.SubmitOrderSucceeded:\n        return objectSet(data, 'orderId', action.payload && action.payload.order.orderId) ;\n\n    default:\n        return data;\n    }\n}\n\nfunction errorsReducer(\n    errors: CheckoutErrorsState = DEFAULT_STATE.errors,\n    action: CheckoutAction | OrderAction\n): CheckoutErrorsState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(errors, 'loadError', undefined);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n        return objectSet(errors, 'loadError', action.payload);\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return objectSet(errors, 'updateError', undefined);\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n        return objectSet(errors, 'updateError', action.payload);\n\n    default:\n        return errors;\n    }\n}\n\nfunction statusesReducer(\n    statuses: CheckoutStatusesState = DEFAULT_STATE.statuses,\n    action: CheckoutAction | OrderAction | SpamProtectionAction\n): CheckoutStatusesState {\n    switch (action.type) {\n    case CheckoutActionType.LoadCheckoutRequested:\n        return objectSet(statuses, 'isLoading', true);\n\n    case CheckoutActionType.LoadCheckoutFailed:\n    case CheckoutActionType.LoadCheckoutSucceeded:\n        return objectSet(statuses, 'isLoading', false);\n\n    case CheckoutActionType.UpdateCheckoutRequested:\n        return objectSet(statuses, 'isUpdating', true);\n\n    case CheckoutActionType.UpdateCheckoutFailed:\n    case CheckoutActionType.UpdateCheckoutSucceeded:\n        return objectSet(statuses, 'isUpdating', false);\n\n    case SpamProtectionActionType.ExecuteRequested:\n        return objectSet(statuses, 'isExecutingSpamCheck', true);\n\n    case SpamProtectionActionType.ExecuteFailed:\n    case SpamProtectionActionType.ExecuteSucceeded:\n        return objectSet(statuses, 'isExecutingSpamCheck', false);\n\n    default:\n        return statuses;\n    }\n}\n","export default function guard<T>(value: T, errorFactory?: () => Error): NonNullable<T> {\n    if (value === undefined || value === null) {\n        throw errorFactory ? errorFactory() : new Error('An unexpected error has occurred.');\n    }\n\n    return value as NonNullable<T>;\n}\n","import { deepFreeze } from '@bigcommerce/data-store';\n\n// tslint:disable-next-line:ban-types\ntype FunctionProperties<T> = { [K in keyof T]: T[K] extends Function ? T[K] : never };\n\nexport default function createFreezeProxy<T extends object>(target: T): T {\n    return createProxy(target, (target, name) =>\n        (...args: any[]) => deepFreeze(target[name].call(target, ...args))\n    );\n}\n\nexport function createFreezeProxies<T extends object, TMap extends { [key: string]: T }>(map: TMap): TMap {\n    return Object.keys(map)\n        .reduce((result, key) => {\n            result[key] = createFreezeProxy(map[key]);\n\n            return result;\n        }, {} as { [key: string]: T }) as TMap;\n}\n\nfunction createProxy<T extends object>(target: T, trap: (target: FunctionProperties<T>, name: keyof FunctionProperties<T>, proxy: T) => any): T {\n    const proxy = Object.create(target);\n\n    traversePrototypeOf(target, prototype => {\n        Object.getOwnPropertyNames(prototype)\n            .forEach(name => {\n                if (name === 'constructor' || typeof proxy[name] !== 'function' || name.charAt(0) === '_') {\n                    return;\n                }\n\n                proxy[name] = trap(target as FunctionProperties<T>, name as keyof T, proxy);\n            });\n    });\n\n    return proxy;\n}\n\nfunction traversePrototypeOf(target: object, iteratee: (prototype: object) => void): void {\n    let prototype = Object.getPrototypeOf(target);\n\n    while (prototype) {\n        iteratee(prototype);\n\n        prototype = Object.getPrototypeOf(prototype);\n    }\n}\n","import PaymentInstrument from './instrument';\n\ninterface SupportedInstruments {\n    [key: string]: Pick<PaymentInstrument, 'method' | 'provider'>;\n}\n\nconst supportedInstruments: SupportedInstruments = {\n    'mollie.credit_card': {\n        provider: 'mollie',\n        method: 'credit_card',\n    },\n    'adyenv2.scheme': {\n        provider: 'adyenv2',\n        method: 'scheme',\n    },\n    'adyenv2.bcmc': {\n        provider: 'adyenv2',\n        method: 'bcmc',\n    },\n    'adyenv2.ideal': {\n        provider: 'adyenv2',\n        method: 'ideal',\n    },\n    'adyenv2.sepadirectdebit': {\n        provider: 'adyenv2',\n        method: 'sepadirectdebit',\n    },\n    'adyenv2.directEbanking': {\n        provider: 'adyenv2',\n        method: 'directEbanking',\n    },\n    'adyenv2.giropay': {\n        provider: 'adyenv2',\n        method: 'giropay',\n    },\n    barclays: {\n        provider: 'barclays',\n        method: 'credit_card',\n    },\n    braintree: {\n        provider: 'braintree',\n        method: 'credit_card',\n    },\n    braintreepaypal: {\n        provider: 'braintree',\n        method: 'paypal',\n    },\n    authorizenet: {\n        provider: 'authorizenet',\n        method: 'credit_card',\n    },\n    elavon: {\n        provider: 'elavon',\n        method: 'credit_card',\n    },\n    checkoutcom: {\n        provider: 'checkoutcom',\n        method: 'credit_card',\n    },\n    'checkoutcom.credit_card': {\n        provider: 'checkoutcom',\n        method: 'credit_card',\n    },\n    stripe: {\n        provider: 'stripe',\n        method: 'credit_card',\n    },\n    'stripev3.card': {\n        provider: 'stripev3',\n        method: 'card',\n    },\n    cybersource: {\n        provider: 'cybersource',\n        method: 'credit_card',\n    },\n    cybersourcev2: {\n        provider: 'cybersourcev2',\n        method: 'credit_card',\n    },\n    converge: {\n        provider: 'converge',\n        method: 'credit_card',\n    },\n    bluesnapv2: {\n        provider: 'bluesnapv2',\n        method: 'credit_card',\n    },\n    orbital: {\n        provider: 'orbital',\n        method: 'credit_card',\n    },\n    paymetric: {\n        provider: 'paymetric',\n        method: 'credit_card',\n    },\n    bolt: {\n        provider: 'bolt',\n        method: 'credit_card',\n    },\n    'barclaycard.credit_card': {\n        provider: 'barclaycard',\n        method: 'credit_card',\n    },\n};\n\nexport default supportedInstruments;\n","import { identity, isEqual, pickBy } from 'lodash';\n\nimport Address from './address';\n\nexport default function isAddressEqual(addressA: Partial<Address>, addressB: Partial<Address>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<Address>): Partial<Address> {\n    return pickBy({\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.address1,\n        address2: address.address2,\n        city: address.city,\n        stateOrProvince: address.stateOrProvince,\n        countryCode: address.countryCode,\n        postalCode: address.postalCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    }, identity);\n}\n","import { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\n\nexport default interface StoreCreditState {\n    errors: StoreCreditErrorsState;\n    statuses: StoreCreditStatusesState;\n}\n\nexport interface StoreCreditErrorsState {\n    applyError?: RequestError<StorefrontErrorResponseBody>;\n}\n\nexport interface StoreCreditStatusesState {\n    isApplying?: boolean;\n}\n\nexport const DEFAULT_STATE: StoreCreditState = {\n    errors: {},\n    statuses: {},\n};\n","import { createBillingAddressSelectorFactory } from '../billing';\nimport { createCartSelectorFactory } from '../cart';\nimport { createCheckoutButtonSelectorFactory } from '../checkout-buttons';\nimport { createFreezeProxies } from '../common/utility';\nimport { createConfigSelectorFactory } from '../config';\nimport { createCouponSelectorFactory, createGiftCertificateSelectorFactory } from '../coupon';\nimport { createCustomerSelectorFactory, createCustomerStrategySelectorFactory } from '../customer';\nimport { createFormSelectorFactory } from '../form';\nimport { createCountrySelectorFactory } from '../geography';\nimport { createOrderSelectorFactory } from '../order';\nimport { createPaymentMethodSelectorFactory, createPaymentSelectorFactory, createPaymentStrategySelectorFactory } from '../payment';\nimport { createInstrumentSelectorFactory } from '../payment/instrument';\nimport { createRemoteCheckoutSelectorFactory } from '../remote-checkout';\nimport { createConsignmentSelectorFactory, createShippingAddressSelectorFactory, createShippingCountrySelectorFactory, createShippingStrategySelectorFactory } from '../shipping';\nimport { createSignInEmailSelectorFactory } from '../signin-email';\nimport { createStoreCreditSelectorFactory } from '../store-credit';\nimport { createSubscriptionsSelectorFactory } from '../subscription';\n\nimport { createCheckoutSelectorFactory } from './checkout-selector';\nimport { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport type InternalCheckoutSelectorsFactory = (\n    state: CheckoutStoreState,\n    options?: CheckoutStoreOptions\n) => InternalCheckoutSelectors;\n\nexport function createInternalCheckoutSelectorsFactory(): InternalCheckoutSelectorsFactory {\n    const createBillingAddressSelector = createBillingAddressSelectorFactory();\n    const createCartSelector = createCartSelectorFactory();\n    const createCheckoutButtonSelector = createCheckoutButtonSelectorFactory();\n    const createConfigSelector = createConfigSelectorFactory();\n    const createCountrySelector = createCountrySelectorFactory();\n    const createCouponSelector = createCouponSelectorFactory();\n    const createCustomerSelector = createCustomerSelectorFactory();\n    const createCustomerStrategySelector = createCustomerStrategySelectorFactory();\n    const createGiftCertificateSelector = createGiftCertificateSelectorFactory();\n    const createInstrumentSelector = createInstrumentSelectorFactory();\n    const createFormSelector = createFormSelectorFactory();\n    const createPaymentMethodSelector = createPaymentMethodSelectorFactory();\n    const createPaymentStrategySelector = createPaymentStrategySelectorFactory();\n    const createRemoteCheckoutSelector = createRemoteCheckoutSelectorFactory();\n    const createShippingAddressSelector = createShippingAddressSelectorFactory();\n    const createShippingCountrySelector = createShippingCountrySelectorFactory();\n    const createShippingStrategySelector = createShippingStrategySelectorFactory();\n    const createConsignmentSelector = createConsignmentSelectorFactory();\n    const createCheckoutSelector = createCheckoutSelectorFactory();\n    const createOrderSelector = createOrderSelectorFactory();\n    const createPaymentSelector = createPaymentSelectorFactory();\n    const createStoreCreditSelector = createStoreCreditSelectorFactory();\n    const createSubscriptionsSelector = createSubscriptionsSelectorFactory();\n    const createSignInEmailSelector = createSignInEmailSelectorFactory();\n\n    return (state, options = {}) => {\n        const billingAddress = createBillingAddressSelector(state.billingAddress);\n        const cart = createCartSelector(state.cart);\n        const checkoutButton = createCheckoutButtonSelector(state.checkoutButton);\n        const countries = createCountrySelector(state.countries);\n        const coupons = createCouponSelector(state.coupons);\n        const customer = createCustomerSelector(state.customer);\n        const customerStrategies = createCustomerStrategySelector(state.customerStrategies);\n        const form = createFormSelector(state.formFields);\n        const giftCertificates = createGiftCertificateSelector(state.giftCertificates);\n        const instruments = createInstrumentSelector(state.instruments);\n        const paymentMethods = createPaymentMethodSelector(state.paymentMethods);\n        const paymentStrategies = createPaymentStrategySelector(state.paymentStrategies);\n        const remoteCheckout = createRemoteCheckoutSelector(state.remoteCheckout);\n        const shippingAddress = createShippingAddressSelector(state.consignments);\n        const shippingCountries = createShippingCountrySelector(state.shippingCountries);\n        const shippingStrategies = createShippingStrategySelector(state.shippingStrategies);\n        const subscriptions = createSubscriptionsSelector(state.subscriptions);\n        const storeCredit = createStoreCreditSelector(state.storeCredit);\n        const signInEmail = createSignInEmailSelector(state.signInEmail);\n\n        // Compose selectors\n        const consignments = createConsignmentSelector(state.consignments, cart);\n        const checkout = createCheckoutSelector(state.checkout, billingAddress, cart, consignments, coupons, customer, giftCertificates);\n        const order = createOrderSelector(state.order, billingAddress, coupons);\n        const payment = createPaymentSelector(checkout, order);\n        const config = createConfigSelector(state.config, state.formFields);\n\n        const selectors = {\n            billingAddress,\n            cart,\n            checkout,\n            checkoutButton,\n            config,\n            consignments,\n            countries,\n            coupons,\n            customer,\n            customerStrategies,\n            form,\n            giftCertificates,\n            instruments,\n            order,\n            payment,\n            paymentMethods,\n            paymentStrategies,\n            remoteCheckout,\n            shippingAddress,\n            shippingCountries,\n            shippingStrategies,\n            signInEmail,\n            subscriptions,\n            storeCredit,\n        };\n\n        return options.shouldWarnMutation ? createFreezeProxies(selectors) : selectors;\n    };\n}\n\nexport default function createInternalCheckoutSelectors(\n    state: CheckoutStoreState,\n    options?: CheckoutStoreOptions\n): InternalCheckoutSelectors {\n    return createInternalCheckoutSelectorsFactory()(state, options);\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\n\nimport BillingAddress from './billing-address';\nimport BillingAddressState, { DEFAULT_STATE } from './billing-address-state';\n\nexport default interface BillingAddressSelector {\n    getBillingAddress(): BillingAddress | undefined;\n    getBillingAddressOrThrow(): BillingAddress;\n    getUpdateError(): Error | undefined;\n    getContinueAsGuestError(): Error | undefined;\n    getLoadError(): Error | undefined;\n    isUpdating(): boolean;\n    isContinuingAsGuest(): boolean;\n    isLoading(): boolean;\n}\n\nexport type BillingAddressSelectorFactory = (state: BillingAddressState) => BillingAddressSelector;\n\nexport function createBillingAddressSelectorFactory(): BillingAddressSelectorFactory {\n    const getBillingAddress = createSelector(\n        (state: BillingAddressState) => state.data,\n        data => () => data\n    );\n\n    const getBillingAddressOrThrow = createSelector(\n        getBillingAddress,\n        getBillingAddress => () => {\n            return guard(getBillingAddress(), () => new MissingDataError(MissingDataErrorType.MissingBillingAddress));\n        }\n    );\n\n    const getUpdateError = createSelector(\n        (state: BillingAddressState) => state.errors.updateError,\n        error => () => error\n    );\n\n    const getContinueAsGuestError = createSelector(\n        (state: BillingAddressState) => state.errors.continueAsGuestError,\n        error => () => error\n    );\n\n    const getLoadError = createSelector(\n        (state: BillingAddressState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isUpdating = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isUpdating,\n        status => () => status\n    );\n\n    const isContinuingAsGuest = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isContinuingAsGuest,\n        status => () => status\n    );\n\n    const isLoading = createSelector(\n        (state: BillingAddressState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: BillingAddressState = DEFAULT_STATE\n    ): BillingAddressSelector => {\n        return {\n            getBillingAddress: getBillingAddress(state),\n            getBillingAddressOrThrow: getBillingAddressOrThrow(state),\n            getUpdateError: getUpdateError(state),\n            getContinueAsGuestError: getContinueAsGuestError(state),\n            getLoadError: getLoadError(state),\n            isUpdating: isUpdating(state),\n            isContinuingAsGuest: isContinuingAsGuest(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoize, memoizeOne } from '@bigcommerce/memoize';\nimport { find, some, values } from 'lodash';\n\nimport { createSelector } from '../common/selector';\n\nimport CheckoutButtonState, { DEFAULT_STATE } from './checkout-button-state';\nimport { CheckoutButtonMethodType } from './strategies';\n\nexport default interface CheckoutButtonSelector {\n    getState(): CheckoutButtonState;\n    isInitializing(methodId?: CheckoutButtonMethodType): boolean;\n    isInitialized(methodId: CheckoutButtonMethodType, containerId?: string): boolean;\n    isDeinitializing(methodId?: CheckoutButtonMethodType): boolean;\n    getInitializeError(methodId?: CheckoutButtonMethodType): Error | undefined;\n    getDeinitializeError(methodId?: CheckoutButtonMethodType): Error | undefined;\n}\n\nexport type CheckoutButtonSelectorFactory = (state: CheckoutButtonState) => CheckoutButtonSelector;\n\nexport function createCheckoutButtonSelectorFactory(): CheckoutButtonSelectorFactory {\n    const getState = createSelector(\n        (state: CheckoutButtonState) => state,\n        state => () => state\n    );\n\n    const isInitializing = createSelector(\n        (state: CheckoutButtonState) => state.statuses,\n        statuses => memoize((methodId?: CheckoutButtonMethodType) => {\n            if (methodId) {\n                const method = statuses[methodId];\n\n                return (method && method.isInitializing) === true;\n            }\n\n            return some(statuses, { isInitializing: true });\n        })\n    );\n\n    const isInitialized = createSelector(\n        (state: CheckoutButtonState) => state.data,\n        data => memoize((methodId: CheckoutButtonMethodType, containerId?: string) => {\n            const method = data[methodId];\n\n            if (!method) {\n                return false;\n            }\n\n            if (!containerId) {\n                return some(method.initializedContainers, isInitialized => isInitialized === true);\n            }\n\n            return method.initializedContainers[containerId] === true;\n        })\n    );\n\n    const isDeinitializing = createSelector(\n        (state: CheckoutButtonState) => state.statuses,\n        statuses => memoize((methodId?: CheckoutButtonMethodType) => {\n            if (methodId) {\n                const method = statuses[methodId];\n\n                return (method && method.isDeinitializing) === true;\n            }\n\n            return some(statuses, { isDeinitializing: true });\n        })\n    );\n\n    const getInitializeError = createSelector(\n        (state: CheckoutButtonState) => state.errors,\n        errors => memoize((methodId?: CheckoutButtonMethodType) => {\n            const method = methodId ?\n                errors[methodId] :\n                find(values(errors), method => !!(method && method.initializeError));\n\n            return method && method.initializeError;\n        })\n    );\n\n    const getDeinitializeError = createSelector(\n        (state: CheckoutButtonState) => state.errors,\n        errors => memoize((methodId?: CheckoutButtonMethodType) => {\n            const method = methodId ?\n                errors[methodId] :\n                find(values(errors), method => !!(method && method.deinitializeError));\n\n            return method && method.deinitializeError;\n        })\n    );\n\n    return memoizeOne((\n        state: CheckoutButtonState = DEFAULT_STATE\n    ): CheckoutButtonSelector => {\n        return {\n            getState: getState(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isDeinitializing: isDeinitializing(state),\n            getInitializeError: getInitializeError(state),\n            getDeinitializeError: getDeinitializeError(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport Coupon from './coupon';\nimport CouponState, { DEFAULT_STATE } from './coupon-state';\n\nexport default interface CouponSelector {\n    getCoupons(): Coupon[] | undefined;\n    getRemoveError(): RequestError | undefined;\n    getApplyError(): RequestError | undefined;\n    isApplying(): boolean;\n    isRemoving(): boolean;\n}\n\nexport type CouponSelectorFactory = (state: CouponState) => CouponSelector;\n\nexport function createCouponSelectorFactory(): CouponSelectorFactory {\n    const getCoupons = createSelector(\n        (state: CouponState) => state.data,\n        data => () => data\n    );\n\n    const getRemoveError = createSelector(\n        (state: CouponState) => state.errors.removeCouponError,\n        error => () => error\n    );\n\n    const getApplyError = createSelector(\n        (state: CouponState) => state.errors.applyCouponError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: CouponState) => !!state.statuses.isApplyingCoupon,\n        status => () => status\n    );\n\n    const isRemoving = createSelector(\n        (state: CouponState) => !!state.statuses.isRemovingCoupon,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CouponState = DEFAULT_STATE\n    ): CouponSelector => {\n        return {\n            getCoupons: getCoupons(state),\n            getRemoveError: getRemoveError(state),\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n            isRemoving: isRemoving(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\n\nimport Customer from './customer';\nimport CustomerState, { DEFAULT_STATE } from './customer-state';\n\nexport default interface CustomerSelector {\n    getCustomer(): Customer | undefined;\n    getCustomerOrThrow(): Customer;\n    getCreateAccountError(): Error | undefined;\n    isCreatingCustomerAccount(): boolean;\n    getCreateAddressError(): Error | undefined;\n    isCreatingCustomerAddress(): boolean;\n}\n\nexport type CustomerSelectorFactory = (state: CustomerState) => CustomerSelector;\n\nexport function createCustomerSelectorFactory(): CustomerSelectorFactory {\n    const getCustomer = createSelector(\n        (state: CustomerState) => state.data,\n        customer => () => customer\n    );\n\n    const getCustomerOrThrow = createSelector(\n        getCustomer,\n        getCustomer => () => {\n            return guard(getCustomer(), () => new MissingDataError(MissingDataErrorType.MissingCustomer));\n        }\n    );\n\n    const getCreateAccountError = createSelector(\n        (state: CustomerState) => state.errors.createError,\n        error => () => error\n    );\n\n    const isCreatingCustomerAccount = createSelector(\n        (state: CustomerState) => !!state.statuses.isCreating,\n        status => () => status\n    );\n\n    const getCreateAddressError = createSelector(\n        (state: CustomerState) => state.errors.createAddressError,\n        error => () => error\n    );\n\n    const isCreatingCustomerAddress = createSelector(\n        (state: CustomerState) => !!state.statuses.isCreatingAddress,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CustomerState = DEFAULT_STATE\n    ): CustomerSelector => {\n        return {\n            getCustomer: getCustomer(state),\n            getCustomerOrThrow: getCustomerOrThrow(state),\n            getCreateAccountError: getCreateAccountError(state),\n            isCreatingCustomerAccount: isCreatingCustomerAccount(state),\n            getCreateAddressError: getCreateAddressError(state),\n            isCreatingCustomerAddress: isCreatingCustomerAddress(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport RemoteCheckoutState, { DEFAULT_STATE, RemoteCheckoutStateData } from './remote-checkout-state';\n\nexport default interface RemoteCheckoutSelector {\n    getCheckout<TMethodId extends keyof RemoteCheckoutStateData>(\n        methodId: TMethodId\n    ): RemoteCheckoutStateData[TMethodId] | undefined;\n}\n\nexport type RemoteCheckoutSelectorFactory = (state: RemoteCheckoutState) => RemoteCheckoutSelector;\n\nexport function createRemoteCheckoutSelectorFactory(): RemoteCheckoutSelectorFactory {\n    const getCheckout = createSelector(\n        (state: RemoteCheckoutState) => state.data,\n        data => <TMethodId extends keyof RemoteCheckoutStateData>(methodId: TMethodId) => {\n            return data[methodId];\n        }\n    );\n\n    return memoizeOne((\n        state: RemoteCheckoutState = DEFAULT_STATE\n    ): RemoteCheckoutSelector => {\n        return {\n            getCheckout: getCheckout(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { Address } from '../address';\nimport { createSelector } from '../common/selector';\n\nimport ConsignmentState, { DEFAULT_STATE } from './consignment-state';\n\nexport default interface ShippingAddressSelector {\n    getShippingAddress(): Address | undefined;\n}\n\nexport type ShippingAddressSelectorFactory = (state: ConsignmentState) => ShippingAddressSelector;\n\nexport function createShippingAddressSelectorFactory(): ShippingAddressSelectorFactory {\n    const getShippingAddress = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => {\n            if (!consignments || !consignments[0]) {\n                return;\n            }\n\n            return consignments[0].shippingAddress;\n        }\n    );\n\n    return memoizeOne((\n        state: ConsignmentState = DEFAULT_STATE\n    ): ShippingAddressSelector => {\n        return {\n            getShippingAddress: getShippingAddress(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { CheckoutSelector } from '../checkout';\nimport { createSelector } from '../common/selector';\nimport { GatewayOrderPayment, OrderSelector } from '../order';\n\nimport PaymentMethod from './payment-method';\nimport { HOSTED } from './payment-method-types';\nimport { ACKNOWLEDGE, FINALIZE } from './payment-status-types';\n\nexport default interface PaymentSelector {\n    getPaymentId(): { providerId: string; gatewayId?: string } | undefined;\n    getPaymentStatus(): string | undefined;\n    getPaymentToken(): string | undefined;\n    getPaymentRedirectUrl(): string | undefined;\n    isPaymentDataRequired(useStoreCredit?: boolean): boolean;\n    isPaymentDataSubmitted(paymentMethod?: PaymentMethod): boolean;\n}\n\nexport type PaymentSelectorFactory = (\n    checkout: CheckoutSelector,\n    order: OrderSelector\n) => PaymentSelector;\n\ninterface PaymentSelectorDependencies {\n    checkout: CheckoutSelector;\n    order: OrderSelector;\n}\n\nexport function createPaymentSelectorFactory(): PaymentSelectorFactory {\n    const getInternalPayment = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrderMeta,\n        getOrderMeta => () => {\n            const meta = getOrderMeta();\n\n            return meta && meta.payment;\n        }\n    );\n\n    const getGatewayPayment = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrder,\n        getOrder => () => {\n            const order = getOrder();\n\n            return find(order && order.payments, ({ providerId }) =>\n                providerId !== 'giftcertificate' && providerId !== 'storecredit'\n            ) as GatewayOrderPayment;\n        }\n    );\n\n    const getHostedPayment = createSelector(\n        ({ checkout }: PaymentSelectorDependencies) => checkout.getCheckout,\n        getCheckout => () => {\n            const checkout = getCheckout();\n\n            return find(checkout && checkout.payments, ({ providerType }) =>\n                providerType === HOSTED\n            );\n        }\n    );\n\n    const getPaymentId = createSelector(\n        getInternalPayment,\n        getHostedPayment,\n        getGatewayPayment,\n        (getInternalPayment, getHostedPayment, getGatewayPayment) => () => {\n            const internalPayment = getInternalPayment();\n\n            if (internalPayment && internalPayment.id) {\n                return {\n                    providerId: internalPayment.id,\n                    gatewayId: internalPayment.gateway,\n                };\n            }\n\n            const payment = getHostedPayment() || getGatewayPayment();\n\n            if (payment && payment.providerId) {\n                return {\n                    providerId: payment.providerId,\n                    gatewayId: payment.gatewayId,\n                };\n            }\n        }\n    );\n\n    const getPaymentStatus = createSelector(\n        getInternalPayment,\n        getHostedPayment,\n        getGatewayPayment,\n        (getInternalPayment, getHostedPayment, getGatewayPayment) => () => {\n            const internalPayment = getInternalPayment();\n\n            if (internalPayment && internalPayment.status) {\n                return internalPayment.status.replace('PAYMENT_STATUS_', '');\n            }\n\n            const payment = getHostedPayment() || getGatewayPayment();\n\n            if (payment) {\n                return payment.detail.step;\n            }\n        }\n    );\n\n    const getPaymentToken = createSelector(\n        ({ order }: PaymentSelectorDependencies) => order.getOrderMeta,\n        getOrderMeta => () => {\n            const meta = getOrderMeta();\n\n            return meta && meta.token;\n        }\n    );\n\n    const getPaymentRedirectUrl = createSelector(\n        getInternalPayment,\n        getInternalPayment => () => {\n            const payment = getInternalPayment();\n\n            return payment && payment.redirectUrl;\n        }\n    );\n\n    const isPaymentDataRequired = createSelector(\n        ({ checkout }: PaymentSelectorDependencies) => checkout.getOutstandingBalance,\n        getOutstandingBalance => (useStoreCredit: boolean = false) => {\n            const grandTotal = getOutstandingBalance(useStoreCredit);\n\n            return grandTotal ? grandTotal > 0 : false;\n        }\n    );\n\n    const isPaymentDataSubmitted = createSelector(\n        getPaymentStatus,\n        getPaymentStatus => (paymentMethod?: PaymentMethod) => {\n            if (paymentMethod && paymentMethod.nonce) {\n                return true;\n            }\n\n            return getPaymentStatus() === ACKNOWLEDGE || getPaymentStatus() === FINALIZE;\n        }\n    );\n\n    return memoizeOne((\n        checkout: CheckoutSelector,\n        order: OrderSelector\n    ): PaymentSelector => {\n        return {\n            getPaymentId: getPaymentId({ checkout, order }),\n            getPaymentStatus: getPaymentStatus({ checkout, order }),\n            getPaymentToken: getPaymentToken({ checkout, order }),\n            getPaymentRedirectUrl: getPaymentRedirectUrl({ checkout, order }),\n            isPaymentDataRequired: isPaymentDataRequired({ checkout, order }),\n            isPaymentDataSubmitted: isPaymentDataSubmitted({ checkout, order }),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport { SignInEmail } from './signin-email';\nimport SignInEmailState, { DEFAULT_STATE } from './signin-email-state';\n\nexport default interface SignInEmailSelector {\n    getEmail(): SignInEmail | undefined;\n    getSendError(): Error | undefined;\n    isSending(): boolean;\n}\n\nexport type SignInEmailSelectorFactory = (state: SignInEmailState) => SignInEmailSelector;\n\nexport function createSignInEmailSelectorFactory(): SignInEmailSelectorFactory {\n    const getEmail = createSelector(\n        (state: SignInEmailState) => state.data,\n        signInEmail => () => signInEmail\n    );\n\n    const getSendError = createSelector(\n        (state: SignInEmailState) => state.errors.sendError,\n        error => () => error\n    );\n\n    const isSending = createSelector(\n        (state: SignInEmailState) => !!state.statuses.isSending,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: SignInEmailState = DEFAULT_STATE\n    ): SignInEmailSelector => {\n        return {\n            getEmail: getEmail(state),\n            getSendError: getSendError(state),\n            isSending: isSending(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\n\nimport Cart from './cart';\nimport CartState, { DEFAULT_STATE } from './cart-state';\n\nexport default interface CartSelector {\n    getCart(): Cart | undefined;\n    getCartOrThrow(): Cart;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type CartSelectorFactory = (state: CartState) => CartSelector;\n\nexport function createCartSelectorFactory() {\n    const getCart = createSelector(\n        (state: CartState) => state.data,\n        cart => () => cart\n    );\n\n    const getCartOrThrow = createSelector(\n        getCart,\n        getCart => () => {\n          return guard(getCart(), () => new MissingDataError(MissingDataErrorType.MissingCart));\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: CartState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: CartState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CartState = DEFAULT_STATE\n    ): CartSelector => {\n        return {\n            getCart: getCart(state),\n            getCartOrThrow: getCartOrThrow(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\nimport { FormFieldsState } from '../form';\n\nimport Config, { ContextConfig, FlashMessage, FlashMessageType, StoreConfig } from './config';\nimport ConfigState, { DEFAULT_STATE } from './config-state';\n\nexport default interface ConfigSelector {\n    getConfig(): Config | undefined;\n    getFlashMessages(type?: FlashMessageType): FlashMessage[] | undefined;\n    getStoreConfig(): StoreConfig | undefined;\n    getStoreConfigOrThrow(): StoreConfig;\n    getContextConfig(): ContextConfig | undefined;\n    getExternalSource(): string | undefined;\n    getVariantIdentificationToken(): string | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type ConfigSelectorFactory = (\n    state: ConfigState,\n    formState: FormFieldsState\n) => ConfigSelector;\n\ninterface ConfigSelectorDependencies {\n    formState: FormFieldsState;\n}\n\nexport function createConfigSelectorFactory(): ConfigSelectorFactory {\n\n    const getConfig = createSelector(\n        (state: ConfigState) => state.data,\n        data => () => data\n    );\n\n    const getFlashMessages = createSelector(\n        (state: ConfigState) => state.data,\n        data => (filterType?: FlashMessageType) => {\n            if (!data) {\n                return;\n            }\n\n            const { flashMessages } = data.context;\n\n            if (!flashMessages) {\n                return;\n            }\n\n            return filterType !== undefined ?\n                flashMessages.filter(({ type }) => filterType === type) :\n                flashMessages;\n        }\n    );\n\n    const getStoreConfig = createSelector(\n        (state: ConfigState) => state.data,\n        (_: ConfigState, { formState }: ConfigSelectorDependencies) => formState && formState.data,\n        (data, formFields) => () => data && formFields ? ({\n            ...data.storeConfig,\n            formFields,\n        }) : undefined\n    );\n\n    const getStoreConfigOrThrow = createSelector(\n        getStoreConfig,\n        getStoreConfig => () => {\n          return guard(getStoreConfig(), () => new MissingDataError(MissingDataErrorType.MissingCheckoutConfig));\n        }\n    );\n\n    const getContextConfig = createSelector(\n        (state: ConfigState) => state.data && state.data.context,\n        data => () => data\n    );\n\n    const getExternalSource = createSelector(\n        (state: ConfigState) => state.meta && state.meta.externalSource,\n        data => () => data\n    );\n\n    const getVariantIdentificationToken = createSelector(\n        (state: ConfigState) => state.meta && state.meta.variantIdentificationToken,\n        data => () => data\n    );\n\n    const getLoadError = createSelector(\n        (state: ConfigState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: ConfigState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: ConfigState = DEFAULT_STATE,\n        formState: FormFieldsState\n    ): ConfigSelector => {\n        return {\n            getConfig: getConfig(state),\n            getFlashMessages: getFlashMessages(state),\n            getStoreConfig: getStoreConfig(state, { formState }),\n            getStoreConfigOrThrow: getStoreConfigOrThrow(state, { formState }),\n            getContextConfig: getContextConfig(state),\n            getExternalSource: getExternalSource(state),\n            getVariantIdentificationToken: getVariantIdentificationToken(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport Country from './country';\nimport CountryState, { DEFAULT_STATE } from './country-state';\n\nexport default interface CountrySelector {\n    getCountries(): Country[] | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type CountrySelectorFactory = (state: CountryState) => CountrySelector;\n\nexport function createCountrySelectorFactory(): CountrySelectorFactory {\n    const getCountries = createSelector(\n        (state: CountryState) => state.data,\n        countries => () => countries\n    );\n\n    const getLoadError = createSelector(\n        (state: CountryState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: CountryState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: CountryState = DEFAULT_STATE\n    ): CountrySelector => {\n        return {\n            getCountries: getCountries(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport CustomerStrategyState, { DEFAULT_STATE } from './customer-strategy-state';\n\nexport default interface CustomerStrategySelector {\n    getSignInError(methodId?: string): Error | undefined;\n    getSignOutError(methodId?: string): Error | undefined;\n    getInitializeError(methodId?: string): Error | undefined;\n    getWidgetInteractionError(methodId?: string): Error | undefined;\n    isSigningIn(methodId?: string): boolean;\n    isSigningOut(methodId?: string): boolean;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n    isWidgetInteracting(methodId?: string): boolean;\n}\n\nexport type CustomerStrategySelectorFactory = (state: CustomerStrategyState) => CustomerStrategySelector;\n\nexport function createCustomerStrategySelectorFactory(): CustomerStrategySelectorFactory {\n    const getSignInError = createSelector(\n        (state: CustomerStrategyState) => state.errors.signInMethodId,\n        (state: CustomerStrategyState) => state.errors.signInError,\n        (signInMethodId, signInError) => (methodId?: string) => {\n            if (methodId && signInMethodId !== methodId) {\n                return;\n            }\n\n            return signInError;\n        }\n    );\n\n    const getSignOutError = createSelector(\n        (state: CustomerStrategyState) => state.errors.signOutMethodId,\n        (state: CustomerStrategyState) => state.errors.signOutError,\n        (signOutMethodId, signOutError) => (methodId?: string) => {\n            if (methodId && signOutMethodId !== methodId) {\n                return;\n            }\n\n            return signOutError;\n        }\n    );\n\n    const getInitializeError = createSelector(\n        (state: CustomerStrategyState) => state.errors.initializeMethodId,\n        (state: CustomerStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const getWidgetInteractionError = createSelector(\n        (state: CustomerStrategyState) => state.errors.widgetInteractionMethodId,\n        (state: CustomerStrategyState) => state.errors.widgetInteractionError,\n        (widgetInteractionMethodId, widgetInteractionError) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return;\n            }\n\n            return widgetInteractionError;\n        }\n    );\n\n    const isSigningIn = createSelector(\n        (state: CustomerStrategyState) => state.statuses.signInMethodId,\n        (state: CustomerStrategyState) => state.statuses.isSigningIn,\n        (signInMethodId, isSigningIn) => (methodId?: string) => {\n            if (methodId && signInMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSigningIn;\n        }\n    );\n\n    const isSigningOut = createSelector(\n        (state: CustomerStrategyState) => state.statuses.signOutMethodId,\n        (state: CustomerStrategyState) => state.statuses.isSigningOut,\n        (signOutMethodId, isSigningOut) => (methodId?: string) => {\n            if (methodId && signOutMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSigningOut;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: CustomerStrategyState) => state.statuses.initializeMethodId,\n        (state: CustomerStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: CustomerStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    const isWidgetInteracting = createSelector(\n        (state: CustomerStrategyState) => state.statuses.widgetInteractionMethodId,\n        (state: CustomerStrategyState) => state.statuses.isWidgetInteracting,\n        (widgetInteractionMethodId, isWidgetInteracting) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isWidgetInteracting;\n        }\n    );\n\n    return memoizeOne((\n        state: CustomerStrategyState = DEFAULT_STATE\n    ): CustomerStrategySelector => {\n        return {\n            getSignInError: getSignInError(state),\n            getSignOutError: getSignOutError(state),\n            getInitializeError: getInitializeError(state),\n            getWidgetInteractionError: getWidgetInteractionError(state),\n            isSigningIn: isSigningIn(state),\n            isSigningOut: isSigningOut(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isWidgetInteracting: isWidgetInteracting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { StorefrontErrorResponseBody } from '../common/error';\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport GiftCertificate from './gift-certificate';\nimport GiftCertificateState, { DEFAULT_STATE } from './gift-certificate-state';\n\nexport default interface GiftCertificateSelector {\n    getGiftCertificates(): GiftCertificate[] | undefined;\n    getRemoveError(): RequestError<StorefrontErrorResponseBody> | undefined;\n    getApplyError(): RequestError<StorefrontErrorResponseBody> | undefined;\n    isApplying(): boolean;\n    isRemoving(): boolean;\n}\n\nexport type GiftCertificateSelectorFactory = (state: GiftCertificateState) => GiftCertificateSelector;\n\nexport function createGiftCertificateSelectorFactory(): GiftCertificateSelectorFactory {\n    const getGiftCertificates = createSelector(\n        (state: GiftCertificateState) => state.data,\n        data => () => data\n    );\n\n    const getRemoveError = createSelector(\n        (state: GiftCertificateState) => state.errors.removeGiftCertificateError,\n        error => () => error\n    );\n\n    const getApplyError = createSelector(\n        (state: GiftCertificateState) => state.errors.applyGiftCertificateError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: GiftCertificateState) => !!state.statuses.isApplyingGiftCertificate,\n        status => () => status\n    );\n\n    const isRemoving = createSelector(\n        (state: GiftCertificateState) => !!state.statuses.isRemovingGiftCertificate,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: GiftCertificateState = DEFAULT_STATE\n    ): GiftCertificateSelector => {\n        return {\n            getGiftCertificates: getGiftCertificates(state),\n            getRemoveError: getRemoveError(state),\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n            isRemoving: isRemoving(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { filter, flatMap, isMatch, values } from 'lodash';\n\nimport { createSelector } from '../../common/selector';\nimport PaymentMethod from '../payment-method';\n\nimport PaymentInstrument, { CardInstrument } from './instrument';\nimport InstrumentState, { DEFAULT_STATE, InstrumentMeta } from './instrument-state';\nimport supportedInstruments from './supported-payment-instruments';\n\nexport default interface InstrumentSelector {\n    getCardInstrument(instrumentId: string): CardInstrument | undefined;\n    getInstruments(): PaymentInstrument[] | undefined;\n    getInstrumentsByPaymentMethod(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n    getInstrumentsMeta(): InstrumentMeta | undefined;\n    getLoadError(): Error | undefined;\n    getDeleteError(instrumentId?: string): Error | undefined;\n    isLoading(): boolean;\n    isDeleting(instrumentId?: string): boolean;\n}\n\nexport type InstrumentSelectorFactory = (state: InstrumentState) => InstrumentSelector;\n\nexport function createInstrumentSelectorFactory(): InstrumentSelectorFactory {\n    const getInstrumentsByPaymentMethod = createSelector(\n        (state: InstrumentState) => state.data,\n        instruments => (paymentMethod: PaymentMethod) => {\n            if (!instruments) {\n                return;\n            }\n\n            const paymentMethodKey = paymentMethod.gateway ? `${paymentMethod.gateway}.${paymentMethod.id}` : paymentMethod.id;\n\n            const currentMethod = supportedInstruments[paymentMethodKey];\n\n            if (!currentMethod) {\n                return [];\n            }\n\n            return filter<PaymentInstrument>(instruments, currentMethod);\n        }\n    );\n\n    const getCardInstrument = createSelector(\n        (state: InstrumentState) => state.data,\n        (instruments = []) => (instrumentId: string) => {\n            const cards = values(supportedInstruments);\n\n            return instruments.find((instrument): instrument is CardInstrument =>\n                instrument.bigpayToken === instrumentId &&\n                instrument.type === 'card' &&\n                cards.some(card => isMatch(instrument, card))\n            );\n        }\n    );\n\n    const getInstruments = createSelector(\n        (state: InstrumentState) => state.data,\n        instruments => () => {\n            if (!instruments) {\n                return;\n            }\n\n            const allSupportedInstruments = flatMap(supportedInstruments, supportedProvider =>\n                filter(instruments, (instrument: PaymentInstrument): instrument is PaymentInstrument => {\n                    return isMatch(instrument, supportedProvider);\n                })\n            );\n\n            return allSupportedInstruments;\n        }\n    );\n\n    const getInstrumentsMeta = createSelector(\n        (state: InstrumentState) => state.meta,\n        meta => () => meta\n    );\n\n    const getLoadError = createSelector(\n        (state: InstrumentState) => state.errors.loadError,\n        loadError => () => loadError\n    );\n\n    const getDeleteError = createSelector(\n        (state: InstrumentState) => state.errors.failedInstrument,\n        (state: InstrumentState) => state.errors.deleteError,\n        (failedInstrument, deleteError) => (instrumentId?: string) => {\n            if (instrumentId && failedInstrument !== instrumentId) {\n                return;\n            }\n\n            return deleteError;\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: InstrumentState) => state.statuses.isLoading,\n        isLoading => () => !!isLoading\n    );\n\n    const isDeleting = createSelector(\n        (state: InstrumentState) => state.statuses.deletingInstrument,\n        (state: InstrumentState) => state.statuses.isDeleting,\n        (deletingInstrument, isDeleting) => (instrumentId?: string) => {\n            if (instrumentId && deletingInstrument !== instrumentId) {\n                return false;\n            }\n\n            return !!isDeleting;\n        }\n    );\n\n    return memoizeOne((\n        state: InstrumentState = DEFAULT_STATE\n    ): InstrumentSelector => {\n        return {\n            getCardInstrument: getCardInstrument(state),\n            getInstruments: getInstruments(state),\n            getInstrumentsByPaymentMethod: getInstrumentsByPaymentMethod(state),\n            getInstrumentsMeta: getInstrumentsMeta(state),\n            getLoadError: getLoadError(state),\n            getDeleteError: getDeleteError(state),\n            isLoading: isLoading(state),\n            isDeleting: isDeleting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { createSelector } from '../common/selector';\nimport { Country } from '../geography';\n\nimport FormField from './form-field';\nimport FormFieldsState, { DEFAULT_STATE } from './form-fields-state';\n\nexport default interface FormSelector {\n    getShippingAddressFields(countries: Country[] | undefined, countryCode: string): FormField[];\n    getBillingAddressFields(countries: Country[] | undefined, countryCode: string): FormField[];\n    getCustomerAccountFields(): FormField[];\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type FormSelectorFactory = (state: FormFieldsState) => FormSelector;\n\nexport function createFormSelectorFactory(): FormSelectorFactory {\n    const getShippingAddressFields = createSelector(\n        (state: FormFieldsState) => state.data,\n        formFields => (countries: Country[] = [], countryCode: string) => {\n            const selectedCountry = find(countries, { code: countryCode });\n            const fields = formFields ? formFields.shippingAddress : [];\n\n            return fields.map((field: any) => processField(field, countries, selectedCountry));\n        }\n    );\n\n    const getBillingAddressFields = createSelector(\n        (state: FormFieldsState) => state.data,\n        formFields => (countries: Country[] = [], countryCode: string) => {\n            const selectedCountry = find(countries, { code: countryCode });\n            const fields = formFields ? formFields.billingAddress : [];\n\n            return fields.map((field: any) => processField(field, countries, selectedCountry));\n        }\n    );\n\n    const getCustomerAccountFields = createSelector(\n        (state: FormFieldsState) => state.data,\n        formFields => () => formFields ? formFields.customerAccount : []\n    );\n\n    const getLoadError = createSelector(\n        (state: FormFieldsState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: FormFieldsState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    function processField(field: FormField, countries: Country[], selectedCountry?: Country): FormField {\n        if (field.name === 'countryCode') {\n            return processCountry(field, countries, selectedCountry);\n        }\n\n        if (field.name === 'stateOrProvince') {\n            return processProvince(field, selectedCountry);\n        }\n\n        if (field.name === 'postalCode') {\n            return processsPostCode(field, selectedCountry);\n        }\n\n        return field;\n    }\n\n    function processCountry(field: FormField, countries: Country[] = [], country?: Country): FormField {\n        if (!countries.length) {\n            return field;\n        }\n\n        const { code = '' } = country || {};\n        const items = countries.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            options: { items },\n            default: code,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    function processProvince(field: FormField, country?: Country): FormField {\n        const { subdivisions = [], requiresState } = country || {};\n\n        if (!subdivisions.length) {\n            return {\n                ...field,\n                required: requiresState == null ? false : requiresState,\n            };\n        }\n\n        const items = subdivisions.map(({ code, name }: any) => ({\n            value: code,\n            label: name,\n        }));\n\n        return {\n            ...field,\n            name: 'stateOrProvinceCode',\n            options: { items },\n            required: requiresState == null ? true : requiresState,\n            type: 'array',\n            fieldType: 'dropdown',\n            itemtype: 'string',\n        };\n    }\n\n    function processsPostCode(field: FormField, country?: Country): FormField {\n        const { hasPostalCodes = [] } = country || {};\n\n        if (hasPostalCodes === undefined) {\n            return field;\n        }\n\n        return { ...field, required: Boolean(hasPostalCodes) };\n    }\n\n    return memoizeOne((\n        state: FormFieldsState = DEFAULT_STATE\n    ): FormSelector => {\n        return {\n            getShippingAddressFields: getShippingAddressFields(state),\n            getBillingAddressFields: getBillingAddressFields(state),\n            getCustomerAccountFields: getCustomerAccountFields(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\n\nimport PaymentMethod from './payment-method';\nimport PaymentMethodMeta from './payment-method-meta';\nimport PaymentMethodState, { DEFAULT_STATE } from './payment-method-state';\n\nexport default interface PaymentMethodSelector {\n    getPaymentMethods(): PaymentMethod[] | undefined;\n    getPaymentMethodsMeta(): PaymentMethodMeta | undefined;\n    getPaymentMethod(methodId: string, gatewayId?: string): PaymentMethod | undefined;\n    getPaymentMethodOrThrow(methodId: string, gatewayId ?: string): PaymentMethod;\n    getLoadError(): Error | undefined;\n    getLoadMethodError(methodId?: string): Error | undefined;\n    isLoading(): boolean;\n    isLoadingMethod(methodId?: string): boolean;\n}\n\nexport type PaymentMethodSelectorFactory = (state: PaymentMethodState) => PaymentMethodSelector;\n\nexport function createPaymentMethodSelectorFactory(): PaymentMethodSelectorFactory {\n    const getPaymentMethods = createSelector(\n        (state: PaymentMethodState) => state.data,\n        paymentMethods => () => paymentMethods\n    );\n\n    const getPaymentMethodsMeta = createSelector(\n        (state: PaymentMethodState) => state.meta,\n        meta => () => meta\n    );\n\n    const getPaymentMethod = createSelector(\n        (state: PaymentMethodState) => state.data,\n        paymentMethods => (methodId: string, gatewayId?: string) => {\n            return gatewayId ?\n                find(paymentMethods, { id: methodId, gateway: gatewayId }) :\n                find(paymentMethods, { id: methodId });\n        }\n    );\n\n    const getPaymentMethodOrThrow = createSelector(\n        getPaymentMethod,\n        getPaymentMethod => (methodId: string, gatewayId?: string) => {\n            return guard(getPaymentMethod(methodId, gatewayId), () => new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: PaymentMethodState) => state.errors.loadError,\n        loadError => () => loadError\n    );\n\n    const getLoadMethodError = createSelector(\n        (state: PaymentMethodState) => state.errors.loadMethodId,\n        (state: PaymentMethodState) => state.errors.loadMethodError,\n        (loadMethodId, loadMethodError) => (methodId?: string) => {\n            if (methodId && loadMethodId !== methodId) {\n                return;\n            }\n\n            return loadMethodError;\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: PaymentMethodState) => state.statuses.isLoading,\n        isLoading => () => !!isLoading\n    );\n\n    const isLoadingMethod = createSelector(\n        (state: PaymentMethodState) => state.statuses.loadMethodId,\n        (state: PaymentMethodState) => state.statuses.isLoadingMethod,\n        (loadMethodId, isLoadingMethod) => (methodId?: string) => {\n            if (methodId && loadMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isLoadingMethod;\n        }\n    );\n\n    return memoizeOne((\n        state: PaymentMethodState = DEFAULT_STATE\n    ): PaymentMethodSelector => {\n        return {\n            getPaymentMethods: getPaymentMethods(state),\n            getPaymentMethodsMeta: getPaymentMethodsMeta(state),\n            getPaymentMethod: getPaymentMethod(state),\n            getPaymentMethodOrThrow: getPaymentMethodOrThrow(state),\n            getLoadError: getLoadError(state),\n            getLoadMethodError: getLoadMethodError(state),\n            isLoading: isLoading(state),\n            isLoadingMethod: isLoadingMethod(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport PaymentStrategyState, { DEFAULT_STATE } from './payment-strategy-state';\n\nexport default interface PaymentStrategySelector {\n    getInitializeError(methodId?: string): Error | undefined;\n    getExecuteError(methodId?: string): Error | undefined;\n    getFinalizeError(methodId?: string): Error | undefined;\n    getWidgetInteractingError(methodId?: string): Error | undefined;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n    isExecuting(methodId?: string): boolean;\n    isFinalizing(methodId?: string): boolean;\n    isWidgetInteracting(methodId?: string): boolean;\n}\n\nexport type PaymentStrategySelectorFactory = (state: PaymentStrategyState) => PaymentStrategySelector;\n\nexport function createPaymentStrategySelectorFactory(): PaymentStrategySelectorFactory {\n    const getInitializeError = createSelector(\n        (state: PaymentStrategyState) => state.errors.initializeMethodId,\n        (state: PaymentStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const getExecuteError = createSelector(\n        (state: PaymentStrategyState) => state.errors.executeMethodId,\n        (state: PaymentStrategyState) => state.errors.executeError,\n        (executeMethodId, executeError) => (methodId?: string) => {\n            if (methodId && executeMethodId !== methodId) {\n                return;\n            }\n\n            return executeError;\n        }\n    );\n\n    const getFinalizeError = createSelector(\n        (state: PaymentStrategyState) => state.errors.finalizeMethodId,\n        (state: PaymentStrategyState) => state.errors.finalizeError,\n        (finalizeMethodId, finalizeError) => (methodId?: string) => {\n            if (methodId && finalizeMethodId !== methodId) {\n                return;\n            }\n\n            return finalizeError;\n        }\n    );\n\n    const getWidgetInteractingError = createSelector(\n        (state: PaymentStrategyState) => state.errors.widgetInteractionMethodId,\n        (state: PaymentStrategyState) => state.errors.widgetInteractionError,\n        (widgetInteractionMethodId, widgetInteractionError) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return;\n            }\n\n            return widgetInteractionError;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: PaymentStrategyState) => state.statuses.initializeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: PaymentStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    const isExecuting = createSelector(\n        (state: PaymentStrategyState) => state.statuses.executeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isExecuting,\n        (executeMethodId, isExecuting) => (methodId?: string) => {\n            if (methodId && executeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isExecuting;\n        }\n    );\n\n    const isFinalizing = createSelector(\n        (state: PaymentStrategyState) => state.statuses.finalizeMethodId,\n        (state: PaymentStrategyState) => state.statuses.isFinalizing,\n        (finalizeMethodId, isFinalizing) => (methodId?: string) => {\n            if (methodId && finalizeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isFinalizing;\n        }\n    );\n\n    const isWidgetInteracting = createSelector(\n        (state: PaymentStrategyState) => state.statuses.widgetInteractionMethodId,\n        (state: PaymentStrategyState) => state.statuses.isWidgetInteracting,\n        (widgetInteractionMethodId, isWidgetInteracting) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isWidgetInteracting;\n        }\n    );\n\n    return memoizeOne((\n        state: PaymentStrategyState = DEFAULT_STATE\n    ): PaymentStrategySelector => {\n        return {\n            getInitializeError: getInitializeError(state),\n            getExecuteError: getExecuteError(state),\n            getFinalizeError: getFinalizeError(state),\n            getWidgetInteractingError: getWidgetInteractingError(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isExecuting: isExecuting(state),\n            isFinalizing: isFinalizing(state),\n            isWidgetInteracting: isWidgetInteracting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\nimport { Country } from '../geography';\n\nimport ShippingCountryState, { DEFAULT_STATE } from './shipping-country-state';\n\nexport default interface ShippingCountrySelector {\n    getShippingCountries(): Country[] | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type ShippingCountrySelectorFactory = (state: ShippingCountryState) => ShippingCountrySelector;\n\nexport function createShippingCountrySelectorFactory(): ShippingCountrySelectorFactory {\n    const getShippingCountries = createSelector(\n        (state: ShippingCountryState) => state.data,\n        data => () => data\n    );\n\n    const getLoadError = createSelector(\n        (state: ShippingCountryState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: ShippingCountryState) => state.statuses.isLoading,\n        status => () => !!status\n    );\n\n    return memoizeOne((\n        state: ShippingCountryState = DEFAULT_STATE\n    ): ShippingCountrySelector => {\n        return {\n            getShippingCountries: getShippingCountries(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport ShippingStrategyState, { DEFAULT_STATE } from './shipping-strategy-state';\n\nexport default interface ShippingStrategySelector {\n    getUpdateAddressError(methodId?: string): Error | undefined;\n    getSelectOptionError(methodId?: string): Error | undefined;\n    getInitializeError(methodId?: string): Error | undefined;\n    getWidgetInteractionError(methodId?: string): Error | undefined;\n    isUpdatingAddress(methodId?: string): boolean;\n    isSelectingOption(methodId?: string): boolean;\n    isInitializing(methodId?: string): boolean;\n    isInitialized(methodId: string): boolean;\n    isWidgetInteracting(methodId?: string): boolean;\n}\n\nexport type ShippingStrategySelectorFactory = (state: ShippingStrategyState) => ShippingStrategySelector;\n\nexport function createShippingStrategySelectorFactory(): ShippingStrategySelectorFactory {\n    const getUpdateAddressError = createSelector(\n        (state: ShippingStrategyState) => state.errors.updateAddressMethodId,\n        (state: ShippingStrategyState) => state.errors.updateAddressError,\n        (updateAddressMethodId, updateAddressError) => (methodId?: string) => {\n            if (methodId && updateAddressMethodId !== methodId) {\n                return;\n            }\n\n            return updateAddressError;\n        }\n    );\n\n    const getSelectOptionError = createSelector(\n        (state: ShippingStrategyState) => state.errors.selectOptionMethodId,\n        (state: ShippingStrategyState) => state.errors.selectOptionError,\n        (selectOptionMethodId, selectOptionError) => (methodId?: string) => {\n            if (methodId && selectOptionMethodId !== methodId) {\n                return;\n            }\n\n            return selectOptionError;\n        }\n    );\n\n    const getInitializeError = createSelector(\n        (state: ShippingStrategyState) => state.errors.initializeMethodId,\n        (state: ShippingStrategyState) => state.errors.initializeError,\n        (initializeMethodId, initializeError) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return;\n            }\n\n            return initializeError;\n        }\n    );\n\n    const getWidgetInteractionError = createSelector(\n        (state: ShippingStrategyState) => state.errors.widgetInteractionMethodId,\n        (state: ShippingStrategyState) => state.errors.widgetInteractionError,\n        (widgetInteractionMethodId, widgetInteractionError) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return;\n            }\n\n            return widgetInteractionError;\n        }\n    );\n\n    const isUpdatingAddress = createSelector(\n        (state: ShippingStrategyState) => state.statuses.updateAddressMethodId,\n        (state: ShippingStrategyState) => state.statuses.isUpdatingAddress,\n        (updateAddressMethodId, isUpdatingAddress) => (methodId?: string) => {\n            if (methodId && updateAddressMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isUpdatingAddress;\n        }\n    );\n\n    const isSelectingOption = createSelector(\n        (state: ShippingStrategyState) => state.statuses.selectOptionMethodId,\n        (state: ShippingStrategyState) => state.statuses.isSelectingOption,\n        (selectOptionMethodId, isSelectingOption) => (methodId?: string) => {\n            if (methodId && selectOptionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isSelectingOption;\n        }\n    );\n\n    const isInitializing = createSelector(\n        (state: ShippingStrategyState) => state.statuses.initializeMethodId,\n        (state: ShippingStrategyState) => state.statuses.isInitializing,\n        (initializeMethodId, isInitializing) => (methodId?: string) => {\n            if (methodId && initializeMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isInitializing;\n        }\n    );\n\n    const isInitialized = createSelector(\n        (state: ShippingStrategyState) => state.data,\n        data => (methodId: string) => {\n            return !!(\n                data[methodId] &&\n                data[methodId].isInitialized\n            );\n        }\n    );\n\n    const isWidgetInteracting = createSelector(\n        (state: ShippingStrategyState) => state.statuses.widgetInteractionMethodId,\n        (state: ShippingStrategyState) => state.statuses.isWidgetInteracting,\n        (widgetInteractionMethodId, isWidgetInteracting) => (methodId?: string) => {\n            if (methodId && widgetInteractionMethodId !== methodId) {\n                return false;\n            }\n\n            return !!isWidgetInteracting;\n        }\n    );\n\n    return memoizeOne((\n        state: ShippingStrategyState = DEFAULT_STATE\n    ): ShippingStrategySelector => {\n        return {\n            getUpdateAddressError: getUpdateAddressError(state),\n            getSelectOptionError: getSelectOptionError(state),\n            getInitializeError: getInitializeError(state),\n            getWidgetInteractionError: getWidgetInteractionError(state),\n            isUpdatingAddress: isUpdatingAddress(state),\n            isSelectingOption: isSelectingOption(state),\n            isInitializing: isInitializing(state),\n            isInitialized: isInitialized(state),\n            isWidgetInteracting: isWidgetInteracting(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { find } from 'lodash';\n\nimport { isAddressEqual, AddressRequestBody } from '../address';\nimport { CartSelector, PhysicalItem } from '../cart';\nimport { createSelector } from '../common/selector';\n\nimport Consignment from './consignment';\nimport ConsignmentState, { DEFAULT_STATE } from './consignment-state';\nimport ShippingOption from './shipping-option';\n\nexport default interface ConsignmentSelector {\n    getConsignments(): Consignment[] | undefined;\n    getConsignmentById(id: string): Consignment | undefined;\n    getConsignmentByAddress(address: AddressRequestBody): Consignment | undefined;\n    getShippingOption(): ShippingOption | undefined;\n    getLoadError(): Error | undefined;\n    getCreateError(): Error | undefined;\n    getLoadShippingOptionsError(): Error | undefined;\n    getUnassignedItems(): PhysicalItem[];\n    getUpdateError(consignmentId?: string): Error | undefined;\n    getDeleteError(consignmentId?: string): Error | undefined;\n    getItemAssignmentError(address: AddressRequestBody): Error | undefined;\n    getUpdateShippingOptionError(consignmentId?: string): Error | undefined;\n    isLoading(): boolean;\n    isLoadingShippingOptions(): boolean;\n    isCreating(): boolean;\n    isUpdating(consignmentId?: string): boolean;\n    isDeleting(consignmentId?: string): boolean;\n    isAssigningItems(address: AddressRequestBody): boolean;\n    isUpdatingShippingOption(consignmentId?: string): boolean;\n}\n\nexport type ConsignmentSelectorFactory = (\n    state: ConsignmentState,\n    cart: CartSelector\n) => ConsignmentSelector;\n\ninterface ConsignmentSelectorDependencies {\n    cart: CartSelector;\n}\n\nexport function createConsignmentSelectorFactory(): ConsignmentSelectorFactory {\n    const getConsignments = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => consignments\n    );\n\n    const getConsignmentById = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => (id: string) => {\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return find(consignments, { id });\n        }\n    );\n\n    const getConsignmentByAddress = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => (address: AddressRequestBody) => {\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return find(consignments, consignment =>\n                isAddressEqual(consignment.shippingAddress, address)\n            );\n        }\n    );\n\n    const getShippingOption = createSelector(\n        (state: ConsignmentState) => state.data,\n        consignments => () => {\n            if (consignments && consignments.length) {\n                return consignments[0].selectedShippingOption;\n            }\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: ConsignmentState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const getCreateError = createSelector(\n        (state: ConsignmentState) => state.errors.createError,\n        error => () => error\n    );\n\n    const getLoadShippingOptionsError = createSelector(\n        (state: ConsignmentState) => state.errors.loadShippingOptionsError,\n        error => () => error\n    );\n\n    const getUnassignedItems = createSelector(\n        getConsignments,\n        (_: ConsignmentState, { cart }: ConsignmentSelectorDependencies) => cart.getCart,\n        (getConsignments, getCart) => () => {\n            const cart = getCart();\n\n            if (!cart) {\n                return [];\n            }\n\n            const assignedLineItemIds = (getConsignments() || []).reduce(\n                (itemIds, consignment) => itemIds.concat(consignment.lineItemIds),\n                [] as string[]\n            );\n\n            return (cart.lineItems.physicalItems || []).filter(\n                item => assignedLineItemIds.indexOf(item.id as string) < 0\n            );\n        }\n    );\n\n    const getUpdateError = createSelector(\n        (state: ConsignmentState) => state.errors.updateError,\n        updateError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return updateError[consignmentId];\n            }\n\n            return find(updateError);\n        }\n    );\n\n    const getDeleteError = createSelector(\n        (state: ConsignmentState) => state.errors.deleteError,\n        deleteError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return deleteError[consignmentId];\n            }\n\n            return find(deleteError);\n        }\n    );\n\n    const getItemAssignmentError = createSelector(\n        getConsignmentByAddress,\n        getUpdateError,\n        getCreateError,\n        (getConsignmentByAddress, getUpdateError, getCreateError) => (address: AddressRequestBody) => {\n            const consignment = getConsignmentByAddress(address);\n\n            return consignment ? getUpdateError(consignment.id) : getCreateError();\n        }\n    );\n\n    const getUpdateShippingOptionError = createSelector(\n        (state: ConsignmentState) => state.errors.updateShippingOptionError,\n        updateShippingOptionError => (consignmentId?: string) => {\n            if (consignmentId) {\n                return updateShippingOptionError[consignmentId];\n            }\n\n            return find(updateShippingOptionError);\n        }\n    );\n\n    const isLoading = createSelector(\n        (state: ConsignmentState) => state.statuses.isLoading,\n        isLoading => () => isLoading === true\n    );\n\n    const isLoadingShippingOptions = createSelector(\n        (state: ConsignmentState) => state.statuses.isLoadingShippingOptions,\n        isLoadingShippingOptions => () => isLoadingShippingOptions === true\n    );\n\n    const isCreating = createSelector(\n        (state: ConsignmentState) => state.statuses.isCreating,\n        isCreating => () => isCreating === true\n    );\n\n    const isUpdating = createSelector(\n        (state: ConsignmentState) => state.statuses.isUpdating,\n        isUpdating => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isUpdating[consignmentId] === true;\n            }\n\n            return find(isUpdating) === true;\n        }\n    );\n\n    const isDeleting = createSelector(\n        (state: ConsignmentState) => state.statuses.isDeleting,\n        isDeleting => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isDeleting[consignmentId] === true;\n            }\n\n            return find(isDeleting) === true;\n        }\n    );\n\n    const isAssigningItems = createSelector(\n        getConsignmentByAddress,\n        isUpdating,\n        isCreating,\n        (getConsignmentByAddress, isUpdating, isCreating) => (address: AddressRequestBody) => {\n            const consignment = getConsignmentByAddress(address);\n\n            return consignment ? isUpdating(consignment.id) : isCreating();\n        }\n    );\n\n    const isUpdatingShippingOption = createSelector(\n        (state: ConsignmentState) => state.statuses.isUpdatingShippingOption,\n        isUpdatingShippingOption => (consignmentId?: string) => {\n            if (consignmentId) {\n                return isUpdatingShippingOption[consignmentId] === true;\n            }\n\n            return find(isUpdatingShippingOption) === true;\n        }\n    );\n\n    return memoizeOne((\n        state: ConsignmentState = DEFAULT_STATE,\n        cart: CartSelector\n    ): ConsignmentSelector => {\n        return {\n            getConsignments: getConsignments(state),\n            getConsignmentById: getConsignmentById(state),\n            getConsignmentByAddress: getConsignmentByAddress(state),\n            getShippingOption: getShippingOption(state),\n            getLoadError: getLoadError(state),\n            getCreateError: getCreateError(state),\n            getLoadShippingOptionsError: getLoadShippingOptionsError(state),\n            getUnassignedItems: getUnassignedItems(state, { cart }),\n            getUpdateError: getUpdateError(state),\n            getDeleteError: getDeleteError(state),\n            getItemAssignmentError: getItemAssignmentError(state),\n            getUpdateShippingOptionError: getUpdateShippingOptionError(state),\n            isLoading: isLoading(state),\n            isLoadingShippingOptions: isLoadingShippingOptions(state),\n            isCreating: isCreating(state),\n            isUpdating: isUpdating(state),\n            isDeleting: isDeleting(state),\n            isAssigningItems: isAssigningItems(state),\n            isUpdatingShippingOption: isUpdatingShippingOption(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { BillingAddressSelector } from '../billing';\nimport { CartSelector } from '../cart';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\nimport { CouponSelector, GiftCertificateSelector } from '../coupon';\nimport { CustomerSelector } from '../customer';\nimport { ConsignmentSelector } from '../shipping';\n\nimport Checkout from './checkout';\nimport CheckoutState, { DEFAULT_STATE } from './checkout-state';\n\nexport default interface CheckoutSelector {\n    getCheckout(): Checkout | undefined;\n    getCheckoutOrThrow(): Checkout;\n    getOutstandingBalance(useStoreCredit?: boolean): number | undefined;\n    getLoadError(): Error | undefined;\n    getUpdateError(): Error | undefined;\n    isExecutingSpamCheck(): boolean;\n    isLoading(): boolean;\n    isUpdating(): boolean;\n}\n\nexport type CheckoutSelectorFactory = (\n    state: CheckoutState,\n    billingAddress: BillingAddressSelector,\n    cart: CartSelector,\n    consignments: ConsignmentSelector,\n    coupons: CouponSelector,\n    customer: CustomerSelector,\n    giftCertificates: GiftCertificateSelector\n) => CheckoutSelector;\n\ninterface CheckoutSelectorDependencies {\n    billingAddress: BillingAddressSelector;\n    cart: CartSelector;\n    consignments: ConsignmentSelector;\n    coupons: CouponSelector;\n    customer: CustomerSelector;\n    giftCertificates: GiftCertificateSelector;\n}\n\nexport function createCheckoutSelectorFactory(): CheckoutSelectorFactory {\n    const getCheckout = createSelector(\n        (state: CheckoutState) => state.data,\n        (_: CheckoutState, { billingAddress }: CheckoutSelectorDependencies) => billingAddress.getBillingAddress,\n        (_: CheckoutState, { cart }: CheckoutSelectorDependencies) => cart.getCart,\n        (_: CheckoutState, { customer }: CheckoutSelectorDependencies) => customer.getCustomer,\n        (_: CheckoutState, { consignments }: CheckoutSelectorDependencies) => consignments.getConsignments,\n        (_: CheckoutState, { coupons }: CheckoutSelectorDependencies) => coupons.getCoupons,\n        (_: CheckoutState, { giftCertificates }: CheckoutSelectorDependencies) => giftCertificates.getGiftCertificates,\n        (data, getBillingAddress, getCart, getCustomer, getConsignments, getCoupons, getGiftCertificates) => () => {\n            const billingAddress = getBillingAddress();\n            const cart = getCart();\n            const customer = getCustomer();\n            const consignments = getConsignments() || [];\n            const coupons = getCoupons() || [];\n            const giftCertificates = getGiftCertificates() || [];\n\n            if (!data || !cart || !customer) {\n                return;\n            }\n\n            return {\n                ...data,\n                billingAddress,\n                cart,\n                customer,\n                consignments,\n                coupons,\n                giftCertificates,\n            };\n        }\n    );\n\n    const getCheckoutOrThrow = createSelector(\n        getCheckout,\n        getCheckout => () => {\n            return guard(getCheckout(), () => new MissingDataError(MissingDataErrorType.MissingCheckout));\n        }\n    );\n\n    const getOutstandingBalance = createSelector(\n        getCheckout,\n        getCheckout => (useStoreCredit?: boolean) => {\n            const checkout = getCheckout();\n\n            if (!checkout) {\n                return;\n            }\n\n            const grandTotal = checkout.grandTotal || 0;\n            const storeCredit = checkout.customer.storeCredit || 0;\n\n            return useStoreCredit ? Math.max(grandTotal - storeCredit, 0) : checkout.outstandingBalance;\n        }\n    );\n\n    const getLoadError = createSelector(\n        (state: CheckoutState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const getUpdateError = createSelector(\n        (state: CheckoutState) => state.errors.updateError,\n        error => () => error\n    );\n\n    const isExecutingSpamCheck = createSelector(\n        (state: CheckoutState) => state.statuses.isExecutingSpamCheck,\n        isExecutingSpamCheck => () => isExecutingSpamCheck === true\n    );\n\n    const isLoading = createSelector(\n        (state: CheckoutState) => state.statuses.isLoading,\n        isLoading => () => isLoading === true\n    );\n\n    const isUpdating = createSelector(\n        (state: CheckoutState) => state.statuses.isUpdating,\n        isUpdating => () => isUpdating === true\n    );\n\n    return memoizeOne((\n        state: CheckoutState = DEFAULT_STATE,\n        billingAddress: BillingAddressSelector,\n        cart: CartSelector,\n        consignments: ConsignmentSelector,\n        coupons: CouponSelector,\n        customer: CustomerSelector,\n        giftCertificates: GiftCertificateSelector\n    ): CheckoutSelector => {\n        return {\n            getCheckout: getCheckout(state, {\n                billingAddress,\n                cart,\n                consignments,\n                coupons,\n                customer,\n                giftCertificates,\n            }),\n            getCheckoutOrThrow: getCheckoutOrThrow(state, {\n                billingAddress,\n                cart,\n                consignments,\n                coupons,\n                customer,\n                giftCertificates,\n            }),\n            getOutstandingBalance: getOutstandingBalance(state, {\n                billingAddress,\n                cart,\n                consignments,\n                coupons,\n                customer,\n                giftCertificates,\n            }),\n            getLoadError: getLoadError(state),\n            getUpdateError: getUpdateError(state),\n            isExecutingSpamCheck: isExecutingSpamCheck(state),\n            isLoading: isLoading(state),\n            isUpdating: isUpdating(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { BillingAddressSelector } from '../billing';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\nimport { guard } from '../common/utility';\nimport { CouponSelector } from '../coupon';\n\nimport Order from './order';\nimport OrderState, { DEFAULT_STATE, OrderMetaState } from './order-state';\n\nexport default interface OrderSelector {\n    getOrder(): Order | undefined;\n    getOrderOrThrow(): Order;\n    getOrderMeta(): OrderMetaState | undefined;\n    getLoadError(): Error | undefined;\n    isLoading(): boolean;\n}\n\nexport type OrderSelectorFactory = (\n    state: OrderState,\n    billingAddress: BillingAddressSelector,\n    coupons: CouponSelector\n) => OrderSelector;\n\ninterface OrderSelectorDependencies {\n    billingAddress: BillingAddressSelector;\n    coupons: CouponSelector;\n}\n\nexport function createOrderSelectorFactory(): OrderSelectorFactory {\n    const getOrder = createSelector(\n        (state: OrderState) => state.data,\n        (_: OrderState, { billingAddress }: OrderSelectorDependencies) => billingAddress.getBillingAddress(),\n        (_: OrderState, { coupons }: OrderSelectorDependencies) => coupons.getCoupons(),\n        (data, billingAddress, coupons = []) => () => {\n            if (!data || !billingAddress) {\n                return;\n            }\n\n            return {\n                ...data,\n                billingAddress,\n                coupons,\n            };\n        }\n    );\n\n    const getOrderOrThrow = createSelector(\n        getOrder,\n        getOrder => () => {\n            return guard(getOrder(), () => new MissingDataError(MissingDataErrorType.MissingOrder));\n        }\n    );\n\n    const getOrderMeta = createSelector(\n        (state: OrderState) => state.meta,\n        meta => () => meta\n    );\n\n    const getLoadError = createSelector(\n        (state: OrderState) => state.errors.loadError,\n        error => () => error\n    );\n\n    const isLoading = createSelector(\n        (state: OrderState) => !!state.statuses.isLoading,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: OrderState = DEFAULT_STATE,\n        billingAddress: BillingAddressSelector,\n        coupons: CouponSelector\n    ): OrderSelector => {\n        return {\n            getOrder: getOrder(state, { billingAddress, coupons }),\n            getOrderOrThrow: getOrderOrThrow(state, { billingAddress, coupons }),\n            getOrderMeta: getOrderMeta(state),\n            getLoadError: getLoadError(state),\n            isLoading: isLoading(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { RequestError } from '../common/error/errors';\nimport { createSelector } from '../common/selector';\n\nimport StoreCreditState, { DEFAULT_STATE } from './store-credit-state';\n\nexport default interface StoreCreditSelector {\n    getApplyError(): RequestError | undefined;\n    isApplying(): boolean;\n}\n\nexport type StoreCreditSelectorFactory = (state: StoreCreditState) => StoreCreditSelector;\n\nexport function createStoreCreditSelectorFactory(): StoreCreditSelectorFactory {\n    const getApplyError = createSelector(\n        (state: StoreCreditState) => state.errors.applyError,\n        error => () => error\n    );\n\n    const isApplying = createSelector(\n        (state: StoreCreditState) => !!state.statuses.isApplying,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: StoreCreditState = DEFAULT_STATE\n    ): StoreCreditSelector => {\n        return {\n            getApplyError: getApplyError(state),\n            isApplying: isApplying(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector } from '../common/selector';\n\nimport SubscriptionsState, { DEFAULT_STATE } from './subscriptions-state';\n\nexport default interface SubscriptionsSelector {\n    getUpdateError(): Error | undefined;\n    isUpdating(): boolean;\n}\n\nexport type SubscriptionsSelectorFactory = (state: SubscriptionsState) => SubscriptionsSelector;\n\nexport function createSubscriptionsSelectorFactory(): SubscriptionsSelectorFactory {\n    const getUpdateError = createSelector(\n        (state: SubscriptionsState) => state.errors.updateError,\n        error => () => error\n    );\n\n    const isUpdating = createSelector(\n        (state: SubscriptionsState) => !!state.statuses.isUpdating,\n        status => () => status\n    );\n\n    return memoizeOne((\n        state: SubscriptionsState = DEFAULT_STATE\n    ): SubscriptionsSelector => {\n        return {\n            getUpdateError: getUpdateError(state),\n            isUpdating: isUpdating(state),\n        };\n    });\n}\n","import { createDataStore } from '@bigcommerce/data-store';\n\nimport { createRequestErrorFactory } from '../common/error';\n\nimport CheckoutStore, { CheckoutStoreOptions } from './checkout-store';\nimport CheckoutStoreState from './checkout-store-state';\nimport createActionTransformer from './create-action-transformer';\nimport createCheckoutStoreReducer from './create-checkout-store-reducer';\nimport { createInternalCheckoutSelectorsFactory } from './create-internal-checkout-selectors';\n\nexport default function createCheckoutStore(\n    initialState: Partial<CheckoutStoreState> = {},\n    options?: CheckoutStoreOptions\n): CheckoutStore {\n    const actionTransformer = createActionTransformer(createRequestErrorFactory());\n    const createInternalCheckoutSelectors = createInternalCheckoutSelectorsFactory();\n    const stateTransformer = (state: CheckoutStoreState) => createInternalCheckoutSelectors(state);\n\n    return createDataStore(\n        createCheckoutStoreReducer(),\n        initialState,\n        { actionTransformer, stateTransformer, ...options }\n    );\n}\n","import { Action } from '@bigcommerce/data-store';\nimport { from, Observable, Subscribable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { RequestErrorFactory } from '../common/error';\n\nexport default function createActionTransformer(\n    requestErrorFactory: RequestErrorFactory\n): (action: Subscribable<Action>) => Observable<Action> {\n    return action$ => from(action$).pipe(catchError<Action, never>(action => {\n        if (action instanceof Error || action.payload instanceof Error) {\n            throw action;\n        }\n\n        if (isResponse(action.payload)) {\n            const message = action.payload.body && action.payload.body.detail;\n\n            throw { ...action, payload: requestErrorFactory.createError(action.payload, message) };\n        }\n\n        throw action;\n    }));\n}\n\nfunction isResponse(object: any) {\n    if (!object || typeof object !== 'object') {\n        return false;\n    }\n\n    return ['body', 'headers', 'status', 'statusText'].every(key =>\n        object.hasOwnProperty(key)\n    );\n}\n","import { PaymentMethodInvalidError } from '../../payment/errors';\n\nimport { UnrecoverableError } from './errors';\nimport RequestErrorFactory from './request-error-factory';\n\nexport default function createRequestErrorFactory(): RequestErrorFactory {\n    const factory = new RequestErrorFactory();\n\n    const unrecoverableErrorTypes = [\n        'catalog_only',\n        'empty_cart',\n        'invalid_order_id',\n        'invalid_order_token',\n        'missing_order_token',\n        'missing_provider_token',\n        'missing_shipping_method',\n        'order_completion_error',\n        'order_could_not_be_finalized_error',\n        'order_create_failed',\n        'provider_fatal_error',\n        'provider_setup_error',\n        'stock_too_low',\n    ];\n\n    unrecoverableErrorTypes.forEach(type => {\n        factory.register(type, (response, message) => new UnrecoverableError(response, message));\n    });\n\n    factory.register('invalid_payment_provider', response => new PaymentMethodInvalidError(response));\n    factory.register('payment_config_not_found', response => new PaymentMethodInvalidError(response));\n\n    return factory;\n}\n","import { combineReducers, Action, Reducer } from '@bigcommerce/data-store';\n\nimport { billingAddressReducer } from '../billing';\nimport { cartReducer } from '../cart';\nimport { checkoutButtonReducer } from '../checkout-buttons';\nimport { configReducer } from '../config';\nimport { couponReducer, giftCertificateReducer } from '../coupon';\nimport { customerReducer, customerStrategyReducer } from '../customer';\nimport { formFieldsReducer } from '../form';\nimport { countryReducer } from '../geography';\nimport { orderReducer } from '../order';\nimport { paymentMethodReducer, paymentReducer, paymentStrategyReducer } from '../payment';\nimport { instrumentReducer } from '../payment/instrument';\nimport { remoteCheckoutReducer } from '../remote-checkout';\nimport { consignmentReducer, shippingCountryReducer, shippingStrategyReducer } from '../shipping';\nimport { signInEmailReducer } from '../signin-email';\nimport { storeCreditReducer } from '../store-credit';\nimport { subscriptionsReducer } from '../subscription';\n\nimport checkoutReducer from './checkout-reducer';\nimport CheckoutStoreState from './checkout-store-state';\n\nexport default function createCheckoutStoreReducer(): Reducer<CheckoutStoreState, Action> {\n    return combineReducers({\n        billingAddress: billingAddressReducer,\n        cart: cartReducer,\n        checkout: checkoutReducer,\n        checkoutButton: checkoutButtonReducer,\n        config: configReducer,\n        consignments: consignmentReducer,\n        countries: countryReducer,\n        coupons: couponReducer,\n        customer: customerReducer,\n        customerStrategies: customerStrategyReducer,\n        formFields: formFieldsReducer,\n        giftCertificates: giftCertificateReducer,\n        instruments: instrumentReducer,\n        order: orderReducer,\n        payment: paymentReducer,\n        paymentMethods: paymentMethodReducer,\n        paymentStrategies: paymentStrategyReducer,\n        remoteCheckout: remoteCheckoutReducer,\n        shippingCountries: shippingCountryReducer,\n        shippingStrategies: shippingStrategyReducer,\n        signInEmail: signInEmailReducer,\n        subscriptions: subscriptionsReducer,\n        storeCredit: storeCreditReducer,\n    });\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../../common/error';\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error when we are unable to retrieve a checkout object from the\n * server using the provided ID. It could be because the shopper does not have\n * permission to view the object, or the ID itself is invalid.\n */\nexport default class CheckoutNotAvailableError extends RequestError {\n    constructor(response: Response<InternalErrorResponseBody>) {\n        super(response, { message: response.body.title });\n\n        this.name = 'CheckoutNotAvailableError';\n        this.type = 'checkout_not_available';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { joinOrMergeIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport Checkout, { CheckoutRequestBody } from './checkout';\nimport CHECKOUT_DEFAULT_INCLUDES from './checkout-default-includes';\nimport CheckoutParams from './checkout-params';\nimport { CheckoutNotAvailableError } from './errors';\n\nexport default class CheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadCheckout(id: string, { params: { include } = {}, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.get<Checkout>(url, {\n            params: {\n                include: joinOrMergeIncludes(CHECKOUT_DEFAULT_INCLUDES, include),\n            },\n            headers,\n            timeout,\n        }).catch(error => {\n            if (error.status >= 400 && error.status < 500) {\n                throw new CheckoutNotAvailableError(error);\n            }\n\n            throw error;\n        });\n    }\n\n    updateCheckout(id: string, body: CheckoutRequestBody, { params: { include } = {}, timeout }: RequestOptions<CheckoutParams> = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkout/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, {\n            params: {\n                include: joinOrMergeIncludes(CHECKOUT_DEFAULT_INCLUDES, include),\n            },\n            body,\n            headers,\n            timeout,\n        });\n    }\n}\n","export enum CheckoutIncludes {\n    AvailableShippingOptions = 'consignments.availableShippingOptions',\n    PhysicalItemsCategoryNames = 'cart.lineItems.physicalItems.categoryNames',\n    DigitalItemsCategoryNames = 'cart.lineItems.digitalItems.categoryNames',\n}\n\nexport default interface CheckoutParams {\n    include?: CheckoutIncludes[] | CheckoutIncludeParam;\n}\n\nexport type CheckoutIncludeParam = {\n    [key in CheckoutIncludes]?: boolean;\n};\n","import GiftCertificate from './gift-certificate';\nimport InternalGiftCertificate from './internal-gift-certificate';\n\n/**\n * @deprecated This mapper is only for internal use only. It is required during\n * the transition period as we are moving to adopt the new storefront API object\n * schema.\n */\nexport default function mapToInternalGiftCertificate(giftCertificate: GiftCertificate): InternalGiftCertificate {\n    return {\n        code: giftCertificate.code,\n        discountedAmount: giftCertificate.used,\n        remainingBalance: giftCertificate.remaining,\n        giftCertificate: {\n            balance: giftCertificate.balance,\n            code: giftCertificate.code,\n            purchaseDate: giftCertificate.purchaseDate,\n        },\n    };\n}\n","import { fromEvent } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\n\nimport { parseUrl } from '../url';\n\nimport IframeEvent from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport interface IframeEventPostOptions<TSuccessEvent extends IframeEvent, TErrorEvent extends IframeEvent> {\n    errorType?: TErrorEvent['type'];\n    successType?: TSuccessEvent['type'];\n}\n\nexport default class IframeEventPoster<TEvent> {\n    private _targetOrigin: string;\n\n    constructor(\n        targetOrigin: string,\n        private _targetWindow?: Window\n    ) {\n        this._targetOrigin = targetOrigin === '*' ? '*' : parseUrl(targetOrigin).origin;\n    }\n\n    post(event: TEvent): void;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent>;\n    post<TSuccessEvent extends IframeEvent = IframeEvent, TErrorEvent extends IframeEvent = IframeEvent>(\n        event: TEvent,\n        options?: IframeEventPostOptions<TSuccessEvent, TErrorEvent>\n    ): Promise<TSuccessEvent> | void {\n        const targetWindow = this._targetWindow;\n\n        if (window === targetWindow) {\n            return;\n        }\n\n        if (!targetWindow) {\n            throw new Error('Unable to post message because target window is not set.');\n        }\n\n        const result = options && fromEvent<MessageEvent>(window, 'message')\n            .pipe(\n                filter(event =>\n                    event.origin === this._targetOrigin &&\n                    isIframeEvent(event.data, event.data.type) &&\n                    [options.successType, options.errorType].indexOf(event.data.type) !== -1\n                ),\n                map(event => {\n                    if (options.errorType === event.data.type) {\n                        throw event.data;\n                    }\n\n                    return event.data;\n                }),\n                take(1)\n            )\n            .toPromise();\n\n        targetWindow.postMessage(event, this._targetOrigin);\n\n        return result;\n    }\n\n    setTarget(window: Window) {\n        this._targetWindow = window;\n    }\n}\n","import { appendWww, parseUrl } from '../url';\nimport { bindDecorator as bind } from '../utility';\n\nimport { IframeEventMap } from './iframe-event';\nimport isIframeEvent from './is-iframe-event';\n\nexport default class IframeEventListener<TEventMap extends IframeEventMap<keyof TEventMap>> {\n    private _isListening: boolean;\n    private _listeners: EventListeners<TEventMap>;\n    private _sourceOrigins: string[];\n\n    constructor(\n        sourceOrigin: string\n    ) {\n        this._sourceOrigins = [\n            parseUrl(sourceOrigin).origin,\n            appendWww(parseUrl(sourceOrigin)).origin,\n        ];\n        this._isListening = false;\n        this._listeners = {};\n    }\n\n    listen(): void {\n        if (this._isListening) {\n            return;\n        }\n\n        this._isListening = true;\n\n        window.addEventListener('message', this._handleMessage);\n    }\n\n    stopListen(): void {\n        if (!this._isListening) {\n            return;\n        }\n\n        this._isListening = false;\n\n        window.removeEventListener('message', this._handleMessage);\n    }\n\n    addListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        let listeners = this._listeners[type];\n\n        if (!listeners) {\n            this._listeners[type] = listeners = [];\n        }\n\n        if (listeners.indexOf(listener) === -1) {\n            listeners.push(listener);\n        }\n    }\n\n    removeListener<TType extends keyof TEventMap>(type: TType, listener: (event: TEventMap[TType]) => void): void {\n        const listeners = this._listeners[type];\n\n        if (!listeners) {\n            return;\n        }\n\n        const index = listeners.indexOf(listener);\n\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n\n    trigger<TType extends keyof TEventMap>(event: TEventMap[TType]): void {\n        const listeners = this._listeners[event.type];\n\n        if (!listeners) {\n            return;\n        }\n\n        listeners.forEach(listener => listener(event));\n    }\n\n    @bind\n    private _handleMessage(event: MessageEvent): void {\n        if ((this._sourceOrigins.indexOf(event.origin) === -1) ||\n            !isIframeEvent(event.data as TEventMap[keyof TEventMap], event.data.type)\n        ) {\n            return;\n        }\n\n        this.trigger(event.data);\n    }\n}\n\ntype EventListeners<TEventMap> = {\n    [key in keyof TEventMap]?: Array<(event: TEventMap[key]) => void>;\n};\n","import { memoize } from '@bigcommerce/memoize';\n\nimport { bindDecorator, isEqual, isPrivate, CacheKeyResolver } from '../utility';\n\n/**\n * Decorates a class by patching all of its methods to cache their return values\n * and return them if they are called again with the same set of parameters. The\n * decorator also binds all the methods to the calling instance so it can be\n * destructed.\n */\nexport default function selectorDecorator<T extends Constructor<object>>(target: T): T {\n    const decoratedTarget = class extends target {};\n\n    Object.getOwnPropertyNames(target.prototype)\n        .forEach(key => {\n            const descriptor = Object.getOwnPropertyDescriptor(target.prototype, key);\n\n            if (!descriptor || key === 'constructor') {\n                return;\n            }\n\n            Object.defineProperty(\n                decoratedTarget.prototype,\n                key,\n                selectorMethodDecorator(target.prototype, key, descriptor)\n            );\n        });\n\n    return decoratedTarget;\n}\n\nfunction selectorMethodDecorator<T extends Method>(target: object, key: string, descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T> {\n    if (typeof descriptor.value !== 'function') {\n        return descriptor;\n    }\n\n    let resolver = new CacheKeyResolver();\n    let method = descriptor.value;\n    let memoizedMethod = memoize(method);\n\n    return bindDecorator(target, key, {\n        get() {\n            const value = ((...args: any[]) => {\n                const cachedValue = memoizedMethod.call(this, ...args);\n\n                if (resolver.getUsedCount(...args) === 1) {\n                    return cachedValue;\n                }\n\n                const newValue = method.call(this, ...args);\n\n                if (isEqual(newValue, cachedValue, { keyFilter: key => !isPrivate(key) })) {\n                    return cachedValue;\n                }\n\n                memoizedMethod.cache.set(resolver.getKey(...args), newValue);\n\n                return newValue;\n            }) as T;\n\n            Object.defineProperty(this, key, { ...descriptor, value });\n\n            return value;\n        },\n        set(value) {\n            resolver = new CacheKeyResolver();\n            method = value;\n            memoizedMethod = memoize(method);\n        },\n    });\n}\n\nexport type Constructor<T> = new (...args: any[]) => T;\ntype Method = (...args: any[]) => any;\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\nimport { CheckoutButtonMethodType } from './strategies';\n\n@selector\nexport default class CheckoutButtonErrorSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    getInitializeButtonError(methodId?: CheckoutButtonMethodType): Error | undefined {\n        return this._checkoutButton.getInitializeError(methodId);\n    }\n\n    getDeinitializeButtonError(methodId?: CheckoutButtonMethodType): Error | undefined {\n        return this._checkoutButton.getDeinitializeError(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\nimport { selector } from '../common/selector';\n\nimport CheckoutButtonSelector from './checkout-button-selector';\nimport { CheckoutButtonMethodType } from './strategies';\n\n@selector\nexport default class CheckoutButtonStatusSelector {\n    private _checkoutButton: CheckoutButtonSelector;\n\n    /**\n     * @internal\n     */\n    constructor(selectors: InternalCheckoutSelectors) {\n        this._checkoutButton = selectors.checkoutButton;\n    }\n\n    isInitializingButton(methodId?: CheckoutButtonMethodType): boolean {\n        return this._checkoutButton.isInitializing(methodId);\n    }\n\n    isDeinitializingButton(methodId?: CheckoutButtonMethodType): boolean {\n        return this._checkoutButton.isDeinitializing(methodId);\n    }\n}\n","import { InternalCheckoutSelectors } from '../checkout';\n\nimport CheckoutButtonErrorSelector from './checkout-button-error-selector';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStatusSelector from './checkout-button-status-selector';\n\nexport default function createCheckoutButtonSelectors(selectors: InternalCheckoutSelectors): CheckoutButtonSelectors {\n    const errors = new CheckoutButtonErrorSelector(selectors);\n    const statuses = new CheckoutButtonStatusSelector(selectors);\n\n    return {\n        errors,\n        statuses,\n    };\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../checkout';\nimport { isElementId, setUniqueElementId } from '../common/dom';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport CheckoutButtonSelectors from './checkout-button-selectors';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonSelectors from './create-checkout-button-selectors';\n\n@bind\nexport default class CheckoutButtonInitializer {\n    private _state: CheckoutButtonSelectors;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _store: CheckoutStore,\n        private _buttonStrategyActionCreator: CheckoutButtonStrategyActionCreator\n    ) {\n        this._state = createCheckoutButtonSelectors(this._store.getState());\n\n        this._store.subscribe(state => {\n            this._state = createCheckoutButtonSelectors(state);\n        });\n    }\n\n    /**\n     * Returns a snapshot of the current state.\n     *\n     * The method returns a new instance every time there is a change in the\n     * state. You can query the state by calling any of its getter methods.\n     *\n     * ```js\n     * const state = service.getState();\n     *\n     * console.log(state.errors.getInitializeButtonError());\n     * console.log(state.statuses.isInitializingButton());\n     * ```\n     *\n     * @returns The current customer's checkout state\n     */\n    getState(): CheckoutButtonSelectors {\n        return this._state;\n    }\n\n    /**\n     * Subscribes to any changes to the current state.\n     *\n     * The method registers a callback function and executes it every time there\n     * is a change in the current state.\n     *\n     * ```js\n     * service.subscribe(state => {\n     *     console.log(state.statuses.isInitializingButton());\n     * });\n     * ```\n     *\n     * The method can be configured to notify subscribers only regarding\n     * relevant changes, by providing a filter function.\n     *\n     * ```js\n     * const filter = state => state.errors.getInitializeButtonError();\n     *\n     * // Only trigger the subscriber when the cart changes.\n     * service.subscribe(state => {\n     *     console.log(state.errors.getInitializeButtonError())\n     * }, filter);\n     * ```\n     *\n     * @param subscriber - The function to subscribe to state changes.\n     * @param filters - One or more functions to filter out irrelevant state\n     * changes. If more than one function is provided, the subscriber will only\n     * be triggered if all conditions are met.\n     * @returns A function, if called, will unsubscribe the subscriber.\n     */\n    subscribe(\n        subscriber: (state: CheckoutButtonSelectors) => void,\n        ...filters: Array<(state: CheckoutButtonSelectors) => any>\n    ): () => void {\n        return this._store.subscribe(\n            () => subscriber(this.getState()),\n            state => state.checkoutButton.getState(),\n            ...filters.map(filter => (state: InternalCheckoutSelectors) => filter(createCheckoutButtonSelectors(state)))\n        );\n    }\n\n    /**\n     * Initializes the checkout button of a payment method.\n     *\n     * When the checkout button is initialized, it will be inserted into the DOM,\n     * ready to be interacted with by the customer.\n     *\n     * ```js\n     * initializer.initializeButton({\n     *     methodId: 'braintreepaypal',\n     *     containerId: 'checkoutButton',\n     *     braintreepaypal: {\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeButton(options: CheckoutButtonInitializeOptions): Promise<CheckoutButtonSelectors> {\n        const containerIds = isElementId(options.containerId) ?\n            [options.containerId] :\n            setUniqueElementId(options.containerId, `${options.methodId}-container`);\n\n        return Promise.all(\n            containerIds.map(containerId => {\n                const action = this._buttonStrategyActionCreator.initialize({ ...options, containerId });\n                const queueId = `checkoutButtonStrategy:${options.methodId}:${containerId}`;\n\n                return this._store.dispatch(action, { queueId });\n            })\n        )\n            .then(() => this.getState());\n    }\n\n    /**\n     * De-initializes the checkout button by performing any necessary clean-ups.\n     *\n     * ```js\n     * await service.deinitializeButton({\n     *     methodId: 'braintreepaypal',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the checkout button.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeButton(options: CheckoutButtonOptions): Promise<CheckoutButtonSelectors> {\n        const action = this._buttonStrategyActionCreator.deinitialize(options);\n        const queueId = `checkoutButtonStrategy:${options.methodId}`;\n\n        return this._store.dispatch(action, { queueId })\n            .then(() => this.getState());\n    }\n}\n","enum CheckoutButtonMethodType {\n    AMAZON_PAY_V2 = 'amazonpay',\n    BRAINTREE_PAYPAL = 'braintreepaypal',\n    BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit',\n    GOOGLEPAY_ADYENV2 = 'googlepayadyenv2',\n    GOOGLEPAY_AUTHORIZENET = 'googlepayauthorizenet',\n    GOOGLEPAY_BRAINTREE = 'googlepaybraintree',\n    GOOGLEPAY_CHECKOUTCOM = 'googlepaycheckoutcom',\n    GOOGLEPAY_CYBERSOURCEV2 = 'googlepaycybersourcev2',\n    GOOGLEPAY_STRIPE = 'googlepaystripe',\n    MASTERPASS = 'masterpass',\n    PAYPALEXPRESS = 'paypalexpress',\n    PAYPALCOMMERCE = 'paypalcommerce',\n}\n\nexport default CheckoutButtonMethodType;\n","export default function isElementId(id: string): boolean {\n    return /^\\w[\\w\\-\\:\\.]*$/.test(id);\n}\n","import { uniqueId } from 'lodash';\n\nimport { InvalidArgumentError } from '../error/errors';\n\nexport default function setUniqueElementId(selector: string, idPrefix: string): string[] {\n    const containers = document.querySelectorAll(selector);\n\n    if (!containers.length) {\n        throw new InvalidArgumentError(`Unable to find any element with the specified selector: ${selector}`);\n    }\n\n    return Array.prototype.slice.call(containers)\n        .map((container: HTMLElement) => {\n            if (!container.id) {\n                container.id = uniqueId(idPrefix);\n            }\n\n            return container.id;\n        });\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, empty, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator } from '../payment';\n\nimport { CheckoutButtonActionType, DeinitializeButtonAction, InitializeButtonAction } from './checkout-button-actions';\nimport { CheckoutButtonInitializeOptions, CheckoutButtonOptions } from './checkout-button-options';\nimport { CheckoutButtonStrategy } from './strategies';\n\nexport default class CheckoutButtonStrategyActionCreator {\n    constructor(\n        private _registry: Registry<CheckoutButtonStrategy>,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): ThunkAction<InitializeButtonAction, InternalCheckoutSelectors> {\n        return store => {\n            const meta = { methodId: options.methodId, containerId: options.containerId };\n\n            if (store.getState().checkoutButton.isInitialized(options.methodId, options.containerId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(CheckoutButtonActionType.InitializeButtonRequested, undefined, meta)),\n                this._paymentMethodActionCreator.loadPaymentMethod(options.methodId, { timeout: options.timeout, useCache: true }),\n                defer(() => this._registry.get(options.methodId).initialize(options)\n                    .then(() => createAction(CheckoutButtonActionType.InitializeButtonSucceeded, undefined, meta)))\n            ).pipe(\n                catchError(error => throwErrorAction(CheckoutButtonActionType.InitializeButtonFailed, error, meta))\n            );\n        };\n    }\n\n    deinitialize(options: CheckoutButtonOptions): ThunkAction<DeinitializeButtonAction, InternalCheckoutSelectors> {\n        return store => {\n            const meta = { methodId: options.methodId };\n\n            if (!store.getState().checkoutButton.isInitialized(options.methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(CheckoutButtonActionType.DeinitializeButtonRequested, undefined, meta)),\n                defer(() => this._registry.get(options.methodId).deinitialize()\n                    .then(() => createAction(CheckoutButtonActionType.DeinitializeButtonSucceeded, undefined, meta)))\n            ).pipe(\n                catchError(error => throwErrorAction(CheckoutButtonActionType.DeinitializeButtonFailed, error, meta))\n            );\n        };\n    }\n}\n","import { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { PaymentMethod } from '../../../payment';\nimport { AmazonPayV2ButtonParams, AmazonPayV2PaymentProcessor, AmazonPayV2PayOptions, AmazonPayV2Placement } from '../../../payment/strategies/amazon-pay-v2';\nimport { getShippableItemsCount } from '../../../shipping';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nimport { AmazonPayV2ButtonInitializeOptions } from './amazon-pay-v2-button-options';\n\nexport default class AmazonPayV2ButtonStrategy implements CheckoutButtonStrategy {\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _amazonPayV2PaymentProcessor: AmazonPayV2PaymentProcessor\n    ) { }\n\n    async initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const { containerId, methodId, amazonpay } = options;\n\n        if (!containerId || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"containerId\" or \"methodId\" argument is not provided.');\n        }\n\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethodOrThrow(methodId);\n\n        await this._amazonPayV2PaymentProcessor.initialize(paymentMethod);\n        this._walletButton = await this._createSignInButton(containerId, paymentMethod, amazonpay);\n    }\n\n    deinitialize(): Promise<void> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        return Promise.resolve();\n    }\n\n    private async _createSignInButton(containerId: string, paymentMethod: PaymentMethod, options?: AmazonPayV2ButtonInitializeOptions): Promise<HTMLElement> {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const amazonButtonOptions = options ?? await this._getAmazonPayV2ButtonOptions(paymentMethod);\n\n        this._amazonPayV2PaymentProcessor.createButton(`#${containerId}`, amazonButtonOptions);\n\n        return container;\n    }\n\n    private async _getAmazonPayV2ButtonOptions(paymentMethod: PaymentMethod): Promise<AmazonPayV2ButtonParams> {\n        const state = await this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout());\n        const cart = state.cart.getCart();\n        const { storeProfile: { shopPath } } = state.config.getStoreConfigOrThrow();\n\n        const {\n            config: {\n                merchantId,\n                testMode,\n            },\n            initializationData: {\n                checkoutLanguage,\n                ledgerCurrency,\n                checkoutSessionMethod,\n                extractAmazonCheckoutSessionId,\n            },\n        } = paymentMethod;\n\n        if (!merchantId || !ledgerCurrency || !shopPath) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return {\n            merchantId,\n            createCheckoutSession: {\n                url: `${shopPath}/remote-checkout/${paymentMethod.id}/payment-session`,\n                method: checkoutSessionMethod,\n                extractAmazonCheckoutSessionId,\n            },\n            sandbox: !!testMode,\n            ledgerCurrency,\n            checkoutLanguage,\n            productType: cart && getShippableItemsCount(cart) === 0 ?\n                AmazonPayV2PayOptions.PayOnly :\n                AmazonPayV2PayOptions.PayAndShip,\n            placement: AmazonPayV2Placement.Cart,\n        };\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { pick } from 'lodash';\n\nimport { Address, LegacyAddress } from '../../../address';\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../../common/error/errors';\nimport { PaymentMethod } from '../../../payment';\nimport { BraintreeError,\n    BraintreePaypalCheckout,\n    BraintreeShippingAddressOverride,\n    BraintreeSDKCreator,\n    BraintreeTokenizePayload,\n    PaypalClientInstance,\n    RenderButtonsData } from '../../../payment/strategies/braintree';\nimport { PaypalAuthorizeData, PaypalHostWindow } from '../../../payment/strategies/paypal';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class BraintreePaypalButtonStrategy implements CheckoutButtonStrategy {\n    private _paypalCheckout?: BraintreePaypalCheckout;\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _formPoster: FormPoster,\n        private _offerCredit: boolean = false,\n        private _window: PaypalHostWindow,\n        private _renderButtonsData?: RenderButtonsData\n    ) {}\n\n    async initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const paypalOptions = (this._offerCredit ? options.braintreepaypalcredit : options.braintreepaypal) || {};\n        const state = this._store.getState();\n        const paymentMethod = this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n        const storeState = await this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout());\n        const currency = storeState.config.getStoreConfig()?.shopperCurrency;\n\n        if (!paymentMethod || !paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n        const container = `#${options.containerId}`;\n\n        this._renderButtonsData = {\n            paymentMethod,\n            paypalOptions,\n            container,\n        };\n\n        return Promise.all([\n            this._braintreeSDKCreator.getPaypalCheckout({currency: currency?.code }, (paypalCheckoutInstance: PaypalClientInstance) => this.renderButtons(paypalCheckoutInstance)),\n            this._braintreeSDKCreator.getPaypal(),\n        ])\n            .then(([paypalCheckout]) => {\n                if (!this._paypalCheckout) {\n                    this._paypalCheckout = paypalCheckout;\n                }\n            });\n    }\n\n    renderButtons(paypalCheckoutInstance: PaypalClientInstance) {\n        const { paypalOptions, paymentMethod, container } = this._renderButtonsData as RenderButtonsData;\n        const { paypal } = this._window;\n\n        if (paypal) {\n            const FUNDING_SOURCES = [];\n            for (const fundingKey in paypal.FUNDING) {\n                if (paypal.FUNDING.hasOwnProperty(fundingKey)) {\n                    const skipCreditSource = (fundingKey === 'CREDIT' || fundingKey === 'PAYLATER') && !paypalOptions.allowCredit;\n                    if (fundingKey === 'CARD' || skipCreditSource) {\n                        continue;\n                    }\n                    FUNDING_SOURCES.push(fundingKey.toLowerCase());\n                }\n            }\n\n            FUNDING_SOURCES.forEach(source => {\n                const button = paypal.Buttons({\n                    env: paymentMethod.config.testMode ? 'sandbox' : 'production',\n                    fundingSource: source,\n                    commit: false,\n                    style: {\n                        shape: 'rect',\n                        label: this._offerCredit ? 'credit' : undefined,\n                        ...pick(paypalOptions.style, 'layout', 'size', 'color', 'label', 'shape', 'tagline', 'fundingicons'),\n                    },\n                    createOrder: () => this._setupPayment(paypalCheckoutInstance, paypalOptions.shippingAddress, paypalOptions.onPaymentError),\n                    onApprove: (data: PaypalAuthorizeData) => this._tokenizePayment(data, paypalCheckoutInstance, paypalOptions.shouldProcessPayment, paypalOptions.onAuthorizeError),\n                });\n\n                if (button.isEligible()) {\n                    button.render(container);\n                }\n            });\n        }\n    }\n\n    deinitialize(): Promise<void> {\n        this._paymentMethod = undefined;\n        this._paypalCheckout = undefined;\n\n        this._braintreeSDKCreator.teardown();\n\n        return Promise.resolve();\n    }\n\n    private _setupPayment(\n        paypalCheckoutInstance: PaypalClientInstance,\n        address?: Address | null,\n        onError?: (error: BraintreeError | StandardError) => void\n    ): Promise<string> {\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const checkout = state.checkout.getCheckout();\n                const config = state.config.getStoreConfig();\n                const customer = state.customer.getCustomer();\n                const shippingAddress = address === undefined ?\n                    customer && customer.addresses && customer.addresses[0] :\n                    address;\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!config) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                return paypalCheckoutInstance.createPayment({\n                    flow: 'checkout',\n                    enableShippingAddress: true,\n                    shippingAddressEditable: false,\n                    shippingAddressOverride: shippingAddress ? this._mapToBraintreeAddress(shippingAddress) : undefined,\n                    amount: checkout?.outstandingBalance,\n                    currency: config?.currency.code,\n                    offerCredit: this._offerCredit,\n                });\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _tokenizePayment(\n        data: PaypalAuthorizeData,\n        paypalCheckoutInstance: PaypalClientInstance,\n        shouldProcessPayment?: boolean,\n        onError?: (error: BraintreeError | StandardError) => void\n    ): Promise<BraintreeTokenizePayload> {\n        if (!this._paymentMethod || !paypalCheckoutInstance) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        const methodId = this._paymentMethod.id;\n\n        return Promise.all([\n            paypalCheckoutInstance.tokenizePayment(data),\n            this._braintreeSDKCreator.getDataCollector({ paypal: true }),\n        ])\n            .then(([payload, { deviceData }]) => {\n                this._formPoster.postForm('/checkout.php', {\n                    payment_type: 'paypal',\n                    provider: methodId,\n                    action: shouldProcessPayment ? 'process_payment' : 'set_external_checkout',\n                    nonce: payload.nonce,\n                    device_data: deviceData,\n                    shipping_address: JSON.stringify(this._mapToLegacyShippingAddress(payload)),\n                    billing_address: JSON.stringify(this._mapToLegacyBillingAddress(payload)),\n                });\n\n                return payload;\n            })\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _mapToLegacyShippingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const shippingAddress = payload.details.shippingAddress;\n        const recipientName = shippingAddress && shippingAddress.recipientName || '';\n        const [firstName, lastName] = recipientName.split(' ');\n\n        return {\n            email: payload.details.email,\n            first_name: firstName,\n            last_name: lastName,\n            phone_number: payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToLegacyBillingAddress(payload: BraintreeTokenizePayload): Partial<LegacyAddress> {\n        const billingAddress = payload.details.billingAddress;\n        const shippingAddress = payload.details.shippingAddress;\n\n        if (billingAddress) {\n            return {\n                email: payload.details.email,\n                first_name: payload.details.firstName,\n                last_name: payload.details.lastName,\n                phone_number: payload.details.phone,\n                address_line_1: billingAddress.line1,\n                address_line_2: billingAddress.line2,\n                city: billingAddress.city,\n                state: billingAddress.state,\n                country_code: billingAddress.countryCode,\n                postal_code: billingAddress.postalCode,\n            };\n        }\n\n        return {\n            email: payload.details.email,\n            first_name: payload.details.firstName,\n            last_name: payload.details.lastName,\n            phone_number: payload.details.phone,\n            address_line_1: shippingAddress && shippingAddress.line1,\n            address_line_2: shippingAddress && shippingAddress.line2,\n            city: shippingAddress && shippingAddress.city,\n            state: shippingAddress && shippingAddress.state,\n            country_code: shippingAddress && shippingAddress.countryCode,\n            postal_code: shippingAddress && shippingAddress.postalCode,\n        };\n    }\n\n    private _mapToBraintreeAddress(address: Address): BraintreeShippingAddressOverride {\n        return {\n            line1: address.address1,\n            line2: address.address2,\n            city: address.city,\n            state: address.stateOrProvinceCode,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phone,\n            recipientName: `${address.firstName} ${address.lastName}`,\n        };\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { GooglePayPaymentProcessor } from '../../../payment/strategies/googlepay';\nimport { getShippableItemsCount } from '../../../shipping';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class GooglePayButtonStrategy implements CheckoutButtonStrategy {\n    private _methodId?: string;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _formPoster: FormPoster,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor\n    ) {}\n\n    async initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const { containerId, methodId } = options;\n\n        if (!containerId || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"containerId\" argument is not provided.');\n        }\n\n        this._methodId = methodId;\n\n        await this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout());\n        await this._googlePayPaymentProcessor.initialize(this._getMethodId());\n\n        this._walletButton = this._createSignInButton(containerId);\n    }\n\n    deinitialize(): Promise<void> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        return this._googlePayPaymentProcessor.deinitialize();\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const googlePayButton = this._googlePayPaymentProcessor.createButton(this._handleWalletButtonClick);\n\n        container.appendChild(googlePayButton);\n\n        return googlePayButton;\n    }\n\n    private _getMethodId(): string {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._methodId;\n    }\n\n    @bind\n    private async _handleWalletButtonClick(event: Event): Promise<void> {\n        event.preventDefault();\n        const cart = this._store.getState().cart.getCartOrThrow();\n        const hasPhysicalItems = getShippableItemsCount(cart) > 0;\n\n        try {\n            const paymentData = await this._googlePayPaymentProcessor.displayWallet();\n            await this._googlePayPaymentProcessor.handleSuccess(paymentData);\n            if (hasPhysicalItems && paymentData.shippingAddress) {\n                await this._googlePayPaymentProcessor.updateShippingAddress(paymentData.shippingAddress);\n            }\n            await this._onPaymentSelectComplete();\n        } catch (error) {\n            if (error && error.message !== 'CANCELED') {\n                throw error;\n            }\n        }\n    }\n\n    private _onPaymentSelectComplete(): void {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        });\n    }\n}\n","import { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { getCallbackUrl, Masterpass, MasterpassCheckoutOptions, MasterpassScriptLoader } from '../../../payment/strategies/masterpass';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class MasterpassButtonStrategy implements CheckoutButtonStrategy {\n    private _masterpassClient?: Masterpass;\n    private _methodId?: string;\n    private _signInButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const { containerId, methodId } = options;\n\n        if (!containerId || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"containerId\" argument is not provided.');\n        }\n\n        this._methodId = methodId;\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!paymentMethod || !paymentMethod.initializationData.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!storeConfig) {\n                    throw new InvalidArgumentError('Unable to retrieve store configuration');\n                }\n\n                const masterpassScriptLoaderParams = {\n                    useMasterpassSrc: paymentMethod.initializationData.isMasterpassSrcEnabled,\n                    language: storeConfig.storeProfile.storeLanguage,\n                    testMode: paymentMethod.config.testMode,\n                    checkoutId: paymentMethod.initializationData.checkoutId,\n                };\n\n                return this._masterpassScriptLoader.load(masterpassScriptLoaderParams);\n            })\n            .then(masterpass => {\n                this._masterpassClient = masterpass;\n                this._signInButton = this._createSignInButton(containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        if (this._signInButton && this._signInButton.parentNode) {\n            this._signInButton.removeEventListener('click', this._handleWalletButtonClick);\n            this._signInButton.parentNode.removeChild(this._signInButton);\n            this._signInButton = undefined;\n        }\n\n        return Promise.resolve();\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const buttonContainer = document.getElementById(containerId);\n        const state = this._store.getState();\n        const paymentMethod = this._methodId ? state.paymentMethods.getPaymentMethod(this._methodId) : null;\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!buttonContainer) {\n            throw new Error('Need a container to place the button');\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!storeConfig) {\n            throw new InvalidArgumentError('Unable to retrieve store configuration');\n        }\n\n        const button = document.createElement('input');\n\n        button.type = 'image';\n\n        if (paymentMethod.initializationData.isMasterpassSrcEnabled) {\n            const subdomain = paymentMethod.config.testMode ? 'sandbox.' : '';\n            const { storeLanguage } = storeConfig.storeProfile;\n            const { checkoutId } = paymentMethod.initializationData;\n\n            const params = [\n                `locale=${storeLanguage}`,\n                `paymentmethod=master,visa,amex,discover`,\n                `checkoutid=${checkoutId}`,\n            ];\n\n            button.src = [\n                `https://${subdomain}src.mastercard.com/assets/img/btn/src_chk_btn_126x030px.svg`,\n                params.join('&'),\n            ].join('?');\n        } else {\n            button.src = 'https://static.masterpass.com/dyn/img/btn/global/mp_chk_btn_160x037px.svg';\n        }\n\n        buttonContainer.appendChild(button);\n\n        button.addEventListener('click', this._handleWalletButtonClick);\n\n        return button;\n    }\n\n    private _createMasterpassPayload(): MasterpassCheckoutOptions {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const paymentMethod = this._methodId ? state.paymentMethods.getPaymentMethod(this._methodId) : null;\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return {\n            checkoutId: paymentMethod.initializationData.checkoutId,\n            allowedCardTypes: paymentMethod.initializationData.allowedCardTypes,\n            amount: checkout.cart.cartAmount.toString(),\n            currency: checkout.cart.currency.code,\n            cartId: checkout.cart.id,\n            callbackUrl: getCallbackUrl('cart'),\n        };\n    }\n\n    @bind\n    private _handleWalletButtonClick(): void {\n        if (!this._masterpassClient) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        this._masterpassClient.checkout(this._createMasterpassPayload());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { pick } from 'lodash';\n\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, StandardError } from '../../../common/error/errors';\nimport { INTERNAL_USE_ONLY } from '../../../common/http-request';\nimport { PaymentMethod } from '../../../payment';\nimport { PaypalActions, PaypalAuthorizeData, PaypalClientToken, PaypalScriptLoader } from '../../../payment/strategies/paypal';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class PaypalButtonStrategy implements CheckoutButtonStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paypalScriptLoader: PaypalScriptLoader,\n        private _formPoster: FormPoster,\n        private _host: string = ''\n    ) {}\n\n    initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        const paypalOptions = options.paypal;\n        const state = this._store.getState();\n        const paymentMethod = this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paypalOptions) {\n            throw new InvalidArgumentError();\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._paypalScriptLoader.loadPaypal(paymentMethod.config.merchantId)\n            .then(paypal => {\n                if (!paymentMethod || !paymentMethod.config.merchantId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const merchantId = paymentMethod.config.merchantId;\n                const env = paymentMethod.config.testMode ? 'sandbox' : 'production';\n                const clientToken: PaypalClientToken = { [env]: paypalOptions.clientId };\n\n                const allowedSources = [];\n                const disallowedSources = [];\n\n                if (paypalOptions.allowCredit) {\n                    allowedSources.push(paypal.FUNDING.CREDIT);\n                } else {\n                    disallowedSources.push(paypal.FUNDING.CREDIT);\n                }\n\n                return paypal.Button.render({\n                    env,\n                    client: clientToken,\n                    commit: paypalOptions.shouldProcessPayment,\n                    funding: {\n                        allowed: allowedSources,\n                        disallowed: disallowedSources,\n                    },\n                    style: {\n                        shape: 'rect',\n                        ...pick(paypalOptions.style, 'layout', 'size', 'color', 'label', 'shape', 'tagline', 'fundingicons'),\n                    },\n                    payment: (_, actions) => this._setupPayment(merchantId, actions, paypalOptions.onPaymentError),\n                    onAuthorize: (data, actions) => this._tokenizePayment(data, actions, paypalOptions.shouldProcessPayment, paypalOptions.onAuthorizeError),\n                }, options.containerId);\n            });\n    }\n\n    deinitialize(): Promise<void> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve();\n    }\n\n    private _setupPayment(merchantId: string, actions?: PaypalActions, onError?: (error: StandardError) => void): Promise<string> {\n        if (!actions) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        return this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout())\n            .then(state => {\n                const cart = state.cart.getCart();\n                const cartId = cart ? cart.id : '';\n\n                return actions.request.post(`${this._host}/api/storefront/payment/paypalexpress`, { merchantId, cartId }, {\n                    headers: {\n                        'X-API-INTERNAL': INTERNAL_USE_ONLY,\n                    },\n                });\n            })\n            .then(res => res.id)\n            .catch(error => {\n                if (onError) {\n                    onError(error);\n                }\n\n                throw error;\n            });\n    }\n\n    private _tokenizePayment(\n        data: PaypalAuthorizeData,\n        actions?: PaypalActions,\n        shouldProcessPayment?: boolean,\n        _onError?: (error: StandardError) => void // FIXME: This parameter seems to be unused\n    ): Promise<void> {\n        if (!this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        if (!actions) {\n            throw new NotInitializedError(NotInitializedErrorType.CheckoutButtonNotInitialized);\n        }\n\n        if (!data.paymentID || !data.payerID) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        const methodId = this._paymentMethod.id;\n\n        return actions.payment.get(data.paymentID).then(payload => {\n            this._formPoster.postForm('/checkout.php', {\n                payment_type: 'paypal',\n                provider: methodId,\n                action: shouldProcessPayment ? 'process_payment' : 'set_external_checkout',\n                paymentId: data.paymentID,\n                payerId: data.payerID,\n                payerInfo: JSON.stringify(payload.payer.payer_info),\n            });\n        });\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { Cart } from '../../../cart';\nimport { CheckoutActionCreator, CheckoutStore } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { ApproveDataOptions, ButtonsOptions, ClickDataOptions, DisableFundingType, PaypalCommerceInitializationData, PaypalCommercePaymentProcessor, PaypalCommerceScriptParams } from '../../../payment/strategies/paypal-commerce';\nimport { CheckoutButtonInitializeOptions } from '../../checkout-button-options';\nimport CheckoutButtonStrategy from '../checkout-button-strategy';\n\nexport default class PaypalCommerceButtonStrategy implements CheckoutButtonStrategy {\n    private _isCredit?: boolean;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _formPoster: FormPoster,\n        private _paypalCommercePaymentProcessor: PaypalCommercePaymentProcessor\n    ) {}\n\n    async initialize(options: CheckoutButtonInitializeOptions): Promise<void> {\n        let state = this._store.getState();\n        const { initializationData } = state.paymentMethods.getPaymentMethodOrThrow(options.methodId);\n\n        if (!initializationData.clientId) {\n            throw new InvalidArgumentError();\n        }\n\n        state = await this._store.dispatch(this._checkoutActionCreator.loadDefaultCheckout());\n        const cart = state.cart.getCartOrThrow();\n        const buttonParams: ButtonsOptions = {\n            onApprove: data => this._tokenizePayment(data),\n            onClick: data => this._handleClickButtonProvider(data),\n        };\n\n        if (options.paypalCommerce && options.paypalCommerce.style) {\n            buttonParams.style = options.paypalCommerce.style;\n        }\n\n        const messagingContainer = options.paypalCommerce?.messagingContainer;\n        const isMessagesAvailable = Boolean(messagingContainer && document.getElementById(messagingContainer));\n\n        await this._paypalCommercePaymentProcessor.initialize(this._getParamsScript(initializationData, cart));\n\n        this._paypalCommercePaymentProcessor.renderButtons(cart.id, `#${options.containerId}`, buttonParams);\n\n        if (isMessagesAvailable) {\n            this._paypalCommercePaymentProcessor.renderMessages(cart.cartAmount, `#${messagingContainer}`);\n        }\n\n        return Promise.resolve();\n    }\n\n    deinitialize(): Promise<void> {\n        this._isCredit = undefined;\n\n        return Promise.resolve();\n    }\n\n    private _handleClickButtonProvider({ fundingSource }: ClickDataOptions): void {\n        this._isCredit = fundingSource === 'credit' || fundingSource === 'paylater';\n    }\n\n    private _tokenizePayment({ orderID }: ApproveDataOptions) {\n        if (!orderID) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        return this._formPoster.postForm('/checkout.php', {\n            payment_type: 'paypal',\n            action: 'set_external_checkout',\n            provider: this._isCredit ? 'paypalcommercecredit' : 'paypalcommerce',\n            order_id: orderID,\n        });\n    }\n\n    private _getParamsScript(initializationData: PaypalCommerceInitializationData, cart: Cart): PaypalCommerceScriptParams {\n        const { clientId, intent, isPayPalCreditAvailable, merchantId, attributionId } = initializationData;\n        const disableFunding: DisableFundingType = [ 'card' ];\n\n        if (!isPayPalCreditAvailable) {\n            disableFunding.push('credit');\n        }\n\n        return {\n            'client-id': clientId,\n            'merchant-id': merchantId,\n            commit: false,\n            currency: cart.currency.code,\n            components: ['buttons', 'messages'],\n            'disable-funding': disableFunding,\n            intent,\n            'data-partner-attribution-id': attributionId,\n        };\n    }\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { createCheckoutStore } from '../checkout';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\n\nimport CheckoutButtonInitializer from './checkout-button-initializer';\nimport CheckoutButtonInitializerOptions from './checkout-button-initializer-options';\nimport CheckoutButtonStrategyActionCreator from './checkout-button-strategy-action-creator';\nimport createCheckoutButtonRegistry from './create-checkout-button-registry';\n\n/**\n * Creates an instance of `CheckoutButtonInitializer`.\n *\n * @remarks\n * ```js\n * const initializer = createCheckoutButtonInitializer();\n *\n * initializer.initializeButton({\n *     methodId: 'braintreepaypal',\n *     braintreepaypal: {\n *         container: '#checkoutButton',\n *     },\n * });\n * ```\n *\n * @alpha\n * Please note that `CheckoutButtonInitializer` is currently in an early stage\n * of development. Therefore the API is unstable and not ready for public\n * consumption.\n *\n * @param options - A set of construction options.\n * @returns an instance of `CheckoutButtonInitializer`.\n */\nexport default function createCheckoutButtonInitializer(\n    options?: CheckoutButtonInitializerOptions\n): CheckoutButtonInitializer {\n    const host = options && options.host;\n    const store = createCheckoutStore();\n    const requestSender = createRequestSender({ host });\n    const formPoster = createFormPoster({ host });\n\n    return new CheckoutButtonInitializer(\n        store,\n        new CheckoutButtonStrategyActionCreator(\n            createCheckoutButtonRegistry(store, requestSender, formPoster, host),\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender))\n        )\n    );\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { FormFieldsActionCreator, FormFieldsRequestSender } from '../form';\nimport { createAmazonPayV2PaymentProcessor } from '../payment/strategies/amazon-pay-v2';\nimport { BraintreeScriptLoader, BraintreeSDKCreator } from '../payment/strategies/braintree';\nimport { createGooglePayPaymentProcessor, GooglePayAdyenV2Initializer, GooglePayAuthorizeNetInitializer, GooglePayBraintreeInitializer, GooglePayCheckoutcomInitializer, GooglePayCybersourceV2Initializer, GooglePayStripeInitializer } from '../payment/strategies/googlepay';\nimport { MasterpassScriptLoader } from '../payment/strategies/masterpass';\nimport { PaypalScriptLoader } from '../payment/strategies/paypal';\nimport { createPaypalCommercePaymentProcessor } from '../payment/strategies/paypal-commerce';\n\nimport { CheckoutButtonMethodType, CheckoutButtonStrategy } from './strategies';\nimport { AmazonPayV2ButtonStrategy } from './strategies/amazon-pay-v2';\nimport { BraintreePaypalButtonStrategy } from './strategies/braintree';\nimport { GooglePayButtonStrategy } from './strategies/googlepay';\nimport { MasterpassButtonStrategy } from './strategies/masterpass';\nimport { PaypalButtonStrategy } from './strategies/paypal';\nimport { PaypalCommerceButtonStrategy } from './strategies/paypal-commerce';\n\nexport default function createCheckoutButtonRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender,\n    formPoster: FormPoster,\n    host?: string\n): Registry<CheckoutButtonStrategy, CheckoutButtonMethodType> {\n    const registry = new Registry<CheckoutButtonStrategy, CheckoutButtonMethodType>();\n    const scriptLoader = getScriptLoader();\n    const checkoutActionCreator = new CheckoutActionCreator(\n        new CheckoutRequestSender(requestSender),\n        new ConfigActionCreator(new ConfigRequestSender(requestSender)),\n        new FormFieldsActionCreator(new FormFieldsRequestSender(requestSender))\n    );\n    const paypalCommercePaymentProcessor = createPaypalCommercePaymentProcessor(scriptLoader, requestSender);\n\n    registry.register(CheckoutButtonMethodType.BRAINTREE_PAYPAL, () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            formPoster,\n            undefined,\n            window\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.BRAINTREE_PAYPAL_CREDIT, () =>\n        new BraintreePaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new BraintreeSDKCreator(new BraintreeScriptLoader(scriptLoader)),\n            formPoster,\n            true,\n            window\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.MASTERPASS, () =>\n        new MasterpassButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        ));\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_ADYENV2, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayAdyenV2Initializer()\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_AUTHORIZENET, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayAuthorizeNetInitializer()\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_BRAINTREE, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_CHECKOUTCOM, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayCheckoutcomInitializer(requestSender)\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_CYBERSOURCEV2, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayCybersourceV2Initializer()\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.GOOGLEPAY_STRIPE, () =>\n        new GooglePayButtonStrategy(\n            store,\n            formPoster,\n            checkoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            )\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.PAYPALEXPRESS, () =>\n        new PaypalButtonStrategy(\n            store,\n            checkoutActionCreator,\n            new PaypalScriptLoader(scriptLoader),\n            formPoster,\n            host\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.PAYPALCOMMERCE, () =>\n        new PaypalCommerceButtonStrategy(\n            store,\n            checkoutActionCreator,\n            formPoster,\n            paypalCommercePaymentProcessor\n        )\n    );\n\n    registry.register(CheckoutButtonMethodType.AMAZON_PAY_V2, () =>\n        new AmazonPayV2ButtonStrategy(\n            store,\n            checkoutActionCreator,\n            createAmazonPayV2PaymentProcessor()\n        )\n    );\n\n    return registry;\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport enum NotEmbeddableErrorType {\n    MissingContainer = 'missing_container',\n    MissingContent = 'missing_content',\n    UnknownError = 'unknown_error',\n}\n\n/**\n * Throw this error if we are not able to embed the checkout form as an iframe.\n * This can be due to the fact that the provided container ID is invalid, or the\n * checkout form fails to load inside the iframe. It can also be due to an\n * unknown reason.\n */\nexport default class NotEmbeddableError extends StandardError {\n    constructor(\n        message?: string,\n        public subtype: NotEmbeddableErrorType = NotEmbeddableErrorType.UnknownError\n    ) {\n        super(message || 'Unable to embed the checkout form.');\n\n        this.name = 'NotEmbeddableError';\n        this.type = 'not_embeddable';\n    }\n}\n","import { default as storage } from 'local-storage-fallback';\n\nexport default class BrowserStorage {\n    constructor(\n        private _namespace: string\n    ) {}\n\n    getItem<TValue = any>(key: string): TValue | null {\n        const rawValue = storage.getItem(this.withNamespace(key));\n\n        if (rawValue === null) {\n            return null;\n        }\n\n        try {\n            return JSON.parse(rawValue);\n        } catch (error) {\n            // Clean up invalid values\n            this.removeItem(this.withNamespace(key));\n\n            return null;\n        }\n    }\n\n    getItemOnce<TValue = any>(key: string): TValue | null {\n        const value = this.getItem(key);\n\n        this.removeItem(key);\n\n        return value;\n    }\n\n    setItem<TValue = any>(key: string, value: TValue): void {\n        return storage.setItem(this.withNamespace(key), JSON.stringify(value));\n    }\n\n    removeItem(key: string): void {\n        return storage.removeItem(this.withNamespace(key));\n    }\n\n    private withNamespace(key: string): string {\n        return `${this._namespace}.${key}`;\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { InternalErrorResponseBody } from '../../common/error';\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error we are not able to sign in a shopper because the provided\n * login token is invalid.\n */\nexport default class InvalidLoginTokenError extends RequestError {\n    constructor(response: Response<InternalErrorResponseBody>) {\n        super(response, { message: response.body.title });\n\n        this.name = 'InvalidLoginTokenError';\n        this.type = 'invalid_login_token';\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport { IframeEventListener, IframeEventPoster, IFrameComponent } from '../common/iframe';\nimport { LoadingIndicator } from '../common/loading-indicator';\nimport { BrowserStorage } from '../common/storage';\nimport { parseUrl } from '../common/url';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport EmbeddedCheckoutError from './embedded-checkout-error';\nimport { EmbeddedCheckoutEventMap, EmbeddedCheckoutEventType } from './embedded-checkout-events';\nimport EmbeddedCheckoutOptions from './embedded-checkout-options';\nimport { InvalidLoginTokenError, NotEmbeddableError, NotEmbeddableErrorType } from './errors';\nimport { EmbeddedContentEvent, EmbeddedContentEventType } from './iframe-content';\nimport ResizableIframeCreator from './resizable-iframe-creator';\n\nexport const ALLOW_COOKIE_ATTEMPT_INTERVAL = 10 * 60 * 1000;\nexport const IS_COOKIE_ALLOWED_KEY = 'isCookieAllowed';\nexport const LAST_ALLOW_COOKIE_ATTEMPT_KEY = 'lastAllowCookieAttempt';\n\n@bind\nexport default class EmbeddedCheckout {\n    private _iframe?: IFrameComponent;\n    private _isAttached: boolean;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _iframeCreator: ResizableIframeCreator,\n        private _messageListener: IframeEventListener<EmbeddedCheckoutEventMap>,\n        private _messagePoster: IframeEventPoster<EmbeddedContentEvent>,\n        private _loadingIndicator: LoadingIndicator,\n        private _requestSender: RequestSender,\n        private _storage: BrowserStorage,\n        private _location: Location,\n        private _options: EmbeddedCheckoutOptions\n    ) {\n        this._isAttached = false;\n\n        if (this._options.onComplete) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutComplete, this._options.onComplete);\n        }\n\n        if (this._options.onError) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutError, this._options.onError);\n        }\n\n        if (this._options.onLoad) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.CheckoutLoaded, this._options.onLoad);\n        }\n\n        if (this._options.onFrameLoad) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.FrameLoaded, this._options.onFrameLoad);\n        }\n\n        if (this._options.onSignOut) {\n            this._messageListener.addListener(EmbeddedCheckoutEventType.SignedOut, this._options.onSignOut);\n        }\n\n        this._messageListener.addListener(EmbeddedCheckoutEventType.FrameLoaded, () => this._configureStyles());\n    }\n\n    attach(): Promise<this> {\n        if (this._isAttached) {\n            return Promise.resolve(this);\n        }\n\n        this._isAttached = true;\n        this._messageListener.listen();\n        this._loadingIndicator.show(this._options.containerId);\n\n        return this._allowCookie()\n            .then(() => this._attemptLogin())\n            .then(url => this._iframeCreator.createFrame(url, this._options.containerId))\n            .then(iframe => {\n                this._iframe = iframe;\n\n                this._configureStyles();\n                this._loadingIndicator.hide();\n            })\n            .catch(error => {\n                this._isAttached = false;\n\n                return this._retryAllowCookie(error)\n                    .catch(() => {\n                        this._messageListener.trigger({\n                            type: EmbeddedCheckoutEventType.FrameError,\n                            payload: error,\n                        });\n\n                        this._loadingIndicator.hide();\n\n                        throw error;\n                    });\n            })\n            .then(() => this);\n    }\n\n    detach(): void {\n        if (!this._isAttached) {\n            return;\n        }\n\n        this._isAttached = false;\n        this._messageListener.stopListen();\n\n        if (this._iframe && this._iframe.parentNode) {\n            this._iframe.parentNode.removeChild(this._iframe);\n            this._iframe.iFrameResizer.close();\n        }\n    }\n\n    private _configureStyles(): void {\n        if (!this._iframe || !this._iframe.contentWindow || !this._options.styles) {\n            return;\n        }\n\n        this._messagePoster.setTarget(this._iframe.contentWindow);\n\n        this._messagePoster.post({\n            type: EmbeddedContentEventType.StyleConfigured,\n            payload: this._options.styles,\n        });\n    }\n\n    private _attemptLogin(): Promise<string> {\n        if (!/^\\/login\\/token/.test(parseUrl(this._options.url).pathname)) {\n            return Promise.resolve(this._options.url);\n        }\n\n        return this._requestSender.post<{ redirectUrl: string }>(this._options.url)\n            .then(({ body: { redirectUrl } }) => redirectUrl)\n            .catch(response => Promise.reject(new InvalidLoginTokenError(response)));\n    }\n\n    /**\n     * This workaround is required for certain browsers (namely Safari) that\n     * prevent session cookies to be set for a third party website unless the\n     * user has recently visited such website. Therefore, before we attempt to\n     * login or set an active cart in the session, we need to first redirect the\n     * user to the domain of Embedded Checkout.\n     */\n    private _allowCookie(): Promise<void> {\n        if (this._storage.getItem(IS_COOKIE_ALLOWED_KEY)) {\n            return Promise.resolve();\n        }\n\n        this._storage.setItem(IS_COOKIE_ALLOWED_KEY, true);\n\n        // It could be possible that the flag is set to true but the browser has\n        // already removed the permission to store third-party cookies. In that\n        // case, we should try to redirect the user again. But we only want to\n        // do it once within a fixed interval. This is to avoid getting into a\n        // redirect loop if the shopper actually doesn't have a valid card\n        // session.\n        this._storage.setItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY, Date.now());\n\n        const { origin } = parseUrl(this._options.url);\n        const redirectUrl = `${origin}/embedded-checkout/allow-cookie?returnUrl=${encodeURIComponent(this._location.href)}`;\n\n        document.body.style.visibility = 'hidden';\n        this._location.replace(redirectUrl);\n\n        return new Promise<never>(() => {});\n    }\n\n    private _retryAllowCookie(error: EmbeddedCheckoutError): Promise<void> {\n        const lastAttempt = Number(this._storage.getItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY));\n        const canRetry = (\n            (!lastAttempt || Date.now() - lastAttempt > ALLOW_COOKIE_ATTEMPT_INTERVAL) &&\n            error instanceof NotEmbeddableError &&\n            error.subtype === NotEmbeddableErrorType.MissingContent\n        );\n\n        if (!canRetry) {\n            return Promise.reject();\n        }\n\n        this._storage.removeItem(LAST_ALLOW_COOKIE_ATTEMPT_KEY);\n        this._storage.removeItem(IS_COOKIE_ALLOWED_KEY);\n\n        return this._allowCookie();\n    }\n}\n","import { iframeResizer, isIframeEvent, IFrameComponent } from '../common/iframe';\nimport { parseUrl } from '../common/url';\n\nimport { EmbeddedCheckoutEventType } from './embedded-checkout-events';\nimport { NotEmbeddableError, NotEmbeddableErrorType } from './errors';\n\nexport default class ResizableIframeCreator {\n    constructor(\n        private _options?: { timeout: number }\n    ) {}\n\n    createFrame(src: string, containerId: string): Promise<IFrameComponent> {\n        const container = document.getElementById(containerId);\n        const { timeout = 60000 } = this._options || {};\n\n        if (!container) {\n            throw new NotEmbeddableError(\n                'Unable to embed the iframe because the container element could not be found.',\n                NotEmbeddableErrorType.MissingContainer\n            );\n        }\n\n        const iframe = document.createElement('iframe');\n\n        iframe.src = src;\n        iframe.style.border = 'none';\n        iframe.style.display = 'none';\n        iframe.style.width = '100%';\n        iframe.allowPaymentRequest = true;\n\n        container.appendChild(iframe);\n\n        return this._toResizableFrame(iframe, timeout)\n            .catch(error => {\n                container.removeChild(iframe);\n\n                throw error;\n            });\n    }\n\n    private _toResizableFrame(iframe: HTMLIFrameElement, timeoutInterval: number): Promise<IFrameComponent> {\n        // Can't simply listen to `load` event because it always gets triggered even if there's an error.\n        // Instead, listen to the `load` inside the iframe and let the parent frame know when it happens.\n        return new Promise((resolve, reject) => {\n            const timeout = window.setTimeout(() => {\n                reject(new NotEmbeddableError('Unable to embed the iframe because the content could not be loaded.'));\n            }, timeoutInterval);\n\n            const handleMessage = (event: MessageEvent) => {\n                if (event.origin !== parseUrl(iframe.src).origin) {\n                    return;\n                }\n\n                if (isIframeEvent(event.data, EmbeddedCheckoutEventType.FrameError)) {\n                    teardown();\n                    reject(new NotEmbeddableError(event.data.payload.message, NotEmbeddableErrorType.MissingContent));\n                }\n\n                if (isIframeEvent(event.data, EmbeddedCheckoutEventType.FrameLoaded)) {\n                    iframe.style.display = '';\n\n                    const contentId = event.data.payload && event.data.payload.contentId;\n                    const iframes = iframeResizer({\n                        scrolling: false,\n                        sizeWidth: false,\n                        heightCalculationMethod: contentId ? 'taggedElement' : 'lowestElement',\n                    }, iframe);\n\n                    teardown();\n                    resolve(iframes[iframes.length - 1]);\n                }\n            };\n\n            const teardown = () => {\n                window.removeEventListener('message', handleMessage);\n                window.clearTimeout(timeout);\n            };\n\n            window.addEventListener('message', handleMessage);\n        });\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { LoadingIndicator } from '../common/loading-indicator';\nimport { BrowserStorage } from '../common/storage';\nimport { parseUrl } from '../common/url';\n\nimport EmbeddedCheckout from './embedded-checkout';\nimport { EmbeddedCheckoutEventMap } from './embedded-checkout-events';\nimport EmbeddedCheckoutOptions from './embedded-checkout-options';\nimport { EmbeddedContentEvent } from './iframe-content';\nimport ResizableIframeCreator from './resizable-iframe-creator';\n\nconst STORAGE_PREFIX = 'BigCommerce.EmbeddedCheckout';\n\n/**\n * Embed the checkout form in an iframe.\n *\n * @remarks\n * Once the iframe is embedded, it will automatically resize according to the\n * size of the checkout form. It will also notify the parent window when certain\n * events have occurred. i.e.: when the form is loaded and ready to be used.\n *\n * ```js\n * embedCheckout({\n *     url: 'https://checkout/url',\n *     containerId: 'container-id',\n * });\n * ```\n *\n * @param options - Options for embedding the checkout form.\n * @returns A promise that resolves to an instance of `EmbeddedCheckout`.\n */\nexport default function embedCheckout(options: EmbeddedCheckoutOptions): Promise<EmbeddedCheckout> {\n    const origin = parseUrl(options.url).origin;\n    const embeddedCheckout = new EmbeddedCheckout(\n        new ResizableIframeCreator(),\n        new IframeEventListener<EmbeddedCheckoutEventMap>(origin),\n        new IframeEventPoster<EmbeddedContentEvent>(origin),\n        new LoadingIndicator({ styles: options.styles && options.styles.loadingIndicator }),\n        createRequestSender(),\n        new BrowserStorage(STORAGE_PREFIX),\n        window.location,\n        options\n    );\n\n    return embeddedCheckout.attach();\n}\n","import { EmbeddedCheckoutFrameLoadedEvent } from '../embedded-checkout-events';\n\nexport default function handleFrameLoadedEvent(message: EmbeddedCheckoutFrameLoadedEvent): void {\n    if (!message.payload || !message.payload.contentId) {\n        return;\n    }\n\n    const body = document.getElementById(message.payload.contentId);\n\n    if (!body || body.hasAttribute('data-iframe-height')) {\n        return;\n    }\n\n    body.setAttribute('data-iframe-height', '');\n}\n","export default interface CustomError extends Error {\n    message: string;\n    type: string;\n    subtype?: string;\n}\n\nexport function isCustomError(error: any): error is CustomError {\n    return (\n        typeof error.message === 'string' &&\n        typeof error.type === 'string' &&\n        (typeof error.subtype === 'string' || !error.subtype) &&\n        error instanceof Error\n    );\n}\n","import { isCustomError, CustomError } from '../../common/error/errors';\nimport { IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { bindDecorator as bind } from '../../common/utility';\nimport EmbeddedCheckoutError from '../embedded-checkout-error';\nimport { EmbeddedCheckoutCompleteEvent, EmbeddedCheckoutErrorEvent, EmbeddedCheckoutEvent, EmbeddedCheckoutEventMap, EmbeddedCheckoutEventType, EmbeddedCheckoutFrameErrorEvent, EmbeddedCheckoutFrameLoadedEvent, EmbeddedCheckoutLoadedEvent, EmbeddedCheckoutSignedOutEvent } from '../embedded-checkout-events';\nimport EmbeddedCheckoutStyles from '../embedded-checkout-styles';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\nimport { EmbeddedContentEventMap, EmbeddedContentEventType } from './embedded-content-events';\nimport EmbeddedContentOptions from './embedded-content-options';\n\n@bind\nexport default class IframeEmbeddedCheckoutMessenger implements EmbeddedCheckoutMessenger {\n    /**\n     * @internal\n     */\n    constructor(\n        private _messageListener: IframeEventListener<EmbeddedContentEventMap>,\n        private _messagePoster: IframeEventPoster<EmbeddedCheckoutEvent>,\n        private _untargetedMessagePoster: IframeEventPoster<EmbeddedCheckoutEvent>,\n        private _messageHandlers: EventCallbacks<EmbeddedCheckoutEventMap> = {}\n    ) {\n        this._messageListener.listen();\n    }\n\n    postComplete(): void {\n        const message: EmbeddedCheckoutCompleteEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutComplete,\n        };\n\n        this._postMessage(message);\n    }\n\n    postError(payload: Error | CustomError): void {\n        const message: EmbeddedCheckoutErrorEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutError,\n            payload: this._transformError(payload),\n        };\n\n        this._postMessage(message);\n    }\n\n    postFrameError(payload: Error | CustomError): void {\n        const message: EmbeddedCheckoutFrameErrorEvent = {\n            type: EmbeddedCheckoutEventType.FrameError,\n            payload: this._transformError(payload),\n        };\n\n        // Ideally, all messages should be targeted at a specific origin.\n        // However, for `FrameError` message, we have to post it in an\n        // untargeted fashion. This is because the error could be caused by a\n        // missing cart. That makes it not possible to determine of site origin\n        // of the parent window. Nevertheless, we still want to notify the\n        // parent window about the error.\n        this._postMessage(message, { untargeted: true });\n    }\n\n    postFrameLoaded(payload?: EmbeddedContentOptions): void {\n        const message: EmbeddedCheckoutFrameLoadedEvent = {\n            type: EmbeddedCheckoutEventType.FrameLoaded,\n            payload,\n        };\n\n        this._postMessage(message);\n    }\n\n    postLoaded(): void {\n        const message: EmbeddedCheckoutLoadedEvent = {\n            type: EmbeddedCheckoutEventType.CheckoutLoaded,\n        };\n\n        this._postMessage(message);\n    }\n\n    postSignedOut(): void {\n        const message: EmbeddedCheckoutSignedOutEvent = {\n            type: EmbeddedCheckoutEventType.SignedOut,\n        };\n\n        this._postMessage(message);\n    }\n\n    receiveStyles(handler: (styles: EmbeddedCheckoutStyles) => void): void {\n        this._messageListener.addListener(EmbeddedContentEventType.StyleConfigured, ({ payload }) => {\n            handler(payload);\n        });\n    }\n\n    private _postMessage(message: EmbeddedCheckoutEvent, options?: { untargeted?: boolean }): void {\n        this._notifyMessageHandlers(message);\n\n        if (options && options.untargeted) {\n            return this._untargetedMessagePoster.post(message);\n        }\n\n        this._messagePoster.post(message);\n    }\n\n    private _notifyMessageHandlers(message: EmbeddedCheckoutEvent): void {\n        Object.keys(this._messageHandlers)\n            .forEach(key => {\n                if (message.type !== key) {\n                    return;\n                }\n\n                const handler = this._messageHandlers[key];\n\n                if (handler) {\n                    (handler as (event: EmbeddedCheckoutEvent) => void).call(null, message);\n                }\n            });\n    }\n\n    private _transformError(error: Error | CustomError): EmbeddedCheckoutError {\n        return {\n            message: error.message,\n            type: isCustomError(error) ? error.type : undefined,\n            subtype: isCustomError(error) ? error.subtype : undefined,\n        };\n    }\n}\n\nexport type EventCallbacks<TEventMap> = {\n    [key in keyof TEventMap]?: (event: TEventMap[key]) => void;\n};\n","import { bindDecorator as bind } from '../../common/utility';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\n\n@bind\nexport default class NoopEmbeddedCheckoutMessenger implements EmbeddedCheckoutMessenger {\n    postComplete(): void {}\n\n    postError(): void {}\n\n    postFrameError(): void {}\n\n    postFrameLoaded(): void {}\n\n    postLoaded(): void {}\n\n    postSignedOut(): void {}\n\n    receiveStyles(): void {}\n}\n","import { setupContentWindowForIframeResizer, IframeEventListener, IframeEventPoster } from '../../common/iframe';\nimport { EmbeddedCheckoutEvent, EmbeddedCheckoutEventType } from '../embedded-checkout-events';\n\nimport EmbeddedCheckoutMessenger from './embedded-checkout-messenger';\nimport EmbeddedCheckoutMessengerOptions from './embedded-checkout-messenger-options';\nimport { EmbeddedContentEventMap } from './embedded-content-events';\nimport handleFrameLoadedEvent from './handle-frame-loaded-event';\nimport IframeEmbeddedCheckoutMessenger from './iframe-embedded-checkout-messenger';\nimport NoopEmbeddedCheckoutMessenger from './noop-embedded-checkout-messenger';\n\n/**\n * Create an instance of `EmbeddedCheckoutMessenger`.\n *\n * @remarks\n * The object is responsible for posting messages to the parent window from the\n * iframe when certain events have occurred. For example, when the checkout\n * form is first loaded, you should notify the parent window about it.\n *\n * The iframe can only be embedded in domains that are allowed by the store.\n *\n * ```ts\n * const messenger = createEmbeddedCheckoutMessenger({\n *     parentOrigin: 'https://some/website',\n * });\n *\n * messenger.postFrameLoaded();\n * ```\n *\n * @alpha\n * Please note that this feature is currently in an early stage of development.\n * Therefore the API is unstable and not ready for public consumption.\n *\n * @param options - Options for creating `EmbeddedCheckoutMessenger`\n * @returns - An instance of `EmbeddedCheckoutMessenger`\n */\nexport default function createEmbeddedCheckoutMessenger(options: EmbeddedCheckoutMessengerOptions): EmbeddedCheckoutMessenger {\n    setupContentWindowForIframeResizer();\n\n    const parentWindow = options.parentWindow || window.parent;\n\n    // Return a No-op messenger if it is not called inside an iframe\n    if (window === parentWindow) {\n        return new NoopEmbeddedCheckoutMessenger();\n    }\n\n    return new IframeEmbeddedCheckoutMessenger(\n        new IframeEventListener<EmbeddedContentEventMap>(options.parentOrigin),\n        new IframeEventPoster<EmbeddedCheckoutEvent>(options.parentOrigin, parentWindow),\n        new IframeEventPoster<EmbeddedCheckoutEvent>('*', parentWindow),\n        { [EmbeddedCheckoutEventType.FrameLoaded]: handleFrameLoadedEvent }\n    );\n}\n","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return map.hasOwnProperty('cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return map.hasOwnProperty('parentMap');\n}\n","import { noop } from 'lodash';\nimport shallowEqual from 'shallowequal';\n\nimport { isRootCacheKeyMap, isTerminalCacheKeyMap, ChildCacheKeyMap, IntermediateCacheKeyMap, RootCacheKeyMap, TerminalCacheKeyMap } from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            maxSize: 0,\n            isEqual: shallowEqual,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(\n            index === -1 ? 0 : index,\n            index === -1 ? 0 : 1,\n            recentlyUsedMap\n        );\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n","module.exports = require(\"@braintree/browser-detection\");","module.exports = require(\"messageformat\");","import { Response } from '@bigcommerce/request-sender';\n\nimport { PaymentErrorResponseBody } from '../error-response-body';\n\nimport RequestError from './request-error';\n\nexport default function mapFromPaymentErrorResponse(\n    response: Response<PaymentErrorResponseBody>,\n    message?: string\n): RequestError {\n    const { body } = response;\n    const { errors = [] } = body;\n\n    return new RequestError(response, {\n        message: joinErrors(errors) || message,\n        errors,\n    });\n}\n\nfunction joinErrors(errors: Array<{ code: string; message?: string }>): string | undefined {\n    if (!Array.isArray(errors)) {\n        return;\n    }\n\n    return errors.reduce((result: string[], error) => {\n        if (error && error.message) {\n            return [...result, error.message];\n        }\n\n        return result;\n    }, []).join(' ');\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport RequestError from './request-error';\n\n/**\n * Throw this error if a request fails to complete within its required timeframe\n * because of a network issue.\n */\nexport default class TimeoutError<T = any> extends RequestError<T> {\n    constructor(response?: Response<T>) {\n        super(response, {\n            message: 'The request has timed out or aborted.',\n        });\n\n        this.name = 'TimeoutError';\n        this.type = 'timeout';\n    }\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport { RequestError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are unable to successfully submit a server request\n * using a payment method because the method has invalid configuration or is in\n * an invalid state.\n */\nexport default class PaymentMethodInvalidError<T = any> extends RequestError<T> {\n    constructor(response?: Response<T>) {\n        super(response, { message: 'There is a problem processing your payment. Please try again later.' });\n\n        this.name = 'PaymentMethodInvalidError';\n        this.type = 'payment_method_invalid';\n    }\n}\n","import { createSelector as defaultSelectorCreator } from 'reselect';\n\nimport withMemoizedCombiner from './with-memoized-combiner';\n\n/**\n * This is a decorated version of Reselect's default `createSelector` function.\n * If the return value of the combiner function is a function, it will create a\n * memorized version of that function and return it instead.\n */\nexport default withMemoizedCombiner(defaultSelectorCreator);\n","import { Action } from '@bigcommerce/data-store';\n\nimport { Subscriptions } from './subscriptions';\n\nexport enum SubscriptionsActionType {\n    UpdateSubscriptionsRequested = 'UPDATE_SUBSCRIPTIONS_REQUESTED',\n    UpdateSubscriptionsSucceeded = 'UPDATE_SUBSCRIPTIONS_SUCCEEDED',\n    UpdateSubscriptionsFailed = 'UPDATE_SUBSCRIPTIONS_FAILED',\n}\nexport type UpdateSubscriptionsAction =\n    UpdateSubscriptionsRequestedAction |\n    UpdateSubscriptionsSucceededAction |\n    UpdateSubscriptionsFailedAction;\n\nexport interface UpdateSubscriptionsRequestedAction extends Action {\n    type: SubscriptionsActionType.UpdateSubscriptionsRequested;\n}\n\nexport interface UpdateSubscriptionsSucceededAction extends Action<Subscriptions> {\n    type: SubscriptionsActionType.UpdateSubscriptionsSucceeded;\n}\n\nexport interface UpdateSubscriptionsFailedAction extends Action<Error> {\n    type: SubscriptionsActionType.UpdateSubscriptionsFailed;\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { cachableAction, ActionOptions } from '../common/data-store';\nimport { RequestOptions } from '../common/http-request';\n\nimport { ConfigRequestSender } from '.';\nimport { ConfigActionType, LoadConfigAction } from './config-actions';\n\nexport default class ConfigActionCreator {\n    constructor(\n        private _configRequestSender: ConfigRequestSender\n    ) {}\n\n    @cachableAction\n    loadConfig(options?: RequestOptions & ActionOptions): Observable<LoadConfigAction> {\n        return Observable.create((observer: Observer<LoadConfigAction>) => {\n            observer.next(createAction(ConfigActionType.LoadConfigRequested));\n\n            this._configRequestSender.loadConfig(options)\n                .then(response => {\n                    observer.next(createAction(ConfigActionType.LoadConfigSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ConfigActionType.LoadConfigFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport Config from './config';\n\nexport default class ConfigRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadConfig({ timeout }: RequestOptions = {}): Promise<Response<Config>> {\n        const url = '/api/storefront/checkout-settings';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { Subscriptions } from './subscriptions';\n\nexport default class SubscriptionsRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    updateSubscriptions(subscriptions: Subscriptions, { timeout }: RequestOptions = {}): Promise<Response<Subscriptions>> {\n        const url = '/api/storefront/subscriptions';\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: subscriptions, headers, timeout });\n    }\n}\n","import { createAction } from '@bigcommerce/data-store';\nimport { concat, defer, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { cachableAction, ActionOptions } from '../common/data-store';\nimport { throwErrorAction } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\n\nimport { FormFieldsActionType, LoadFormFieldsAction } from './form-fields-actions';\nimport FormFieldsRequestSender from './form-fields-request-sender';\n\nexport default class FormFieldsActionCreator {\n    constructor(\n        private _formFieldsRequestSender: FormFieldsRequestSender\n    ) {}\n\n    @cachableAction\n    loadFormFields(options?: RequestOptions & ActionOptions): Observable<LoadFormFieldsAction> {\n        return concat(\n            of(createAction(FormFieldsActionType.LoadFormFieldsRequested)),\n            defer(async () => {\n                const { body } = await this._formFieldsRequestSender.loadFields(options);\n\n                return createAction(FormFieldsActionType.LoadFormFieldsSucceeded, body);\n            })\n        ).pipe(\n            catchError(response => throwErrorAction(FormFieldsActionType.LoadFormFieldsFailed, response))\n        );\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY, RequestOptions } from '../common/http-request';\n\nimport { FormFields } from './form-field';\n\nexport default class FormFieldsRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadFields({ timeout }: RequestOptions = {}): Promise<Response<FormFields>> {\n        const url = '/api/storefront/form-fields';\n\n        return this._requestSender.get(url, {\n            timeout,\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { AddressRequestBody } from '../address';\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nimport { BillingAddressUpdateRequestBody } from './billing-address';\n\nconst DEFAULT_PARAMS = {\n    include: [\n        'cart.lineItems.physicalItems.options',\n        'cart.lineItems.digitalItems.options',\n        'customer',\n        'promotions.banners',\n    ].join(','),\n};\n\nexport default class BillingAddressRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createAddress(checkoutId: string, address: Partial<AddressRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: address, params: DEFAULT_PARAMS, headers, timeout });\n    }\n\n    updateAddress(checkoutId: string, address: Partial<BillingAddressUpdateRequestBody>, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const { id, ...body } = address;\n        const url = `/api/storefront/checkouts/${checkoutId}/billing-address/${id}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.put(url, { params: DEFAULT_PARAMS, body, headers, timeout });\n    }\n}\n","import { InvalidArgumentError } from '../error/errors';\n\nexport default class Registry<T, K extends string = string> {\n    private _factories: { [key: string]: Factory<T> };\n    private _instances: { [key: string]: T };\n    private _options: RegistryOptions;\n\n    constructor(options?: RegistryOptions) {\n        this._factories = {};\n        this._instances = {};\n        this._options = { defaultToken: 'default', ...options };\n    }\n\n    get(token?: K, cacheToken?: string): T {\n        try {\n            return this._getInstance(\n                token || this._options.defaultToken,\n                cacheToken || token || this._options.defaultToken\n            );\n        } catch (error) {\n            return this._getInstance(\n                this._options.defaultToken,\n                cacheToken || this._options.defaultToken\n            );\n        }\n    }\n\n    register(token: K, factory: Factory<T>): void {\n        if (this._hasFactory(token)) {\n            throw new InvalidArgumentError(`'${token}' is already registered.`);\n        }\n\n        this._factories[token] = factory;\n    }\n\n    protected _hasFactory(token: string): boolean {\n        return !!this._factories[token];\n    }\n\n    private _hasInstance(token: string): boolean {\n        return !!this._instances[token];\n    }\n\n    private _getInstance(token: string, cacheToken: string): T {\n        if (!this._hasInstance(cacheToken)) {\n            const factory = this._factories[token];\n\n            if (!factory) {\n                throw new InvalidArgumentError(`'${token}' is not registered.`);\n            }\n\n            this._instances[cacheToken] = factory();\n        }\n\n        return this._instances[cacheToken];\n    }\n}\n\nexport type Factory<T> = () => T;\n\nexport interface RegistryOptions {\n    defaultToken: string;\n}\n","import StandardError from './standard-error';\n\n/**\n * Throw this error if we try to call a method that is only a stub and has not\n * been fully implemented.\n */\nexport default class NotImplementedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Not implemented.');\n\n        this.name = 'NotImplementedError';\n        this.type = 'not_implemented';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are unable to synchronize the checkout details of a\n * shopper with a hosted / remote checkout provider (i.e.: Amazon).\n */\nexport default class RemoteCheckoutSynchronizationError extends StandardError {\n    constructor(\n        public error?: Error\n    ) {\n        super('Unable to synchronize your checkout details with a third party provider. Please try again later.');\n\n        this.name = 'RemoteCheckoutSynchronizationError';\n        this.type = 'remote_checkout_synchronization';\n    }\n}\n","import { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport PaymentMethod from '../../payment-method';\n\nimport { BillingAddressFormat, GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload, TokenizeType } from './googlepay';\n\nexport default class GooglePayAdyenV2Initializer implements GooglePayInitializer {\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        return Promise.resolve(this._getGooglePayPaymentDataRequest(\n            checkout,\n            paymentMethod,\n            hasShippingAddress\n        ));\n    }\n\n    teardown(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload> {\n        const {\n            paymentMethodData: {\n                type,\n                tokenizationData: { token },\n                info: {\n                    cardNetwork: cardType,\n                    cardDetails: lastFour,\n                },\n            },\n        } = paymentData;\n\n        return Promise.resolve({\n            type: type as TokenizeType,\n            nonce: token,\n            details: {\n                cardType,\n                lastFour,\n            },\n        });\n    }\n\n    private _getGooglePayPaymentDataRequest(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        const {\n            outstandingBalance,\n            cart: {\n                currency: { code: currencyCode },\n            },\n        } = checkout;\n\n        const {\n            initializationData: {\n                gatewayMerchantId,\n                storeCountry: countryCode,\n                googleMerchantName: merchantName,\n                googleMerchantId: merchantId,\n                platformToken: authJwt,\n            },\n            supportedCards,\n        } = paymentMethod;\n\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt,\n                merchantId,\n                merchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: supportedCards.map(card => card === 'MC' ? 'MASTERCARD' : card),\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: BillingAddressFormat.Full,\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'adyen',\n                        gatewayMerchantId,\n                    },\n                },\n            }],\n            transactionInfo: {\n                countryCode,\n                currencyCode,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(outstandingBalance, 2).toFixed(2),\n            },\n            emailRequired: true,\n            shippingAddressRequired: !hasShippingAddress,\n            shippingAddressParameters: {\n                phoneNumberRequired: true,\n            },\n        };\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { Masterpass, MasterpassHostWindow } from './masterpass';\ninterface MasterpassScriptLoaderParams {\n    useMasterpassSrc: boolean;\n    language: string;\n    testMode?: boolean;\n    checkoutId?: string;\n  }\nexport default class MasterpassScriptLoader {\n\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: MasterpassHostWindow = window\n    ) {}\n\n    async load({ useMasterpassSrc, language, testMode, checkoutId }: MasterpassScriptLoaderParams): Promise<Masterpass> {\n\n        if (useMasterpassSrc) {\n            const subdomain = testMode ? 'sandbox.' : '';\n            const params = [\n                `locale=${language}`,\n                `checkoutid=${checkoutId}`,\n            ];\n\n            const sourceUrl = [\n               `https://${subdomain}src.mastercard.com/srci/integration/merchant.js`,\n               params.join('&'),\n            ].join('?');\n\n            await this._scriptLoader.loadScript(sourceUrl);\n\n            if (!this._window.masterpass) {\n                throw new PaymentMethodClientUnavailableError();\n            }\n\n            return this._window.masterpass;\n\n        }\n\n        await this._scriptLoader.loadScript(`//${testMode ? 'sandbox.' : ''}masterpass.com/integration/merchant.js`);\n\n        if (!this._window.masterpass) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.masterpass;\n    }\n}\n","import { round } from 'lodash';\n\nimport { PaymentMethod } from '../..';\nimport { Checkout } from '../../../checkout';\n\nimport { BillingAddressFormat, GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizationSpecification, TokenizePayload, TokenizeType } from './googlepay';\n\nconst baseRequest = {\n    apiVersion: 2,\n    apiVersionMinor: 0,\n};\n\nexport default class GooglePayAuthorizeNetInitializer implements GooglePayInitializer {\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        return Promise.resolve(\n            this._getGooglePaymentDataRequest(checkout, paymentMethod, hasShippingAddress)\n        );\n    }\n\n    teardown(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload> {\n        const {\n            paymentMethodData: {\n                type,\n                tokenizationData: { token },\n                info: {\n                    cardNetwork: cardType,\n                    cardDetails: lastFour,\n                },\n            },\n        } = paymentData;\n\n        return Promise.resolve({\n            type: type as TokenizeType,\n            nonce: btoa(token),\n            details: {\n                cardType,\n                lastFour,\n            },\n        });\n    }\n\n    private _getGooglePaymentDataRequest(checkout: Checkout, paymentMethod: PaymentMethod, hasShippingAddress: boolean): GooglePayPaymentDataRequestV2 {\n        const {\n            outstandingBalance,\n            cart: {\n                currency: { code: currencyCode },\n            },\n        } = checkout;\n\n        const {\n            initializationData: {\n                paymentGatewayId: gatewayMerchantId,\n                storeCountry: countryCode,\n                googleMerchantName: merchantName,\n                googleMerchantId: merchantId,\n                platformToken: authJwt,\n            },\n            supportedCards,\n        } = paymentMethod;\n\n        const paymentGatewaySpecification = this._getPaymentGatewaySpecification(gatewayMerchantId);\n        const cardPaymentMethod = this._getCardPaymentMethod(paymentGatewaySpecification, supportedCards);\n\n        return {\n            ...baseRequest,\n            allowedPaymentMethods: [cardPaymentMethod],\n            transactionInfo: {\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(outstandingBalance, 2).toFixed(2),\n                currencyCode,\n                countryCode,\n            },\n            merchantInfo : {\n                merchantName,\n                merchantId,\n                authJwt,\n            },\n            emailRequired: true,\n            shippingAddressRequired: !hasShippingAddress,\n            shippingAddressParameters: {\n                phoneNumberRequired: true,\n            },\n        };\n    }\n\n    private _getPaymentGatewaySpecification(gatewayMerchantId: string) {\n        return {\n            type: 'PAYMENT_GATEWAY',\n            parameters: {\n                gateway: 'authorizenet',\n                gatewayMerchantId,\n            },\n        };\n    }\n\n    private _getCardPaymentMethod(tokenizationSpecification: TokenizationSpecification, supportedCards: string[]) {\n        return {\n            type: 'CARD',\n            parameters: {\n                allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                allowedCardNetworks: supportedCards.map(card => card === 'MC' ? 'MASTERCARD' : card),\n                billingAddressRequired: true,\n                billingAddressParameters: {\n                    format: BillingAddressFormat.Full,\n                    phoneNumberRequired: true,\n                },\n            },\n            tokenizationSpecification,\n        };\n    }\n}\n","import { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport PaymentMethod from '../../payment-method';\nimport { BraintreeSDKCreator, GooglePayBraintreeSDK } from '../braintree';\n\nimport { BillingAddressFormat, GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload } from './googlepay';\nimport { GooglePayBraintreeDataRequest, GooglePayBraintreePaymentDataRequestV1 } from './googlepay-braintree';\n\nexport default class GooglePayBraintreeInitializer implements GooglePayInitializer {\n    private _googlePaymentInstance!: GooglePayBraintreeSDK;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator\n    ) {}\n\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        if (!paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._braintreeSDKCreator.initialize(paymentMethod.clientToken);\n\n        return this._braintreeSDKCreator.getGooglePaymentComponent()\n            .then(googleBraintreePaymentInstance => {\n                this._googlePaymentInstance = googleBraintreePaymentInstance;\n\n                return this._createGooglePayPayload(\n                    checkout,\n                    paymentMethod.initializationData,\n                    hasShippingAddress\n                );\n            });\n    }\n\n    teardown(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload> {\n        const payload = JSON.parse(paymentData.paymentMethodData.tokenizationData.token).androidPayCards[0];\n\n        return Promise.resolve({\n            nonce: payload.nonce,\n            type: payload.type,\n            description: payload.description,\n            details: {\n                cardType: payload.details.cardType,\n                lastFour: payload.details.lastFour,\n                lastTwo: payload.details.lastTwo,\n            },\n            binData: payload.binData,\n        });\n    }\n\n    private _createGooglePayPayload(\n        checkout: Checkout,\n        initializationData: any,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        if (!initializationData.platformToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const googlePayBraintreePaymentDataRequest: GooglePayBraintreeDataRequest = {\n            merchantInfo: {\n                authJwt: initializationData.platformToken,\n                merchantName: initializationData.googleMerchantName,\n                merchantId: initializationData.googleMerchantId,\n            },\n            transactionInfo: {\n                currencyCode: checkout.cart.currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(checkout.outstandingBalance, 2).toFixed(2),\n            },\n            cardRequirements: {\n                billingAddressRequired: true,\n                billingAddressFormat: 'FULL',\n            },\n            shippingAddressRequired: !hasShippingAddress,\n            emailRequired: true,\n            phoneNumberRequired: true,\n        };\n\n        return this._mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2(\n            this._googlePaymentInstance.createPaymentDataRequest(googlePayBraintreePaymentDataRequest)\n        );\n    }\n\n    private _mapGooglePayBraintreeDataRequestToGooglePayDataRequestV2(googlePayBraintreeDataRequestV1: GooglePayBraintreePaymentDataRequestV1): GooglePayPaymentDataRequestV2 {\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt: googlePayBraintreeDataRequestV1.merchantInfo.authJwt,\n                merchantId: googlePayBraintreeDataRequestV1.merchantInfo.merchantId,\n                merchantName: googlePayBraintreeDataRequestV1.merchantInfo.merchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: googlePayBraintreeDataRequestV1.cardRequirements.allowedCardNetworks,\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: BillingAddressFormat.Full,\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'braintree',\n                        'braintree:apiVersion': 'v1',\n                        'braintree:authorizationFingerprint': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:authorizationFingerprint'],\n                        'braintree:merchantId': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:merchantId'],\n                        'braintree:sdkVersion': googlePayBraintreeDataRequestV1.paymentMethodTokenizationParameters.parameters['braintree:sdkVersion'],\n                    },\n                },\n            }],\n            transactionInfo: googlePayBraintreeDataRequestV1.transactionInfo,\n            emailRequired: true,\n            shippingAddressRequired: googlePayBraintreeDataRequestV1.shippingAddressRequired,\n            shippingAddressParameters: {\n                phoneNumberRequired: googlePayBraintreeDataRequestV1.phoneNumberRequired,\n            },\n        };\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport { InvalidArgumentError } from '../../../common/error/errors';\nimport { ContentType } from '../../../common/http-request';\nimport { PaymentMethodFailedError } from '../../errors';\nimport PaymentMethod from '../../payment-method';\nimport { CheckoutcomGooglePayToken, CheckoutcomToken } from '../checkoutcom';\n\nimport { BillingAddressFormat, GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload } from './googlepay';\n\nexport default class GooglePayCheckoutcomInitializer implements GooglePayInitializer {\n    private _publishableKey: string = '';\n    private _testMode: boolean = true;\n\n    constructor(\n       private _requestSender: RequestSender\n    ) {}\n\n    async initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        this._publishableKey = paymentMethod.initializationData.checkoutcomkey;\n        this._testMode = !!paymentMethod.config.testMode;\n\n        return this._mapGooglePayCheckoutcomDataRequestToGooglePayDataRequestV2(\n            checkout,\n            paymentMethod.initializationData,\n            hasShippingAddress\n        );\n    }\n\n    teardown(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    async parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload> {\n        let token;\n        try {\n            token = JSON.parse(paymentData.paymentMethodData.tokenizationData.token);\n        } catch (err) {\n            throw new InvalidArgumentError('Unable to parse response from Google Pay.');\n        }\n\n        if (!token.signature || !token.protocolVersion || !token.signedMessage) {\n            throw new PaymentMethodFailedError('Unable to parse response from Google Pay.');\n        }\n        const finalToken = await this._convertToken(this._testMode, this._publishableKey, token);\n\n        return {\n            nonce: finalToken,\n            type: 'CreditCard',\n            description: paymentData.paymentMethodData.description,\n            details: {\n                cardType: paymentData.paymentMethodData.info.cardNetwork,\n                lastFour: paymentData.paymentMethodData.info.cardDetails,\n            },\n        };\n    }\n\n    private async _convertToken(testMode: boolean, checkoutcomkey: string, token: CheckoutcomGooglePayToken): Promise<string> {\n        if (!token || !token.protocolVersion) {\n            throw new PaymentMethodFailedError('Unable to parse response from GooglePay.');\n        }\n\n        const checkoutcomToken: CheckoutcomToken = await this._requestCheckoutcomTokenize(testMode, checkoutcomkey, {\n            type: 'googlepay',\n            token_data: token,\n        });\n\n        if (!checkoutcomToken || !checkoutcomToken.token) {\n            throw new PaymentMethodFailedError('Unable to parse response from Checkout.com');\n        }\n\n        return checkoutcomToken.token;\n    }\n\n    private async _requestCheckoutcomTokenize(testMode: boolean, checkoutcomKey: string, data = {}): Promise<CheckoutcomToken> {\n        const TEST_URL: string = 'https://api.sandbox.checkout.com/tokens';\n        const LIVE_URL: string = 'https://api.checkout.com/tokens';\n\n        const url = testMode ? TEST_URL : LIVE_URL;\n\n        const response = await this._requestSender.post(url, {\n            credentials: false,\n            body: data,\n            headers: {\n                'Content-Type': ContentType.Json,\n                Authorization: checkoutcomKey,\n                'X-XSRF-TOKEN': null,\n            },\n        });\n\n        return response.body as CheckoutcomToken;\n    }\n\n    private _mapGooglePayCheckoutcomDataRequestToGooglePayDataRequestV2(\n        checkout: Checkout,\n        initializationData: any,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt: initializationData.platformToken,\n                merchantId: initializationData.googleMerchantId,\n                merchantName: initializationData.googleMerchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: ['AMEX', 'DISCOVER', 'JCB', 'MASTERCARD', 'VISA'],\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: BillingAddressFormat.Full,\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'checkoutltd',\n                        gatewayMerchantId: initializationData.checkoutcomkey,\n                    },\n                },\n            }],\n            transactionInfo: {\n                currencyCode: checkout.cart.currency.code,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(checkout.outstandingBalance, 2).toFixed(2),\n            },\n            emailRequired: true,\n            shippingAddressRequired: !hasShippingAddress,\n            shippingAddressParameters: {\n                phoneNumberRequired: true,\n            },\n        };\n    }\n}\n","import { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport PaymentMethod from '../../payment-method';\n\nimport { BillingAddressFormat, GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload, TokenizeType } from './googlepay';\n\nexport default class GooglePayCybersourceV2Initializer implements GooglePayInitializer {\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        return Promise.resolve(this._getGooglePayPaymentDataRequest(\n            checkout,\n            paymentMethod,\n            hasShippingAddress\n        ));\n    }\n\n    teardown(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload> {\n        const {\n            paymentMethodData: {\n                type,\n                tokenizationData: { token },\n                info: {\n                    cardNetwork: cardType,\n                    cardDetails: lastFour,\n                },\n            },\n        } = paymentData;\n\n        return Promise.resolve({\n            nonce: btoa(token),\n            type: type as TokenizeType,\n            details: {\n                cardType,\n                lastFour,\n            },\n        });\n    }\n\n    private _getGooglePayPaymentDataRequest(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        const {\n            outstandingBalance,\n            cart: {\n                currency: { code: currencyCode },\n            },\n        } = checkout;\n\n        const {\n            initializationData: {\n                gatewayMerchantId,\n                googleMerchantName: merchantName,\n                googleMerchantId: merchantId,\n                platformToken: authJwt,\n            },\n            supportedCards,\n        } = paymentMethod;\n\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt,\n                merchantId,\n                merchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: supportedCards.map(card => card === 'MC' ? 'MASTERCARD' : card),\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: BillingAddressFormat.Full,\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'cybersource',\n                        gatewayMerchantId,\n                    },\n                },\n            }],\n            transactionInfo: {\n                currencyCode,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(outstandingBalance, 2).toFixed(2),\n            },\n            emailRequired: true,\n            shippingAddressRequired: !hasShippingAddress,\n            shippingAddressParameters: {\n                phoneNumberRequired: true,\n            },\n        };\n    }\n}\n","import { round } from 'lodash';\n\nimport { Checkout } from '../../../checkout';\nimport { InvalidArgumentError } from '../../../common/error/errors';\nimport PaymentMethod from '../../payment-method';\n\nimport { BillingAddressFormat, GooglePaymentData, GooglePayInitializer, GooglePayPaymentDataRequestV2, TokenizePayload } from './googlepay';\n\nexport default class GooglePayStripeInitializer implements GooglePayInitializer {\n    initialize(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): Promise<GooglePayPaymentDataRequestV2> {\n        return Promise.resolve(this._getGooglePayPaymentDataRequest(\n            checkout,\n            paymentMethod,\n            hasShippingAddress\n        ));\n    }\n\n    teardown(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    parseResponse(paymentData: GooglePaymentData): Promise<TokenizePayload> {\n        try {\n            const payload = JSON.parse(paymentData.paymentMethodData.tokenizationData.token);\n\n            return Promise.resolve({\n                nonce: payload.id,\n                type: payload.type,\n                details: {\n                    cardType: payload.card.brand,\n                    lastFour: payload.card.last4,\n                },\n            });\n        } catch (err) {\n            throw new InvalidArgumentError('Unable to parse response from Google Pay.');\n        }\n    }\n\n    private _getGooglePayPaymentDataRequest(\n        checkout: Checkout,\n        paymentMethod: PaymentMethod,\n        hasShippingAddress: boolean\n    ): GooglePayPaymentDataRequestV2 {\n        const {\n            outstandingBalance,\n            cart: {\n                currency: { code: currencyCode },\n            },\n        } = checkout;\n\n        const {\n            initializationData: {\n                googleMerchantName: merchantName,\n                googleMerchantId: merchantId,\n                platformToken: authJwt,\n                stripeVersion,\n                stripePublishableKey,\n                stripeConnectedAccount,\n            },\n            supportedCards,\n        } = paymentMethod;\n\n        return {\n            apiVersion: 2,\n            apiVersionMinor: 0,\n            merchantInfo: {\n                authJwt,\n                merchantId,\n                merchantName,\n            },\n            allowedPaymentMethods: [{\n                type: 'CARD',\n                parameters: {\n                    allowedAuthMethods: ['PAN_ONLY', 'CRYPTOGRAM_3DS'],\n                    allowedCardNetworks: supportedCards.map(card => card === 'MC' ? 'MASTERCARD' : card),\n                    billingAddressRequired: true,\n                    billingAddressParameters: {\n                        format: BillingAddressFormat.Full,\n                        phoneNumberRequired: true,\n                    },\n                },\n                tokenizationSpecification: {\n                    type: 'PAYMENT_GATEWAY',\n                    parameters: {\n                        gateway: 'stripe',\n                        'stripe:version': stripeVersion,\n                        'stripe:publishableKey': `${stripePublishableKey}/${stripeConnectedAccount}`,\n                    },\n                },\n            }],\n            transactionInfo: {\n                currencyCode,\n                totalPriceStatus: 'FINAL',\n                totalPrice: round(outstandingBalance, 2).toFixed(2),\n            },\n            emailRequired: true,\n            shippingAddressRequired: !hasShippingAddress,\n            shippingAddressParameters: {\n                phoneNumberRequired: true,\n            },\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class InvalidHostedFormConfigError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed due to invalid configuration provided for the hosted payment form.');\n\n        this.name = 'InvalidHostedFormConfigError';\n        this.type = 'invalid_hosted_form_config';\n    }\n}\n","import { flatMap, map, values } from 'lodash';\n\nimport { StandardError } from '../../common/error/errors';\nimport { HostedInputValidateErrorDataMap } from '../iframe-content';\n\nexport default class InvalidHostedFormValueError extends StandardError {\n    constructor(\n        public errors: HostedInputValidateErrorDataMap\n    ) {\n        super([\n            'Unable to proceed due to invalid user input values',\n            ...flatMap(values(errors), fieldErrors => map(fieldErrors, ({ message }) => message)),\n        ].join('. '));\n\n        this.name = 'InvalidHostedFormValueError';\n        this.type = 'invalid_hosted_form_value';\n    }\n}\n","import { LoadScriptOptions, ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { PaypalHostWindow, PaypalSDK } from './paypal-sdk';\n\nexport default class PaypalScriptLoader {\n    private _window: PaypalHostWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    async loadPaypal(merchantId: string = ''): Promise<PaypalSDK> {\n        const scriptSrc = '//www.paypalobjects.com/api/checkout.min.js';\n        const options: LoadScriptOptions = { async: true, attributes: { 'data-merchant-id': merchantId } };\n\n        merchantId\n            ? await this._scriptLoader.loadScript(scriptSrc, options)\n            : await this._scriptLoader.loadScript(scriptSrc);\n\n        if (!this._window.paypal) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.paypal;\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport { ContentType, INTERNAL_USE_ONLY } from '../../../common/http-request';\n\nimport { OrderData, OrderStatus } from './paypal-commerce-sdk';\n\nexport interface ParamsForProvider {\n    isCredit?: boolean;\n    isCheckout?: boolean;\n    isCreditCard?: boolean;\n    isAPM?: boolean;\n}\n\nexport default class PaypalCommerceRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    async setupPayment(cartId: string, params: ParamsForProvider = {}): Promise<OrderData> {\n        const { isCredit, isCheckout, isCreditCard, isAPM } = params;\n        let provider = 'paypalcommerce';\n\n        if (isCreditCard) {\n            provider = 'paypalcommercecreditcardscheckout';\n        } else if (isCheckout) {\n            provider = isCredit ? 'paypalcommercecreditcheckout' : 'paypalcommercecheckout';\n        } else if (isCredit) {\n            provider = 'paypalcommercecredit';\n        }\n\n        if (isAPM) {\n            provider = 'paypalcommercealternativemethodscheckout';\n        }\n\n        const url = `/api/storefront/payment/${provider}`;\n        const body = { cartId };\n        const headers = {\n            'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            'Content-Type': ContentType.Json,\n        };\n\n        const res = await this._requestSender.post(url, { headers, body });\n\n        return res.body as OrderData;\n    }\n\n    async getOrderStatus() {\n        const url = '/api/storefront/initialization/paypalcommerce';\n        const headers = {\n            'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            'Content-Type': ContentType.Json,\n        };\n\n        const res = await this._requestSender.get<OrderStatus>(url, {headers});\n\n        return res.body;\n    }\n}\n","import { LoadingIndicatorStyles } from './loading-indicator-styles';\n\nconst DEFAULT_STYLES: LoadingIndicatorStyles = {\n    size: 70,\n    color: '#d9d9d9',\n    backgroundColor: '#ffffff',\n};\n\nconst ROTATION_ANIMATION = 'embedded-checkout-loading-indicator-rotation';\n\nexport default class LoadingIndicator {\n    private _container: HTMLElement;\n    private _indicator: HTMLElement;\n    private _styles: LoadingIndicatorStyles;\n\n    constructor(\n        options?: { styles?: LoadingIndicatorStyles }\n    ) {\n        this._styles = { ...DEFAULT_STYLES, ...options && options.styles };\n\n        this._defineAnimation();\n\n        this._container = this._buildContainer();\n        this._indicator = this._buildIndicator();\n\n        this._container.appendChild(this._indicator);\n    }\n\n    show(parentId?: string): void {\n        if (parentId) {\n            const parent = document.getElementById(parentId);\n\n            if (!parent) {\n                throw new Error('Unable to attach the loading indicator because the parent ID is not valid.');\n            }\n\n            parent.appendChild(this._container);\n        }\n\n        this._container.style.visibility = 'visible';\n        this._container.style.opacity = '1';\n    }\n\n    hide(): void {\n        const handleTransitionEnd = () => {\n            this._container.style.visibility = 'hidden';\n\n            this._container.removeEventListener('transitionend', handleTransitionEnd);\n        };\n\n        this._container.addEventListener('transitionend', handleTransitionEnd);\n\n        this._container.style.opacity = '0';\n    }\n\n    private _buildContainer(): HTMLElement {\n        const container = document.createElement('div');\n\n        container.style.display = 'block';\n        container.style.bottom = '0';\n        container.style.left = '0';\n        container.style.height = '100%';\n        container.style.width = '100%';\n        container.style.position = 'absolute';\n        container.style.right = '0';\n        container.style.top = '0';\n        container.style.transition = 'all 250ms ease-out';\n        container.style.opacity = '0';\n\n        return container;\n    }\n\n    private _buildIndicator(): HTMLElement {\n        const indicator = document.createElement('div');\n\n        indicator.style.display = 'block';\n        indicator.style.width = `${this._styles.size}px`;\n        indicator.style.height = `${this._styles.size}px`;\n        indicator.style.borderRadius = `${this._styles.size}px`;\n        indicator.style.border = 'solid 1px';\n        indicator.style.borderColor = `${this._styles.backgroundColor} ${this._styles.backgroundColor} ${this._styles.color} ${this._styles.color}`;\n        indicator.style.margin = '0 auto';\n        indicator.style.position = 'absolute';\n        indicator.style.left = '0';\n        indicator.style.right = '0';\n        indicator.style.top = '50%';\n        indicator.style.transform = 'translateY(-50%) rotate(0deg)';\n        indicator.style.transformStyle = 'preserve-3d';\n        indicator.style.animation = `${ROTATION_ANIMATION} 500ms infinite cubic-bezier(0.69, 0.31, 0.56, 0.83)`;\n\n        return indicator;\n    }\n\n    private _defineAnimation(): void {\n        // In order to define CSS animation, we need to insert a stylesheet into the host frame.\n        // We only have to do it once.\n        if (document.getElementById(ROTATION_ANIMATION)) {\n            return;\n        }\n\n        const style = document.createElement('style');\n\n        style.id = ROTATION_ANIMATION;\n\n        document.head.appendChild(style);\n\n        if (style.sheet instanceof CSSStyleSheet) {\n            // We need to provide the 2nd parameter for IE11, even though it is\n            // 0 by default for all other browsers.\n            style.sheet.insertRule(`\n                @keyframes ${ROTATION_ANIMATION} {\n                    0% { transform: translateY(-50%) rotate(0deg); }\n                    100% { transform: translateY(-50%) rotate(360deg); }\n                }\n            `, 0);\n        }\n    }\n}\n","import { IFrameComponent, IFrameOptions } from 'iframe-resizer';\n\nexport {\n    HeightCalculationMethod,\n    IFrameComponent,\n    IFrameMessageData,\n    IFrameObject,\n    IFrameOptions,\n    IFramePage,\n    IFramePageOptions,\n    IFrameResizedData,\n    IFrameScrollData,\n    PageInfo,\n    WidthCalculationMethod,\n} from 'iframe-resizer';\n\n// The reason why we are wrapping the original `iframeResizer` function imported\n// from the package is because the package sets up event listeners (window\n// resize etc...) as soon as the package is imported. Therefore, to defer the\n// side effect from happening until the function is actually being used, we are\n// importing the package inside this function. To minimise the chance of\n// importing the original package inadvertently, we are also re-exporting all of\n// its public interfaces. The re-exports do not cause any side effect because\n// they are plain TypeScript interfaces; meaning they are only used for type\n// checks rather than for code output.\nexport function iframeResizer(options: IFrameOptions, target: string | HTMLElement): IFrameComponent[] {\n    const { iframeResizer: originalIframeResizer } = require('iframe-resizer');\n\n    return originalIframeResizer(options, target);\n}\n\n// We also need to wrap the original `iframeResizer.contentWindow` because\n// similarly the package sets up event listeners as soon as the package gets\n// imported. Another reason is that if it is imported at the top level using a\n// regular import statement, it will be stripped out by Webpack as it is\n// considered as \"unused\", unless we explicitly mark it as a package that\n// produces side effects.\nexport function setupContentWindowForIframeResizer(): void {\n    /* eslint-disable-next-line import/no-internal-modules */\n    require('iframe-resizer/js/iframeResizer.contentWindow');\n}\n","import { ClearErrorAction, ErrorActionType } from './error-actions';\n\nexport default class ErrorActionCreator {\n    clearError(error: Error): ClearErrorAction {\n        return {\n            type: ErrorActionType.ClearError,\n            payload: error,\n        };\n    }\n}\n","export default function getEnvironment(): string {\n    try {\n        return process.env.NODE_ENV || 'development';\n    } catch (e) {\n        return 'development';\n    }\n}\n","import ConsoleLogger from './console-logger';\nimport Logger from './logger';\nimport NoopLogger from './noop-logger';\n\nexport default function createLogger(isEnabled = true): Logger {\n    if (!isEnabled) {\n        return new NoopLogger();\n    }\n\n    return new ConsoleLogger(console);\n}\n","import Logger from './logger';\n\nexport default class ConsoleLogger implements Logger {\n    constructor(\n        private _console?: Console\n    ) {}\n\n    log(...messages: any[]): void {\n        this._logToConsole('log', ...messages);\n    }\n\n    info(...messages: any[]): void {\n        this._logToConsole('info', ...messages);\n    }\n\n    warn(...messages: any[]): void {\n        this._logToConsole('warn', ...messages);\n    }\n\n    error(...messages: any[]): void {\n        this._logToConsole('error', ...messages);\n    }\n\n    debug(...messages: any[]): void {\n        this._logToConsole('debug', ...messages);\n    }\n\n    private _logToConsole(type: keyof Console, ...messages: any[]): void {\n        if (!this._console || !this._console[type]) {\n            return;\n        }\n\n        this._console[type].call(this._console, ...messages);\n    }\n}\n","import Logger from './logger';\n\nexport default class NoopLogger implements Logger {\n    log(): void {}\n\n    info(): void {}\n\n    warn(): void {}\n\n    error(): void {}\n\n    debug(): void {}\n}\n","import { getEnvironment } from '../utility';\n\nimport createLogger from './create-logger';\nimport Logger from './logger';\n\nconst logger = createLogger(getEnvironment() !== 'test');\n\nexport default function getDefaultLogger(): Logger {\n    return logger;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { ApplyCouponAction, CouponAction, CouponActionType, RemoveCouponAction } from './coupon-actions';\nimport CouponRequestSender from './coupon-request-sender';\n\nexport default class CouponActionCreator {\n    constructor(\n        private _couponRequestSender: CouponRequestSender\n    ) {}\n\n    applyCoupon(code: string, options?: RequestOptions): ThunkAction<CouponAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ApplyCouponAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CouponActionType.ApplyCouponRequested));\n\n            this._couponRequestSender.applyCoupon(checkout.id, code, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CouponActionType.ApplyCouponSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CouponActionType.ApplyCouponFailed, response));\n                });\n        });\n    }\n\n    removeCoupon(code: string, options?: RequestOptions): ThunkAction<CouponAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<RemoveCouponAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(CouponActionType.RemoveCouponRequested));\n\n            this._couponRequestSender.removeCoupon(checkout.id, code, options)\n                .then(({ body }) => {\n                    observer.next(createAction(CouponActionType.RemoveCouponSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CouponActionType.RemoveCouponFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CheckoutIncludes, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class CouponRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyCoupon(checkoutId: string, couponCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/coupons`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes([\n                    ...CHECKOUT_DEFAULT_INCLUDES,\n                    CheckoutIncludes.AvailableShippingOptions,\n                ]),\n            },\n            body: { couponCode },\n        });\n    }\n\n    removeCoupon(checkoutId: string, couponCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/coupons/${couponCode}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes([\n                    ...CHECKOUT_DEFAULT_INCLUDES,\n                    CheckoutIncludes.AvailableShippingOptions,\n                ]),\n            },\n        });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable ,  Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { GiftCertificateRequestSender } from '.';\nimport { ApplyGiftCertificateAction, GiftCertificateActionType, RemoveGiftCertificateAction } from './gift-certificate-actions';\n\nexport default class GiftCertificateActionCreator {\n    constructor(\n        private _giftCertificateRequestSender: GiftCertificateRequestSender\n    ) {}\n\n    applyGiftCertificate(giftCertificate: string, options?: RequestOptions): ThunkAction<ApplyGiftCertificateAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ApplyGiftCertificateAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(GiftCertificateActionType.ApplyGiftCertificateRequested));\n\n            this._giftCertificateRequestSender.applyGiftCertificate(checkout.id, giftCertificate, options)\n                .then(({ body }) => {\n                    observer.next(createAction(GiftCertificateActionType.ApplyGiftCertificateSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(GiftCertificateActionType.ApplyGiftCertificateFailed, response));\n                });\n        });\n    }\n\n    removeGiftCertificate(giftCertificate: string, options?: RequestOptions): ThunkAction<RemoveGiftCertificateAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<RemoveGiftCertificateAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(GiftCertificateActionType.RemoveGiftCertificateRequested));\n\n            this._giftCertificateRequestSender.removeGiftCertificate(checkout.id, giftCertificate, options)\n                .then(({ body }) => {\n                    observer.next(createAction(GiftCertificateActionType.RemoveGiftCertificateSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(GiftCertificateActionType.RemoveGiftCertificateFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class GiftCertificateRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyGiftCertificate(checkoutId: string, giftCertificateCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/gift-certificates`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n            body: { giftCertificateCode },\n        });\n    }\n\n    removeGiftCertificate(checkoutId: string, giftCertificateCode: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/gift-certificates/${giftCertificateCode}`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n}\n","import { ExecuteSucceededAction, SpamProtectionAction } from './spam-protection-actions';\n\nexport default function isSpamProtectionExecuteSucceededAction(action: SpamProtectionAction): action is ExecuteSucceededAction {\n    const succeededAction = action as ExecuteSucceededAction;\n\n    return typeof succeededAction === 'object' &&\n        typeof succeededAction.payload === 'object' &&\n        typeof succeededAction.payload.token === 'string';\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, from, of, Observable } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { CheckoutActionCreator, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\nimport { isSpamProtectionExecuteSucceededAction, SpamProtectionActionCreator } from '../spam-protection';\n\nimport CustomerAccountRequestBody, { CustomerAddressRequestBody } from './customer-account';\nimport { CreateCustomerAction, CreateCustomerAddressAction, CustomerActionType, SignInCustomerAction, SignOutCustomerAction } from './customer-actions';\nimport CustomerCredentials from './customer-credentials';\nimport CustomerRequestSender from './customer-request-sender';\n\nexport default class CustomerActionCreator {\n    constructor(\n        private _customerRequestSender: CustomerRequestSender,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _spamProtectionActionCreator: SpamProtectionActionCreator\n    ) {}\n\n    createCustomer(\n        customerAccount: CustomerAccountRequestBody,\n        options?: RequestOptions\n    ): ThunkAction<CreateCustomerAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const config = state.config.getStoreConfigOrThrow();\n            const { isStorefrontSpamProtectionEnabled } = config.checkoutSettings;\n\n            const createCustomer = (token?: string) =>\n                from(this._customerRequestSender.createAccount({ ...customerAccount, token }, options))\n                    .pipe(switchMap(() => concat(\n                        this._checkoutActionCreator.loadCurrentCheckout(options)(store),\n                        of(createAction(CustomerActionType.CreateCustomerSucceeded))\n                    )));\n\n            return concat(\n                of(createAction(CustomerActionType.CreateCustomerRequested)),\n                (isStorefrontSpamProtectionEnabled ?\n                    from(this._spamProtectionActionCreator.execute()(store))\n                        .pipe(switchMap(action => isSpamProtectionExecuteSucceededAction(action) ?\n                                concat(\n                                    of(action),\n                                    createCustomer(action.payload?.token)\n                                ) :\n                                of(action)\n                        )) :\n                    createCustomer()\n                )\n            ).pipe(\n                catchError(error => throwErrorAction(CustomerActionType.CreateCustomerFailed, error))\n            );\n        };\n    }\n\n    createAddress(\n        customerAddress: CustomerAddressRequestBody,\n        options?: RequestOptions\n    ): Observable<CreateCustomerAddressAction> {\n        return concat(\n            of(createAction(CustomerActionType.CreateCustomerAddressRequested)),\n            defer(async () => {\n                const { body } = await this._customerRequestSender.createAddress(customerAddress, options);\n\n                return createAction(CustomerActionType.CreateCustomerAddressSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(CustomerActionType.CreateCustomerAddressFailed, error))\n        );\n    }\n\n    signInCustomer(\n        credentials: CustomerCredentials,\n        options?: RequestOptions\n    ): ThunkAction<SignInCustomerAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CustomerActionType.SignInCustomerRequested)),\n            from(this._customerRequestSender.signInCustomer(credentials, options))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._checkoutActionCreator.loadCurrentCheckout(options)(store),\n                        of(createAction(CustomerActionType.SignInCustomerSucceeded, body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(CustomerActionType.SignInCustomerFailed, error))\n        );\n    }\n\n    signOutCustomer(\n        options?: RequestOptions\n    ): ThunkAction<SignOutCustomerAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(CustomerActionType.SignOutCustomerRequested)),\n            from(this._customerRequestSender.signOutCustomer(options))\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._checkoutActionCreator.loadCurrentCheckout(options)(store),\n                        of(createAction(CustomerActionType.SignOutCustomerSucceeded, body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(CustomerActionType.SignOutCustomerFailed, error))\n        );\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport Customer from './customer';\nimport { CustomerAccountInternalRequestBody, CustomerAddressRequestBody } from './customer-account';\nimport CustomerCredentials from './customer-credentials';\nimport { InternalCustomerResponseBody } from './internal-customer-responses';\n\nexport default class CustomerRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    createAccount(customerAccount: CustomerAccountInternalRequestBody, { timeout }: RequestOptions = {}): Promise<Response<{}>> {\n        const url = '/api/storefront/customer';\n\n        return this._requestSender.post(url, { timeout, body: customerAccount });\n    }\n\n    createAddress(customerAddress: CustomerAddressRequestBody, { timeout }: RequestOptions = {}): Promise<Response<Customer>> {\n        const url = `/api/storefront/customer-address`;\n\n        return this._requestSender.post<Customer>(url, { timeout, body: customerAddress });\n    }\n\n    signInCustomer(credentials: CustomerCredentials, { timeout }: RequestOptions = {}): Promise<Response<InternalCustomerResponseBody>> {\n        const url = '/internalapi/v1/checkout/customer';\n\n        return this._requestSender.post(url, { timeout, body: credentials });\n    }\n\n    signOutCustomer({ timeout }: RequestOptions = {}): Promise<Response<InternalCustomerResponseBody>> {\n        const url = '/internalapi/v1/checkout/customer';\n\n        return this._requestSender.delete(url, { timeout });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { Registry } from '../common/registry';\n\nimport CustomerCredentials from './customer-credentials';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from './customer-request-options';\nimport { CustomerStrategyActionType, CustomerStrategyDeinitializeAction, CustomerStrategyInitializeAction, CustomerStrategySignInAction, CustomerStrategySignOutAction, CustomerStrategyWidgetAction } from './customer-strategy-actions';\nimport { CustomerStrategy } from './strategies';\n\nexport default class CustomerStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: Registry<CustomerStrategy>\n    ) {}\n\n    signIn(credentials: CustomerCredentials, options?: CustomerRequestOptions): Observable<CustomerStrategySignInAction> {\n        return Observable.create((observer: Observer<CustomerStrategySignInAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.SignInRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .signIn(credentials, options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.SignInSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.SignInFailed, error, meta));\n                });\n        });\n    }\n\n    signOut(options?: CustomerRequestOptions): Observable<CustomerStrategySignOutAction> {\n        return Observable.create((observer: Observer<CustomerStrategySignOutAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.SignOutRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .signOut(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.SignOutSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.SignOutFailed, error, meta));\n                });\n        });\n    }\n\n    initialize(options?: CustomerInitializeOptions): ThunkAction<CustomerStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CustomerStrategyInitializeAction>) => {\n            const state = store.getState();\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            if (methodId && state.customerStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(CustomerStrategyActionType.InitializeRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .initialize(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.InitializeSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.InitializeFailed, error, meta));\n                });\n        });\n    }\n\n    deinitialize(options?: CustomerRequestOptions): ThunkAction<CustomerStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<CustomerStrategyDeinitializeAction>) => {\n            const state = store.getState();\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            if (methodId && !state.customerStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(CustomerStrategyActionType.DeinitializeRequested, undefined, meta));\n\n            this._strategyRegistry.get(methodId)\n                .deinitialize(options)\n                .then(() => {\n                    observer.next(createAction(CustomerStrategyActionType.DeinitializeSucceeded, undefined, meta));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(CustomerStrategyActionType.DeinitializeFailed, error, meta));\n                });\n        });\n    }\n\n    widgetInteraction(method: () => Promise<any>, options?: CustomerRequestOptions): Observable<CustomerStrategyWidgetAction> {\n        return Observable.create((observer: Observer<CustomerStrategyWidgetAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(CustomerStrategyActionType.WidgetInteractionStarted, undefined, meta));\n\n            method().then(() => {\n                observer.next(createAction(CustomerStrategyActionType.WidgetInteractionFinished, undefined, meta));\n                observer.complete();\n            })\n            .catch(error => {\n                observer.error(createErrorAction(CustomerStrategyActionType.WidgetInteractionFailed, error, meta));\n            });\n        });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport PaymentMethod from '../../payment-method';\n\nimport AmazonPayWindow from './amazon-pay-window';\n\nexport default class AmazonPayScriptLoader {\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    loadWidget(method: PaymentMethod, onPaymentReady?: () => void): Promise<void> {\n        const {\n            config: { merchantId, testMode },\n            initializationData: { region = 'us' } = {},\n        } = method;\n\n        const url = 'https://' +\n            (region.toLowerCase() !== 'us' ? 'static-eu.' : 'static-na.') +\n            'payments-amazon.com/OffAmazonPayments/' +\n            `${region.toLowerCase()}/` +\n            (testMode ? 'sandbox/' : '') +\n            (region.toLowerCase() !== 'us' ? 'lpa/' : '') +\n            `js/Widgets.js?sellerId=${merchantId}`;\n\n        this._configureWidget(method, onPaymentReady);\n\n        return this._scriptLoader.loadScript(url);\n    }\n\n    private _configureWidget(method: PaymentMethod, onPaymentReady?: () => void): void {\n        const onLoginReady = () => {\n            if (!this._window.amazon) {\n                return;\n            }\n\n            this._window.amazon.Login.setClientId(method.initializationData.clientId);\n            this._window.amazon.Login.setUseCookie(true);\n        };\n\n        if (this._window.amazon && this._window.amazon.Login) {\n            onLoginReady();\n        } else {\n            this._window.onAmazonLoginReady = onLoginReady;\n        }\n\n        if (this._window.OffAmazonPayments && onPaymentReady) {\n            onPaymentReady();\n        } else {\n            this._window.onAmazonPaymentsReady = onPaymentReady;\n        }\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport { Address, LegacyAddress } from '../../../address';\n\nimport { BraintreeDataCollector } from './braintree';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\nimport { VisaCheckoutAddress, VisaCheckoutInitOptions, VisaCheckoutPaymentSuccessPayload, VisaCheckoutTokenizedPayload } from './visacheckout';\n\nexport default class BraintreeVisaCheckoutPaymentProcessor {\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _requestSender: RequestSender\n    ) {}\n\n    initialize(clientToken: string, options: VisaCheckoutInitializeOptions): Promise<VisaCheckoutInitOptions> {\n        this._braintreeSDKCreator.initialize(clientToken);\n\n        return this._braintreeSDKCreator.getVisaCheckout()\n            .then(visaCheckout => visaCheckout.createInitOptions({\n                settings: {\n                    locale: options.locale,\n                    shipping: {\n                        collectShipping: options.collectShipping,\n                    },\n                },\n                paymentRequest: {\n                    currencyCode: options.currencyCode,\n                    subtotal: String(options.subtotal),\n                },\n            }));\n    }\n\n    deinitialize(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    handleSuccess(payment: VisaCheckoutPaymentSuccessPayload, shipping?: Address, billing?: Address): Promise<any> {\n        return this._braintreeSDKCreator.getVisaCheckout()\n            .then(braintreeVisaCheckout => Promise.all([\n                braintreeVisaCheckout.tokenize(payment),\n                this._braintreeSDKCreator.getDataCollector(),\n            ])\n            .then(([tokenizedPayload, dataCollector]) => {\n                const {\n                    shippingAddress = this._toVisaCheckoutAddress(shipping),\n                    billingAddress = this._toVisaCheckoutAddress(billing),\n                } = tokenizedPayload;\n\n                return this._postForm({\n                    ...tokenizedPayload,\n                    shippingAddress,\n                    billingAddress,\n                }, dataCollector);\n            }));\n    }\n\n    private _postForm(paymentData: VisaCheckoutTokenizedPayload, dataCollector: BraintreeDataCollector) {\n        const {\n            userData,\n            billingAddress,\n            shippingAddress,\n            details: cardInformation,\n        } = paymentData;\n        const { userEmail } = userData;\n        const { deviceData } = dataCollector;\n\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                payment_type: paymentData.type,\n                nonce: paymentData.nonce,\n                provider: 'braintreevisacheckout',\n                action: 'set_external_checkout',\n                device_data: deviceData,\n                card_information: this._getCardInformation(cardInformation),\n                billing_address: this._getAddress(userEmail, billingAddress),\n                shipping_address: this._getAddress(userEmail, shippingAddress),\n            },\n        });\n    }\n\n    private _toVisaCheckoutAddress(address?: Address): VisaCheckoutAddress {\n        if (!address) {\n            return {};\n        }\n\n        return {\n            firstName: address.firstName,\n            lastName: address.lastName,\n            phoneNumber: address.phone,\n            streetAddress: address.address1,\n            extendedAddress: address.address2,\n            locality: address.city,\n            region: address.stateOrProvinceCode,\n            countryCode: address.countryCode,\n            postalCode: address.postalCode,\n        };\n    }\n\n    private _getAddress(email: string, address: VisaCheckoutAddress = {}): Partial<LegacyAddress> {\n        return {\n            email,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone_number: address.phoneNumber,\n            address_line_1: address.streetAddress,\n            address_line_2: address.extendedAddress,\n            city: address.locality,\n            state: address.region,\n            country_code: address.countryCode,\n            postal_code: address.postalCode,\n        };\n    }\n\n    private _getCardInformation(cardInformation: { cardType: string; lastTwo: string }) {\n        return {\n            type: cardInformation.cardType,\n            number: cardInformation.lastTwo,\n        };\n    }\n}\n\nexport interface VisaCheckoutInitializeOptions {\n    locale?: string;\n    collectShipping?: boolean;\n    subtotal?: number;\n    currencyCode?: string;\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport BraintreeScriptLoader from './braintree-script-loader';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\nimport BraintreeVisaCheckoutPaymentProcessor from './braintree-visacheckout-payment-processor';\n\nexport default function createBraintreeVisaCheckoutPaymentProcessor(\n    scriptLoader: ScriptLoader,\n    requestSender: RequestSender\n) {\n    const braintreeScriptLoader = new BraintreeScriptLoader(scriptLoader);\n    const braintreeSDKCreator = new BraintreeSDKCreator(braintreeScriptLoader);\n\n    return new BraintreeVisaCheckoutPaymentProcessor(braintreeSDKCreator, requestSender);\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { VisaCheckoutHostWindow, VisaCheckoutSDK } from './visacheckout';\n\nexport default class VisaCheckoutScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: VisaCheckoutHostWindow = window\n    ) {}\n\n    load(testMode?: boolean): Promise<VisaCheckoutSDK> {\n        return this._scriptLoader\n            .loadScript(`//${testMode ? 'sandbox-' : ''}assets.secure.checkout.visa.com/checkout-widget/resources/js/integration/v1/sdk.js`)\n            .then(() => {\n                if (!this._window.V) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.V;\n            });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { ChasePayHostWindow, JPMC } from './chasepay';\n\nexport default class ChasePayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: ChasePayHostWindow = window\n    ) {}\n\n    load(testMode?: boolean): Promise<JPMC> {\n        return this._scriptLoader\n            .loadScript(`//pwc${testMode ? 'psb' : ''}.chase.com/pwc/checkout/js/v20170521/list.action?type=raw&applId=PWC&channelId=CWC&version=1`)\n            .then(() => {\n                if (!this._window.JPMC) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.JPMC;\n            });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\n/**\n * @todo Convert this file into TypeScript properly\n */\nexport default class RemoteCheckoutRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    initializeBilling(methodName: string, params?: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response<any>> {\n        const url = `/remote-checkout/${methodName}/billing`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializeShipping(methodName: string, params?: { referenceId: string }, { timeout }: RequestOptions = {}): Promise<Response<any>> {\n        const url = `/remote-checkout/${methodName}/shipping`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    initializePayment(methodName: string, params?: InitializePaymentOptions, { timeout }: RequestOptions = {}): Promise<Response<any>> {\n        const url = `/remote-checkout/${methodName}/payment`;\n\n        return this._requestSender.get(url, { params, timeout });\n    }\n\n    loadSettings(methodName: string, { timeout }: RequestOptions = {}): Promise<Response<any>> {\n        const url = `/remote-checkout/${methodName}/settings`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    signOut(methodName: string, { timeout }: RequestOptions = {}): Promise<Response<any>> {\n        const url = `/remote-checkout/${methodName}/signout`;\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    generateToken({ timeout }: RequestOptions = {}): Promise<Response<any>> {\n        const url = '/remote-checkout-token';\n\n        return this._requestSender.get(url, { timeout });\n    }\n\n    trackAuthorizationEvent({ timeout }: RequestOptions = {}): Promise<Response<any>> {\n        const url = '/remote-checkout/events/shopper-checkout-service-provider-authorization-requested';\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n\nexport interface InitializePaymentOptions {\n    authorizationToken?: string;\n    customerMessage?: string;\n    referenceId?: string;\n    useStoreCredit?: boolean;\n}\n","import { createAction, createErrorAction, Action } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { RemoteCheckoutActionType } from './remote-checkout-actions';\nimport RemoteCheckoutRequestSender, { InitializePaymentOptions } from './remote-checkout-request-sender';\nimport { RemoteCheckoutStateData } from './remote-checkout-state';\n\n/**\n * @todo Convert this file into TypeScript properly\n * i.e.: Action<T>\n */\nexport default class RemoteCheckoutActionCreator {\n    constructor(\n        private _remoteCheckoutRequestSender: RemoteCheckoutRequestSender\n    ) {}\n\n    initializeBilling(methodId: string, params?: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteBillingRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeBilling(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteBillingSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemoteBillingFailed, response, { methodId }));\n                });\n        });\n    }\n\n    initializeShipping(methodId: string, params?: { referenceId: string }, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteShippingRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializeShipping(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemoteShippingSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemoteShippingFailed, response, { methodId }));\n                });\n        });\n    }\n\n    initializePayment(methodId: string, params?: InitializePaymentOptions, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.InitializeRemotePaymentRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.initializePayment(methodId, params, options)\n                .then(({ body = {} }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.InitializeRemotePaymentSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.InitializeRemotePaymentFailed, response, { methodId }));\n                });\n        });\n    }\n\n    loadSettings(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.LoadRemoteSettingsRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.loadSettings(methodId, options)\n                .then(({ body }) => {\n                    observer.next(createAction(RemoteCheckoutActionType.LoadRemoteSettingsSucceeded, body, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.LoadRemoteSettingsFailed, response, { methodId }));\n                });\n        });\n    }\n\n    signOut(methodId: string, options?: RequestOptions): Observable<Action> {\n        return Observable.create((observer: Observer<Action>) => {\n            observer.next(createAction(RemoteCheckoutActionType.SignOutRemoteCustomerRequested, undefined, { methodId }));\n\n            this._remoteCheckoutRequestSender.signOut(methodId, options)\n                .then(() => {\n                    observer.next(createAction(RemoteCheckoutActionType.SignOutRemoteCustomerSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(RemoteCheckoutActionType.SignOutRemoteCustomerFailed, response, { methodId }));\n                });\n        });\n    }\n\n    updateCheckout<K extends keyof RemoteCheckoutStateData>(methodId: K, data: Partial<RemoteCheckoutStateData[K]>): Action {\n        return createAction(RemoteCheckoutActionType.UpdateRemoteCheckout, data, { methodId });\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if the shopper chooses not to complete the spam protection\n * challenge (i.e.: they close the reCaptcha window).\n */\nexport default class SpamProtectionChallengeNotCompletedError extends StandardError {\n    constructor() {\n        super('You haven\\'t complete our spam protection challenge. Please try again.');\n\n        this.name = 'SpamProtectionChallengeNotCompletedError';\n        this.type = 'spam_protection_challenge_not_completed';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we fail to complete the required spam protection\n * verification due to an unknown reason.\n */\nexport default class SpamProtectionFailedError extends StandardError {\n    constructor() {\n        super('We were not able to complete your spam protection verification. Please try again.');\n\n        this.name = 'SpamProtectionFailedError';\n        this.type = 'spam_protection_failed';\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, from, of } from 'rxjs';\nimport { catchError, switchMap, take } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\n\nimport { SpamProtectionChallengeNotCompletedError, SpamProtectionFailedError } from './errors';\nimport GoogleRecaptcha from './google-recaptcha';\nimport isSpamProtectionExecuteSucceededAction from './is-spam-protection-succeeded-action';\nimport { SpamProtectionAction, SpamProtectionActionType } from './spam-protection-actions';\nimport { SpamProtectionOptions } from './spam-protection-options';\nimport SpamProtectionRequestSender from './spam-protection-request-sender';\n\nexport default class SpamProtectionActionCreator {\n    constructor(\n        private _googleRecaptcha: GoogleRecaptcha,\n        private _requestSender: SpamProtectionRequestSender\n    ) {}\n\n    initialize(options?: SpamProtectionOptions): ThunkAction<SpamProtectionAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(SpamProtectionActionType.InitializeRequested, undefined)),\n            defer(async () => {\n                const spamProtectionElementId = options ? options.containerId : 'spamProtectionContainer';\n\n                if (!options && !document.getElementById(spamProtectionElementId)) {\n                    const spamProtectionElement = document.createElement('div');\n                    spamProtectionElement.setAttribute('id', spamProtectionElementId);\n                    document.body.appendChild(spamProtectionElement);\n                }\n\n                const state = store.getState();\n                const storeConfig = state.config.getStoreConfigOrThrow();\n                const recaptchaSitekey = storeConfig.checkoutSettings.googleRecaptchaSitekey;\n\n                await this._googleRecaptcha.load(spamProtectionElementId, recaptchaSitekey);\n\n                return createAction(SpamProtectionActionType.InitializeSucceeded);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(SpamProtectionActionType.InitializeFailed, error))\n        );\n    }\n\n    verifyCheckoutSpamProtection(): ThunkAction<SpamProtectionAction> {\n        return store => defer(() => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            return concat(\n                of(createAction(SpamProtectionActionType.VerifyCheckoutRequested)),\n                from(this.execute()(store))\n                    .pipe(switchMap(action => {\n                        if (!isSpamProtectionExecuteSucceededAction(action) || !action.payload) {\n                            return of(action);\n                        }\n\n                        return from(this._requestSender.validate(checkout.id, action.payload.token))\n                            .pipe(\n                                switchMap(({ body }) => concat(\n                                    of(action),\n                                    of(createAction(SpamProtectionActionType.VerifyCheckoutSucceeded, body))\n                                ))\n                            );\n                        })\n                    )\n            ).pipe(\n                catchError(error => throwErrorAction(SpamProtectionActionType.VerifyCheckoutFailed, error))\n            );\n        });\n    }\n\n    execute(): ThunkAction<SpamProtectionAction, InternalCheckoutSelectors> {\n        return store => concat(\n                of(createAction(SpamProtectionActionType.ExecuteRequested)),\n                this.initialize()(store),\n                this._googleRecaptcha.execute()\n                    .pipe(take(1))\n                    .pipe(switchMap(async ({ error, token }) => {\n                        if (error instanceof SpamProtectionChallengeNotCompletedError) {\n                            throw error;\n                        }\n\n                        if (error || !token) {\n                            throw new SpamProtectionFailedError();\n                        }\n\n                        return createAction(SpamProtectionActionType.ExecuteSucceeded, { token });\n                    }))\n            ).pipe(\n                catchError(error => throwErrorAction(SpamProtectionActionType.ExecuteFailed, error))\n            );\n    }\n}\n","export interface MutationObeserverCreator {\n    prototype: MutationObserver;\n    new(callback: MutationCallback): MutationObserver;\n}\n\nexport interface MutationObserverWindow extends Window {\n    MutationObserver: MutationObeserverCreator;\n}\n\nexport class MutationObserverFactory {\n    constructor(\n        private _window: MutationObserverWindow = window as MutationObserverWindow\n    ) {}\n\n    create(callback: MutationCallback): MutationObserver {\n        return new this._window.MutationObserver(callback);\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if spam protection is not loaded when trying to\n * complete the required spam protection verification.\n */\nexport default class SpamProtectionNotLoadedError extends StandardError {\n    constructor() {\n        super('Spam protection is not loaded. Please try again.');\n\n        this.name = 'SpamProtectionNotLoadedError';\n        this.type = 'spam_protection_failed';\n    }\n}\n","import { memoize } from '@bigcommerce/memoize';\nimport { defer, of, throwError, Observable, Subject } from 'rxjs';\nimport { catchError, delay, retryWhen, switchMap } from 'rxjs/operators';\n\nimport { MutationObserverFactory } from '../common/dom';\nimport { NotInitializedError, NotInitializedErrorType } from '../common/error/errors';\n\nimport { SpamProtectionChallengeNotCompletedError, SpamProtectionFailedError, SpamProtectionNotLoadedError } from './errors';\nimport GoogleRecaptchaScriptLoader from './google-recaptcha-script-loader';\n\nconst TIMEOUT = 7000;\nconst RETRY_INTERVAL = 250;\nconst MAX_RETRIES = TIMEOUT / RETRY_INTERVAL;\n\nexport interface RecaptchaResult {\n    error?: Error;\n    token?: string;\n}\n\nexport default class GoogleRecaptcha {\n    private _event$?: Subject<RecaptchaResult>;\n    private _recaptcha?: ReCaptchaV2.ReCaptcha;\n    private _memoized: (recaptcha: ReCaptchaV2.ReCaptcha, sitekey: string, container: HTMLElement | null) => Subject<RecaptchaResult>;\n    private _widgetId?: number;\n\n    constructor(\n        private googleRecaptchaScriptLoader: GoogleRecaptchaScriptLoader,\n        private mutationObserverFactory: MutationObserverFactory\n    ) {\n        this._memoized = memoize((recaptcha: ReCaptchaV2.ReCaptcha, sitekey: string, container: HTMLElement | null) => {\n            const event$ = new Subject<RecaptchaResult>();\n\n            if (!container) {\n                throw new Error();\n            }\n\n            this._widgetId = recaptcha.render(container.id, {\n                sitekey,\n                size: 'invisible',\n                callback: () => {\n                    event$.next({\n                        token: recaptcha.getResponse(this._widgetId),\n                    });\n                    recaptcha.reset(this._widgetId);\n                },\n                'error-callback': () => {\n                    event$.next({\n                        error: new SpamProtectionFailedError(),\n                    });\n                },\n            });\n\n            return event$;\n        }, { isEqual: (a, b) => a === b });\n    }\n\n    load(containerId: string, sitekey: string): Promise<void> {\n        return this.googleRecaptchaScriptLoader.load()\n            .then(recaptcha => {\n                this._event$ = this._memoized(recaptcha, sitekey, document.getElementById(containerId));\n\n                this._recaptcha = recaptcha;\n            });\n    }\n\n    execute(): Observable<RecaptchaResult> {\n        return defer(() => {\n            const event$ = this._event$;\n            const recaptcha = this._recaptcha;\n\n            if (!event$ || !recaptcha) {\n                throw new NotInitializedError(NotInitializedErrorType.SpamProtectionNotInitialized);\n            }\n\n            return defer(() => {\n                const element = document.querySelector('iframe[src*=\"bframe\"]');\n\n                return element ? of(element) : throwError(new SpamProtectionNotLoadedError());\n            })\n                .pipe(\n                    retryWhen(errors => errors.pipe(\n                        delay(RETRY_INTERVAL),\n                        switchMap((error, index) =>\n                            index < MAX_RETRIES ? of(error) : throwError(error)\n                        )\n                    )),\n                    switchMap(element => {\n                        this._watchRecaptchaChallengeWindow(event$, element);\n                        recaptcha.execute(this._widgetId);\n\n                        return event$;\n                    }),\n                    catchError(error => of({ error }))\n                );\n        });\n    }\n\n    private _watchRecaptchaChallengeWindow(event: Subject<RecaptchaResult>, element: Element) {\n        const iframeContainer = element.parentElement;\n\n        if (!iframeContainer) {\n            throw new SpamProtectionNotLoadedError();\n        }\n\n        const container = iframeContainer.parentElement;\n\n        if (!container) {\n            throw new SpamProtectionNotLoadedError();\n        }\n\n        this.mutationObserverFactory.create(() => {\n            // When customer closes the Google ReCaptcha challenge window, throw SpamProtectionNotCompletedError\n            if (container.style.visibility === 'hidden') {\n                event.next({\n                    error: new SpamProtectionChallengeNotCompletedError(),\n                });\n            }\n        }).observe(container, { attributes: true, attributeFilter: ['style'] });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nexport default class GoogleRecaptchaScriptLoader {\n    private _loadPromise?: Promise<ReCaptchaV2.ReCaptcha>;\n\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: GoogleRecaptchaWindow = window\n    ) {}\n\n    load(): Promise<ReCaptchaV2.ReCaptcha> {\n        if (!this._loadPromise) {\n            this._loadPromise = this._loadScript();\n        }\n\n        return this._loadPromise;\n    }\n\n    private _loadScript(): Promise<ReCaptchaV2.ReCaptcha> {\n        const callbackName = 'initRecaptcha';\n        const params = [\n            `onload=${callbackName}`,\n            'render=explicit',\n        ].join('&');\n\n        return new Promise((resolve, reject) => {\n            this._window[callbackName] = () => resolve(this._window.grecaptcha);\n\n            this._scriptLoader.loadScript(`//www.google.com/recaptcha/api.js?${params}`)\n                .catch(error => {\n                    this._loadPromise = undefined;\n                    reject(error);\n                });\n        });\n    }\n}\n\nexport interface GoogleRecaptchaWindow extends Window {\n    grecaptcha?: ReCaptchaV2.ReCaptcha;\n    initRecaptcha?(): void;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { MutationObserverFactory } from '../common/dom';\n\nimport GoogleRecaptcha from './google-recaptcha';\nimport GoogleRecaptchaScriptLoader from './google-recaptcha-script-loader';\n\nexport default function createSpamProtection(scriptLoader: ScriptLoader): GoogleRecaptcha {\n    return new GoogleRecaptcha(\n        new GoogleRecaptchaScriptLoader(scriptLoader),\n        new MutationObserverFactory()\n    );\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout } from '../checkout';\nimport { ContentType, RequestOptions } from '../common/http-request';\n\nexport default class SpamProtectionRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    validate(checkoutId: string, token: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/spam-protection`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: { token }, headers, timeout });\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { AmazonPayLoginButton, AmazonPayScriptLoader, AmazonPayWindow } from '../../../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nimport AmazonPayCustomerInitializeOptions from './amazon-pay-customer-initialize-options';\n\nexport default class AmazonPayCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _remoteCheckoutRequestSender: RemoteCheckoutRequestSender,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n\n        if (!amazonOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazon\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise((resolve, reject) => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const { onError = () => {} } = amazonOptions;\n                const onReady = () => {\n                    this._createSignInButton({\n                        ...amazonOptions,\n                        onError: error => {\n                            reject(error);\n                            onError(error);\n                        },\n                    });\n\n                    resolve();\n                };\n\n                this._scriptLoader.loadWidget(this._paymentMethod, onReady)\n                    .catch(reject);\n            }))\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via AmazonPay, the shopper must click on \"Login with Amazon\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(options: AmazonPayCustomerInitializeOptions): AmazonPayLoginButton {\n        if (!this._paymentMethod || !this._window.OffAmazonPayments) {\n            throw new NotInitializedError(NotInitializedErrorType.CustomerNotInitialized);\n        }\n\n        if (!this._paymentMethod.config.merchantId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { initializationData } = this._paymentMethod;\n\n        return new this._window.OffAmazonPayments.Button(options.container, this._paymentMethod.config.merchantId, {\n            color: options.color || 'Gold',\n            size: options.size || 'small',\n            type: 'PwA',\n            useAmazonAddressBook: true,\n            onError: options.onError,\n            authorization: () => {\n                this._handleAuthorization(initializationData);\n            },\n        });\n    }\n\n    private _handleAuthorization(options: AuthorizationOptions): void {\n        this._remoteCheckoutRequestSender.generateToken()\n            .then(({ body }) => {\n                if (!this._window.amazon) {\n                    throw new NotInitializedError(NotInitializedErrorType.ShippingNotInitialized);\n                }\n\n                this._window.amazon.Login.authorize({\n                    popup: false,\n                    scope: 'payments:shipping_address payments:billing_address payments:widget profile',\n                    state: `${options.tokenPrefix}${body.token}`,\n                }, options.redirectUrl);\n\n                this._remoteCheckoutRequestSender.trackAuthorizationEvent();\n            });\n    }\n}\n\ninterface AuthorizationOptions {\n    redirectUrl: string;\n    tokenPrefix: string;\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { PaymentMethodActionCreator } from '../../../payment';\nimport { AmazonPayV2PaymentProcessor, AmazonPayV2PayOptions, AmazonPayV2Placement } from '../../../payment/strategies/amazon-pay-v2';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { getShippableItemsCount } from '../../../shipping';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class AmazonPayV2CustomerStrategy implements CustomerStrategy {\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _amazonPayV2PaymentProcessor: AmazonPayV2PaymentProcessor\n    ) {}\n\n    async initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId, amazonpay } = options;\n\n        if (!methodId || !amazonpay) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.methodId\" or \"options.amazonpay\" argument is not provided.');\n        }\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n        const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n        await this._amazonPayV2PaymentProcessor.initialize(paymentMethod);\n        this._walletButton = this._createSignInButton(amazonpay.container, methodId);\n\n        return this._store.getState();\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Amazon, the shopper must click on \"Amazon Pay\" button.'\n        );\n    }\n\n    async signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        await this._amazonPayV2PaymentProcessor.signout();\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(containerId: string, methodId: string): HTMLElement {\n        const container = document.getElementById(containerId);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n        const config = state.config.getStoreConfig();\n        const cart = state.cart.getCart();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const {\n            config: {\n                merchantId,\n                testMode,\n            },\n            initializationData: {\n                checkoutLanguage,\n                ledgerCurrency,\n                checkoutSessionMethod,\n                extractAmazonCheckoutSessionId,\n            },\n        } = paymentMethod;\n\n        if (!merchantId) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid merchant ID.');\n        }\n\n        const amazonButtonOptions = {\n            merchantId,\n            sandbox: !!testMode,\n            checkoutLanguage,\n            ledgerCurrency,\n            productType: cart && getShippableItemsCount(cart) === 0 ?\n                AmazonPayV2PayOptions.PayOnly :\n                AmazonPayV2PayOptions.PayAndShip,\n            createCheckoutSession: {\n                method: checkoutSessionMethod,\n                url: `${config.storeProfile.shopPath}/remote-checkout/${methodId}/payment-session`,\n                extractAmazonCheckoutSessionId,\n            },\n            placement: AmazonPayV2Placement.Checkout,\n        };\n\n        this._amazonPayV2PaymentProcessor.createButton(`#${containerId}`, amazonButtonOptions);\n\n        return container;\n    }\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { BraintreeVisaCheckoutPaymentProcessor, VisaCheckoutPaymentSuccessPayload, VisaCheckoutScriptLoader } from '../../../payment/strategies/braintree';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategyActionCreator from '../../customer-strategy-action-creator';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class BraintreeVisaCheckoutCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _buttonClassName: string = 'visa-checkout-wrapper';\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _customerStrategyActionCreator: CustomerStrategyActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _braintreeVisaCheckoutPaymentProcessor: BraintreeVisaCheckoutPaymentProcessor,\n        private _visaCheckoutScriptLoader: VisaCheckoutScriptLoader\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintreevisacheckout: visaCheckoutOptions, methodId } = options;\n\n        if (!visaCheckoutOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.braintreevisacheckout\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const checkout = state.checkout.getCheckout();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const {\n                    container,\n                    onError = () => {},\n                } = visaCheckoutOptions;\n\n                const initOptions = {\n                    locale: storeConfig.storeProfile.storeLanguage,\n                    collectShipping: true,\n                    subtotal: checkout.subtotal,\n                    currencyCode: storeConfig.currency.code,\n                };\n\n                return Promise.all([\n                    this._visaCheckoutScriptLoader.load(this._paymentMethod.config.testMode),\n                    this._braintreeVisaCheckoutPaymentProcessor.initialize(this._paymentMethod.clientToken, initOptions),\n                ])\n                .then(([visaCheckout, initOptions]) => {\n                    const signInButton = this._createSignInButton(container, this._buttonClassName);\n\n                    visaCheckout.init(initOptions);\n                    visaCheckout.on('payment.success', (paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) =>\n                        this._paymentInstrumentSelected(paymentSuccessPayload)\n                            .catch(error => onError(error))\n                    );\n                    visaCheckout.on('payment.error', (_, error) => onError(error));\n\n                    return signInButton;\n                })\n                .then(signInButton => { signInButton.style.visibility = 'visible'; });\n            })\n            .then(() => this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via VisaCheckout, the shopper must click on \"Visa Checkout\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut('braintreevisacheckout', options)\n        );\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return this._braintreeVisaCheckoutPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _paymentInstrumentSelected(paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) {\n        const state = this._store.getState();\n\n        if (!this._paymentMethod) {\n            throw new Error('Payment method not initialized');\n        }\n\n        const { id: methodId } = this._paymentMethod;\n\n        return this._store.dispatch(\n            this._customerStrategyActionCreator.widgetInteraction(() => {\n                return this._braintreeVisaCheckoutPaymentProcessor.handleSuccess(\n                    paymentSuccessPayload,\n                    state.shippingAddress.getShippingAddress(),\n                    state.billingAddress.getBillingAddress()\n                )\n                .then(() => this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _createSignInButton(containerId: string, buttonClass: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new Error('Need a container to place the button');\n        }\n\n        return (container.querySelector('.' + buttonClass) as HTMLElement) ||\n            this._insertVisaCheckoutButton(container, buttonClass);\n    }\n\n    private _insertVisaCheckoutButton(container: Element, buttonClass: string): HTMLElement {\n        const buttonSource = 'https://secure.checkout.visa.com/wallet-services-web/xo/button.png?acceptCanadianVisaDebit=false&cobrand=true&size=154';\n        const buttonTemplate = `\n            <img\n                alt=\"Visa Checkout\"\n                class=\"v-button\"\n                role=\"button\"\n                src=\"${buttonSource}\"\n                />\n            <a class=\"v-learn v-learn-default\" style=\"text-align: right; display: block; font-size: 10px; color: #003366;\" href=\"#\" data-locale=\"en_US\">Tell Me More</a>`;\n\n        const visaCheckoutButton = document.createElement('div');\n        visaCheckoutButton.style.display = 'flex';\n        visaCheckoutButton.style.flexDirection = 'column';\n        visaCheckoutButton.style.visibility = 'hidden';\n        visaCheckoutButton.className = buttonClass;\n        visaCheckoutButton.innerHTML = buttonTemplate;\n\n        container.appendChild(visaCheckoutButton);\n\n        return visaCheckoutButton;\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { ChasePayScriptLoader, ChasePaySuccessPayload } from '../../../payment/strategies/chasepay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class ChasePayCustomerStrategy implements CustomerStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _chasePayScriptLoader: ChasePayScriptLoader,\n        private _requestSender: RequestSender,\n        private _formPoster: FormPoster\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { chasepay: chasePayOptions, methodId } = options;\n\n        if (!chasePayOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.chasepay\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const cart = state.cart.getCart();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!cart) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCart);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.initializationData.digitalSessionId) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n\n                const { container } = chasePayOptions;\n\n                return this._chasePayScriptLoader.load(this._paymentMethod.config.testMode)\n                    .then(JPMC => {\n                        const ChasePay = JPMC.ChasePay;\n\n                        ChasePay.configure({\n                            language: storeConfig.storeProfile.storeLanguage,\n                        });\n\n                        if (ChasePay.isChasePayUp) {\n                            ChasePay.insertButtons({\n                                containers: [container],\n                            });\n                        }\n\n                        ChasePay.on(ChasePay.EventType.START_CHECKOUT, () => {\n                            this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n                                .then(() => {\n                                    const state = this._store.getState();\n                                    const method = state.paymentMethods.getPaymentMethod(methodId);\n                                    const sessionId = method && method.initializationData && method.initializationData.digitalSessionId;\n\n                                    if (sessionId) {\n                                        ChasePay.startCheckout(sessionId);\n                                    }\n                                });\n                        });\n\n                        ChasePay.on(ChasePay.EventType.COMPLETE_CHECKOUT, (payload: ChasePaySuccessPayload) => {\n                            const state = this._store.getState();\n                            const method = state.paymentMethods.getPaymentMethod(methodId);\n                            const requestId = method && method.initializationData && method.initializationData.merchantRequestId;\n\n                            if (requestId) {\n                                this._setExternalCheckoutData(payload, requestId)\n                                    .then(() => {\n                                        this._reloadPage();\n                                });\n                            }\n                        });\n                    });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Chase Pay®, the shopper must click on \"Chase Pay®\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _setExternalCheckoutData(payload: ChasePaySuccessPayload, requestId: string): Promise<Response<any>> {\n        const url = `checkout.php?provider=chasepay&action=set_external_checkout`;\n        const options = {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            },\n            body: {\n                sessionToken: payload.sessionToken,\n                merchantRequestId: requestId,\n            },\n            method: 'post',\n        };\n\n        return this._requestSender.sendRequest(url, options);\n    }\n\n    private _reloadPage() {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            params: {\n                fromChasePay: true,\n            },\n        });\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport CustomerActionCreator from '../../customer-action-creator';\nimport CustomerCredentials from '../../customer-credentials';\nimport { CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class DefaultCustomerStrategy implements CustomerStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _customerActionCreator: CustomerActionCreator\n    ) {}\n\n    signIn(credentials: CustomerCredentials, options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._customerActionCreator.signInCustomer(credentials, options)\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._customerActionCreator.signOutCustomer(options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { GooglePayPaymentProcessor } from '../../../payment/strategies/googlepay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { getShippableItemsCount } from '../../../shipping';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nimport GooglePayCustomerInitializeOptions from './googlepay-customer-initialize-options';\n\nexport default class GooglePayCustomerStrategy implements CustomerStrategy {\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor,\n        private _formPoster: FormPoster\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId }  = options;\n\n        const googlePayOptions = this._getGooglePayOptions(options);\n\n        if (!methodId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._googlePayPaymentProcessor.initialize(methodId)\n            .then(() => {\n                this._walletButton = this._createSignInButton(googlePayOptions.container);\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        return this._googlePayPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Google Pay, the shopper must click on \"Google Pay\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        const button = this._googlePayPaymentProcessor.createButton(this._handleWalletButtonClick);\n\n        container.appendChild(button);\n\n        return button;\n    }\n\n    private _getGooglePayOptions(options: CustomerInitializeOptions): GooglePayCustomerInitializeOptions {\n        if (options.methodId === 'googlepayadyenv2' && options.googlepayadyenv2) {\n            return options.googlepayadyenv2;\n        }\n\n        if (options.methodId === 'googlepayauthorizenet' && options.googlepayauthorizenet) {\n            return options.googlepayauthorizenet;\n        }\n\n        if (options.methodId === 'googlepaybraintree' && options.googlepaybraintree) {\n            return options.googlepaybraintree;\n        }\n\n        if (options.methodId === 'googlepaycheckoutcom' && options.googlepaycheckoutcom) {\n            return options.googlepaycheckoutcom;\n        }\n\n        if (options.methodId === 'googlepaycybersourcev2' && options.googlepaycybersourcev2) {\n            return options.googlepaycybersourcev2;\n        }\n\n        if (options.methodId === 'googlepaystripe' && options.googlepaystripe) {\n            return options.googlepaystripe;\n        }\n\n        throw new InvalidArgumentError();\n    }\n\n    @bind\n    private async _handleWalletButtonClick(event: Event): Promise<void> {\n        event.preventDefault();\n        const cart = this._store.getState().cart.getCartOrThrow();\n        const hasPhysicalItems = getShippableItemsCount(cart) > 0;\n\n        try {\n            const paymentData = await this._googlePayPaymentProcessor.displayWallet();\n            await this._googlePayPaymentProcessor.handleSuccess(paymentData);\n            if (hasPhysicalItems && paymentData.shippingAddress) {\n                await this._googlePayPaymentProcessor.updateShippingAddress(paymentData.shippingAddress);\n            }\n            await this._onPaymentSelectComplete();\n        } catch (error) {\n            if (error && error.message !== 'CANCELED') {\n                throw error;\n            }\n        }\n    }\n\n    private _onPaymentSelectComplete(): void {\n        this._formPoster.postForm('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n        });\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotImplementedError } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { getCallbackUrl, MasterpassScriptLoader } from '../../../payment/strategies/masterpass';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerInitializeOptions, CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class MasterpassCustomerStrategy implements CustomerStrategy {\n    private _signInButton?: HTMLElement;\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: CustomerInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { masterpass: masterpassOptions, methodId } = options;\n\n        if (!masterpassOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.masterpass\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n                if (!this._paymentMethod || !this._paymentMethod.initializationData.checkoutId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const cart = state.cart.getCart();\n                if (!cart) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCart);\n                }\n\n                const storeConfig = state.config.getStoreConfig();\n                if (!storeConfig) {\n                    throw new InvalidArgumentError('Unable to retrieve store configuration');\n                }\n\n                const { container } = masterpassOptions;\n\n                const payload = {\n                    checkoutId: this._paymentMethod.initializationData.checkoutId,\n                    allowedCardTypes: this._paymentMethod.initializationData.allowedCardTypes,\n                    amount: cart.cartAmount.toString(),\n                    currency: cart.currency.code,\n                    cartId: cart.id,\n                    suppressShippingAddress: false,\n                    callbackUrl: getCallbackUrl('checkout'),\n                };\n\n                const masterpassScriptLoaderParams = {\n                    useMasterpassSrc: this._paymentMethod.initializationData.isMasterpassSrcEnabled,\n                    language: storeConfig.storeProfile.storeLanguage,\n                    testMode: this._paymentMethod.config.testMode,\n                    checkoutId: this._paymentMethod.initializationData.checkoutId,\n                };\n\n                return this._masterpassScriptLoader.load(masterpassScriptLoaderParams)\n                    .then(Masterpass => {\n                        this._signInButton = this._createSignInButton(container);\n\n                        this._signInButton.addEventListener('click', () => {\n                            Masterpass.checkout(payload);\n                        });\n                    });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        if (this._signInButton && this._signInButton.parentNode) {\n            this._signInButton.parentNode.removeChild(this._signInButton);\n            this._signInButton = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Masterpass, the shopper must click on \"Masterpass\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    private _createSignInButton(containerId: string): HTMLElement {\n        const container = document.querySelector(`#${containerId}`);\n        const state = this._store.getState();\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData.checkoutId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!container) {\n            throw new InvalidArgumentError('Unable to create sign-in button without valid container ID.');\n        }\n\n        if (!storeConfig) {\n            throw new InvalidArgumentError('Unable to retrieve store configuration');\n        }\n\n        const button = document.createElement('input');\n\n        button.type = 'image';\n\n        if (this._paymentMethod.initializationData.isMasterpassSrcEnabled) {\n            const subdomain = this._paymentMethod.config.testMode ? 'sandbox.' : '';\n            const { storeLanguage } = storeConfig.storeProfile;\n            const { checkoutId } = this._paymentMethod.initializationData;\n\n            const params = [\n                `locale=${storeLanguage}`,\n                `paymentmethod=master,visa,amex,discover`,\n                `checkoutid=${checkoutId}`,\n            ];\n\n            button.src = [\n                `https://${subdomain}src.mastercard.com/assets/img/btn/src_chk_btn_126x030px.svg`,\n                params.join('&'),\n            ].join('?');\n        } else {\n            button.src = 'https://static.masterpass.com/dyn/img/btn/global/mp_chk_btn_160x037px.svg';\n        }\n        container.appendChild(button);\n\n        return button;\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { NotImplementedError } from '../../../common/error/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { CustomerRequestOptions } from '../../customer-request-options';\nimport CustomerStrategy from '../customer-strategy';\n\nexport default class SquareCustomerStrategy implements CustomerStrategy {\n\n    constructor(\n        private _store: CheckoutStore,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator\n    ) {}\n\n    signIn(): Promise<InternalCheckoutSelectors> {\n        throw new NotImplementedError(\n            'In order to sign in via Masterpass, the shopper must click on \"Masterpass\" button.'\n        );\n    }\n\n    signOut(options?: CustomerRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n\n        if (!payment) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.signOut(payment.providerId, options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { createAction, createErrorAction, Action } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport Country from './country';\nimport { CountryActionType } from './country-actions';\nimport CountryRequestSender from './country-request-sender';\n\nexport default class CountryActionCreator {\n    constructor(\n        private _countryRequestSender: CountryRequestSender\n    ) {}\n\n    loadCountries(options?: RequestOptions): Observable<Action<Country[]>> {\n        return Observable.create((observer: Observer<Action<Country[]>>) => {\n            observer.next(createAction(CountryActionType.LoadCountriesRequested));\n\n            this._countryRequestSender.loadCountries(options)\n                .then(response => {\n                    observer.next(createAction(CountryActionType.LoadCountriesSucceeded, response.body.data));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(CountryActionType.LoadCountriesFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { CountryResponseBody } from './country-responses';\n\nexport default class CountryRequestSender {\n    constructor(\n        private _requestSender: RequestSender,\n        private _config: { locale?: string }\n    ) {}\n\n    loadCountries({ timeout }: RequestOptions = {}): Promise<Response<CountryResponseBody>> {\n        const url = '/internalapi/v1/store/countries';\n        const headers = {\n            'Accept-Language': this._config.locale,\n        };\n\n        return this._requestSender.get(url, { headers, timeout });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\nimport { isNil, omitBy } from 'lodash';\n\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { InternalOrderResponseBody } from './internal-order-responses';\nimport Order from './order';\nimport OrderParams from './order-params';\n\nexport interface SubmitOrderRequestOptions extends RequestOptions {\n    headers?: {\n        checkoutVariant?: string;\n    };\n}\n\nexport default class OrderRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    loadOrder(orderId: number, { timeout, params }: RequestOptions<OrderParams> = {}): Promise<Response<Order>> {\n        const url = `/api/storefront/orders/${orderId}`;\n        const headers = { Accept: ContentType.JsonV1 };\n        const include = [\n            'payments',\n            'lineItems.physicalItems.socialMedia',\n            'lineItems.physicalItems.options',\n            'lineItems.digitalItems.socialMedia',\n            'lineItems.digitalItems.options',\n        ];\n\n        return this._requestSender.get(url, {\n            params: {\n                include: joinIncludes([\n                    ...include,\n                    ...(params && params.include || []),\n                ]),\n            },\n            headers,\n            timeout,\n        });\n    }\n\n    submitOrder(body: InternalOrderRequestBody, { headers, timeout }: SubmitOrderRequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = '/internalapi/v1/checkout/order';\n\n        return this._requestSender.post(url, {\n            body,\n            headers: omitBy({\n                'X-Checkout-Variant': headers && headers.checkoutVariant,\n                'X-Checkout-SDK-Version': LIBRARY_VERSION,\n            }, isNil),\n            timeout,\n        });\n    }\n\n    finalizeOrder(orderId: number, { timeout }: RequestOptions = {}): Promise<Response<InternalOrderResponseBody>> {\n        const url = `/internalapi/v1/checkout/order/${orderId}`;\n\n        return this._requestSender.post(url, { timeout });\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if the shopper chooses not to complete the spam check.\n */\nexport default class SpamProtectionNotCompletedError extends StandardError {\n    constructor() {\n        super('You haven\\'t complete our spam check. Please try again.');\n\n        this.name = 'SpamProtectionNotCompletedError';\n        this.type = 'spam_protection_not_completed';\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, from, of, Observable, Observer } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { CheckoutValidator, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { SpamProtectionNotCompletedError } from '../spam-protection/errors';\n\nimport InternalOrderRequestBody from './internal-order-request-body';\nimport { FinalizeOrderAction, LoadOrderAction, LoadOrderPaymentsAction, OrderActionType, SubmitOrderAction } from './order-actions';\nimport OrderRequestBody from './order-request-body';\nimport OrderRequestSender from './order-request-sender';\n\nexport default class OrderActionCreator {\n    constructor(\n        private _orderRequestSender: OrderRequestSender,\n        private _checkoutValidator: CheckoutValidator\n    ) {}\n\n    loadOrder(orderId: number, options?: RequestOptions): Observable<LoadOrderAction> {\n        return new Observable((observer: Observer<LoadOrderAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderFailed, response));\n                });\n        });\n    }\n\n    // TODO: Remove when checkout does not contain unrelated order data.\n    loadOrderPayments(orderId: number, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        return new Observable((observer: Observer<LoadOrderPaymentsAction>) => {\n            observer.next(createAction(OrderActionType.LoadOrderPaymentsRequested));\n\n            this._orderRequestSender.loadOrder(orderId, options)\n                .then(response => {\n                    observer.next(createAction(OrderActionType.LoadOrderPaymentsSucceeded, response.body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(OrderActionType.LoadOrderPaymentsFailed, response));\n                });\n        });\n    }\n\n    loadCurrentOrder(options?: RequestOptions): ThunkAction<LoadOrderAction, InternalCheckoutSelectors> {\n        return store => defer(() => {\n            const orderId = this._getCurrentOrderId(store.getState());\n\n            if (!orderId) {\n                throw new MissingDataError(MissingDataErrorType.MissingOrderId);\n            }\n\n            return this.loadOrder(orderId, options);\n        });\n    }\n\n    submitOrder(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<SubmitOrderAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(OrderActionType.SubmitOrderRequested)),\n            defer(() => {\n                const state = store.getState();\n                const externalSource = state.config.getExternalSource();\n                const variantIdentificationToken = state.config.getVariantIdentificationToken();\n                const checkout = state.checkout.getCheckout();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (checkout.shouldExecuteSpamCheck) {\n                    throw new SpamProtectionNotCompletedError();\n                }\n\n                return from(\n                    this._checkoutValidator.validate(checkout, options)\n                        .then(() => this._orderRequestSender.submitOrder(\n                            this._mapToOrderRequestBody(\n                                payload,\n                                checkout.customerMessage,\n                                externalSource\n                            ),\n                            {\n                                ...options,\n                                headers: {\n                                    checkoutVariant: variantIdentificationToken,\n                                },\n                            }))\n                ).pipe(\n                    switchMap(response => concat(\n                        // TODO: Remove once we can submit orders using storefront API\n                        this.loadOrder(response.body.data.order.orderId, options),\n                        of(createAction(OrderActionType.SubmitOrderSucceeded, response.body.data, { ...response.body.meta, token: response.headers.token }))\n                    ))\n                );\n            }).pipe(\n                catchError(error => throwErrorAction(OrderActionType.SubmitOrderFailed, error))\n            )\n        );\n    }\n\n    finalizeOrder(orderId: number, options?: RequestOptions): Observable<FinalizeOrderAction | LoadOrderAction> {\n        return concat(\n            of(createAction(OrderActionType.FinalizeOrderRequested)),\n            from(this._orderRequestSender.finalizeOrder(orderId, options))\n                .pipe(\n                    switchMap(response => concat(\n                        this.loadOrder(orderId, options),\n                        of(createAction(OrderActionType.FinalizeOrderSucceeded, response.body.data))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(OrderActionType.FinalizeOrderFailed, error))\n        );\n    }\n\n    private _getCurrentOrderId(state: InternalCheckoutSelectors): number | undefined {\n        const order = state.order.getOrder();\n        const checkout = state.checkout.getCheckout();\n\n        return (order && order.orderId) || (checkout && checkout.orderId);\n    }\n\n    private _mapToOrderRequestBody(\n        payload: OrderRequestBody,\n        customerMessage: string,\n        externalSource?: string\n    ): InternalOrderRequestBody {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            return {\n                ...order,\n                customerMessage,\n                externalSource,\n            };\n        }\n\n        return {\n            ...order,\n            customerMessage,\n            externalSource,\n            payment: {\n                paymentData: payment.paymentData,\n                name: payment.methodId,\n                gateway: payment.gatewayId,\n            },\n        };\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we are trying to make an order finalization request for a\n * payment method that does not require such procedure.\n */\nexport default class OrderFinalizationNotRequiredError extends StandardError {\n    constructor() {\n        super('The current order does not need to be finalized at this stage.');\n\n        this.name = 'OrderFinalizationNotRequiredError';\n        this.type = 'order_finalization_not_required';\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, empty, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { LoadOrderPaymentsAction, OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../order';\nimport { OrderFinalizationNotRequiredError } from '../order/errors';\nimport { SpamProtectionAction, SpamProtectionActionCreator } from '../spam-protection';\n\nimport { PaymentInitializeOptions, PaymentRequestOptions } from './payment-request-options';\nimport { PaymentStrategyActionType, PaymentStrategyDeinitializeAction, PaymentStrategyExecuteAction, PaymentStrategyFinalizeAction, PaymentStrategyInitializeAction, PaymentStrategyWidgetAction } from './payment-strategy-actions';\nimport PaymentStrategyRegistry from './payment-strategy-registry';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { PaymentStrategy } from './strategies';\n\nexport default class PaymentStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: PaymentStrategyRegistry,\n        private _orderActionCreator: OrderActionCreator,\n        private _spamProtectionActionCreator: SpamProtectionActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: RequestOptions): ThunkAction<PaymentStrategyExecuteAction | SpamProtectionAction, InternalCheckoutSelectors> {\n        const { payment = {} as OrderPaymentRequestBody, useStoreCredit } = payload;\n        const meta = { methodId: payment.methodId };\n\n        return store => {\n            const { checkout } = store.getState();\n            const { shouldExecuteSpamCheck } = checkout.getCheckoutOrThrow();\n\n            return concat(\n                shouldExecuteSpamCheck ? this._spamProtectionActionCreator.verifyCheckoutSpamProtection()(store) : empty(),\n                of(createAction(PaymentStrategyActionType.ExecuteRequested, undefined, meta)),\n                defer(() => {\n                    const state = store.getState();\n\n                    let strategy: PaymentStrategy;\n\n                    if (state.payment.isPaymentDataRequired(useStoreCredit)) {\n                        const method = state.paymentMethods.getPaymentMethod(payment.methodId, payment.gatewayId);\n\n                        if (!method) {\n                            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                        }\n\n                        strategy = this._strategyRegistry.getByMethod(method);\n                    } else {\n                        strategy = this._strategyRegistry.get(PaymentStrategyType.NO_PAYMENT_DATA_REQUIRED);\n                    }\n\n                    return strategy\n                        .execute(payload, { ...options, methodId: payment.methodId, gatewayId: payment.gatewayId })\n                        .then(() => createAction(PaymentStrategyActionType.ExecuteSucceeded, undefined, meta));\n                })\n            ).pipe(\n                catchError(error => throwErrorAction(PaymentStrategyActionType.ExecuteFailed, error, meta))\n            );\n        };\n    }\n\n    finalize(options?: RequestOptions): ThunkAction<PaymentStrategyFinalizeAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(PaymentStrategyActionType.FinalizeRequested)),\n            this._loadOrderPaymentsIfNeeded(store, options),\n            defer(() => {\n                const state = store.getState();\n                const { providerId = '', gatewayId = '' } = state.payment.getPaymentId() || {};\n                const method = state.paymentMethods.getPaymentMethod(providerId, gatewayId);\n\n                if (!method) {\n                    throw new OrderFinalizationNotRequiredError();\n                }\n\n                return this._strategyRegistry.getByMethod(method)\n                    .finalize({ ...options, methodId: method.id, gatewayId: method.gateway })\n                    .then(() => createAction(PaymentStrategyActionType.FinalizeSucceeded, undefined, { methodId: method.id }));\n            })\n        ).pipe(\n            catchError(error => {\n                const state = store.getState();\n                const payment = state.payment.getPaymentId();\n\n                return throwErrorAction(PaymentStrategyActionType.FinalizeFailed, error, { methodId: payment && payment.providerId });\n            })\n        );\n    }\n\n    initialize(options: PaymentInitializeOptions): ThunkAction<PaymentStrategyInitializeAction, InternalCheckoutSelectors> {\n        const { methodId, gatewayId } = options;\n\n        return store => defer(() => {\n            const state = store.getState();\n            const method = state.paymentMethods.getPaymentMethod(methodId, gatewayId);\n\n            if (!method) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            if (methodId && state.paymentStrategies.isInitialized(methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(PaymentStrategyActionType.InitializeRequested, undefined, { methodId })),\n                this._strategyRegistry.getByMethod(method)\n                    .initialize({ ...options, methodId, gatewayId })\n                    .then(() => createAction(PaymentStrategyActionType.InitializeSucceeded, undefined, { methodId }))\n            );\n        }).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.InitializeFailed, error, { methodId }))\n        );\n    }\n\n    deinitialize(options: PaymentRequestOptions): ThunkAction<PaymentStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        const { methodId, gatewayId } = options;\n\n        return store => defer(() => {\n            const state = store.getState();\n            const method = state.paymentMethods.getPaymentMethod(methodId, gatewayId);\n\n            if (!method) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            if (methodId && !state.paymentStrategies.isInitialized(methodId)) {\n                return empty();\n            }\n\n            return concat(\n                of(createAction(PaymentStrategyActionType.DeinitializeRequested, undefined, { methodId })),\n                this._strategyRegistry.getByMethod(method)\n                    .deinitialize({ ...options, methodId, gatewayId })\n                    .then(() => createAction(PaymentStrategyActionType.DeinitializeSucceeded, undefined, { methodId }))\n            );\n        }).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.DeinitializeFailed, error, { methodId }))\n        );\n    }\n\n    widgetInteraction(method: () => Promise<any>, options?: PaymentRequestOptions): Observable<PaymentStrategyWidgetAction> {\n        const methodId = options && options.methodId;\n        const meta = { methodId };\n\n        return concat(\n            of(createAction(PaymentStrategyActionType.WidgetInteractionStarted, undefined, meta)),\n            defer(() =>\n                method().then(() => createAction(PaymentStrategyActionType.WidgetInteractionFinished, undefined, meta))\n            )\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentStrategyActionType.WidgetInteractionFailed, error, meta))\n        );\n    }\n\n    private _loadOrderPaymentsIfNeeded(store: ReadableCheckoutStore, options?: RequestOptions): Observable<LoadOrderPaymentsAction> {\n        const state = store.getState();\n        const checkout = state.checkout.getCheckout();\n\n        if (checkout && checkout.orderId) {\n            return this._orderActionCreator.loadOrderPayments(checkout.orderId, options);\n        }\n\n        return empty();\n    }\n}\n","import { isEqual } from 'lodash';\n\nimport { PartialDeep } from '../common/types';\n\nimport Cart from './cart';\n\nexport default class CartComparator {\n    isEqual(cartA: Cart, cartB: Cart): boolean {\n        return isEqual(\n            this._normalize(cartA),\n            this._normalize(cartB)\n        );\n    }\n\n    private _normalize(cart: Cart): PartialDeep<Cart> {\n        return {\n            cartAmount: cart.cartAmount,\n            currency: cart.currency,\n            id: cart.id,\n            lineItems: {\n                digitalItems: cart.lineItems.digitalItems\n                    .slice()\n                    .sort((itemA, itemB) =>\n                        `${itemA.productId}${itemA.variantId}`.localeCompare(`${itemB.productId}${itemB.variantId}`)\n                    )\n                    .map(item => ({\n                        extendedSalePrice: item.extendedSalePrice,\n                        productId: item.productId,\n                        quantity: item.quantity,\n                        variantId: item.variantId,\n                    })),\n                giftCertificates: cart.lineItems.giftCertificates\n                    .slice()\n                    .sort((itemA, itemB) => `${itemA.id}`.localeCompare(`${itemB.id}`))\n                    .map(item => ({\n                        amount: item.amount,\n                        recipient: item.recipient,\n                    })),\n                physicalItems: cart.lineItems.physicalItems\n                    .slice()\n                    .sort((itemA, itemB) =>\n                        `${itemA.productId}${itemA.variantId}`.localeCompare(`${itemB.productId}${itemB.variantId}`)\n                    )\n                    .map(item => ({\n                        extendedSalePrice: item.extendedSalePrice,\n                        productId: item.productId,\n                        quantity: item.quantity,\n                        variantId: item.variantId,\n                        giftWrapping: item.giftWrapping,\n                    })),\n            },\n        };\n    }\n}\n","import { ComparableCheckout } from '../../checkout';\nimport { StandardError } from '../../common/error/errors';\n\nexport default class CartChangedError extends StandardError {\n    /**\n     * @alpha\n     * Please note that this option is currently in an early stage of\n     * development. Therefore the API is unstable and not ready for public\n     * consumption.\n     */\n    data: { previous: ComparableCheckout; updated: ComparableCheckout };\n\n    constructor(\n        previous: ComparableCheckout,\n        updated: ComparableCheckout\n    ) {\n        super('An update to your shopping cart has been detected and your available shipping costs have been updated.');\n\n        this.name = 'CartChangedError';\n        this.type = 'cart_changed';\n        this.data = {\n            previous,\n            updated,\n        };\n    }\n}\n","import { isEqual, map } from 'lodash';\n\nimport { Cart, CartComparator } from '../cart';\nimport { CartChangedError } from '../cart/errors';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { Coupon, GiftCertificate } from '../coupon';\n\nimport Checkout from './checkout';\nimport CheckoutRequestSender from './checkout-request-sender';\nexport type ComparableCheckout = Pick<Checkout, 'outstandingBalance' | 'coupons' | 'giftCertificates'>\n    & {\n        cart: Partial<Cart>;\n    };\n\nexport default class CheckoutValidator {\n    constructor(\n        private _checkoutRequestSender: CheckoutRequestSender\n    ) {}\n\n    validate(checkout?: Checkout, options?: RequestOptions): Promise<void> {\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        return this._checkoutRequestSender.loadCheckout(checkout.id, options)\n            .then(response => {\n                const comparator = new CartComparator();\n\n                if (checkout.outstandingBalance === response.body.outstandingBalance\n                    && this._compareCoupons(checkout.coupons, response.body.coupons)\n                    && this._compareGiftCertificates(checkout.giftCertificates, response.body.giftCertificates)\n                    && comparator.isEqual(checkout.cart, response.body.cart)\n                ) {\n                    return;\n                }\n\n                throw new CartChangedError(\n                    this._getComparableCheckout(checkout),\n                    this._getComparableCheckout(response.body)\n                );\n            });\n    }\n\n    private _compareCoupons(couponsA: Coupon[], couponsB: Coupon[]): boolean {\n        return isEqual(map(couponsA, 'code'), map(couponsB, 'code'));\n    }\n\n    private _compareGiftCertificates(giftCertificatesA: GiftCertificate[], giftCertificatesB: GiftCertificate[]): boolean {\n        return isEqual(map(giftCertificatesA, 'code'), map(giftCertificatesB, 'code'));\n    }\n\n    private _getComparableCheckout(\n        checkout: Checkout\n    ): ComparableCheckout  {\n        const { cart, coupons, giftCertificates, outstandingBalance } = checkout;\n\n        return {\n            cart: {\n                cartAmount: cart.cartAmount,\n                currency: cart.currency,\n                lineItems: cart.lineItems,\n            },\n            coupons,\n            giftCertificates,\n            outstandingBalance,\n        };\n    }\n}\n","export default class CancellablePromise<T> {\n    promise: Promise<T>;\n    cancel!: (reason?: any) => void;\n\n    constructor(promise: Promise<T>) {\n        const cancellable = new Promise<T>((_, reject) => {\n            this.cancel = reject;\n        });\n\n        this.promise = Promise.race([promise, cancellable]);\n    }\n}\n","import { StandardError } from '../../error/errors';\n\nexport default class UnexpectedDetachmentError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed because the required element is unexpectedly detached from the page.');\n\n        this.name = 'UnexpectedDetachmentError';\n        this.type = 'unexpected_detachment';\n    }\n}\n","import { CancellablePromise } from '../utility';\n\nimport { UnexpectedDetachmentError } from './errors';\nimport { MutationObserverFactory } from './mutation-observer';\n\nexport default class DetachmentObserver {\n    constructor(\n        private _mutationObserver: MutationObserverFactory\n    ) {}\n\n    async ensurePresence<T>(targets: Node[], promise: Promise<T>): Promise<T> {\n        const cancellable = new CancellablePromise(promise);\n\n        const observer = this._mutationObserver.create(mutationsList => {\n            mutationsList.forEach(mutation => {\n                const removedTargets = Array.from(mutation.removedNodes)\n                    .filter(node =>\n                        targets.some(target =>\n                            node === target || node.contains(target)\n                        )\n                    );\n\n                if (removedTargets.length === 0) {\n                    return;\n                }\n\n                cancellable.cancel(new UnexpectedDetachmentError());\n            });\n        });\n\n        observer.observe(document.body, { childList: true, subtree: true });\n\n        try {\n            const output = await cancellable.promise;\n\n            observer.disconnect();\n\n            return output;\n        } catch (error) {\n            observer.disconnect();\n\n            throw error;\n        }\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if the shopper chooses not to complete the spam protection\n * challenge (i.e.: they close the reCaptcha window).\n */\nexport default class CardingProtectionChallengeNotCompletedError extends StandardError {\n    constructor() {\n        super('Please complete our human verification challenge and try again.');\n\n        this.name = 'CardingProtectionChallengeNotCompletedError';\n        this.type = 'carding_protection_challenge_not_completed';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if we fail to complete the required spam protection\n * verification due to an unknown reason.\n */\nexport default class CardingProtectionFailedError extends StandardError {\n    constructor() {\n        super('We were not able to verify that you are not a robot. Please try again.');\n\n        this.name = 'CardingProtectionFailedError';\n        this.type = 'carding_protection_failed';\n    }\n}\n","import { switchMap, take } from 'rxjs/operators';\n\nimport { RequestError } from '../common/error/errors';\nimport { PaymentAdditionalAction } from '../payment';\n\nimport { CardingProtectionChallengeNotCompletedError, CardingProtectionFailedError, SpamProtectionChallengeNotCompletedError } from './errors';\nimport GoogleRecaptcha from './google-recaptcha';\n\nexport default class PaymentHumanVerificationHandler {\n\n    constructor(\n        private _googleRecaptcha: GoogleRecaptcha\n    ) {}\n\n    async handle(error: Error): Promise<PaymentAdditionalAction> {\n        if (!this._isPaymentHumanVerificationRequest(error)) {\n            throw error;\n        }\n\n        await this._initialize(error.body.additional_action_required.data.key);\n\n        return this._googleRecaptcha.execute()\n            .pipe(take(1))\n            .pipe(switchMap(async ({ error, token }) => {\n                if (error instanceof SpamProtectionChallengeNotCompletedError) {\n                    throw new CardingProtectionChallengeNotCompletedError();\n                }\n\n                if (error || !token) {\n                    throw new CardingProtectionFailedError();\n                }\n\n                return {\n                    type: 'recaptcha_v2_verification',\n                    data: {\n                        human_verification_token: token,\n                    },\n                };\n            })).toPromise();\n    }\n\n    private _initialize(recaptchaSitekey: string): Promise<void> {\n        const cardingProtectionElementId = 'cardingProtectionContainer';\n\n        let cardingProtectionElement = document.getElementById(cardingProtectionElementId);\n        if (cardingProtectionElement && cardingProtectionElement.parentNode) {\n            cardingProtectionElement.parentNode.removeChild(cardingProtectionElement);\n        }\n\n        cardingProtectionElement = document.createElement('div');\n        cardingProtectionElement.setAttribute('id', cardingProtectionElementId);\n        document.body.appendChild(cardingProtectionElement);\n\n        return this._googleRecaptcha.load(cardingProtectionElementId, recaptchaSitekey);\n    }\n\n    private _isPaymentHumanVerificationRequest(error: Error): error is RequestError {\n        const { additional_action_required, status } = (error as RequestError).body || {};\n\n        return status === 'additional_action_required'\n            && additional_action_required\n            && additional_action_required.type === 'recaptcha_v2_verification';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport default class InvalidHostedFormError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to proceed due to an unknown error with the hosted payment form.');\n\n        this.name = 'InvalidHostedFormError';\n        this.type = 'invalid_hosted_form';\n    }\n}\n","import { values } from 'lodash';\nimport { fromEvent } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\n\nimport { DetachmentObserver } from '../common/dom';\nimport { mapFromPaymentErrorResponse } from '../common/error/errors';\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { parseUrl } from '../common/url';\nimport { CardInstrument } from '../payment/instrument';\n\nimport { InvalidHostedFormConfigError, InvalidHostedFormError, InvalidHostedFormValueError } from './errors';\nimport { HostedFieldEvent, HostedFieldEventType } from './hosted-field-events';\nimport HostedFieldType from './hosted-field-type';\nimport { HostedFieldStylesMap } from './hosted-form-options';\nimport HostedFormOrderData from './hosted-form-order-data';\nimport { HostedInputEventMap, HostedInputEventType, HostedInputSubmitErrorEvent, HostedInputValidateEvent } from './iframe-content';\n\nexport const RETRY_INTERVAL = 60 * 1000;\nexport const LAST_RETRY_KEY = 'lastRetry';\n\nexport default class HostedField {\n    private _iframe: HTMLIFrameElement;\n\n    constructor(\n        private _type: HostedFieldType,\n        private _containerId: string,\n        private _placeholder: string,\n        private _accessibilityLabel: string,\n        private _styles: HostedFieldStylesMap,\n        private _eventPoster: IframeEventPoster<HostedFieldEvent>,\n        private _eventListener: IframeEventListener<HostedInputEventMap>,\n        private _detachmentObserver: DetachmentObserver,\n        private _cardInstrument?: CardInstrument\n    ) {\n        this._iframe = document.createElement('iframe');\n\n        this._iframe.src = `/checkout/payment/hosted-field?version=${LIBRARY_VERSION}`;\n        this._iframe.style.border = 'none';\n        this._iframe.style.height = '100%';\n        this._iframe.style.overflow = 'hidden';\n        this._iframe.style.width = '100%';\n    }\n\n    getType(): HostedFieldType {\n        return this._type;\n    }\n\n    async attach(): Promise<void> {\n        const container = document.getElementById(this._containerId);\n\n        if (!container) {\n            throw new InvalidHostedFormConfigError('Unable to proceed because the provided container ID is not valid.');\n        }\n\n        container.appendChild(this._iframe);\n        this._eventListener.listen();\n\n        const promise = fromEvent(this._iframe, 'load')\n            .pipe(\n                switchMap(async ({ target }) => {\n                    const contentWindow = target && (target as HTMLIFrameElement).contentWindow;\n\n                    if (!contentWindow) {\n                        throw new Error('The content window of the iframe cannot be accessed.');\n                    }\n\n                    this._eventPoster.setTarget(contentWindow);\n\n                    await this._eventPoster.post({\n                        type: HostedFieldEventType.AttachRequested,\n                        payload: {\n                            accessibilityLabel: this._accessibilityLabel,\n                            cardInstrument: this._cardInstrument,\n                            fontUrls: this._getFontUrls(),\n                            placeholder: this._placeholder,\n                            styles: this._styles,\n                            origin: document.location.origin,\n                            type: this._type,\n                        },\n                    }, {\n                        successType: HostedInputEventType.AttachSucceeded,\n                        errorType: HostedInputEventType.AttachFailed,\n                    });\n                }),\n                take(1)\n            ).toPromise();\n\n        await this._detachmentObserver.ensurePresence([this._iframe], promise);\n    }\n\n    detach(): void {\n        if (!this._iframe.parentElement) {\n            return;\n        }\n\n        this._iframe.parentElement.removeChild(this._iframe);\n        this._eventListener.stopListen();\n    }\n\n    async submitForm(\n        fields: HostedFieldType[],\n        data: HostedFormOrderData\n    ): Promise<void> {\n        try {\n            const promise = this._eventPoster.post({\n                type: HostedFieldEventType.SubmitRequested,\n                payload: { fields, data },\n            }, {\n                successType: HostedInputEventType.SubmitSucceeded,\n                errorType: HostedInputEventType.SubmitFailed,\n            });\n\n            await this._detachmentObserver.ensurePresence([this._iframe], promise);\n        } catch (event) {\n            if (this._isSubmitErrorEvent(event)) {\n                if (event.payload.error.code === 'hosted_form_error') {\n                    throw new InvalidHostedFormError(event.payload.error.message);\n                }\n\n                if (event.payload.response) {\n                    throw mapFromPaymentErrorResponse(event.payload.response);\n                }\n\n                throw new Error(event.payload.error.message);\n            }\n\n            throw event;\n        }\n    }\n\n    async validateForm(): Promise<void> {\n        const promise = this._eventPoster.post<HostedInputValidateEvent>({\n            type: HostedFieldEventType.ValidateRequested,\n        }, {\n            successType: HostedInputEventType.Validated,\n        });\n\n        const { payload } = await this._detachmentObserver.ensurePresence([this._iframe], promise);\n\n        if (!payload.isValid) {\n            throw new InvalidHostedFormValueError(payload.errors);\n        }\n    }\n\n    private _getFontUrls(): string[] {\n        const hostname = 'fonts.googleapis.com';\n        const links = document.querySelectorAll(`link[href*='${hostname}'][rel='stylesheet']`);\n\n        return Array.prototype.slice.call(links)\n            .filter(link => parseUrl(link.href).hostname === hostname)\n            .filter(link => values(this._styles)\n                .map(style => style && style.fontFamily)\n                .filter((family): family is string => typeof family === 'string')\n                .some(family => family.split(/,\\s/).some(name => link.href.indexOf(name.replace(' ', '+')) !== -1))\n            )\n            .map(link => link.href);\n    }\n\n    private _isSubmitErrorEvent(event: any): event is HostedInputSubmitErrorEvent {\n        return event.type === HostedInputEventType.SubmitFailed;\n    }\n}\n","import { noop, without } from 'lodash';\n\nimport { IframeEventListener } from '../common/iframe';\nimport { OrderPaymentRequestBody } from '../order';\nimport { PaymentHumanVerificationHandler } from '../spam-protection';\n\nimport { InvalidHostedFormConfigError } from './errors';\nimport HostedField from './hosted-field';\nimport HostedFormOptions from './hosted-form-options';\nimport HostedFormOrderDataTransformer from './hosted-form-order-data-transformer';\nimport { HostedInputEnterEvent, HostedInputEventMap, HostedInputEventType } from './iframe-content';\n\ntype HostedFormEventCallbacks = Pick<HostedFormOptions, 'onBlur' | 'onCardTypeChange' | 'onFocus' | 'onEnter' | 'onValidate'>;\n\nexport default class HostedForm {\n    private _bin?: string;\n    private _cardType?: string;\n\n    constructor(\n        private _fields: HostedField[],\n        private _eventListener: IframeEventListener<HostedInputEventMap>,\n        private _payloadTransformer: HostedFormOrderDataTransformer,\n        private _eventCallbacks: HostedFormEventCallbacks,\n        private _paymentHumanVerificationHandler: PaymentHumanVerificationHandler\n    ) {\n        const { onBlur = noop, onCardTypeChange = noop, onFocus = noop, onValidate = noop } = this._eventCallbacks;\n\n        this._eventListener.addListener(HostedInputEventType.Blurred, ({ payload }) => onBlur(payload));\n        this._eventListener.addListener(HostedInputEventType.CardTypeChanged, ({ payload }) => onCardTypeChange(payload));\n        this._eventListener.addListener(HostedInputEventType.Focused, ({ payload }) => onFocus(payload));\n        this._eventListener.addListener(HostedInputEventType.Validated, ({ payload }) => onValidate(payload));\n        this._eventListener.addListener(HostedInputEventType.Entered, this._handleEnter);\n\n        this._eventListener.addListener(HostedInputEventType.CardTypeChanged, ({ payload }) => this._cardType = payload.cardType);\n        this._eventListener.addListener(HostedInputEventType.BinChanged, ({ payload }) => this._bin = payload.bin);\n    }\n\n    getBin(): string | undefined {\n        return this._bin;\n    }\n\n    getCardType(): string | undefined {\n        return this._cardType;\n    }\n\n    async attach(): Promise<void> {\n        this._eventListener.listen();\n\n        const field = this._getFirstField();\n        const otherFields = without(this._fields, field);\n\n        await field.attach();\n        await Promise.all(otherFields.map(otherField => otherField.attach()));\n    }\n\n    detach(): void {\n        this._eventListener.stopListen();\n\n        this._fields.forEach(field => {\n            field.detach();\n        });\n    }\n\n    async submit(payload: OrderPaymentRequestBody): Promise<void> {\n        try {\n            return await this._getFirstField().submitForm(\n                this._fields.map(field => field.getType()),\n                this._payloadTransformer.transform(payload)\n            );\n        } catch (error) {\n            const additionalAction = await this._paymentHumanVerificationHandler.handle(error);\n\n            return await this._getFirstField().submitForm(\n                this._fields.map(field => field.getType()),\n                this._payloadTransformer.transform(payload, additionalAction)\n            );\n        }\n    }\n\n    async validate(): Promise<void> {\n        return await this._getFirstField().validateForm();\n    }\n\n    private _getFirstField(): HostedField {\n        const field = this._fields[0];\n\n        if (!field) {\n            throw new InvalidHostedFormConfigError('Unable to proceed because the payment form has no field defined.');\n        }\n\n        return field;\n    }\n\n    private _handleEnter: (event: HostedInputEnterEvent) => Promise<void> = async ({ payload }) => {\n        try {\n            await this.validate();\n        } catch (error) {\n            // Catch form validation error because we want to trigger `onEnter`\n            // irrespective of the validation result.\n            if (error.name !== 'InvalidHostedFormValueError') {\n                throw error;\n            }\n        }\n\n        const { onEnter = noop } = this._eventCallbacks;\n\n        onEnter(payload);\n    };\n}\n","import { omit } from 'lodash';\n\nimport { ReadableCheckoutStore } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { OrderPaymentRequestBody } from '../order';\nimport { isVaultedInstrument, HostedCreditCardInstrument, PaymentAdditionalAction } from '../payment';\n\nimport HostedFormOrderData from './hosted-form-order-data';\n\nexport default class HostedFormOrderDataTransformer {\n    constructor(\n        private _store: ReadableCheckoutStore\n    ) {}\n\n    transform(payload: OrderPaymentRequestBody, additionalAction?: PaymentAdditionalAction): HostedFormOrderData {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const config = state.config.getConfig();\n        const instrumentMeta = state.instruments.getInstrumentsMeta();\n        const order = state.order.getOrder();\n        const orderMeta = state.order.getOrderMeta();\n        const payment = omit(payload.paymentData, 'ccExpiry', 'ccName', 'ccNumber', 'ccCvv') as HostedCreditCardInstrument;\n        const paymentMethod = state.paymentMethods.getPaymentMethod(payload.methodId, payload.gatewayId);\n        const paymentMethodMeta = state.paymentMethods.getPaymentMethodsMeta();\n        const authToken = instrumentMeta && payment && isVaultedInstrument(payment) ?\n            `${state.payment.getPaymentToken()}, ${instrumentMeta.vaultAccessToken}` :\n            state.payment.getPaymentToken();\n\n        if (!authToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentToken);\n        }\n\n        return {\n            additionalAction,\n            authToken,\n            checkout,\n            config,\n            order,\n            orderMeta,\n            payment,\n            paymentMethod,\n            paymentMethodMeta,\n        };\n    }\n}\n","import { createScriptLoader } from '@bigcommerce/script-loader';\nimport { pick } from 'lodash';\n\nimport { ReadableCheckoutStore } from '../checkout';\nimport { DetachmentObserver, MutationObserverFactory } from '../common/dom';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { IframeEventListener, IframeEventPoster } from '../common/iframe';\nimport { CardInstrument } from '../payment/instrument';\nimport { createSpamProtection, PaymentHumanVerificationHandler } from '../spam-protection';\n\nimport HostedField from './hosted-field';\nimport HostedFieldType from './hosted-field-type';\nimport HostedForm from './hosted-form';\nimport HostedFormOptions, { HostedCardFieldOptionsMap, HostedStoredCardFieldOptionsMap } from './hosted-form-options';\nimport HostedFormOrderDataTransformer from './hosted-form-order-data-transformer';\n\nexport default class HostedFormFactory {\n    constructor(\n        private _store: ReadableCheckoutStore\n    ) {}\n\n    create(host: string, options: HostedFormOptions): HostedForm {\n        const fieldTypes = Object.keys(options.fields) as HostedFieldType[];\n        const fields = fieldTypes.reduce<HostedField[]>((result, type) => {\n            const fields = options.fields as HostedStoredCardFieldOptionsMap & HostedCardFieldOptionsMap;\n            const fieldOptions = fields[type];\n\n            if (!fieldOptions) {\n                return result;\n            }\n\n            return [\n                ...result,\n                new HostedField(\n                    type,\n                    fieldOptions.containerId,\n                    fieldOptions.placeholder || '',\n                    fieldOptions.accessibilityLabel || '',\n                    options.styles || {},\n                    new IframeEventPoster(host),\n                    new IframeEventListener(host),\n                    new DetachmentObserver(new MutationObserverFactory()),\n                    'instrumentId' in fieldOptions ?\n                        this._getCardInstrument(fieldOptions.instrumentId) :\n                        undefined\n                ),\n            ];\n        }, []);\n\n        return new HostedForm(\n            fields,\n            new IframeEventListener(host),\n            new HostedFormOrderDataTransformer(this._store),\n            pick(options, 'onBlur', 'onEnter', 'onFocus', 'onCardTypeChange', 'onValidate'),\n            new PaymentHumanVerificationHandler(createSpamProtection(createScriptLoader()))\n        );\n    }\n\n    private _getCardInstrument(instrumentId: string): CardInstrument {\n        const { instruments: { getCardInstrument } } = this._store.getState();\n        const instrument = getCardInstrument(instrumentId);\n\n        if (!instrument) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentInstrument);\n        }\n\n        return instrument;\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, of } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\n\nimport { StoreCreditAction, StoreCreditActionType } from './store-credit-actions';\nimport StoreCreditRequestSender from './store-credit-request-sender';\n\nexport default class StoreCreditActionCreator {\n    constructor(\n        private _storeCreditRequestSender: StoreCreditRequestSender\n    ) {}\n\n    applyStoreCredit(useStoreCredit: boolean, options?: RequestOptions): ThunkAction<StoreCreditAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(StoreCreditActionType.ApplyStoreCreditRequested)),\n            defer(async () => {\n                const state = store.getState();\n                const checkout = state.checkout.getCheckout();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                const { body } = await (useStoreCredit ?\n                    this._storeCreditRequestSender.applyStoreCredit(checkout.id, options) :\n                    this._storeCreditRequestSender.removeStoreCredit(checkout.id, options));\n\n                return createAction(StoreCreditActionType.ApplyStoreCreditSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(StoreCreditActionType.ApplyStoreCreditFailed, error))\n        );\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { Checkout, CHECKOUT_DEFAULT_INCLUDES } from '../checkout';\nimport { joinIncludes, ContentType, RequestOptions } from '../common/http-request';\n\nexport default class StoreCreditRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    applyStoreCredit(checkoutId: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/store-credit`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n\n    removeStoreCredit(checkoutId: string, { timeout }: RequestOptions = {}): Promise<Response<Checkout>> {\n        const url = `/api/storefront/checkouts/${checkoutId}/store-credit`;\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.delete(url, {\n            headers,\n            timeout,\n            params: {\n                include: joinIncludes(CHECKOUT_DEFAULT_INCLUDES),\n            },\n        });\n    }\n}\n","import { createAction, ThunkAction } from '@bigcommerce/data-store';\nimport { concat, defer, of } from 'rxjs';\nimport { catchError, switchMap } from 'rxjs/operators';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { OrderActionCreator } from '../order';\nimport { PaymentHumanVerificationHandler } from '../spam-protection';\n\nimport Payment, { FormattedHostedInstrument, FormattedPayload, FormattedVaultedInstrument } from './payment';\nimport { InitializeOffsitePaymentAction, PaymentActionType, SubmitPaymentAction } from './payment-actions';\nimport PaymentRequestSender from './payment-request-sender';\nimport PaymentRequestTransformer from './payment-request-transformer';\n\ninterface InitializeOffsitePaymentSettings {\n    methodId: string;\n    gatewayId?: string;\n    instrumentId?: string;\n    target?: string;\n    promise?: Promise<undefined>;\n    shouldSaveInstrument?: boolean;\n    shouldSetAsDefaultInstrument?: boolean;\n}\n\ntype InitializeOffsitePayment = (settings: InitializeOffsitePaymentSettings)\n    => ThunkAction<InitializeOffsitePaymentAction, InternalCheckoutSelectors>;\n\nexport default class PaymentActionCreator {\n    constructor(\n        private _paymentRequestSender: PaymentRequestSender,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentRequestTransformer: PaymentRequestTransformer,\n        private _paymentHumanVerificationHandler: PaymentHumanVerificationHandler\n    ) {}\n\n    submitPayment(payment: Payment): ThunkAction<SubmitPaymentAction, InternalCheckoutSelectors> {\n        return store => concat(\n            of(createAction(PaymentActionType.SubmitPaymentRequested)),\n            defer(async () => {\n                try {\n                    return await this._paymentRequestSender.submitPayment(\n                        this._paymentRequestTransformer.transform(payment, store.getState())\n                    );\n                } catch (error) {\n                    const additionalAction = await this._paymentHumanVerificationHandler.handle(error);\n\n                    return await this._paymentRequestSender.submitPayment(\n                        this._paymentRequestTransformer.transform({ ...payment, additionalAction }, store.getState())\n                    );\n                }\n            })\n                .pipe(\n                    switchMap(({ body }) => concat(\n                        this._orderActionCreator.loadCurrentOrder()(store),\n                        of(createAction(PaymentActionType.SubmitPaymentSucceeded, body))\n                    ))\n                )\n        ).pipe(\n            catchError(error => throwErrorAction(PaymentActionType.SubmitPaymentFailed, error))\n        );\n    }\n\n    initializeOffsitePayment: InitializeOffsitePayment = ({\n        methodId,\n        gatewayId,\n        instrumentId,\n        target,\n        promise,\n        shouldSaveInstrument,\n        shouldSetAsDefaultInstrument,\n    }) => {\n        return store => {\n            let paymentData: FormattedPayload<FormattedHostedInstrument | FormattedVaultedInstrument> | undefined;\n\n            if (instrumentId) {\n                paymentData = { formattedPayload: { bigpay_token: instrumentId } };\n            } else if (shouldSaveInstrument) {\n                paymentData = {\n                    formattedPayload: {\n                        vault_payment_instrument: shouldSaveInstrument,\n                        set_as_default_stored_instrument: shouldSetAsDefaultInstrument || null,\n                    },\n                };\n            }\n\n            const payload = this._paymentRequestTransformer.transform({ gatewayId, methodId, paymentData }, store.getState());\n\n            return concat(\n                of(createAction(PaymentActionType.InitializeOffsitePaymentRequested)),\n                Promise.race([this._paymentRequestSender.initializeOffsitePayment(payload, target), promise].filter(Boolean))\n                    .then(() => createAction(PaymentActionType.InitializeOffsitePaymentSucceeded))\n            ).pipe(\n                catchError(error => throwErrorAction(PaymentActionType.InitializeOffsitePaymentFailed, error))\n            );\n        };\n    };\n}\n","import { ReadableDataStore } from '@bigcommerce/data-store';\nimport { some } from 'lodash';\n\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { Registry, RegistryOptions } from '../common/registry';\n\nimport PaymentMethod from './payment-method';\nimport * as paymentMethodTypes from './payment-method-types';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { PaymentStrategy } from './strategies';\n\nconst checkoutcomStrategies: {\n    [key: string]: PaymentStrategyType;\n} = {\n    credit_card: PaymentStrategyType.CHECKOUTCOM,\n    sepa: PaymentStrategyType.CHECKOUTCOM_SEPA,\n    ideal: PaymentStrategyType.CHECKOUTCOM_IDEAL,\n    fawry: PaymentStrategyType.CHECKOUTCOM_FAWRY,\n};\nexport default class PaymentStrategyRegistry extends Registry<PaymentStrategy, PaymentStrategyType> {\n    constructor(\n        private _store: ReadableDataStore<InternalCheckoutSelectors>,\n        options?: PaymentStrategyRegistryOptions\n    ) {\n        super(options);\n    }\n\n    getByMethod(paymentMethod?: PaymentMethod): PaymentStrategy {\n        if (!paymentMethod) {\n            return this.get();\n        }\n\n        const token = this._getToken(paymentMethod);\n\n        const cacheToken = [paymentMethod.gateway, paymentMethod.id]\n            .filter(value => value !== undefined && value !== null)\n            .join('-');\n\n        return this.get(token, cacheToken);\n    }\n\n    private _getToken(paymentMethod: PaymentMethod): PaymentStrategyType {\n        const ppsdkFeatureOn =\n            this._store.getState()\n                .config.getStoreConfig()\n                ?.checkoutSettings.features['PAYMENTS-6806.enable_ppsdk_strategy'];\n\n        if (ppsdkFeatureOn && paymentMethod.type === PaymentStrategyType.PPSDK) {\n            return PaymentStrategyType.PPSDK;\n        }\n\n        if (paymentMethod.gateway === 'klarna') {\n            return PaymentStrategyType.KLARNAV2;\n        }\n\n        if (paymentMethod.id === PaymentStrategyType.PAYPAL_COMMERCE_CREDIT) {\n            return PaymentStrategyType.PAYPAL_COMMERCE;\n        }\n\n        if ( paymentMethod.gateway === PaymentStrategyType.PAYPAL_COMMERCE_ALTERNATIVE_METHODS) {\n            return PaymentStrategyType.PAYPAL_COMMERCE_ALTERNATIVE_METHODS;\n        }\n\n        if (paymentMethod.gateway === PaymentStrategyType.CHECKOUTCOM) {\n            return paymentMethod.id in checkoutcomStrategies\n                ? checkoutcomStrategies[paymentMethod.id]\n                : PaymentStrategyType.CHECKOUTCOM_APM;\n        }\n\n        const methodId = paymentMethod.gateway || paymentMethod.id;\n\n        if (this._hasFactoryForMethod(methodId)) {\n            return methodId;\n        }\n\n        if (paymentMethod.type === paymentMethodTypes.OFFLINE) {\n            return PaymentStrategyType.OFFLINE;\n        }\n\n        if (this._isLegacyMethod(paymentMethod)) {\n            return PaymentStrategyType.LEGACY;\n        }\n\n        if (paymentMethod.type === paymentMethodTypes.HOSTED) {\n            return PaymentStrategyType.OFFSITE;\n        }\n\n        return PaymentStrategyType.CREDIT_CARD;\n    }\n\n    private _hasFactoryForMethod(\n        methodId: string\n    ): methodId is PaymentStrategyType {\n        return this._hasFactory(methodId);\n    }\n\n    private _isLegacyMethod(paymentMethod: PaymentMethod): boolean {\n        const config = this._store.getState().config.getStoreConfig();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const { clientSidePaymentProviders } = config.paymentSettings;\n\n        if (!clientSidePaymentProviders || paymentMethod.gateway === 'adyen' || paymentMethod.gateway === 'barclaycard') {\n            return false;\n        }\n\n        return !some(clientSidePaymentProviders, id =>\n            paymentMethod.id === id || paymentMethod.gateway === id\n        );\n    }\n}\n\nexport interface PaymentStrategyRegistryOptions extends RegistryOptions {\n    clientSidePaymentProviders?: string[];\n}\n","import BrowserInfo from './browser-info';\n\nexport default function getBrowserInfo(): BrowserInfo {\n    return {\n        color_depth: screen.colorDepth || 24,\n        java_enabled: typeof navigator.javaEnabled === 'function' ? navigator.javaEnabled() : false,\n        language: navigator.language || (navigator as any).userLanguage,\n        screen_height: screen.height,\n        screen_width: screen.width,\n        time_zone_offset: new Date().getTimezoneOffset().toString(),\n    };\n}\n","export enum AdyenActionType {\n    /*\n    * The payment qualifies for 3D Secure 2, and will go through either the frictionless\n    * or the challenge flow.\n    * */\n    ThreeDS2Fingerprint = 'threeDS2Fingerprint',\n\n    /*\n    * The payment qualifies for 3D Secure 2, and the issuer is initiating a challenge flow.\n    * */\n    ThreeDS2Challenge = 'threeDS2Challenge',\n\n    /*\n    * We will initiate a 3D Secure 1 fallback, because the issuer does not support 3D Secure 2.\n    * */\n    Redirect = 'redirect',\n\n    /*\n    * The Component presents the QR code and calls the onAdditionalDetails event.\n    * */\n    QRCode = 'qrCode',\n\n    /*\n    * The Component displays the voucher which the shopper uses to complete the payment.\n    * */\n    Voucher = 'voucher',\n}\n\nexport enum AdyenComponentType {\n    SecuredFields = 'securedfields',\n}\n\nexport enum AdyenPaymentMethodType {\n    ACH = 'ach',\n    AliPay = 'alipay',\n    Bancontact = 'bcmc',\n    CreditCard = 'scheme',\n    Klarna = 'klarna',\n    KlarnaPayNow = 'klarna_paynow',\n    KlarnaAccount = 'klarna_account',\n    iDEAL = 'ideal',\n    GiroPay = 'giropay',\n    GooglePay = 'paywithgoogle',\n    SEPA = 'sepadirectdebit',\n    Sofort = 'directEbanking',\n    Vipps = 'vipps',\n    WeChatPayQR = 'wechatpayQR',\n}\n\nexport enum HTTPMethod {\n    POST = 'POST',\n}\n\nexport enum ResultCode {\n    ChallengeShopper = 'ChallengeShopper',\n    Error = 'Error',\n    IdentifyShopper = 'IdentifyShopper',\n}\n\ninterface AdyenPaymentMethodState {\n    type: string;\n}\n\ninterface CardDataPaymentMethodState {\n    paymentMethod: CardPaymentMethodState;\n}\n\ninterface WechatDataPaymentMethodState {\n    paymentMethod: AdyenPaymentMethodState;\n}\n\ninterface CardPaymentMethodState extends AdyenPaymentMethodState {\n    encryptedCardNumber: string;\n    encryptedExpiryMonth: string;\n    encryptedExpiryYear: string;\n    encryptedSecurityCode: string;\n    holderName?: string;\n}\n\nexport interface AdyenAction {\n    method: HTTPMethod;\n\n    /**\n     * Value that you need to submit in your /payments/details request when handling\n     * the redirect.\n     */\n    paymentData: string;\n\n    paymentMethodType: AdyenPaymentMethodType;\n\n    /*\n     * The Component performs additional front-end actions depending on the action.type.\n     * Your next steps depend on the type of action that the Component performs.\n     */\n    type: AdyenActionType;\n\n    /**\n     * The HTTP request method that you should use. After the shopper completes the payment,\n     * they will be redirected back to your returnURL using the same method.\n     */\n    url: string;\n}\n\nexport interface AdyenAdditionalAction {\n    resultCode: ResultCode;\n    action: string;\n}\n\nexport interface AdyenAdditionalActionCallbacks {\n    /**\n     * A callback that gets called before adyen component is loaded\n     */\n    onBeforeLoad?(shopperInteraction?: boolean): void;\n\n    /**\n     * A callback that gets called when adyen component is loaded\n     */\n    onLoad?(cancel?: () => void): void;\n\n    /**\n     * A callback that gets called when adyen component verification\n     * is completed\n     */\n    onComplete?(): void;\n}\n\nexport interface AdyenAdditionalActionErrorResponse {\n    provider_data: AdyenAdditionalAction;\n    errors: [\n        {\n            code: string;\n        }\n    ];\n}\n\nexport interface AdyenAdditionalActionOptions extends AdyenAdditionalActionCallbacks {\n    /**\n     * The location to insert the additional action component.\n     */\n    containerId: string;\n}\n\nexport interface AdyenAdditionalActionState {\n    data: AdyenAdditionalAction;\n    isValid?: boolean;\n}\n\nexport interface AdyenBaseCardComponentOptions {\n    /**\n     * Array of card brands that will be recognized by the component.\n     *\n     */\n    brands?: string[];\n\n    /**\n     * Set a style object to customize the input fields. See Styling Secured Fields\n     * for a list of supported properties.\n     */\n    styles?: StyleOptions;\n}\n\nexport interface AdyenComponentEvents {\n    /**\n     * Called when the shopper enters data in the card input fields.\n     * Here you have the option to override your main Adyen Checkout configuration.\n     */\n    onChange?(state: AdyenComponentState, component: AdyenComponent): void;\n\n    /**\n     * Called in case of an invalid card number, invalid expiry date, or\n     *  incomplete field. Called again when errors are cleared.\n     */\n    onError?(state: AdyenComponentState, component: AdyenComponent): void;\n}\n\nexport interface AdyenClient {\n    create(type: string, componentOptions?: AdyenComponentOptions): AdyenComponent;\n\n    createFromAction(action: AdyenAction, componentOptions?: ThreeDS2DeviceFingerprintComponentOptions | ThreeDS2ChallengeComponentOptions ): AdyenComponent;\n}\n\nexport interface AdyenComponent {\n    mount(containerId: string): HTMLElement;\n    unmount(): void;\n}\n\nexport interface AdyenConfiguration {\n    /*\n     * Use test, and then change this to live when you're ready to accept live payments.\n     */\n    environment?: string;\n\n    /*\n     * The shopper's locale. This is used to set the language rendered in the Components.\n     */\n    locale?: string;\n\n    /*\n     * The Origin Key of your website.\n     */\n    originKey?: string;\n\n    /*\n     * The Client Key of your Adyen account.\n     */\n    clientKey?: string;\n\n    /*\n     * Supported from Components version 3.0.0 and later. The full paymentMethods response,\n     * returned in step 1. We recommend that you pass this on the AdyenCheckout instance.\n     * Otherwise, you need to pass the specific payment method details separately for each\n     * Component.\n     */\n    paymentMethodsResponse?: PaymentMethodsResponse;\n\n    /*\n     * Specify the function that you created, for example, handleOnChange. If you wish\n     * to override this function, you can also define an onChange event on the Component\n     * level.\n     */\n    onChange?(state: CardState, component?: AdyenComponent): void;\n\n    onAdditionalDetails?(state: CardState, component?: AdyenComponent): void;\n}\n\nexport interface AdyenPlaceholderData {\n    holderName?: string;\n    billingAddress?: {\n        street: string;\n        houseNumberOrName: string;\n        postalCode: string;\n        city: string;\n        stateOrProvince: string;\n        country: string;\n    };\n}\n\nexport interface AdyenCreditCardComponentOptions extends AdyenBaseCardComponentOptions, AdyenComponentEvents {\n    /**\n     * Set an object containing the details array for type: scheme from\n     * the /paymentMethods response.\n     */\n    details?: InputDetail[];\n\n    /**\n     * Set to true to show the checkbox to save card details for the next payment.\n     */\n    enableStoreDetails?: boolean;\n\n    /**\n     * Set to true to request the name of the card holder.\n     */\n    hasHolderName?: boolean;\n\n    /**\n     * Set to true to require the card holder name.\n     */\n    holderNameRequired?: boolean;\n\n    /**\n     * Information to prefill fields.\n     */\n    data?: AdyenPlaceholderData;\n\n    /**\n     * Defaults to ['mc','visa','amex']. Configure supported card types to\n     * facilitate brand recognition used in the Secured Fields onBrand callback.\n     * See list of available card types. If a shopper enters a card type not\n     * specified in the GroupTypes configuration, the onBrand callback will not be invoked.\n     */\n    groupTypes?: string[];\n\n    /**\n     * Specify the sample values you want to appear for card detail input fields.\n     */\n    placeholders?: CreditCardPlaceHolder | SepaPlaceHolder;\n}\n\nexport interface AdyenCustomCardComponentOptions extends AdyenBaseCardComponentOptions, AdyenComponentEvents {\n    /**\n     * Specify aria attributes for the input fields for web accessibility.\n     */\n    ariaLabels?: CustomCardAriaLabels;\n\n    /**\n     * Automatically shift the focus from date field to the CVC field.\n     */\n    autofocus?: boolean;\n}\n\nexport interface AdyenError {\n    errorCode: string;\n    message: string;\n}\n\nexport interface AdyenHostWindow extends Window {\n    AdyenCheckout?: new(configuration: AdyenConfiguration) => AdyenClient;\n}\n\nexport interface AdyenIdealComponentOptions {\n    /**\n     * Optional. Set to **false** to remove the bank logos from the iDEAL form.\n     */\n    showImage?: boolean;\n}\n\nexport interface AdyenStoredPaymentMethod {\n    /**\n     * The brand of the card.\n     */\n    brand?: string;\n\n    /**\n     * The month the card expires.\n     */\n    expiryMonth?: string;\n\n    /**\n     * The year the card expires.\n     */\n    expiryYear?: string;\n\n    /**\n     * The unique payment method code.\n     */\n    holderName?: string;\n\n    /**\n     * A unique identifier of this stored payment method.\n     */\n    id?: string;\n\n    /**\n     * The last four digits of the PAN.\n     */\n    lastFour?: string;\n\n    /**\n     * The display name of the stored payment method.\n     */\n    name: string;\n\n    /**\n     * The shopper’s email address.\n     */\n    shopperEmail?: string;\n\n    /**\n     * The supported shopper interactions for this stored payment method.\n     */\n    supportedShopperInteractions?: string[];\n\n    /**\n     * The type of payment method.\n     */\n    type?: string;\n}\n\nexport interface AdyenThreeDS2Options extends AdyenAdditionalActionCallbacks {\n    /**\n     * Specify Three3DS2Challenge Widget Size\n     *\n     * Values\n     * '01' = 250px x 400px\n     * '02' = 390px x 400px\n     * '03' = 500px x 600px\n     * '04' = 600px x 400px\n     * '05' = 100% x 100%\n     */\n    widgetSize?: string;\n}\n\nexport interface Bank {\n    /**\n     * The bank account number (without separators).\n     */\n    bankAccountNumber?: string;\n\n    /**\n     * The bank city.\n     */\n    bankCity?: string;\n\n    /**\n     * The location id of the bank. The field value is nil in most cases.\n     */\n    bankLocationId?: string;\n\n    /**\n     * The name of the bank.\n     */\n    bankName?: string;\n\n    /**\n     * The Business Identifier Code (BIC) is the SWIFT address assigned to\n     * a bank. The field value is nil in most cases.\n     */\n    bic?: string;\n\n    /**\n     * Country code where the bank is located.\n     * A valid value is an ISO two-character country code (e.g. 'NL').\n     */\n    countryCode?: string;\n\n    /**\n     * The International Bank Account Number (IBAN).\n     */\n    iban?: string;\n\n    /**\n     * The name of the bank account holder. If you submit a name with non-Latin\n     * characters, we automatically replace some of them with corresponding Latin\n     * characters to meet the FATF recommendations. For example:\n     * χ12 is converted to ch12.\n     * üA is converted to euA.\n     * Peter Møller is converted to Peter Mller, because banks don't accept 'ø'.\n     * After replacement, the ownerName must have at least three alphanumeric characters\n     * (A-Z, a-z, 0-9), and at least one of them must be a valid Latin character\n     * (A-Z, a-z). For example:\n     * John17 - allowed.\n     * J17 - allowed.\n     * 171 - not allowed.\n     * John-7 - allowed.\n     */\n    ownerName?: string;\n\n    /**\n     * The bank account holder's tax ID.\n     */\n    taxId?: string;\n}\n\nexport interface Card {\n    /**\n     * The card verification code (1-20 characters). Depending on the card brand, it\n     * is known also as:\n     * CVV2/CVC2 – length: 3 digits\n     * CID – length: 4 digits\n     */\n    cvc?: string;\n\n    /**\n     * The card expiry month. Format: 2 digits, zero-padded for single digits. For example:\n     * 03 = March\n     * 11 = November\n     * Required\n     */\n    expiryMonth: string;\n\n    /**\n     * The card expiry year. Format: 4 digits. For example: 2020\n     * Required\n     */\n    expiryYear: string;\n\n    /**\n     * The name of the cardholder, as printed on the card.\n     * Required\n     */\n    holderName: string;\n\n    /**\n     * The issue number of the card (for some UK debit cards only).\n     */\n    issueNumber?: string;\n\n    /**\n     * The card number (4-19 characters). Do not use any separators. When this value is\n     * returned in a response, only the last 4 digits of the card number are returned.\n     * Required\n     */\n    number: string;\n\n    /**\n     * The month component of the start date (for some UK debit cards only).\n     */\n    startNumber?: string;\n\n    /**\n     * The year component of the start date (for some UK debit cards only).\n     */\n    startYear?: string;\n}\n\nexport interface CardState {\n    data: CardDataPaymentMethodState;\n    isValid?: boolean;\n}\n\nexport interface WechatState {\n    data: WechatDataPaymentMethodState;\n}\n\nexport interface CreditCardPlaceHolder {\n    encryptedCardNumber?: string;\n    encryptedExpiryDate?: string;\n    encryptedSecurityCode: string;\n}\n\ninterface AccountDataPaymentMethodState {\n    paymentMethod: AdyenPaymentMethodState;\n}\n\nexport interface AccountState {\n    data: AccountDataPaymentMethodState;\n}\n\nexport interface CssProperties {\n    background?: string;\n    color?: string;\n    display?: string;\n    font?: string;\n    fontFamily?: string;\n    fontSize?: string;\n    fontSizeAdjust?: string;\n    fontSmoothing?: string;\n    fontStretch?: string;\n    fontStyle?: string;\n    fontVariant?: string;\n    fontVariantAlternates?: string;\n    fontVariantCaps?: string;\n    fontVariantEastAsian?: string;\n    fontVariantLigatures?: string;\n    fontVariantNumeric?: string;\n    fontWeight?: string;\n    letterSpacing?: string;\n    lineHeight?: string;\n    mozOsxFontSmoothing?: string;\n    mozTransition?: string;\n    outline?: string;\n    opacity?: string | number;\n    padding?: string;\n    textAlign?: string;\n    textShadow?: string;\n    transition?: string;\n    webkitFontSmoothing?: string;\n    webkitTransition?: string;\n}\n\nexport interface CustomCardAriaLabel {\n    label?: string;\n    iframeTitle?: string;\n}\n\nexport interface CustomCardAriaLabels {\n    lang?: string;\n    encryptedCardNumber?: CustomCardAriaLabel;\n    encryptedExpiryDate?: CustomCardAriaLabel;\n    encryptedSecurityCode?: CustomCardAriaLabel;\n}\n\nexport interface Group {\n    /**\n     * The name of the group.\n     */\n    name?: string;\n\n    /**\n     * Echo data to be used if the payment method is displayed as part of this group.\n     */\n    paymentMethodData?: string;\n\n    /**\n     * The unique code of the group.\n     */\n    type?: string;\n}\n\nexport interface InputDetail {\n    /**\n     * Configuration parameters for the required input.\n     */\n    configuration?: object;\n\n    /**\n     * Input details can also be provided recursively.\n     */\n    details?: SubInputDetail[];\n\n    /**\n     * In case of a select, the URL from which to query the items.\n     */\n    itemSearchUrl?: string;\n\n    /**\n     * In case of a select, the items to choose from.\n     */\n    items?: Item[];\n\n    /**\n     * The value to provide in the result.\n     */\n    key?: string;\n\n    /**\n     * True if this input value is optional.\n     */\n    optional?: boolean;\n\n    /**\n     * The type of the required input.\n     */\n    type?: string;\n\n    /**\n     * The value can be pre-filled, if available.\n     */\n    value?: string;\n}\n\nexport interface Item {\n    /**\n     * The value to provide in the result.\n     */\n    id?: string;\n\n    /**\n     * The display name.\n     */\n    name?: string;\n}\n\nexport interface PaymentMethod {\n    /**\n     * List of possible brands. For example: visa, mc.\n     */\n    brands?: string[];\n\n    /**\n     * The configuration of the payment method.\n     */\n    configuration?: object;\n\n    /**\n     * All input details to be provided to complete the payment with this payment\n     * method.\n     */\n    details?: InputDetail[];\n\n    /**\n     * The group where this payment method belongs to.\n     */\n    group?: Group;\n\n    /**\n     * The displayable name of this payment method.\n     */\n    name?: string;\n\n    /**\n     * Echo data required to send in next calls.\n     */\n    paymentMethodData?: string;\n\n    /**\n     * Indicates whether this payment method supports tokenization or not.\n     */\n    supportsRecurring?: boolean;\n\n    /**\n     * The unique payment method code.\n     */\n    type?: string;\n}\n\nexport interface PaymentMethodGroup {\n    /**\n     * The type to submit for any payment method in this group.\n     */\n    groupType?: string;\n\n    /**\n     * The human-readable name of this group.\n     */\n    name?: string;\n\n    /**\n     * The types of payment methods that belong in this group.\n     */\n    types?: string[];\n}\n\nexport interface PaymentMethodsResponse {\n    /**\n     * Groups of payment methods.\n     */\n    groups?: PaymentMethodGroup[];\n\n    /**\n     * Detailed list of one-click payment methods.\n     */\n    oneClickPaymentMethods?: RecurringDetail;\n\n    /**\n     * Detailed list of payment methods required to generate payment forms.\n     */\n    paymentMethods?: PaymentMethod[];\n\n    /**\n     * List of all stored payment methods.\n     */\n    storedPaymentMethods?: AdyenStoredPaymentMethod[];\n}\n\nexport interface RecurringDetail extends PaymentMethod {\n    /**\n     * The reference that uniquely identifies the recurring detail.\n     */\n    recurringDetailReference?: string;\n\n    /**\n     * Contains information on previously stored payment details.\n     */\n    storedDetails?: StoredDetails;\n}\n\nexport interface SepaPlaceHolder {\n    ownerName?: string;\n    ibanNumber?: string;\n}\n\nexport interface StoredDetails {\n    /**\n     * The stored bank account.\n     */\n    bank?: Bank;\n\n    /**\n     * The stored card information.\n     */\n    card?: Card;\n\n    /**\n     * The email associated with stored payment details.\n     */\n    emailAddress?: string;\n}\n\nexport interface StyleOptions {\n    /**\n     * Base styling applied to the iframe. All styling extends from this style.\n     */\n    base?: CssProperties;\n\n    /**\n     * Styling applied when a field fails validation.\n     */\n    error?: CssProperties;\n\n    /**\n     * Styling applied to the field's placeholder values.\n     */\n    placeholder?: CssProperties;\n\n    /**\n     * Styling applied once a field passes validation.\n     */\n    validated?: CssProperties;\n}\n\nexport interface SubInputDetail {\n    /**\n     * Configuration parameters for the required input.\n     */\n    configuration?: object;\n\n    /**\n     * In case of a select, the items to choose from.\n     */\n    items?: Item[];\n\n    /**\n     * The value to provide in the result.\n     */\n    key?: string;\n\n    /**\n     * True if this input is optional to provide.\n     */\n    optional?: boolean;\n\n    /**\n     * The type of the required input.\n     */\n    type?: string;\n\n    /**\n     * The value can be pre-filled, if available.\n     */\n    value?: string;\n}\n\nexport interface ThreeDS2ChallengeComponentOptions {\n    size?: string;\n    onAdditionalDetails?(state: AdyenAdditionalActionState, component?: AdyenComponent): void;\n    onError(error: AdyenError): void;\n}\n\nexport interface ThreeDS2DeviceFingerprintComponentOptions {\n    onAdditionalDetails?(state: AdyenAdditionalActionState, component?: AdyenComponent): void;\n    onError(error: AdyenError): void;\n}\n\nexport type AdyenComponentState = (\n    CardState | WechatState\n);\n\nexport type AdyenComponentOptions = (\n    AdyenCreditCardComponentOptions | AdyenIdealComponentOptions | AdyenCustomCardComponentOptions\n);\n\nexport function isCardState(param: any): param is CardState {\n    return param && typeof param.data.paymentMethod.encryptedSecurityCode === 'string' ||\n        typeof param.data.paymentMethod.encryptedExpiryMonth === 'string';\n}\n\nexport function isAccountState(param: any): param is AccountState {\n    const bankSupported = ['ideal', 'sepadirectdebit', 'directEbanking', 'giropay'];\n\n    return bankSupported.indexOf(param.data.paymentMethod.type) !== -1;\n}\n","import { InvalidArgumentError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when we are unable to submit a payment because\n * the caller has not provided all the required fields, i.e.: if an argument is\n * missing or it is not the expected data type.\n */\nexport default class PaymentArgumentInvalidError extends InvalidArgumentError {\n    constructor(invalidFields?: string[]) {\n        let message = 'Unable to submit payment for the order because the payload is invalid.';\n\n        if (invalidFields) {\n            message = `${message} Make sure the following fields are provided correctly: ${invalidFields.join(', ')}.`;\n        }\n\n        super(message);\n\n        this.name = 'PaymentArgumentInvalidError';\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the payment flow is cancelled. It could be\n * due to a deliberate user interaction, i.e.: the user clicks on a cancel\n * button which dismisses the payment modal.\n */\nexport default class PaymentMethodCancelledError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Payment process was cancelled.');\n\n        this.name = 'PaymentMethodCancelledError';\n        this.type = 'payment_cancelled';\n    }\n}\n","import { some } from 'lodash';\n\nimport { BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { getBrowserInfo } from '../../../common/browser-info';\nimport { InvalidArgumentError, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport Payment, { HostedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { isAccountState, isCardState, AdyenAction, AdyenActionType, AdyenAdditionalAction, AdyenAdditionalActionState, AdyenClient, AdyenComponent, AdyenComponentState, AdyenComponentType, AdyenError, AdyenPaymentMethodType, AdyenPlaceholderData } from './adyenv2';\nimport AdyenV2PaymentInitializeOptions from './adyenv2-initialize-options';\nimport AdyenV2ScriptLoader from './adyenv2-script-loader';\n\nexport default class AdyenV2PaymentStrategy implements PaymentStrategy {\n    private _adyenClient?: AdyenClient;\n    private _cardVerificationComponent?: AdyenComponent;\n    private _componentState?: AdyenComponentState;\n    private _paymentComponent?: AdyenComponent;\n    private _paymentInitializeOptions?: AdyenV2PaymentInitializeOptions;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _scriptLoader: AdyenV2ScriptLoader\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { adyenv2 } = options;\n\n        if (!adyenv2) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.adyenv2\" argument is not provided.');\n        }\n\n        this._paymentInitializeOptions = adyenv2;\n\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethodOrThrow(options.methodId);\n        const clientSideAuthentication = {\n            key: '',\n            value: '',\n        };\n\n        if (paymentMethod.initializationData.originKey) {\n            clientSideAuthentication.key = 'originKey';\n            clientSideAuthentication.value = paymentMethod.initializationData.originKey;\n        } else {\n            clientSideAuthentication.key = 'clientKey';\n            clientSideAuthentication.value = paymentMethod.initializationData.clientKey;\n        }\n\n        this._adyenClient = await this._scriptLoader.load({\n            environment:  paymentMethod.initializationData.environment,\n            locale: navigator.language,\n            [clientSideAuthentication.key]: clientSideAuthentication.value,\n            paymentMethodsResponse: paymentMethod.initializationData.paymentMethodsResponse,\n        });\n\n        this._paymentComponent = await this._mountPaymentComponent(paymentMethod);\n\n        if (paymentMethod.method === AdyenPaymentMethodType.CreditCard ||\n            paymentMethod.method === AdyenPaymentMethodType.Bancontact) {\n            this._cardVerificationComponent = await this._mountCardVerificationComponent();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n        const shouldSaveInstrument = paymentData && (paymentData as HostedInstrument).shouldSaveInstrument;\n        const shouldSetAsDefaultInstrument = paymentData && (paymentData as HostedInstrument).shouldSetAsDefaultInstrument;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => {\n                const componentState = this._componentState;\n\n                if (!componentState) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n\n                if (paymentData && isVaultedInstrument(paymentData)) {\n                    let bigpayToken = {};\n                    if (isCardState(componentState)) {\n                        const { encryptedCardNumber, encryptedSecurityCode, encryptedExpiryMonth, encryptedExpiryYear } = componentState.data.paymentMethod;\n\n                        bigpayToken = {\n                            credit_card_number_confirmation: encryptedCardNumber,\n                            expiry_month: encryptedExpiryMonth,\n                            expiry_year: encryptedExpiryYear,\n                            verification_value: encryptedSecurityCode,\n                        };\n                    }\n\n                    if (isCardState(componentState) || isAccountState(componentState)) {\n                        return this._store.dispatch(this._paymentActionCreator.submitPayment({\n                            ...payment,\n                            paymentData: {\n                                formattedPayload: {\n                                    bigpay_token: {\n                                        ...bigpayToken,\n                                        token: paymentData.instrumentId,\n                                    },\n                                    browser_info: getBrowserInfo(),\n                                    set_as_default_stored_instrument: shouldSetAsDefaultInstrument || null,\n                                },\n                            },\n                        }));\n                    }\n                }\n\n                return this._store.dispatch(this._paymentActionCreator.submitPayment({\n                    methodId: payment.methodId,\n                    paymentData: {\n                        formattedPayload: {\n                            credit_card_token: {\n                                token: JSON.stringify({\n                                    ...componentState.data.paymentMethod,\n                                    origin: window.location.origin,\n                                }),\n                            },\n                            browser_info: getBrowserInfo(),\n                            vault_payment_instrument: shouldSaveInstrument || null,\n                            set_as_default_stored_instrument: shouldSetAsDefaultInstrument || null,\n                        },\n                    },\n                }));\n            })\n            .catch(error => this._processAdditionalAction(error, shouldSaveInstrument, shouldSetAsDefaultInstrument));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._paymentComponent) {\n            this._paymentComponent.unmount();\n            this._paymentComponent = undefined;\n        }\n\n        if (this._cardVerificationComponent) {\n            this._cardVerificationComponent.unmount();\n            this._cardVerificationComponent = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _getAdyenClient(): AdyenClient {\n        if (!this._adyenClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._adyenClient;\n    }\n\n    private _getPaymentInitializeOptions(): AdyenV2PaymentInitializeOptions {\n        if (!this._paymentInitializeOptions) {\n            throw new InvalidArgumentError('\"options.adyenv2\" argument was not provided during initialization.');\n        }\n\n        return this._paymentInitializeOptions;\n    }\n\n    private _getThreeDS2ChallengeWidgetSize(): string {\n        const { widgetSize } = this._getPaymentInitializeOptions().threeDS2Options;\n\n        if (!widgetSize) {\n            return '05';\n        }\n\n        return widgetSize;\n    }\n\n    private _handleAction(additionalAction: AdyenAdditionalAction): Promise<Payment> {\n        return new Promise((resolve, reject) => {\n            const { threeDS2ContainerId, additionalActionOptions } = this._getPaymentInitializeOptions();\n            const { onBeforeLoad, containerId, onLoad, onComplete } = additionalActionOptions;\n            const adyenAction: AdyenAction = JSON.parse(additionalAction.action);\n\n            const additionalActionComponent = this._getAdyenClient().createFromAction(adyenAction, {\n                onAdditionalDetails: (additionalActionState: AdyenAdditionalActionState) => {\n                    const paymentPayload = {\n                        methodId: adyenAction.paymentMethodType,\n                        paymentData: {\n                            nonce: JSON.stringify(additionalActionState.data),\n                        },\n                    };\n\n                    if (onComplete) {\n                        onComplete();\n                    }\n\n                    resolve(paymentPayload);\n                },\n                size: this._getThreeDS2ChallengeWidgetSize(),\n                onError: (error: AdyenError) => reject(error),\n            });\n\n            if (onBeforeLoad) {\n                onBeforeLoad(adyenAction.type === AdyenActionType.ThreeDS2Challenge ||\n                    adyenAction.type === AdyenActionType.QRCode);\n            }\n\n            additionalActionComponent.mount(`#${containerId || threeDS2ContainerId}`);\n\n            if (onLoad) {\n                onLoad(() => {\n                    reject(new PaymentMethodCancelledError());\n                    additionalActionComponent.unmount();\n                });\n            }\n        });\n    }\n\n    private _mapAdyenPlaceholderData(billingAddress?: BillingAddress): AdyenPlaceholderData {\n        if (!billingAddress) {\n            return {};\n        }\n\n        const {\n            firstName,\n            lastName,\n            address1: street,\n            address2: houseNumberOrName,\n            postalCode,\n            city,\n            stateOrProvinceCode: stateOrProvince,\n            countryCode: country,\n        } = billingAddress;\n\n        return {\n            holderName: `${firstName} ${lastName}`,\n            billingAddress: {\n                street,\n                houseNumberOrName,\n                postalCode,\n                city,\n                stateOrProvince,\n                country,\n            },\n        };\n    }\n\n    private _mountCardVerificationComponent(): Promise<AdyenComponent> {\n        const adyenv2 = this._getPaymentInitializeOptions();\n        const adyenClient = this._getAdyenClient();\n        let cardVerificationComponent: AdyenComponent;\n\n        return new Promise((resolve, reject) => {\n            if (adyenv2.cardVerificationContainerId) {\n                cardVerificationComponent = adyenClient.create(AdyenComponentType.SecuredFields, {\n                    ...adyenv2.options,\n                    onChange: componentState => this._updateComponentState(componentState),\n                    onError: componentState => this._updateComponentState(componentState),\n                });\n\n                try {\n                    cardVerificationComponent.mount(`#${adyenv2.cardVerificationContainerId}`);\n                } catch (error) {\n                    reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n                }\n            }\n\n            resolve(cardVerificationComponent);\n        });\n    }\n\n    private _mountPaymentComponent(paymentMethod: PaymentMethod): Promise<AdyenComponent> {\n        let paymentComponent: AdyenComponent;\n        const adyenv2 = this._getPaymentInitializeOptions();\n        const adyenClient = this._getAdyenClient();\n\n        return new Promise((resolve, reject) => {\n            switch (paymentMethod.method) {\n                case AdyenPaymentMethodType.CreditCard:\n                case AdyenPaymentMethodType.ACH:\n                case AdyenPaymentMethodType.Bancontact:\n                    const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n\n                    paymentComponent = adyenClient.create(paymentMethod.method, {\n                        ...adyenv2.options,\n                        onChange: componentState => this._updateComponentState(componentState),\n                        data: this._mapAdyenPlaceholderData(billingAddress),\n                    });\n\n                    try {\n                        paymentComponent.mount(`#${adyenv2.containerId}`);\n                    } catch (error) {\n                        reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n                    }\n\n                    break;\n\n                case AdyenPaymentMethodType.iDEAL:\n                case AdyenPaymentMethodType.SEPA:\n                    if (!adyenv2.hasVaultedInstruments) {\n                        paymentComponent = adyenClient.create(paymentMethod.method, {\n                            ...adyenv2.options,\n                            onChange: componentState => this._updateComponentState(componentState),\n                        });\n\n                        try {\n                            paymentComponent.mount(`#${adyenv2.containerId}`);\n                        } catch (error) {\n                            reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n                        }\n\n                    } else {\n                        this._updateComponentState({\n                            data: {\n                                paymentMethod: {\n                                    type: paymentMethod.method,\n                                },\n                            },\n                        });\n                    }\n                    break;\n\n                case AdyenPaymentMethodType.AliPay:\n                case AdyenPaymentMethodType.GiroPay:\n                case AdyenPaymentMethodType.Sofort:\n                case AdyenPaymentMethodType.Klarna:\n                case AdyenPaymentMethodType.KlarnaPayNow:\n                case AdyenPaymentMethodType.KlarnaAccount:\n                case AdyenPaymentMethodType.Vipps:\n                case AdyenPaymentMethodType.WeChatPayQR:\n                    this._updateComponentState({\n                        data: {\n                            paymentMethod: {\n                                type: paymentMethod.method,\n                            },\n                        },\n                    });\n            }\n\n            resolve(paymentComponent);\n        });\n    }\n\n    private async _processAdditionalAction(error: unknown, shouldSaveInstrument?: boolean, shouldSetAsDefaultInstrument?: boolean): Promise<InternalCheckoutSelectors> {\n        if (!(error instanceof RequestError) || !some(error.body.errors, {code: 'additional_action_required'})) {\n            return Promise.reject(error);\n        }\n\n        const payment = await this._handleAction(error.body.provider_data);\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment({\n                ...payment,\n                paymentData: {\n                    ...payment.paymentData,\n                    shouldSaveInstrument,\n                    shouldSetAsDefaultInstrument,\n                },\n            }));\n        } catch (error) {\n            return this._processAdditionalAction(error, shouldSaveInstrument, shouldSetAsDefaultInstrument);\n        }\n    }\n\n    private _updateComponentState(componentState: AdyenComponentState) {\n        this._componentState = componentState;\n    }\n}\n","export enum OrderIncludes {\n    DigitalItemsCategories = 'lineItems.digitalItems.categories',\n    PhysicalItemsCategories = 'lineItems.physicalItems.categories',\n}\n\nexport default interface OrderParams {\n    include?: OrderIncludes[];\n}\n","import { ScriptLoader, StylesheetLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { AdyenClient, AdyenConfiguration, AdyenHostWindow } from './adyenv2';\n\nexport default class AdyenV2ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _stylesheetLoader: StylesheetLoader,\n        private _window: AdyenHostWindow = window\n    ) { }\n\n    async load(configuration: AdyenConfiguration): Promise<AdyenClient> {\n        await Promise.all([\n            this._stylesheetLoader.loadStylesheet(`https://checkoutshopper-${configuration.environment}.adyen.com/checkoutshopper/sdk/3.10.1/adyen.css`),\n            this._scriptLoader.loadScript(`https://checkoutshopper-${configuration.environment}.adyen.com/checkoutshopper/sdk/3.10.1/adyen.js`),\n        ]);\n\n        if (!this._window.AdyenCheckout) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return new this._window.AdyenCheckout(configuration);\n    }\n}\n","import { LineItemCategory } from '../../../cart';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { AmountTransformer } from '../../../common/utility';\nimport { Order, OrderActionCreator, OrderIncludes, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { Consignment } from '../../../shipping';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { Affirm, AffirmAddress, AffirmDiscount, AffirmFailResponse, AffirmItem, AffirmRequestData, AffirmSuccessResponse } from './affirm';\nimport AffirmScriptLoader from './affirm-script-loader';\n\nexport default class AffirmPaymentStrategy implements PaymentStrategy {\n    private _affirm?: Affirm;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _affirmScriptLoader: AffirmScriptLoader\n    ) { }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(options.methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n                if (!paymentMethod || !paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const { config: { testMode }, clientToken: publicKey } = paymentMethod;\n\n                return this._affirmScriptLoader.load(publicKey, testMode);\n            })\n            .then(affirm => {\n                this._affirm = affirm;\n\n                return this._store.getState();\n            });\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const methodId = payload.payment && payload.payment.methodId;\n        const { useStoreCredit } = payload;\n        const { _affirm } = this;\n\n        if (!_affirm) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!methodId) {\n            throw new PaymentArgumentInvalidError(['payment.methodId']);\n        }\n\n        const requestOptions = {\n            ...options,\n            params: {\n                include: [\n                    OrderIncludes.PhysicalItemsCategories,\n                    OrderIncludes.DigitalItemsCategories,\n                ],\n            },\n        };\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit }, requestOptions))\n            .then<AffirmSuccessResponse>(() => {\n                _affirm.checkout(this._getCheckoutInformation());\n\n                return new Promise((resolve, reject) => {\n                    _affirm.checkout.open({\n                        onFail: (failObject: AffirmFailResponse) => {\n                            failObject.reason === 'canceled' ? reject(new PaymentMethodCancelledError()) : reject(new PaymentMethodInvalidError());\n                        },\n                        onSuccess: successObject => { resolve(successObject); },\n                    });\n                    _affirm.ui.error.on('close', () => {\n                        reject(new PaymentMethodCancelledError());\n                    });\n                });\n            })\n            .then(result => {\n                const paymentPayload = {\n                    methodId,\n                    paymentData: { nonce: result.checkout_token },\n                };\n\n                return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n            });\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._affirm) {\n            this._affirm = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _getCheckoutInformation(): AffirmRequestData {\n        const state = this._store.getState();\n        const config = state.config.getStoreConfig();\n        const consignments = state.consignments.getConsignments();\n        const order = state.order.getOrder();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!order) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        const amountTransformer = new AmountTransformer(order.currency.decimalPlaces);\n        const billingAddress = this._getBillingAddress();\n\n        return {\n            merchant: {\n                user_confirmation_url: config.links.checkoutLink,\n                user_cancel_url: config.links.checkoutLink,\n                user_confirmation_url_action: 'POST',\n            },\n            shipping: this._getShippingAddress() || billingAddress,\n            billing: billingAddress,\n            items: this._getItems(amountTransformer, order),\n            metadata: {\n                shipping_type: this._getShippingType(consignments),\n                mode: 'modal',\n                platform_type: 'BigCommerce',\n                platform_version: '',\n                platform_affirm: '',\n            },\n            discounts: this._getDiscounts(amountTransformer, order),\n            order_id: order.orderId ? order.orderId.toString() : '',\n            shipping_amount: amountTransformer.toInteger(order.shippingCostTotal),\n            tax_amount: amountTransformer.toInteger(order.taxTotal),\n            total: amountTransformer.toInteger(order.orderAmount),\n        };\n    }\n\n    private _getShippingType(consignments?: Consignment[]): string {\n        if (!consignments) {\n            return '';\n        }\n\n        const consignment = consignments[0];\n\n        return consignment && consignment.selectedShippingOption ?\n            consignment.selectedShippingOption.type : '';\n    }\n\n    private _getBillingAddress(): AffirmAddress {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddress();\n\n        if (!billingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        const billingInformation = {\n            name: {\n                first: billingAddress.firstName,\n                last: billingAddress.lastName,\n                full: `${billingAddress.firstName} ${billingAddress.lastName}`,\n            },\n            address: {\n                line1: billingAddress.address1,\n                line2: billingAddress.address2,\n                city: billingAddress.city,\n                state: billingAddress.stateOrProvinceCode,\n                zipcode: billingAddress.postalCode,\n                country: billingAddress.countryCode,\n            },\n            phone_number: billingAddress.phone,\n            email: billingAddress.email,\n        };\n\n        return billingInformation;\n    }\n\n    private _getShippingAddress(): AffirmAddress | undefined {\n        const state = this._store.getState();\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n\n        if (!shippingAddress) {\n            return;\n        }\n\n        const shippingInformation = {\n            name: {\n                first: shippingAddress.firstName,\n                last: shippingAddress.lastName,\n                full: `${shippingAddress.firstName} ${shippingAddress.lastName}`,\n            },\n            address: {\n                line1: shippingAddress.address1,\n                line2: shippingAddress.address2,\n                city: shippingAddress.city,\n                state: shippingAddress.stateOrProvinceCode,\n                zipcode: shippingAddress.postalCode,\n                country: shippingAddress.countryCode,\n            },\n            phone_number: shippingAddress.phone,\n        };\n\n        return shippingInformation;\n    }\n\n    private _getItems(amountTransformer: AmountTransformer, order: Order): AffirmItem[] {\n        const items: AffirmItem[] = [];\n\n        for (const item of order.lineItems.physicalItems) {\n            items.push({\n                display_name: item.name,\n                sku: item.sku,\n                unit_price: amountTransformer.toInteger(item.salePrice),\n                qty: item.quantity,\n                item_image_url: item.imageUrl,\n                item_url: item.url,\n                categories: this._getCategories(item.categories),\n            });\n        }\n\n        for (const item of order.lineItems.digitalItems) {\n            items.push({\n                display_name: item.name,\n                sku: item.sku,\n                unit_price: amountTransformer.toInteger(item.salePrice),\n                qty: item.quantity,\n                item_image_url: item.imageUrl,\n                item_url: item.url,\n                categories: this._getCategories(item.categories),\n            });\n        }\n\n        for (const item of order.lineItems.giftCertificates) {\n            items.push({\n                display_name: item.name,\n                sku: '',\n                unit_price: amountTransformer.toInteger(item.amount),\n                qty: 1,\n                item_image_url: '',\n                item_url: '',\n            });\n        }\n\n        if (order.lineItems.customItems) {\n            for (const item of order.lineItems.customItems) {\n                items.push({\n                    display_name: item.name,\n                    sku: item.sku,\n                    unit_price: amountTransformer.toInteger(item.listPrice),\n                    qty: item.quantity,\n                    item_image_url: '',\n                    item_url: '',\n                });\n            }\n        }\n\n        return items;\n    }\n\n    private _getDiscounts(amountTransformer: AmountTransformer, order: Order): AffirmDiscount {\n        const discounts: AffirmDiscount = {};\n\n        for (const line of order.coupons) {\n            if (line.discountedAmount > 0) {\n                discounts[line.code] = {\n                    discount_amount: amountTransformer.toInteger(line.discountedAmount),\n                    discount_display_name: line.displayName,\n                };\n            }\n        }\n\n        if (order.discountAmount > 0) {\n            discounts.DISCOUNTED_AMOUNT = {\n                discount_amount: amountTransformer.toInteger(order.discountAmount),\n                discount_display_name: 'discount',\n            };\n        }\n\n        return discounts;\n    }\n\n    private _getCategories(categories?: LineItemCategory[][]): string[][] {\n        if (!categories) {\n            return[[]];\n        }\n\n        return categories.map(categoryTree => categoryTree.map(category => category.name));\n    }\n}\n","import { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { Affirm, AffirmHostWindow, AffirmScripts } from './affirm';\nimport loadAffirmJS from './affirmJs';\n\nexport default class AffirmScriptLoader {\n    constructor(\n        public _window: AffirmHostWindow = window\n    ) { }\n\n    load(apikey: string = '', testMode?: boolean): Promise<Affirm> {\n        const scriptURI = this._getScriptURI(testMode);\n\n        loadAffirmJS(apikey, scriptURI);\n\n        if (!this._window.affirm) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return Promise.resolve(this._window.affirm);\n    }\n\n    private _getScriptURI(testMode: boolean = false): string {\n        const SCRIPTS_DEFAULT: AffirmScripts = {\n            PROD: '//cdn1.affirm.com/js/v2/affirm.js',\n            SANDBOX: '//cdn1-sandbox.affirm.com/js/v2/affirm.js',\n        };\n\n        return testMode ? SCRIPTS_DEFAULT.SANDBOX : SCRIPTS_DEFAULT.PROD;\n    }\n}\n","/**\n * Used this approach as Affirm uses snipped for initializing. Please refer to Affirm documentation in: https://docs.affirm.com/Integrate_Affirm/Direct_API#1._Add_Affirm.js\n */\nimport { Affirm, AffirmHostWindow } from './affirm';\n\ninterface AffirmConfig {\n    public_api_key: string;\n    script: string;\n}\n\nexport default function loadAffirmJS(apiKey: string, scriptURL: string) {\n    const _AFFIRM_CONFIG: AffirmConfig = {\n        public_api_key: apiKey,\n        script: scriptURL,\n    };\n\n    (function foo(m: AffirmHostWindow | any, g: AffirmConfig, n: 'affirm', d: 'checkout', a: 'ui', e: 'script', h: 'ready', c: 'jsReady') {\n        const b = m[n] || {};\n        const k = document.createElement(e);\n        const p = document.getElementsByTagName(e)[0];\n        const l = function bar(a: Affirm | any, b: keyof Affirm, c: string) {\n            return function baz() {\n                a[b]._.push([c, arguments]);\n            };\n        };\n        b[d] = l(b, d, 'set');\n        const f = b[d];\n        b[a] = {};\n        b[a]._ = [];\n        f._ = [];\n        b._ = [];\n        b[a][h] = l(b, a, h);\n        b[c] = function qux() {\n            b._.push([h, arguments]);\n        };\n        let a1 = 0;\n        for (\n          const c1 = 'set add save post open empty reset on off trigger ready setProduct'.split(\n            ' '\n          );\n          a1 < c1.length;\n          a1++\n        ) {\n            f[c1[a1]] = l(b, d, c1[a1]);\n        }\n        let a2 = 0;\n        for (const c2 = ['get', 'token', 'url', 'items']; a2 < c2.length; a2++) {\n            f[c2[a2]] = function foobar() {};\n        }\n        k.async = !0;\n        k.src = g[e];\n        if (p.parentNode) {\n            p.parentNode.insertBefore(k, p);\n        }\n        delete g[e];\n        f(g);\n        m[n] = b;\n    })(\n        window,\n        _AFFIRM_CONFIG,\n        'affirm',\n        'checkout',\n        'ui',\n        'script',\n        'ready',\n        'jsReady'\n    );\n}\n","import { CheckoutStore, CheckoutValidator, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport AfterpayScriptLoader from './afterpay-script-loader';\nimport AfterpaySdk from './afterpay-sdk';\n\nexport default class AfterpayPaymentStrategy implements PaymentStrategy {\n    private _afterpaySdk?: AfterpaySdk;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutValidator: CheckoutValidator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _afterpayScriptLoader: AfterpayScriptLoader\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId, options.gatewayId);\n        const config = state.config.getStoreConfig();\n        const storeCountryName = config ? config.storeProfile.storeCountry : '';\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._afterpaySdk = await this._afterpayScriptLoader.load(paymentMethod, this._mapCountryToISO2(storeCountryName));\n\n        return this._store.getState();\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._afterpaySdk) {\n            this._afterpaySdk = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const paymentId = payload.payment && payload.payment.gatewayId;\n\n        if (!paymentId) {\n            throw new PaymentArgumentInvalidError(['payment.gatewayId']);\n        }\n\n        let state = this._store.getState();\n        const config = state.config.getStoreConfig();\n        const storeCountryName = config ? config.storeProfile.storeCountry : '';\n        const { useStoreCredit } = payload;\n\n        if (useStoreCredit !== undefined) {\n            state = await this._store.dispatch(\n                this._storeCreditActionCreator.applyStoreCredit(useStoreCredit)\n            );\n        }\n\n        await this._checkoutValidator.validate(state.checkout.getCheckout(), options);\n\n        state = await this._store.dispatch(\n            this._paymentMethodActionCreator.loadPaymentMethod(paymentId, options)\n        );\n\n        await this._redirectToAfterpay(storeCountryName, state.paymentMethods.getPaymentMethod(paymentId));\n\n        // Afterpay will handle the rest of the flow so return a promise that doesn't really resolve\n        return new Promise<never>(() => {});\n    }\n\n    async finalize(options: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n        const config = state.config.getContextConfig();\n\n        if (!payment) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!config || !config.payment.token) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const paymentPayload = {\n            methodId: payment.providerId,\n            paymentData: { nonce: config.payment.token },\n        };\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder({}, options));\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n    }\n\n    private _redirectToAfterpay(countryName: string, paymentMethod?: PaymentMethod): void {\n        if (!this._afterpaySdk || !paymentMethod || !paymentMethod.clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._afterpaySdk.initialize({ countryCode: this._mapCountryToISO2(countryName)});\n        this._afterpaySdk.redirect({ token: paymentMethod.clientToken });\n    }\n\n    private _mapCountryToISO2(countryName: string): string {\n        switch (countryName) {\n        case 'Australia':\n            return 'AU';\n\n        case 'New Zealand':\n            return 'NZ';\n\n        case 'United States':\n            return 'US';\n\n        default:\n            return 'AU';\n        }\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport PaymentMethod from '../../payment-method';\n\nimport AfterpaySdk from './afterpay-sdk';\nimport AfterpayWindow from './afterpay-window';\n\ninterface AfterpayScripts {\n    PROD: string;\n    SANDBOX: string;\n}\n\nconst SCRIPTS_DEFAULT: AfterpayScripts = {\n    PROD: '//portal.afterpay.com/afterpay-async.js',\n    SANDBOX: '//portal-sandbox.afterpay.com/afterpay-async.js',\n};\n\nconst SCRIPTS_US: AfterpayScripts = {\n    PROD: '//portal.afterpay.com/afterpay-async.js',\n    SANDBOX: '//portal.us-sandbox.afterpay.com/afterpay-async.js',\n};\n\n/** Class responsible for loading the Afterpay SDK */\nexport default class AfterpayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    /**\n     * Loads the appropriate Afterpay SDK depending on the payment method data.\n     * @param method the payment method data\n     */\n    load(method: PaymentMethod, countryCode: string): Promise<AfterpaySdk> {\n        const testMode = method.config.testMode || false;\n        const scriptURI = this._getScriptURI(countryCode, testMode);\n\n        return this._scriptLoader.loadScript(scriptURI)\n            .then(() => (window as unknown as AfterpayWindow).AfterPay);\n    }\n\n    private _getScriptURI(countryCode: string, testMode: boolean): string {\n        if (countryCode === 'US') {\n            return testMode ? SCRIPTS_US.SANDBOX : SCRIPTS_US.PROD;\n        }\n\n        return testMode ? SCRIPTS_DEFAULT.SANDBOX : SCRIPTS_DEFAULT.PROD;\n    }\n\n}\n","import { isEqual } from 'lodash';\n\nimport { omitPrivate } from '../common/utility';\n\nimport InternalAddress from './internal-address';\n\nexport default function isInternalAddressEqual(addressA: Partial<InternalAddress>, addressB: Partial<InternalAddress>): boolean {\n    return isEqual(normalize(addressA), normalize(addressB));\n}\n\nfunction normalize(address: Partial<InternalAddress>): Partial<InternalAddress> {\n    const ignoredKeys = ['id', 'provinceCode'];\n\n    return (Object.keys(omitPrivate(address) || {}) as Array<keyof InternalAddress>)\n        .reduce(\n            (result, key) => ignoredKeys.indexOf(key) === -1 && address[key] ?\n                { ...result, [key]: address[key] } :\n                result,\n            {}\n        );\n}\n","import isPrivate from './is-private';\nimport omitDeep from './omit-deep';\n\nexport default function omitPrivate(object: any): any {\n    return omitDeep(object, (_: any, key: string) => isPrivate(key));\n}\n","import { BillingAddress } from '../billing';\n\nimport Address from './address';\nimport InternalAddress from './internal-address';\n\nexport default function mapFromInternalAddress(address: InternalAddress): Address | BillingAddress {\n    return {\n        id: address.id,\n        firstName: address.firstName,\n        lastName: address.lastName,\n        company: address.company,\n        address1: address.addressLine1,\n        address2: address.addressLine2,\n        city: address.city,\n        stateOrProvince: address.province,\n        stateOrProvinceCode: address.provinceCode,\n        postalCode: address.postCode,\n        country: address.country,\n        countryCode: address.countryCode,\n        phone: address.phone,\n        customFields: address.customFields,\n    };\n}\n","export interface BoltHostWindow extends Window {\n    BoltCheckout?: BoltCheckout;\n}\n\nexport interface BoltCheckout {\n    configure(cart: BoltCart, hints: {}, callbacks?: BoltCallbacks): BoltClient;\n    setClientCustomCallbacks(callbacks: BoltCallbacks): void;\n}\n\nexport interface BoltDeveloperModeParams {\n    developerMode: BoltDeveloperMode;\n    developerDomain: string;\n}\n\nexport enum BoltDeveloperMode {\n    SandboxMode = 'bolt_sandbox',\n    StagingMode = 'bolt_staging',\n    DevelopmentMode = 'bolt_development',\n}\n\nexport interface BoltClient {\n    open(): void;\n}\n\nexport interface BoltCart {\n    orderToken: string;\n}\n\nexport interface BoltCallbacks {\n    check?(): boolean;\n    onCheckoutStart?(): void;\n    onPaymentSubmit?(): void;\n    success(transaction: BoltTransaction, callback: () => void): void;\n    close?(): void;\n}\n\nexport interface BoltTransaction {\n    id: string;\n    type: string;\n    processor: string;\n    date: number;\n    reference: string;\n    status: string;\n    authorization: BoltAuthorization;\n}\n\nexport interface BoltAuthorization {\n    status: string;\n    reason: string;\n}\n","import { noop } from 'lodash';\n\nimport { isInternalAddressEqual, mapFromInternalAddress, mapToInternalAddress } from '../../../address';\nimport { BillingAddressActionCreator } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport AmazonPayConfirmationFlow from './amazon-pay-confirmation-flow';\nimport AmazonPayOrderReference from './amazon-pay-order-reference';\nimport AmazonPayPaymentInitializeOptions from './amazon-pay-payment-initialize-options';\nimport AmazonPayScriptLoader from './amazon-pay-script-loader';\nimport AmazonPayWallet, { AmazonPayWalletOptions } from './amazon-pay-wallet';\nimport AmazonPayWindow from './amazon-pay-window';\n\nexport default class AmazonPayPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _walletOptions?: AmazonPayPaymentInitializeOptions;\n    private _window: AmazonPayWindow;\n    private _isPaymentMethodSelected: boolean;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n        this._isPaymentMethodSelected = false;\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (!amazonOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.amazon\" argument is not provided.');\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._walletOptions = amazonOptions;\n        this._paymentMethod = paymentMethod;\n\n        return new Promise((resolve, reject) => {\n            const onReady = () => {\n                this._createWallet(amazonOptions)\n                    .then(resolve)\n                    .catch(reject);\n            };\n\n            this._scriptLoader.loadWidget(paymentMethod, onReady)\n                .catch(reject);\n        })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._walletOptions = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const referenceId = this._getOrderReferenceId();\n        const sellerId = this._getMerchantId();\n\n        if (!referenceId || !sellerId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!payload.payment) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment.methodId\" argument is not provided.');\n        }\n\n        if (!this._isPaymentMethodSelected) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { payment: { paymentData, ...paymentPayload }, useStoreCredit } = payload;\n\n        if (options && this._paymentMethod && this._paymentMethod.config.is3dsEnabled) {\n            return this._processPaymentWith3ds(\n                sellerId,\n                referenceId,\n                paymentPayload.methodId,\n                useStoreCredit,\n                options\n            );\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.initializePayment(paymentPayload.methodId, { referenceId, useStoreCredit })\n        )\n            .then(() => this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: paymentPayload,\n                }, options)\n            ))\n            .catch(error => {\n                if (error instanceof RequestError && error.body.type === 'provider_widget_error' && this._walletOptions) {\n                    return this._createWallet(this._walletOptions)\n                        .then(() => Promise.reject(error));\n                }\n\n                return Promise.reject(error);\n            });\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _getMerchantId(): string | undefined {\n        return this._paymentMethod && this._paymentMethod.config.merchantId;\n    }\n\n    private _getOrderReferenceId(): string | undefined {\n        const state = this._store.getState();\n        const amazon = state.remoteCheckout.getCheckout('amazon');\n\n        return amazon ? amazon.referenceId : undefined;\n    }\n\n    private _getOrderReferenceIdFromInitializationData(): string | undefined {\n        return this._paymentMethod ? this._paymentMethod.initializationData.orderReferenceId : undefined;\n    }\n\n    private _createWallet(options: AmazonPayPaymentInitializeOptions): Promise<AmazonPayWallet> {\n        return new Promise((resolve, reject) => {\n            const { container, onError = noop, onPaymentSelect = noop, onReady = noop } = options;\n            const referenceId = this._getOrderReferenceId() || this._getOrderReferenceIdFromInitializationData();\n            const merchantId = this._getMerchantId();\n\n            if (!document.getElementById(container)) {\n                return reject(new InvalidArgumentError('Unable to create AmazonPay Wallet widget without valid container ID.'));\n            }\n\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n            }\n\n            if (!merchantId) {\n                return reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n            }\n\n            const walletOptions: AmazonPayWalletOptions = {\n                amazonOrderReferenceId: referenceId,\n                design: { designMode: 'responsive' },\n                scope: 'payments:billing_address payments:shipping_address payments:widget profile',\n                sellerId: merchantId,\n                onError: error => {\n                    reject(error);\n                    onError(error);\n                },\n                onPaymentSelect: orderReference => {\n                    this._synchronizeBillingAddress()\n                        .then(() => {\n                            this._isPaymentMethodSelected = true;\n                            onPaymentSelect(orderReference);\n                        })\n                        .catch(onError);\n                },\n                onReady: orderReference => {\n                    resolve();\n                    onReady(orderReference);\n                },\n            };\n\n            if (!this._getOrderReferenceId()) {\n                walletOptions.onReady = orderReference => {\n                    this._updateOrderReference(orderReference)\n                        .then(() => {\n                            resolve();\n                            onReady(orderReference);\n                        })\n                        .catch(onError);\n                };\n            }\n\n            const widget = new this._window.OffAmazonPayments.Widgets.Wallet(walletOptions);\n\n            widget.bind(container);\n\n            return widget;\n        });\n    }\n\n    private _synchronizeBillingAddress(): Promise<InternalCheckoutSelectors> {\n        const referenceId = this._getOrderReferenceId();\n        const methodId = this._paymentMethod && this._paymentMethod.id;\n\n        if (!methodId || !referenceId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.initializeBilling(methodId, { referenceId })\n        )\n            .then(state => {\n                const amazon = state.remoteCheckout.getCheckout('amazon');\n                const remoteAddress = amazon && amazon.billing && amazon.billing.address;\n                const billingAddress = state.billingAddress.getBillingAddress();\n                const internalBillingAddress = billingAddress && mapToInternalAddress(billingAddress);\n\n                if (remoteAddress === false) {\n                    throw new RemoteCheckoutSynchronizationError();\n                }\n\n                if (!remoteAddress || isInternalAddressEqual(remoteAddress, internalBillingAddress || {})) {\n                    return this._store.getState();\n                }\n\n                return this._store.dispatch(\n                    this._billingAddressActionCreator.updateAddress(mapFromInternalAddress(remoteAddress))\n                );\n            });\n    }\n\n    private _updateOrderReference(orderReference: AmazonPayOrderReference): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.updateCheckout('amazon', {\n                referenceId: orderReference.getAmazonOrderReferenceId(),\n            })\n        );\n    }\n\n    private _processPaymentWith3ds(sellerId: string, referenceId: string, methodId: string, useStoreCredit: boolean | undefined, options: PaymentRequestOptions): Promise<never> {\n        return new Promise((_, reject) => {\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized));\n            }\n\n            return this._window.OffAmazonPayments.initConfirmationFlow(\n                sellerId,\n                referenceId,\n                (confirmationFlow: AmazonPayConfirmationFlow) => {\n                    return this._store.dispatch(\n                        this._orderActionCreator.submitOrder({ useStoreCredit }, options)\n                    )\n                        .then(() => this._store.dispatch(\n                            this._remoteCheckoutActionCreator.initializePayment(methodId, {\n                                referenceId,\n                                useStoreCredit,\n                            }))\n                        )\n                        .then(() => {\n                            confirmationFlow.success();\n\n                            return new Promise<never>(() => {});\n                        })\n                        .catch(error => {\n                            confirmationFlow.error();\n\n                            return reject(error);\n                        });\n                }\n            );\n        });\n    }\n}\n","import { noop } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { getShippableItemsCount } from '../../../shipping';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { AmazonPayV2ChangeActionType, AmazonPayV2PaymentProcessor, AmazonPayV2PayOptions, AmazonPayV2Placement } from '.';\n\nexport default class AmazonPayV2PaymentStrategy implements PaymentStrategy {\n\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _amazonPayV2PaymentProcessor: AmazonPayV2PaymentProcessor\n    ) { }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId, amazonpay } = options;\n\n        if (!methodId || !amazonpay) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazonpay\" argument is not provided.');\n        }\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n        const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n        await this._amazonPayV2PaymentProcessor.initialize(paymentMethod);\n\n        const { paymentToken } = paymentMethod.initializationData;\n        const buttonId = amazonpay.editButtonId;\n\n        if (paymentToken && buttonId) {\n            this._bindEditButton(buttonId, paymentToken, 'changePayment');\n        } else {\n            this._walletButton = this._createSignInButton(paymentMethod);\n        }\n\n        return this._store.getState();\n    }\n\n    async execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        const { methodId } = payment;\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n        const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n        const { paymentToken } = paymentMethod.initializationData;\n\n        if (paymentToken) {\n            const paymentPayload = {\n                methodId,\n                paymentData: { nonce: paymentToken },\n            };\n\n            await this._store.dispatch(this._orderActionCreator.submitOrder(orderRequest, options));\n\n            try {\n                return await this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n            } catch (error) {\n                if (error instanceof RequestError && error.body.status === 'additional_action_required') {\n                    return new Promise(() => {\n                        window.location.replace(error.body.additional_action_required.data.redirect_url);\n                    });\n                }\n\n                throw error;\n            }\n        }\n\n        if (!this._walletButton) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._walletButton.click();\n\n        return new Promise<never>(noop);\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    async deinitialize(_options?: PaymentRequestOptions | undefined): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton && this._walletButton.parentNode) {\n            this._walletButton.parentNode.removeChild(this._walletButton);\n            this._walletButton = undefined;\n        }\n\n        await this._amazonPayV2PaymentProcessor.deinitialize();\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _bindEditButton(id: string, sessionId: string, changeAction: AmazonPayV2ChangeActionType): void {\n        const button = document.getElementById(id);\n\n        if (!button || !button.parentNode) {\n            return;\n        }\n\n        const clone = button.cloneNode(true);\n        button.parentNode.replaceChild(clone, button);\n\n        clone.addEventListener('click', () => this._showLoadingSpinner(() => new Promise(noop)));\n\n        this._amazonPayV2PaymentProcessor.bindButton(id, sessionId, changeAction);\n    }\n\n    private _showLoadingSpinner(callback?: () => Promise<void> | Promise<never>): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n\n            if (callback) {\n                return callback();\n            }\n\n            return Promise.reject();\n        }), { queueId: 'widgetInteraction' });\n    }\n\n    private _createContainer(): HTMLDivElement {\n        let container = document.getElementById('AmazonPayButton') as HTMLDivElement;\n\n        if (container) {\n            return container;\n        }\n\n        container = document.createElement('div');\n        container.id = 'AmazonPayButton';\n        container.style.display = 'none';\n\n        return document.body.appendChild(container);\n    }\n\n    private _createSignInButton(paymentMethod: PaymentMethod): HTMLElement {\n        const state = this._store.getState();\n        const cart = state.cart.getCart();\n        const config = state.config.getStoreConfig();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const {\n            config: {\n                merchantId,\n                testMode,\n            },\n            initializationData: {\n                checkoutLanguage,\n                ledgerCurrency,\n                checkoutSessionMethod,\n                extractAmazonCheckoutSessionId,\n            },\n        } = paymentMethod;\n\n        if (!merchantId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const amazonButtonOptions = {\n            merchantId,\n            sandbox: !!testMode,\n            checkoutLanguage,\n            ledgerCurrency,\n            productType: cart && getShippableItemsCount(cart) === 0 ?\n                AmazonPayV2PayOptions.PayOnly :\n                AmazonPayV2PayOptions.PayAndShip,\n            createCheckoutSession: {\n                method: checkoutSessionMethod,\n                url: `${config.storeProfile.shopPath}/remote-checkout/${paymentMethod.id}/payment-session`,\n                extractAmazonCheckoutSessionId,\n            },\n            placement: AmazonPayV2Placement.Checkout,\n        };\n\n        const container = this._createContainer();\n        this._amazonPayV2PaymentProcessor.createButton(`#${container.id}`, amazonButtonOptions);\n\n        return container;\n    }\n}\n","import { isNil, values } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { HostedForm, HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class CreditCardPaymentStrategy implements PaymentStrategy {\n    protected _hostedForm?: HostedForm;\n    protected _shouldRenderHostedForm?: boolean;\n\n    constructor(\n        protected _store: CheckoutStore,\n        protected _orderActionCreator: OrderActionCreator,\n        protected _paymentActionCreator: PaymentActionCreator,\n        protected _hostedFormFactory: HostedFormFactory\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._isHostedPaymentFormEnabled(payload.payment?.methodId, payload.payment?.gatewayId) && this._shouldRenderHostedForm ?\n            this._executeWithHostedForm(payload, options) :\n            this._executeWithoutHostedForm(payload, options);\n    }\n\n    finalize(_options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(options?: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        if (!this._isHostedPaymentFormEnabled(options?.methodId, options?.gatewayId) || !this._isHostedFieldAvailable(options)) {\n            this._shouldRenderHostedForm = false;\n\n            return Promise.resolve(this._store.getState());\n        }\n\n        const formOptions = options && options.creditCard && options.creditCard.form;\n        const { config } = this._store.getState();\n        const { paymentSettings: { bigpayBaseUrl: host = '' } = {} } = config.getStoreConfig() || {};\n\n        if (!formOptions) {\n            throw new InvalidArgumentError();\n        }\n\n        const form = this._hostedFormFactory.create(host, formOptions);\n\n        return form.attach()\n            .then(() => {\n                this._shouldRenderHostedForm = true;\n                this._hostedForm = form;\n\n                return this._store.getState();\n            });\n    }\n\n    deinitialize(_options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (this._hostedForm) {\n            this._hostedForm.detach();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    protected _executeWithoutHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n            );\n    }\n\n    protected _executeWithHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors>  {\n        const { payment, ...order } = payload;\n        const form = this._hostedForm;\n\n        if (!form) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!payment || !payment.methodId) {\n            throw new PaymentArgumentInvalidError(['payment.methodId']);\n        }\n\n        return form.validate()\n            .then(() => this._store.dispatch(this._orderActionCreator.submitOrder(order, options)))\n            .then(() => form.submit(payment))\n            .then(() => this._store.dispatch(this._orderActionCreator.loadCurrentOrder()));\n    }\n\n    protected _isHostedPaymentFormEnabled(methodId?: string, gatewayId?: string): boolean {\n        if (!methodId) {\n            return false;\n        }\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(methodId, gatewayId);\n\n        return paymentMethod.config.isHostedFormEnabled === true;\n    }\n\n    private _isHostedFieldAvailable(options?: PaymentInitializeOptions): boolean {\n        return !(values(options && options.creditCard && options.creditCard.form.fields).every(isNil));\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { CardinalThreeDSecureFlowV2 } from '../cardinal';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class BarclaysPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _threeDSecureFlow: CardinalThreeDSecureFlowV2\n    ) {\n        super(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        );\n    }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        await super.initialize(options);\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(options.methodId);\n\n        if (paymentMethod.config.is3dsEnabled) {\n            await this._threeDSecureFlow.prepare(paymentMethod);\n        }\n\n        return this._store.getState();\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment: { methodId = '' } = {} } = payload;\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n\n        if (getPaymentMethodOrThrow(methodId).config.is3dsEnabled) {\n            return this._threeDSecureFlow.start(\n                super.execute.bind(this),\n                payload,\n                options,\n                this._hostedForm\n            );\n        }\n\n        return super.execute(payload, options);\n    }\n}\n","import { noop } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { CancellablePromise } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { BlueSnapV2StyleProps } from './bluesnapv2';\nimport { BlueSnapV2PaymentInitializeOptions } from './bluesnapv2-payment-options';\n\nconst IFRAME_NAME = 'bluesnapv2_hosted_payment_page';\n\nexport default class BlueSnapV2PaymentStrategy implements PaymentStrategy {\n\n    private _initializeOptions?: BlueSnapV2PaymentInitializeOptions;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) {}\n\n    async execute(orderRequest: OrderRequestBody, options?: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        if (!this._initializeOptions) {\n            throw new NotInitializedError(\n                NotInitializedErrorType.PaymentNotInitialized\n            );\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(orderRequest, options));\n\n        const { onLoad, style } = this._initializeOptions;\n        const frame = this._createIframe(IFRAME_NAME, style);\n        const promise = new CancellablePromise<undefined>(new Promise(noop));\n\n        onLoad(frame, () => promise.cancel(new PaymentMethodCancelledError()));\n\n        return this._store.dispatch(this._paymentActionCreator.initializeOffsitePayment({\n            methodId: payment.methodId,\n            gatewayId: payment.gatewayId,\n            shouldSaveInstrument: false,\n            target: frame.name,\n            promise: promise.promise,\n        }));\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n        const status = state.payment.getPaymentStatus();\n\n        if (order && (status === paymentStatusTypes.ACKNOWLEDGE || status === paymentStatusTypes.FINALIZE)) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(options?: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._initializeOptions = options && options.bluesnapv2;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _createIframe(name: string, style?: BlueSnapV2StyleProps): HTMLIFrameElement {\n        const iframe = document.createElement('iframe');\n\n        iframe.name = name;\n\n        if (style) {\n            const { border, height, width } = style;\n\n            iframe.style.border = border as string;\n            iframe.style.height = height as string;\n            iframe.style.width = width as string;\n        }\n\n        return iframe;\n    }\n}\n","import { isNonceLike } from '../..';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError } from '../../errors';\nimport { NonceInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { BoltCheckout, BoltTransaction } from './bolt';\nimport BoltScriptLoader from './bolt-script-loader';\n\nexport default class BoltPaymentStrategy implements PaymentStrategy {\n    private _boltClient?: BoltCheckout;\n    private _useBoltClient: boolean = false;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _boltScriptLoader: BoltScriptLoader\n    ) { }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { bolt, methodId } = options;\n\n        this._useBoltClient = !!(bolt && bolt.useBigCommerceCheckout);\n\n        if (this._useBoltClient) {\n            const state = this._store.getState();\n            const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n            if (!paymentMethod || !paymentMethod.initializationData.publishableKey) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            const { developerConfig, publishableKey } = paymentMethod.initializationData;\n\n            this._boltClient = await this._boltScriptLoader.load(publishableKey, paymentMethod.config.testMode, developerConfig);\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._boltClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (this._useBoltClient) {\n            return this._executeWithBoltClient(payload, options);\n        } else {\n            return this._executeWithBoltCheckout(payload, options);\n        }\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private async _executeWithBoltClient(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        if (!this._boltClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const boltClient = this._boltClient;\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        const { isStoreCreditApplied: useStoreCredit } = this._store.getState().checkout.getCheckoutOrThrow();\n\n        if (useStoreCredit !== undefined) {\n            await this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(useStoreCredit));\n        }\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(payment.methodId, options));\n        const paymentMethod = state.paymentMethods.getPaymentMethod(payment.methodId);\n\n        if (!paymentMethod || !paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const orderToken = paymentMethod.clientToken;\n\n        const transaction: BoltTransaction = await new Promise((resolve, reject) => {\n            const onSuccess = (transaction: BoltTransaction,  callback: () => void) => {\n                resolve(transaction);\n                callback();\n            };\n\n            const onClose = () => {\n                reject(new PaymentMethodCancelledError());\n            };\n\n            const callbacks = {\n                success: onSuccess,\n                close: onClose,\n            };\n\n            boltClient.configure({ orderToken }, {}, callbacks).open();\n        });\n\n        const { shouldSaveInstrument } = payment.paymentData as NonceInstrument;\n\n        const paymentPayload = {\n            methodId: payment.methodId,\n            paymentData: {\n                nonce: transaction.reference,\n                shouldSaveInstrument,\n            },\n        };\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n    }\n\n    private async _executeWithBoltCheckout(payload: OrderRequestBody, _options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        const { methodId, paymentData } = payment;\n\n        if (!methodId) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!paymentData || !isNonceLike(paymentData)) {\n            throw new MissingDataError(MissingDataErrorType.MissingPayment);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, _options));\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment({\n            methodId,\n            paymentData,\n        }));\n    }\n}\n","import { NonceInstrument, PaymentInstrument } from './payment';\n\nexport default function isNonceLike(instrument: PaymentInstrument): instrument is NonceInstrument {\n    return Boolean((instrument as NonceInstrument).nonce);\n}\n","import { LoadScriptOptions, ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { BoltCheckout, BoltDeveloperMode, BoltDeveloperModeParams, BoltHostWindow } from './bolt';\n\nexport default class BoltScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: BoltHostWindow = window\n    ) {}\n\n    async load(publishableKey: string, testMode?: boolean, developerModeParams?: BoltDeveloperModeParams): Promise<BoltCheckout> {\n        const options: LoadScriptOptions = {\n            async: true,\n            attributes: {\n                id: 'bolt-connect',\n                'data-publishable-key': publishableKey,\n            },\n        };\n\n        await Promise.all([\n            this._scriptLoader.loadScript(`//${this.getDomainURL(!!testMode, developerModeParams)}/connect-bigcommerce.js`, options),\n            this._scriptLoader.loadScript(`//${this.getDomainURL(!!testMode, developerModeParams)}/track.js`),\n        ]);\n\n        if (!this._window.BoltCheckout) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.BoltCheckout;\n    }\n\n    private getDomainURL(testMode: boolean, developerModeParams?: BoltDeveloperModeParams): string {\n\n        if (!testMode) {\n            return 'connect.bolt.com';\n        }\n\n        if (developerModeParams) {\n            switch (developerModeParams.developerMode) {\n                case BoltDeveloperMode.StagingMode:\n                    return 'connect-staging.bolt.com';\n                case BoltDeveloperMode.DevelopmentMode:\n                    return `connect.${developerModeParams.developerDomain}`;\n            }\n        }\n\n        return 'connect-sandbox.bolt.com';\n    }\n}\n","import { BraintreeVerifyPayload } from './braintree';\n\n/**\n * A set of options that are required to initialize the Braintree payment\n * method. You need to provide the options if you want to support 3D Secure\n * authentication flow.\n *\n * ```html\n * <!-- These containers are where the hosted (iframed) credit card fields will be inserted -->\n * <div id=\"card-number\"></div>\n * <div id=\"card-name\"></div>\n * <div id=\"card-expiry\"></div>\n * <div id=\"card-code\"></div>\n * ```\n *\n * ```js\n * service.initializePayment({\n *     methodId: 'braintree',\n *     braintree: {\n *         form: {\n *             fields: {\n *                 cardNumber: { containerId: 'card-number' },\n *                 cardName: { containerId: 'card-name' },\n *                 cardExpiry: { containerId: 'card-expiry' },\n *                 cardCode: { containerId: 'card-code' },\n *             },\n *         },\n *     },\n * });\n * ```\n *\n * Additional options can be passed in to customize the fields and register\n * event callbacks.\n *\n * ```js\n * service.initializePayment({\n *     methodId: 'braintree',\n *     creditCard: {\n *         form: {\n *             fields: {\n *                 cardNumber: { containerId: 'card-number' },\n *                 cardName: { containerId: 'card-name' },\n *                 cardExpiry: { containerId: 'card-expiry' },\n *                 cardCode: { containerId: 'card-code' },\n *             },\n *             styles: {\n *                 default: {\n *                     color: '#000',\n *                 },\n *                 error: {\n *                     color: '#f00',\n *                 },\n *                 focus: {\n *                     color: '#0f0',\n *                 },\n *             },\n *             onBlur({ fieldType }) {\n *                 console.log(fieldType);\n *             },\n *             onFocus({ fieldType }) {\n *                 console.log(fieldType);\n *             },\n *             onEnter({ fieldType }) {\n *                 console.log(fieldType);\n *             },\n *             onCardTypeChange({ cardType }) {\n *                 console.log(cardType);\n *             },\n *             onValidate({ errors, isValid }) {\n *                 console.log(errors);\n *                 console.log(isValid);\n *             },\n *         },\n *     },\n * });\n * ```\n */\nexport interface BraintreePaymentInitializeOptions {\n    threeDSecure?: BraintreeThreeDSecureOptions;\n\n    /**\n     * @alpha\n     * Please note that this option is currently in an early stage of\n     * development. Therefore the API is unstable and not ready for public\n     * consumption.\n     */\n    form?: BraintreeFormOptions;\n}\n\n/**\n * A set of options that are required to support 3D Secure authentication flow.\n *\n * If the customer uses a credit card that has 3D Secure enabled, they will be\n * asked to verify their identity when they pay. The verification is done\n * through a web page via an iframe provided by the card issuer.\n */\nexport interface BraintreeThreeDSecureOptions {\n    /**\n     * A callback that gets called when the iframe is ready to be added to the\n     * current page. It is responsible for determining where the iframe should\n     * be inserted in the DOM.\n     *\n     * @param error - Any error raised during the verification process;\n     * undefined if there is none.\n     * @param iframe - The iframe element containing the verification web page\n     * provided by the card issuer.\n     * @param cancel - A function, when called, will cancel the verification\n     * process and remove the iframe.\n     */\n    addFrame(error: Error | undefined, iframe: HTMLIFrameElement, cancel: () => Promise<BraintreeVerifyPayload> | undefined): void;\n\n    /**\n     * A callback that gets called when the iframe is about to be removed from\n     * the current page.\n     */\n    removeFrame(): void;\n}\n\nexport interface BraintreeFormOptions {\n    fields: BraintreeFormFieldsMap | BraintreeStoredCardFieldsMap;\n    styles?: BraintreeFormFieldStylesMap;\n    onBlur?(data: BraintreeFormFieldBlurEventData): void;\n    onCardTypeChange?(data: BraintreeFormFieldCardTypeChangeEventData): void;\n    onFocus?(data: BraintreeFormFieldFocusEventData): void;\n    onValidate?(data: BraintreeFormFieldValidateEventData): void;\n    onEnter?(data: BraintreeFormFieldEnterEventData): void;\n}\n\nexport enum BraintreeFormFieldType {\n    CardCode = 'cardCode',\n    CardCodeVerification = 'cardCodeVerification',\n    CardExpiry = 'cardExpiry',\n    CardName = 'cardName',\n    CardNumber = 'cardNumber',\n    CardNumberVerification = 'cardNumberVerification',\n}\n\nexport interface BraintreeFormFieldsMap {\n    [BraintreeFormFieldType.CardCode]?: BraintreeFormFieldOptions;\n    [BraintreeFormFieldType.CardExpiry]: BraintreeFormFieldOptions;\n    [BraintreeFormFieldType.CardName]: BraintreeFormFieldOptions;\n    [BraintreeFormFieldType.CardNumber]: BraintreeFormFieldOptions;\n}\n\nexport interface BraintreeStoredCardFieldsMap {\n    [BraintreeFormFieldType.CardCodeVerification]?: BraintreeStoredCardFieldOptions;\n    [BraintreeFormFieldType.CardNumberVerification]?: BraintreeStoredCardFieldOptions;\n}\n\nexport interface BraintreeFormFieldOptions {\n    containerId: string;\n    placeholder?: string;\n}\n\nexport interface BraintreeStoredCardFieldOptions extends BraintreeFormFieldOptions {\n    instrumentId: string;\n}\n\nexport interface BraintreeFormFieldStylesMap {\n    default?: BraintreeFormFieldStyles;\n    error?: BraintreeFormFieldStyles;\n    focus?: BraintreeFormFieldStyles;\n}\n\nexport type BraintreeFormFieldStyles = Partial<Pick<\n    CSSStyleDeclaration,\n    'color' |\n    'fontFamily' |\n    'fontSize' |\n    'fontWeight'\n>>;\n\nexport interface BraintreeFormFieldKeyboardEventData {\n    fieldType: string;\n}\n\nexport type BraintreeFormFieldBlurEventData = BraintreeFormFieldKeyboardEventData;\nexport type BraintreeFormFieldEnterEventData = BraintreeFormFieldKeyboardEventData;\nexport type BraintreeFormFieldFocusEventData = BraintreeFormFieldKeyboardEventData;\n\nexport interface BraintreeFormFieldCardTypeChangeEventData {\n    cardType?: string;\n}\n\nexport interface BraintreeFormFieldValidateEventData {\n    errors: {\n        [BraintreeFormFieldType.CardCode]?: BraintreeFormFieldValidateErrorData[];\n        [BraintreeFormFieldType.CardExpiry]?: BraintreeFormFieldValidateErrorData[];\n        [BraintreeFormFieldType.CardName]?: BraintreeFormFieldValidateErrorData[];\n        [BraintreeFormFieldType.CardNumber]?: BraintreeFormFieldValidateErrorData[];\n        [BraintreeFormFieldType.CardCodeVerification]?: BraintreeFormFieldValidateErrorData[];\n        [BraintreeFormFieldType.CardNumberVerification]?: BraintreeFormFieldValidateErrorData[];\n    };\n    isValid: boolean;\n}\n\nexport interface BraintreeFormFieldValidateErrorData {\n    fieldType: string;\n    message: string;\n    type: string;\n}\n","import getOverlayStyle from './overlay-style';\n\nexport interface OverlayOptions {\n    background?: string;\n    id?: string;\n    transitionDuration?: number;\n    hasCloseButton?: boolean;\n    innerHtml?: HTMLElement | DocumentFragment;\n}\n\nexport interface OverlayShowOptions {\n    onClick?(event: MouseEvent): void;\n    onClickClose?(event: MouseEvent): void;\n}\n\nexport interface Elements {\n    element: HTMLElement;\n    mainElement: HTMLElement;\n    closeElement?: HTMLElement;\n}\n\nexport default class Overlay {\n    private _element: HTMLElement;\n    private _mainElement: HTMLElement;\n    private _closeElement?: HTMLElement;\n    private _unregisterClick?: () => void;\n\n    constructor(options?: OverlayOptions) {\n        const { element, closeElement, mainElement } = this._createElements(options);\n\n        this._element = element;\n        this._closeElement = closeElement;\n        this._mainElement = mainElement;\n    }\n\n    show(options?: OverlayShowOptions): void {\n\n        if (this._mainElement.parentElement) {\n            return;\n        }\n\n        this._registerClick(options);\n\n        document.body.appendChild(this._mainElement);\n\n        // Fade In\n        setTimeout(() => this._element.style.opacity = '1');\n    }\n\n    remove(): void {\n        if (!this._mainElement.parentElement) {\n            return;\n        }\n\n        if (this._unregisterClick) {\n            this._unregisterClick();\n        }\n\n        this._removeAfterTransition();\n\n        setTimeout(() => this._element.style.opacity = '0');\n    }\n\n    private _createElements(options?: OverlayOptions): Elements {\n        const element = document.createElement('div');\n        const {\n            background = 'rgba(0, 0, 0, 0.8)',\n            id = 'checkoutOverlay',\n            transitionDuration = 400,\n            hasCloseButton,\n            innerHtml,\n        } = options || {};\n        let mainElement = element;\n        let closeElement: HTMLElement | undefined;\n        let classLayout: string | undefined;\n        let classClose: string | undefined;\n        let classOverlayText: string | undefined;\n\n        if (id) {\n            element.id = id;\n        }\n\n        if (innerHtml) {\n            const overlayText = document.createElement('div');\n            classOverlayText = `${id}--overlayText`;\n            overlayText.className = classOverlayText;\n            overlayText.appendChild(innerHtml);\n\n            element.appendChild(overlayText);\n        }\n\n        if (hasCloseButton) {\n            classClose = `${id}--close`;\n            closeElement = document.createElement('div');\n            closeElement.className =  classClose;\n\n            classLayout = `${id}--layout`;\n            mainElement = document.createElement('div');\n            mainElement.className = classLayout;\n\n            mainElement.appendChild(element);\n            mainElement.appendChild(closeElement);\n        }\n\n        mainElement.appendChild(getOverlayStyle({ id, background, transitionDuration, classLayout, classOverlayText, classClose }));\n\n        return { element, closeElement, mainElement };\n    }\n\n    private _addEventListener(element?: HTMLElement, onClick?: (event: MouseEvent) => void): void {\n        if (!element || !onClick) {\n           return;\n        }\n\n        element.addEventListener('click', onClick);\n    }\n\n    private _removeEventListener(element?: HTMLElement, onClick?: (event: MouseEvent) => void): void {\n        if (!element || !onClick) {\n            return;\n        }\n\n        element.removeEventListener('click', onClick);\n    }\n\n    private _registerClick(options?: OverlayShowOptions): void {\n        if (this._unregisterClick) {\n            this._unregisterClick();\n        }\n\n        if (options) {\n            const { onClick, onClickClose } = options;\n\n            this._addEventListener(this._element, onClick);\n            this._addEventListener(this._closeElement, onClickClose);\n\n            this._unregisterClick = () => {\n                this._removeEventListener(this._element, onClick);\n                this._removeEventListener(this._closeElement, onClickClose);\n                this._unregisterClick = undefined;\n            };\n        }\n    }\n\n    private _removeAfterTransition(): void {\n        const handleTransition: (event: Event) => void = event => {\n            // NOTE: `event` is not correctly typed in this version of TS\n            if ((event as TransitionEvent).propertyName !== 'opacity') {\n                return;\n            }\n\n            if (this._mainElement.parentElement) {\n                this._mainElement.remove();\n            }\n\n            this._element.removeEventListener('transitionend', handleTransition);\n        };\n\n        this._element.addEventListener('transitionend', handleTransition);\n    }\n}\n","interface OverlayStyleOptions {\n    background?: string;\n    id?: string;\n    transitionDuration?: number;\n    classLayout?: string;\n    classOverlayText?: string;\n    classClose?: string;\n}\n\nexport default function getOverlayStyle(options: OverlayStyleOptions): HTMLElement {\n    const { id, background, transitionDuration, classLayout, classOverlayText, classClose } = options;\n    const styles = document.createElement('style');\n    const addClassLayout = classLayout ? `, .${classLayout}` : '';\n\n    styles.id = `${id}--styles`;\n    styles.type = 'text/css';\n    styles.innerText = `\n        #${id}${addClassLayout} {\n            display: block;\n            height: 100%;\n            width: 100%;\n            left: 0;\n            top: 0;\n            position: fixed;\n            z-index: 2147483647;\n        }\n        #${id} {\n            transition: opacity ${transitionDuration}ms ease-out;\n            background: ${background};\n            opacity: 0;\n        }\n    `;\n\n    if (classOverlayText) {\n        styles.innerText += `\n             #${id} {\n                display: flex;\n                align-items: center;\n                justify-content: center;\n             }\n             #${id} .${classOverlayText} {\n                color: white;\n                max-width: 330px;\n                font-size: 1.2em;\n                text-align: center;\n             }\n        `;\n    }\n\n    if (classClose) {\n        styles.innerText += `\n            #${id} {\n                opacity: 1;\n            }\n            .${classLayout} .${classClose} {\n                position: fixed;\n                right: 16px;\n                top: 16px;\n                width: 16px;\n                height: 16px;\n                opacity: 0.6;\n                cursor: pointer;\n                z-index: 3147483647;\n            }\n            .${classLayout} .${classClose}::after, .${classLayout} .${classClose}::before {\n                position: absolute;\n                left: 8px;\n                content: '';\n                height: 16px;\n                width: 2px;\n                background-color: #fff;\n            }\n            .${classLayout} .${classClose}::after {\n                transform: rotate(-45deg);\n            }\n            .${classLayout} .${classClose}::before {\n                transform: rotate(45deg);\n            }\n        `;\n    }\n\n    return styles;\n}\n","import { StandardError } from '../../common/error/errors';\n\nexport interface PaymentInvalidFormErrorDetails {\n    [key: string]: Array<{ message: string; type: string }>;\n}\n\nexport default class PaymentInvalidFormError extends StandardError {\n    constructor(\n        public details: PaymentInvalidFormErrorDetails,\n        message?: string\n    ) {\n        super(message || 'Unable to proceed because the payment form contains invalid data.');\n\n        this.name = 'PaymentInvalidFormError';\n        this.type = 'payment_invalid_form';\n    }\n}\n","import { InvalidArgumentError } from '../../../common/error/errors';\n\nimport { BraintreeFormFieldOptions, BraintreeFormFieldStyles, BraintreeFormFieldStylesMap } from './braintree-payment-options';\n\nexport default class BraintreeRegularField {\n    private _input: HTMLInputElement;\n\n    constructor(\n        private _options: BraintreeFormFieldOptions,\n        private _styles?: BraintreeFormFieldStylesMap\n    ) {\n        this._input = document.createElement('input');\n        this._input.style.backgroundColor = 'transparent';\n        this._input.style.border = '0';\n        this._input.style.display = 'block';\n        this._input.style.height = '100%';\n        this._input.style.margin = '0';\n        this._input.style.outline = 'none';\n        this._input.style.padding = '0';\n        this._input.style.width = '100%';\n        this._input.placeholder = this._options.placeholder || '';\n\n        this._input.addEventListener('blur', this._handleBlur);\n        this._input.addEventListener('focus', this._handleFocus);\n\n        this._applyStyles(this._styles?.default);\n    }\n\n    getValue(): string {\n        return this._input.value;\n    }\n\n    attach(): void {\n        const container = document.getElementById(this._options.containerId);\n\n        if (!container) {\n            throw new InvalidArgumentError();\n        }\n\n        container.appendChild(this._input);\n    }\n\n    detach(): void {\n        this._input.parentNode?.removeChild(this._input);\n    }\n\n    on(event: string, callback: () => void): void {\n        this._input.addEventListener(event, callback);\n    }\n\n    off(event: string, callback: () => void): void {\n        this._input.removeEventListener(event, callback);\n    }\n\n    private _applyStyles(styles?: BraintreeFormFieldStyles): void {\n        if (!styles) {\n            return;\n        }\n\n        const styleKeys = Object.keys(styles) as Array<keyof BraintreeFormFieldStyles>;\n\n        styleKeys.forEach(key => {\n            this._input.style[key] = styles[key] || '';\n        });\n    }\n\n    private _handleBlur: (event: Event) => void = () => {\n        this._applyStyles(this._styles?.default);\n    };\n\n    private _handleFocus: (event: Event) => void = () => {\n        this._applyStyles(this._styles?.focus);\n    };\n}\n","import { isEmpty, isNil, omitBy, Dictionary } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentInvalidFormError, PaymentInvalidFormErrorDetails } from '../../errors';\nimport { NonceInstrument } from '../../payment';\n\nimport { BraintreeBillingAddressRequestData, BraintreeHostedFields, BraintreeHostedFieldsCreatorConfig, BraintreeHostedFieldsState, BraintreeHostedFormError } from './braintree';\nimport { BraintreeFormFieldsMap, BraintreeFormFieldStyles, BraintreeFormFieldStylesMap, BraintreeFormFieldType, BraintreeFormFieldValidateErrorData, BraintreeFormFieldValidateEventData, BraintreeFormOptions, BraintreeStoredCardFieldsMap } from './braintree-payment-options';\nimport BraintreeRegularField from './braintree-regular-field';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\nimport { isBraintreeFormFieldsMap } from './is-braintree-form-fields-map';\n\nenum BraintreeHostedFormType {\n    CreditCard,\n    StoredCardVerification,\n}\n\nexport default class BraintreeHostedForm {\n    private _cardFields?: BraintreeHostedFields;\n    private _cardNameField?: BraintreeRegularField;\n    private _formOptions?: BraintreeFormOptions;\n    private _type?: BraintreeHostedFormType;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator\n    ) {}\n\n    async initialize(options: BraintreeFormOptions): Promise<boolean> {\n        this._formOptions = options;\n\n        this._type = isBraintreeFormFieldsMap(options.fields) ?\n            BraintreeHostedFormType.CreditCard :\n            BraintreeHostedFormType.StoredCardVerification;\n\n        const fields = this._mapFieldOptions(options.fields);\n\n        if (isEmpty(fields)) {\n            return false;\n        }\n\n        this._cardFields = await this._braintreeSDKCreator.createHostedFields({\n            fields,\n            styles: options.styles && this._mapStyleOptions(options.styles),\n        });\n\n        this._cardFields.on('blur', this._handleBlur);\n        this._cardFields.on('focus', this._handleFocus);\n        this._cardFields.on('cardTypeChange', this._handleCardTypeChange);\n        this._cardFields.on('validityChange', this._handleValidityChange);\n        this._cardFields.on('inputSubmitRequest', this._handleInputSubmitRequest);\n\n        if (isBraintreeFormFieldsMap(options.fields)) {\n            this._cardNameField = new BraintreeRegularField(\n                options.fields.cardName,\n                options.styles\n            );\n            this._cardNameField.on('blur', this._handleNameBlur);\n            this._cardNameField.on('focus', this._handleNameFocus);\n            this._cardNameField.attach();\n        }\n\n        return true;\n    }\n\n    async deinitialize(): Promise<void> {\n        await this._cardFields?.teardown();\n        this._cardNameField?.detach();\n    }\n\n    async tokenize(billingAddress: Address): Promise<NonceInstrument> {\n        if (!this._cardFields) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        try {\n            const { nonce } = await this._cardFields.tokenize(omitBy({\n                billingAddress: billingAddress && this._mapBillingAddress(billingAddress),\n                cardholderName: this._cardNameField?.getValue(),\n            }, isNil));\n\n            this._formOptions?.onValidate?.({\n                isValid: true,\n                errors: {},\n            });\n\n            return { nonce };\n        } catch (error) {\n            const errors = this._mapTokenizeError(error);\n\n            if (errors) {\n                this._formOptions?.onValidate?.({\n                    isValid: false,\n                    errors,\n                });\n\n                throw new PaymentInvalidFormError(errors as PaymentInvalidFormErrorDetails);\n            }\n\n            throw error;\n        }\n    }\n\n    async tokenizeForStoredCardVerification(): Promise<NonceInstrument> {\n        if (!this._cardFields) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        try {\n            const { nonce } = await this._cardFields.tokenize(omitBy({\n                cardholderName: this._cardNameField?.getValue(),\n            }, isNil));\n\n            this._formOptions?.onValidate?.({\n                isValid: true,\n                errors: {},\n            });\n\n            return { nonce };\n        } catch (error) {\n            const errors = this._mapTokenizeError(error);\n\n            if (errors) {\n                this._formOptions?.onValidate?.({\n                    isValid: false,\n                    errors,\n                });\n\n                throw new PaymentInvalidFormError(errors as PaymentInvalidFormErrorDetails);\n            }\n\n            throw error;\n        }\n    }\n\n    private _mapBillingAddress(billingAddress: Address): BraintreeBillingAddressRequestData {\n        return {\n            countryName: billingAddress.country,\n            postalCode: billingAddress.postalCode,\n            streetAddress: billingAddress.address2 ?\n                `${billingAddress.address1} ${billingAddress.address2}` :\n                billingAddress.address1,\n        };\n    }\n\n    private _mapFieldOptions(\n        fields: BraintreeFormFieldsMap | BraintreeStoredCardFieldsMap\n    ): BraintreeHostedFieldsCreatorConfig['fields'] {\n        if (isBraintreeFormFieldsMap(fields)) {\n            return omitBy({\n                number: {\n                    container: `#${fields.cardNumber.containerId}`,\n                    placeholder: fields.cardNumber.placeholder,\n                },\n                expirationDate: {\n                    container: `#${fields.cardExpiry.containerId}`,\n                    placeholder: fields.cardExpiry.placeholder,\n                },\n                cvv: fields.cardCode && {\n                    container: `#${fields.cardCode.containerId}`,\n                    placeholder: fields.cardCode.placeholder,\n                },\n            }, isNil);\n        }\n\n        return omitBy({\n            number: fields.cardNumberVerification && {\n                container: `#${fields.cardNumberVerification.containerId}`,\n                placeholder: fields.cardNumberVerification.placeholder,\n            },\n            cvv: fields.cardCodeVerification && {\n                container: `#${fields.cardCodeVerification.containerId}`,\n                placeholder: fields.cardCodeVerification.placeholder,\n            },\n        }, isNil);\n    }\n\n    private _mapStyleOptions(\n        options: BraintreeFormFieldStylesMap\n    ): BraintreeHostedFieldsCreatorConfig['styles'] {\n        const mapStyles = (styles: BraintreeFormFieldStyles = {}) => omitBy({\n            color: styles.color,\n            'font-family': styles.fontFamily,\n            'font-size': styles.fontSize,\n            'font-weight': styles.fontWeight,\n        }, isNil) as Dictionary<string>;\n\n        return {\n            input: mapStyles(options.default),\n            '.invalid': mapStyles(options.error),\n            ':focus': mapStyles(options.focus),\n        };\n    }\n\n    private _mapFieldType(type: string): BraintreeFormFieldType {\n        switch (type) {\n        case 'number':\n            return this._type === BraintreeHostedFormType.StoredCardVerification ?\n                BraintreeFormFieldType.CardNumberVerification :\n                BraintreeFormFieldType.CardNumber;\n\n        case 'expirationDate':\n            return BraintreeFormFieldType.CardExpiry;\n\n        case 'cvv':\n            return this._type === BraintreeHostedFormType.StoredCardVerification ?\n                BraintreeFormFieldType.CardCodeVerification :\n                BraintreeFormFieldType.CardCode;\n\n        default:\n            throw new Error('Unexpected field type');\n        }\n    }\n\n    private _mapValidationErrors(\n        fields: BraintreeHostedFieldsState['fields']\n    ): BraintreeFormFieldValidateEventData['errors'] {\n        return (Object.keys(fields) as Array<keyof BraintreeHostedFieldsState['fields']>)\n            .reduce((result, fieldKey) => ({\n                ...result,\n                [this._mapFieldType(fieldKey)]: fields[fieldKey]?.isValid ? undefined : [\n                    this._createInvalidError(this._mapFieldType(fieldKey)),\n                ],\n            }), {});\n    }\n\n    private _mapTokenizeError(\n        error: BraintreeHostedFormError\n    ): BraintreeFormFieldValidateEventData['errors'] | undefined {\n        if (error.code === 'HOSTED_FIELDS_FIELDS_EMPTY') {\n            return {\n                [this._mapFieldType('cvv')]: [\n                    this._createRequiredError(this._mapFieldType('cvv')),\n                ],\n                [this._mapFieldType('expirationDate')]: [\n                    this._createRequiredError(this._mapFieldType('expirationDate')),\n                ],\n                [this._mapFieldType('number')]: [\n                    this._createRequiredError(this._mapFieldType('number')),\n                ],\n            };\n        }\n\n        return error?.details?.invalidFieldKeys?.reduce((result, fieldKey) => ({\n            ...result,\n            [this._mapFieldType(fieldKey)]: [\n                this._createInvalidError(this._mapFieldType(fieldKey)),\n            ],\n        }), {});\n    }\n\n    private _createRequiredError(fieldType: BraintreeFormFieldType): BraintreeFormFieldValidateErrorData {\n        switch (fieldType) {\n        case BraintreeFormFieldType.CardCodeVerification:\n        case BraintreeFormFieldType.CardCode:\n            return {\n                fieldType,\n                message: 'CVV is required',\n                type: 'required',\n            };\n\n        case BraintreeFormFieldType.CardNumberVerification:\n        case BraintreeFormFieldType.CardNumber:\n            return {\n                fieldType,\n                message: 'Credit card number is required',\n                type: 'required',\n            };\n\n        case BraintreeFormFieldType.CardExpiry:\n            return {\n                fieldType,\n                message: 'Expiration date is required',\n                type: 'required',\n            };\n\n        case BraintreeFormFieldType.CardName:\n            return {\n                fieldType,\n                message: 'Full name is required',\n                type: 'required',\n            };\n\n        default:\n            return {\n                fieldType,\n                message: 'Field is required',\n                type: 'required',\n            };\n        }\n    }\n\n    private _createInvalidError(fieldType: BraintreeFormFieldType): BraintreeFormFieldValidateErrorData {\n        switch (fieldType) {\n        case BraintreeFormFieldType.CardCodeVerification:\n            return {\n                fieldType,\n                message: 'Invalid card code',\n                type: 'invalid_card_code',\n            };\n\n        case BraintreeFormFieldType.CardNumberVerification:\n            return {\n                fieldType,\n                message: 'Invalid card number',\n                type: 'invalid_card_number',\n            };\n\n        case BraintreeFormFieldType.CardCode:\n            return {\n                fieldType,\n                message: 'Invalid card code',\n                type: 'invalid_card_code',\n            };\n\n        case BraintreeFormFieldType.CardExpiry:\n            return {\n                fieldType,\n                message: 'Invalid card expiry',\n                type: 'invalid_card_expiry',\n            };\n\n        case BraintreeFormFieldType.CardNumber:\n            return {\n                fieldType,\n                message: 'Invalid card number',\n                type: 'invalid_card_number',\n            };\n\n        default:\n            return {\n                fieldType,\n                message: 'Invalid field',\n                type: 'invalid',\n            };\n        }\n    }\n\n    private _handleBlur: (event: BraintreeHostedFieldsState) => void = event => {\n        this._formOptions?.onBlur?.({\n            fieldType: this._mapFieldType(event.emittedBy),\n        });\n    };\n\n    private _handleNameBlur: () => void = () => {\n        this._formOptions?.onBlur?.({\n            fieldType: BraintreeFormFieldType.CardName,\n        });\n    };\n\n    private _handleFocus: (event: BraintreeHostedFieldsState) => void = event => {\n        this._formOptions?.onFocus?.({\n            fieldType: this._mapFieldType(event.emittedBy),\n        });\n    };\n\n    private _handleNameFocus: () => void = () => {\n        this._formOptions?.onFocus?.({\n            fieldType: BraintreeFormFieldType.CardName,\n        });\n    };\n\n    private _handleCardTypeChange: (event: BraintreeHostedFieldsState) => void = event => {\n        this._formOptions?.onCardTypeChange?.({\n            cardType: event.cards[0]?.type,\n        });\n    };\n\n    private _handleInputSubmitRequest: (event: BraintreeHostedFieldsState) => void = event => {\n        this._formOptions?.onEnter?.({\n            fieldType: this._mapFieldType(event.emittedBy),\n        });\n    };\n\n    private _handleValidityChange: (event: BraintreeHostedFieldsState) => void = event => {\n        this._formOptions?.onValidate?.({\n            isValid: (Object.keys(event.fields) as Array<keyof BraintreeHostedFieldsState['fields']>)\n                .every(key => event.fields[key]?.isValid),\n            errors: this._mapValidationErrors(event.fields),\n        });\n    };\n}\n","import { BraintreeFormFieldsMap, BraintreeStoredCardFieldsMap } from './braintree-payment-options';\n\nexport function isBraintreeFormFieldsMap(\n    fields: BraintreeFormFieldsMap | BraintreeStoredCardFieldsMap\n): fields is BraintreeFormFieldsMap {\n    return !!(fields as BraintreeFormFieldsMap).cardNumber;\n}\n\nexport function isBraintreeStoredCardFieldsMap(\n    fields: BraintreeFormFieldsMap | BraintreeStoredCardFieldsMap\n): fields is BraintreeStoredCardFieldsMap {\n    return !!(\n        (fields as BraintreeStoredCardFieldsMap).cardCodeVerification ||\n        (fields as BraintreeStoredCardFieldsMap).cardNumberVerification\n    );\n}\n","import { ThreeDSecure, ThreeDSecureToken } from '../../payment';\n\nexport const CardinalSignatureValidationErrors = [100004, 1010, 1011, 1020];\n\nexport interface CardinalSDK {\n    configure(params: CardinalConfiguration): void;\n    on(params: CardinalEventType, callback: CardinalEventMap[CardinalEventType]): void;\n    off(params: CardinalEventType): void;\n    setup<K extends keyof CardinalInitializationDataMap>(initializationType: K, initializationData: CardinalInitializationDataMap[K]): void;\n    trigger(event: CardinalTriggerEvents, data?: string): Promise<CardinalBinProcessResponse | void>;\n    continue(paymentBrand: CardinalPaymentBrand, continueObject: CardinalContinue, order: CardinalPartialOrder): void;\n    start(paymentBrand: CardinalPaymentBrand, order: CardinalPartialOrder, jwt?: string): void;\n}\n\nexport interface CardinalWindow extends Window {\n    Cardinal?: CardinalSDK;\n}\n\nexport interface CardinalEventMap {\n    [CardinalEventType.SetupCompleted](setupCompleteData: CardinalSetupCompletedData): void;\n    [CardinalEventType.Validated](data: CardinalValidatedData, jwt?: string): void;\n}\n\nexport type CardinalConfiguration = Partial<{\n    logging: {\n        level: string;\n    };\n    payment: {\n        view: string;\n        framework: string;\n        displayLoading: boolean;\n    };\n}>;\n\nexport interface CardinalSetupCompletedData {\n    sessionId: string;\n    modules: CardinalModuleState[];\n}\n\nexport interface CardinalModuleState {\n    loaded: boolean;\n    module: string;\n}\n\nexport enum CardinalInitializationType {\n    Init = 'init',\n    Complete = 'complete',\n    Confirm = 'confirm',\n}\n\nexport interface CardinalInitializationDataMap {\n    [CardinalInitializationType.Init]: CardinalInitTypeData;\n    [CardinalInitializationType.Complete]: CardinalCompleteTypeData;\n    [CardinalInitializationType.Confirm]: CardinalConfirmTypeData;\n}\n\nexport interface CardinalInitTypeData {\n    jwt: string;\n}\n\nexport interface CardinalCompleteTypeData {\n    Status: string;\n}\n\nexport interface CardinalConfirmTypeData {\n    jwt: string;\n    cardinalResponseJwt: string;\n}\n\nexport interface CardinalValidatedData {\n    ActionCode?: CardinalValidatedAction;\n    ErrorDescription: string;\n    ErrorNumber: number;\n    Validated?: boolean;\n    Payment?: CardinalPayment;\n}\n\nexport interface CardinalPayment {\n    ExtendedData?: CardinalCCAExtendedData;\n    ProcessorTransactionId: string;\n    Type: CardinalPaymentType;\n}\n\nexport interface CardinalBinProcessResponse {\n    Status: boolean;\n}\n\nexport interface CardinalContinue {\n    AcsUrl: string;\n    Payload: string;\n}\n\nexport interface CardinalPartialOrder {\n    OrderDetails: CardinalOrderDetails;\n    Consumer?: CardinalConsumer;\n}\n\nexport interface CardinalConsumer {\n    Email1?: string;\n    Email2?: string;\n    ShippingAddress?: CardinalAddress;\n    BillingAddress?: CardinalAddress;\n    Account?: CardinalAccount;\n}\n\nexport interface CardinalAccount {\n    AccountNumber: number;\n    ExpirationMonth: number;\n    ExpirationYear: number;\n    NameOnAccount: string;\n    CardCode: number;\n}\n\nexport interface CardinalAddress {\n    FullName?: string;\n    FirstName: string;\n    MiddleName?: string;\n    LastName: string;\n    Address1: string;\n    Address2?: string;\n    Address3?: string;\n    City: string;\n    State: string;\n    PostalCode: string;\n    CountryCode: string;\n    Phone1?: string;\n    Phone2?: string;\n}\n\nexport interface CardinalOrderDetails {\n    OrderNumber: string;\n    Amount: number;\n    CurrencyCode: string;\n    OrderDescription?: string;\n    OrderChannel: string;\n    TransactionId?: string;\n}\n\nexport type CardinalCCAExtendedData = Partial<{\n    CAVV: string;\n    ECIFlag: string;\n    PAResStatus: string;\n    SignatureVerification: string;\n    XID: string;\n    UCAFIndicator: string;\n    ChallengeCancel: string;\n}>;\n\nexport enum CardinalEventType {\n    SetupCompleted = 'payments.setupComplete',\n    Validated = 'payments.validated',\n}\n\nexport enum CardinalValidatedAction {\n    Success = 'SUCCESS',\n    NoAction = 'NOACTION',\n    Failure = 'FAILURE',\n    Error = 'ERROR',\n}\n\nexport enum CardinalPaymentType {\n    CCA = 'CCA',\n    Paypal = 'Paypal',\n    Wallet = 'Wallet',\n    VisaCheckout = 'VisaCheckout',\n    ApplePay = 'ApplePay',\n    DiscoverWallet = 'DiscoverWallet',\n}\n\nexport enum CardinalTriggerEvents {\n    BinProcess = 'bin.process',\n}\n\nexport enum CardinalPaymentBrand {\n    CCA = 'cca',\n}\n\nexport enum CardinalSignatureVerification {\n    Yes = 'Y',\n    No = 'N',\n}\n\nexport type CardinalThreeDSecureToken = Pick<ThreeDSecure, 'xid'> | ThreeDSecureToken;\n","import { supportsPopups } from '@braintree/browser-detection';\n\nimport { Address } from '../../../address';\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { Overlay } from '../../../common/overlay';\nimport { CancellablePromise } from '../../../common/utility';\nimport { OrderPaymentRequestBody } from '../../../order';\nimport { PaymentMethodCancelledError } from '../../errors';\nimport { CreditCardInstrument, NonceInstrument } from '../../payment';\n\nimport { BraintreePaypal, BraintreeRequestData, BraintreeShippingAddressOverride, BraintreeThreeDSecure, BraintreeTokenizePayload, BraintreeVerifyPayload } from './braintree';\nimport BraintreeHostedForm from './braintree-hosted-form';\nimport { BraintreeFormOptions, BraintreePaymentInitializeOptions, BraintreeThreeDSecureOptions } from './braintree-payment-options';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\n\nexport interface PaypalConfig {\n    amount: number;\n    currency: string;\n    locale: string;\n    offerCredit?: boolean;\n    shippingAddressOverride?: BraintreeShippingAddressOverride;\n    shouldSaveInstrument?: boolean;\n}\n\nexport default class BraintreePaymentProcessor {\n    private _threeDSecureOptions?: BraintreeThreeDSecureOptions;\n\n    constructor(\n        private _braintreeSDKCreator: BraintreeSDKCreator,\n        private _braintreeHostedForm: BraintreeHostedForm,\n        private _overlay: Overlay\n    ) {}\n\n    initialize(clientToken: string, options?: BraintreePaymentInitializeOptions): void {\n        this._braintreeSDKCreator.initialize(clientToken);\n        this._threeDSecureOptions = options && options.threeDSecure;\n    }\n\n    preloadPaypal(): Promise<BraintreePaypal> {\n        return this._braintreeSDKCreator.getPaypal();\n    }\n\n    async tokenizeCard(payment: OrderPaymentRequestBody, billingAddress: Address): Promise<NonceInstrument> {\n        const requestData = this._mapToCreditCard(payment.paymentData as CreditCardInstrument, billingAddress);\n        const client = await this._braintreeSDKCreator.getClient();\n        const { creditCards } = await client.request(requestData);\n\n        return { nonce: creditCards[0].nonce };\n    }\n\n    async verifyCard(payment: OrderPaymentRequestBody, billingAddress: Address, amount: number): Promise<BraintreeVerifyPayload> {\n        const [{ nonce }, threeDSecure] = await Promise.all([\n            this.tokenizeCard(payment, billingAddress),\n            this._braintreeSDKCreator.get3DS(),\n        ]);\n\n        return this._present3DSChallenge(threeDSecure, amount, nonce);\n    }\n\n    paypal({ shouldSaveInstrument, ...config }: PaypalConfig): Promise<BraintreeTokenizePayload> {\n        const newWindowFlow = supportsPopups();\n\n        return this._braintreeSDKCreator.getPaypal()\n            .then(paypal => {\n                if (newWindowFlow) {\n                    this._overlay.show({\n                        onClick: () => paypal.focusWindow(),\n                    });\n                }\n\n                return paypal.tokenize({\n                    enableShippingAddress: true,\n                    flow: shouldSaveInstrument ? 'vault' : 'checkout',\n                    useraction: 'commit',\n                    ...config,\n                });\n            })\n            .then(response => {\n                this._overlay.remove();\n\n                return response;\n            })\n            .catch(error => {\n                this._overlay.remove();\n\n                throw error;\n            });\n    }\n\n    getSessionId(): Promise<string | undefined> {\n        return this._braintreeSDKCreator.getDataCollector()\n            .then(({ deviceData }) => deviceData);\n    }\n\n    /**\n     * @deprecated Use getSessionId() and combine them in the consumer.\n     */\n    appendSessionId(processedPayment: Promise<NonceInstrument>): Promise<NonceInstrument> {\n        return processedPayment\n            .then(paymentData => Promise.all([paymentData, this._braintreeSDKCreator.getDataCollector()]))\n            .then(([paymentData, { deviceData }]) => ({ ...paymentData, deviceSessionId: deviceData }));\n    }\n\n    deinitialize(): Promise<void> {\n        return this._braintreeSDKCreator.teardown();\n    }\n\n    async initializeHostedForm(options: BraintreeFormOptions): Promise<boolean> {\n        return await this._braintreeHostedForm.initialize(options);\n    }\n\n    async deinitializeHostedForm(): Promise<void> {\n        await this._braintreeHostedForm.deinitialize();\n    }\n\n    tokenizeHostedForm(billingAddress: Address): Promise<NonceInstrument> {\n        return this._braintreeHostedForm.tokenize(billingAddress);\n    }\n\n    tokenizeHostedFormForStoredCardVerification(): Promise<NonceInstrument> {\n        return this._braintreeHostedForm.tokenizeForStoredCardVerification();\n    }\n\n    async verifyCardWithHostedForm(billingAddress: Address, amount: number): Promise<NonceInstrument> {\n        const [{ nonce }, threeDSecure] = await Promise.all([\n            this._braintreeHostedForm.tokenize(billingAddress),\n            this._braintreeSDKCreator.get3DS(),\n        ]);\n\n        return this._present3DSChallenge(threeDSecure, amount, nonce);\n    }\n\n    private _present3DSChallenge(\n        threeDSecure: BraintreeThreeDSecure,\n        amount: number,\n        nonce: string\n    ): Promise<BraintreeVerifyPayload> {\n        if (!this._threeDSecureOptions || !nonce) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const { addFrame, removeFrame } = this._threeDSecureOptions;\n        const cancelVerifyCard = async () => {\n            const response = await threeDSecure.cancelVerifyCard();\n\n            verification.cancel(new PaymentMethodCancelledError());\n\n            return response;\n        };\n\n        const verification = new CancellablePromise(\n            threeDSecure.verifyCard({\n                addFrame: (error, iframe) => {\n                    addFrame(error, iframe, cancelVerifyCard);\n                },\n                amount,\n                nonce,\n                removeFrame,\n                onLookupComplete: (_data, next) => {\n                    next();\n                },\n            })\n        );\n\n        return verification.promise;\n    }\n\n    private _mapToCreditCard(creditCard: CreditCardInstrument, billingAddress?: Address): BraintreeRequestData {\n        return {\n            data: {\n                creditCard: {\n                    cardholderName: creditCard.ccName,\n                    number: creditCard.ccNumber,\n                    cvv: creditCard.ccCvv,\n                    expirationDate: `${creditCard.ccExpiry.month}/${creditCard.ccExpiry.year}`,\n                    options: {\n                        validate: false,\n                    },\n                    billingAddress: billingAddress && {\n                        countryCodeAlpha2: billingAddress.countryCode,\n                        locality: billingAddress.city,\n                        countryName: billingAddress.country,\n                        postalCode: billingAddress.postalCode,\n                        streetAddress: billingAddress.address2 ?\n                            `${billingAddress.address1} ${billingAddress.address2}` :\n                            billingAddress.address1,\n                    },\n                },\n            },\n            endpoint: 'payment_methods/credit_cards',\n            method: 'post',\n        };\n    }\n}\n","import { pick } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodFailedError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport { CreditCardInstrument, NonceInstrument, PaymentInstrument, PaymentInstrumentMeta, VaultedInstrumentWithNonceVerification } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport BraintreePaymentProcessor from './braintree-payment-processor';\n\nexport default class BraintreeCreditCardPaymentStrategy implements PaymentStrategy {\n    private _is3dsEnabled?: boolean;\n    private _isHostedFormInitialized?: boolean;\n    private _deviceSessionId?: string;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _braintreePaymentProcessor: BraintreePaymentProcessor\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(options.methodId));\n        const paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n\n        if (!paymentMethod || !paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        try {\n            this._braintreePaymentProcessor.initialize(paymentMethod.clientToken, options.braintree);\n\n            if (this._isHostedPaymentFormEnabled(options.methodId, options.gatewayId) && options.braintree?.form) {\n                this._isHostedFormInitialized = await this._braintreePaymentProcessor.initializeHostedForm(options.braintree.form);\n            }\n\n            this._is3dsEnabled = paymentMethod.config.is3dsEnabled;\n            this._deviceSessionId = await this._braintreePaymentProcessor.getSessionId();\n        } catch (error) {\n            this._handleError(error);\n        }\n\n        return this._store.getState();\n    }\n\n    async execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        const state = await this._store.dispatch(\n            this._orderActionCreator.submitOrder(order, options)\n        );\n\n        const {\n            billingAddress: { getBillingAddressOrThrow },\n            order: { getOrderOrThrow },\n            payment: { isPaymentDataRequired },\n        } = state;\n\n        if (!isPaymentDataRequired(order.useStoreCredit)) {\n            return state;\n        }\n\n        try {\n            return this._store.dispatch(this._paymentActionCreator.submitPayment({\n                ...payment,\n                paymentData: this._isHostedFormInitialized ?\n                    await this._prepareHostedPaymentData(\n                        payment,\n                        getBillingAddressOrThrow(),\n                        getOrderOrThrow().orderAmount\n                    ) :\n                    await this._preparePaymentData(\n                        payment,\n                        getBillingAddressOrThrow(),\n                        getOrderOrThrow().orderAmount\n                    ),\n            }));\n        } catch (error) {\n            this._handleError(error);\n        }\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    async deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._isHostedFormInitialized = false;\n\n        await Promise.all([\n            this._braintreePaymentProcessor.deinitialize(),\n            this._braintreePaymentProcessor.deinitializeHostedForm(),\n        ]);\n\n        return this._store.getState();\n    }\n\n    private _handleError(error: Error): never {\n        if (error.name === 'BraintreeError') {\n            throw new PaymentMethodFailedError(error.message);\n        }\n\n        throw error;\n    }\n\n    private async _preparePaymentData(payment: OrderPaymentRequestBody, billingAddress: Address, orderAmount: number): Promise<PaymentInstrument & PaymentInstrumentMeta> {\n        const commonPaymentData = { deviceSessionId: this._deviceSessionId };\n\n        if (this._isSubmittingWithStoredCard(payment) || this._isStoringNewCard(payment)) {\n            return {\n                ...commonPaymentData,\n                ...payment.paymentData,\n            };\n        }\n\n        if (this._shouldPerform3DSVerification(payment)) {\n            return {\n                ...commonPaymentData,\n                ...this._mapToNonceInstrument({\n                    ...payment.paymentData,\n                    ...await this._braintreePaymentProcessor.verifyCard(payment, billingAddress, orderAmount),\n                }),\n            };\n        }\n\n        return {\n            ...commonPaymentData,\n            ...this._mapToNonceInstrument({\n                ...payment.paymentData,\n                ...await this._braintreePaymentProcessor.tokenizeCard(payment, billingAddress),\n            }),\n        };\n    }\n\n    private async _prepareHostedPaymentData(payment: OrderPaymentRequestBody, billingAddress: Address, orderAmount: number): Promise<PaymentInstrument & PaymentInstrumentMeta> {\n        const commonPaymentData = { deviceSessionId: this._deviceSessionId };\n\n        if (this._shouldPerform3DSVerification(payment)) {\n            return {\n                ...commonPaymentData,\n                ...this._mapToNonceInstrument({\n                    ...payment.paymentData,\n                    ...await this._braintreePaymentProcessor.verifyCardWithHostedForm(billingAddress, orderAmount),\n                }),\n            };\n        }\n\n        if (this._isSubmittingWithStoredCard(payment)) {\n            return {\n                ...commonPaymentData,\n                ...this._mapToVaultedInstrumentWithNonceVerification({\n                    ...payment.paymentData,\n                    ...await this._braintreePaymentProcessor.tokenizeHostedFormForStoredCardVerification(),\n                }),\n            };\n        }\n\n        return {\n            ...commonPaymentData,\n            ...this._mapToNonceInstrument({\n                ...payment.paymentData,\n                ...await this._braintreePaymentProcessor.tokenizeHostedForm(billingAddress),\n            }),\n        };\n    }\n\n    private _mapToNonceInstrument(instrument: PaymentInstrument): NonceInstrument {\n        return pick(instrument as NonceInstrument, 'nonce', 'shouldSaveInstrument', 'shouldSetAsDefaultInstrument');\n    }\n\n    private _mapToVaultedInstrumentWithNonceVerification(instrument: PaymentInstrument): VaultedInstrumentWithNonceVerification {\n        return pick(instrument as VaultedInstrumentWithNonceVerification, 'nonce', 'instrumentId');\n    }\n\n    private _isHostedPaymentFormEnabled(methodId?: string, gatewayId?: string): boolean {\n        if (!methodId) {\n            return false;\n        }\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(methodId, gatewayId);\n\n        return paymentMethod.config.isHostedFormEnabled === true;\n    }\n\n    private _isSubmittingWithStoredCard(payment: OrderPaymentRequestBody): boolean {\n        return !!(payment.paymentData && isVaultedInstrument(payment.paymentData));\n    }\n\n    private _isStoringNewCard(payment: OrderPaymentRequestBody): boolean {\n        return !!(payment.paymentData && (payment.paymentData as CreditCardInstrument | NonceInstrument)?.shouldSaveInstrument);\n    }\n\n    private _shouldPerform3DSVerification(payment: OrderPaymentRequestBody): boolean {\n        return !!(this._is3dsEnabled && !this._isSubmittingWithStoredCard(payment));\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodCancelledError, PaymentMethodFailedError } from '../../errors';\nimport isVaultedInstrument, { isHostedVaultedInstrument } from '../../is-vaulted-instrument';\nimport Payment, { FormattedPayload, PaypalInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { BraintreePaymentInitializeOptions } from '../../strategies/braintree';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { BraintreeError } from './braintree';\nimport BraintreePaymentProcessor from './braintree-payment-processor';\nimport isBraintreeError from './is-braintree-error';\nimport mapToBraintreeShippingAddressOverride from './map-to-braintree-shipping-address-override';\n\nexport default class BraintreePaypalPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _braintreePaymentProcessor: BraintreePaymentProcessor,\n        private _credit: boolean = false\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintree: braintreeOptions, methodId } = options;\n\n        if (!this._paymentMethod || !this._paymentMethod.nonce) {\n            this._paymentMethod = this._store.getState().paymentMethods.getPaymentMethodOrThrow(methodId);\n        }\n\n        if (this._paymentMethod.clientToken) {\n            return this._loadPaypal(braintreeOptions);\n        }\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n        this._paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n        if (!this._paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return this._loadPaypal(braintreeOptions);\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        return (payment ? this._preparePaymentData(payment, order.useStoreCredit) : Promise.resolve(payment))\n            .then(payment => Promise.all([payment, this._store.dispatch(this._orderActionCreator.submitOrder(order, options))]))\n            .then(([payment]) => this._store.dispatch(this._paymentActionCreator.submitPayment(payment)))\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return this._braintreePaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _handleError(error: BraintreeError | Error): never {\n        if (!isBraintreeError(error)) {\n            throw error;\n        }\n\n        if (error.code === 'PAYPAL_POPUP_CLOSED') {\n            throw new PaymentMethodCancelledError(error.message);\n        }\n\n        throw new PaymentMethodFailedError(error.message);\n    }\n\n    private async _preparePaymentData(payment: OrderPaymentRequestBody, useStoreCredit?: boolean): Promise<Payment> {\n        const state = this._store.getState();\n\n        const grandTotal = state.checkout.getOutstandingBalance(useStoreCredit);\n        const config = state.config.getStoreConfig();\n\n        if (!grandTotal) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!this._paymentMethod) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const { currency, storeProfile: { storeLanguage } } = config;\n        const { nonce, config: { isVaultingEnabled } } = this._paymentMethod;\n        const { methodId, paymentData = {} } = payment;\n\n        if (nonce) {\n            const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n            this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n            return Promise.resolve({ ...payment, paymentData: this._formattedPayload(nonce) });\n        }\n\n        if (isVaultedInstrument(paymentData) || isHostedVaultedInstrument(paymentData)) {\n            if (!isVaultingEnabled) {\n                throw new InvalidArgumentError('Vaulting is disabled but a vaulted instrument was being used for this transaction');\n            }\n\n            return Promise.resolve(payment);\n        }\n\n        if (paymentData.shouldSaveInstrument && !isVaultingEnabled) {\n            throw new InvalidArgumentError('Vaulting is disabled but shouldSaveInstrument is set to true');\n        }\n\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n\n        const shippingAddressOverride = shippingAddress ? mapToBraintreeShippingAddressOverride(shippingAddress) : undefined;\n\n        return Promise.all([\n            this._braintreePaymentProcessor.paypal({\n                amount: grandTotal,\n                locale: storeLanguage,\n                currency: currency.code,\n                offerCredit: this._credit,\n                shippingAddressOverride,\n                shouldSaveInstrument: paymentData.shouldSaveInstrument || false,\n            }),\n            this._braintreePaymentProcessor.getSessionId(),\n        ]).then(([\n            { nonce, details } = {} as any,\n            sessionId,\n        ]) => ({\n            ...payment,\n            paymentData: this._formattedPayload(nonce, details && details.email, sessionId, paymentData.shouldSaveInstrument, paymentData.shouldSetAsDefaultInstrument),\n        }));\n    }\n\n    private _formattedPayload(token: string, email?: string, sessionId?: string, vaultPaymentInstrument?: boolean, shouldSetAsDefaultInstrument?: boolean): FormattedPayload<PaypalInstrument> {\n        return {\n            formattedPayload: {\n                vault_payment_instrument: vaultPaymentInstrument || null,\n                set_as_default_stored_instrument: shouldSetAsDefaultInstrument || null,\n                device_info: sessionId || null,\n                paypal_account: {\n                    token,\n                    email: email || null,\n                },\n            },\n        };\n    }\n\n    private _loadPaypal(braintreeOptions?: BraintreePaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        try {\n            this._braintreePaymentProcessor.initialize(this._paymentMethod.clientToken, braintreeOptions);\n\n            this._braintreePaymentProcessor.preloadPaypal();\n        } catch (error) {\n            this._handleError(error);\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { BraintreeError } from './braintree';\n\nexport default function isBraintreeError(error: BraintreeError | Error): error is BraintreeError {\n    return error.name === 'BraintreeError';\n}\n","import { Address } from '../../../address';\n\nimport { BraintreeShippingAddressOverride } from './braintree';\n\nexport default function mapToBraintreeShippingAddressOverride(address: Address): BraintreeShippingAddressOverride {\n    return {\n        recipientName: `${address.firstName} ${address.lastName}`,\n        line1: address.address1,\n        line2: address.address2,\n        city: address.city,\n        state: address.stateOrProvinceCode,\n        postalCode: address.postalCode,\n        countryCode: address.countryCode,\n        phone: address.phone,\n    };\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentMethodFailedError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport BraintreeVisaCheckoutPaymentProcessor from './braintree-visacheckout-payment-processor';\nimport { VisaCheckoutPaymentSuccessPayload } from './visacheckout';\nimport VisaCheckoutScriptLoader from './visacheckout-script-loader';\n\nexport default class BraintreeVisaCheckoutPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _braintreeVisaCheckoutPaymentProcessor: BraintreeVisaCheckoutPaymentProcessor,\n        private _visaCheckoutScriptLoader: VisaCheckoutScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { braintreevisacheckout: visaCheckoutOptions, methodId } = options;\n\n        if (!visaCheckoutOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.braintreevisacheckout\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                const checkout = state.checkout.getCheckout();\n                const storeConfig = state.config.getStoreConfig();\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                if (!storeConfig) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n                }\n\n                if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const {\n                    onError = () => {},\n                    onPaymentSelect = () => {},\n                } = visaCheckoutOptions;\n\n                const initOptions = {\n                    locale: storeConfig.storeProfile.storeLanguage,\n                    collectShipping: false,\n                    subtotal: checkout.subtotal,\n                    currencyCode: storeConfig.currency.code,\n                };\n\n                return Promise.all([\n                    this._visaCheckoutScriptLoader.load(this._paymentMethod.config.testMode),\n                    this._braintreeVisaCheckoutPaymentProcessor.initialize(this._paymentMethod.clientToken, initOptions),\n                ])\n                .then(([visaCheckout, visaInitOptions]) => {\n                    visaCheckout.init(visaInitOptions);\n                    visaCheckout.on('payment.success', (paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) =>\n                        this._paymentInstrumentSelected(paymentSuccessPayload)\n                            .then(() => onPaymentSelect())\n                            .catch(error => onError(error))\n                    );\n                    visaCheckout.on('payment.error', (_, error) => onError(error));\n                });\n            })\n            .then(() => this._store.getState());\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData || !this._paymentMethod.initializationData.nonce) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { nonce } = this._paymentMethod.initializationData;\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() =>\n                this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData: { nonce } }))\n            )\n            .catch((error: Error) => this._handleError(error));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return this._braintreeVisaCheckoutPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    private _paymentInstrumentSelected(paymentSuccessPayload: VisaCheckoutPaymentSuccessPayload) {\n        const state = this._store.getState();\n\n        if (!this._paymentMethod) {\n            throw new Error('Payment method not initialized');\n        }\n\n        const { id: methodId } = this._paymentMethod;\n\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            return this._braintreeVisaCheckoutPaymentProcessor.handleSuccess(\n                paymentSuccessPayload,\n                state.shippingAddress.getShippingAddress(),\n                state.billingAddress.getBillingAddress()\n            )\n            .then(() => Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n            ]));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _handleError(error: Error): never {\n        if (error.name === 'BraintreeError') {\n            throw new PaymentMethodFailedError(error.message);\n        }\n\n        throw error;\n    }\n}\n","import { merge, some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { HostedForm } from '../../../hosted-form';\nimport { OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { InstrumentSelector } from '../../instrument';\nimport isCreditCardLike from '../../is-credit-card-like';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { CardinalThreeDSecureToken } from './cardinal';\nimport CardinalClient, { CardinalOrderData } from './cardinal-client';\n\nexport default class CardinalThreeDSecureFlowV2 {\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _cardinalClient: CardinalClient\n    ) {}\n\n    async prepare(method: PaymentMethod): Promise<void> {\n        await this._cardinalClient.load(method.id, method.config.testMode);\n    }\n\n    async start(\n        execute: PaymentStrategy['execute'],\n        payload: OrderRequestBody,\n        options?: PaymentRequestOptions,\n        hostedForm?: HostedForm\n    ): Promise<InternalCheckoutSelectors> {\n        const { instruments: { getCardInstrument } } = this._store.getState();\n        const { payment = { methodId: '' } } = payload;\n        const { paymentData = {} } = payment;\n\n        try {\n            return await execute(payload, options);\n        } catch (error) {\n            if (error instanceof RequestError && error.body.status === 'additional_action_required') {\n                const token = error.body.additional_action_required?.data?.token;\n                const xid = error.body.three_ds_result?.payer_auth_request;\n\n                await this._cardinalClient.configure(token);\n\n                const bin = this._getBin(paymentData, getCardInstrument, hostedForm);\n\n                if (bin) {\n                    await this._cardinalClient.runBinProcess(bin);\n                }\n\n                try {\n                    return await this._submitPayment(payment, { xid }, hostedForm);\n                } catch (error) {\n                    if (error instanceof RequestError && some(error.body.errors, {code: 'three_d_secure_required'})) {\n                        const threeDsResult = error.body.three_ds_result;\n                        const token = threeDsResult?.payer_auth_request;\n\n                        await this._cardinalClient.getThreeDSecureData(threeDsResult, this._getOrderData());\n\n                        return await this._submitPayment(payment, { token }, hostedForm);\n                    }\n\n                    throw error;\n                }\n            }\n\n            throw error;\n        }\n    }\n\n    private _getOrderData(): CardinalOrderData {\n        const store = this._store.getState();\n        const billingAddress = store.billingAddress.getBillingAddressOrThrow();\n        const shippingAddress = store.shippingAddress.getShippingAddress();\n        const { cart: { currency: { code: currencyCode }, cartAmount: amount } } = store.checkout.getCheckoutOrThrow();\n        const id = store.order.getOrderOrThrow().orderId.toString();\n\n        return { billingAddress, shippingAddress, currencyCode, id, amount };\n    }\n\n    private async _submitPayment(\n        payment: OrderPaymentRequestBody,\n        threeDSecure: CardinalThreeDSecureToken,\n        hostedForm?: HostedForm\n    ): Promise<InternalCheckoutSelectors> {\n        const paymentPayload = merge({}, payment, { paymentData: { threeDSecure } });\n\n        if (!hostedForm) {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n        }\n\n        await hostedForm.submit(paymentPayload);\n\n        return this._store.getState();\n    }\n\n    private _getBin(\n        paymentData: NonNullable<OrderPaymentRequestBody['paymentData']>,\n        getCardInstrument: InstrumentSelector['getCardInstrument'],\n        hostedForm?: HostedForm\n    ): string {\n        const instrument = isVaultedInstrument(paymentData) && getCardInstrument(paymentData.instrumentId);\n        const ccNumber = isCreditCardLike(paymentData) && paymentData.ccNumber;\n        const bin = instrument ?\n            instrument.iin :\n            hostedForm ?\n                hostedForm?.getBin() :\n                ccNumber;\n\n        return bin || '';\n    }\n}\n","import isVaultedInstrument from './is-vaulted-instrument';\nimport { CreditCardInstrument, PaymentInstrument } from './payment';\n\nexport default function isCreditCardLike(instrument: PaymentInstrument): instrument is CreditCardInstrument {\n    const card = instrument as CreditCardInstrument;\n\n    return !isVaultedInstrument(card) &&\n        typeof card.ccName === 'string' &&\n        typeof card.ccNumber === 'string' &&\n        typeof card.ccExpiry === 'object' &&\n        typeof card.ccExpiry.month === 'string' &&\n        typeof card.ccExpiry.year === 'string';\n    }\n","import { includes } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethodFailedError } from '../../errors';\nimport { CreditCardInstrument, ThreeDSecureToken, VaultedInstrument } from '../../payment';\nimport { ThreeDsResult } from '../../payment-response-body';\n\nimport { CardinalAccount, CardinalAddress, CardinalConsumer, CardinalEventType, CardinalInitializationType, CardinalPartialOrder, CardinalPaymentBrand, CardinalSignatureValidationErrors, CardinalSignatureVerification, CardinalSDK, CardinalTriggerEvents, CardinalValidatedAction, CardinalValidatedData } from './cardinal';\nimport CardinalScriptLoader from './cardinal-script-loader';\n\nexport type CardinalSupportedPaymentInstrument = CreditCardInstrument | VaultedInstrument;\n\nexport interface CardinalOrderData {\n    billingAddress: BillingAddress;\n    shippingAddress?: Address;\n    currencyCode: string;\n    id: string;\n    amount: number;\n    paymentData?: CreditCardInstrument;\n}\n\nexport default class CardinalClient {\n    private _provider: string = '';\n    private _testMode: boolean = false;\n    private _sdk?: Promise<CardinalSDK>;\n    private _configurationToken: string = '';\n\n    constructor(\n        private _scriptLoader: CardinalScriptLoader\n    ) {}\n\n    load(provider: string, testMode = false): Promise<void> {\n        this._provider = provider;\n        this._testMode = testMode;\n\n        if (!this._sdk) {\n            this._sdk = this._scriptLoader.load(provider, testMode);\n        }\n\n        return this._sdk.then(() => {});\n    }\n\n    configure(clientToken: string): Promise<void> {\n        if (!!this._configurationToken) {\n            if (this._configurationToken === clientToken) {\n                return Promise.resolve();\n            } else {\n                this._sdk = this._scriptLoader.load(`${this._provider}.${Date.now()}`, this._testMode);\n            }\n        }\n\n        return this._getClientSDK()\n            .then(client => new Promise<void>((resolve, reject) => {\n                client.on(CardinalEventType.SetupCompleted, () => {\n                    client.off(CardinalEventType.SetupCompleted);\n                    client.off(CardinalEventType.Validated);\n\n                    this._configurationToken = clientToken;\n\n                    resolve();\n                });\n\n                client.on(CardinalEventType.Validated, (data: CardinalValidatedData) => {\n                    client.off(CardinalEventType.SetupCompleted);\n                    client.off(CardinalEventType.Validated);\n\n                    switch (data.ActionCode) {\n                        case CardinalValidatedAction.Error:\n                            if (includes(CardinalSignatureValidationErrors, data.ErrorNumber)) {\n                                reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n                            }\n                            reject(new PaymentMethodFailedError(data.ErrorDescription));\n                            break;\n                    }\n                });\n\n                client.setup(CardinalInitializationType.Init, {\n                    jwt: clientToken,\n                });\n            }));\n    }\n\n    runBinProcess(binNumber: string): Promise<void> {\n        return this._getClientSDK()\n            .then(client => client.trigger(CardinalTriggerEvents.BinProcess, binNumber).catch(() => {}))\n            .then(result => {\n                if (!result || !result.Status) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n            });\n    }\n\n    getThreeDSecureData(threeDSecureData: ThreeDsResult, orderData: CardinalOrderData): Promise<ThreeDSecureToken> {\n        return this._getClientSDK()\n            .then(client => {\n                return new Promise<ThreeDSecureToken>((resolve, reject) => {\n                    client.on(CardinalEventType.Validated, (data: CardinalValidatedData, jwt?: string) => {\n                        client.off(CardinalEventType.Validated);\n                        if (!jwt) {\n                            return reject(new PaymentMethodFailedError(data.ErrorDescription ? data.ErrorDescription : 'An error was encountered while processing the transaction.'));\n                        }\n\n                        if (!data.ActionCode) {\n                            return resolve({ token: jwt });\n                        }\n\n                        switch (data.ActionCode) {\n                            case CardinalValidatedAction.Success:\n                                return resolve({ token: jwt });\n                            case CardinalValidatedAction.NoAction:\n                                if (data.ErrorNumber > 0) {\n                                    return reject(new PaymentMethodFailedError(data.ErrorDescription));\n                                } else if (!data.Payment || !data.Payment.ExtendedData || data.Payment.ExtendedData.SignatureVerification !== CardinalSignatureVerification.Yes) {\n                                    return reject(new PaymentMethodFailedError('Transaction signature could not be validated.'));\n                                }\n\n                                return resolve({ token: jwt });\n                            case CardinalValidatedAction.Failure:\n                                return reject(new PaymentMethodFailedError('User failed authentication or an error was encountered while processing the transaction.'));\n                            case CardinalValidatedAction.Error:\n                                return reject(new PaymentMethodFailedError(data.ErrorDescription));\n                        }\n                    });\n\n                    const continueObject = {\n                        AcsUrl: threeDSecureData.acs_url,\n                        Payload: threeDSecureData.merchant_data,\n                    };\n\n                    const partialOrder = this._mapToPartialOrder(orderData, threeDSecureData.payer_auth_request);\n\n                    client.continue(CardinalPaymentBrand.CCA, continueObject, partialOrder);\n                });\n            });\n    }\n\n    private _mapToPartialOrder(orderData: CardinalOrderData, transactionId: string): CardinalPartialOrder {\n        const consumer: CardinalConsumer = {\n            BillingAddress: this._mapToCardinalAddress(orderData.billingAddress),\n        };\n\n        if (orderData.paymentData) {\n            consumer.Account = this._mapToCardinalAccount(orderData.paymentData);\n        }\n\n        if (orderData.billingAddress.email) {\n            consumer.Email1 = orderData.billingAddress.email;\n        }\n\n        if (orderData.shippingAddress) {\n            consumer.ShippingAddress = this._mapToCardinalAddress(orderData.shippingAddress);\n        }\n\n        return  {\n            Consumer: consumer,\n            OrderDetails: {\n                OrderNumber: orderData.id,\n                Amount: orderData.amount,\n                CurrencyCode: orderData.currencyCode,\n                OrderChannel: 'S',\n                TransactionId: transactionId,\n            },\n        };\n    }\n\n    private _mapToCardinalAccount(paymentData: CreditCardInstrument): CardinalAccount {\n        return {\n            AccountNumber: Number(paymentData.ccNumber),\n            ExpirationMonth: Number(paymentData.ccExpiry.month),\n            ExpirationYear: Number(paymentData.ccExpiry.year),\n            NameOnAccount: paymentData.ccName,\n            CardCode: Number(paymentData.ccCvv),\n        };\n    }\n\n    private _mapToCardinalAddress(address: Address): CardinalAddress {\n        const cardinalAddress: CardinalAddress = {\n            FirstName: address.firstName,\n            LastName: address.lastName,\n            Address1: address.address1,\n            City: address.city,\n            State: address.stateOrProvince,\n            PostalCode: address.postalCode,\n            CountryCode: address.countryCode,\n        };\n\n        if (address.address2) {\n            cardinalAddress.Address2 = address.address2;\n        }\n\n        if (address.phone) {\n            cardinalAddress.Phone1 = address.phone;\n        }\n\n        return cardinalAddress;\n    }\n\n    private _getClientSDK(): Promise<CardinalSDK> {\n        if (!this._sdk) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._sdk;\n    }\n}\n","export enum ChasePayEventType {\n    StartCheckout = 'startCheckout',\n    CompleteCheckout = 'completeCheckout',\n    CancelCheckout = 'cancelCheckout',\n}\n\nexport interface ChasePayEventMap {\n    [ChasePayEventType.StartCheckout](digitalSessionId: string): void;\n    [ChasePayEventType.CompleteCheckout](payload: ChasePaySuccessPayload): void;\n    [ChasePayEventType.CancelCheckout](): void;\n}\n\nexport interface ChasePayHostWindow extends Window {\n    JPMC?: JPMC;\n}\n\nexport interface JPMC {\n    ChasePay: ChasePay;\n}\n\nexport interface ChasePaySuccessPayload {\n    sessionToken: string;\n}\n\nexport interface ChasePayInsertOptions {\n    color?: string;\n    containers?: string[];\n    height?: number;\n    width?: number;\n}\n\nexport interface ChasePayConfigureOptions {\n    language?: string;\n    zindex?: number;\n    sessionWarningTime?: number;\n    sessionTimeoutTime?: number;\n}\n\nexport interface ChasePay {\n    EventType: {\n        START_CHECKOUT: ChasePayEventType.StartCheckout;\n        COMPLETE_CHECKOUT: ChasePayEventType.CompleteCheckout;\n        CANCEL_CHECKOUT: ChasePayEventType.CancelCheckout;\n    };\n    isChasePayUp: boolean;\n    insertButtons(options: ChasePayInsertOptions): void;\n    insertBrandings(options: ChasePayInsertOptions): void;\n    startCheckout(digitalSessionId?: string): void;\n    showLoadingAnimation(): void;\n    configure(options: ChasePayConfigureOptions): void;\n    on<ChasePayEventType extends keyof ChasePayEventMap>(eventType: ChasePayEventType, callback: ChasePayEventMap[ChasePayEventType]): {};\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { CardinalSDK, CardinalWindow } from './cardinal';\n\nconst SDK_TEST_URL = 'https://songbirdstag.cardinalcommerce.com/edge/v1/songbird.js';\nconst SDK_PROD_URL = 'https://songbird.cardinalcommerce.com/edge/v1/songbird.js';\n\nexport default class CardinalScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: CardinalWindow = window\n    ) {}\n\n    load(provider: string, testMode?: boolean): Promise<CardinalSDK> {\n        const url = testMode ? SDK_TEST_URL : SDK_PROD_URL;\n\n        return this._scriptLoader\n            .loadScript(url + '?v=' + provider)\n            .then(() => {\n                if (!this._window.Cardinal) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Cardinal;\n            });\n    }\n}\n","import { merge, some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { HostedForm } from '../../../hosted-form';\nimport { OrderRequestBody } from '../../../order';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport CardinalClient, { CardinalOrderData } from './cardinal-client';\n\nexport default class CardinalThreeDSecureFlow {\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _cardinalClient: CardinalClient\n    ) {}\n\n    async prepare(method: PaymentMethod): Promise<void> {\n        await this._cardinalClient.load(method.id, method.config.testMode);\n        await this._cardinalClient.configure(await this._getClientToken(method));\n    }\n\n    async start(\n        execute: PaymentStrategy['execute'],\n        payload: OrderRequestBody,\n        options?: PaymentRequestOptions,\n        hostedForm?: HostedForm\n    ): Promise<InternalCheckoutSelectors> {\n        const { instruments: { getCardInstrument }, paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const { payment: { methodId = '', paymentData = {} } = {} } = payload;\n        const instrument = isVaultedInstrument(paymentData) && getCardInstrument(paymentData.instrumentId);\n        const bin = instrument ? instrument.iin : hostedForm && hostedForm.getBin();\n\n        if (bin) {\n            await this._cardinalClient.runBinProcess(bin);\n        }\n\n        try {\n            return await execute(merge(payload, {\n                payment: {\n                    paymentData: {\n                        threeDSecure: { token: getPaymentMethodOrThrow(methodId).clientToken },\n                    },\n                },\n            }), options);\n        } catch (error) {\n            if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                throw error;\n            }\n\n            const threeDSecure = await this._cardinalClient.getThreeDSecureData(error.body.three_ds_result, this._getOrderData());\n\n            if (!hostedForm) {\n                return await this._store.dispatch(this._paymentActionCreator.submitPayment(merge(payload.payment, {\n                    paymentData: { threeDSecure },\n                })));\n            }\n\n            await hostedForm.submit(merge(payload.payment, {\n                paymentData: { threeDSecure },\n            }));\n\n            return this._store.getState();\n        }\n    }\n\n    private async _getClientToken(method: PaymentMethod): Promise<string> {\n        if (method.clientToken) {\n            return method.clientToken;\n        }\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = await this._store.dispatch(\n            this._paymentMethodActionCreator.loadPaymentMethod(method.id)\n        );\n\n        return getPaymentMethodOrThrow(method.id).clientToken || '';\n    }\n\n    private _getOrderData(): CardinalOrderData {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddressOrThrow();\n        const shippingAddress = state.shippingAddress.getShippingAddress();\n        const checkout = state.checkout.getCheckoutOrThrow();\n        const order = state.order.getOrderOrThrow();\n\n        return {\n            billingAddress,\n            shippingAddress,\n            currencyCode: checkout.cart.currency.code,\n            id: order.orderId.toString(),\n            amount: checkout.cart.cartAmount,\n        };\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { Subject } from 'rxjs';\nimport { take } from 'rxjs/operators';\n\nimport { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentMethodCancelledError } from '../../errors';\nimport Payment from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\nimport { WepayRiskClient } from '../wepay';\n\nimport { ChasePay, ChasePayEventType, ChasePaySuccessPayload } from './chasepay';\nimport ChasePayInitializeOptions from './chasepay-initialize-options';\nimport ChasePayScriptLoader from './chasepay-script-loader';\n\nexport default class ChasePayPaymentStrategy implements PaymentStrategy {\n    private _chasePayClient?: ChasePay;\n    private _methodId!: string;\n    private _walletButton?: HTMLElement;\n    private _walletEvent$: Subject<{ type: ChasePayEventType }>;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _requestSender: RequestSender,\n        private _chasePayScriptLoader: ChasePayScriptLoader,\n        private _wepayRiskClient: WepayRiskClient\n    ) {\n        this._walletEvent$ = new Subject();\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._methodId = options.methodId;\n\n        if (!options.chasepay) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.chasepay\" argument is not provided.');\n        }\n\n        const walletButton = options.chasepay.walletButton && document.getElementById(options.chasepay.walletButton);\n\n        if (walletButton) {\n            this._walletButton = walletButton;\n            this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n        }\n\n        return this._configureWallet(options.chasepay)\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton) {\n            this._walletButton.removeEventListener('click', this._handleWalletButtonClick);\n        }\n\n        this._walletButton = undefined;\n        this._chasePayClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._getPayment()\n            .catch(error => {\n                if (error.subtype === MissingDataErrorType.MissingPayment) {\n                    return this._displayWallet()\n                        .then(() => this._getPayment());\n                }\n\n                throw error;\n            })\n            .then(payment =>\n                this._createOrder(payment, payload.useStoreCredit, options)\n            );\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _configureWallet(options: ChasePayInitializeOptions): Promise<void> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        return this._chasePayScriptLoader.load(paymentMethod.config.testMode)\n            .then(({ ChasePay }) => {\n                this._chasePayClient = ChasePay;\n\n                if (options.logoContainer && document.getElementById(options.logoContainer)) {\n                    this._chasePayClient.insertBrandings({\n                        color: 'white',\n                        containers: [options.logoContainer],\n                    });\n                }\n\n                this._chasePayClient.configure({\n                    language: storeConfig.storeProfile.storeLanguage,\n                });\n\n                this._chasePayClient.on(ChasePayEventType.CancelCheckout, () => {\n                    this._walletEvent$.next({ type: ChasePayEventType.CancelCheckout });\n\n                    if (options.onCancel) {\n                        options.onCancel();\n                    }\n                });\n\n                this._chasePayClient.on(ChasePayEventType.CompleteCheckout, (payload: ChasePaySuccessPayload) => {\n                    this._setSessionToken(payload.sessionToken)\n                        .then(() => {\n                            this._walletEvent$.next({ type: ChasePayEventType.CompleteCheckout });\n\n                            if (options.onPaymentSelect) {\n                                options.onPaymentSelect();\n                            }\n                        });\n                });\n            });\n    }\n\n    private _displayWallet(): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId))\n                .then(state => {\n                    const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n\n                    if (!this._chasePayClient) {\n                        throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                    }\n\n                    if (!paymentMethod) {\n                        throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                    }\n\n                    this._chasePayClient.showLoadingAnimation();\n                    this._chasePayClient.startCheckout(paymentMethod.initializationData.digitalSessionId);\n                });\n\n            // Wait for payment selection\n            return new Promise((resolve, reject) => {\n                this._walletEvent$\n                    .pipe(take(1))\n                    .subscribe((event: { type: ChasePayEventType }) => {\n                        if (event.type === ChasePayEventType.CancelCheckout) {\n                            reject(new PaymentMethodCancelledError());\n                        } else if (event.type === ChasePayEventType.CompleteCheckout) {\n                            resolve();\n                        }\n                    });\n            });\n        }, { methodId: this._methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _setSessionToken(sessionToken: string): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n        const merchantRequestId = paymentMethod && paymentMethod.initializationData.merchantRequestId;\n\n        return this._requestSender.post('checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8',\n            },\n            body: {\n                action: 'set_external_checkout',\n                provider: this._methodId,\n                sessionToken,\n                merchantRequestId,\n            },\n        })\n            // Re-hydrate checkout data\n            .then(() => Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId)),\n            ]))\n            .then(() => this._store.getState());\n    }\n\n    private _getPayment(): Promise<Payment> {\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(this._methodId))\n            .then(() => {\n                if (this._methodId === 'wepay') {\n                    return this._wepayRiskClient.initialize()\n                        .then(client => client.getRiskToken());\n                }\n\n                return '';\n            })\n            .then(riskToken => {\n                const state = this._store.getState();\n                const paymentMethod = state.paymentMethods.getPaymentMethod(this._methodId);\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!paymentMethod.initializationData.paymentCryptogram) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPayment);\n                }\n\n                const paymentData = {\n                    method: this._methodId,\n                    cryptogramId: paymentMethod.initializationData.paymentCryptogram,\n                    eci: paymentMethod.initializationData.eci,\n                    transactionId: btoa(paymentMethod.initializationData.reqTokenId),\n                    ccExpiry: {\n                        month: paymentMethod.initializationData.expDate.toString().substr(0, 2),\n                        year: paymentMethod.initializationData.expDate.toString().substr(2, 2),\n                    },\n                    ccNumber: paymentMethod.initializationData.accountNum,\n                    accountMask: paymentMethod.initializationData.accountMask,\n                    extraData: riskToken ? { riskToken } : undefined,\n                };\n\n                return {\n                    methodId: this._methodId,\n                    paymentData,\n                };\n            });\n    }\n\n    private _createOrder(payment: Payment, useStoreCredit?: boolean, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit }, options))\n            .then(() => this._store.dispatch(this._paymentActionCreator.submitPayment(payment)));\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event): void {\n        event.preventDefault();\n\n        this._displayWallet();\n    }\n}\n","export default interface PaymentResponseBody {\n    status: string;\n    id: string;\n    avs_result: AvsResult | {};\n    cvv_result: CvvResult | {};\n    three_ds_result: ThreeDsResult | {};\n    fraud_review: boolean;\n    transaction_type: string;\n    additional_action_required?: AdditionalActionRequired;\n    errors?: Array<{\n        code: string;\n        message: string;\n    }>;\n}\n\nexport interface AvsResult {\n    code: string;\n    message: string;\n    street_match: string;\n    postal_match: string;\n}\n\nexport interface CvvResult {\n    code: string;\n    message: string;\n}\n\nexport interface ThreeDsResult {\n    acs_url: string;\n    payer_auth_request: string;\n    merchant_data: string;\n    callback_url: string;\n}\n\nexport interface AdditionalActionRequired {\n    type: AdditionalActionType;\n    data: AdditionalRedirectData;\n}\n\nexport interface AdditionalRedirectData {\n    redirect_url: string;\n}\n\nexport enum AdditionalActionType {\n    OffsiteRedirect = 'offsite_redirect',\n}\n","import { InternalCheckoutSelectors } from '../../../checkout';\nimport { NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport { AdditionalActionRequired, AdditionalActionType } from '../../payment-response-body';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class CheckoutcomCustomPaymentStrategy extends CreditCardPaymentStrategy {\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    protected async _executeWithHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors>  {\n        const { payment, ...order } = payload;\n        const form = this._hostedForm;\n\n        if (!form) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!payment || !payment.methodId) {\n            throw new PaymentArgumentInvalidError(['payment.methodId']);\n        }\n\n        try {\n            await form.validate();\n            await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n            await form.submit(payment);\n        } catch (error) {\n            return this._processResponse(error);\n        }\n\n        return await this._store.dispatch(this._orderActionCreator.loadCurrentOrder());\n    }\n\n    protected _processResponse(error: RequestError): Promise<InternalCheckoutSelectors> {\n        if (!(error instanceof RequestError)) {\n            return Promise.reject(error);\n        }\n\n        const additionalActionRequired: AdditionalActionRequired = error.body.additional_action_required;\n\n        // TODO validate all possible responses and perform respective additional actions\n        if (additionalActionRequired && additionalActionRequired.type === AdditionalActionType.OffsiteRedirect) {\n            return this._performRedirect(additionalActionRequired);\n        }\n\n        return Promise.reject(error);\n    }\n\n    private _performRedirect(additionalActionRequired: AdditionalActionRequired): Promise<InternalCheckoutSelectors> {\n        return new Promise(() => {\n            window.location.replace(additionalActionRequired.data.redirect_url);\n        });\n    }\n}\n","import { each, some } from 'lodash';\n\nimport { PaymentActionCreator } from '../..';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { getBrowserInfo } from '../../../common/browser-info';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport { HostedInstrument } from '../../payment';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { MollieClient, MollieElement } from './mollie';\nimport MolliePaymentInitializeOptions from './mollie-initialize-options';\nimport MollieScriptLoader from './mollie-script-loader';\n\nexport enum MolliePaymentMethodType {\n    creditcard = 'credit_card',\n}\n\nexport default class MolliePaymentStrategy implements PaymentStrategy {\n    private _initializeOptions?: MolliePaymentInitializeOptions;\n    private _mollieClient?: MollieClient;\n    private _cardHolderElement?: MollieElement;\n    private _cardNumberElement?: MollieElement;\n    private _verificationCodeElement?: MollieElement;\n    private _expiryDateElement?: MollieElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _mollieScriptLoader: MollieScriptLoader,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) { }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { mollie, methodId } = options;\n\n        if (!mollie) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.mollie\" argument is not provided.');\n        }\n        const state = this._store.getState();\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        this._initializeOptions = mollie;\n\n        const paymentMethods = state.paymentMethods;\n        const paymentMethod = paymentMethods.getPaymentMethodOrThrow(options.methodId);\n        const { config: { merchantId, testMode } } = paymentMethod;\n\n        if (!merchantId) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"merchantId\" argument is not provided.');\n        }\n\n        if (methodId === MolliePaymentMethodType.creditcard) {\n            this._mollieClient = await this._loadMollieJs(merchantId, storeConfig.storeProfile.storeLanguage, testMode);\n            this._mountElements();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment , ...order} = payload;\n        const paymentData = payment?.paymentData;\n        const shouldSaveInstrument = (paymentData as HostedInstrument)?.shouldSaveInstrument;\n        const shouldSetAsDefaultInstrument = (paymentData as HostedInstrument)?.shouldSetAsDefaultInstrument;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError([ 'payment' ]);\n        }\n\n        try {\n            if (payment.methodId === MolliePaymentMethodType.creditcard) {\n                await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n                if (paymentData && isVaultedInstrument(paymentData)) {\n                    return this._store.dispatch(this._paymentActionCreator.submitPayment(payment));\n                }\n\n                const { token, error } = await this._getMollieClient().createToken();\n\n                if (error) {\n                    return Promise.reject(error);\n                }\n\n                return await this._store.dispatch(this._paymentActionCreator.submitPayment({\n                    ...payment,\n                    paymentData: {\n                        formattedPayload: {\n                            credit_card_token: {\n                                token,\n                            },\n                            vault_payment_instrument: shouldSaveInstrument,\n                            set_as_default_stored_instrument: shouldSetAsDefaultInstrument,\n                            browser_info: getBrowserInfo(),\n                        },\n                    },\n                }));\n            } else {\n                await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n                const issuer = 'issuer' in paymentData ? paymentData.issuer : '';\n\n                return await this._store.dispatch(this._paymentActionCreator.submitPayment({\n                    ...payment,\n                    paymentData: {\n                        ...paymentData,\n                        formattedPayload: {\n                            issuer,\n                        },\n                    },\n                }));\n            }\n        } catch (error) {\n\n            return this._processAdditionalAction(error);\n        }\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._mollieClient = undefined;\n\n        this.removeMollieComponents();\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private removeMollieComponents(): void {\n        const mollieComponents = document.querySelectorAll('.mollie-component');\n\n        each(mollieComponents, component => component.remove());\n\n        const controllers = document.querySelectorAll('.mollie-components-controller');\n\n        each(controllers, controller => controller.remove());\n    }\n\n    private _processAdditionalAction(error: any): Promise<InternalCheckoutSelectors> {\n        if (!(error instanceof RequestError) || !some(error.body.errors, {code: 'additional_action_required'})) {\n            return Promise.reject(error);\n        }\n        const { additional_action_required: { data : { redirect_url } } } = error.body;\n\n        return new Promise(() => window.location.replace(redirect_url));\n    }\n\n    private _getInitializeOptions(): MolliePaymentInitializeOptions {\n        if (!this._initializeOptions) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._initializeOptions;\n    }\n\n    private _loadMollieJs(merchantId: string, locale: string, testmode: boolean = false): Promise<MollieClient> {\n        if (this._mollieClient) {\n            return Promise.resolve(this._mollieClient);\n        }\n\n        return this._mollieScriptLoader\n            .load(merchantId, locale, testmode);\n    }\n\n    private _getMollieClient(): MollieClient {\n        if (!this._mollieClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._mollieClient;\n    }\n\n    /**\n     * ContainerId is use in Mollie for determined either its showing or not the\n     * container, because when Mollie has Vaulted Instruments it gets hide,\n     * and shows an error because can't mount Provider Components\n     *\n     * We had to add a settimeout because Mollie sets de tab index after mounting\n     * each component, but without a setTimeOut Mollie is not able to find the\n     * components as they are hidden so we need to wait until they are shown\n     */\n    private _mountElements() {\n        const { containerId, cardNumberId, cardCvcId, cardExpiryId, cardHolderId, styles } = this._getInitializeOptions();\n        let container: HTMLElement | null;\n\n        if (containerId) {\n            container = document.getElementById(containerId);\n        }\n\n        setTimeout(() => {\n            if (!containerId || container?.style.display !== 'none') {\n                const mollieClient = this._getMollieClient();\n\n                this._cardHolderElement = mollieClient.createComponent('cardHolder', { styles });\n                this._cardHolderElement.mount(`#${cardHolderId}`);\n\n                this._cardNumberElement = mollieClient.createComponent('cardNumber', { styles });\n                this._cardNumberElement.mount(`#${cardNumberId}`);\n\n                this._verificationCodeElement = mollieClient.createComponent('verificationCode', { styles });\n                this._verificationCodeElement.mount(`#${cardCvcId}`);\n\n                this._expiryDateElement = mollieClient.createComponent('expiryDate', { styles });\n                this._expiryDateElement.mount(`#${cardExpiryId}`);\n            }\n        }, 0);\n    }\n}\n","import { InternalCheckoutSelectors } from '../../../../checkout';\nimport { OrderRequestBody } from '../../../../order';\nimport { PaymentArgumentInvalidError } from '../../../errors';\nimport { PaymentInstrument, WithDocumentInstrument } from '../../../payment';\nimport { PaymentRequestOptions } from '../../../payment-request-options';\nimport CheckoutcomCustomPaymentStrategy from '../checkoutcom-custom-payment-strategy';\n\nconst DOCUMENT_SUPPORTED_APMS = ['boleto', 'oxxo', 'qpay', 'ideal'];\nexport default class CheckoutcomAPMPaymentStrategy extends CheckoutcomCustomPaymentStrategy {\n\n    protected async _executeWithoutHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment?.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment({\n                ...payment,\n                paymentData: {\n                    ...paymentData,\n                    formattedPayload: this._createFormattedPayload(payment.methodId, paymentData),\n                },\n            }));\n        } catch (error) {\n            return this._processResponse(error);\n        }\n    }\n\n    private _createFormattedPayload(methodId: string, paymentData: PaymentInstrument): WithDocumentInstrument {\n        const formattedPayload: WithDocumentInstrument = { ccDocument: '' };\n        const ccDocument = 'ccDocument' in paymentData\n            ? paymentData.ccDocument\n            : '';\n\n        if (DOCUMENT_SUPPORTED_APMS.indexOf(methodId) !== -1 && ccDocument) {\n            formattedPayload.ccDocument = ccDocument;\n        }\n\n        return formattedPayload;\n    }\n}\n","import { InternalCheckoutSelectors } from '../../../../checkout';\nimport { OrderRequestBody } from '../../../../order';\nimport { PaymentArgumentInvalidError } from '../../../errors';\nimport { PaymentInstrument, WithCheckoutcomSEPAInstrument } from '../../../payment';\nimport { PaymentRequestOptions } from '../../../payment-request-options';\nimport CheckoutcomCustomPaymentStrategy from '../checkoutcom-custom-payment-strategy';\n\nconst CHECKOUTCOM_SEPA_PAYMENT_METHOD = 'sepa';\nexport default class CheckoutcomSEPAPaymentStrategy extends CheckoutcomCustomPaymentStrategy {\n\n    protected async _executeWithoutHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment?.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment({\n                ...payment,\n                paymentData: {\n                    ...paymentData,\n                    formattedPayload: this._createFormattedPayload(payment.methodId, paymentData),\n                },\n            }));\n        } catch (error) {\n            return this._processResponse(error);\n        }\n    }\n\n    private _createFormattedPayload(methodId: string, paymentData: PaymentInstrument): WithCheckoutcomSEPAInstrument {\n        const formattedPayload: WithCheckoutcomSEPAInstrument = { iban: '', bic: '' };\n        const { iban, bic } = 'iban' in paymentData ? paymentData : formattedPayload;\n\n        if (methodId === CHECKOUTCOM_SEPA_PAYMENT_METHOD && document) {\n            formattedPayload.iban = iban;\n            formattedPayload.bic = bic;\n        }\n\n        return formattedPayload;\n    }\n}\n","import { InternalCheckoutSelectors } from '../../../../checkout';\nimport { OrderRequestBody } from '../../../../order';\nimport { PaymentArgumentInvalidError } from '../../../errors';\nimport { PaymentInstrument, WithCheckoutcomiDealInstrument } from '../../../payment';\nimport { PaymentRequestOptions } from '../../../payment-request-options';\nimport CheckoutcomCustomPaymentStrategy from '../checkoutcom-custom-payment-strategy';\n\nconst CHECKOUTCOM_IDEAL_PAYMENT_METHOD = 'ideal';\nexport default class CheckoutcomiDealPaymentStrategy extends CheckoutcomCustomPaymentStrategy {\n\n    protected async _executeWithoutHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment?.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment({\n                ...payment,\n                paymentData: {\n                    ...paymentData,\n                    formattedPayload: this._createFormattedPayload(payment.methodId, paymentData),\n                },\n            }));\n        } catch (error) {\n            return this._processResponse(error);\n        }\n    }\n\n    private _createFormattedPayload(methodId: string, paymentData: PaymentInstrument): WithCheckoutcomiDealInstrument | undefined {\n        if (CHECKOUTCOM_IDEAL_PAYMENT_METHOD === methodId && 'bic' in paymentData) {\n            return { bic: paymentData.bic };\n        }\n\n        return;\n    }\n}\n","import { InternalCheckoutSelectors } from '../../../../checkout';\nimport { OrderRequestBody } from '../../../../order';\nimport { PaymentArgumentInvalidError } from '../../../errors';\nimport { PaymentInstrument, WithCheckoutcomFawryInstrument } from '../../../payment';\nimport { PaymentRequestOptions } from '../../../payment-request-options';\nimport CheckoutcomCustomPaymentStrategy from '../checkoutcom-custom-payment-strategy';\n\nconst CHECKOUTCOM_FAWRY_PAYMENT_METHOD = 'fawry';\nexport default class CheckoutcomFawryPaymentStrategy extends CheckoutcomCustomPaymentStrategy {\n\n    protected async _executeWithoutHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment({\n                ...payment,\n                paymentData: {\n                    ...paymentData,\n                    formattedPayload: this._createFormattedPayload(payment.methodId, paymentData),\n                },\n            }));\n        } catch (error) {\n            return this._processResponse(error);\n        }\n    }\n\n    private _createFormattedPayload(methodId: string, paymentData: PaymentInstrument): WithCheckoutcomFawryInstrument | undefined {\n        if (CHECKOUTCOM_FAWRY_PAYMENT_METHOD === methodId && 'customerMobile' in paymentData && 'customerEmail' in paymentData) {\n            return { customerMobile: paymentData.customerMobile, customerEmail: paymentData.customerEmail };\n        }\n\n        return;\n    }\n}\n","import { CheckoutStore, CheckoutValidator, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport ClearpayScriptLoader from './clearpay-script-loader';\nimport ClearpaySdk from './clearpay-sdk';\n\nexport default class ClearpayPaymentStrategy implements PaymentStrategy {\n    private _clearpaySdk?: ClearpaySdk;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutValidator: CheckoutValidator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _clearpayScriptLoader: ClearpayScriptLoader\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(options.methodId, options.gatewayId);\n\n        this._clearpaySdk = await this._clearpayScriptLoader.load(paymentMethod);\n\n        return this._store.getState();\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._clearpaySdk = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!payload.payment) {\n            throw new PaymentArgumentInvalidError(['payment.gatewayId', 'payment.methodId']);\n        }\n        const { gatewayId, methodId } = payload.payment;\n\n        if (!gatewayId || !methodId) {\n            throw new PaymentArgumentInvalidError(['payment.gatewayId', 'payment.methodId']);\n        }\n\n        const { isStoreCreditApplied: useStoreCredit } = this._store.getState().checkout.getCheckoutOrThrow();\n        let state = this._store.getState();\n\n        if (useStoreCredit !== undefined) {\n            state = await this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(useStoreCredit));\n        }\n\n        await this._checkoutValidator.validate(state.checkout.getCheckout(), options);\n\n        const { countryCode } = this._store.getState().billingAddress.getBillingAddressOrThrow();\n        if (!this._isCountrySupported(countryCode)) {\n            throw new InvalidArgumentError('Unable to proceed because billing country is not supported.');\n        }\n\n        state = await this._store.dispatch(\n            this._paymentMethodActionCreator.loadPaymentMethod(`${gatewayId}?method=${methodId}`)\n        );\n\n        await this._redirectToClearpay(countryCode, state.paymentMethods.getPaymentMethod(methodId));\n\n        // Clearpay will handle the rest of the flow so return a promise that doesn't really resolve\n        return new Promise(() => {});\n    }\n\n    async finalize(options: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const payment = state.payment.getPaymentId();\n        const config = state.config.getContextConfig();\n\n        if (!payment) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!config || !config.payment.token) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const paymentPayload = {\n            methodId: payment.providerId,\n            paymentData: { nonce: config.payment.token },\n        };\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder({}, options));\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n    }\n\n    private _redirectToClearpay(countryCode: string, paymentMethod?: PaymentMethod): void {\n        if (!this._clearpaySdk || !paymentMethod || !paymentMethod.clientToken) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._clearpaySdk.initialize({countryCode});\n        this._clearpaySdk.redirect({ token: paymentMethod.clientToken });\n    }\n\n    private _isCountrySupported( countryCode: string): boolean {\n        return countryCode === 'GB';\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport PaymentMethod from '../../payment-method';\n\nimport ClearpaySdk from './clearpay-sdk';\nimport ClearpayWindow from './clearpay-window';\n\nconst SCRIPTS_DEFAULT = {\n    PROD: '//portal.clearpay.co.uk/afterpay-async.js',\n    SANDBOX: '//portal.sandbox.clearpay.co.uk/afterpay-async.js',\n};\n\nexport default class ClearpayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: ClearpayWindow = window\n    ) { }\n\n    async load(method: PaymentMethod): Promise<ClearpaySdk> {\n        await this._scriptLoader.loadScript(this._getScriptUrl(method.config.testMode));\n\n        if (!this._window.AfterPay) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.AfterPay;\n    }\n\n    private _getScriptUrl(testMode?: boolean): string {\n        return testMode ? SCRIPTS_DEFAULT.SANDBOX : SCRIPTS_DEFAULT.PROD;\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class ConvergePaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _formPoster: FormPoster\n    ) {\n        super(store, orderActionCreator, paymentActionCreator, hostedFormFactory);\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return super.execute(payload, options)\n            .catch(error => {\n                if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                    return Promise.reject(error);\n                }\n\n                return new Promise(() => {\n                    this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                        PaReq: error.body.three_ds_result.payer_auth_request,\n                        TermUrl: error.body.three_ds_result.callback_url,\n                        MD: error.body.three_ds_result.merchant_data,\n                    });\n                });\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class CreditCardRedirectPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        protected _store: CheckoutStore,\n        protected _orderActionCreator: OrderActionCreator,\n        protected _paymentActionCreator: PaymentActionCreator,\n        protected _hostedFormFactory: HostedFormFactory,\n        protected _formPoster: FormPoster\n    ) {\n        super(\n            _store,\n            _orderActionCreator,\n            _paymentActionCreator,\n            _hostedFormFactory\n        );\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    protected async _executeWithoutHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }));\n        } catch (error) {\n            if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                return Promise.reject(error);\n            }\n\n            return new Promise(() => this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                PaReq: error.body.three_ds_result.payer_auth_request || null,\n                TermUrl: error.body.three_ds_result.callback_url || null,\n                MD: error.body.three_ds_result.merchant_data || null,\n            }));\n        }\n    }\n\n    protected async _executeWithHostedForm(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors>  {\n        const { payment, ...order } = payload;\n        const form = this._hostedForm;\n\n        if (!form) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (!payment || !payment.methodId) {\n            throw new PaymentArgumentInvalidError(['payment.methodId']);\n        }\n\n        try {\n            await form.validate();\n            await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n            await form.submit(payment);\n        } catch (error) {\n            if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                return Promise.reject(error);\n            }\n\n            return new Promise(() => this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                PaReq: error.body.three_ds_result.payer_auth_request || null,\n                TermUrl: error.body.three_ds_result.callback_url || null,\n                MD: error.body.three_ds_result.merchant_data || null,\n            }));\n        }\n\n        return await this._store.dispatch(this._orderActionCreator.loadCurrentOrder());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { CardinalThreeDSecureFlow } from '../cardinal';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class CyberSourcePaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _threeDSecureFlow: CardinalThreeDSecureFlow\n    ) {\n        super(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        );\n    }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        await super.initialize(options);\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(options.methodId);\n\n        if (paymentMethod.config.is3dsEnabled) {\n            await this._threeDSecureFlow.prepare(paymentMethod);\n        }\n\n        return this._store.getState();\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment: { methodId = '' } = {} } = payload;\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n\n        if (getPaymentMethodOrThrow(methodId).config.is3dsEnabled) {\n            return this._threeDSecureFlow.start(\n                super.execute.bind(this),\n                payload,\n                options,\n                this._hostedForm\n            );\n        }\n\n        return super.execute(payload, options);\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { CardinalThreeDSecureFlowV2 } from '../cardinal';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class CyberSourceV2PaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _threeDSecureFlow: CardinalThreeDSecureFlowV2\n    ) {\n        super(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        );\n    }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        await super.initialize(options);\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(options.methodId);\n\n        if (paymentMethod.config.is3dsEnabled) {\n            await this._threeDSecureFlow.prepare(paymentMethod);\n        }\n\n        return this._store.getState();\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment: { methodId = '' } = {} } = payload;\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n\n        if (getPaymentMethodOrThrow(methodId).config.is3dsEnabled) {\n            return this._threeDSecureFlow.start(\n                super.execute.bind(this),\n                payload,\n                options,\n                this._hostedForm\n            );\n        }\n\n        return super.execute(payload, options);\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport DigitalRiverJS, { DigitalRiverDropIn, DigitalRiverInitializeToken, OnCancelOrErrorResponse, OnReadyResponse, OnSuccessResponse } from './digitalriver';\nimport DigitalRiverPaymentInitializeOptions from './digitalriver-payment-initialize-options';\nimport DigitalRiverScriptLoader from './digitalriver-script-loader';\n\nexport default class DigitalRiverPaymentStrategy implements PaymentStrategy {\n    private _digitalRiverJS?: DigitalRiverJS;\n    private _digitalRiverDropComponent?: DigitalRiverDropIn;\n    private _submitFormEvent?: () => void;\n    private _loadSuccessResponse?: OnSuccessResponse;\n    private _digitalRiverCheckoutData?: DigitalRiverInitializeToken;\n    private _unsubscribe?: (() => void);\n    private _digitalRiverInitializeOptions?: DigitalRiverPaymentInitializeOptions;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _digitalRiverScriptLoader: DigitalRiverScriptLoader\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._digitalRiverInitializeOptions = options.digitalriver;\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethodOrThrow(options.methodId);\n        const { publicKey, paymentLanguage: locale } = paymentMethod.initializationData;\n        const { containerId } = this._getDigitalRiverInitializeOptions();\n\n        this._digitalRiverJS = await this._digitalRiverScriptLoader.load(publicKey, locale);\n\n        this._unsubscribe = await this._store.subscribe(\n            async state => {\n                if (state.paymentStrategies.isInitialized(options.methodId)) {\n                    const container = document.getElementById(containerId);\n\n                    if (container) {\n                        container.innerHTML = '';\n\n                        this._digitalRiverJS = await this._digitalRiverScriptLoader.load(publicKey, locale);\n                    }\n\n                    await this._loadWidget(options);\n                }\n            },\n            state => {\n                const checkout = state.checkout.getCheckout();\n\n                return checkout && checkout.outstandingBalance;\n            },\n            state => {\n                const checkout = state.checkout.getCheckout();\n\n                return checkout && checkout.coupons;\n            }\n        );\n\n        return this._loadWidget(options);\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n        const { isStoreCreditApplied: useStoreCredit } = this._store.getState().checkout.getCheckoutOrThrow();\n\n        if (useStoreCredit !== undefined) {\n            await this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(useStoreCredit));\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        if (!payment || !this._loadSuccessResponse || !this._digitalRiverCheckoutData) {\n            throw new InvalidArgumentError('Unable to proceed because payload payment argument is not provided.');\n        }\n\n        const paymentPayload = {\n            methodId: payment.methodId,\n            paymentData: {\n                nonce: JSON.stringify({\n                    checkoutId: this._digitalRiverCheckoutData.checkoutId,\n                    source: this._loadSuccessResponse,\n                    sessionId: this._digitalRiverCheckoutData.sessionId,\n                }),\n            },\n        };\n\n        return await this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _getDigitalRiverJs(): DigitalRiverJS {\n        if (!this._digitalRiverJS) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._digitalRiverJS;\n    }\n\n    private _getErrorMessage(error: OnCancelOrErrorResponse): string {\n        const { errors } = error;\n\n        return errors.map(e => 'code: ' + e.code + ' message: ' + e.message).join('\\n');\n    }\n\n    private _onSuccessResponse(data?: OnSuccessResponse): Promise<void> {\n        const error = new InvalidArgumentError('Unable to initialize payment because success argument is not provided.');\n\n        return new Promise((resolve, reject) => {\n            if (data && this._submitFormEvent) {\n                const { browserInfo } = data.source;\n                this._loadSuccessResponse = browserInfo ? {\n                    source: {\n                        id: data.source.id,\n                        reusable: data.source.reusable,\n                        ...browserInfo,\n                    },\n                    readyForStorage: data.readyForStorage,\n                } : {\n                    source: {\n                        id: data.source.id,\n                        reusable: data.source.reusable,\n                    },\n                    readyForStorage: data.readyForStorage,\n                };\n                resolve();\n                this._submitFormEvent();\n            } else {\n                reject(error);\n                this._getDigitalRiverInitializeOptions().onError?.(error);\n            }\n        });\n    }\n\n    private _onReadyResponse(data?: OnReadyResponse): void {\n        if (data) {\n            this._getDigitalRiverInitializeOptions().onRenderButton?.();\n        }\n    }\n\n    private _getDigitalRiverInitializeOptions(): DigitalRiverPaymentInitializeOptions {\n        if (!this._digitalRiverInitializeOptions) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._digitalRiverInitializeOptions;\n    }\n\n    private async _loadWidget(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(options.methodId));\n        const billing = state.billingAddress.getBillingAddressOrThrow();\n        const customer = state.customer.getCustomerOrThrow();\n        const { paymentMethodConfiguration } = this._getDigitalRiverInitializeOptions().configuration;\n        const { containerId, configuration } = this._getDigitalRiverInitializeOptions();\n        const { clientToken } = state.paymentMethods.getPaymentMethodOrThrow(options.methodId);\n\n        if (!clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._digitalRiverCheckoutData = JSON.parse(clientToken);\n\n        if (!this._digitalRiverCheckoutData) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        this._submitFormEvent = this._getDigitalRiverInitializeOptions().onSubmitForm;\n        const digitalRiverConfiguration = {\n            sessionId: this._digitalRiverCheckoutData.sessionId,\n            options: { ...configuration },\n            billingAddress: {\n                firstName: billing.firstName,\n                lastName: billing.lastName,\n                email: billing.email || customer.email,\n                phoneNumber: billing.phone,\n                address: {\n                    line1: billing.address1,\n                    line2: billing.address2,\n                    city: billing.city,\n                    state: billing.stateOrProvinceCode,\n                    postalCode: billing.postalCode,\n                    country: billing.countryCode,\n                },\n            },\n            paymentMethodConfiguration,\n            onSuccess: (data?: OnSuccessResponse) => {\n                this._onSuccessResponse(data);\n            },\n            onReady: (data?: OnReadyResponse) => {\n                this._onReadyResponse(data);\n            },\n            onError: (error: OnCancelOrErrorResponse) => {\n                const descriptiveError = new Error(this._getErrorMessage(error));\n                this._getDigitalRiverInitializeOptions().onError?.(descriptiveError);\n            },\n        };\n        this._digitalRiverDropComponent = await this._getDigitalRiverJs().createDropin(digitalRiverConfiguration);\n        this._digitalRiverDropComponent.mount(containerId);\n\n        return state;\n    }\n}\n","import { ScriptLoader, StylesheetLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport DigitalRiverJS, { DigitalRiverWindow } from './digitalriver';\n\nexport default class DigitalRiverScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _stylesheetLoader: StylesheetLoader,\n        private _window: DigitalRiverWindow = window\n    ) {}\n\n    async load(publicKey: string, locale: string): Promise<DigitalRiverJS> {\n        await Promise.all([\n            this._stylesheetLoader.loadStylesheet(`https://js.digitalriverws.com/v1/css/DigitalRiver.css`),\n            this._scriptLoader.loadScript(`https://js.digitalriverws.com/v1/DigitalRiver.js`),\n        ]);\n\n        if (!this._window.DigitalRiver) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return Promise.resolve(new this._window.DigitalRiver(publicKey, { locale } ));\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class ExternalPaymentStrategy implements PaymentStrategy {\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _formPoster: FormPoster\n    ) {}\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const paymentData = payment && payment.paymentData;\n\n        if (!payment || !paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment({...payment, paymentData}));\n        } catch (error) {\n            if (!this._isAdditionalActionRequired(error)) {\n                return Promise.reject(error);\n            }\n\n            return new Promise(() => {\n                this._formPoster.postForm(error.body.additional_action_required.data.redirect_url, { });\n            });\n        }\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _isAdditionalActionRequired(error: RequestError): boolean {\n        const { additional_action_required, status } = error.body;\n\n        return status === 'additional_action_required'\n            && additional_action_required\n            && additional_action_required.type === 'offsite_redirect';\n    }\n}\n","import { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { getBrowserInfo } from '../../../common/browser-info';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport { AdyenPaymentMethodType } from '../adyenv2';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { GooglePaymentData, PaymentMethodData } from './googlepay';\nimport GooglePayAdyenV2PaymentProcessor from './googlepay-adyenv2-payment-processor';\nimport GooglePayPaymentInitializeOptions from './googlepay-initialize-options';\nimport GooglePayPaymentProcessor from './googlepay-payment-processor';\n\nexport default class GooglePayPaymentStrategy implements PaymentStrategy {\n    private _googlePayOptions?: GooglePayPaymentInitializeOptions;\n    private _walletButton?: HTMLElement;\n    private _paymentMethod?: PaymentMethod;\n    private _buttonClickEventHandler?: (event: Event ) => Promise<InternalCheckoutSelectors>;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _googlePayPaymentProcessor: GooglePayPaymentProcessor,\n        private _googlePayAdyenV2PaymentProcessor?: GooglePayAdyenV2PaymentProcessor\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n        this._paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n        this._googlePayOptions = this._getGooglePayOptions(options);\n\n        this._buttonClickEventHandler = this._handleButtlonClickedEvent(methodId);\n\n        if (this._paymentMethod.initializationData.nonce) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        await this._googlePayPaymentProcessor.initialize(methodId);\n\n        if (!this._googlePayOptions.walletButton) {\n            throw new InvalidArgumentError('walletButton argument is missing');\n        }\n\n        const walletButton = document.getElementById(this._googlePayOptions.walletButton);\n\n        if (!walletButton) {\n            throw new InvalidArgumentError('Unable to create wallet, walletButton ID could not be found');\n        }\n\n        this._walletButton = walletButton;\n        this._walletButton.addEventListener('click', this._buttonClickEventHandler);\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._walletButton && this._buttonClickEventHandler) {\n            this._walletButton.removeEventListener('click', this._buttonClickEventHandler);\n        }\n\n        this._buttonClickEventHandler = undefined;\n        this._walletButton = undefined;\n\n        return this._googlePayPaymentProcessor.deinitialize()\n            .then(() => this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!this._googlePayOptions) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.googlepay\" argument is not provided.');\n        }\n\n        if (!payload.payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        const { methodId } = payload.payment;\n\n        let payment = await this._getPayment(methodId);\n\n        if (!payment.paymentData.nonce || !payment.paymentData.cardInformation) {\n            const {\n                onError = () => {},\n                onPaymentSelect = () => {},\n            } = this._googlePayOptions;\n            await this._displayWallet(methodId, onPaymentSelect, onError);\n            payment = await this._getPayment(methodId);\n\n            if (!payment.paymentData.nonce) {\n                throw new MissingDataError(MissingDataErrorType.MissingPayment);\n            }\n        }\n\n        try {\n            await this._store.dispatch(this._orderActionCreator.submitOrder({ useStoreCredit: payload.useStoreCredit }, options));\n\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment(payment));\n        } catch (error) {\n            this._googlePayAdyenV2PaymentProcessor?.processAdditionalAction(error);\n            throw error;\n        }\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _getGooglePayOptions(options: PaymentInitializeOptions): GooglePayPaymentInitializeOptions {\n        if (options.methodId === 'googlepayadyenv2' && options.googlepayadyenv2) {\n            if (!this._googlePayAdyenV2PaymentProcessor) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            this._googlePayAdyenV2PaymentProcessor.initialize(options);\n\n            return options.googlepayadyenv2;\n        }\n\n        if (options.methodId === 'googlepayauthorizenet' && options.googlepayauthorizenet) {\n            return options.googlepayauthorizenet;\n        }\n\n        if (options.methodId === 'googlepaycheckoutcom' && options.googlepaycheckoutcom) {\n            return options.googlepaycheckoutcom;\n        }\n\n        if (options.methodId === 'googlepaycybersourcev2' && options.googlepaycybersourcev2) {\n            return options.googlepaycybersourcev2;\n        }\n\n        if (options.methodId === 'googlepaybraintree' && options.googlepaybraintree) {\n            return options.googlepaybraintree;\n        }\n\n        if (options.methodId === 'googlepaystripe' && options.googlepaystripe) {\n            return options.googlepaystripe;\n        }\n\n        throw new InvalidArgumentError('Unable to initialize payment because \"options.googlepay\" argument is not provided.');\n    }\n\n    private async _getPayment(methodId: string): Promise<PaymentMethodData> {\n        if (!methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        let state = this._store.getState();\n        this._paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n        const { nonce } = this._paymentMethod.initializationData;\n        if (nonce) {\n            state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n            this._paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n        }\n\n        const { card_information: cardInformation } = this._paymentMethod.initializationData;\n\n        return {\n            methodId,\n            paymentData: {\n                method: methodId,\n                cardInformation,\n                nonce: this._getNonce(methodId, this._paymentMethod),\n            },\n        };\n    }\n\n    private _getNonce(methodId: string, { initializationData: { nonce }}: PaymentMethod) {\n        if (methodId === 'googlepayadyenv2') {\n            return JSON.stringify({\n                type: AdyenPaymentMethodType.GooglePay,\n                googlePayToken: nonce,\n                browser_info: getBrowserInfo(),\n            });\n        }\n\n        return nonce;\n    }\n\n    private async _paymentInstrumentSelected(paymentData: GooglePaymentData, methodId: string) {\n        if (!methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        // TODO: Revisit how we deal with GooglePaymentData after receiving it from Google\n        await this._googlePayPaymentProcessor.handleSuccess(paymentData);\n\n        return await Promise.all([\n            this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n            this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n        ]);\n    }\n\n    private _handleButtlonClickedEvent(methodId: string): (event?: Event) => Promise<InternalCheckoutSelectors> {\n\n        return (event?: Event) => {\n            event?.preventDefault();\n\n            if (!methodId || !this._googlePayOptions) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const {\n                onError = () => {},\n                onPaymentSelect = () => {},\n            } = this._googlePayOptions;\n\n            return this._store.dispatch(\n                this._paymentStrategyActionCreator.widgetInteraction(\n                    async () => await this._displayWallet(methodId, onPaymentSelect, onError),\n                        { methodId }\n                ),\n                { queueId: 'widgetInteraction' }\n            );\n        };\n    }\n\n    private async _displayWallet(methodId: string, onPaymentSelect: () => void, onError: (onError: Error) => void ): Promise<void> {\n        try {\n            const paymentData = await this._googlePayPaymentProcessor.displayWallet();\n            await this._paymentInstrumentSelected(paymentData, methodId);\n\n            return onPaymentSelect();\n        } catch (error) {\n            if (error.statusCode === 'CANCELED') {\n                throw new Error('CANCELED');\n            }\n            onError(error);\n        }\n    }\n}\n","import { some } from 'lodash';\n\nimport { Payment, PaymentActionCreator, PaymentInitializeOptions } from '../..';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { PaymentMethodCancelledError } from '../../errors';\nimport { AdyenAction, AdyenAdditionalAction, AdyenAdditionalActionState, AdyenClient, AdyenError, AdyenV2ScriptLoader } from '../adyenv2';\n\nexport default class GooglePayAdyenV2PaymentProcessor {\n    private _adyenClient?: AdyenClient;\n\n    constructor(private _store: CheckoutStore, private _paymentActionCreator: PaymentActionCreator, private _scriptLoader: AdyenV2ScriptLoader) {}\n\n    async initialize(options: PaymentInitializeOptions) {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(options.methodId);\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        const clientSideAuthentication = {\n            key: '',\n            value: '',\n        };\n\n        if (paymentMethod.initializationData.originKey) {\n            clientSideAuthentication.key = 'originKey';\n            clientSideAuthentication.value = paymentMethod.initializationData.originKey;\n        } else {\n            clientSideAuthentication.key = 'clientKey';\n            clientSideAuthentication.value = paymentMethod.initializationData.clientKey;\n        }\n\n        this._adyenClient = await this._scriptLoader.load({\n            environment: paymentMethod.config.testMode ? 'TEST' : ' PRODUCTION',\n            locale: storeConfig.storeProfile.storeLanguage,\n            [clientSideAuthentication.key]: clientSideAuthentication.value,\n            paymentMethodsResponse: paymentMethod.initializationData.paymentMethodsResponse,\n        });\n    }\n\n    async processAdditionalAction(error: unknown): Promise<InternalCheckoutSelectors> {\n        if (!(error instanceof RequestError) || !some(error.body.errors, {code: 'additional_action_required'})) {\n            return Promise.reject(error);\n        }\n\n        const payment = await this._handleAction(error.body.provider_data);\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment({\n                ...payment,\n                paymentData: {\n                    ...payment.paymentData,\n                },\n            }));\n        } catch (error) {\n            return this.processAdditionalAction(error);\n        }\n    }\n\n    private _handleAction(additionalAction: AdyenAdditionalAction): Promise<Payment> {\n        return new Promise((resolve, reject) => {\n            const adyenAction: AdyenAction = JSON.parse(additionalAction.action);\n\n            const additionalActionComponent = this._getAdyenClient().createFromAction(adyenAction, {\n                onAdditionalDetails: (additionalActionState: AdyenAdditionalActionState) => {\n                    const paymentPayload = {\n                        methodId: adyenAction.paymentMethodType,\n                        paymentData: {\n                            nonce: JSON.stringify(additionalActionState.data),\n                        },\n                    };\n\n                    resolve(paymentPayload);\n                },\n                size: '05',\n                onError: (error: AdyenError) => reject(error),\n            });\n\n            additionalActionComponent.mount('body');\n\n            reject(new PaymentMethodCancelledError());\n        });\n    }\n\n    private _getAdyenClient(): AdyenClient {\n        if (!this._adyenClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._adyenClient;\n    }\n}\n","export const supportedCountries = ['AT', 'BE', 'CH', 'DE', 'DK', 'ES', 'FI', 'GB', 'IT', 'NL', 'NO', 'NZ', 'SE'];\nexport const supportedCountriesRequiringStates = ['AU'];\n","import { includes } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { PaymentMethodCancelledError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { supportedCountries, supportedCountriesRequiringStates } from '../klarnav2';\nimport PaymentStrategy from '../payment-strategy';\n\nimport KlarnaCredit, { KlarnaAddress, KlarnaLoadResponse, KlarnaUpdateSessionParams } from './klarna-credit';\nimport KlarnaScriptLoader from './klarna-script-loader';\n\nexport default class KlarnaPaymentStrategy implements PaymentStrategy {\n    private _klarnaCredit?: KlarnaCredit;\n    private _unsubscribe?: (() => void);\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _klarnaScriptLoader: KlarnaScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._klarnaScriptLoader.load()\n            .then(klarnaCredit => { this._klarnaCredit = klarnaCredit; })\n            .then(() => {\n                this._unsubscribe = this._store.subscribe(\n                    state => {\n                        if (state.paymentStrategies.isInitialized(options.methodId)) {\n                            this._loadWidget(options);\n                        }\n                    },\n                    state => {\n                        const checkout = state.checkout.getCheckout();\n\n                        return checkout && checkout.outstandingBalance;\n                    },\n                    state => {\n                        const checkout = state.checkout.getCheckout();\n\n                        return checkout && checkout.coupons;\n                    }\n                );\n\n                return this._loadWidget(options);\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!payload.payment) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment\" argument is not provided.');\n        }\n\n        const { payment: { paymentData, ...paymentPayload } } = payload;\n\n        return this._authorize()\n            .then(({ authorization_token: authorizationToken }) => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializePayment(paymentPayload.methodId, { authorizationToken })\n            ))\n            .then(() => this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: paymentPayload,\n                    useStoreCredit: payload.useStoreCredit,\n                }, options)\n            ));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _loadWidget(options: PaymentInitializeOptions): Promise<KlarnaLoadResponse> {\n        if (!options.klarna) {\n            throw new InvalidArgumentError('Unable to load widget because \"options.klarna\" argument is not provided.');\n        }\n\n        const { methodId, klarna: { container, onLoad } } = options;\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise<KlarnaLoadResponse>(resolve => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!this._klarnaCredit || !paymentMethod.clientToken) {\n                    throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n                }\n\n                this._klarnaCredit.init({ client_token: paymentMethod.clientToken });\n\n                this._klarnaCredit.load({ container }, response => {\n                    if (onLoad) {\n                        onLoad(response);\n                    }\n                    resolve(response);\n                });\n            }));\n    }\n\n    private _getUpdateSessionData(billingAddress: BillingAddress, shippingAddress?: Address): KlarnaUpdateSessionParams {\n        if (!includes([...supportedCountries, ...supportedCountriesRequiringStates], billingAddress.countryCode)) {\n            return {};\n        }\n\n        const data: KlarnaUpdateSessionParams = {\n            billing_address: this._mapToKlarnaAddress(billingAddress, billingAddress.email),\n        };\n\n        if (shippingAddress) {\n            data.shipping_address = this._mapToKlarnaAddress(shippingAddress, billingAddress.email);\n        }\n\n        return data;\n    }\n\n    private _needsStateCode(countryCode: string) {\n        return includes(supportedCountriesRequiringStates, countryCode);\n    }\n\n    private _mapToKlarnaAddress(address: Address, email?: string): KlarnaAddress {\n        const klarnaAddress: KlarnaAddress = {\n            street_address: address.address1,\n            city: address.city,\n            country: address.countryCode,\n            given_name: address.firstName,\n            family_name: address.lastName,\n            postal_code: address.postalCode,\n            region: this._needsStateCode(address.countryCode) ? address.stateOrProvinceCode : address.stateOrProvince,\n            email,\n        };\n\n        if (address.address2) {\n            klarnaAddress.street_address2 = address.address2;\n        }\n\n        if (address.phone) {\n            klarnaAddress.phone = address.phone;\n        }\n\n        return klarnaAddress;\n    }\n\n    private _authorize(): Promise<any> {\n        return new Promise((resolve, reject) => {\n            const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n            const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n\n            if (!billingAddress) {\n                throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n            }\n\n            if (!this._klarnaCredit) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            const updateSessionData = this._getUpdateSessionData(billingAddress, shippingAddress);\n\n            this._klarnaCredit.authorize(updateSessionData, res => {\n                if (res.approved) {\n                    return resolve(res);\n                }\n\n                if (res.show_form) {\n                    return reject(new PaymentMethodCancelledError());\n                }\n\n                reject(new PaymentMethodInvalidError());\n            });\n        });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport KlarnaCredit from './klarna-credit';\nimport KlarnaWindow from './klarna-window';\n\nconst SDK_URL = '//credit.klarnacdn.net/lib/v1/api.js';\n\nexport default class KlarnaScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    load(): Promise<KlarnaCredit> {\n        return this._scriptLoader.loadScript(SDK_URL)\n            .then(() => (window as unknown as KlarnaWindow).Klarna.Credit);\n    }\n}\n","import { includes } from 'lodash';\n\nimport { Address } from '../../../address';\nimport { BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { PaymentMethodCancelledError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport KlarnaPayments, { KlarnaAddress, KlarnaAuthorizationResponse, KlarnaLoadResponse, KlarnaUpdateSessionParams } from './klarna-payments';\nimport { supportedCountries, supportedCountriesRequiringStates } from './klarna-supported-countries';\nimport KlarnaV2ScriptLoader from './klarnav2-script-loader';\n\nexport default class KlarnaV2PaymentStrategy implements PaymentStrategy {\n    private _klarnaPayments?: KlarnaPayments;\n    private _unsubscribe?: (() => void);\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _klarnav2ScriptLoader: KlarnaV2ScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return this._klarnav2ScriptLoader.load()\n            .then(klarnaPayments => { this._klarnaPayments = klarnaPayments; })\n            .then(() => {\n                this._unsubscribe = this._store.subscribe(\n                    state => {\n                        if (state.paymentStrategies.isInitialized(options.methodId)) {\n                            this._loadPaymentsWidget(options);\n                        }\n                    },\n                    state => {\n                        const checkout = state.checkout.getCheckout();\n\n                        return checkout && checkout.outstandingBalance;\n                    },\n                    state => {\n                        const checkout = state.checkout.getCheckout();\n\n                        return checkout && checkout.coupons;\n                    }\n                );\n\n                return this._loadPaymentsWidget(options);\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._unsubscribe) {\n            this._unsubscribe();\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        if (!payload.payment) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment\" argument is not provided.');\n        }\n\n        const { payment: { paymentData, ...paymentPayload } } = payload;\n        const { gatewayId } = paymentPayload;\n\n        if (!gatewayId) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment.gatewayId\" argument is not provided.');\n        }\n\n        return this._authorize(paymentPayload.methodId)\n            .then(({ authorization_token: authorizationToken }) => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializePayment(gatewayId, { authorizationToken })\n            ))\n            .then(() => this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: paymentPayload,\n                    useStoreCredit: payload.useStoreCredit,\n                }, options)\n            ));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _loadPaymentsWidget(options: PaymentInitializeOptions): Promise<KlarnaLoadResponse> {\n        if (!options.klarnav2) {\n            throw new InvalidArgumentError('Unable to load widget because \"options.klarnav2\" argument is not provided.');\n        }\n\n        const { methodId, gatewayId, klarnav2: { container, onLoad } } = options;\n        const state = this._store.getState();\n\n        if (!gatewayId) {\n            throw new InvalidArgumentError('Unable to proceed because \"payload.payment.gatewayId\" argument is not provided.');\n        }\n\n        return this._updateOrder(gatewayId).then(() => new Promise<KlarnaLoadResponse>(resolve => {\n            const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n            if (!this._klarnaPayments || !paymentMethod.clientToken) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            this._klarnaPayments.init({ client_token: paymentMethod.clientToken });\n            this._klarnaPayments.load({ container, payment_method_category: paymentMethod.id }, response => {\n                if (onLoad) {\n                    onLoad(response);\n                }\n\n                resolve(response);\n            });\n        }));\n    }\n\n    private _getUpdateSessionData(billingAddress: BillingAddress, shippingAddress?: Address): KlarnaUpdateSessionParams {\n        if (!includes([...supportedCountries, ...supportedCountriesRequiringStates], billingAddress.countryCode)) {\n            return {};\n        }\n\n        const data: KlarnaUpdateSessionParams = {\n            billing_address: this._mapToKlarnaAddress(billingAddress, billingAddress.email),\n        };\n\n        if (shippingAddress) {\n            data.shipping_address = this._mapToKlarnaAddress(shippingAddress, billingAddress.email);\n        }\n\n        return data;\n    }\n\n    private _needsStateCode(countryCode: string) {\n        return includes(supportedCountriesRequiringStates, countryCode);\n    }\n\n    private _mapToKlarnaAddress(address: Address, email?: string): KlarnaAddress {\n        const klarnaAddress: KlarnaAddress = {\n            street_address: address.address1,\n            city: address.city,\n            country: address.countryCode,\n            given_name: address.firstName,\n            family_name: address.lastName,\n            postal_code: address.postalCode,\n            region: this._needsStateCode(address.countryCode) ? address.stateOrProvinceCode : address.stateOrProvince,\n            email,\n        };\n\n        if (address.address2) {\n            klarnaAddress.street_address2 = address.address2;\n        }\n\n        if (address.phone) {\n            klarnaAddress.phone = address.phone;\n        }\n\n        return klarnaAddress;\n    }\n\n    private async _updateOrder(gatewayId: string) {\n        await this._paymentMethodActionCreator.loadPaymentMethod(gatewayId).toPromise();\n    }\n\n    private _authorize(methodId: string): Promise<KlarnaAuthorizationResponse> {\n        return new Promise<KlarnaAuthorizationResponse>((resolve, reject) => {\n            const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n            const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n\n            if (!billingAddress) {\n                throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n            }\n\n            const updateSessionData = this._getUpdateSessionData(billingAddress, shippingAddress);\n\n            if (!this._klarnaPayments) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            this._klarnaPayments.authorize({ payment_method_category: methodId }, updateSessionData, res => {\n                if (res.approved) {\n                    return resolve(res);\n                }\n\n                if (res.show_form) {\n                    return reject(new PaymentMethodCancelledError());\n                }\n\n                reject(new PaymentMethodInvalidError());\n            });\n        });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport KlarnaPayments from './klarna-payments';\nimport KlarnaV2Window from './klarnav2-window';\n\nconst SDK_URL = 'https://x.klarnacdn.net/kp/lib/v1/api.js';\n\nexport default class KlarnaV2ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    load(): Promise<KlarnaPayments> {\n        return this._scriptLoader.loadScript(SDK_URL)\n            .then(() => (window as unknown as KlarnaV2Window).Klarna.Payments);\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class LegacyPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { bindDecorator as bind } from '../../../common/utility';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport getCallbackUrl from './get-callback-url';\nimport { Masterpass, MasterpassCheckoutOptions } from './masterpass';\nimport MasterpassScriptLoader from './masterpass-script-loader';\n\nexport default class MasterpassPaymentStrategy implements PaymentStrategy {\n    private _masterpassClient?: Masterpass;\n    private _paymentMethod?: PaymentMethod;\n    private _walletButton?: HTMLElement;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _masterpassScriptLoader: MasterpassScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n        const state = this._store.getState();\n        const storeConfig = state.config.getStoreConfig();\n        this._paymentMethod = this._store.getState().paymentMethods.getPaymentMethod(methodId);\n\n        if (!this._paymentMethod) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (!storeConfig) {\n            throw new InvalidArgumentError('Unable to retrieve store configuration');\n        }\n\n        const masterpassScriptLoaderParams = {\n            useMasterpassSrc: this._paymentMethod.initializationData.isMasterpassSrcEnabled,\n            language: storeConfig.storeProfile.storeLanguage,\n            testMode: this._paymentMethod.config.testMode,\n            checkoutId: this._paymentMethod.initializationData.checkoutId,\n        };\n\n        return this._masterpassScriptLoader.load(masterpassScriptLoaderParams)\n            .then(masterpass => {\n                this._masterpassClient = masterpass;\n\n                if (!options.masterpass) {\n                    throw new InvalidArgumentError('Unable to initialize payment because \"options.masterpass\" argument is not provided.');\n                }\n\n                const walletButton  = options.masterpass.walletButton && document.getElementById(options.masterpass.walletButton);\n\n                if (walletButton) {\n                    this._walletButton = walletButton;\n                    this._walletButton.addEventListener('click', this._handleWalletButtonClick);\n                }\n\n                return this._store.getState();\n            });\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        if (this._walletButton) {\n            this._walletButton.removeEventListener('click', this._handleWalletButtonClick);\n        }\n\n        this._walletButton = undefined;\n        this._masterpassClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = payload;\n        const order = { useStoreCredit: payload.useStoreCredit };\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData || !this._paymentMethod.initializationData.gateway) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        // TODO: Refactor the API endpoint to return nonce in the right place.\n        const paymentData = this._paymentMethod.initializationData.paymentData;\n\n        // TODO: Redirect to Masterpass if nonce has not been generated yet. And then finalise the order when the shopper is redirected back to the checkout page.\n        if (!paymentData) {\n            throw new InvalidArgumentError('Unable to proceed because \"paymentMethod.initializationData.paymentData\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(order, options))\n            .then(() => this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData })));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _createMasterpassPayload(): MasterpassCheckoutOptions {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        return {\n            checkoutId: this._paymentMethod.initializationData.checkoutId,\n            allowedCardTypes: this._paymentMethod.initializationData.allowedCardTypes,\n            amount: checkout.subtotal.toFixed(2),\n            currency: storeConfig.currency.code,\n            cartId: checkout.cart.id,\n            callbackUrl: getCallbackUrl('checkout'),\n        };\n    }\n\n    @bind\n    private _handleWalletButtonClick(event: Event) {\n        event.preventDefault();\n\n        if (!this._masterpassClient) {\n            return;\n        }\n\n        const payload = this._createMasterpassPayload();\n        this._masterpassClient.checkout(payload);\n    }\n}\n","import { PaypalFieldsStyleOptions } from './index';\n\n/**\n * A set of options that are required to initialize the PayPal Commerce payment\n * method could be used for PayPal Smart Payment Buttons or PayPal Credit Card methods.\n */\nexport type PaypalCommerceInitializeOptions = PaypalCommercePaymentInitializeOptions | PaypalCommerceCreditCardPaymentInitializeOptions;\n\n/**\n * A set of options that are required to initialize the PayPal Commerce payment\n * method for presenting its PayPal button.\n *\n * Please note that the minimum version of checkout-sdk is 1.100\n *\n * Also, PayPal (also known as PayPal Commerce Platform) requires specific options to initialize the PayPal Smart Payment Button on checkout page that substitutes a standard submit button\n * ```html\n * <!-- This is where the PayPal button will be inserted -->\n * <div id=\"container\"></div>\n * <!-- This is where the PayPal alternative payment methods fields will be inserted.  -->\n * <div id=\"apm-fields-container\"></div>\n * ```\n *\n * ```js\n * service.initializePayment({\n *     methodId: 'paypalcommerce',\n *     paypalcommerce: {\n *         container: '#container',\n *         apmFieldsContainer: '#apm-fields-container',\n *         apmFieldsStyles: {\n *             base: {\n *                   backgroundColor: 'transparent',\n *               },\n *               input: {\n *                   backgroundColor: 'white',\n *                   fontSize: '1rem',\n *                   color: '#333',\n *                   borderColor: '#d9d9d9',\n *                   borderRadius: '4px',\n *                   borderWidth: '1px',\n *                   padding: '1rem',\n *               },\n *               invalid: {\n *                   color: '#ed6a6a',\n *               },\n *               active: {\n *                   color: '#4496f6',\n *               },\n *         },\n *         clientId: 'YOUR_CLIENT_ID',\n * // Callback for submitting payment form that gets called when a buyer approves PayPal payment\n *         submitForm: () => {\n *         // Example function\n *             this.submitOrder(\n *                {\n *                   payment: { methodId: 'paypalcommerce', }\n *               }\n *            );\n *         },\n * // Callback is used to define the state of the payment form, validate if it is applicable for submit.\n *         onValidate: (resolve, reject) => {\n *         // Example function\n *             const isValid = this.validatePaymentForm();\n *             if (isValid) {\n *                 return resolve();\n *             }\n *             return reject();\n *         },\n * // Callback that is called right before render of a Smart Payment Button. It gets called when a buyer is eligible for use of the particular PayPal method. This callback can be used to hide the standard submit button.\n *         onRenderButton: () => {\n *         // Example function\n *             this.hidePaymentSubmitButton();\n *         }\n *     },\n * });\n * ```\n */\nexport interface PaypalCommercePaymentInitializeOptions {\n    /**\n     * The CSS selector of a container where the payment widget should be inserted into.\n     */\n    container: string;\n\n    /**\n     *  The Client ID of the Paypal App\n     */\n    clientId: string;\n\n    /**\n     * The CSS selector of a container where the alternative payment methods fields widget should be inserted into.\n     * It's necessary to specify this parameter when using Alternative Payment Methods.\n     * Without it alternative payment methods will not work.\n     */\n    apmFieldsContainer?: string;\n\n    /**\n     * Object with styles to customize alternative payment methods fields.\n     */\n    apmFieldsStyles?: PaypalFieldsStyleOptions;\n\n    /**\n     * A callback that gets called when a buyer click on Smart Payment Button\n     * and should validate payment form.\n     *\n     * @param resolve - A function, that gets called if form is valid.\n     * @param reject - A function, that gets called if form is not valid.\n     *\n     * @returns reject() or resolve()\n     */\n    onValidate(resolve: () => void, reject: () => void): Promise<void>;\n\n    /**\n     * A callback for submitting payment form that gets called\n     * when buyer approved PayPal account.\n     */\n    submitForm(): void;\n\n    /**\n     * A callback right before render Smart Payment Button that gets called when\n     * Smart Payment Button is eligible. This callback can be used to hide the standard submit button.\n     */\n    onRenderButton?(): void;\n    /**\n     * A callback for displaying error popup. This callback requires error object as parameter.\n     */\n    onError?(error: Error): void;\n}\n\n/**\n * A set of options that are required to initialize the PayPal Commerce payment\n * method for presenting its credit card form.\n *\n * ```html\n * <!-- These containers are where the hosted (iframed) credit card fields will be inserted -->\n * <div id=\"card-number\"></div>\n * <div id=\"card-name\"></div>\n * <div id=\"card-expiry\"></div>\n * <div id=\"card-code\"></div>\n * ```\n *\n * ```js\n * service.initializePayment({\n *     methodId: 'paypalcommerce',\n *     paypalcommerce: {\n *         form: {\n *             fields: {\n *                 cardNumber: { containerId: 'card-number' },\n *                 cardName: { containerId: 'card-name' },\n *                 cardExpiry: { containerId: 'card-expiry' },\n *                 cardCode: { containerId: 'card-code' },\n *             },\n *         },\n *     },\n * });\n * ```\n *\n * Additional options can be passed in to customize the fields and register\n * event callbacks.\n *\n * ```js\n * service.initializePayment({\n *     methodId: 'paypalcommerce',\n *     creditCard: {\n *         form: {\n *             fields: {\n *                 cardNumber: { containerId: 'card-number', placeholder: 'Number of card' },\n *                 cardName: { containerId: 'card-name', placeholder: 'Name of card' },\n *                 cardExpiry: { containerId: 'card-expiry', placeholder: 'Expiry of card' },\n *                 cardCode: { containerId: 'card-code', placeholder: 'Code of card' },\n *             },\n *             styles: {\n *                 default: {\n *                     color: '#000',\n *                 },\n *                 error: {\n *                     color: '#f00',\n *                 },\n *                 focus: {\n *                     color: '#0f0',\n *                 },\n *             },\n *             onBlur({ fieldType }) {\n *                 console.log(fieldType);\n *             },\n *             onFocus({ fieldType }) {\n *                 console.log(fieldType);\n *             },\n *             onEnter({ fieldType }) {\n *                 console.log(fieldType);\n *             },\n *             onCardTypeChange({ cardType }) {\n *                 console.log(cardType);\n *             },\n *             onValidate({ errors, isValid }) {\n *                 console.log(errors);\n *                 console.log(isValid);\n *             },\n *         },\n *     },\n * });\n * ```\n */\nexport interface PaypalCommerceCreditCardPaymentInitializeOptions {\n    /**\n     * The form is data for Credit Card Form\n     */\n    form: PaypalCommerceFormOptions;\n}\n\nexport interface PaypalCommerceFormOptions {\n    /**\n     * Containers for fields can be to present in one set of values\n     *\n     * ```js\n     * { cardNumber: { containerId: 'card-number' },\n     *   cardName: { containerId: 'card-name' },\n     *   cardExpiry: { containerId: 'card-expiry' },\n     *   cardCode: { containerId: 'card-code' }, }\n     * ```\n     *\n     *   Or in another set of values.\n     *\n     * ```js\n     * { cardCodeVerification: { containerId: 'card-number' },\n     *   cardNumberVerification: { containerId: 'card-name' }, }\n     * ```\n     */\n    fields: PaypalCommerceFormFieldsMap | PaypalCommerceStoredCardFieldsMap;\n\n    /**\n     * Styles for inputs. Change the width, height and other styling.\n     *\n     * ```js\n     *  default: { color: '#000' },\n     *  error: { color: '#f00' },\n     *  focus: { color: '#0f0' }\n     * ```\n     */\n    styles?: PaypalCommerceFormFieldStylesMap;\n\n    /**\n     * A callback that gets called when a field loses focus.\n     */\n    onBlur?(data: PaypalCommerceFormFieldBlurEventData): void;\n\n    /**\n     * A callback that gets called when activity within\n     * the number field has changed such that the possible\n     * card type has changed.\n     */\n    onCardTypeChange?(data: PaypalCommerceFormFieldCardTypeChangeEventData): void;\n\n    /**\n     * A callback that gets called when a field gains focus.\n     */\n    onFocus?(data: PaypalCommerceFormFieldFocusEventData): void;\n\n    /**\n     * A callback that gets called when the validity of a field has changed.\n     */\n    onValidate?(data: PaypalCommerceFormFieldValidateEventData): void;\n\n    /**\n     * A callback that gets called when the user requests submission\n     * of an input field, by pressing the Enter or Return key\n     * on their keyboard, or mobile equivalent.\n     */\n    onEnter?(data: PaypalCommerceFormFieldEnterEventData): void;\n}\n\nexport enum PaypalCommerceFormFieldType {\n    CardCode = 'cardCode',\n    CardCodeVerification = 'cardCodeVerification',\n    CardExpiry = 'cardExpiry',\n    CardName = 'cardName',\n    CardNumber = 'cardNumber',\n    CardNumberVerification = 'cardNumberVerification',\n}\n\nexport interface PaypalCommerceFormFieldsMap {\n    [PaypalCommerceFormFieldType.CardCode]?: PaypalCommerceFormFieldOptions;\n    [PaypalCommerceFormFieldType.CardExpiry]: PaypalCommerceFormFieldOptions;\n    [PaypalCommerceFormFieldType.CardName]: PaypalCommerceFormFieldOptions;\n    [PaypalCommerceFormFieldType.CardNumber]: PaypalCommerceFormFieldOptions;\n}\n\nexport interface PaypalCommerceStoredCardFieldsMap {\n    [PaypalCommerceFormFieldType.CardCodeVerification]?: PaypalCommerceStoredCardFieldOptions;\n    [PaypalCommerceFormFieldType.CardNumberVerification]?: PaypalCommerceStoredCardFieldOptions;\n}\n\nexport interface PaypalCommerceFormFieldOptions {\n    containerId: string;\n    placeholder?: string;\n}\n\nexport interface PaypalCommerceStoredCardFieldOptions extends PaypalCommerceFormFieldOptions {\n    instrumentId: string;\n}\n\nexport interface PaypalCommerceFormFieldStylesMap {\n    default?: PaypalCommerceFormFieldStyles;\n    error?: PaypalCommerceFormFieldStyles;\n    focus?: PaypalCommerceFormFieldStyles;\n}\n\nexport type PaypalCommerceFormFieldStyles = Partial<Pick<\n    CSSStyleDeclaration,\n    'color' |\n    'fontFamily' |\n    'fontSize' |\n    'fontWeight'\n    >>;\n\nexport interface PaypalCommerceFormFieldKeyboardEventData {\n    fieldType: string;\n}\n\nexport type PaypalCommerceFormFieldBlurEventData = PaypalCommerceFormFieldKeyboardEventData;\nexport type PaypalCommerceFormFieldEnterEventData = PaypalCommerceFormFieldKeyboardEventData;\nexport type PaypalCommerceFormFieldFocusEventData = PaypalCommerceFormFieldKeyboardEventData;\n\nexport interface PaypalCommerceFormFieldCardTypeChangeEventData {\n    cardType?: string;\n}\n\nexport interface PaypalCommerceFormFieldValidateEventData {\n    errors: {\n        [PaypalCommerceFormFieldType.CardCode]?: PaypalCommerceFormFieldValidateErrorData[];\n        [PaypalCommerceFormFieldType.CardExpiry]?: PaypalCommerceFormFieldValidateErrorData[];\n        [PaypalCommerceFormFieldType.CardName]?: PaypalCommerceFormFieldValidateErrorData[];\n        [PaypalCommerceFormFieldType.CardNumber]?: PaypalCommerceFormFieldValidateErrorData[];\n        [PaypalCommerceFormFieldType.CardCodeVerification]?: PaypalCommerceFormFieldValidateErrorData[];\n        [PaypalCommerceFormFieldType.CardNumberVerification]?: PaypalCommerceFormFieldValidateErrorData[];\n    };\n    isValid: boolean;\n}\n\nexport interface PaypalCommerceFormFieldValidateErrorData {\n    fieldType: string;\n    message: string;\n    type: string;\n}\n","import { isNil, kebabCase, omitBy } from 'lodash';\n\nimport { PaymentInvalidFormError, PaymentInvalidFormErrorDetails, PaymentMethodFailedError } from '../../errors';\n\nimport { PaypalCommerceFormFieldStyles, PaypalCommerceFormFieldStylesMap, PaypalCommerceFormFieldType, PaypalCommerceFormFieldValidateErrorData, PaypalCommerceFormFieldValidateEventData, PaypalCommerceFormOptions, PaypalCommerceHostedFieldsApprove, PaypalCommerceHostedFieldsRenderOptions, PaypalCommerceHostedFieldsState, PaypalCommerceHostedFieldsSubmitOptions, PaypalCommercePaymentProcessor, PaypalCommerceRegularField, PaypalCommerceScriptParams } from './index';\nimport { PaypalCommerceFormFieldsMap, PaypalCommerceStoredCardFieldsMap } from './paypal-commerce-payment-initialize-options';\n\nenum PaypalCommerceHostedFormType {\n    CreditCard,\n    StoredCardVerification,\n}\n\nexport default class PaypalCommerceHostedForm {\n    private _formOptions?: PaypalCommerceFormOptions;\n    private _cardNameField?: PaypalCommerceRegularField;\n    private _type?: PaypalCommerceHostedFormType;\n\n    constructor(\n        private _paypalCommercePaymentProcessor: PaypalCommercePaymentProcessor\n    ) {\n    }\n\n    async initialize(options: PaypalCommerceFormOptions, cartId: string, paramsScript: PaypalCommerceScriptParams) {\n        await this._paypalCommercePaymentProcessor.initialize(paramsScript);\n\n        this._formOptions = options;\n        this._type = this._isPaypalCommerceFormFieldsMap(options.fields) ?\n            PaypalCommerceHostedFormType.CreditCard :\n            PaypalCommerceHostedFormType.StoredCardVerification;\n        const params = {\n            fields: this._mapFieldOptions(options.fields),\n            styles: options.styles && this._mapStyleOptions(options.styles),\n        };\n        const events = {\n            blur: this._handleBlur,\n            focus: this._handleFocus,\n            cardTypeChange: this._handleCardTypeChange,\n            validityChange: this._handleValidityChange,\n            inputSubmitRequest: this._handleInputSubmitRequest,\n        };\n\n        await this._paypalCommercePaymentProcessor.renderHostedFields(cartId, params, events);\n\n        if (this._isPaypalCommerceFormFieldsMap(options.fields)) {\n            this._cardNameField = new PaypalCommerceRegularField(\n                options.fields.cardName,\n                options.styles\n            );\n            this._cardNameField.attach();\n        }\n    }\n\n    async submit(is3dsEnabled?: boolean): Promise<PaypalCommerceHostedFieldsApprove> {\n        this.validate();\n        const options: PaypalCommerceHostedFieldsSubmitOptions = {\n            cardholderName: this._cardNameField?.getValue(),\n            contingencies: is3dsEnabled ? ['3D_SECURE'] : undefined,\n        };\n\n        const result = await this._paypalCommercePaymentProcessor.submitHostedFields(options);\n\n        if (is3dsEnabled && (result.liabilityShift === 'NO' || result.liabilityShift === 'UNKNOWN')) {\n            throw new PaymentMethodFailedError('Failed authentication. Please try to authorize again.');\n        }\n\n        return result;\n    }\n\n    validate(): void {\n        const { isValid, fields } = this._paypalCommercePaymentProcessor.getHostedFieldsValidationState();\n\n        if (isValid) {\n            return;\n        }\n\n        const errors = this._mapValidationErrors(fields);\n\n        this._formOptions?.onValidate?.({\n            errors,\n            isValid: false,\n        });\n\n        throw new PaymentInvalidFormError(errors as PaymentInvalidFormErrorDetails);\n    }\n\n    deinitialize(): void {\n        this._paypalCommercePaymentProcessor.deinitialize();\n    }\n\n    private _mapFieldOptions(fields: PaypalCommerceFormFieldsMap | PaypalCommerceStoredCardFieldsMap): PaypalCommerceHostedFieldsRenderOptions['fields'] {\n        if (this._isPaypalCommerceFormFieldsMap(fields)) {\n            return omitBy({\n                number: {\n                    selector: `#${fields.cardNumber.containerId}`,\n                    placeholder: fields.cardNumber.placeholder,\n                },\n                expirationDate: {\n                    selector: `#${fields.cardExpiry.containerId}`,\n                    placeholder: fields.cardExpiry.placeholder,\n                },\n                cvv: fields.cardCode && {\n                    selector: `#${fields.cardCode.containerId}`,\n                    placeholder: fields.cardCode.placeholder,\n                },\n            }, isNil);\n        }\n\n        return omitBy({\n            number: fields.cardNumberVerification && {\n                selector: `#${fields.cardNumberVerification.containerId}`,\n                placeholder: fields.cardNumberVerification.placeholder,\n            },\n            cvv: fields.cardCodeVerification && {\n                selector: `#${fields.cardCodeVerification.containerId}`,\n                placeholder: fields.cardCodeVerification.placeholder,\n            },\n        }, isNil);\n    }\n\n    private _mapStyleOptions(options: PaypalCommerceFormFieldStylesMap): PaypalCommerceHostedFieldsRenderOptions['styles'] {\n        const mapStyles = (styles: PaypalCommerceFormFieldStyles = {}) => {\n            return (Object.keys(styles) as Array<keyof PaypalCommerceFormFieldStyles>).reduce((updatedStyles, key) =>\n                styles[key] ?  { ...updatedStyles, [kebabCase(key)]: styles[key] } : updatedStyles\n            , {});\n        };\n\n        return {\n            input: mapStyles(options.default),\n            '.invalid': mapStyles(options.error),\n            ':focus': mapStyles(options.focus),\n        };\n    }\n\n    private _isPaypalCommerceFormFieldsMap(fields: PaypalCommerceFormFieldsMap | PaypalCommerceStoredCardFieldsMap): fields is PaypalCommerceFormFieldsMap {\n        return !!(fields as PaypalCommerceFormFieldsMap).cardNumber;\n    }\n\n    private _mapFieldType(type: string): PaypalCommerceFormFieldType {\n        switch (type) {\n            case 'number':\n                return this._type === PaypalCommerceHostedFormType.StoredCardVerification ?\n                    PaypalCommerceFormFieldType.CardNumberVerification :\n                    PaypalCommerceFormFieldType.CardNumber;\n\n            case 'expirationDate':\n                return PaypalCommerceFormFieldType.CardExpiry;\n\n            case 'cvv':\n                return this._type === PaypalCommerceHostedFormType.StoredCardVerification ?\n                    PaypalCommerceFormFieldType.CardCodeVerification :\n                    PaypalCommerceFormFieldType.CardCode;\n\n            default:\n                throw new Error('Unexpected field type');\n        }\n    }\n\n    private _mapValidationErrors(\n        fields: PaypalCommerceHostedFieldsState['fields']\n    ): PaypalCommerceFormFieldValidateEventData['errors'] {\n        return (Object.keys(fields) as Array<keyof PaypalCommerceHostedFieldsState['fields']>)\n            .reduce((result, fieldKey) => ({\n                ...result,\n                [this._mapFieldType(fieldKey)]: fields[fieldKey]?.isValid ? undefined : [\n                    this._createInvalidError(this._mapFieldType(fieldKey)),\n                ],\n            }), {});\n    }\n\n    private _createInvalidError(fieldType: PaypalCommerceFormFieldType): PaypalCommerceFormFieldValidateErrorData {\n        switch (fieldType) {\n            case PaypalCommerceFormFieldType.CardCodeVerification:\n                return {\n                    fieldType,\n                    message: 'Invalid card code',\n                    type: 'invalid_card_code',\n                };\n\n            case PaypalCommerceFormFieldType.CardNumberVerification:\n                return {\n                    fieldType,\n                    message: 'Invalid card number',\n                    type: 'invalid_card_number',\n                };\n\n            case PaypalCommerceFormFieldType.CardCode:\n                return {\n                    fieldType,\n                    message: 'Invalid card code',\n                    type: 'invalid_card_code',\n                };\n\n            case PaypalCommerceFormFieldType.CardExpiry:\n                return {\n                    fieldType,\n                    message: 'Invalid card expiry',\n                    type: 'invalid_card_expiry',\n                };\n\n            case PaypalCommerceFormFieldType.CardNumber:\n                return {\n                    fieldType,\n                    message: 'Invalid card number',\n                    type: 'invalid_card_number',\n                };\n\n            default:\n                return {\n                    fieldType,\n                    message: 'Invalid field',\n                    type: 'invalid',\n                };\n        }\n    }\n\n    private _handleBlur: (event: PaypalCommerceHostedFieldsState) => void = event => {\n        this._formOptions?.onBlur?.({\n            fieldType: this._mapFieldType(event.emittedBy),\n        });\n    };\n\n    private _handleFocus: (event: PaypalCommerceHostedFieldsState) => void = event => {\n        this._formOptions?.onFocus?.({\n            fieldType: this._mapFieldType(event.emittedBy),\n        });\n    };\n\n    private _handleCardTypeChange: (event: PaypalCommerceHostedFieldsState) => void = event => {\n        this._formOptions?.onCardTypeChange?.({\n            cardType: event.cards[0]?.type,\n        });\n    };\n\n    private _handleInputSubmitRequest: (event: PaypalCommerceHostedFieldsState) => void = event => {\n        this._formOptions?.onEnter?.({\n            fieldType: this._mapFieldType(event.emittedBy),\n        });\n    };\n\n    private _handleValidityChange: (event: PaypalCommerceHostedFieldsState) => void = event => {\n        this._formOptions?.onValidate?.({\n            isValid: (Object.keys(event.fields) as Array<keyof PaypalCommerceHostedFieldsState['fields']>)\n                .every(key => event.fields[key]?.isValid),\n            errors: this._mapValidationErrors(event.fields),\n        });\n    };\n\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { MollieClient, MollieHostWindow } from './mollie';\n\nexport default class MollieScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: Window = window\n    ) {\n    }\n\n    _isMollieWindow(window: Window): window is MollieHostWindow {\n        const mollieWindow: MollieHostWindow = window as MollieHostWindow;\n\n        return !!mollieWindow.Mollie;\n    }\n\n    async load(merchantId: string, locale: string, testmode: boolean): Promise<MollieClient> {\n        await this._scriptLoader.loadScript('https://js.mollie.com/v1/mollie.js');\n\n        if (!this._isMollieWindow(this._window)) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.Mollie(merchantId, {\n            locale,\n            testmode,\n        });\n    }\n}\n","import { omit } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class NoPaymentDataRequiredPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._orderActionCreator.submitOrder(omit(orderRequest, 'payment'), options)\n        );\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class OfflinePaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const action = this._orderActionCreator.submitOrder({\n            ...payload,\n            payment: payload.payment ? { methodId: payload.payment.methodId } : undefined,\n        }, options);\n\n        return this._store.dispatch(action);\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderActionCreator, OrderPaymentRequestBody, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport { HostedInstrument, VaultedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nexport default class OffsitePaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) {}\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const orderPayload = this._shouldSubmitFullPayload(payment) ? payload : order;\n        const paymentData = payment && payment.paymentData;\n        const instrumentId = paymentData && (paymentData as VaultedInstrument).instrumentId || undefined;\n        const shouldSaveInstrument = paymentData && (paymentData as HostedInstrument).shouldSaveInstrument || undefined;\n        const shouldSetAsDefaultInstrument = paymentData && (paymentData as HostedInstrument).shouldSetAsDefaultInstrument || undefined;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        const { methodId, gatewayId } = payment;\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(orderPayload, options))\n            .then(() =>\n            this._store.dispatch(this._paymentActionCreator.initializeOffsitePayment({\n                    methodId,\n                    gatewayId,\n                    instrumentId,\n                    shouldSaveInstrument,\n                    shouldSetAsDefaultInstrument,\n                }))\n            );\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n        const status = state.payment.getPaymentStatus();\n\n        if (order && (status === paymentStatusTypes.ACKNOWLEDGE || status === paymentStatusTypes.FINALIZE)) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _shouldSubmitFullPayload(payment?: OrderPaymentRequestBody): boolean {\n        // FIXME: A temporary workaround to support offsite payment methods\n        // where their return URL needs to be provided by the core app.\n        if (!payment) {\n            return false;\n        }\n\n        return payment.gatewayId === 'adyen' || payment.gatewayId === 'barclaycard' || payment.methodId === 'ccavenuemars';\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { ACKNOWLEDGE } from '../../payment-status-types';\nimport { CardinalThreeDSecureFlow } from '../cardinal';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class PaypalProPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _threeDSecureFlow: CardinalThreeDSecureFlow\n    ) {\n        super(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        );\n    }\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        await super.initialize(options);\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n        const paymentMethod = getPaymentMethodOrThrow(options.methodId);\n\n        if (paymentMethod.config.is3dsEnabled) {\n            await this._threeDSecureFlow.prepare(paymentMethod);\n        }\n\n        return this._store.getState();\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment: { methodId = '' } = {} } = payload;\n        const { payment: { getPaymentStatus }, paymentMethods: { getPaymentMethodOrThrow } } = this._store.getState();\n\n        if (getPaymentStatus() === ACKNOWLEDGE) {\n            return this._store.dispatch(\n                this._orderActionCreator.submitOrder({\n                    ...payload,\n                    payment: { methodId },\n                }, options)\n            );\n        }\n\n        if (getPaymentMethodOrThrow(methodId).config.is3dsEnabled) {\n            return this._threeDSecureFlow.start(\n                super.execute.bind(this),\n                payload,\n                options,\n                this._hostedForm\n            );\n        }\n\n        return super.execute(payload, options);\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport PaymentMethod from '../../payment-method';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport PaymentStrategy from '../payment-strategy';\n\nimport PaypalScriptLoader from './paypal-script-loader';\nimport { PaypalHostWindow, PaypalSDK } from './paypal-sdk';\n\nexport default class PaypalExpressPaymentStrategy implements PaymentStrategy {\n    private _paypalSdk?: PaypalSDK;\n    private _paymentMethod?: PaymentMethod;\n    private _useRedirectFlow: boolean = false;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _scriptLoader: PaypalScriptLoader,\n        private _window: PaypalHostWindow = window\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(options.methodId);\n        this._useRedirectFlow = (options.paypalexpress && options.paypalexpress.useRedirectFlow) === true;\n\n        if (!this._isInContextEnabled()) {\n            return Promise.resolve(this._store.getState());\n        }\n\n        return this._scriptLoader.loadPaypal()\n            .then(paypal => {\n                this._paypalSdk = paypal;\n\n                if (!this._paymentMethod || !this._paymentMethod.config.merchantId) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                this._paypalSdk.checkout.setup(this._paymentMethod.config.merchantId, {\n                    button: 'paypal-button',\n                    environment: this._paymentMethod.config.testMode ? 'sandbox' : 'production',\n                });\n            })\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        if (this._isInContextEnabled() && this._paypalSdk) {\n            this._paypalSdk.checkout.closeFlow();\n            this._paypalSdk = undefined;\n        }\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const paypal = this._paypalSdk;\n\n        if (this._isAcknowledgedOrFinalized()) {\n            return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options));\n        }\n\n        if (!this._isInContextEnabled() || this._useRedirectFlow) {\n            return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options))\n                .then(state => {\n                    const redirectUrl = state.payment.getPaymentRedirectUrl();\n\n                    if (redirectUrl) {\n                        this._window.top.location.href = redirectUrl;\n                    }\n\n                    // We need to hold execution so the consumer does not redirect us somewhere else\n                    return new Promise<never>(() => {});\n                });\n        }\n\n        if (!paypal) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        paypal.checkout.initXO();\n\n        return this._store.dispatch(this._orderActionCreator.submitOrder(payload, options))\n            .then(state => {\n                const redirectUrl = state.payment.getPaymentRedirectUrl();\n\n                if (redirectUrl) {\n                    paypal.checkout.startFlow(redirectUrl);\n                }\n\n                // We need to hold execution so the consumer does not redirect us somewhere else\n                return new Promise<never>(() => {});\n            })\n            .catch(error => {\n                paypal.checkout.closeFlow();\n\n                return Promise.reject(error);\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && this._isAcknowledgedOrFinalized()) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _isAcknowledgedOrFinalized(): boolean {\n        const state = this._store.getState();\n\n        return state.payment.getPaymentStatus() === paymentStatusTypes.ACKNOWLEDGE\n            || state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE;\n    }\n\n    private _isInContextEnabled(): boolean {\n        return !!(this._paymentMethod && this._paymentMethod.config.merchantId);\n    }\n}\n","import { Cart } from '../../../cart';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { PaypalCommerceCreditCardPaymentInitializeOptions, PaypalCommerceHostedForm, PaypalCommerceInitializationData, PaypalCommercePaymentInitializeOptions, PaypalCommerceScriptParams } from './index';\n\nexport default class PaypalCommerceCreditCardPaymentStrategy implements PaymentStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paypalCommerceHostedForm: PaypalCommerceHostedForm,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator\n    ) {}\n\n    async initialize({ methodId, paypalcommerce }: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        if (!paypalcommerce || !this._isPaypalCommerceOptionsPayments(paypalcommerce)) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.paypalcommerce.form\" argument is not provided.');\n        }\n\n        const { paymentMethods: { getPaymentMethodOrThrow }, cart: { getCartOrThrow } } = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n        const { clientToken, initializationData } = getPaymentMethodOrThrow(methodId);\n\n        if (!clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const { id: cartId, currency: { code: currencyCode } } = getCartOrThrow();\n        const paramsScript = this._getOptionsScript(initializationData, currencyCode, clientToken);\n\n        await this._paypalCommerceHostedForm.initialize(paypalcommerce.form, cartId, paramsScript);\n\n        return this._store.getState();\n    }\n\n    async execute(payload: OrderRequestBody, options: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        this._paypalCommerceHostedForm.validate();\n\n        const { paymentMethods: { getPaymentMethodOrThrow } } = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(payment.methodId));\n        const { orderId } = await this._paypalCommerceHostedForm.submit(getPaymentMethodOrThrow(payment.methodId).config.is3dsEnabled);\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        const paymentData =  {\n            formattedPayload: {\n                vault_payment_instrument: null,\n                set_as_default_stored_instrument: null,\n                device_info: null,\n                paypal_account: {\n                    order_id: orderId,\n                },\n            },\n        };\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paypalCommerceHostedForm.deinitialize();\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _isPaypalCommerceOptionsPayments(options: PaypalCommercePaymentInitializeOptions | PaypalCommerceCreditCardPaymentInitializeOptions): options is PaypalCommerceCreditCardPaymentInitializeOptions {\n        return !!(options as PaypalCommerceCreditCardPaymentInitializeOptions).form;\n    }\n\n    private _getOptionsScript(initializationData: PaypalCommerceInitializationData, currencyCode: Cart['currency']['code'], clientToken: string): PaypalCommerceScriptParams {\n        const { clientId, intent, merchantId } = initializationData;\n\n        return {\n            'client-id': clientId,\n            'merchant-id': merchantId,\n            'data-client-token': clientToken,\n            components: ['hosted-fields'],\n            commit: true,\n            currency: currencyCode,\n            intent,\n        };\n    }\n}\n","import { InvalidArgumentError } from '../../../common/error/errors';\n\nimport { PaypalCommerceFormFieldOptions, PaypalCommerceFormFieldStyles, PaypalCommerceFormFieldStylesMap } from './index';\n\nexport default class PaypalCommerceRegularField {\n    private _input: HTMLInputElement;\n\n    constructor(\n        private _options: PaypalCommerceFormFieldOptions,\n        private _styles?: PaypalCommerceFormFieldStylesMap\n    ) {\n        this._input = document.createElement('input');\n        this._input.style.backgroundColor = 'transparent';\n        this._input.style.border = '0';\n        this._input.style.display = 'block';\n        this._input.style.height = '100%';\n        this._input.style.margin = '0';\n        this._input.style.outline = 'none';\n        this._input.style.padding = '0';\n        this._input.style.width = '100%';\n        this._input.placeholder = this._options.placeholder || '';\n\n        this._input.addEventListener('blur', this._handleBlur);\n        this._input.addEventListener('focus', this._handleFocus);\n\n        this._applyStyles(this._styles?.default);\n    }\n\n    getValue(): string {\n        return this._input.value;\n    }\n\n    attach(): void {\n        const container = document.getElementById(this._options.containerId);\n\n        if (!container) {\n            throw new InvalidArgumentError();\n        }\n\n        container.appendChild(this._input);\n    }\n\n    detach(): void {\n        this._input.parentNode?.removeChild(this._input);\n    }\n\n    private _applyStyles(styles?: PaypalCommerceFormFieldStyles): void {\n        if (!styles) {\n            return;\n        }\n\n        const styleKeys = Object.keys(styles) as Array<keyof PaypalCommerceFormFieldStyles>;\n\n        styleKeys.forEach(key => {\n            this._input.style[key] = styles[key] || '';\n        });\n    }\n\n    private _handleBlur: (event: Event) => void = () => {\n        this._applyStyles(this._styles?.default);\n    };\n\n    private _handleFocus: (event: Event) => void = () => {\n        this._applyStyles(this._styles?.focus);\n    };\n}\n","export default interface SquarePaymentForm {\n    build(): void;\n    requestCardNonce(): void;\n    setPostalCode(postalCode: string): void;\n}\n\nexport type SquarePaymentFormConstructor = new(options: SquareFormOptions) => SquarePaymentForm;\n\nexport interface SquareFormOptions {\n    applicationId: string;\n    env: string;\n    locationId: string;\n    inputClass?: string;\n    inputStyles?: string[];\n    callbacks?: SquareFormCallbacks;\n    cardNumber: SquareFormElement;\n    cvv: SquareFormElement;\n    expirationDate: SquareFormElement;\n    postalCode: SquareFormElement;\n    masterpass: SquareFormElement;\n}\nexport interface LineItem {\n    label: string;\n    amount: string;\n    pending: boolean;\n}\n\nexport interface SquarePaymentRequest {\n    requestShippingAddress: boolean;\n    requestBillingInfo: boolean;\n    shippingContact?: Contact;\n    countryCode: string;\n    currencyCode: string;\n    lineItems?: LineItem[];\n    total: LineItem;\n}\n\nexport interface NonceGenerationError {\n    type: string;\n    message: string;\n    field: string;\n}\n\nexport interface CardData {\n    card_brand: CardBrand;\n    last_4: number;\n    exp_month: number;\n    exp_year: number;\n    billing_postal_code: string;\n    digital_wallet_type: DigitalWalletType;\n}\n\nexport interface Contact {\n    familyName: string;\n    givenName: string;\n    email: string;\n    country: string;\n    countryName: string;\n    region: string;\n    city: string;\n    addressLines: string[];\n    postalCode: string;\n    phone: string;\n}\n\nexport enum CardBrand {\n    americanExpress = 'AMERICAN_EXPRESS',\n    discover = 'DISCOVER',\n    discoverDiners = 'DISCOVER_DINERS',\n    JCB = 'JCB',\n    masterCard = 'MASTERCARD',\n    unionPay = 'CHINA_UNIONPAY',\n    unknown = 'OTHER_BRAND',\n    visa = 'VISA',\n    squareGift = 'SQUARE_GIFT_CARD',\n}\n\nexport enum DigitalWalletType {\n    applePay = 'APPLEPAY',\n    masterpass = 'MASTERPASS',\n    none = 'NONE',\n}\n\n/**\n * Configures any form element provided by Square payment.\n */\nexport interface SquareFormElement {\n    /**\n     * The ID of the container which the form element should insert into.\n     */\n    elementId: string;\n\n    /**\n     * The placeholder text to use for the form element, if provided.\n     */\n    placeholder?: string;\n}\n\nexport interface SquareFormCallbacks {\n    paymentFormLoaded?(form: SquarePaymentForm): void;\n    unsupportedBrowserDetected?(): void;\n    cardNonceResponseReceived?(\n        errors?: NonceGenerationError[],\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact): void;\n    methodsSupported?(methods: { [key: string]: boolean }): void;\n    createPaymentRequest?(): void;\n}\n\nexport type SquareFormFactory = (options: SquareFormOptions) => SquarePaymentForm;\n","import { Cart } from '../../../cart';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, TimeoutError } from '../../../common/error/errors';\nimport { LoadingIndicator } from '../../../common/loading-indicator';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { PaymentArgumentInvalidError, PaymentMethodInvalidError } from '../../errors';\nimport { PaymentStrategyType } from '../../index';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { ApproveDataOptions,\n    ButtonsOptions,\n    ComponentsScriptType,\n    PaypalCommerceCreditCardPaymentInitializeOptions,\n    PaypalCommerceFundingKeyResolver,\n    PaypalCommerceInitializationData,\n    PaypalCommercePaymentInitializeOptions,\n    PaypalCommercePaymentProcessor,\n    PaypalCommerceRequestSender,\n    PaypalCommerceScriptParams } from './index';\n\nconst ORDER_STATUS_APPROVED = 'APPROVED';\nconst ORDER_STATUS_CREATED = 'CREATED';\nconst PAYER_ACTION_REQUIRED = 'PAYER_ACTION_REQUIRED';\nconst POLLING_INTERVAL = 3000;\nconst POLLING_MAX_TIME = 600000;\n\nexport default class PaypalCommercePaymentStrategy implements PaymentStrategy {\n    private _orderId?: string;\n    private _isAPM?: boolean;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paypalCommercePaymentProcessor: PaypalCommercePaymentProcessor,\n        private _paypalCommerceFundingKeyResolver: PaypalCommerceFundingKeyResolver,\n        private _paypalCommerceRequestSender: PaypalCommerceRequestSender,\n        private _loadingIndicator: LoadingIndicator,\n        private _pollingInterval?: number,\n        private _pollingTimer = 0\n    ) {}\n\n    async initialize({ gatewayId, methodId, paypalcommerce }: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const {\n            paymentMethods: { getPaymentMethodOrThrow },\n            cart: { getCartOrThrow },\n            billingAddress: { getBillingAddressOrThrow },\n        } = this._store.getState();\n\n        const { initializationData } = getPaymentMethodOrThrow(methodId, gatewayId);\n        const { orderId, buttonStyle } = initializationData ?? {};\n        this._isAPM = gatewayId === PaymentStrategyType.PAYPAL_COMMERCE_ALTERNATIVE_METHODS;\n\n        if (orderId) {\n            this._orderId = orderId;\n\n            return this._store.getState();\n        }\n\n        if (!paypalcommerce) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.paypalcommerce\" argument is not provided.');\n        }\n\n        if (!this._isPaypalCommerceOptionsPayments(paypalcommerce)) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.paypalcommerce\" argument should contain \"container\", \"onRenderButton\", \"submitForm\".');\n        }\n\n        const { container, apmFieldsContainer, apmFieldsStyles, onRenderButton, submitForm, onValidate } = paypalcommerce;\n        const { id: cartId, currency: { code: currencyCode } } = getCartOrThrow();\n        const { firstName, lastName, email } = getBillingAddressOrThrow();\n\n        const loadingIndicatorContainerId = container.split('#')[1];\n\n        const paramsScript = this._getOptionsScript(initializationData, currencyCode, this._isAPM ? methodId : undefined);\n        const buttonParams: ButtonsOptions = {\n            style: buttonStyle,\n            onApprove: data => {\n                this._deinitializePollingTimer(gatewayId);\n                this._tokenizePayment(data, submitForm);\n                this._loadingIndicator?.hide();\n\n            },\n            onClick: async (_, actions) => {\n                this._initializePollingMechanism(submitForm, gatewayId, methodId, paypalcommerce);\n\n                const onValidationPassed = () => {\n                    this._loadingIndicator?.show(loadingIndicatorContainerId);\n\n                    return actions.resolve();\n                };\n\n                return onValidate(onValidationPassed, actions.reject);\n            },\n            onCancel: () => {\n                this._deinitializePollingTimer(gatewayId);\n                this._loadingIndicator?.hide();\n            },\n            onError: (e: Error) => {\n                this._deinitializePollingTimer(gatewayId);\n                this._loadingIndicator?.hide();\n                paypalcommerce.onError?.(e);\n            },\n        };\n\n        await this._paypalCommercePaymentProcessor.initialize(paramsScript, undefined, gatewayId);\n\n        const fundingKey = this._paypalCommerceFundingKeyResolver.resolve(methodId, gatewayId);\n\n        if (this._isAPM)  {\n            const fullName = `${firstName} ${lastName}`;\n            if (!apmFieldsContainer) {\n                throw new InvalidArgumentError('Unable to initialize payment because \"options.paypalcommerce\" argument should contain \"apmFieldsContainer\".');\n            }\n            this._paypalCommercePaymentProcessor.renderFields({\n                apmFieldsContainer,\n                fundingKey,\n                apmFieldsStyles,\n                fullName,\n                email,\n            });\n        }\n\n        this._paypalCommercePaymentProcessor.renderButtons(cartId, container, buttonParams, {\n            onRenderButton,\n            fundingKey,\n            paramsForProvider: {isCheckout: true},\n        });\n\n        return this._store.getState();\n    }\n\n    async execute(payload: OrderRequestBody, options: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n\n        if (!payment) {\n            throw new PaymentArgumentInvalidError(['payment']);\n        }\n\n        if (!this._orderId) {\n            throw new PaymentMethodInvalidError();\n        }\n\n        const paymentData =  {\n            formattedPayload: {\n                vault_payment_instrument: null,\n                set_as_default_stored_instrument: null,\n                device_info: null,\n                method_id: payment.methodId,\n                paypal_account: {\n                    order_id: this._orderId,\n                },\n            },\n        };\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n\n        return this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    async deinitialize({gatewayId}: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        this._deinitializePollingTimer(gatewayId);\n        this._orderId = undefined;\n        this._paypalCommercePaymentProcessor.deinitialize();\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _initializePollingMechanism(submitForm: () => void, gatewayId?: string, methodId?: any, paypalcommerce?: any ) {\n        if (!this._isAPM)  {\n            this._loadingIndicator?.hide();\n\n            return;\n        }\n\n        this._pollingInterval = window.setTimeout(async () => {\n            try {\n                this._pollingTimer += POLLING_INTERVAL;\n\n                const { status } = await this._paypalCommerceRequestSender.getOrderStatus();\n\n                if (status === ORDER_STATUS_APPROVED) {\n                    this._deinitializePollingTimer(gatewayId);\n                    this._tokenizePayment({ orderID: this._paypalCommercePaymentProcessor.getOrderId() }, submitForm);\n                } else if (\n                    (status === ORDER_STATUS_CREATED || status === PAYER_ACTION_REQUIRED) &&\n                    this._pollingTimer < POLLING_MAX_TIME\n                ) {\n                    this._initializePollingMechanism(submitForm, gatewayId, methodId, paypalcommerce);\n                } else {\n                    this._reinitializeButtons({ gatewayId, methodId, paypalcommerce });\n                    this._loadingIndicator?.hide();\n                    throw new TimeoutError();\n                }\n            } catch (e) {\n                this._deinitializePollingTimer(gatewayId);\n                paypalcommerce.onError?.(e);\n            }\n        }, POLLING_INTERVAL);\n    }\n\n    private _reinitializeButtons({ gatewayId, methodId, paypalcommerce }: PaymentInitializeOptions) {\n        this.deinitialize({methodId, gatewayId});\n        this.initialize({ gatewayId, methodId, paypalcommerce });\n    }\n\n    private _deinitializePollingTimer(gatewayId?: string) {\n        if (gatewayId === PaymentStrategyType.PAYPAL_COMMERCE_ALTERNATIVE_METHODS) {\n            clearTimeout(this._pollingInterval);\n            this._pollingTimer = 0;\n        }\n    }\n\n    private _isPaypalCommerceOptionsPayments(options: PaypalCommercePaymentInitializeOptions | PaypalCommerceCreditCardPaymentInitializeOptions): options is PaypalCommercePaymentInitializeOptions {\n        return !!(options as PaypalCommercePaymentInitializeOptions).container;\n    }\n\n    private _tokenizePayment({ orderID }: ApproveDataOptions, submitForm: () => void) {\n        this._orderId = orderID;\n        submitForm();\n    }\n\n    private _getOptionsScript(\n        initializationData: PaypalCommerceInitializationData,\n        currencyCode: Cart['currency']['code'],\n        apmMehodId?: string\n    ): PaypalCommerceScriptParams {\n        const { clientId, intent, merchantId, buyerCountry, isDeveloperModeApplicable } = initializationData;\n\n        const returnObject = {\n            'client-id': clientId,\n            'merchant-id': merchantId,\n            commit: true,\n            currency: currencyCode,\n            intent,\n            components: ['buttons', 'messages', 'fields', 'funding-eligibility'] as ComponentsScriptType,\n            ...(apmMehodId && { 'enable-funding': apmMehodId}),\n            ...(isDeveloperModeApplicable && { 'buyer-country': buyerCountry }),\n        };\n\n        return returnObject;\n    }\n}\n","import PaymentStrategyType from '../../payment-strategy-type';\n\nimport { PaypalCommerceSDKFunding } from './paypal-commerce-sdk';\n\nexport default class PaypalCommerceFundingKeyResolver {\n    resolve(methodId: string, gatewayId?: string): keyof PaypalCommerceSDKFunding {\n        if (methodId === PaymentStrategyType.PAYPAL_COMMERCE) {\n            return 'PAYPAL';\n        }\n\n        if (methodId === PaymentStrategyType.PAYPAL_COMMERCE_CREDIT) {\n            return 'PAYLATER';\n        }\n\n        if (gatewayId === PaymentStrategyType.PAYPAL_COMMERCE_ALTERNATIVE_METHODS) {\n            switch (methodId) {\n                case 'bancontact':\n                    return 'BANCONTACT';\n                case 'giropay':\n                    return 'GIROPAY';\n                case 'przelewy24':\n                    return 'P24';\n                case 'eps':\n                    return 'EPS';\n                case 'ideal':\n                    return 'IDEAL';\n                case 'mybank':\n                    return 'MYBANK';\n                case 'sofort':\n                    return 'SOFORT';\n                case 'blik':\n                    return 'BLIK';\n                case 'trustly':\n                    return 'TRUSTLY';\n            }\n        }\n\n        throw new Error('Unable to resolve funding key');\n    }\n}\n","import { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { OrderRequestBody } from '../../../order';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nexport class PPSDKStrategy implements PaymentStrategy {\n\n    constructor(\n        protected _store: CheckoutStore\n    ) {}\n\n    execute(_payload: OrderRequestBody, _options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    finalize(_options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    initialize(_options?: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(_options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { FormPoster } from '@bigcommerce/form-poster';\nimport { some } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { RequestError } from '../../../common/error/errors';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport * as paymentStatusTypes from '../../payment-status-types';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nexport default class SagePayPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _formPoster: FormPoster\n    ) {\n        super(store, orderActionCreator, paymentActionCreator, hostedFormFactory);\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        return super.execute(payload, options)\n            .catch((error: Error) => {\n                if (!(error instanceof RequestError) || !some(error.body.errors, { code: 'three_d_secure_required' })) {\n                    return Promise.reject(error);\n                }\n\n                return new Promise(() => {\n                    this._formPoster.postForm(error.body.three_ds_result.acs_url, {\n                        PaReq: error.body.three_ds_result.payer_auth_request,\n                        TermUrl: error.body.three_ds_result.callback_url,\n                        MD: error.body.three_ds_result.merchant_data,\n                    }, undefined, '_top');\n                });\n            });\n    }\n\n    finalize(options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const state = this._store.getState();\n        const order = state.order.getOrder();\n\n        if (order && state.payment.getPaymentStatus() === paymentStatusTypes.FINALIZE) {\n            return this._store.dispatch(this._orderActionCreator.finalizeOrder(order.orderId, options));\n        }\n\n        return super.finalize(options);\n    }\n}\n","import StandardError from './standard-error';\n\n/**\n * Throw this error if the shopper is using a browser version that is not\n * supported by us or any third party provider we use.\n */\nexport default class UnsupportedBrowserError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unsupported browser error');\n\n        this.name = 'UnsupportedBrowserError';\n        this.type = 'unsupported_browser';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\nimport { omit } from 'lodash';\nimport { noop } from 'rxjs';\n\nimport { CheckoutActionCreator, CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, TimeoutError, UnsupportedBrowserError } from '../../../common/error/errors';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { NonceInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategyActionCreator from '../../payment-strategy-action-creator';\nimport PaymentStrategy from '../payment-strategy';\n\nimport SquarePaymentForm, { CardData, Contact, DigitalWalletType, NonceGenerationError, SquareFormElement, SquareFormOptions, SquarePaymentRequest } from './square-form';\nimport SquarePaymentInitializeOptions from './square-payment-initialize-options';\nimport SquareScriptLoader from './square-script-loader';\n\nexport default class SquarePaymentStrategy implements PaymentStrategy {\n    private _deferredRequestNonce?: DeferredPromise;\n    private _paymentForm?: SquarePaymentForm;\n    private _paymentMethod?: PaymentMethod;\n    private _squareOptions?: SquarePaymentInitializeOptions;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _requestSender: RequestSender,\n        private _scriptLoader: SquareScriptLoader\n    ) {}\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { methodId } = options;\n\n        this._syncPaymentMethod(methodId);\n\n        return this._scriptLoader.load()\n            .then(createSquareForm =>\n                new Promise((resolve, reject) => {\n                    this._paymentForm = createSquareForm(\n                        this._getFormOptions(options, { resolve, reject })\n                    );\n                    this._paymentForm.build();\n                }))\n            .then(() => this._store.getState());\n    }\n\n    execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment } = orderRequest;\n\n        if (!payment || !payment.methodId) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment.methodId\" argument is not provided.');\n        }\n\n        this._syncPaymentMethod(payment.methodId);\n\n        return this._getNonceInstrument(payment.methodId)\n            .then(paymentData =>\n                this._store.dispatch(this._orderActionCreator.submitOrder(omit(orderRequest, 'payment'), options))\n                .then(() =>\n                    this._store.dispatch(this._paymentActionCreator.submitPayment({ ...payment, paymentData }))\n                ));\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _syncPaymentMethod(methodId: string): void {\n        const state = this._store.getState();\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (!this._paymentMethod || !this._paymentMethod.initializationData) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n    }\n\n    private _getCountryCode(countryName: string) {\n        switch (countryName.toUpperCase()) {\n            case 'NEW ZELAND':\n                return 'NZ';\n            case 'AUSTRALIA':\n                return 'AU';\n            default:\n                return 'US';\n        }\n    }\n\n    private _getNonceInstrument(methodId: string): Promise<NonceInstrument> {\n        const state = this._store.getState();\n        const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n        if (paymentMethod) {\n            const { initializationData } = paymentMethod;\n            if (initializationData && initializationData.paymentData.nonce) {\n                return Promise.resolve({ nonce: paymentMethod.initializationData.paymentData.nonce });\n            }\n        }\n\n        return new Promise<NonceInstrument>((resolve, reject) => {\n            if (!this._paymentForm) {\n                throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n            }\n\n            if (this._deferredRequestNonce) {\n                this._deferredRequestNonce.reject(new TimeoutError());\n            }\n\n            this._deferredRequestNonce = { resolve, reject };\n            this._paymentForm.requestCardNonce();\n        });\n    }\n\n    private _getFormOptions(options: PaymentInitializeOptions, deferred: DeferredPromise): SquareFormOptions {\n        const { square: squareOptions } = options;\n\n        if (!squareOptions || !this._paymentMethod) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.square\" argument is not provided.');\n        }\n\n        this._squareOptions = squareOptions;\n\n        return {\n            ...this._squareOptions,\n            ...this._paymentMethod.initializationData,\n            callbacks: {\n                cardNonceResponseReceived: (errors, nonce, cardData, billingContact, shippingContact) => {\n                    if (cardData && cardData.digital_wallet_type !== DigitalWalletType.none) {\n                        this._handleWalletNonceResponse(errors, nonce, cardData, billingContact, shippingContact);\n                    } else {\n                        this._handleCardNonceResponse(errors, nonce);\n                    }\n                },\n                createPaymentRequest: () => this._paymentRequestPayload(),\n                methodsSupported: methods => {\n                    const { masterpass } = squareOptions;\n\n                    if (masterpass) {\n                        this._showPaymentMethods(methods, masterpass);\n                    }\n                },\n                paymentFormLoaded: () => {\n                    deferred.resolve();\n                    this._setPostalCode();\n                },\n                unsupportedBrowserDetected: () => deferred.reject(new UnsupportedBrowserError()),\n            },\n        };\n    }\n\n    private _handleWalletNonceResponse(\n        errors?: NonceGenerationError[],\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact\n    ): void {\n        const onError = this._squareOptions && this._squareOptions.onError || noop;\n        const onPaymentSelect = this._squareOptions && this._squareOptions.onPaymentSelect || noop;\n\n        if (errors) {\n            onError(errors);\n        } else if (nonce && this._paymentMethod) {\n            this._paymentInstrumentSelected(\n                this._paymentMethod.id,\n                nonce,\n                cardData,\n                billingContact,\n                shippingContact\n            )\n                .then(onPaymentSelect)\n                .catch(onError);\n        }\n    }\n\n    private _handleCardNonceResponse(errors?: NonceGenerationError[], nonce?: string): void {\n        if (!this._deferredRequestNonce) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (nonce && !errors) {\n            this._deferredRequestNonce.resolve({ nonce });\n\n            return;\n        }\n\n        const onError = this._squareOptions && this._squareOptions.onError || noop;\n\n        onError(errors);\n\n        this._deferredRequestNonce.reject(errors);\n    }\n\n    private _paymentInstrumentSelected(\n        methodId: string,\n        nonce?: string,\n        cardData?: CardData,\n        billingContact?: Contact,\n        shippingContact?: Contact): Promise<InternalCheckoutSelectors> {\n\n        return this._store.dispatch(this._paymentStrategyActionCreator.widgetInteraction(() => {\n            return this._setExternalCheckoutData(nonce, cardData, billingContact, shippingContact)\n            .then(() =>\n                Promise.all([\n                this._store.dispatch(this._checkoutActionCreator.loadCurrentCheckout()),\n                this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId)),\n            ]));\n        }, { methodId }), { queueId: 'widgetInteraction' });\n    }\n\n    private _paymentRequestPayload(): SquarePaymentRequest {\n        const state = this._store.getState();\n        const checkout = state.checkout.getCheckout();\n        const storeConfig = state.config.getStoreConfig();\n\n        if (!checkout) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n        }\n\n        if (!storeConfig) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        return {\n            requestShippingAddress: true,\n            requestBillingInfo: true,\n            currencyCode: storeConfig.currency.code,\n            countryCode: this._getCountryCode(storeConfig.storeProfile.storeCountry),\n            total: {\n                label: storeConfig.storeProfile.storeName,\n                amount: String(checkout.subtotal),\n                pending: false,\n            },\n        };\n    }\n\n    private _setExternalCheckoutData(nonce?: string, cardData?: CardData, billingContact?: Contact, shippingContact?: Contact): Promise<Response<any>> {\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                nonce,\n                provider: 'squarev2',\n                action: 'set_external_checkout',\n                cardData: JSON.stringify(cardData),\n                billingContact: JSON.stringify(billingContact),\n                shippingContact: JSON.stringify(shippingContact),\n            },\n        });\n    }\n\n    private _setPostalCode(): void {\n        const state = this._store.getState();\n        const billingAddress = state.billingAddress.getBillingAddress();\n\n        if (!this._paymentForm) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        if (billingAddress && billingAddress.postalCode) {\n            this._paymentForm.setPostalCode(billingAddress.postalCode);\n        }\n    }\n\n    private _showPaymentMethods(methods: { [key: string]: boolean }, element: SquareFormElement): void {\n        const masterpassBtn = document.getElementById(element.elementId);\n\n        if (masterpassBtn && methods.masterpass) {\n            masterpassBtn.style.display = 'inline-block';\n        }\n    }\n}\n\nexport interface DeferredPromise {\n    resolve(resolution?: NonceInstrument): void;\n    reject(reason?: any): void;\n}\n","interface BaseElementOptions {\n    /**\n     * Customize the appearance of an element using CSS properties passed in a [Style](https://stripe.com/docs/js/appendix/style) object,\n     * which consists of CSS properties nested under objects for each variant.\n     */\n    style?: StripeElementStyle;\n\n    /**\n     * Set custom class names on the container DOM element when the Stripe element is in a particular state.\n     */\n    classes?: StripeElementClasses;\n\n    /**\n     * Applies a disabled state to the Element such that user input is not accepted. Default is false.\n     */\n    disabled?: boolean;\n}\n\nexport interface CreatePaymentMethodCardData extends PaymentMethodCreateParams {\n    card?: StripeElement;\n}\n\nexport interface CreatePaymentMethodIdealData extends PaymentMethodCreateParams {\n    ideal?: StripeElement;\n}\n\nexport interface CreatePaymentMethodSepaData extends PaymentMethodCreateParams {\n    sepa_debit?: StripeElement;\n}\n\n/**\n * The PaymentIntent object.\n */\nexport interface PaymentIntent {\n    /**\n     * Unique identifier for the object.\n     */\n    id: string;\n\n    /**\n     * Status of this PaymentIntent. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).\n     */\n    status: 'succeeded' | string;\n}\n\n/**\n * The PaymentMethod object\n */\nexport interface PaymentMethod {\n    /**\n     * Unique identifier for the object.\n     */\n    id: string;\n\n    /**\n     * The type of the PaymentMethod. An additional hash is included on the PaymentMethod with a name matching this value.\n     * It contains additional information specific to the PaymentMethod type.\n     */\n    type: string;\n}\n\nexport interface PaymentMethodCreateParams {\n    /**\n     * Billing information associated with the PaymentMethod that may be used or required by particular types of payment methods.\n     */\n    billing_details?: StripeBillingDetails;\n}\n\nexport interface StripeError {\n    /**\n     * A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.\n     */\n    message?: string;\n}\n\n/**\n * CSS properties supported by Stripe.js.\n */\ninterface StripeElementCSSProperties {\n    /**\n     * The [background-color](https://developer.mozilla.org/en-US/docs/Web/CSS/background-color) CSS property.\n     *\n     * This property works best with the `::selection` pseudo-class.\n     * In other cases, consider setting the background color on the element's container instaed.\n     */\n    backgroundColor?: string;\n\n    /**\n     * The [color](https://developer.mozilla.org/en-US/docs/Web/CSS/color) CSS property.\n     */\n    color?: string;\n\n    /**\n     * The [font-family](https://developer.mozilla.org/en-US/docs/Web/CSS/font-family) CSS property.\n     */\n    fontFamily?: string;\n\n    /**\n     * The [font-size](https://developer.mozilla.org/en-US/docs/Web/CSS/font-size) CSS property.\n     */\n    fontSize?: string;\n\n    /**\n     * The [font-smoothing](https://developer.mozilla.org/en-US/docs/Web/CSS/font-smoothing) CSS property.\n     */\n    fontSmoothing?: string;\n\n    /**\n     * The [font-style](https://developer.mozilla.org/en-US/docs/Web/CSS/font-style) CSS property.\n     */\n    fontStyle?: string;\n\n    /**\n     * The [font-variant](https://developer.mozilla.org/en-US/docs/Web/CSS/font-variant) CSS property.\n     */\n    fontVariant?: string;\n\n    /**\n     * The [font-weight](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight) CSS property.\n     */\n    fontWeight?: string;\n\n    /**\n     * A custom property, used to set the color of the icons that are rendered in an element.\n     */\n    iconColor?: string;\n\n    /**\n     * The [line-height](https://developer.mozilla.org/en-US/docs/Web/CSS/line-height) CSS property.\n     *\n     * To avoid cursors being rendered inconsistently across browsers, consider using a padding on the element's container instead.\n     */\n    lineHeight?: string;\n\n    /**\n     * The [letter-spacing](https://developer.mozilla.org/en-US/docs/Web/CSS/letter-spacing) CSS property.\n     */\n    letterSpacing?: string;\n\n    /**\n     * The [text-align](https://developer.mozilla.org/en-US/docs/Web/CSS/text-align) CSS property.\n     *\n     * Available for the `cardNumber`, `cardExpiry`, and `cardCvc` elements.\n     */\n    textAlign?: string;\n\n    /**\n     * The [padding](https://developer.mozilla.org/en-US/docs/Web/CSS/padding) CSS property.\n     *\n     * Available for the `idealBank` element.\n     * Accepts integer `px` values.\n     */\n    padding?: string;\n\n    /**\n     * The [text-decoration](https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration) CSS property.\n     */\n    textDecoration?: string;\n\n    /**\n     * The [text-shadow](https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow) CSS property.\n     */\n    textShadow?: string;\n\n    /**\n     * The [text-transform](https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform) CSS property.\n     */\n    textTransform?: string;\n}\n\ninterface StripeElementStyleVariant extends StripeElementCSSProperties {\n    ':hover'?: StripeElementCSSProperties;\n\n    ':focus'?: StripeElementCSSProperties;\n\n    '::placeholder'?: StripeElementCSSProperties;\n\n    '::selection'?: StripeElementCSSProperties;\n\n    ':-webkit-autofill'?: StripeElementCSSProperties;\n\n    /**\n     * Available for all elements except the `paymentRequestButton` element\n     */\n    ':disabled'?: StripeElementCSSProperties;\n\n    /**\n     * Available for the `cardNumber`, `cardExpiry`, and `cardCvc` elements.\n     */\n    '::-ms-clear'?: StripeElementCSSProperties & {display: string};\n}\n\nexport interface CardElementOptions extends BaseElementOptions {\n    /**\n     * A pre-filled set of values to include in the input (e.g., {postalCode: '94110'}).\n     * Note that sensitive card information (card number, CVC, and expiration date)\n     * cannot be pre-filled\n     */\n    value?: string;\n\n    /**\n     * Hide the postal code field. Default is false. If you are already collecting a\n     * full billing address or postal code elsewhere, set this to true.\n     */\n    hidePostalCode?: boolean;\n\n    /**\n     * Appearance of the icon in the Element.\n     */\n    iconStyle?: IconStyle;\n\n    /*\n     * Hides the icon in the Element, Default is false\n     */\n    hideIcon?: boolean;\n\n}\n\ninterface BaseIndividualElementOptions extends BaseElementOptions  {\n    containerId: string;\n}\n\nexport interface CardNumberElementOptions extends BaseIndividualElementOptions {\n    /*\n     * Placeholder\n     */\n    placeholder?: string;\n\n    showIcon?: boolean;\n    /**\n     * Appearance of the icon in the Element. Either `solid` or `default`\n     */\n    iconStyle?: IconStyle;\n}\n\nexport interface CardExpiryElementOptions extends BaseIndividualElementOptions {\n    /*\n     * Placeholder\n     */\n    placeholder?: string;\n}\n\nexport interface CardCvcElementOptions extends BaseIndividualElementOptions {\n    /*\n     * Placeholder\n     */\n    placeholder?: string;\n}\n\nexport interface IbanElementOptions extends BaseElementOptions {\n    /**\n     * Specify the list of countries or country-groups whose IBANs you want to allow.\n     * Must be ['SEPA'].\n     */\n    supportedCountries?: string[];\n\n    /**\n     * Customize the country and format of the placeholder IBAN. Default is DE.\n     */\n    placeholderCountry?: string;\n\n    /**\n     * Appearance of the icon in the Element.\n     */\n    iconStyle?: IconStyle;\n}\n\nexport interface IdealElementOptions extends BaseElementOptions {\n    value?: string;\n\n    /**\n     * Hides the icon in the Element. Default is false.\n     */\n    hideIcon?: boolean;\n}\n\nexport interface ZipCodeElementOptions {\n    containerId: string;\n}\n\nexport enum IconStyle {\n    Solid = 'solid',\n    Default = 'default',\n}\n\nexport interface StripeElementStyle {\n    /**\n     * Base variant—all other variants inherit from these styles.\n     */\n    base?: StripeElementStyleVariant;\n\n    /**\n     * Applied when the element has valid input.\n     */\n    complete?: StripeElementStyleVariant;\n\n    /**\n     * Applied when the element has no customer input.\n     */\n    empty?: StripeElementStyleVariant;\n\n    /**\n     * Applied when the element has invalid input.\n     */\n    invalid?: StripeElementStyleVariant;\n}\n\nexport interface StripeElementClasses {\n    /**\n     * The base class applied to the container. Defaults to StripeElement.\n     */\n    base?: string;\n\n    /**\n     * The class name to apply when the Element is complete. Defaults to StripeElement--complete.\n     */\n    complete?: string;\n\n    /**\n     * The class name to apply when the Element is empty. Defaults to StripeElement--empty.\n     */\n    empty?: string;\n\n    /**\n     * The class name to apply when the Element is focused. Defaults to StripeElement--focus.\n     */\n    focus?: string;\n\n    /**\n     * The class name to apply when the Element is invalid. Defaults to StripeElement--invalid.\n     */\n    invalid?: string;\n\n    /**\n     * The class name to apply when the Element has its value autofilled by the browser\n     * (only on Chrome and Safari). Defaults to StripeElement--webkit-autofill.\n     */\n    webkitAutoFill?: string;\n}\n\nexport interface StripeAddress {\n    /**\n     * City, district, suburb, town, or village.\n     */\n    city?: string;\n\n    /**\n     * Two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n     */\n    country?: string;\n\n    /**\n     * Address line 1 (e.g., street, PO Box, or company name).\n     */\n    line1: string;\n\n    /**\n     * Address line 2 (e.g., apartment, suite, unit, or building).\n     */\n    line2?: string;\n\n    /**\n     * ZIP or postal code.\n     */\n    postal_code?: string;\n\n    /**\n     * State, county, province, or region.\n     */\n    state?: string;\n}\n\nexport interface StripeBillingDetails {\n    /**\n     * Billing address.\n     */\n    address?: StripeAddress;\n\n    /**\n     * Email address.\n     */\n    email?: string;\n\n    /**\n     * Full name.\n     */\n    name?: string;\n\n    /**\n     * Billing phone number (including extension).\n     */\n    phone?: string;\n}\n\nexport interface StripeShippingAddress {\n    /**\n     * Shipping Address\n     */\n    address: StripeAddress;\n\n    /**\n     * Recipient name\n     */\n    name: string;\n\n    /**\n     * The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.\n     */\n    carrier?: string;\n\n    /**\n     * Recipient phone (including extension).\n     */\n    phone?: string;\n\n    /**\n     * The tracking number for a physical product, obtained from the delivery service.\n     * If multiple tracking numbers were generated for this purchase, please separate them with commas.\n     */\n    tracking_number?: string;\n}\n\n/**\n * Data to be sent with a `stripe.confirmAlipayPayment` request.\n * Refer to the [Payment Intents API](https://stripe.com/docs/api/payment_intents/confirm) for a full list of parameters.\n */\nexport interface StripeConfirmAlipayPaymentData {\n    /**\n     * If you are [handling next actions yourself](https://stripe.com/docs/payments/payment-intents/verifying-status#next-actions), pass in a return_url. If the subsequent action\n     * is redirect_to_url, this URL will be used on the return path for the redirect.\n     *\n     * @recommended\n     */\n    return_url?: string;\n}\n\n/**\n * Data to be sent with a `stripe.confirmCardPayment` request.\n * Refer to the [Payment Intents API](https://stripe.com/docs/api/payment_intents/confirm) for a full list of parameters.\n */\nexport interface StripeConfirmCardPaymentData {\n    /*\n     * Either the id of an existing [PaymentMethod](https://stripe.com/docs/api/payment_methods), or an object containing data to create a\n     * PaymentMethod with. See the use case sections below for details.\n     *\n     * @recommended\n     */\n    payment_method?: CreatePaymentMethodCardData;\n\n    /**\n     * The [shipping details](https://stripe.com/docs/api/payment_intents/confirm#confirm_payment_intent-shipping) for the payment, if collected.\n     *\n     * @recommended\n     */\n    shipping?: StripeShippingAddress;\n\n    /**\n     * If you are [handling next actions yourself](https://stripe.com/docs/payments/payment-intents/verifying-status#next-actions), pass in a return_url. If the subsequent action\n     * is redirect_to_url, this URL will be used on the return path for the redirect.\n     *\n     * @recommended\n     */\n    return_url?: string;\n\n    /**\n     * Indicates that you intend to make future payments with this PaymentIntent's payment method.\n     *\n     * If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.\n     *\n     * Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow.\n     */\n    setup_future_usage?: 'off_session' | 'on_session' | null;\n}\n\n/**\n * Data to be sent with a `stripe.confirmIdealPayment` request.\n * Refer to the [Payment Intents API](https://stripe.com/docs/api/payment_intents/confirm) for a full list of parameters.\n */\nexport interface StripeConfirmIdealPaymentData {\n    /*\n     * Either the id of an existing [PaymentMethod](https://stripe.com/docs/api/payment_methods), or an object containing data to create a\n     * PaymentMethod with. See the use case sections below for details.\n     *\n     * @recommended\n     */\n    payment_method?: CreatePaymentMethodIdealData;\n\n    /**\n     * If you are [handling next actions yourself](https://stripe.com/docs/payments/payment-intents/verifying-status#next-actions), pass in a return_url. If the subsequent action\n     * is redirect_to_url, this URL will be used on the return path for the redirect.\n     *\n     * @recommended\n     */\n    return_url?: string;\n}\n\n/**\n * Data to be sent with a `stripe.confirmSEPAPayment` request.\n * Refer to the [Payment Intents API](https://stripe.com/docs/api/payment_intents/confirm) for a full list of parameters.\n */\nexport interface StripeConfirmSepaPaymentData {\n    /*\n     * Either the id of an existing [PaymentMethod](https://stripe.com/docs/api/payment_methods), or an object containing data to create a\n     * PaymentMethod with. See the use case sections below for details.\n     *\n     * @recommended\n     */\n    payment_method?: CreatePaymentMethodSepaData;\n}\n\nexport type StripeConfirmPaymentData = StripeConfirmAlipayPaymentData | StripeConfirmCardPaymentData | StripeConfirmIdealPaymentData | StripeConfirmSepaPaymentData | undefined;\n\nexport type StripeElementOptions = CardElementOptions | CardExpiryElementOptions | CardNumberElementOptions | CardCvcElementOptions | IdealElementOptions | IbanElementOptions | ZipCodeElementOptions;\n\nexport interface StripeElement {\n    /**\n     * The `element.mount` method attaches your element to the DOM.\n     */\n    mount(domElement: string | HTMLElement): void;\n\n    /**\n     * Removes the element from the DOM and destroys it.\n     * A destroyed element can not be re-activated or re-mounted to the DOM.\n     */\n    destroy(): void;\n\n    /**\n     * Unmounts the element from the DOM.\n     * Call `element.mount` to re-attach it to the DOM.\n     */\n    unmount(): void;\n}\n\nexport interface StripeElements {\n    /**\n     * Creates a `AlipayElement` | `CardElement` | `CardCvcElement` |`CardExpiryElement` | `CardExpiryElement` | `CardNumberElement` | `IdealBankElement` | `IbanElement`.\n     */\n    create(\n        elementType: StripeElementType,\n        options?: StripeElementOptions\n    ): StripeElement;\n\n    /**\n     * Looks up a previously created `Element` by its type.\n     */\n    getElement(elementType: StripeElementType): StripeElement | null;\n}\n\n/**\n * This object is used to pass custom fonts when creating an [Elements](https://stripe.com/docs/js/elements_object/create) object.\n */\nexport interface CssFontSource {\n    /**\n     * A relative or absolute URL pointing to a CSS file with [@font-face](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face) definitions, for example:\n     * `https://fonts.googleapis.com/css?family=Open+Sans`\n     * Note that if you are using a [content security policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) (CSP),\n     * [additional directives](https://stripe.com/docs/security#content-security-policy) may be necessary.\n     */\n    cssSrc: string;\n}\n\n/**\n * This object is used to pass custom fonts when creating an [Elements](https://stripe.com/docs/js/elements_object/create) object.\n */\nexport interface CustomFontSource {\n    /**\n     * The name to give the font.\n     */\n    family: string;\n\n    /**\n     * A valid [src](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/src) value pointing to your\n     * custom font file. This is usually (though not always) a link to a file with a .woff , .otf, or .svg suffix.\n     */\n    src: string;\n\n    /**\n     * A valid [font-display](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/font-display) value.\n     */\n    display?: string;\n\n    /**\n     * One of normal, italic, oblique. Defaults to normal.\n     */\n    style?: string;\n\n    /**\n     * A valid [unicode-range](https://developer.mozilla.org/en-US/docs/Web/CSS/@font-face/unicode-range) value.\n     */\n    unicodeRange?: string;\n\n    /**\n     * A valid [font-weight](https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight). Note that this is a string, not a number.\n     */\n    weight?: string;\n}\n\nexport type CustomFont = CssFontSource | CustomFontSource;\n\nexport interface StripeElementsOptions {\n    /**\n     * An array of custom fonts, which elements created from the Elements object can use.\n     * Fonts can be specified as [CssFontSource](https://stripe.com/docs/js/appendix/css_font_source_object)\n     * or [CustomFontSource](https://stripe.com/docs/js/appendix/custom_font_source_object) objects.\n     */\n    fonts?: CustomFont[];\n\n    /**\n     * A [locale](https://stripe.com/docs/js/appendix/supported_locales) to display placeholders and\n     * error strings in. Default is auto (Stripe detects the locale of the browser).\n     * Setting the locale does not affect the behavior of postal code validation—a valid postal code\n     * for the billing country of the card is still required.\n     */\n    locale?: string;\n}\n\nexport interface StripeConfirmPaymentOptions {\n    /**\n     * Set this to false if you want to [manually handle the authorization redirect](https://stripe.com/docs/payments/ideal#handle-redirect). Default is true.\n     */\n    handleActions?: boolean;\n}\n\nexport interface StripeV3Client {\n    /**\n     * Create an `Elements` instance, which manages a group of elements.\n     */\n    elements(options?: StripeElementsOptions): StripeElements;\n\n    /**\n     * @docs https://stripe.com/docs/js/payment_intents/confirm_alipay_payment\n     *\n     * Use `stripe.confirmAlipayPayment` in the Alipay payment method creation flow when the customer submits your payment form.\n     * When called, it will confirm the [PaymentIntent](https://stripe.com/docs/api/payment_intents) with data you provide, and it will automatically\n     * redirect the customer to the authorize the transaction. Once authorization is complete, the customer will be redirected\n     * back to your specified `return_url`. When you confirm a `PaymentIntent`, it needs to have an attached [PaymentMethod](https://stripe.com/docs/api/payment_methods).\n     * In addition to confirming the `PaymentIntent`, this method can automatically create and attach a new `PaymentMethod` for you.\n     * If you have already attached a `PaymentMethod` you can call this method without needing to provide any additional data.\n     * These use cases are detailed in the sections that follow.\n     *\n     * @returns\n     * `stripe.confirmAlipayPayment` by default, will trigger a redirect when successful. If there is an error, or when handling\n     * `next_actions` manually by using the `handleActions: false` option, it will return a `Promise` which resolves with a `result` object.\n     * This object has either:\n     *\n     * - result.paymentIntent: the successful PaymentIntent.\n     * - result.error: an error. Refer to the API reference for all possible errors.\n     *\n     * Note that `stripe.confirmAlipayPayment` may take several seconds to complete. During that time, you should disable your\n     * form from being resubmitted and show a waiting indicator like a spinner. If you receive an error result, you should\n     * be sure to show that error to the customer, re-enable the form, and hide the waiting indicator.\n     */\n    confirmAlipayPayment(\n        /**\n         * The [client secret](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-client_secret) of the PaymentIntent.\n         */\n        clientSecret: string,\n\n        /**\n         * Data to be sent with the request. Refer to the Payment Intents API for a full list of parameters.\n         */\n        data?: StripeConfirmAlipayPaymentData,\n\n        /**\n         * An options object to control the behavior of this method.\n         */\n        options?: StripeConfirmPaymentOptions\n    ): Promise<{paymentIntent?: PaymentIntent; error?: StripeError}>;\n\n    /**\n     * @docs https://stripe.com/docs/js/payment_intents/confirm_card_payment\n     *\n     * Use `stripe.confirmCardPayment` when the customer submits your payment form.\n     * When called, it will confirm the [PaymentIntent](https://stripe.com/docs/api/payment_intents)\n     * with `data` you provide and carry out 3DS or other next actions if they are required.\n     *\n     * If you are using [Dynamic 3D Secure](https://stripe.com/docs/payments/3d-secure#three-ds-radar), `stripe.confirmCardPayment` will\n     * trigger your Radar rules to execute and may open a dialog for your customer to authenticate their payment.\n     *\n     * When you confirm a `PaymentIntent`, it needs to have an attached [PaymentMethod](https://stripe.com/docs/api/payment_methods).\n     * In addition to confirming the `PaymentIntent`, this method can automatically create and attach a new `PaymentMethod` for you.\n     * It can also be called with an existing `PaymentMethod`, or if you have already attached a PaymentMethod you can call this\n     * method without needing to provide any additional data. These use cases are detailed in the sections that follow.\n     *\n     * @returns\n     * `stripe.confirmCardPayment` will return a Promise which resolves with a result object.\n     * This object has either:\n     *\n     * - result.paymentIntent: the successful PaymentIntent.\n     * - result.error: an error. Refer to the API reference for all possible errors.\n     *\n     * Note that stripe.confirmCardPayment may take several seconds to complete. During that time, you should disable\n     * your form from being resubmitted and show a waiting indicator like a spinner. If you receive an error result,\n     * you should be sure to show that error to the customer, re-enable the form, and hide the waiting indicator.\n     *\n     * Additionally, `stripe.confirmCardPayment may trigger` a [3D Secure](https://stripe.com/docs/payments/3d-secure) authentication\n     * challenge. This will be shown in a modal dialog and may be confusing for customers using assistive technologies like\n     * screen readers. You should make your form accessible by ensuring that success or error messages are clearly read out\n     * after this method completes.\n     *\n     */\n    confirmCardPayment(\n        /**\n         * The [client secret](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-client_secret) of the PaymentIntent.\n         */\n        clientSecret: string,\n\n        /**\n         * Data to be sent with the request. Refer to the Payment Intents API for a full list of parameters.\n         */\n        data?: StripeConfirmCardPaymentData,\n\n        /**\n         * An options object to control the behavior of this method.\n         */\n        options?: StripeConfirmPaymentOptions\n    ): Promise<{paymentIntent?: PaymentIntent; error?: StripeError}>;\n\n    /**\n     * @docs https://stripe.com/docs/js/payment_intents/confirm_ideal_payment\n     *\n     * Use `stripe.confirmIdealPayment` in the [iDEAL Payments with Payment Methods](https://stripe.com/docs/payments/ideal)\n     * flow when the customer submits your payment form. When called, it will confirm the `PaymentIntent` with `data` you\n     * provide, and it will automatically redirect the customer to the authorize the transaction.\n     * Once authorization is complete, the customer will be redirected back to your specified `return_url`.\n     *\n     * When you confirm a `PaymentIntent`, it needs to have an attached [PaymentMethod](https://stripe.com/docs/api/payment_methods).\n     * In addition to confirming the `PaymentIntent`, this method can automatically create and attach a new `PaymentMethod` for you.\n     * It can also be called with an existing `PaymentMethod`, or if you have already attached a PaymentMethod you can call this\n     * method without needing to provide any additional data. These use cases are detailed in the sections that follow.\n     *\n     * @returns\n     * By default, `stripe.confirmIdealPayment` will trigger a redirect when successful. If there is an error, or when handling\n     * next actions manually by using the `handleActions: false` option, it will return a `Promise` which resolves with a `result`\n     * object. This object has either:\n     *\n     * - result.paymentIntent: the successful PaymentIntent.\n     * - result.error: an error. Refer to the API reference for all possible errors.\n     *\n     * Note that `stripe.confirmIdealPayment` may take several seconds to complete. During that time, you should disable\n     * your form from being resubmitted and show a waiting indicator like a spinner. If you receive an error result,\n     * you should be sure to show that error to the customer, re-enable the form, and hide the waiting indicator.\n     */\n    confirmIdealPayment(\n        /**\n         * The [client secret](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-client_secret) of the PaymentIntent.\n         */\n        clientSecret: string,\n\n        /**\n         * Data to be sent with the request. Refer to the Payment Intents API for a full list of parameters.\n         */\n        data?: StripeConfirmIdealPaymentData,\n\n        /**\n         * An options object to control the behavior of this method.\n         */\n        options?: StripeConfirmPaymentOptions\n    ): Promise<{paymentIntent?: PaymentIntent; error?: StripeError}>;\n\n    /**\n     *\n     * Use `stripe.confirmSepaDebitPayment` in the [SEPA Direct Debit Payments](https://stripe.com/docs/payments/sepa-debit)\n     * with Payment Methods flow when the customer submits your payment form. When called, it will confirm the\n     * [PaymentIntent](https://stripe.com/docs/api/payment_intents) with `data` you provide. Note that there are some additional\n     * requirements to this flow that are not covered in this reference. Refer to our [integration guide](https://stripe.com/docs/payments/sepa-debit\n     * for more details.\n     *\n     * When you confirm a PaymentIntent, it needs to have an attached PaymentMethod. In addition to confirming the PaymentIntent,\n     * this method can automatically create and attach a new PaymentMethod for you. If you have already attached a\n     * [PaymentMethod](https://stripe.com/docs/api/payment_methods) you can call this method without needing to provide any additional data.\n     * These use cases are detailed in the sections that follow.\n     * @docs https://stripe.com/docs/js/payment_intents/confirm_sepa_debit_payment\n     */\n    confirmSepaDebitPayment(\n        /**\n         * The [client secret](https://stripe.com/docs/api/payment_intents/object#payment_intent_object-client_secret) of the PaymentIntent.\n         */\n        clientSecret: string,\n\n        /**\n         * Data to be sent with the request. Refer to the [Payment Intents API](https://stripe.com/docs/api/payment_intents/confirm) for a full list of parameters.\n         */\n        data?: StripeConfirmSepaPaymentData\n    ): Promise<{paymentIntent?: PaymentIntent; error?: StripeError}>;\n\n    /**\n     * Use stripe.createPaymentMethod to convert payment information collected by elements into a PaymentMethod\n     * object that you safely pass to your server to use in an API call.\n     * @docs https://stripe.com/docs/js/payment_methods/create_payment_method\n     *\n     * @param type: String, The type of the PaymentMethod to create. Refer to the PaymentMethod API for all possible values.\n     * @param card: StripeElement, A card or cardNumber Element.\n     * @param billing_details: StripeBillingDetails, Billing information associated with the PaymentMethod that\n     * may be used or required by particular types of payment methods.\n     */\n    createPaymentMethod(\n        params: CreatePaymentMethodParams\n    ): Promise<{paymentMethod?: PaymentMethod; error?: StripeError}>;\n\n    /**\n     * Use stripe.handleCardAction in the Payment Intents API manual confirmation flow to handle a PaymentIntent\n     * with the requires_action status. It will throw an error if the PaymentIntent has a different status.\n     * @docs https://stripe.com/docs/js/payment_intents/handle_card_action\n     *\n     * @param paymentIntentClientSecret: String, The client secret of the PaymentIntent to handle.\n     */\n    handleCardAction(\n        paymentIntentClientSecret: string\n    ): Promise<{paymentIntent?: PaymentIntent; error?: StripeError}>;\n}\n\nexport interface CreatePaymentMethodParams {\n    type: StripePaymentMethodType;\n    card: StripeElement;\n    billing_details?: StripeBillingDetails;\n}\n\nexport interface StripeHostWindow extends Window {\n    Stripe?(\n        stripePublishableKey: string,\n        options?: StripeConfigurationOptions\n    ): StripeV3Client;\n}\n\nexport enum StripeElementType {\n    Alipay = 'alipay',\n    CardCvc = 'cardCvc',\n    CardExpiry = 'cardExpiry',\n    CardNumber = 'cardNumber',\n    CreditCard = 'card',\n    iDEAL = 'idealBank',\n    Sepa = 'iban',\n}\n\nexport enum StripePaymentMethodType {\n    Alipay = 'alipay',\n    CreditCard = 'card',\n    iDEAL = 'ideal',\n    Sepa = 'sepa_debit',\n}\n\n/**\n * Initialization options.\n */\nexport interface StripeConfigurationOptions {\n    /**\n     * For usage with [Connect](https://stripe.com/docs/connect) only.\n     * Specifying a connected account ID (e.g., acct_24BFMpJ1svR5A89k) allows you to perform actions on behalf of that account.\n     */\n    stripeAccount: string;\n\n    /**\n     * Override your account's [API version](https://stripe.com/docs/api/versioning)\n     */\n    apiVersion?: string;\n\n    /**\n     * A locale used to globally configure localization in Stripe. Setting the locale here will localize error strings for all Stripe.js methods. It will also configure the locale for Elements and Checkout. Default is auto (Stripe detects the locale of the browser).\n     * Note that Checkout supports a slightly different set of locales than Stripe.js.\n     */\n    locale?: string;\n\n    betas?: string[];\n}\n\nexport interface StripeAdditionalActionData {\n    redirect_url?: string;\n    intent?: string;\n}\n\nexport interface StripeAdditionalAction {\n    type: string;\n    data: StripeAdditionalActionData;\n}\n\nexport interface StripeCardElements {\n    [index: number]: StripeElement;\n}\n\nexport interface IndividualCardElementOptions {\n    cardCvcElementOptions: CardCvcElementOptions;\n    cardExpiryElementOptions: CardExpiryElementOptions;\n    cardNumberElementOptions: CardNumberElementOptions;\n    zipCodeElementOptions?: ZipCodeElementOptions;\n}\n\nexport default function isIndividualCardElementOptions(individualCardElementOptions: unknown): individualCardElementOptions is IndividualCardElementOptions {\n    return Boolean((individualCardElementOptions as IndividualCardElementOptions).cardNumberElementOptions) &&\n        Boolean((individualCardElementOptions as IndividualCardElementOptions).cardCvcElementOptions) &&\n        Boolean((individualCardElementOptions as IndividualCardElementOptions).cardExpiryElementOptions);\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { SquareFormFactory, SquareFormOptions } from './square-form';\nimport SquareWindow from './square-window';\n\nexport default class SquareScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    load(): Promise<SquareFormFactory> {\n        const scriptURI = '//js.squareup.com/v2/paymentform';\n\n        return this._scriptLoader.loadScript(scriptURI)\n            .then(() => (options: SquareFormOptions) =>\n                new (window as unknown as SquareWindow).SqPaymentForm(options)\n            );\n    }\n}\n","import { includes, some } from 'lodash';\n\nimport { Payment } from '../..';\nimport { Address } from '../../../address';\nimport { isBillingAddressLike, BillingAddress } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { Customer } from '../../../customer';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { getShippableItemsCount } from '../../../shipping';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentArgumentInvalidError } from '../../errors';\nimport isVaultedInstrument from '../../is-vaulted-instrument';\nimport { HostedInstrument } from '../../payment';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport isIndividualCardElementOptions, { PaymentIntent, PaymentMethod as StripePaymentMethod, StripeAdditionalAction, StripeAddress, StripeBillingDetails, StripeCardElements, StripeConfirmCardPaymentData, StripeConfirmIdealPaymentData, StripeConfirmPaymentData, StripeConfirmSepaPaymentData, StripeElement, StripeElements, StripeElementOptions, StripeElementType, StripeError, StripePaymentMethodType, StripeShippingAddress, StripeV3Client } from './stripev3';\nimport StripeV3PaymentInitializeOptions from './stripev3-initialize-options';\nimport StripeV3ScriptLoader from './stripev3-script-loader';\n\nconst APM_REDIRECT = [StripeElementType.Alipay, StripeElementType.iDEAL];\n\nexport default class StripeV3PaymentStrategy implements PaymentStrategy {\n    private _initializeOptions?: PaymentInitializeOptions;\n    private _stripeV3Client?: StripeV3Client;\n    private _stripeElements?: StripeElements;\n    private _stripeElement?: StripeElement;\n    private _stripeCardElements?: StripeCardElements;\n    private _useIndividualCardFields?: boolean;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _stripeScriptLoader: StripeV3ScriptLoader,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _locale: string\n    ) {}\n\n    async initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._initializeOptions = options;\n\n        const paymentMethod = this._store.getState().paymentMethods.getPaymentMethodOrThrow(this._getInitializeOptions().methodId);\n        const { initializationData: { stripePublishableKey, stripeConnectedAccount, useIndividualCardFields } } = paymentMethod;\n\n        this._useIndividualCardFields = useIndividualCardFields;\n        this._stripeV3Client = await this._loadStripeJs(stripePublishableKey, stripeConnectedAccount);\n        this._stripeElement = await this._mountElement(this._getInitializeOptions().methodId);\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(orderRequest: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = orderRequest;\n        let formattedPayload: { [key: string]: any };\n        let stripeError: StripeError | undefined;\n\n        if (!payment || !payment.paymentData) {\n            throw new PaymentArgumentInvalidError(['payment.paymentData']);\n        }\n\n        const { paymentData, gatewayId, methodId } = payment;\n        const { shouldSaveInstrument = false, shouldSetAsDefaultInstrument = false } = paymentData as HostedInstrument;\n        const shouldSubmitOrderBeforeLoadingAPM = includes(APM_REDIRECT, methodId);\n\n        const { isStoreCreditApplied : useStoreCredit } = this._store.getState().checkout.getCheckoutOrThrow();\n\n        if (useStoreCredit) {\n            await this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(useStoreCredit));\n        }\n\n        if (isVaultedInstrument(paymentData)) {\n            // tslint:disable-next-line: variable-name\n            const { instrumentId: token, ccNumber: credit_card_number_confirmation, ccCvv: verification_value } = paymentData;\n\n            formattedPayload = {\n                bigpay_token: { token },\n                credit_card_number_confirmation,\n                verification_value,\n                confirm: false,\n            };\n        } else {\n            if (shouldSubmitOrderBeforeLoadingAPM) {\n                await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n            }\n            const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(`${gatewayId}?method=${methodId}`));\n            const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n            const result = await this._confirmStripePayment(paymentMethod);\n            const { id: token } = result.paymentIntent ?? result.paymentMethod ?? { id: '' };\n            stripeError = result.error;\n\n            formattedPayload = {\n                credit_card_token: { token },\n                vault_payment_instrument: shouldSaveInstrument,\n                confirm: false,\n            };\n        }\n\n        if (!shouldSubmitOrderBeforeLoadingAPM) {\n            await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n        }\n\n        const paymentPayload = this._buildPaymentPayload(methodId, formattedPayload, shouldSetAsDefaultInstrument);\n\n        try {\n            return await this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n        } catch (error) {\n            return await this._processAdditionalAction(\n                this._handleEmptyPaymentIntentError(error, stripeError),\n                methodId,\n                shouldSaveInstrument,\n                shouldSetAsDefaultInstrument\n            );\n        }\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._unmountElement();\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _buildPaymentPayload(methodId: string, formattedPayload: { [key: string]: any }, shouldSetAsDefaultInstrument: boolean): Payment {\n        const paymentData = shouldSetAsDefaultInstrument\n            ? { formattedPayload, shouldSetAsDefaultInstrument }\n            : { formattedPayload };\n\n        return { methodId, paymentData };\n    }\n\n    private async _processAdditionalAction(\n        error: Error,\n        methodId: string,\n        shouldSaveInstrument: boolean,\n        shouldSetAsDefaultInstrument: boolean\n    ): Promise<InternalCheckoutSelectors | never> {\n        if (!(error instanceof RequestError)) {\n            throw error;\n        }\n\n        const isAdditionalActionError = some(error.body.errors, { code: 'additional_action_required' });\n        const isThreeDSecureRequiredError = some(error.body.errors, { code: 'three_d_secure_required' });\n\n        if (isAdditionalActionError) {\n            const action: StripeAdditionalAction = error.body.additional_action_required;\n\n            if (action && action.type === 'redirect_to_url') {\n                return new Promise(() => {\n                    if (action.data.redirect_url) {\n                        window.location.replace(action.data.redirect_url);\n                    }\n                });\n            }\n        }\n\n        if (isThreeDSecureRequiredError) {\n            const clientSecret = error.body.three_ds_result.token;\n            const result = await this._getStripeJs().handleCardAction(clientSecret);\n            const { id: token } = result.paymentIntent || { id: '' };\n\n            const formattedPayload = {\n                credit_card_token: { token },\n                vault_payment_instrument: shouldSaveInstrument,\n                confirm: true,\n            };\n\n            const paymentPayload = this._buildPaymentPayload(methodId, formattedPayload, shouldSetAsDefaultInstrument);\n\n            try {\n                return await this._store.dispatch(this._paymentActionCreator.submitPayment(paymentPayload));\n            } catch (error) {\n                throw this._handleEmptyPaymentIntentError(error, result.error);\n            }\n        }\n\n        throw error;\n    }\n\n    private _handleEmptyPaymentIntentError(\n        error: Error,\n        stripeError: StripeError | undefined\n    ) {\n        if (!(error instanceof RequestError)) {\n            return error;\n        }\n\n        return some(error.body.errors, { code: 'required_field' }) && stripeError\n            ? new Error(stripeError.message)\n            : error;\n    }\n\n    private async _confirmStripePayment(paymentMethod: PaymentMethod): Promise<{\n        paymentIntent?: PaymentIntent | undefined;\n        paymentMethod?: StripePaymentMethod | undefined;\n        error?: StripeError | undefined;\n    }> {\n        const { clientToken: clientSecret, method, returnUrl } = paymentMethod;\n\n        if (!clientSecret) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        switch (method) {\n            case StripeElementType.Alipay:\n                return await this._getStripeJs().confirmAlipayPayment(clientSecret, { return_url: returnUrl }, { handleActions: false } );\n\n            case StripeElementType.CreditCard: {\n                const card = this._useIndividualCardFields ? this._getStripeCardElements()[0] : this._getStripeElement();\n                const billingDetails = this._mapStripeBillingDetails(\n                    this._store.getState().billingAddress.getBillingAddress(),\n                    this._store.getState().customer.getCustomer()\n                );\n\n                return await this._getStripeJs().createPaymentMethod({\n                    type: StripePaymentMethodType.CreditCard,\n                    card,\n                    billing_details: billingDetails,\n                });\n            }\n\n            case StripeElementType.iDEAL: {\n                const data = this._mapStripePaymentData(StripePaymentMethodType.iDEAL, returnUrl);\n\n                return await this._getStripeJs().confirmIdealPayment(clientSecret, data, { handleActions: false });\n            }\n\n            case StripeElementType.Sepa: {\n                const data = this._mapStripePaymentData(StripePaymentMethodType.Sepa);\n\n                return await this._getStripeJs().confirmSepaDebitPayment(clientSecret, data);\n            }\n\n            default:\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n    }\n\n    private _getInitializeOptions(): PaymentInitializeOptions {\n        if (!this._initializeOptions) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._initializeOptions;\n    }\n\n    private _getStripeInitializeOptions(): StripeV3PaymentInitializeOptions {\n        const { stripev3 } = this._getInitializeOptions();\n\n        if (!stripev3) {\n            throw new InvalidArgumentError('Unable to initialize payment because \"options.stripev3\" argument is not provided.');\n        }\n\n        return stripev3;\n    }\n\n    private _getStripeElement(): StripeElement {\n        if (!this._stripeElement) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._stripeElement;\n    }\n\n    private _getStripeCardElements(): StripeCardElements {\n        if (!this._stripeCardElements) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._stripeCardElements;\n    }\n\n    private _getStripeJs(): StripeV3Client {\n        if (!this._stripeV3Client) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._stripeV3Client;\n    }\n\n    private async _loadStripeJs(stripePublishableKey: string, stripeConnectedAccount: string): Promise<StripeV3Client> {\n        if (this._stripeV3Client) { return Promise.resolve(this._stripeV3Client); }\n\n        return await this._stripeScriptLoader.load(\n            stripePublishableKey,\n            stripeConnectedAccount,\n            this._locale\n        );\n    }\n\n    private _mountElement(methodId: string): Promise<StripeElement> {\n        const stripeElementType = methodId as StripeElementType;\n        const { options, containerId } = this._getStripeInitializeOptions();\n\n        let stripeElement: StripeElement;\n\n        return new Promise((resolve, reject) => {\n            if (!this._stripeElements) {\n                this._stripeElements = this._getStripeJs().elements();\n            }\n\n            switch (stripeElementType) {\n                case StripeElementType.CreditCard:\n                    if (this._useIndividualCardFields && isIndividualCardElementOptions(options)) {\n                        const { cardNumberElementOptions, cardExpiryElementOptions, cardCvcElementOptions } = options;\n\n                        const cardNumberElement = this._stripeElements.getElement(StripeElementType.CardNumber) || this._stripeElements.create(StripeElementType.CardNumber, cardNumberElementOptions);\n                        const cardExpiryElement = this._stripeElements.getElement(StripeElementType.CardExpiry) || this._stripeElements.create(StripeElementType.CardExpiry, cardExpiryElementOptions);\n                        const cardCvcElement = this._stripeElements.getElement(StripeElementType.CardCvc) || this._stripeElements.create(StripeElementType.CardCvc, cardCvcElementOptions);\n\n                        this._stripeCardElements = [cardNumberElement, cardExpiryElement, cardCvcElement];\n                        stripeElement = this._stripeCardElements[0];\n\n                        try {\n                            cardNumberElement.mount(`#${cardNumberElementOptions.containerId}`);\n                            cardExpiryElement.mount(`#${cardExpiryElementOptions.containerId}`);\n                            cardCvcElement.mount(`#${cardCvcElementOptions.containerId}`);\n                        } catch (error) {\n                            reject(new InvalidArgumentError('Unable to mount Stripe component without valid container ID.'));\n                        }\n                    } else {\n                        stripeElement = this._stripeElements.getElement(stripeElementType) || this._stripeElements.create(stripeElementType, options as StripeElementOptions);\n\n                        try {\n                            stripeElement.mount(`#${containerId}`);\n                        } catch (error) {\n                            reject(new InvalidArgumentError('Unable to mount Stripe component without valid container ID.'));\n                        }\n                    }\n\n                    break;\n                case StripeElementType.iDEAL:\n                case StripeElementType.Sepa:\n                    stripeElement = this._stripeElements.getElement(stripeElementType) || this._stripeElements.create(stripeElementType, options as StripeElementOptions);\n\n                    try {\n                        stripeElement.mount(`#${containerId}`);\n                    } catch (error) {\n                        reject(new InvalidArgumentError('Unable to mount Stripe component without valid container ID.'));\n                    }\n\n                    break;\n\n                case StripeElementType.Alipay:\n                    break;\n            }\n\n            resolve(stripeElement);\n        });\n    }\n\n    private _mapStripeAddress(address?: Address): StripeAddress {\n        if (address) {\n            const {\n                city,\n                countryCode: country,\n                address1: line1,\n                address2: line2,\n                postalCode,\n                stateOrProvinceCode: state,\n            } = address;\n\n            return { city, country, line1, line2, postal_code: postalCode, state };\n        }\n\n        return { line1: '' };\n    }\n\n    private _mapStripeBillingDetails(billingAddress?: BillingAddress, customer?: Customer): StripeBillingDetails {\n        const { firstName, lastName } = billingAddress || customer || { firstName: 'Guest', lastName: '' };\n        const name = `${firstName} ${lastName}`.trim();\n        const { options } = this._getStripeInitializeOptions();\n\n        if (this._useIndividualCardFields && isIndividualCardElementOptions(options)) {\n            const { zipCodeElementOptions } = options;\n\n            if (zipCodeElementOptions) {\n                const postalCode = document.getElementById(zipCodeElementOptions.containerId) ? (document.getElementById(zipCodeElementOptions.containerId) as HTMLInputElement).value : '';\n\n                if (postalCode && billingAddress) {\n                    billingAddress = { ...billingAddress, postalCode };\n                }\n            }\n        }\n\n        const address = {\n            address:  this._mapStripeAddress(billingAddress),\n        };\n\n        if (customer && customer.addresses[0] && isBillingAddressLike(customer.addresses[0])) {\n            const customerAddress = customer.addresses[0];\n            const { email } = customer;\n            const { phone } = customerAddress;\n\n            return phone ? { ...address, email, name, phone } : { ...address, email, name };\n        }\n\n        if (billingAddress) {\n            const { email, phone } = billingAddress;\n\n            return phone ? { ...address, email, name, phone } : { ...address, email, name };\n        }\n\n        return { ...address, name };\n    }\n\n    private _mapStripePaymentData(element: StripePaymentMethodType.CreditCard, shouldSaveInstrument: boolean): StripeConfirmCardPaymentData;\n    private _mapStripePaymentData(element: StripePaymentMethodType.iDEAL, returnUrl?: string): StripeConfirmIdealPaymentData;\n    private _mapStripePaymentData(element: StripePaymentMethodType.Sepa): StripeConfirmSepaPaymentData;\n    private _mapStripePaymentData(element: StripePaymentMethodType, arg2?: any): StripeConfirmPaymentData {\n        const customer = this._store.getState().customer.getCustomer();\n        const billingAddress = this._store.getState().billingAddress.getBillingAddress();\n        let result: Partial<StripeConfirmPaymentData>;\n\n        result = {\n            payment_method: {\n                [element]: element === StripePaymentMethodType.CreditCard && this._useIndividualCardFields ? this._getStripeCardElements()[0] : this._getStripeElement(),\n                billing_details: this._mapStripeBillingDetails(billingAddress, customer),\n            },\n        };\n\n        switch (element) {\n            case StripePaymentMethodType.CreditCard:\n                const cart = this._store.getState().cart.getCart();\n\n                if (cart && getShippableItemsCount(cart) > 0) {\n                    const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n                    result = { ...result, shipping: this._mapStripeShippingAddress(shippingAddress, customer) };\n                }\n\n                return arg2 ? { ...result, setup_future_usage: 'off_session' } : result;\n\n            case StripePaymentMethodType.iDEAL:\n                return { ...result, return_url: arg2 };\n\n        }\n\n        return result;\n    }\n\n    private _mapStripeShippingAddress(shippingAddress?: Address, customer?: Customer): StripeShippingAddress {\n        const { firstName, lastName } = shippingAddress || customer || { firstName: 'Guest', lastName: '' };\n        const name = `${firstName} ${lastName}`.trim();\n\n        const address = {\n            address:  this._mapStripeAddress(shippingAddress),\n        };\n\n        if (customer && customer.addresses[0]) {\n            const customerAddress = customer.addresses[0];\n            const { phone } = customerAddress;\n\n            return { ...address, name, phone };\n        }\n\n        if (shippingAddress) {\n            const { phone } = shippingAddress;\n\n            return {...address, name, phone};\n        }\n\n        return {...address, name};\n    }\n\n    private _unmountElement(): void {\n        if (this._stripeElement) {\n            this._stripeElement.unmount();\n            this._stripeElement = undefined;\n        }\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { StripeHostWindow, StripeV3Client } from './stripev3';\n\nexport default class StripeV3ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: StripeHostWindow = window\n    ) {}\n\n    load(stripePublishableKey: string, stripeAccount: string, locale?: string): Promise<StripeV3Client> {\n        return this._scriptLoader\n            .loadScript('https://js.stripe.com/v3/')\n            .then(() => {\n                if (!this._window.Stripe) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Stripe(stripePublishableKey, {\n                    stripeAccount,\n                    locale,\n                    betas: ['payment_intent_beta_3', 'alipay_pm_beta_1'],\n                    apiVersion: '2020-03-02;alipay_beta=v1',\n                });\n            });\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport WepayRisk from './wepay-risk';\nimport WepayWindow from './wepay-window';\n\nconst SCRIPT_SRC = '//static.wepay.com/min/js/risk.1.latest.js';\n\nexport default class WepayRiskClient {\n    private _riskClient?: WepayRisk;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {}\n\n    initialize(): Promise<WepayRiskClient> {\n        return this._scriptLoader\n            .loadScript(SCRIPT_SRC)\n            .then(() => this._riskClient = (window as unknown as WepayWindow).WePay.risk)\n            .then(() => this);\n    }\n\n    getRiskToken(): string {\n        if (!this._riskClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._riskClient.generate_risk_token();\n\n        return this._riskClient.get_risk_token();\n    }\n}\n","import { merge } from 'lodash';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { HostedFormFactory } from '../../../hosted-form';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport { PaymentInitializeOptions, PaymentRequestOptions } from '../../payment-request-options';\nimport { CreditCardPaymentStrategy } from '../credit-card';\n\nimport WepayRiskClient from './wepay-risk-client';\n\nexport default class WepayPaymentStrategy extends CreditCardPaymentStrategy {\n    constructor(\n        store: CheckoutStore,\n        orderActionCreator: OrderActionCreator,\n        paymentActionCreator: PaymentActionCreator,\n        hostedFormFactory: HostedFormFactory,\n        private _wepayRiskClient: WepayRiskClient\n    ) {\n        super(store, orderActionCreator, paymentActionCreator, hostedFormFactory);\n    }\n\n    initialize(options: PaymentInitializeOptions): Promise<InternalCheckoutSelectors> {\n        this._wepayRiskClient.initialize();\n\n        return super.initialize(options);\n    }\n\n    execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const token = this._wepayRiskClient.getRiskToken();\n        const payloadWithToken = merge({}, payload, {\n            payment: {\n                paymentData: {\n                    deviceSessionId: token,\n                },\n            },\n        });\n\n        return super.execute(payloadWithToken, options);\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * Throw this error if a payment method explicitly returns a declined error and\n * the shopper has to choose a different payment method if they wish to continue\n * their checkout process.\n */\nexport default class PaymentMethodDeclinedError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'The selected payment method was declined. Please select another payment method.');\n\n        this.name = 'PaymentMethodDeclinedError';\n        this.type = 'payment_declined';\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType, RequestError } from '../../../common/error/errors';\nimport { ContentType, INTERNAL_USE_ONLY } from '../../../common/http-request';\nimport { OrderActionCreator, OrderRequestBody } from '../../../order';\nimport { OrderFinalizationNotRequiredError } from '../../../order/errors';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { StoreCreditActionCreator } from '../../../store-credit';\nimport { PaymentMethodCancelledError, PaymentMethodDeclinedError, PaymentMethodInvalidError } from '../../errors';\nimport PaymentActionCreator from '../../payment-action-creator';\nimport PaymentMethod from '../../payment-method';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport { PaymentRequestOptions } from '../../payment-request-options';\nimport PaymentStrategy from '../payment-strategy';\n\nimport { Zip, ZipModalEvent } from './zip';\nimport ZipScriptLoader from './zip-script-loader';\n\nexport default class ZipPaymentStrategy implements PaymentStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _zipClient?: Zip;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentActionCreator: PaymentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _zipScriptLoader: ZipScriptLoader,\n        private _requestSender: RequestSender\n    ) { }\n\n    async initialize(): Promise<InternalCheckoutSelectors> {\n        const zip = await this._zipScriptLoader.load();\n        this._zipClient = zip;\n\n        return this._store.getState();\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n        this._zipClient = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    async execute(payload: OrderRequestBody, options?: PaymentRequestOptions): Promise<InternalCheckoutSelectors> {\n        const { payment, ...order } = payload;\n        const { _zipClient: zipClient } = this;\n\n        if (!payment) {\n            throw new InvalidArgumentError('Unable to submit payment because \"payload.payment\" argument is not provided.');\n        }\n\n        if (!zipClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const { isStoreCreditApplied: useStoreCredit } = this._store.getState().checkout.getCheckoutOrThrow();\n\n        if (useStoreCredit !== undefined) {\n            await this._store.dispatch(this._storeCreditActionCreator.applyStoreCredit(useStoreCredit));\n        }\n\n        await this._store.dispatch(this._orderActionCreator.submitOrder(order, options));\n        await this._store.dispatch(this._remoteCheckoutActionCreator.initializePayment(payment.methodId, { useStoreCredit }));\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(payment.methodId, options));\n\n        this._paymentMethod = state.paymentMethods.getPaymentMethod(payment.methodId);\n\n        if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        if (this._redirectFlowIsTrue()) {\n            let nonce: { id: string };\n            try {\n                nonce = JSON.parse(this._paymentMethod.clientToken);\n            } catch (error) {\n                throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n            }\n\n            await this._prepareForReferredRegistration(payment.methodId, nonce.id);\n\n            try {\n                return await this._store.dispatch(this._paymentActionCreator.submitPayment({methodId: payment.methodId, paymentData: { nonce: nonce.id }}));\n            } catch (error) {\n                if (error instanceof RequestError && error.body.status === 'additional_action_required') {\n                    return new Promise(() => {\n                        const { redirect_url } = error.body.additional_action_required.data;\n                        window.location.replace(redirect_url);\n                    });\n                }\n                throw error;\n            }\n        }\n\n        const nonce = await new Promise<string | undefined>((resolve, reject) => {\n            zipClient.Checkout.init({\n                onComplete: async ({ checkoutId, state }) => {\n                    if (state === ZipModalEvent.CancelCheckout) {\n                        return reject(new PaymentMethodCancelledError());\n                    }\n\n                    if (state === ZipModalEvent.CheckoutReferred && checkoutId) {\n                        await this._prepareForReferredRegistration(payment.methodId, checkoutId);\n\n                        if (this._paymentMethod?.initializationData?.deferredFlowV2Enabled) {\n                            return resolve(checkoutId);\n                        }\n\n                        return resolve();\n                    }\n\n                    if (state === ZipModalEvent.CheckoutApproved && checkoutId) {\n                        return resolve(checkoutId);\n                    }\n\n                    if (state === ZipModalEvent.CheckoutDeclined) {\n                        return reject(new PaymentMethodDeclinedError('Unfortunately your application was declined. Please select another payment method.'));\n                    }\n\n                    reject(new PaymentMethodInvalidError());\n                },\n                onCheckout: openModal => {\n                    if (!this._paymentMethod || !this._paymentMethod.clientToken) {\n                        throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                    }\n\n                    openModal(JSON.parse(this._paymentMethod.clientToken));\n                },\n            });\n        });\n\n        if (nonce !== undefined) {\n            return this._store.dispatch(this._paymentActionCreator.submitPayment({\n                methodId: payment.methodId,\n                paymentData: { nonce },\n            }));\n        }\n\n        return this._store.getState();\n    }\n\n    finalize(): Promise<InternalCheckoutSelectors> {\n        return Promise.reject(new OrderFinalizationNotRequiredError());\n    }\n\n    private _redirectFlowIsTrue(): boolean {\n        return this._paymentMethod?.initializationData?.redirectFlowV2Enabled;\n    }\n\n    private _prepareForReferredRegistration(provider: string, externalId: string): Promise<Response<any>> {\n        const url = `/api/storefront/payment/${provider}/save-external-id`;\n        const options = {\n            headers: {\n                Accept: ContentType.JsonV1,\n                'X-API-INTERNAL': INTERNAL_USE_ONLY,\n            },\n            body: {\n                externalId,\n                provider,\n            },\n        };\n\n        return this._requestSender.post(url, options);\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport { Zip, ZipHostWindow } from '../zip';\n\nexport default class ZipScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        public _window: ZipHostWindow = window\n    ) {}\n\n    load(): Promise<Zip> {\n        return this._scriptLoader\n            .loadScript(`//static.zipmoney.com.au/checkout/checkout-v1.min.js`)\n            .then(() => {\n                if (!this._window.Zip) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.Zip;\n            });\n    }\n}\n","import { createAction, createDataStore, Action, DataStore, ReadableDataStore } from '@bigcommerce/data-store';\n\nenum ProjectionActionType {\n    Synchronize = 'SYNCHRONIZE',\n}\n\ninterface SynchronizeAction<TState> extends Action<TState> {\n    type: ProjectionActionType.Synchronize;\n    payload: TState;\n}\n\nexport interface DataStoreProjection<TTransformedState> extends ReadableDataStore<TTransformedState> {\n    notifyState(): void;\n}\n\nexport default function createDataStoreProjection<TState, TTransformedState = TState>(\n    store: DataStore<any, Action, TState>,\n    stateTransformer: (state: TState) => TTransformedState\n): DataStoreProjection<TTransformedState> {\n    const projection = createDataStore<TState | undefined, SynchronizeAction<TState>, TTransformedState>(\n        (state, action) => action.type === ProjectionActionType.Synchronize ?\n            action.payload :\n            state,\n        store.getState(),\n        { stateTransformer }\n    );\n\n    store.subscribe(state => {\n        projection.dispatch(createAction(ProjectionActionType.Synchronize, state) as SynchronizeAction<TState>);\n    }, { initial: false });\n\n    return projection;\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { Address } from '../../address';\nimport { InternalCheckoutSelectors, ReadableCheckoutStore } from '../../checkout';\nimport { addMinutes, isFuture } from '../../common/date-time';\nimport { MissingDataError, MissingDataErrorType } from '../../common/error/errors';\n\nimport { SessionContext, VaultAccessToken } from './instrument';\nimport { DeleteInstrumentAction, InstrumentActionType, LoadInstrumentsAction } from './instrument-actions';\nimport InstrumentRequestSender from './instrument-request-sender';\n\nexport default class InstrumentActionCreator {\n    constructor(\n        private _instrumentRequestSender: InstrumentRequestSender\n    ) {}\n\n    loadInstruments(): ThunkAction<LoadInstrumentsAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<LoadInstrumentsAction>) => {\n            observer.next(createAction(InstrumentActionType.LoadInstrumentsRequested));\n\n            const session = this._getSessionContext(store);\n            const token = this._getCurrentAccessToken(store);\n            const shippingAddress = this._getShippingAddress(store);\n\n            return this._getValidAccessToken(token)\n                .then(currentToken =>\n                    this._instrumentRequestSender.loadInstruments({\n                            ...session,\n                            authToken: currentToken.vaultAccessToken,\n                        },\n                        shippingAddress\n                    )\n                        .then(({ body }) => {\n                            observer.next(createAction(\n                                InstrumentActionType.LoadInstrumentsSucceeded,\n                                body,\n                                currentToken\n                            ));\n                            observer.complete();\n                        })\n                )\n                .catch(response => {\n                    observer.error(createErrorAction(InstrumentActionType.LoadInstrumentsFailed, response));\n                });\n        });\n    }\n\n    deleteInstrument(instrumentId: string): ThunkAction<DeleteInstrumentAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<DeleteInstrumentAction>) => {\n            observer.next(createAction(InstrumentActionType.DeleteInstrumentRequested, undefined, { instrumentId }));\n\n            const session = this._getSessionContext(store);\n            const token = this._getCurrentAccessToken(store);\n\n            return this._getValidAccessToken(token)\n                .then(currentToken =>\n                    this._instrumentRequestSender.deleteInstrument({\n                        ...session,\n                        authToken: currentToken.vaultAccessToken,\n                    }, instrumentId)\n                        .then(({ body }) => {\n                            observer.next(createAction(InstrumentActionType.DeleteInstrumentSucceeded, body, {\n                                instrumentId,\n                                ...currentToken,\n                            }));\n                            observer.complete();\n                        })\n                )\n                .catch(response => {\n                    observer.error(createErrorAction(InstrumentActionType.DeleteInstrumentFailed, response, { instrumentId }));\n                });\n        });\n    }\n\n    private _isValidVaultAccessToken(token: VaultAccessToken): boolean {\n        if (!token || !token.vaultAccessToken) {\n            return false;\n        }\n\n        const expiryBuffer = 2;\n        const expiry = addMinutes(new Date(token.vaultAccessExpiry), expiryBuffer);\n\n        return isFuture(expiry);\n    }\n\n    private _getCurrentAccessToken(store: ReadableCheckoutStore): VaultAccessToken | undefined {\n        const { instruments } = store.getState();\n        const meta = instruments.getInstrumentsMeta();\n\n        if (!meta) {\n            return;\n        }\n\n        return {\n            vaultAccessToken: meta.vaultAccessToken,\n            vaultAccessExpiry: meta.vaultAccessExpiry,\n        };\n    }\n\n    private _getValidAccessToken(token?: VaultAccessToken): Promise<VaultAccessToken> {\n        return token && this._isValidVaultAccessToken(token) ?\n            Promise.resolve(token) :\n            this._instrumentRequestSender.getVaultAccessToken().then(({ body }) => body);\n    }\n\n    private _getShippingAddress(store: ReadableCheckoutStore): Address | undefined {\n        const state = store.getState();\n\n        return state.shippingAddress.getShippingAddress();\n    }\n\n    private _getSessionContext(store: ReadableCheckoutStore): SessionContext {\n        const state = store.getState();\n        const config = state.config.getStoreConfig();\n        const cart = state.cart.getCart();\n\n        if (!config) {\n            throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n        }\n\n        if (!cart) {\n            throw new MissingDataError(MissingDataErrorType.MissingCart);\n        }\n\n        const { customerId } = cart;\n        const { storeId } = config.storeProfile;\n        const { code } = config.shopperCurrency.isTransactional ? config.shopperCurrency : config.currency;\n\n        return {\n            customerId,\n            storeId,\n            currencyCode: code,\n        };\n    }\n}\n","export default function isFuture(date: Date): boolean {\n    return date.valueOf() > Date.now();\n}\n","export default function addMinutes(date: Date, amount: number): Date {\n    const newDate = new Date(date.getTime());\n\n    newDate.setMinutes(date.getMinutes() + amount);\n\n    return newDate;\n}\n","import { Response } from '@bigcommerce/request-sender';\n\nimport PaymentResponse from '../payment-response';\n\nimport PaymentInstrument, { VaultAccessToken } from './instrument';\nimport { BankInternalInstrument, InstrumentsResponseBody, InstrumentErrorResponseBody, InternalInstrument, InternalInstrumentsResponseBody, InternalInstrumentErrorResponseBody, InternalVaultAccessTokenResponseBody, PayPalInternalInstrument } from './instrument-response-body';\nimport { mapToBankInstrument } from './map-to-bank-instrument';\nimport { mapToCardInstrument } from './map-to-card-instrument';\nimport { mapToPayPalInstrument } from './map-to-paypal-instrument';\n\nexport default class InstrumentResponseTransformer {\n    transformResponse(\n        response: PaymentResponse<InternalInstrumentsResponseBody>\n    ): Response<InstrumentsResponseBody> {\n        const { body, ...payload } = this._transformResponse(response);\n\n        return {\n            ...payload,\n            body: {\n                vaultedInstruments: this._transformVaultedInstruments(body.vaulted_instruments),\n            },\n        };\n    }\n\n    transformErrorResponse(\n        response: PaymentResponse<InternalInstrumentErrorResponseBody>\n    ): Response<InstrumentErrorResponseBody> {\n        return this._transformResponse(response);\n    }\n\n    transformVaultAccessResponse(\n        response: Response<InternalVaultAccessTokenResponseBody>\n    ): Response<VaultAccessToken> {\n        return {\n            ...response,\n            body: {\n                vaultAccessToken: response.body.data.token,\n                vaultAccessExpiry: response.body.data.expires_at,\n            },\n        };\n    }\n\n    private _transformVaultedInstruments(vaultedInstruments: InternalInstrument[] = []): PaymentInstrument[] {\n        return vaultedInstruments\n            .map(instrument => {\n                if (this._isPayPalInstrument(instrument)) {\n                    return mapToPayPalInstrument(instrument);\n                }\n\n                if (this._isBankInstrument(instrument)) {\n                    return mapToBankInstrument(instrument);\n                }\n\n                return mapToCardInstrument(instrument);\n            });\n    }\n\n    private _isPayPalInstrument(instrument: InternalInstrument): instrument is PayPalInternalInstrument {\n        return instrument.method_type === 'paypal';\n    }\n\n    private _isBankInstrument(instrument: InternalInstrument): instrument is BankInternalInstrument {\n        return instrument.method_type === 'bank';\n    }\n\n    private _transformResponse<T>(response: PaymentResponse<T>): Response<T> {\n        const { data: body, ...payload } = response;\n\n        return {\n            ...payload,\n            body,\n        };\n    }\n}\n","import { PayPalInstrument } from './instrument';\nimport { PayPalInternalInstrument } from './instrument-response-body';\n\nexport function mapToPayPalInstrument(instrument: PayPalInternalInstrument): PayPalInstrument {\n    return {\n        bigpayToken: instrument.bigpay_token,\n        defaultInstrument: instrument.default_instrument,\n        provider: instrument.provider,\n        externalId: instrument.external_id,\n        trustedShippingAddress: instrument.trusted_shipping_address,\n        method: 'paypal',\n        type: 'account',\n    };\n}\n","import { BankInstrument } from './instrument';\nimport { BankInternalInstrument } from './instrument-response-body';\n\nexport function mapToBankInstrument(instrument: BankInternalInstrument): BankInstrument {\n    return {\n        bigpayToken: instrument.bigpay_token,\n        defaultInstrument: instrument.default_instrument,\n        provider: instrument.provider,\n        externalId: instrument.external_id,\n        trustedShippingAddress: instrument.trusted_shipping_address,\n        accountNumber: instrument.account_number,\n        issuer: instrument.issuer,\n        iban: instrument.iban,\n        method: instrument.method,\n        type: 'bank',\n    };\n}\n","import { CardInstrument } from './instrument';\nimport { CardInternalInstrument } from './instrument-response-body';\n\nexport function mapToCardInstrument(instrument: CardInternalInstrument): CardInstrument {\n    return {\n        bigpayToken: instrument.bigpay_token,\n        defaultInstrument: instrument.default_instrument,\n        provider: instrument.provider,\n        iin: instrument.iin,\n        last4: instrument.last_4,\n        expiryMonth: instrument.expiry_month,\n        expiryYear: instrument.expiry_year,\n        brand: instrument.brand,\n        trustedShippingAddress: instrument.trusted_shipping_address,\n        method: instrument.method,\n        type: 'card',\n    };\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { mapToInternalAddress, Address } from '../../address';\nimport { RequestOptions } from '../../common/http-request';\nimport PaymentResponse from '../payment-response';\n\nimport { InstrumentRequestContext, VaultAccessToken } from './instrument';\nimport { InstrumentsResponseBody, InternalInstrumentsResponseBody, InternalInstrumentErrorResponseBody, InternalVaultAccessTokenResponseBody } from './instrument-response-body';\nimport InstrumentResponseTransformer from './instrument-response-transformer';\n\nexport default class InstrumentRequestSender {\n    private _transformer: InstrumentResponseTransformer;\n\n    constructor(\n        private _client: any,\n        private _requestSender: RequestSender\n    ) {\n        this._transformer = new InstrumentResponseTransformer();\n    }\n\n    getVaultAccessToken(\n        { timeout }: RequestOptions = {}\n    ): Promise<Response<VaultAccessToken>> {\n        const url = '/internalapi/v1/checkout/payments/vault-access-token';\n\n        return this._requestSender.get<InternalVaultAccessTokenResponseBody>(url, { timeout }).then(response => ({\n            ...response,\n            body: {\n                vaultAccessToken: response.body.data.token,\n                vaultAccessExpiry: response.body.data.expires_at,\n            },\n        }));\n    }\n\n    loadInstruments(\n        requestContext: InstrumentRequestContext,\n        shippingAddress?: Address\n    ): Promise<Response<InstrumentsResponseBody>> {\n        return (shippingAddress) ?\n            this._loadInstrumentsWithAddress(requestContext, shippingAddress) :\n            this._loadInstruments(requestContext);\n    }\n\n    deleteInstrument(\n        requestContext: InstrumentRequestContext,\n        instrumentId: string\n    ): Promise<Response<InstrumentsResponseBody>> {\n        const payload = {\n            ...requestContext,\n            instrumentId,\n        };\n\n        return new Promise((resolve, reject) => {\n            this._client.deleteShopperInstrument(\n                payload, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) =>  errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n\n    private _loadInstruments(\n        requestContext: InstrumentRequestContext\n    ): Promise<Response<InstrumentsResponseBody>> {\n        return new Promise((resolve, reject) => {\n            this._client.loadInstruments(\n                requestContext, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) => errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n\n    private _loadInstrumentsWithAddress(\n        requestContext: InstrumentRequestContext,\n        shippingAddress: Address\n    ): Promise<Response<InstrumentsResponseBody>> {\n        const payload = {\n            ...requestContext,\n            shippingAddress: mapToInternalAddress(shippingAddress),\n        };\n\n        return new Promise((resolve, reject) => {\n            this._client.loadInstrumentsWithAddress(\n                payload, (\n                    errorResponse: PaymentResponse<InternalInstrumentErrorResponseBody>,\n                    response: PaymentResponse<InternalInstrumentsResponseBody>\n                ) => errorResponse ?\n                    reject(this._transformer.transformErrorResponse(errorResponse)) :\n                    resolve(this._transformer.transformResponse(response))\n            );\n        });\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { RequestOptions } from '../common/http-request';\n\nimport { LoadShippingCountriesAction, ShippingCountryActionType } from './shipping-country-actions';\nimport ShippingCountryRequestSender from './shipping-country-request-sender';\n\nexport default class ShippingCountryActionCreator {\n    constructor(\n        private _shippingCountryRequestSender: ShippingCountryRequestSender\n    ) {}\n\n    loadCountries(options?: RequestOptions): Observable<LoadShippingCountriesAction> {\n        return Observable.create((observer: Observer<LoadShippingCountriesAction>) => {\n            observer.next(createAction(ShippingCountryActionType.LoadShippingCountriesRequested));\n\n            this._shippingCountryRequestSender.loadCountries(options)\n                .then(response => {\n                    observer.next(createAction(ShippingCountryActionType.LoadShippingCountriesSucceeded, response.body.data));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(ShippingCountryActionType.LoadShippingCountriesFailed, response));\n                });\n        });\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { RequestOptions } from '../common/http-request';\nimport { CountryResponseBody } from '../geography';\n\nexport default class ShippingCountryRequestSender {\n    constructor(\n        private _requestSender: RequestSender,\n        private _config: { locale?: string }\n    ) {}\n\n    loadCountries({ timeout }: RequestOptions = {}): Promise<Response<CountryResponseBody>> {\n        const url = '/internalapi/v1/shipping/countries';\n        const headers = {\n            'Accept-Language': this._config.locale,\n        };\n\n        return this._requestSender.get(url, { headers, timeout });\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable, Observer } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { InternalCheckoutSelectors } from '../checkout';\nimport { Registry } from '../common/registry';\n\nimport { ShippingInitializeOptions, ShippingRequestOptions } from './shipping-request-options';\nimport { ShippingStrategyAction, ShippingStrategyActionType, ShippingStrategyDeinitializeAction, ShippingStrategyInitializeAction, ShippingStrategySelectOptionAction, ShippingStrategyUpdateAddressAction } from './shipping-strategy-actions';\nimport { ShippingStrategy } from './strategies';\n\nexport default class ShippingStrategyActionCreator {\n    constructor(\n        private _strategyRegistry: Registry<ShippingStrategy>\n    ) {}\n\n    updateAddress(address: Partial<AddressRequestBody>, options?: ShippingRequestOptions): ThunkAction<ShippingStrategyUpdateAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyUpdateAddressAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .updateAddress(address, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId }));\n                });\n        });\n    }\n\n    selectOption(shippingOptionId: string, options?: ShippingRequestOptions): ThunkAction<ShippingStrategySelectOptionAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategySelectOptionAction>) => {\n            const payment = store.getState().payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            observer.next(createAction(ShippingStrategyActionType.SelectOptionRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .selectOption(shippingOptionId, { ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.SelectOptionSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.SelectOptionFailed, error, { methodId }));\n                });\n        });\n    }\n\n    initialize(options?: ShippingInitializeOptions): ThunkAction<ShippingStrategyInitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyInitializeAction>) => {\n            const state = store.getState();\n            const payment = state.payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n            const mergedOptions = { ...options, methodId };\n\n            if (methodId && state.shippingStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(ShippingStrategyActionType.InitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .initialize(mergedOptions)\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.InitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.InitializeFailed, error, { methodId }));\n                });\n        });\n    }\n\n    deinitialize(options?: ShippingRequestOptions): ThunkAction<ShippingStrategyDeinitializeAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<ShippingStrategyDeinitializeAction>) => {\n            const state = store.getState();\n            const payment = state.payment.getPaymentId();\n            const methodId = options && options.methodId || payment && payment.providerId;\n\n            if (methodId && !state.shippingStrategies.isInitialized(methodId)) {\n                return observer.complete();\n            }\n\n            observer.next(createAction(ShippingStrategyActionType.DeinitializeRequested, undefined, { methodId }));\n\n            this._strategyRegistry.get(methodId)\n                .deinitialize({ ...options, methodId })\n                .then(() => {\n                    observer.next(createAction(ShippingStrategyActionType.DeinitializeSucceeded, undefined, { methodId }));\n                    observer.complete();\n                })\n                .catch(error => {\n                    observer.error(createErrorAction(ShippingStrategyActionType.DeinitializeFailed, error, { methodId }));\n                });\n        });\n    }\n\n    widgetInteraction(method: () => Promise<any>, options?: ShippingRequestOptions): Observable<ShippingStrategyAction> {\n        return Observable.create((observer: Observer<ShippingStrategyAction>) => {\n            const methodId = options && options.methodId;\n            const meta = { methodId };\n\n            observer.next(createAction(ShippingStrategyActionType.WidgetInteractionStarted, undefined, meta));\n\n            method().then(() => {\n                observer.next(createAction(ShippingStrategyActionType.WidgetInteractionFinished, undefined, meta));\n                observer.complete();\n            })\n            .catch(error => {\n                observer.error(createErrorAction(ShippingStrategyActionType.WidgetInteractionFailed, error, meta));\n            });\n        });\n    }\n}\n","import { createAction, createErrorAction } from '@bigcommerce/data-store';\n\nimport { isInternalAddressEqual, mapFromInternalAddress, AddressRequestBody } from '../../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethod, PaymentMethodActionCreator } from '../../../payment';\nimport { AmazonPayAddressBook, AmazonPayOrderReference, AmazonPayScriptLoader, AmazonPayWindow } from '../../../payment/strategies/amazon-pay';\nimport { RemoteCheckoutActionCreator } from '../../../remote-checkout';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport ConsignmentActionCreator from '../../consignment-action-creator';\nimport { ShippingInitializeOptions, ShippingRequestOptions } from '../../shipping-request-options';\nimport { ShippingStrategyActionType } from '../../shipping-strategy-actions';\nimport ShippingStrategy from '../shipping-strategy';\n\nimport AmazonPayShippingInitializeOptions from './amazon-pay-shipping-initialize-options';\n\nexport default class AmazonPayShippingStrategy implements ShippingStrategy {\n    private _paymentMethod?: PaymentMethod;\n    private _window: AmazonPayWindow;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _remoteCheckoutActionCreator: RemoteCheckoutActionCreator,\n        private _scriptLoader: AmazonPayScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    initialize(options: ShippingInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazon: amazonOptions, methodId } = options;\n\n        if (!amazonOptions || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazon\" argument is not provided.');\n        }\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => new Promise((resolve, reject) => {\n                this._paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n\n                if (!this._paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                const onReady = () => {\n                    this._createAddressBook(amazonOptions)\n                        .then(resolve)\n                        .catch(reject);\n                };\n\n                this._scriptLoader.loadWidget(this._paymentMethod, onReady)\n                    .catch(reject);\n            }))\n            .then(() => this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        this._paymentMethod = undefined;\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        const updateAddressRequestBody = {\n            ...this._store.getState().shippingAddress.getShippingAddress(),\n            customFields: address.customFields,\n        } as AddressRequestBody;\n\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(updateAddressRequestBody, options)\n        );\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    private _createAddressBook(options: AmazonPayShippingInitializeOptions): Promise<AmazonPayAddressBook> {\n        return new Promise((resolve, reject) => {\n            const { container, onAddressSelect = () => {}, onError = () => {}, onReady = () => {} } = options;\n            const merchantId = this._paymentMethod && this._paymentMethod.config.merchantId;\n\n            if (!document.getElementById(container)) {\n                return reject(new InvalidArgumentError('Unable to create AmazonPay AddressBook widget without valid container ID.'));\n            }\n\n            if (!this._window.OffAmazonPayments) {\n                return reject(new NotInitializedError(NotInitializedErrorType.ShippingNotInitialized));\n            }\n\n            if (!merchantId) {\n                return reject(new MissingDataError(MissingDataErrorType.MissingPaymentMethod));\n            }\n\n            const widget = new this._window.OffAmazonPayments.Widgets.AddressBook({\n                design: {\n                    designMode: 'responsive',\n                },\n                scope: 'payments:billing_address payments:shipping_address payments:widget profile',\n                sellerId: merchantId,\n                onAddressSelect: orderReference => {\n                    this._synchronizeShippingAddress()\n                        .then(() => onAddressSelect(orderReference))\n                        .catch(onError);\n                },\n                onError: error => {\n                    reject(error);\n                    onError(error);\n                },\n                onReady: orderReference => {\n                    this._updateOrderReference(orderReference)\n                        .then(() => {\n                            resolve();\n                            onReady(orderReference);\n                        })\n                        .catch(onError);\n                },\n            });\n\n            widget.bind(container);\n\n            return widget;\n        });\n    }\n\n    private _synchronizeShippingAddress(): Promise<InternalCheckoutSelectors> {\n        const methodId = this._paymentMethod && this._paymentMethod.id;\n        const amazon = this._store.getState().remoteCheckout.getCheckout('amazon');\n        const referenceId = amazon ? amazon.referenceId : undefined;\n\n        if (!methodId || !referenceId) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._store.dispatch(\n            createAction(ShippingStrategyActionType.UpdateAddressRequested, undefined, { methodId })\n        )\n            .then(() => this._store.dispatch(\n                this._remoteCheckoutActionCreator.initializeShipping(methodId, { referenceId })\n            ))\n            .then(state => {\n                const amazon = state.remoteCheckout.getCheckout('amazon');\n                const remoteAddress = amazon && amazon.shipping && amazon.shipping.address;\n                const address = state.shippingAddress.getShippingAddress();\n\n                if (remoteAddress === false) {\n                    throw new RemoteCheckoutSynchronizationError();\n                }\n\n                if (!remoteAddress || isInternalAddressEqual(remoteAddress, address || {})) {\n                    return this._store.getState();\n                }\n\n                return this._store.dispatch(\n                    this._consignmentActionCreator.updateAddress(mapFromInternalAddress(remoteAddress))\n                );\n            })\n            .then(() => this._store.dispatch(\n                createAction(ShippingStrategyActionType.UpdateAddressSucceeded, undefined, { methodId })\n            ))\n            .catch(error => this._store.dispatch(\n                createErrorAction(ShippingStrategyActionType.UpdateAddressFailed, error, { methodId })\n            ));\n    }\n\n    private _updateOrderReference(orderReference: AmazonPayOrderReference): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._remoteCheckoutActionCreator.updateCheckout('amazon', {\n                referenceId: orderReference.getAmazonOrderReferenceId(),\n            })\n        );\n    }\n}\n","import { noop } from 'rxjs';\n\nimport { ConsignmentActionCreator, ShippingStrategyActionCreator } from '../..';\nimport { AddressRequestBody } from '../../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { InvalidArgumentError, MissingDataError, MissingDataErrorType } from '../../../common/error/errors';\nimport { PaymentMethodActionCreator } from '../../../payment';\nimport { AmazonPayV2ChangeActionType, AmazonPayV2PaymentProcessor } from '../../../payment/strategies/amazon-pay-v2';\nimport { ShippingInitializeOptions, ShippingRequestOptions } from '../../shipping-request-options';\nimport ShippingStrategy from '../shipping-strategy';\n\nexport default class AmazonPayV2ShippingStrategy implements ShippingStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _amazonPayV2PaymentProcessor: AmazonPayV2PaymentProcessor,\n        private _shippingStrategyActionCreator: ShippingStrategyActionCreator\n    ) {}\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        const shippingAddress = this._store.getState().shippingAddress.getShippingAddress();\n\n        if (!shippingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingShippingAddress);\n        }\n\n        const updateAddressRequestBody = {\n            ...shippingAddress,\n            customFields: address.customFields,\n        };\n\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(updateAddressRequestBody, options)\n        );\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    async initialize(options: ShippingInitializeOptions): Promise<InternalCheckoutSelectors> {\n        const { amazonpay, methodId } = options;\n\n        if (!amazonpay || !methodId) {\n            throw new InvalidArgumentError('Unable to proceed because \"options.amazonpay\" argument is not provided.');\n        }\n\n        const state = await this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId));\n        const paymentMethod = state.paymentMethods.getPaymentMethodOrThrow(methodId);\n\n        await this._amazonPayV2PaymentProcessor.initialize(paymentMethod);\n\n        const { paymentToken } = paymentMethod.initializationData;\n        const buttonId = amazonpay.editAddressButtonId;\n\n        if (paymentToken && buttonId) {\n            this._bindEditButton(buttonId, paymentToken, 'changeAddress');\n        }\n\n        return this._store.getState();\n    }\n\n    async deinitialize(): Promise<InternalCheckoutSelectors> {\n        await this._amazonPayV2PaymentProcessor.deinitialize();\n\n        return Promise.resolve(this._store.getState());\n    }\n\n    private _bindEditButton(id: string, sessionId: string, changeAction: AmazonPayV2ChangeActionType): void {\n        const button = document.getElementById(id);\n\n        if (!button || !button.parentNode) {\n            return;\n        }\n\n        const clone = button.cloneNode(true);\n        button.parentNode.replaceChild(clone, button);\n\n        clone.addEventListener('click', () => this._showLoadingSpinner(() => new Promise(noop)));\n\n        this._amazonPayV2PaymentProcessor.bindButton(id, sessionId, changeAction);\n    }\n\n    private _showLoadingSpinner(callback?: () => Promise<void> | Promise<never>): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(this._shippingStrategyActionCreator.widgetInteraction(() => {\n\n            if (callback) {\n                return callback();\n            }\n\n            return Promise.reject();\n        }), { queueId: 'widgetInteraction' });\n    }\n}\n","import { AddressRequestBody } from '../../../address';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport ConsignmentActionCreator from '../../consignment-action-creator';\nimport { ShippingRequestOptions } from '../../shipping-request-options';\nimport ShippingStrategy from '../shipping-strategy';\n\nexport default class DefaultShippingStrategy implements ShippingStrategy {\n    constructor(\n        private _store: CheckoutStore,\n        private _consignmentActionCreator: ConsignmentActionCreator\n    ) {}\n\n    updateAddress(address: AddressRequestBody, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(address, options)\n        );\n    }\n\n    selectOption(optionId: string, options?: ShippingRequestOptions): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.selectShippingOption(optionId, options)\n        );\n    }\n\n    initialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n\n    deinitialize(): Promise<InternalCheckoutSelectors> {\n        return Promise.resolve(this._store.getState());\n    }\n}\n","import { createAction } from '@bigcommerce/data-store';\nimport { concat, defer, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { throwErrorAction } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\n\nimport { SignInEmailRequestBody } from './signin-email';\nimport { SendSignInEmailAction, SignInEmailActionType } from './signin-email-actions';\nimport SignInEmailRequestSender from './signin-email-request-sender';\n\nexport default class SignInEmailActionCreator {\n    constructor(\n        private _requestSender: SignInEmailRequestSender\n    ) {}\n\n    sendSignInEmail(\n        emailRequest: SignInEmailRequestBody,\n        options?: RequestOptions\n    ): Observable<SendSignInEmailAction> {\n        return concat(\n            of(createAction(SignInEmailActionType.SendSignInEmailRequested)),\n            defer(async () => {\n                const { body } = await this._requestSender.sendSignInEmail(emailRequest, options);\n\n                return createAction(SignInEmailActionType.SendSignInEmailSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(SignInEmailActionType.SendSignInEmailFailed, error))\n        );\n    }\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { ContentType, RequestOptions } from '../common/http-request';\nimport { parseUrl } from '../common/url';\n\nimport { SignInEmail, SignInEmailRequestBody } from './signin-email';\n\nexport default class SignInEmailRequestSender {\n    constructor(\n        private _requestSender: RequestSender\n    ) {}\n\n    sendSignInEmail(\n        {\n            email,\n            redirectUrl,\n        }: SignInEmailRequestBody,\n        {\n            timeout,\n        }: RequestOptions = {}\n    ): Promise<Response<SignInEmail>> {\n        const url = '/login.php?action=passwordless_login';\n        const headers = { Accept: ContentType.JsonV1 };\n\n        return this._requestSender.post(url, { body: {\n            email,\n            redirect_url: redirectUrl || parseUrl(window.top.location.href).pathname,\n        }, headers, timeout });\n    }\n}\n","import { memoize } from 'lodash';\n\nimport isPlainObject from './is-plain-object';\n\nconst cloneDeep = memoize(<T>(input: T): T => {\n    if (Array.isArray(input)) {\n        return input.map((value: T[keyof T]) => (\n            cloneDeepSafe(value)\n        )) as any;\n    }\n\n    if (isPlainObject(input)) {\n        return (Object.keys(input) as Array<keyof T>)\n            .reduce((result, key) => ({\n                ...result,\n                [key]: cloneDeepSafe(input[key]),\n            }), {}) as T;\n    }\n\n    return input;\n});\n\n// Use WeakMap as the MapCache, this allows for better garbage collection\n// There's a deprecated `clear` method in the lodash implementation\n// of MapCache, hence the `any`\ncloneDeep.cache = new WeakMap() as any;\n\n/**\n * This is a wrapper function for `cloneDeep`. We need it because `cloneDeep` is\n * a memoized function using an instance of `WeakMap` as its cache. Without this\n * wrapper, the memoized function will throw an error if it is called with a\n * non-object argument.\n */\nconst cloneDeepSafe = <T>(input: T): T => {\n    return typeof input === 'object' && input !== null ?\n        cloneDeep(input) :\n        input;\n};\n\n/**\n * Clone the return value of a function. If the result is the same as previous\n * calls, return the previous clone instead of cloning it again.\n */\nexport default function cloneResult<T extends Func>(fn: T): T {\n    return ((...args: any[]) => cloneDeepSafe(fn(...args))) as T;\n}\n\nexport type Func = (...args: any[]) => any;\n","import { createSelectorCreator, defaultMemoize } from 'reselect';\nimport shallowEqual from 'shallowequal';\n\nimport withMemoizedCombiner from './with-memoized-combiner';\n\nconst createShallowEqualSelector = createSelectorCreator(\n    defaultMemoize,\n    (a: any, b: any) => shallowEqual(a, b)\n);\n\nexport default withMemoizedCombiner(createShallowEqualSelector);\n","import { createCheckoutStoreErrorSelectorFactory, createCheckoutStoreSelectorFactory, createCheckoutStoreStatusSelectorFactory, CheckoutSelectors, InternalCheckoutSelectors } from '../checkout';\n\nexport type CheckoutSelectorsFactory = (selectors: InternalCheckoutSelectors) => CheckoutSelectors;\n\nexport function createCheckoutSelectorsFactory(): CheckoutSelectorsFactory {\n    const createCheckoutStoreSelector = createCheckoutStoreSelectorFactory();\n    const createCheckoutStoreErrorSelector = createCheckoutStoreErrorSelectorFactory();\n    const createCheckoutStoreStatusSelector = createCheckoutStoreStatusSelectorFactory();\n\n    return (selectors: InternalCheckoutSelectors) => {\n        const data = createCheckoutStoreSelector(selectors);\n        const errors = createCheckoutStoreErrorSelector(selectors);\n        const statuses = createCheckoutStoreStatusSelector(selectors);\n\n        return {\n            data,\n            errors,\n            statuses,\n        };\n    };\n}\n\nexport default function createCheckoutSelectors(selectors: InternalCheckoutSelectors): CheckoutSelectors {\n    return createCheckoutSelectorsFactory()(selectors);\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\nimport { omit, values } from 'lodash';\n\nimport { Address } from '../address';\nimport { BillingAddress } from '../billing';\nimport { Cart } from '../cart';\nimport { createSelector } from '../common/selector';\nimport { cloneResult as clone } from '../common/utility';\nimport { FlashMessage, FlashMessageType, StoreConfig } from '../config';\nimport { Coupon, GiftCertificate } from '../coupon';\nimport { Customer } from '../customer';\nimport { FormField } from '../form';\nimport { Country } from '../geography';\nimport { Order } from '../order';\nimport { PaymentMethod } from '../payment';\nimport { CardInstrument, PaymentInstrument } from '../payment/instrument';\nimport { Consignment, ShippingOption } from '../shipping';\nimport { SignInEmail } from '../signin-email';\n\nimport Checkout from './checkout';\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\nexport type Instrument = CardInstrument;\n\n/**\n * Responsible for getting the state of the current checkout.\n *\n * This object has a set of methods that allow you to get a specific piece of\n * checkout information, such as shipping and billing details.\n */\nexport default interface CheckoutStoreSelector {\n    /**\n     * Gets the current checkout.\n     *\n     * @returns The current checkout if it is loaded, otherwise undefined.\n     */\n    getCheckout(): Checkout | undefined;\n\n    /**\n     * Gets the current order.\n     *\n     * @returns The current order if it is loaded, otherwise undefined.\n     */\n    getOrder(): Order | undefined;\n\n    /**\n     * Gets the checkout configuration of a store.\n     *\n     * @returns The configuration object if it is loaded, otherwise undefined.\n     */\n    getConfig(): StoreConfig | undefined;\n\n    /**\n     * Gets the sign-in email.\n     *\n     * @returns The sign-in email object if sent, otherwise undefined\n     */\n    getSignInEmail(): SignInEmail | undefined;\n\n    /**\n     * Gets the shipping address of the current checkout.\n     *\n     * If the address is partially complete, it may not have shipping options\n     * associated with it.\n     *\n     * @returns The shipping address object if it is loaded, otherwise\n     * undefined.\n     */\n    getShippingAddress(): Address | undefined;\n\n    /**\n     * Gets a list of shipping options available for the shipping address.\n     *\n     * If there is no shipping address assigned to the current checkout, the\n     * list of shipping options will be empty.\n     *\n     * @returns The list of shipping options if any, otherwise undefined.\n     */\n    getShippingOptions(): ShippingOption[] | undefined;\n\n    /**\n     * Gets a list of consignments.\n     *\n     * If there are no consignments created for to the current checkout, the\n     * list will be empty.\n     *\n     * @returns The list of consignments if any, otherwise undefined.\n     */\n    getConsignments(): Consignment[] | undefined;\n\n    /**\n     * Gets the selected shipping option for the current checkout.\n     *\n     * @returns The shipping option object if there is a selected option,\n     * otherwise undefined.\n     */\n    getSelectedShippingOption(): ShippingOption | undefined;\n\n    /**\n     * Gets a list of countries available for shipping.\n     *\n     * @returns The list of countries if it is loaded, otherwise undefined.\n     */\n    getShippingCountries(): Country[] | undefined;\n\n    /**\n     * Gets the billing address of an order.\n     *\n     * @returns The billing address object if it is loaded, otherwise undefined.\n     */\n    getBillingAddress(): BillingAddress | undefined;\n\n    /**\n     * Gets a list of countries available for billing.\n     *\n     * @returns The list of countries if it is loaded, otherwise undefined.\n     */\n    getBillingCountries(): Country[] | undefined;\n\n    /**\n     * Gets a list of payment methods available for checkout.\n     *\n     * @returns The list of payment methods if it is loaded, otherwise undefined.\n     */\n    getPaymentMethods(): PaymentMethod[] | undefined;\n\n    /**\n     * Gets a payment method by an id.\n     *\n     * The method returns undefined if unable to find a payment method with the\n     * specified id, either because it is not available for the customer, or it\n     * is not loaded.\n     *\n     * @param methodId - The identifier of the payment method.\n     * @param gatewayId - The identifier of a payment provider providing the\n     * payment method.\n     * @returns The payment method object if loaded and available, otherwise,\n     * undefined.\n     */\n    getPaymentMethod(methodId: string, gatewayId?: string): PaymentMethod | undefined;\n\n    /**\n     * Gets the payment method that is selected for checkout.\n     *\n     * @returns The payment method object if there is a selected method;\n     * undefined if otherwise.\n     */\n    getSelectedPaymentMethod(): PaymentMethod | undefined;\n\n    /**\n     * Gets the available flash messages.\n     *\n     * Flash messages contain messages set by the server,\n     * e.g: when trying to sign in using an invalid email link.\n     *\n     * @param type - The type of flash messages to be returned. Optional\n     * @returns The flash messages if available, otherwise undefined.\n     */\n    getFlashMessages(type?: FlashMessageType): FlashMessage[] | undefined;\n\n    /**\n     * Gets the current cart.\n     *\n     * @returns The current cart object if it is loaded, otherwise undefined.\n     */\n    getCart(): Cart | undefined;\n\n    /**\n     * Gets a list of coupons that are applied to the current checkout.\n     *\n     * @returns The list of applied coupons if there is any, otherwise undefined.\n     */\n    getCoupons(): Coupon[] | undefined;\n\n    /**\n     * Gets a list of gift certificates that are applied to the current checkout.\n     *\n     * @returns The list of applied gift certificates if there is any, otherwise undefined.\n     */\n    getGiftCertificates(): GiftCertificate[] | undefined;\n\n    /**\n     * Gets the current customer.\n     *\n     * @returns The current customer object if it is loaded, otherwise\n     * undefined.\n     */\n    getCustomer(): Customer | undefined;\n\n    /**\n     * Checks if payment data is required or not.\n     *\n     * If payment data is required, customers should be prompted to enter their\n     * payment details.\n     *\n     * ```js\n     * if (state.checkout.isPaymentDataRequired()) {\n     *     // Render payment form\n     * } else {\n     *     // Render \"Payment is not required for this order\" message\n     * }\n     * ```\n     *\n     * @param useStoreCredit - If true, check whether payment data is required\n     * with store credit applied; otherwise, check without store credit.\n     * @returns True if payment data is required, otherwise false.\n     */\n    isPaymentDataRequired(useStoreCredit?: boolean): boolean;\n\n    /**\n     * Checks if payment data is submitted or not.\n     *\n     * If payment data is already submitted using a payment method, customers\n     * should not be prompted to enter their payment details again.\n     *\n     * @param methodId - The identifier of the payment method.\n     * @param gatewayId - The identifier of a payment provider providing the\n     * payment method.\n     * @returns True if payment data is submitted, otherwise false.\n     */\n    isPaymentDataSubmitted(methodId: string, gatewayId?: string): boolean;\n\n    /**\n     * Gets a list of payment instruments associated with the current customer.\n     *\n     * @returns The list of payment instruments if it is loaded, otherwise undefined.\n     */\n    getInstruments(): Instrument[] | undefined;\n    getInstruments(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n\n    /**\n     * Gets a set of form fields that should be presented in order to create a customer.\n     *\n     * @returns The set of customer account form fields if it is loaded,\n     * otherwise undefined.\n     */\n    getCustomerAccountFields(): FormField[];\n\n    /**\n     * Gets a set of form fields that should be presented to customers in order\n     * to capture their billing address for a specific country.\n     *\n     * @param countryCode - A 2-letter country code (ISO 3166-1 alpha-2).\n     * @returns The set of billing address form fields if it is loaded,\n     * otherwise undefined.\n     */\n    getBillingAddressFields(countryCode: string): FormField[];\n\n    /**\n     * Gets a set of form fields that should be presented to customers in order\n     * to capture their shipping address for a specific country.\n     *\n     * @param countryCode - A 2-letter country code (ISO 3166-1 alpha-2).\n     * @returns The set of shipping address form fields if it is loaded,\n     * otherwise undefined.\n     */\n    getShippingAddressFields(countryCode: string): FormField[];\n}\n\nexport type CheckoutStoreSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreSelector;\n\nexport function createCheckoutStoreSelectorFactory(): CheckoutStoreSelectorFactory {\n    const getCheckout = createSelector(\n        ({ checkout }: InternalCheckoutSelectors) => checkout.getCheckout,\n        getCheckout => clone(getCheckout)\n    );\n\n    const getOrder = createSelector(\n        ({ order }: InternalCheckoutSelectors) => order.getOrder,\n        getOrder => clone(getOrder)\n    );\n\n    const getConfig = createSelector(\n        ({ config }: InternalCheckoutSelectors) => config.getStoreConfig,\n        getStoreConfig => clone(getStoreConfig)\n    );\n\n    const getShippingAddress = createSelector(\n        ({ shippingAddress }: InternalCheckoutSelectors) => shippingAddress.getShippingAddress,\n        ({ config }: InternalCheckoutSelectors) => config.getContextConfig,\n        (getShippingAddress, getContextConfig) => clone(() => {\n            const shippingAddress = getShippingAddress();\n            const context = getContextConfig();\n\n            if (!shippingAddress) {\n                if (!context || !context.geoCountryCode) {\n                    return;\n                }\n\n                return {\n                    firstName: '',\n                    lastName: '',\n                    company: '',\n                    address1: '',\n                    address2: '',\n                    city: '',\n                    stateOrProvince: '',\n                    stateOrProvinceCode: '',\n                    postalCode: '',\n                    country: '',\n                    phone: '',\n                    customFields: [],\n                    countryCode: context.geoCountryCode,\n                };\n            }\n\n            return shippingAddress;\n        })\n    );\n\n    const getShippingOptions = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(() => {\n            const consignments = getConsignments();\n\n            if (consignments && consignments.length) {\n                return consignments[0].availableShippingOptions;\n            }\n        })\n    );\n\n    const getConsignments = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(getConsignments)\n    );\n\n    const getSelectedShippingOption = createSelector(\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getConsignments,\n        getConsignments => clone(() => {\n            const consignments = getConsignments();\n\n            if (!consignments || !consignments.length) {\n                return;\n            }\n\n            return consignments[0].selectedShippingOption;\n        })\n    );\n\n    const getShippingCountries = createSelector(\n        ({ shippingCountries }: InternalCheckoutSelectors) => shippingCountries.getShippingCountries,\n        getShippingCountries => clone(getShippingCountries)\n    );\n\n    const getBillingAddress = createSelector(\n        ({ billingAddress }: InternalCheckoutSelectors) => billingAddress.getBillingAddress,\n        ({ config }: InternalCheckoutSelectors) => config.getContextConfig,\n        (getBillingAddress, getContextConfig) => clone(() => {\n            const billingAddress = getBillingAddress();\n            const context = getContextConfig();\n            const isEmptyBillingAddress = !billingAddress ||\n                values(omit(billingAddress, 'shouldSaveAddress', 'email', 'id'))\n                    .every(val => !val || !val.length);\n\n            if (isEmptyBillingAddress) {\n                if (!context || !context.geoCountryCode) {\n                    return billingAddress;\n                }\n\n                return {\n                    id: billingAddress ? billingAddress.id : '',\n                    firstName: '',\n                    lastName: '',\n                    company: '',\n                    address1: '',\n                    address2: '',\n                    city: '',\n                    email: billingAddress ? billingAddress.email : '',\n                    stateOrProvince: '',\n                    stateOrProvinceCode: '',\n                    postalCode: '',\n                    country: '',\n                    phone: '',\n                    customFields: [],\n                    countryCode: context.geoCountryCode,\n                };\n            }\n\n            return billingAddress;\n        })\n    );\n\n    const getBillingCountries = createSelector(\n        ({ countries }: InternalCheckoutSelectors) => countries.getCountries,\n        getCountries => clone(getCountries)\n    );\n\n    const getPaymentMethods = createSelector(\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethods,\n        getPaymentMethods => clone(getPaymentMethods)\n    );\n\n    const getPaymentMethod = createSelector(\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        getPaymentMethod => clone(getPaymentMethod)\n    );\n\n    const getSelectedPaymentMethod = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.getPaymentId,\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        (getPaymentId, getPaymentMethod) => clone(() => {\n            const payment = getPaymentId();\n\n            return payment && getPaymentMethod(payment.providerId, payment.gatewayId);\n        })\n    );\n\n    const getCart = createSelector(\n        ({ cart }: InternalCheckoutSelectors) => cart.getCart,\n        getCart => clone(getCart)\n    );\n\n    const getCoupons = createSelector(\n        ({ coupons }: InternalCheckoutSelectors) => coupons.getCoupons,\n        getCoupons => clone(getCoupons)\n    );\n\n    const getGiftCertificates = createSelector(\n        ({ giftCertificates }: InternalCheckoutSelectors) => giftCertificates.getGiftCertificates,\n        getGiftCertificates => clone(getGiftCertificates)\n    );\n\n    const getCustomer = createSelector(\n        ({ customer }: InternalCheckoutSelectors) => customer.getCustomer,\n        getCustomer => clone(getCustomer)\n    );\n\n    const getSignInEmail = createSelector(\n        ({ signInEmail }: InternalCheckoutSelectors) => signInEmail.getEmail,\n        getEmail => clone(getEmail)\n    );\n\n    const isPaymentDataRequired = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.isPaymentDataRequired,\n        isPaymentDataRequired => clone(isPaymentDataRequired)\n    );\n\n    const isPaymentDataSubmitted = createSelector(\n        ({ payment }: InternalCheckoutSelectors) => payment.isPaymentDataSubmitted,\n        ({ paymentMethods }: InternalCheckoutSelectors) => paymentMethods.getPaymentMethod,\n        (isPaymentDataSubmitted, getPaymentMethod) => clone((methodId: string, gatewayId?: string) => {\n            return isPaymentDataSubmitted(getPaymentMethod(methodId, gatewayId));\n        })\n    );\n\n    const getInstruments = createSelector(\n        ({ instruments }: InternalCheckoutSelectors) => instruments.getInstruments,\n        ({ instruments }: InternalCheckoutSelectors) => instruments.getInstrumentsByPaymentMethod,\n        (getInstruments, getInstrumentsByPaymentMethod) => {\n            function getInstrumentsSelector(): Instrument[] | undefined;\n            function getInstrumentsSelector(paymentMethod: PaymentMethod): PaymentInstrument[] | undefined;\n            function getInstrumentsSelector(paymentMethod?: PaymentMethod): PaymentInstrument[] | undefined {\n                return paymentMethod ? getInstrumentsByPaymentMethod(paymentMethod) : getInstruments();\n            }\n\n            return clone(getInstrumentsSelector);\n        }\n    );\n\n    const getCustomerAccountFields = createSelector(\n        ({ form }: InternalCheckoutSelectors) => form.getCustomerAccountFields,\n        getCustomerAccountFields => clone(getCustomerAccountFields)\n    );\n\n    const getBillingAddressFields = createSelector(\n        ({ form }: InternalCheckoutSelectors) => form.getBillingAddressFields,\n        ({ countries }: InternalCheckoutSelectors) => countries.getCountries,\n        (getBillingAddressFields, getCountries) => clone((countryCode: string) => {\n            return getBillingAddressFields(getCountries(), countryCode);\n        })\n    );\n\n    const getShippingAddressFields = createSelector(\n        ({ form }: InternalCheckoutSelectors) => form.getShippingAddressFields,\n        ({ shippingCountries }: InternalCheckoutSelectors) => shippingCountries.getShippingCountries,\n        (getShippingAddressFields, getShippingCountries) => clone((countryCode: string) => {\n            return getShippingAddressFields(getShippingCountries(), countryCode);\n        })\n    );\n\n    const getFlashMessages = createSelector(\n        ({ config }: InternalCheckoutSelectors) => config.getFlashMessages,\n        getFlashMessages => clone(getFlashMessages)\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreSelector => {\n        return {\n            getCheckout: getCheckout(state),\n            getOrder: getOrder(state),\n            getConfig: getConfig(state),\n            getFlashMessages: getFlashMessages(state),\n            getShippingAddress: getShippingAddress(state),\n            getShippingOptions: getShippingOptions(state),\n            getConsignments: getConsignments(state),\n            getSelectedShippingOption: getSelectedShippingOption(state),\n            getShippingCountries: getShippingCountries(state),\n            getBillingAddress: getBillingAddress(state),\n            getBillingCountries: getBillingCountries(state),\n            getPaymentMethods: getPaymentMethods(state),\n            getPaymentMethod: getPaymentMethod(state),\n            getSelectedPaymentMethod: getSelectedPaymentMethod(state),\n            getCart: getCart(state),\n            getCoupons: getCoupons(state),\n            getGiftCertificates: getGiftCertificates(state),\n            getCustomer: getCustomer(state),\n            isPaymentDataRequired: isPaymentDataRequired(state),\n            isPaymentDataSubmitted: isPaymentDataSubmitted(state),\n            getSignInEmail: getSignInEmail(state),\n            getInstruments: getInstruments(state),\n            getCustomerAccountFields: getCustomerAccountFields(state),\n            getBillingAddressFields: getBillingAddressFields(state),\n            getShippingAddressFields: getShippingAddressFields(state),\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { CartChangedError } from '../cart/errors';\nimport { RequestError } from '../common/error/errors';\nimport { createSelector, createShallowEqualSelector } from '../common/selector';\nimport { Omit } from '../common/types';\n\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\n/**\n * Responsible for getting the error of any asynchronous checkout action, if\n * there is any.\n *\n * This object has a set of getters that would return an error if an action is\n * not executed successfully. For example, if you are unable to submit an order,\n * you can use this object to retrieve the reason for the failure.\n */\nexport default interface CheckoutStoreErrorSelector {\n    getError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current checkout.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadCheckoutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update the current checkout.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateCheckoutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to submit the current order.\n     *\n     * @returns The error object if unable to submit, otherwise undefined.\n     */\n    getSubmitOrderError(): Error | CartChangedError | undefined;\n\n    /**\n     * Returns an error if unable to finalize the current order.\n     *\n     * @returns The error object if unable to finalize, otherwise undefined.\n     */\n    getFinalizeOrderError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current order.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadOrderError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the current cart.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadCartError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load billing countries.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadBillingCountriesError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load shipping countries.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadShippingCountriesError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load payment methods.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadPaymentMethodsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to load a specific payment method.\n     *\n     * @param methodId - The identifier of the payment method to load.\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadPaymentMethodError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize a specific payment method.\n     *\n     * @param methodId - The identifier of the payment method to initialize.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializePaymentError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to sign in.\n     *\n     * @returns The error object if unable to sign in, otherwise undefined.\n     */\n    getSignInError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to sign out.\n     *\n     * @returns The error object if unable to sign out, otherwise undefined.\n     */\n    getSignOutError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize the customer step of a checkout\n     * process.\n     *\n     * @param methodId - The identifer of the initialization method to execute.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializeCustomerError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to load shipping options.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadShippingOptionsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to select a shipping option.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to select, otherwise undefined.\n     */\n    getSelectShippingOptionError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to continue as guest.\n     *\n     * The call could fail in scenarios where guest checkout is not allowed, for example, when existing accounts are required to sign-in.\n     *\n     * In the background, this call tries to set the billing address email using the Storefront API. You could access the Storefront API response status code using `getContinueAsGuestError` error selector.\n     *\n     * ```js\n     * console.log(state.errors.getContinueAsGuestError());\n     * console.log(state.errors.getContinueAsGuestError().status);\n     * ```\n     *\n     * For more information about status codes, check [Checkout Storefront API - Add Checkout Billing Address](https://developer.bigcommerce.com/api-reference/cart-checkout/storefront-checkout-api/checkout-billing-address/checkoutsbillingaddressbycheckoutidpost).\n     *\n     * @returns The error object if unable to continue, otherwise undefined.\n     */\n    getContinueAsGuestError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update billing address.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateBillingAddressError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update subscriptions.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateSubscriptionsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to update shipping address.\n     *\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateShippingAddressError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to delete a consignment.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to delete, otherwise undefined.\n     */\n    getDeleteConsignmentError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to update a consignment.\n     *\n     * A consignment ID should be provided when checking for an error for a\n     * specific consignment, otherwise it will check for all available consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns The error object if unable to update, otherwise undefined.\n     */\n    getUpdateConsignmentError(consignmentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to create consignments.\n     *\n     * @returns The error object if unable to create, otherwise undefined.\n     */\n    getCreateConsignmentsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to initialize the shipping step of a checkout\n     * process.\n     *\n     * @param methodId - The identifer of the initialization method to execute.\n     * @returns The error object if unable to initialize, otherwise undefined.\n     */\n    getInitializeShippingError(methodId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to apply store credit.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyStoreCreditError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to apply a coupon code.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyCouponError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to remove a coupon code.\n     *\n     * @returns The error object if unable to remove, otherwise undefined.\n     */\n    getRemoveCouponError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to apply a gift certificate.\n     *\n     * @returns The error object if unable to apply, otherwise undefined.\n     */\n    getApplyGiftCertificateError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to remove a gift certificate.\n     *\n     * @returns The error object if unable to remove, otherwise undefined.\n     */\n    getRemoveGiftCertificateError(): RequestError | undefined;\n\n    /**\n     * Returns an error if unable to load payment instruments.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadInstrumentsError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to delete a payment instrument.\n     *\n     * @param instrumentId - The identifier of the payment instrument to delete.\n     * @returns The error object if unable to delete, otherwise undefined.\n     */\n    getDeleteInstrumentError(instrumentId?: string): Error | undefined;\n\n    /**\n     * Returns an error if unable to load the checkout configuration of a store.\n     *\n     * @returns The error object if unable to load, otherwise undefined.\n     */\n    getLoadConfigError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to send sign-in email.\n     *\n     * @returns The error object if unable to send email, otherwise undefined.\n     */\n    getSignInEmailError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to create customer account.\n     *\n     * @returns The error object if unable to create account, otherwise undefined.\n     */\n    getCreateCustomerAccountError(): Error | undefined;\n\n    /**\n     * Returns an error if unable to create customer address.\n     *\n     * @returns The error object if unable to create address, otherwise undefined.\n     */\n    getCreateCustomerAddressError(): Error | undefined;\n}\n\nexport type CheckoutStoreErrorSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreErrorSelector;\n\nexport function createCheckoutStoreErrorSelectorFactory(): CheckoutStoreErrorSelectorFactory {\n    const getError = createShallowEqualSelector(\n        (selector: Omit<CheckoutStoreErrorSelector, 'getError'>) => selector,\n        selector => () => {\n            for (const key of Object.keys(selector) as Array<keyof Omit<CheckoutStoreErrorSelector, 'getError'>>) {\n                const error = selector[key]();\n\n                if (error) {\n                    return error;\n                }\n            }\n        }\n    );\n\n    const getSelectShippingOptionError = createSelector(\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.getSelectOptionError,\n        ({ consignments }: InternalCheckoutSelectors) => consignments.getUpdateShippingOptionError,\n        (getSelectOptionError, getUpdateShippingOptionError) => (consignmentId?: string) => {\n            return (\n                getSelectOptionError() ||\n                getUpdateShippingOptionError(consignmentId)\n            );\n        }\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreErrorSelector => {\n        const selector = {\n            getLoadCheckoutError: state.checkout.getLoadError,\n            getUpdateCheckoutError: state.checkout.getUpdateError,\n            getSubmitOrderError: state.paymentStrategies.getExecuteError,\n            getFinalizeOrderError: state.paymentStrategies.getFinalizeError,\n            getLoadOrderError: state.order.getLoadError,\n            getLoadCartError: state.cart.getLoadError,\n            getLoadBillingCountriesError: state.countries.getLoadError,\n            getLoadShippingCountriesError: state.shippingCountries.getLoadError,\n            getLoadPaymentMethodsError: state.paymentMethods.getLoadError,\n            getLoadPaymentMethodError: state.paymentMethods.getLoadMethodError,\n            getInitializePaymentError: state.paymentStrategies.getInitializeError,\n            getSignInError: state.customerStrategies.getSignInError,\n            getSignOutError: state.customerStrategies.getSignOutError,\n            getInitializeCustomerError: state.customerStrategies.getInitializeError,\n            getLoadShippingOptionsError: state.consignments.getLoadShippingOptionsError,\n            getSelectShippingOptionError: getSelectShippingOptionError(state),\n            getContinueAsGuestError: state.billingAddress.getContinueAsGuestError,\n            getUpdateBillingAddressError: state.billingAddress.getUpdateError,\n            getUpdateSubscriptionsError: state.subscriptions.getUpdateError,\n            getUpdateShippingAddressError: state.shippingStrategies.getUpdateAddressError,\n            getDeleteConsignmentError: state.consignments.getDeleteError,\n            getUpdateConsignmentError: state.consignments.getUpdateError,\n            getCreateConsignmentsError: state.consignments.getCreateError,\n            getInitializeShippingError: state.shippingStrategies.getInitializeError,\n            getApplyStoreCreditError: state.storeCredit.getApplyError,\n            getApplyCouponError: state.coupons.getApplyError,\n            getRemoveCouponError: state.coupons.getRemoveError,\n            getApplyGiftCertificateError: state.giftCertificates.getApplyError,\n            getRemoveGiftCertificateError: state.giftCertificates.getRemoveError,\n            getLoadInstrumentsError: state.instruments.getLoadError,\n            getDeleteInstrumentError: state.instruments.getDeleteError,\n            getLoadConfigError: state.config.getLoadError,\n            getSignInEmailError: state.signInEmail.getSendError,\n            getCreateCustomerAccountError: state.customer.getCreateAccountError,\n            getCreateCustomerAddressError: state.customer.getCreateAddressError,\n        };\n\n        return {\n            getError: getError(selector),\n            ...selector,\n        };\n    });\n}\n","import { memoizeOne } from '@bigcommerce/memoize';\n\nimport { createSelector, createShallowEqualSelector } from '../common/selector';\nimport { Omit } from '../common/types';\n\nimport InternalCheckoutSelectors from './internal-checkout-selectors';\n\n/**\n * Responsible for checking the statuses of various asynchronous actions related\n * to checkout.\n *\n * This object has a set of getters that return true if an action is in\n * progress. For example, you can check whether a customer is submitting an\n * order and waiting for the request to complete.\n */\nexport default interface CheckoutStoreStatusSelector {\n    /**\n     * Checks whether any checkout action is pending.\n     *\n     * @returns True if there is a pending action, otherwise false.\n     */\n    isPending(): boolean;\n\n    /**\n     * Checks whether the current checkout is loading.\n     *\n     * @returns True if the current checkout is loading, otherwise false.\n     */\n    isLoadingCheckout(): boolean;\n\n    /**\n     * Checks whether the current checkout is being updated.\n     *\n     * @returns True if the current checkout is being updated, otherwise false.\n     */\n    isUpdatingCheckout(): boolean;\n\n    /**\n     * Checks whether spam check is executing.\n     *\n     * @returns True if the current checkout is being updated, otherwise false.\n     */\n    isExecutingSpamCheck(): boolean;\n\n    /**\n     * Checks whether the current order is submitting.\n     *\n     * @returns True if the current order is submitting, otherwise false.\n     */\n    isSubmittingOrder(): boolean;\n\n    /**\n     * Checks whether the current order is finalizing.\n     *\n     * @returns True if the current order is finalizing, otherwise false.\n     */\n    isFinalizingOrder(): boolean;\n\n    /**\n     * Checks whether the current order is loading.\n     *\n     * @returns True if the current order is loading, otherwise false.\n     */\n    isLoadingOrder(): boolean;\n\n    /**\n     * Checks whether the current cart is loading.\n     *\n     * @returns True if the current cart is loading, otherwise false.\n     */\n    isLoadingCart(): boolean;\n\n    /**\n     * Checks whether billing countries are loading.\n     *\n     * @returns True if billing countries are loading, otherwise false.\n     */\n    isLoadingBillingCountries(): boolean;\n\n    /**\n     * Checks whether shipping countries are loading.\n     *\n     * @returns True if shipping countries are loading, otherwise false.\n     */\n    isLoadingShippingCountries(): boolean;\n\n    /**\n     * Checks whether payment methods are loading.\n     *\n     * @returns True if payment methods are loading, otherwise false.\n     */\n    isLoadingPaymentMethods(): boolean;\n\n    /**\n     * Checks whether a specific or any payment method is loading.\n     *\n     * The method returns true if no ID is provided and at least one payment\n     * method is loading.\n     *\n     * @param methodId - The identifier of the payment method to check.\n     * @returns True if the payment method is loading, otherwise false.\n     */\n    isLoadingPaymentMethod(methodId?: string): boolean;\n\n    /**\n     * Checks whether a specific or any payment method is initializing.\n     *\n     * The method returns true if no ID is provided and at least one payment\n     * method is initializing.\n     *\n     * @param methodId - The identifier of the payment method to check.\n     * @returns True if the payment method is initializing, otherwise false.\n     */\n    isInitializingPayment(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is signing in.\n     *\n     * If an ID is provided, the method also checks whether the customer is\n     * signing in using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for signing in the\n     * current customer.\n     * @returns True if the customer is signing in, otherwise false.\n     */\n    isSigningIn(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is signing out.\n     *\n     * If an ID is provided, the method also checks whether the customer is\n     * signing out using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for signing out the\n     * current customer.\n     * @returns True if the customer is signing out, otherwise false.\n     */\n    isSigningOut(methodId?: string): boolean;\n\n    /**\n     * Checks whether the customer step is initializing.\n     *\n     * If an ID is provided, the method also checks whether the customer step is\n     * initializing using a specific customer method with the same ID.\n     *\n     * @param methodId - The identifier of the method used for initializing the\n     * customer step of checkout.\n     * @returns True if the customer step is initializing, otherwise false.\n     */\n    isInitializingCustomer(methodId?: string): boolean;\n\n    /**\n     * Checks whether shipping options are loading.\n     *\n     * @returns True if shipping options are loading, otherwise false.\n     */\n    isLoadingShippingOptions(): boolean;\n\n    /**\n     * Checks whether a shipping option is being selected.\n     *\n     * A consignment ID should be provided when checking if a shipping option\n     * is being selected for a specific consignment, otherwise it will check\n     * for all consignments.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if selecting a shipping option, otherwise false.\n     */\n    isSelectingShippingOption(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether the billing address is being updated.\n     *\n     * @returns True if updating their billing address, otherwise false.\n     */\n    isUpdatingBillingAddress(): boolean;\n\n    /**\n     * Checks whether the shopper is continuing out as a guest.\n     *\n     * @returns True if continuing as guest, otherwise false.\n     */\n    isContinuingAsGuest(): boolean;\n\n    /**\n     * Checks the shipping address is being updated.\n     *\n     * @returns True if updating their shipping address, otherwise false.\n     */\n    isUpdatingShippingAddress(): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being updated.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if updating consignment(s), otherwise false.\n     */\n    isUpdatingConsignment(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being deleted.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @param consignmentId - The identifier of the consignment to be checked.\n     * @returns True if deleting consignment(s), otherwise false.\n     */\n    isDeletingConsignment(consignmentId?: string): boolean;\n\n    /**\n     * Checks whether a given/any consignment is being updated.\n     *\n     * A consignment ID should be provided when checking for a specific consignment,\n     * otherwise it will check for any consignment.\n     *\n     * @returns True if creating consignments, otherwise false.\n     */\n    isCreatingConsignments(): boolean;\n\n    /**\n     * Checks whether the shipping step of a checkout process is initializing.\n     *\n     * If an identifier is provided, the method also checks whether the shipping\n     * step is initializing using a specific shipping method with the same\n     * identifier.\n     *\n     * @param methodId - The identifer of the initialization method to check.\n     * @returns True if the shipping step is initializing, otherwise false.\n     */\n    isInitializingShipping(methodId?: string): boolean;\n\n    /**\n     * Checks whether the current customer is applying a coupon code.\n     *\n     * @returns True if applying a coupon code, otherwise false.\n     */\n    isApplyingCoupon(): boolean;\n\n    /**\n     * Checks whether the current customer is applying store credit.\n     *\n     * @returns True if applying store credit, otherwise false.\n     */\n    isApplyingStoreCredit(): boolean;\n\n    /**\n     * Checks whether the current customer is removing a coupon code.\n     *\n     * @returns True if removing a coupon code, otherwise false.\n     */\n    isRemovingCoupon(): boolean;\n\n    /**\n     * Checks whether a sign-in email is being sent.\n     *\n     * @returns True if sending a sign-in email, otherwise false\n     */\n    isSendingSignInEmail(): boolean;\n\n    /**\n     * Checks whether the current customer is applying a gift certificate.\n     *\n     * @returns True if applying a gift certificate, otherwise false.\n     */\n    isApplyingGiftCertificate(): boolean;\n\n    /**\n     * Checks whether the current customer is removing a gift certificate.\n     *\n     * @returns True if removing a gift certificate, otherwise false.\n     */\n    isRemovingGiftCertificate(): boolean;\n\n    /**\n     * Checks whether the current customer's payment instruments are loading.\n     *\n     * @returns True if payment instruments are loading, otherwise false.\n     */\n    isLoadingInstruments(): boolean;\n\n    /**\n     * Checks whether the current customer is deleting a payment instrument.\n     *\n     * @returns True if deleting a payment instrument, otherwise false.\n     */\n    isDeletingInstrument(instrumentId?: string): boolean;\n\n    /**\n     * Checks whether the checkout configuration of a store is loading.\n     *\n     * @returns True if the configuration is loading, otherwise false.\n     */\n    isLoadingConfig(): boolean;\n\n    /**\n     * Checks whether the customer step of a checkout is in a pending state.\n     *\n     * The customer step is considered to be pending if it is in the process of\n     * initializing, signing in, signing out, and/or interacting with a customer\n     * widget.\n     *\n     * @returns True if the customer step is pending, otherwise false.\n     */\n    isCustomerStepPending(): boolean;\n\n    /**\n     * Checks whether the shipping step of a checkout is in a pending state.\n     *\n     * The shipping step is considered to be pending if it is in the process of\n     * initializing, updating address, selecting a shipping option, and/or\n     * interacting with a shipping widget.\n     *\n     * @returns True if the shipping step is pending, otherwise false.\n     */\n    isShippingStepPending(): boolean;\n\n    /**\n     * Checks whether the payment step of a checkout is in a pending state.\n     *\n     * The payment step is considered to be pending if it is in the process of\n     * initializing, submitting an order, finalizing an order, and/or\n     * interacting with a payment widget.\n     *\n     * @returns True if the payment step is pending, otherwise false.\n     */\n    isPaymentStepPending(): boolean;\n\n    /**\n     * Checks whether the subscriptions are being updated.\n     *\n     * @returns True if updating subscriptions, otherwise false.\n     */\n    isUpdatingSubscriptions(): boolean;\n\n    /**\n     * Checks whether a customer account is being created\n     *\n     * @returns True if creating, otherwise false.\n     */\n    isCreatingCustomerAccount(): boolean;\n\n    /**\n     * Checks whether a customer address is being created\n     *\n     * @returns True if creating, otherwise false.\n     */\n    isCreatingCustomerAddress(): boolean;\n}\n\nexport type CheckoutStoreStatusSelectorFactory = (state: InternalCheckoutSelectors) => CheckoutStoreStatusSelector;\n\nexport function createCheckoutStoreStatusSelectorFactory(): CheckoutStoreStatusSelectorFactory {\n    const isPending = createShallowEqualSelector(\n        (selector: Omit<CheckoutStoreStatusSelector, 'isPending'>) => selector,\n        selector => () => {\n            return (Object.keys(selector) as Array<keyof Omit<CheckoutStoreStatusSelector, 'isPending'>>)\n                .some(key => selector[key]());\n        }\n    );\n\n    const isSelectingShippingOption = createSelector(\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.isSelectingOption,\n        ({ consignments }: InternalCheckoutSelectors) => consignments.isUpdatingShippingOption,\n        (isSelectingOption, isUpdatingShippingOption) => (consignmentId?: string) => {\n            return (\n                isSelectingOption() ||\n                isUpdatingShippingOption(consignmentId)\n            );\n        }\n    );\n\n    const isCustomerStepPending = createSelector(\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isInitializing,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isSigningIn,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isSigningOut,\n        ({ customerStrategies }: InternalCheckoutSelectors) => customerStrategies.isWidgetInteracting,\n        (isInitializing, isSigningIn, isSigningOut, isWidgetInteracting) => (methodId?: string) => {\n            return (\n                isInitializing(methodId) ||\n                isSigningIn(methodId) ||\n                isSigningOut(methodId) ||\n                isWidgetInteracting(methodId)\n            );\n        }\n    );\n\n    const isShippingStepPending = createSelector(\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.isInitializing,\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.isUpdatingAddress,\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.isSelectingOption,\n        ({ shippingStrategies }: InternalCheckoutSelectors) => shippingStrategies.isWidgetInteracting,\n        (isInitializing, isUpdatingAddress, isSelectingOption, isWidgetInteracting) => (methodId?: string) => {\n            return (\n                isInitializing(methodId) ||\n                isUpdatingAddress(methodId) ||\n                isSelectingOption(methodId) ||\n                isWidgetInteracting(methodId)\n            );\n        }\n    );\n\n    const isPaymentStepPending = createSelector(\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isInitializing,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isExecuting,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isFinalizing,\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isWidgetInteracting,\n        (isInitializing, isExecuting, isFinalizing, isWidgetInteracting) => (methodId?: string) => {\n            return (\n                isInitializing(methodId) ||\n                isExecuting(methodId) ||\n                isFinalizing(methodId) ||\n                isWidgetInteracting(methodId)\n            );\n        }\n    );\n\n    const isSubmittingOrder = createSelector(\n        ({ paymentStrategies }: InternalCheckoutSelectors) => paymentStrategies.isExecuting,\n        ({ checkout }: InternalCheckoutSelectors) => checkout.isExecutingSpamCheck, // Remove this when CheckoutService#initializeSpamProtection is deprecated\n        (isExecuting, isExecutingSpamCheck) => (methodId?: string) => {\n            return (\n                isExecuting(methodId) ||\n                isExecutingSpamCheck()\n            );\n        }\n    );\n\n    return memoizeOne((\n        state: InternalCheckoutSelectors\n    ): CheckoutStoreStatusSelector => {\n        const selector = {\n            isLoadingCheckout: state.checkout.isLoading,\n            isUpdatingCheckout: state.checkout.isUpdating,\n            isExecutingSpamCheck: state.checkout.isExecutingSpamCheck,\n            isSubmittingOrder: isSubmittingOrder(state),\n            isFinalizingOrder: state.paymentStrategies.isFinalizing,\n            isLoadingOrder: state.order.isLoading,\n            isLoadingCart: state.cart.isLoading,\n            isLoadingBillingCountries: state.countries.isLoading,\n            isLoadingShippingCountries: state.shippingCountries.isLoading,\n            isLoadingPaymentMethods: state.paymentMethods.isLoading,\n            isLoadingPaymentMethod: state.paymentMethods.isLoadingMethod,\n            isInitializingPayment: state.paymentStrategies.isInitializing,\n            isSigningIn: state.customerStrategies.isSigningIn,\n            isSigningOut: state.customerStrategies.isSigningOut,\n            isInitializingCustomer: state.customerStrategies.isInitializing,\n            isLoadingShippingOptions: state.consignments.isLoadingShippingOptions,\n            isSelectingShippingOption: isSelectingShippingOption(state),\n            isUpdatingBillingAddress: state.billingAddress.isUpdating,\n            isUpdatingSubscriptions: state.subscriptions.isUpdating,\n            isCreatingCustomerAccount: state.customer.isCreatingCustomerAccount,\n            isCreatingCustomerAddress: state.customer.isCreatingCustomerAddress,\n            isContinuingAsGuest: state.billingAddress.isContinuingAsGuest,\n            isUpdatingShippingAddress: state.shippingStrategies.isUpdatingAddress,\n            isUpdatingConsignment: state.consignments.isUpdating,\n            isDeletingConsignment: state.consignments.isDeleting,\n            isCreatingConsignments: state.consignments.isCreating,\n            isInitializingShipping: state.shippingStrategies.isInitializing,\n            isApplyingStoreCredit: state.storeCredit.isApplying,\n            isApplyingCoupon: state.coupons.isApplying,\n            isRemovingCoupon: state.coupons.isRemoving,\n            isApplyingGiftCertificate: state.giftCertificates.isApplying,\n            isRemovingGiftCertificate: state.giftCertificates.isRemoving,\n            isLoadingInstruments: state.instruments.isLoading,\n            isDeletingInstrument: state.instruments.isDeleting,\n            isLoadingConfig: state.config.isLoading,\n            isSendingSignInEmail: state.signInEmail.isSending,\n            isCustomerStepPending: isCustomerStepPending(state),\n            isShippingStepPending: isShippingStepPending(state),\n            isPaymentStepPending: isPaymentStepPending(state),\n        };\n\n        return {\n            isPending: isPending(selector),\n            ...selector,\n        };\n    });\n}\n","import { toSingleLine } from '../utility';\n\nexport default class ErrorMessageTransformer<TError extends Error = Error> {\n    constructor(\n        private _messageCustomizer: (type: TError) => string\n    ) {}\n\n    transform(error: TError): TError {\n        error.message = toSingleLine(this._messageCustomizer(error));\n\n        return error;\n    }\n}\n","export default function toSingleLine(input?: string) {\n    if (!input) {\n        return '';\n    }\n\n    return input.split(/(?:\\r\\n|\\n|\\r)/)\n        .map(line => line.replace(/^\\s+/gm, ''))\n        .join(' ')\n        .trim();\n}\n","import { Action, ThunkAction } from '@bigcommerce/data-store';\nimport { Observable } from 'rxjs';\n\nimport { AddressRequestBody } from '../address';\nimport { BillingAddressActionCreator, BillingAddressRequestBody } from '../billing';\nimport { createDataStoreProjection, DataStoreProjection } from '../common/data-store';\nimport { ErrorActionCreator, ErrorMessageTransformer } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\nimport { bindDecorator as bind } from '../common/utility';\nimport { ConfigActionCreator } from '../config';\nimport { CouponActionCreator, GiftCertificateActionCreator } from '../coupon';\nimport { CustomerAccountRequestBody, CustomerActionCreator, CustomerAddressRequestBody, CustomerCredentials, CustomerInitializeOptions, CustomerRequestOptions, CustomerStrategyActionCreator, GuestCredentials } from '../customer';\nimport { FormFieldsActionCreator } from '../form';\nimport { CountryActionCreator } from '../geography';\nimport { OrderActionCreator, OrderRequestBody } from '../order';\nimport { PaymentInitializeOptions, PaymentMethodActionCreator, PaymentRequestOptions, PaymentStrategyActionCreator } from '../payment';\nimport { InstrumentActionCreator } from '../payment/instrument';\nimport { ConsignmentsRequestBody, ConsignmentActionCreator, ConsignmentAssignmentRequestBody, ConsignmentUpdateRequestBody, ShippingCountryActionCreator, ShippingInitializeOptions, ShippingRequestOptions, ShippingStrategyActionCreator } from '../shipping';\nimport { SignInEmailActionCreator, SignInEmailRequestBody } from '../signin-email';\nimport { SpamProtectionActionCreator, SpamProtectionOptions } from '../spam-protection';\nimport { StoreCreditActionCreator } from '../store-credit';\nimport { Subscriptions, SubscriptionsActionCreator } from '../subscription';\n\nimport { CheckoutRequestBody } from './checkout';\nimport CheckoutActionCreator from './checkout-action-creator';\nimport CheckoutParams from './checkout-params';\nimport CheckoutSelectors from './checkout-selectors';\nimport CheckoutStore from './checkout-store';\nimport { createCheckoutSelectorsFactory, CheckoutSelectorsFactory } from './create-checkout-selectors';\nimport createCheckoutServiceErrorTransformer from './create-checkout-service-error-transformer';\n\n/**\n * Responsible for completing the checkout process for the current customer.\n *\n * This object can be used to collect all information that is required for\n * checkout, such as shipping and billing information. It can also be used to\n * retrieve the current checkout state and subscribe to its changes.\n */\n@bind\nexport default class CheckoutService {\n    private _storeProjection: DataStoreProjection<CheckoutSelectors>;\n    private _errorTransformer: ErrorMessageTransformer;\n    private _selectorsFactory: CheckoutSelectorsFactory;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _store: CheckoutStore,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _checkoutActionCreator: CheckoutActionCreator,\n        private _configActionCreator: ConfigActionCreator,\n        private _customerActionCreator: CustomerActionCreator,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _countryActionCreator: CountryActionCreator,\n        private _couponActionCreator: CouponActionCreator,\n        private _customerStrategyActionCreator: CustomerStrategyActionCreator,\n        private _errorActionCreator: ErrorActionCreator,\n        private _giftCertificateActionCreator: GiftCertificateActionCreator,\n        private _instrumentActionCreator: InstrumentActionCreator,\n        private _orderActionCreator: OrderActionCreator,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _paymentStrategyActionCreator: PaymentStrategyActionCreator,\n        private _shippingCountryActionCreator: ShippingCountryActionCreator,\n        private _shippingStrategyActionCreator: ShippingStrategyActionCreator,\n        private _signInEmailActionCreator: SignInEmailActionCreator,\n        private _spamProtectionActionCreator: SpamProtectionActionCreator,\n        private _storeCreditActionCreator: StoreCreditActionCreator,\n        private _subscriptionsActionCreator: SubscriptionsActionCreator,\n        private _formFieldsActionCreator: FormFieldsActionCreator\n    ) {\n        this._errorTransformer = createCheckoutServiceErrorTransformer();\n        this._selectorsFactory = createCheckoutSelectorsFactory();\n        this._storeProjection = createDataStoreProjection(this._store, this._selectorsFactory);\n    }\n\n    /**\n     * Returns a snapshot of the current checkout state.\n     *\n     * The method returns a new instance every time there is a change in the\n     * checkout state. You can query the state by calling any of its getter\n     * methods.\n     *\n     * ```js\n     * const state = service.getState();\n     *\n     * console.log(state.data.getOrder());\n     * console.log(state.errors.getSubmitOrderError());\n     * console.log(state.statuses.isSubmittingOrder());\n     * ```\n     *\n     * @returns The current customer's checkout state\n     */\n    getState(): CheckoutSelectors {\n        return this._storeProjection.getState();\n    }\n\n    /**\n     * Notifies all subscribers with the current state.\n     *\n     * When this method gets called, the subscribers get called regardless if\n     * they have any filters applied.\n     */\n    notifyState(): void {\n        this._storeProjection.notifyState();\n    }\n\n    /**\n     * Subscribes to any changes to the current state.\n     *\n     * The method registers a callback function and executes it every time there\n     * is a change in the checkout state.\n     *\n     * ```js\n     * service.subscribe(state => {\n     *     console.log(state.data.getCart());\n     * });\n     * ```\n     *\n     * The method can be configured to notify subscribers only regarding\n     * relevant changes, by providing a filter function.\n     *\n     * ```js\n     * const filter = state => state.data.getCart();\n     *\n     * // Only trigger the subscriber when the cart changes.\n     * service.subscribe(state => {\n     *     console.log(state.data.getCart())\n     * }, filter);\n     * ```\n     *\n     * @param subscriber - The function to subscribe to state changes.\n     * @param filters - One or more functions to filter out irrelevant state\n     * changes. If more than one function is provided, the subscriber will only\n     * be triggered if all conditions are met.\n     * @returns A function, if called, will unsubscribe the subscriber.\n     */\n    subscribe(\n        subscriber: (state: CheckoutSelectors) => void,\n        ...filters: Array<(state: CheckoutSelectors) => any>\n    ): () => void {\n        return this._storeProjection.subscribe(subscriber, ...filters);\n    }\n\n    /**\n     * Loads the current checkout.\n     *\n     * This method can only be called if there is an active checkout. Also, it\n     * can only retrieve data that belongs to the current customer. When it is\n     * successfully executed, you can retrieve the data by calling\n     * `CheckoutStoreSelector#getCheckout`.\n     *\n     * ```js\n     * const state = await service.loadCheckout('0cfd6c06-57c3-4e29-8d7a-de55cc8a9052');\n     *\n     * console.log(state.data.getCheckout());\n     * ```\n     *\n     * @param id - The identifier of the checkout to load, or the default checkout if not provided.\n     * @param options - Options for loading the current checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    loadCheckout(id?: string, options?: RequestOptions<CheckoutParams>): Promise<CheckoutSelectors> {\n        return this._dispatch(id ?\n            this._checkoutActionCreator.loadCheckout(id, options) :\n            this._checkoutActionCreator.loadDefaultCheckout(options)\n        );\n    }\n\n    /**\n     * Updates specific properties of the current checkout.\n     *\n     * ```js\n     * const state = await service.updateCheckout(checkout);\n     *\n     * console.log(state.data.getCheckout());\n     * ```\n     *\n     * @param payload - The checkout properties to be updated.\n     * @param options - Options for loading the current checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    updateCheckout(payload: CheckoutRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._checkoutActionCreator.updateCheckout(payload, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Loads an order by an id.\n     *\n     * The method can only retrieve an order if the order belongs to the current\n     * customer. If it is successfully executed, the data can be retrieved by\n     * calling `CheckoutStoreSelector#getOrder`.\n     *\n     * ```js\n     * const state = await service.loadOrder(123);\n     *\n     * console.log(state.data.getOrder());\n     * ```\n     *\n     * @param orderId - The identifier of the order to load.\n     * @param options - Options for loading the order.\n     * @returns A promise that resolves to the current state.\n     */\n    loadOrder(orderId: number, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const loadCheckoutAction = this._orderActionCreator.loadOrder(orderId, options);\n        const formFieldsAction = this._formFieldsActionCreator.loadFormFields(options);\n        const loadConfigAction = this._configActionCreator.loadConfig(options);\n\n        return Promise.all([\n            this._dispatch(loadCheckoutAction),\n            this._dispatch(loadConfigAction, { queueId: 'config' }),\n            this._dispatch(formFieldsAction, { queueId: 'formFields' }),\n        ])\n            .then(() => this.getState());\n    }\n\n    /**\n     * Submits an order, thereby completing a checkout process.\n     *\n     * Before you can submit an order, you must initialize the payment method\n     * chosen by the customer by calling `CheckoutService#initializePayment`.\n     *\n     * ```js\n     * await service.initializePayment({ methodId: 'braintree' });\n     * await service.submitOrder({\n     *     payment: {\n     *         methodId: 'braintree',\n     *         paymentData: {\n     *             ccExpiry: { month: 10, year: 20 },\n     *             ccName: 'BigCommerce',\n     *             ccNumber: '4111111111111111',\n     *             ccCvv: 123,\n     *         },\n     *     },\n     * });\n     * ```\n     *\n     * You are not required to include `paymentData` if the order does not\n     * require additional payment details. For example, the customer has already\n     * entered their payment details on the cart page using one of the hosted\n     * payment methods, such as PayPal. Or the customer has applied a gift\n     * certificate that exceeds the grand total amount.\n     *\n     * If the order is submitted successfully, you can retrieve the newly\n     * created order by calling `CheckoutStoreSelector#getOrder`.\n     *\n     * ```js\n     * const state = await service.submitOrder(payload);\n     *\n     * console.log(state.data.getOrder());\n     * ```\n     *\n     * @param payload - The request payload to submit for the current order.\n     * @param options - Options for submitting the current order.\n     * @returns A promise that resolves to the current state.\n     */\n    submitOrder(payload: OrderRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.execute(payload, options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Finalizes the submission process for an order.\n     *\n     * This method is only required for certain hosted payment methods that\n     * require a customer to enter their credit card details on their website.\n     * You need to call this method once the customer has redirected back to\n     * checkout in order to complete the checkout process.\n     *\n     * If the method is called before order finalization is required or for a\n     * payment method that does not require order finalization, an error will be\n     * thrown. Conversely, if the method is called successfully, you should\n     * immediately redirect the customer to the order confirmation page.\n     *\n     * ```js\n     * try {\n     *     await service.finalizeOrderIfNeeded();\n     *\n     *     window.location.assign('/order-confirmation');\n     * } catch (error) {\n     *     if (error.type !== 'order_finalization_not_required') {\n     *         throw error;\n     *     }\n     * }\n     * ```\n     *\n     * @param options - Options for finalizing the current order.\n     * @returns A promise that resolves to the current state.\n     * @throws `OrderFinalizationNotRequiredError` error if order finalization\n     * is not required for the current order at the time of execution.\n     */\n    finalizeOrderIfNeeded(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.finalize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Loads a list of payment methods available for checkout.\n     *\n     * If a customer enters their payment details before navigating to the\n     * checkout page (i.e.: using PayPal checkout button on the cart page), only\n     * one payment method will be available for the customer - the selected\n     * payment method. Otherwise, by default, all payment methods configured by\n     * the merchant will be available for the customer.\n     *\n     * Once the method is executed successfully, you can call\n     * `CheckoutStoreSelector#getPaymentMethods` to retrieve the list of payment\n     * methods.\n     *\n     * ```js\n     * const state = service.loadPaymentMethods();\n     *\n     * console.log(state.data.getPaymentMethods());\n     * ```\n     *\n     * @param options - Options for loading the payment methods that are\n     * available to the current customer.\n     * @returns A promise that resolves to the current state.\n     */\n    loadPaymentMethods(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentMethodActionCreator.loadPaymentMethods(options);\n\n        return this._dispatch(action, { queueId: 'paymentMethods' });\n    }\n\n    /**\n     * Loads a payment method by an id.\n     *\n     * This method does not work with multi-option payment providers. Due to its\n     * limitation, it is deprecated and will be removed in the future.\n     *\n     * @deprecated\n     * @internal\n     * @param methodId - The identifier for the payment method to load.\n     * @param options - Options for loading the payment method.\n     * @returns A promise that resolves to the current state.\n     */\n    loadPaymentMethod(methodId: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentMethodActionCreator.loadPaymentMethod(methodId, options);\n\n        return this._dispatch(action, { queueId: 'paymentMethods' });\n    }\n\n    /**\n     * Initializes the payment step of a checkout process.\n     *\n     * Before a payment method can accept payment details, it must first be\n     * initialized. Some payment methods require you to provide additional\n     * initialization options. For example, Amazon requires a container ID in\n     * order to initialize their payment widget.\n     *\n     * ```js\n     * await service.initializePayment({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'walletWidget',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the payment step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializePayment(options: PaymentInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * De-initializes the payment step of a checkout process.\n     *\n     * The method should be called once you no longer require a payment method\n     * to be initialized. It can perform any necessary clean-up behind the\n     * scene, i.e.: remove DOM nodes or event handlers that are attached as a\n     * result of payment initialization.\n     *\n     * ```js\n     * await service.deinitializePayment({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the payment step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializePayment(options: PaymentRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._paymentStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'paymentStrategy' });\n    }\n\n    /**\n     * Loads a list of countries available for billing.\n     *\n     * Once you make a successful request, you will be able to retrieve the list\n     * of countries by calling `CheckoutStoreSelector#getBillingCountries`.\n     *\n     * ```js\n     * const state = await service.loadBillingCountries();\n     *\n     * console.log(state.data.getBillingCountries());\n     * ```\n     *\n     * @param options - Options for loading the available billing countries.\n     * @returns A promise that resolves to the current state.\n     */\n    loadBillingCountries(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._countryActionCreator.loadCountries(options);\n\n        return this._dispatch(action, { queueId: 'billingCountries' });\n    }\n\n    /**\n     * Loads a list of countries available for shipping.\n     *\n     * The list is determined based on the shipping zones configured by a\n     * merchant. Once you make a successful call, you will be able to retrieve\n     * the list of available shipping countries by calling\n     * `CheckoutStoreSelector#getShippingCountries`.\n     *\n     * ```js\n     * const state = await service.loadShippingCountries();\n     *\n     * console.log(state.data.getShippingCountries());\n     * ```\n     *\n     * @param options - Options for loading the available shipping countries.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingCountries(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingCountryActionCreator.loadCountries(options);\n\n        return this._dispatch(action, { queueId: 'shippingCountries' });\n    }\n\n    /**\n     * Loads a set of form fields that should be presented to customers in order\n     * to capture their billing address.\n     *\n     * Once the method has been executed successfully, you can call\n     * `CheckoutStoreSelector#getBillingAddressFields` to retrieve the set of\n     * form fields.\n     *\n     * ```js\n     * const state = service.loadBillingAddressFields();\n     *\n     * console.log(state.data.getBillingAddressFields('US'));\n     * ```\n     *\n     * @param options - Options for loading the billing address form fields.\n     * @returns A promise that resolves to the current state.\n     */\n    loadBillingAddressFields(options?: RequestOptions): Promise<CheckoutSelectors> {\n        return this.loadBillingCountries(options);\n    }\n\n    /**\n     * Loads a set of form fields that should be presented to customers in order\n     * to capture their shipping address.\n     *\n     * Once the method has been executed successfully, you can call\n     * `CheckoutStoreSelector#getShippingAddressFields` to retrieve the set of\n     * form fields.\n     *\n     * ```js\n     * const state = service.loadShippingAddressFields();\n     *\n     * console.log(state.data.getShippingAddressFields('US'));\n     * ```\n     *\n     * @param options - Options for loading the shipping address form fields.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingAddressFields(options?: RequestOptions): Promise<CheckoutSelectors> {\n        return this.loadShippingCountries(options);\n    }\n\n    /**\n     * Initializes the sign-in step of a checkout process.\n     *\n     * Some payment methods, such as Amazon, have their own sign-in flow. In\n     * order to support them, this method must be called.\n     *\n     * ```js\n     * await service.initializeCustomer({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'signInButton',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the customer step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeCustomer(options?: CustomerInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * De-initializes the sign-in step of a checkout process.\n     *\n     * It should be called once you no longer want to prompt customers to sign\n     * in. It can perform any necessary clean-up behind the scene, i.e.: remove\n     * DOM nodes or event handlers that are attached as a result of customer\n     * initialization.\n     *\n     * ```js\n     * await service.deinitializeCustomer({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the customer step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeCustomer(options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Sends a email that contains a single-use sign-in link. When a valid links is clicked,\n     * signs in the customer without requiring any password, redirecting them to the account page if no redirectUrl is provided.\n     *\n     *\n     * ```js\n     * checkoutService.sendSignInEmail({ email: 'foo@bar.com', redirectUrl: 'checkout' });\n     * ```\n     *\n     * @param signInEmailRequest - The sign-in email request values.\n     * @param options - Options for the send email request.\n     * @returns A promise that resolves to the current state.\n     */\n    sendSignInEmail(signInEmailRequest: SignInEmailRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._signInEmailActionCreator.sendSignInEmail(signInEmailRequest, options);\n\n        return this._dispatch(action, { queueId: 'signInEmail' });\n    }\n\n    /**\n     * Creates a customer account.\n     *\n     * @remarks\n     * ```js\n     * checkoutService.createCustomerAccount({\n     *   email: 'foo@bar.com',\n     *   firstName: 'Foo',\n     *   lastName: 'Bar',\n     *   password: 'password',\n     *   acceptsMarketingEmails: true,\n     *   customFields: [],\n     * });\n     * ```\n     * Please note that `createCustomerAccount` is currently in an early stage\n     * of development. Therefore the API is unstable and not ready for public\n     * consumption.\n     *\n     * @alpha\n     * @param customerAccount - The customer account data.\n     * @param options - Options for creating customer account.\n     * @returns A promise that resolves to the current state.\n     */\n    createCustomerAccount(customerAccount: CustomerAccountRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerActionCreator.createCustomer(customerAccount, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Creates a customer account address.\n     *\n     * @remarks\n     * ```js\n     * checkoutService.createCustomerAddress({\n     *   firstName: 'Foo',\n     *   lastName: 'Bar',\n     *   address1: '55 Market St',\n     *   stateOrProvinceCode: 'CA',\n     *   countryCode: 'US',\n     *   postalCode: '90110'\n     *   customFields: [],\n     * });\n     * ```\n     * Please note that `createCustomerAccountAddress` is currently in an early stage\n     * of development. Therefore the API is unstable and not ready for public\n     * consumption.\n     *\n     * @alpha\n     * @param customerAddress - The customer account data.\n     * @param options - Options for creating customer account.\n     * @returns A promise that resolves to the current state.\n     */\n    createCustomerAddress(customerAddress: CustomerAddressRequestBody, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerActionCreator.createAddress(customerAddress, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Updates the subscriptions associated to an email.\n     *\n     * @param subscriptions - The email and associated subscriptions to update.\n     * @param options - Options for continuing as a guest.\n     * @returns A promise that resolves to the current state.\n     */\n    updateSubscriptions(subscriptions: Subscriptions, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._subscriptionsActionCreator.updateSubscriptions(subscriptions, options);\n\n        return this._dispatch(action, { queueId: 'subscriptions' });\n    }\n\n    /**\n     * Continues to check out as a guest.\n     *\n     * If your Checkout Settings allow it, your customers could continue the checkout as guests (without signing in).\n     * If you have enabled the checkout setting \"Prompt existing accounts to sign in\", this information is\n     * exposed as part of the [Customer](../interfaces/customer.md) object.\n     *\n     * Once they provide their email address, it will be stored as\n     * part of their [billing address](../interfaces/billingaddress.md).\n     *\n     * @param credentials - The guest credentials to use, with optional subscriptions.\n     * @param options - Options for continuing as a guest.\n     * @returns A promise that resolves to the current state.\n     */\n    continueAsGuest(credentials: GuestCredentials, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._billingAddressActionCreator.continueAsGuest(credentials, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Signs into a customer's registered account.\n     *\n     * Once the customer is signed in successfully, the checkout state will be\n     * populated with information associated with the customer, such as their\n     * saved addresses. You can call `CheckoutStoreSelector#getCustomer` to\n     * retrieve the data.\n     *\n     * ```js\n     * const state = await service.signInCustomer({\n     *     email: 'foo@bar.com',\n     *     password: 'password123',\n     * });\n     *\n     * console.log(state.data.getCustomer());\n     * ```\n     *\n     * @param credentials - The credentials to be used for signing in the customer.\n     * @param options - Options for signing in the customer.\n     * @returns A promise that resolves to the current state.\n     */\n    signInCustomer(credentials: CustomerCredentials, options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.signIn(credentials, options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Signs out the current customer if they are previously signed in.\n     *\n     * Once the customer is successfully signed out, the checkout state will be\n     * reset automatically.\n     *\n     * ```js\n     * const state = await service.signOutCustomer();\n     *\n     * // The returned object should not contain information about the previously signed-in customer.\n     * console.log(state.data.getCustomer());\n     * ```\n     *\n     * When a store has \"Allow customers to access their cart across multiple devices\" enabled, signing out\n     * will remove the cart/checkout data from the current session. An error with type=\"checkout_not_available\" will be thrown.\n     *\n     * ```js\n     * try {\n     *   await service.signOutCustomer();\n     * } catch (error) {\n     *   if (error.type === 'checkout_not_available') {\n     *     window.top.location.assign('/');\n     *   }\n     * }\n     * ```\n     *\n     * @param options - Options for signing out the customer.\n     * @returns A promise that resolves to the current state.\n     */\n    signOutCustomer(options?: CustomerRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._customerStrategyActionCreator.signOut(options);\n\n        return this._dispatch(action, { queueId: 'customerStrategy' });\n    }\n\n    /**\n     * Loads a list of shipping options available for checkout.\n     *\n     * Available shipping options can only be determined once a customer\n     * provides their shipping address. If the method is executed successfully,\n     * `CheckoutStoreSelector#getShippingOptions` can be called to retrieve the\n     * list of shipping options.\n     *\n     * ```js\n     * const state = await service.loadShippingOptions();\n     *\n     * console.log(state.data.getShippingOptions());\n     * ```\n     *\n     * @param options - Options for loading the available shipping options.\n     * @returns A promise that resolves to the current state.\n     */\n    loadShippingOptions(options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.loadShippingOptions(options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Initializes the shipping step of a checkout process.\n     *\n     * Some payment methods, such as Amazon, can provide shipping information to\n     * be used for checkout. In order to support them, this method must be\n     * called.\n     *\n     * ```js\n     * await service.initializeShipping({\n     *     methodId: 'amazon',\n     *     amazon: {\n     *         container: 'addressBook',\n     *     },\n     * });\n     * ```\n     *\n     * @param options - Options for initializing the shipping step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    initializeShipping(options?: ShippingInitializeOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * De-initializes the shipping step of a checkout process.\n     *\n     * It should be called once you no longer need to collect shipping details.\n     * It can perform any necessary clean-up behind the scene, i.e.: remove DOM\n     * nodes or event handlers that are attached as a result of shipping\n     * initialization.\n     *\n     * ```js\n     * await service.deinitializeShipping({\n     *     methodId: 'amazon',\n     * });\n     * ```\n     *\n     * @param options - Options for deinitializing the shipping step of checkout.\n     * @returns A promise that resolves to the current state.\n     */\n    deinitializeShipping(options?: ShippingRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.deinitialize(options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Selects a shipping option for the current address.\n     *\n     * If a shipping option has an additional cost, the quote for the current\n     * order will be adjusted once the option is selected.\n     *\n     * ```js\n     * const state = await service.selectShippingOption('address-id', 'shipping-option-id');\n     *\n     * console.log(state.data.getSelectedShippingOption());\n     * ```\n     *\n     * @param shippingOptionId - The identifier of the shipping option to\n     * select.\n     * @param options - Options for selecting the shipping option.\n     * @returns A promise that resolves to the current state.\n     */\n    selectShippingOption(shippingOptionId: string, options?: ShippingRequestOptions): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.selectOption(shippingOptionId, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates the shipping address for the current checkout.\n     *\n     * When a customer updates their shipping address for an order, they will\n     * see an updated list of shipping options and the cost for each option,\n     * unless no options are available. If the update is successful, you can\n     * call `CheckoutStoreSelector#getShippingAddress` to retrieve the address.\n     *\n     * If the shipping address changes and the selected shipping option becomes\n     * unavailable for the updated address, the shipping option will be\n     * deselected.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateShippingAddress(address);\n     *\n     * console.log(state.data.getShippingAddress());\n     * ```\n     *\n     * @param address - The address to be used for shipping.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateShippingAddress(\n        address: Partial<AddressRequestBody>,\n        options?: ShippingRequestOptions<CheckoutParams>\n    ): Promise<CheckoutSelectors> {\n        const action = this._shippingStrategyActionCreator.updateAddress(address, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Creates consignments given a list.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#updateShippingAddress`.\n     *\n     * When consignments are created, an updated list of shipping options will\n     * become available for each consignment, unless no options are available.\n     * If the update is successful, you can call\n     * `CheckoutStoreSelector#getConsignments` to retrieve the updated list of\n     * consignments.'\n     *\n     * Beware that if a consignment includes all line items from another\n     * consignment, that consignment will be deleted as a valid consignment must\n     * include at least one valid line item.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.createConsignments(consignments);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignments - The list of consignments to be created.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    createConsignments(\n        consignments: ConsignmentsRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.createConsignments(consignments, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Deletes a consignment\n     *\n     * ```js\n     * const state = await service.deleteConsignment('55c96cda6f04c');\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignmentId - The ID of the consignment to be deleted\n     * @param options - Options for the consignment delete request\n     * @returns A promise that resolves to the current state.\n     */\n    deleteConsignment(\n        consignmentId: string,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.deleteConsignment(consignmentId, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates a specific consignment.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#selectShippingOption`.\n     *\n     * When a shipping address for a consignment is updated, an updated list of\n     * shipping options will become available for the consignment, unless no\n     * options are available. If the update is successful, you can call\n     * `CheckoutStoreSelector#getConsignments` to retrieve updated list of\n     * consignments.\n     *\n     * Beware that if the updated consignment includes all line items from another\n     * consignment, that consignment will be deleted as a valid consignment must\n     * include at least one valid line item.\n     *\n     * If the shipping address changes and the selected shipping option becomes\n     * unavailable for the updated address, the shipping option will be\n     * deselected.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateConsignment(consignment);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for updating the shipping address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateConsignment(\n        consignment: ConsignmentUpdateRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.updateConsignment(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Convenience method that assigns items to be shipped to a specific address.\n     *\n     * Note: this method finds an existing consignment that matches the provided address\n     * and assigns the provided items. If no consignment matches the address, a new one\n     * will be created.\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for the request\n     * @returns A promise that resolves to the current state.\n     */\n    assignItemsToAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.assignItemsByAddress(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Convenience method that unassigns items from a specific shipping address.\n     *\n     * Note: this method finds an existing consignment that matches the provided address\n     * and unassigns the specified items. If the consignment ends up with no line items\n     * after the unassignment, it will be deleted.\n     *\n     * @param consignment - The consignment data that will be used.\n     * @param options - Options for the request\n     * @returns A promise that resolves to the current state.\n     */\n    unassignItemsToAddress(\n        consignment: ConsignmentAssignmentRequestBody,\n        options?: RequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.unassignItemsByAddress(consignment, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Selects a shipping option for a given consignment.\n     *\n     * Note: this is used when items need to be shipped to multiple addresses,\n     * for single shipping address, use `CheckoutService#updateShippingAddress`.\n     *\n     * If a shipping option has an additional cost, the quote for the current\n     * order will be adjusted once the option is selected.\n     *\n     * ```js\n     * const state = await service.selectConsignmentShippingOption(consignmentId, optionId);\n     *\n     * console.log(state.data.getConsignments());\n     * ```\n     *\n     * @param consignmentId - The identified of the consignment to be updated.\n     * @param shippingOptionId - The identifier of the shipping option to\n     * select.\n     * @param options - Options for selecting the shipping option.\n     * @returns A promise that resolves to the current state.\n     */\n    selectConsignmentShippingOption(\n        consignmentId: string,\n        shippingOptionId: string,\n        options?: ShippingRequestOptions\n    ): Promise<CheckoutSelectors> {\n        const action = this._consignmentActionCreator.updateShippingOption({\n            id: consignmentId,\n            shippingOptionId,\n        }, options);\n\n        return this._dispatch(action, { queueId: 'shippingStrategy' });\n    }\n\n    /**\n     * Updates the billing address for the current checkout.\n     *\n     * A customer must provide their billing address before they can proceed to\n     * pay for their order.\n     *\n     * You can submit an address that is partially complete. The address does\n     * not get validated until you submit the order.\n     *\n     * ```js\n     * const state = await service.updateBillingAddress(address);\n     *\n     * console.log(state.data.getBillingAddress());\n     * ```\n     *\n     * @param address - The address to be used for billing.\n     * @param options - Options for updating the billing address.\n     * @returns A promise that resolves to the current state.\n     */\n    updateBillingAddress(address: Partial<BillingAddressRequestBody>, options: RequestOptions = {}): Promise<CheckoutSelectors> {\n        const action = this._billingAddressActionCreator.updateAddress(address, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies or removes customer's store credit code to the current checkout.\n     *\n     * Once the store credit gets applied, the outstanding balance will be adjusted accordingly.\n     *\n     * ```js\n     * const state = await service.applyStoreCredit(true);\n     *\n     * console.log(state.data.getCheckout().outstandingBalance);\n     * ```\n     *\n     * @param options - Options for applying store credit.\n     * @returns A promise that resolves to the current state.\n     */\n    applyStoreCredit(useStoreCredit: boolean, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._storeCreditActionCreator.applyStoreCredit(useStoreCredit, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies a coupon code to the current checkout.\n     *\n     * Once the coupon code gets applied, the quote for the current checkout will\n     * be adjusted accordingly. The same coupon code cannot be applied more than\n     * once.\n     *\n     * ```js\n     * await service.applyCoupon('COUPON');\n     * ```\n     *\n     * @param code - The coupon code to apply to the current checkout.\n     * @param options - Options for applying the coupon code.\n     * @returns A promise that resolves to the current state.\n     */\n    applyCoupon(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._couponActionCreator.applyCoupon(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Removes a coupon code from the current checkout.\n     *\n     * Once the coupon code gets removed, the quote for the current checkout will\n     * be adjusted accordingly.\n     *\n     * ```js\n     * await service.removeCoupon('COUPON');\n     * ```\n     *\n     * @param code - The coupon code to remove from the current checkout.\n     * @param options - Options for removing the coupon code.\n     * @returns A promise that resolves to the current state.\n     */\n    removeCoupon(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._couponActionCreator.removeCoupon(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Applies a gift certificate to the current checkout.\n     *\n     * Once the gift certificate gets applied, the quote for the current\n     * checkout will be adjusted accordingly.\n     *\n     * ```js\n     * await service.applyGiftCertificate('GIFT_CERTIFICATE');\n     * ```\n     *\n     * @param code - The gift certificate to apply to the current checkout.\n     * @param options - Options for applying the gift certificate.\n     * @returns A promise that resolves to the current state.\n     */\n    applyGiftCertificate(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._giftCertificateActionCreator.applyGiftCertificate(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Removes a gift certificate from an order.\n     *\n     * Once the gift certificate gets removed, the quote for the current\n     * checkout will be adjusted accordingly.\n     *\n     * ```js\n     * await service.removeGiftCertificate('GIFT_CERTIFICATE');\n     * ```\n     *\n     * @param code - The gift certificate to remove from the current checkout.\n     * @param options - Options for removing the gift certificate.\n     * @returns A promise that resolves to the current state.\n     */\n    removeGiftCertificate(code: string, options?: RequestOptions): Promise<CheckoutSelectors> {\n        const action = this._giftCertificateActionCreator.removeGiftCertificate(code, options);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Loads a list of payment instruments associated with a customer.\n     *\n     * Once the method has been called successfully, you can retrieve the list\n     * of payment instruments by calling `CheckoutStoreSelector#getInstruments`.\n     * If the customer does not have any payment instruments on record, i.e.:\n     * credit card, you will get an empty list instead.\n     *\n     * ```js\n     * const state = service.loadInstruments();\n     *\n     * console.log(state.data.getInstruments());\n     * ```\n     *\n     * @returns A promise that resolves to the current state.\n     */\n    loadInstruments(): Promise<CheckoutSelectors> {\n        const action = this._instrumentActionCreator.loadInstruments();\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Deletes a payment instrument by an id.\n     *\n     * Once an instrument gets removed, it can no longer be retrieved using\n     * `CheckoutStoreSelector#getInstruments`.\n     *\n     * ```js\n     * const state = service.deleteInstrument('123');\n     *\n     * console.log(state.data.getInstruments());\n     * ```\n     *\n     * @param instrumentId - The identifier of the payment instrument to delete.\n     * @returns A promise that resolves to the current state.\n     */\n    deleteInstrument(instrumentId: string): Promise<CheckoutSelectors> {\n        const action = this._instrumentActionCreator.deleteInstrument(instrumentId);\n\n        return this._dispatch(action)\n            .then(() => this.loadInstruments());\n    }\n\n    /**\n     * Clear errors that have been collected from previous calls.\n     *\n     * ```js\n     * const state = await service.clearError(error);\n     *\n     * console.log(state.errors.getError());\n     * ```\n     *\n     * @param error - Specific error object to clear\n     * @returns A promise that resolves to the current state.\n     */\n    clearError(error: Error): Promise<CheckoutSelectors> {\n        const action = this._errorActionCreator.clearError(error);\n\n        return this._dispatch(action);\n    }\n\n    /**\n     * Initializes the spam protection for order creation.\n     *\n     * Note: Use `CheckoutService#executeSpamCheck` instead.\n     * You do not need to call this method before calling\n     * `CheckoutService#executeSpamCheck`.\n     *\n     * With spam protection enabled, the customer has to be verified as\n     * a human. The order creation will fail if spam protection\n     * is enabled but verification fails.\n     *\n     * ```js\n     * await service.initializeSpamProtection();\n     * ```\n     *\n     * @param options - Options for initializing spam protection.\n     * @returns A promise that resolves to the current state.\n     * @deprecated - Use CheckoutService#executeSpamCheck instead.\n     */\n    initializeSpamProtection(options: SpamProtectionOptions): Promise<CheckoutSelectors> {\n        const action = this._spamProtectionActionCreator.initialize(options);\n\n        return this._dispatch(action, { queueId: 'spamProtection' });\n    }\n\n    /**\n     * Verifies whether the current checkout is created by a human.\n     *\n     * Note: this method will do the initialization, therefore you do not\n     * need to call `CheckoutService#initializeSpamProtection`\n     * before calling this method.\n     *\n     * With spam protection enabled, the customer has to be verified as\n     * a human. The order creation will fail if spam protection\n     * is enabled but verification fails. You should call this method before\n     * `submitOrder` method is called (i.e.: when the shopper\n     * first gets to the payment step).\n     *\n     * **Note**: You need to enable Google ReCAPTCHA bot protection in your Checkout Settings.\n     *\n     * ```js\n     * await service.executeSpamCheck();\n     * ```\n     *\n     * @returns A promise that resolves to the current state.\n     */\n    executeSpamCheck(): Promise<CheckoutSelectors> {\n        const action = this._spamProtectionActionCreator.verifyCheckoutSpamProtection();\n\n        return this._dispatch(action, { queueId: 'spamProtection' });\n    }\n\n    /**\n     * Dispatches an action through the data store and returns the current state\n     * once the action is dispatched.\n     *\n     * @param action - The action to dispatch.\n     * @returns A promise that resolves to the current state.\n     */\n    private _dispatch(action: Action | Observable<Action> | ThunkAction<Action>, options?: { queueId?: string }): Promise<CheckoutSelectors> {\n        return this._store.dispatch(action, options)\n            .then(() => this.getState())\n            .catch(error => {\n                throw this._errorTransformer.transform(error);\n            });\n    }\n}\n","import { ErrorMessageTransformer } from '../common/error';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../common/error/errors';\nimport { getEnvironment } from '../common/utility';\n\nexport type CheckoutServiceErrorType = MissingDataError | NotInitializedError;\nexport type CheckoutServiceErrorTransformer = ErrorMessageTransformer<CheckoutServiceErrorType | Error>;\n\nexport default function createCheckoutServiceErrorTransformer(\n    isDevelopment: boolean = getEnvironment() === 'development'\n): CheckoutServiceErrorTransformer {\n    return new ErrorMessageTransformer(error => {\n        if (!isDevelopment || !isCheckoutServiceError(error)) {\n            return error.message;\n        }\n\n        switch (error.subtype || error.type) {\n        case MissingDataErrorType.MissingConsignments:\n            return `\n                ${error.message}\n                The data could be unavailable because no shipping address has been provided.\n                To fix this, create a consignment or update the shipping address before performing\n                the same action again.\n            `;\n\n        case MissingDataErrorType.MissingCart:\n        case MissingDataErrorType.MissingCheckout:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you can try calling \\`CheckoutService#loadCheckout\\`\n                before performing the same action again.\n            `;\n\n        case MissingDataErrorType.MissingCheckoutConfig:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you need to make sure \\`CheckoutService\\` is initialized\n                properly by calling \\`CheckoutService#loadCheckout\\` before performing any\n                other actions.\n            `;\n\n        case MissingDataErrorType.MissingOrder:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server yet.\n                To fix this issue, you can try calling \\`CheckoutService#loadOrder\\`\n                before performing the same action again.\n            `;\n\n        case MissingDataErrorType.MissingOrderId:\n            return `\n                ${error.message}\n                The data could be unavailable because no order has been created yet. You have\n                to first create the order before you can perform the action.\n            `;\n\n        case MissingDataErrorType.MissingPaymentMethod:\n            return `\n                ${error.message}\n                The data could be unavailable because it has not loaded from the server, or\n                configured by the merchant yet. To fix the former issue, you can try calling\n                \\`CheckoutService#loadPaymentMethods\\` before performing the same action again.\n            `;\n\n        case NotInitializedErrorType.CustomerNotInitialized:\n            return `\n                In order to initialize the customer step of checkout, you need to call\n                \\`CheckoutService#initializeCustomer\\`. Afterwards, you should be able to\n                submit customer details.\n            `;\n\n        case NotInitializedErrorType.PaymentNotInitialized:\n            return `\n                ${error.message}\n                In order to initialize the payment step of checkout, you need to call\n                \\`CheckoutService#initializePayment\\`. Afterwards, you should be able to\n                submit payment details.\n            `;\n\n        case NotInitializedErrorType.ShippingNotInitialized:\n            return `\n                ${error.message}\n                In order to initialize the shipping step of checkout, you need to call\n                \\`CheckoutService#initializeShipping\\`. Afterwards, you should be able to\n                submit shipping details.\n            `;\n\n        default:\n            return error.message;\n        }\n    });\n}\n\nfunction isCheckoutServiceError(error: any): error is CheckoutServiceErrorType {\n    return !!(error.subtype || error.type);\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\nimport { createScriptLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../billing';\nimport { ErrorActionCreator } from '../common/error';\nimport { getDefaultLogger } from '../common/log';\nimport { getEnvironment } from '../common/utility';\nimport { ConfigActionCreator, ConfigRequestSender, ConfigState, ConfigWindow } from '../config';\nimport { CouponActionCreator, CouponRequestSender, GiftCertificateActionCreator, GiftCertificateRequestSender } from '../coupon';\nimport { createCustomerStrategyRegistry, CustomerActionCreator, CustomerRequestSender, CustomerStrategyActionCreator } from '../customer';\nimport { FormFieldsActionCreator, FormFieldsRequestSender } from '../form';\nimport { CountryActionCreator, CountryRequestSender } from '../geography';\nimport { OrderActionCreator, OrderRequestSender } from '../order';\nimport { createPaymentClient, createPaymentStrategyRegistry, PaymentMethodActionCreator, PaymentMethodRequestSender, PaymentStrategyActionCreator } from '../payment';\nimport { InstrumentActionCreator, InstrumentRequestSender } from '../payment/instrument';\nimport { createShippingStrategyRegistry, ConsignmentActionCreator, ConsignmentRequestSender, ShippingCountryActionCreator, ShippingCountryRequestSender, ShippingStrategyActionCreator } from '../shipping';\nimport { SignInEmailActionCreator, SignInEmailRequestSender } from '../signin-email';\nimport { createSpamProtection, SpamProtectionActionCreator, SpamProtectionRequestSender } from '../spam-protection';\nimport { StoreCreditActionCreator, StoreCreditRequestSender } from '../store-credit';\nimport { SubscriptionsActionCreator, SubscriptionsRequestSender } from '../subscription';\n\nimport CheckoutActionCreator from './checkout-action-creator';\nimport CheckoutRequestSender from './checkout-request-sender';\nimport CheckoutService from './checkout-service';\nimport CheckoutValidator from './checkout-validator';\nimport createCheckoutStore from './create-checkout-store';\n\n/**\n * Creates an instance of `CheckoutService`.\n *\n * @remarks\n * ```js\n * const service = createCheckoutService();\n *\n * service.subscribe(state => {\n *     console.log(state);\n * });\n *\n * service.loadCheckout();\n * ```\n *\n * @param options - A set of construction options.\n * @returns an instance of `CheckoutService`.\n */\nexport default function createCheckoutService(options?: CheckoutServiceOptions): CheckoutService {\n    if (document.location.protocol !== 'https:') {\n        getDefaultLogger().warn('The BigCommerce Checkout SDK should not be used on a non-HTTPS page');\n    }\n\n    if (getEnvironment() !== 'production') {\n        getDefaultLogger().warn('Note that the development build is not optimized. To create a production build, set process.env.NODE_ENV to `production`.');\n    }\n\n    const config: ConfigState = {\n        meta: {\n            externalSource: options && options.externalSource,\n            variantIdentificationToken: (window as ConfigWindow).checkoutVariantIdentificationToken,\n        },\n        errors: {},\n        statuses: {},\n    };\n    const { locale = '', shouldWarnMutation = true } = options || {};\n    const requestSender = createRequestSender({ host: options && options.host });\n    const store = createCheckoutStore({ config }, { shouldWarnMutation });\n    const paymentClient = createPaymentClient(store);\n    const orderRequestSender = new OrderRequestSender(requestSender);\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const configActionCreator = new ConfigActionCreator(new ConfigRequestSender(requestSender));\n    const spamProtection = createSpamProtection(createScriptLoader());\n    const spamProtectionRequestSender = new SpamProtectionRequestSender(requestSender);\n    const spamProtectionActionCreator = new SpamProtectionActionCreator(spamProtection, spamProtectionRequestSender);\n    const orderActionCreator = new OrderActionCreator(\n        orderRequestSender,\n        new CheckoutValidator(checkoutRequestSender)\n    );\n    const subscriptionsActionCreator = new SubscriptionsActionCreator(new SubscriptionsRequestSender(requestSender));\n    const formFieldsActionCreator = new FormFieldsActionCreator(new FormFieldsRequestSender(requestSender));\n    const checkoutActionCreator = new CheckoutActionCreator(checkoutRequestSender, configActionCreator, formFieldsActionCreator);\n\n    return new CheckoutService(\n        store,\n        new BillingAddressActionCreator(\n            new BillingAddressRequestSender(requestSender),\n            subscriptionsActionCreator\n        ),\n        checkoutActionCreator,\n        configActionCreator,\n        new CustomerActionCreator(\n            new CustomerRequestSender(requestSender),\n            checkoutActionCreator,\n            spamProtectionActionCreator\n        ),\n        new ConsignmentActionCreator(new ConsignmentRequestSender(requestSender), checkoutRequestSender),\n        new CountryActionCreator(new CountryRequestSender(requestSender, { locale })),\n        new CouponActionCreator(new CouponRequestSender(requestSender)),\n        new CustomerStrategyActionCreator(createCustomerStrategyRegistry(store, requestSender)),\n        new ErrorActionCreator(),\n        new GiftCertificateActionCreator(new GiftCertificateRequestSender(requestSender)),\n        new InstrumentActionCreator(new InstrumentRequestSender(paymentClient, requestSender)),\n        orderActionCreator,\n        new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n        new PaymentStrategyActionCreator(\n            createPaymentStrategyRegistry(store, paymentClient, requestSender, spamProtection, locale),\n            orderActionCreator,\n            spamProtectionActionCreator\n        ),\n        new ShippingCountryActionCreator(new ShippingCountryRequestSender(requestSender, { locale })),\n        new ShippingStrategyActionCreator(createShippingStrategyRegistry(store, requestSender)),\n        new SignInEmailActionCreator(new SignInEmailRequestSender(requestSender)),\n        spamProtectionActionCreator,\n        new StoreCreditActionCreator(new StoreCreditRequestSender(requestSender)),\n        subscriptionsActionCreator,\n        formFieldsActionCreator\n    );\n}\n\nexport interface CheckoutServiceOptions {\n    locale?: string;\n    host?: string;\n    shouldWarnMutation?: boolean;\n    externalSource?: string;\n}\n","// tslint:disable-next-line:no-reference\n/// <reference path=\"../payment/bigpay-client.d.ts\" />\nimport { createClient as createBigpayClient } from '@bigcommerce/bigpay-client';\n\nimport { CheckoutStore } from '../checkout';\n\nexport default function createPaymentClient(store: CheckoutStore) {\n    const paymentClient = createBigpayClient();\n\n    store.subscribe(\n        state => {\n            const config = state.config.getStoreConfig();\n\n            if (config) {\n                paymentClient.setHost(config.paymentSettings.bigpayBaseUrl);\n            }\n        },\n        state => state.config.getStoreConfig()\n    );\n\n    return paymentClient;\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { FormFieldsActionCreator, FormFieldsRequestSender } from '../form';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\nimport { AmazonPayScriptLoader } from '../payment/strategies/amazon-pay';\nimport { createAmazonPayV2PaymentProcessor } from '../payment/strategies/amazon-pay-v2';\nimport { createBraintreeVisaCheckoutPaymentProcessor, BraintreeScriptLoader, BraintreeSDKCreator, VisaCheckoutScriptLoader } from '../payment/strategies/braintree';\nimport { ChasePayScriptLoader } from '../payment/strategies/chasepay';\nimport { createGooglePayPaymentProcessor, GooglePayAdyenV2Initializer, GooglePayAuthorizeNetInitializer, GooglePayBraintreeInitializer, GooglePayCheckoutcomInitializer, GooglePayCybersourceV2Initializer, GooglePayStripeInitializer } from '../payment/strategies/googlepay';\nimport { MasterpassScriptLoader } from '../payment/strategies/masterpass';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\nimport { createSpamProtection, SpamProtectionActionCreator, SpamProtectionRequestSender } from '../spam-protection';\n\nimport CustomerActionCreator from './customer-action-creator';\nimport CustomerRequestSender from './customer-request-sender';\nimport CustomerStrategyActionCreator from './customer-strategy-action-creator';\nimport { CustomerStrategy } from './strategies';\nimport { AmazonPayCustomerStrategy } from './strategies/amazon';\nimport { AmazonPayV2CustomerStrategy } from './strategies/amazon-pay-v2';\nimport { BraintreeVisaCheckoutCustomerStrategy } from './strategies/braintree';\nimport { ChasePayCustomerStrategy } from './strategies/chasepay';\nimport { DefaultCustomerStrategy } from './strategies/default';\nimport { GooglePayCustomerStrategy } from './strategies/googlepay';\nimport { MasterpassCustomerStrategy } from './strategies/masterpass';\nimport { SquareCustomerStrategy } from './strategies/square';\n\nexport default function createCustomerStrategyRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<CustomerStrategy> {\n    const registry = new Registry<CustomerStrategy>();\n    const scriptLoader = getScriptLoader();\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const checkoutActionCreator = new CheckoutActionCreator(\n        checkoutRequestSender,\n        new ConfigActionCreator(new ConfigRequestSender(requestSender)),\n        new FormFieldsActionCreator(new FormFieldsRequestSender(requestSender))\n    );\n    const formPoster = createFormPoster();\n    const paymentMethodActionCreator = new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender));\n    const remoteCheckoutRequestSender = new RemoteCheckoutRequestSender(requestSender);\n    const remoteCheckoutActionCreator = new RemoteCheckoutActionCreator(remoteCheckoutRequestSender);\n\n    registry.register('googlepayadyenv2', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayAdyenV2Initializer()\n            ),\n            formPoster\n        )\n    );\n\n    registry.register('amazon', () =>\n        new AmazonPayCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            remoteCheckoutRequestSender,\n            new AmazonPayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('amazonpay', () =>\n        new AmazonPayV2CustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            createAmazonPayV2PaymentProcessor()\n        )\n    );\n\n    registry.register('braintreevisacheckout', () =>\n        new BraintreeVisaCheckoutCustomerStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            new CustomerStrategyActionCreator(registry),\n            remoteCheckoutActionCreator,\n            createBraintreeVisaCheckoutPaymentProcessor(scriptLoader, requestSender),\n            new VisaCheckoutScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('chasepay', () =>\n        new ChasePayCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new ChasePayScriptLoader(scriptLoader),\n            requestSender,\n            formPoster\n        )\n    );\n\n    registry.register('squarev2', () =>\n        new SquareCustomerStrategy(\n            store,\n            new RemoteCheckoutActionCreator(remoteCheckoutRequestSender)\n        )\n    );\n\n    registry.register('masterpass', () =>\n        new MasterpassCustomerStrategy(\n            store,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register('googlepayauthorizenet', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayAuthorizeNetInitializer()\n            ),\n            formPoster\n        )\n    );\n\n    registry.register('googlepaybraintree', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            ),\n            formPoster\n        )\n    );\n\n    registry.register('googlepaycheckoutcom', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayCheckoutcomInitializer(requestSender)\n            ),\n            formPoster\n        )\n    );\n\n    registry.register('googlepaycybersourcev2', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayCybersourceV2Initializer()\n            ),\n            formPoster\n        )\n    );\n\n    registry.register('googlepaystripe', () =>\n        new GooglePayCustomerStrategy(\n            store,\n            remoteCheckoutActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            ),\n            formPoster\n        )\n    );\n\n    registry.register('default', () =>\n        new DefaultCustomerStrategy(\n            store,\n            new CustomerActionCreator(\n                new CustomerRequestSender(requestSender),\n                checkoutActionCreator,\n                new SpamProtectionActionCreator(\n                    createSpamProtection(scriptLoader),\n                    new SpamProtectionRequestSender(requestSender)\n                )\n            )\n        )\n    );\n\n    return registry;\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { RequestSender } from '@bigcommerce/request-sender';\nimport { createScriptLoader, getScriptLoader, getStylesheetLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../billing';\nimport { CheckoutActionCreator, CheckoutRequestSender, CheckoutStore, CheckoutValidator } from '../checkout';\nimport { LoadingIndicator } from '../common/loading-indicator';\nimport { ConfigActionCreator, ConfigRequestSender } from '../config';\nimport { FormFieldsActionCreator, FormFieldsRequestSender } from '../form';\nimport { HostedFormFactory } from '../hosted-form';\nimport { OrderActionCreator, OrderRequestSender } from '../order';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\nimport { createSpamProtection, GoogleRecaptcha, PaymentHumanVerificationHandler, SpamProtectionActionCreator, SpamProtectionRequestSender } from '../spam-protection';\nimport { StoreCreditActionCreator, StoreCreditRequestSender } from '../store-credit';\nimport { SubscriptionsActionCreator, SubscriptionsRequestSender } from '../subscription';\n\nimport PaymentActionCreator from './payment-action-creator';\nimport PaymentMethodActionCreator from './payment-method-action-creator';\nimport PaymentMethodRequestSender from './payment-method-request-sender';\nimport PaymentRequestSender from './payment-request-sender';\nimport PaymentRequestTransformer from './payment-request-transformer';\nimport PaymentStrategyActionCreator from './payment-strategy-action-creator';\nimport PaymentStrategyRegistry from './payment-strategy-registry';\nimport PaymentStrategyType from './payment-strategy-type';\nimport { AdyenV2PaymentStrategy, AdyenV2ScriptLoader } from './strategies/adyenv2';\nimport { AffirmPaymentStrategy, AffirmScriptLoader } from './strategies/affirm';\nimport { AfterpayPaymentStrategy, AfterpayScriptLoader } from './strategies/afterpay';\nimport { AmazonPayPaymentStrategy, AmazonPayScriptLoader } from './strategies/amazon-pay';\nimport { createAmazonPayV2PaymentProcessor, AmazonPayV2PaymentStrategy } from './strategies/amazon-pay-v2';\nimport { BarclaysPaymentStrategy } from './strategies/barclays';\nimport { BlueSnapV2PaymentStrategy } from './strategies/bluesnapv2';\nimport { BoltPaymentStrategy, BoltScriptLoader } from './strategies/bolt';\nimport { createBraintreePaymentProcessor, createBraintreeVisaCheckoutPaymentProcessor, BraintreeCreditCardPaymentStrategy, BraintreePaypalPaymentStrategy, BraintreeScriptLoader, BraintreeSDKCreator, BraintreeVisaCheckoutPaymentStrategy, VisaCheckoutScriptLoader } from './strategies/braintree';\nimport { CardinalClient, CardinalScriptLoader, CardinalThreeDSecureFlow, CardinalThreeDSecureFlowV2 } from './strategies/cardinal';\nimport { ChasePayPaymentStrategy, ChasePayScriptLoader } from './strategies/chasepay';\nimport { CheckoutcomiDealPaymentStrategy, CheckoutcomAPMPaymentStrategy, CheckoutcomFawryPaymentStrategy, CheckoutcomSEPAPaymentStrategy } from './strategies/checkoutcom-custom';\nimport { ClearpayPaymentStrategy, ClearpayScriptLoader } from './strategies/clearpay';\nimport { ConvergePaymentStrategy } from './strategies/converge';\nimport { CreditCardPaymentStrategy } from './strategies/credit-card';\nimport { CreditCardRedirectPaymentStrategy } from './strategies/credit-card-redirect';\nimport { CyberSourcePaymentStrategy } from './strategies/cybersource/index';\nimport { CyberSourceV2PaymentStrategy } from './strategies/cybersourcev2';\nimport { DigitalRiverPaymentStrategy, DigitalRiverScriptLoader } from './strategies/digitalriver';\nimport { ExternalPaymentStrategy } from './strategies/external';\nimport { createGooglePayPaymentProcessor, GooglePayAdyenV2Initializer, GooglePayAdyenV2PaymentProcessor, GooglePayAuthorizeNetInitializer, GooglePayBraintreeInitializer, GooglePayCheckoutcomInitializer, GooglePayCybersourceV2Initializer, GooglePayPaymentStrategy, GooglePayStripeInitializer } from './strategies/googlepay';\nimport { KlarnaPaymentStrategy, KlarnaScriptLoader } from './strategies/klarna';\nimport { KlarnaV2PaymentStrategy, KlarnaV2ScriptLoader } from './strategies/klarnav2';\nimport { LegacyPaymentStrategy } from './strategies/legacy';\nimport { MasterpassPaymentStrategy, MasterpassScriptLoader } from './strategies/masterpass';\nimport { MolliePaymentStrategy, MollieScriptLoader } from './strategies/mollie';\nimport { NoPaymentDataRequiredPaymentStrategy } from './strategies/no-payment';\nimport { OfflinePaymentStrategy } from './strategies/offline';\nimport { OffsitePaymentStrategy } from './strategies/offsite';\nimport { PaypalExpressPaymentStrategy, PaypalProPaymentStrategy, PaypalScriptLoader } from './strategies/paypal';\nimport { createPaypalCommercePaymentProcessor,\n    PaypalCommerceCreditCardPaymentStrategy,\n    PaypalCommerceFundingKeyResolver,\n    PaypalCommerceHostedForm,\n    PaypalCommercePaymentStrategy,\n    PaypalCommerceRequestSender } from './strategies/paypal-commerce';\nimport { PPSDKStrategy } from './strategies/ppsdk';\nimport { SagePayPaymentStrategy } from './strategies/sage-pay';\nimport { SquarePaymentStrategy, SquareScriptLoader } from './strategies/square';\nimport { StripeScriptLoader, StripeV3PaymentStrategy } from './strategies/stripev3';\nimport { WepayPaymentStrategy, WepayRiskClient } from './strategies/wepay';\nimport { ZipPaymentStrategy, ZipScriptLoader } from './strategies/zip';\n\nexport default function createPaymentStrategyRegistry(\n    store: CheckoutStore,\n    paymentClient: any,\n    requestSender: RequestSender,\n    spamProtection: GoogleRecaptcha,\n    locale: string\n) {\n    const registry = new PaymentStrategyRegistry(store, { defaultToken: PaymentStrategyType.CREDIT_CARD });\n    const scriptLoader = getScriptLoader();\n    const paymentRequestTransformer = new PaymentRequestTransformer();\n    const paymentRequestSender = new PaymentRequestSender(paymentClient);\n    const billingAddressActionCreator = new BillingAddressActionCreator(\n        new BillingAddressRequestSender(requestSender),\n        new SubscriptionsActionCreator(new SubscriptionsRequestSender(requestSender))\n    );\n    const braintreePaymentProcessor = createBraintreePaymentProcessor(scriptLoader);\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const checkoutValidator = new CheckoutValidator(checkoutRequestSender);\n    const spamProtectionActionCreator = new SpamProtectionActionCreator(spamProtection, new SpamProtectionRequestSender(requestSender));\n    const orderActionCreator = new OrderActionCreator(new OrderRequestSender(requestSender), checkoutValidator);\n    const storeCreditActionCreator = new StoreCreditActionCreator(new StoreCreditRequestSender(requestSender));\n    const paymentHumanVerificationHandler = new PaymentHumanVerificationHandler(createSpamProtection(createScriptLoader()));\n    const paymentActionCreator = new PaymentActionCreator(paymentRequestSender, orderActionCreator, paymentRequestTransformer, paymentHumanVerificationHandler);\n    const paymentMethodActionCreator = new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender));\n    const remoteCheckoutActionCreator = new RemoteCheckoutActionCreator(new RemoteCheckoutRequestSender(requestSender));\n    const configActionCreator = new ConfigActionCreator(new ConfigRequestSender(requestSender));\n    const formFieldsActionCreator = new FormFieldsActionCreator(new FormFieldsRequestSender(requestSender));\n    const checkoutActionCreator = new CheckoutActionCreator(checkoutRequestSender, configActionCreator, formFieldsActionCreator);\n    const paymentStrategyActionCreator = new PaymentStrategyActionCreator(registry, orderActionCreator, spamProtectionActionCreator);\n    const formPoster = createFormPoster();\n    const hostedFormFactory = new HostedFormFactory(store);\n\n    registry.register(PaymentStrategyType.ADYENV2, () =>\n        new AdyenV2PaymentStrategy(\n            store,\n            paymentActionCreator,\n            orderActionCreator,\n            new AdyenV2ScriptLoader(scriptLoader, getStylesheetLoader())\n        )\n    );\n\n    registry.register(PaymentStrategyType.ADYENV2_GOOGLEPAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayAdyenV2Initializer()\n            ),\n            new GooglePayAdyenV2PaymentProcessor(\n                store,\n                paymentActionCreator,\n                new AdyenV2ScriptLoader(scriptLoader, getStylesheetLoader())\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.AFFIRM, () =>\n        new AffirmPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            new AffirmScriptLoader()\n        )\n    );\n\n    registry.register(PaymentStrategyType.AFTERPAY, () =>\n        new AfterpayPaymentStrategy(\n            store,\n            checkoutValidator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            storeCreditActionCreator,\n            new AfterpayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.AMAZON, () =>\n        new AmazonPayPaymentStrategy(\n            store,\n            orderActionCreator,\n            billingAddressActionCreator,\n            remoteCheckoutActionCreator,\n            new AmazonPayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.AUTHORIZENET_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayAuthorizeNetInitializer()\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.AMAZONPAYV2, () =>\n        new AmazonPayV2PaymentStrategy(\n            store,\n            paymentStrategyActionCreator,\n            paymentMethodActionCreator,\n            orderActionCreator,\n            paymentActionCreator,\n            createAmazonPayV2PaymentProcessor()\n        )\n    );\n\n    registry.register(PaymentStrategyType.BARCLAYS, () =>\n        new BarclaysPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            new CardinalThreeDSecureFlowV2(\n                store,\n                paymentActionCreator,\n                new CardinalClient(new CardinalScriptLoader(scriptLoader))\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.BLUESNAPV2, () =>\n        new BlueSnapV2PaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.CREDIT_CARD, () =>\n        new CreditCardPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHECKOUTCOM, () =>\n        new CreditCardRedirectPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.CLEARPAY, () =>\n        new ClearpayPaymentStrategy(\n            store,\n            checkoutValidator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            storeCreditActionCreator,\n            new ClearpayScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.CYBERSOURCE, () =>\n        new CyberSourcePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            new CardinalThreeDSecureFlow(\n                store,\n                paymentActionCreator,\n                paymentMethodActionCreator,\n                new CardinalClient(new CardinalScriptLoader(scriptLoader))\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.CYBERSOURCEV2, () =>\n        new CyberSourceV2PaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            new CardinalThreeDSecureFlowV2(\n                store,\n                paymentActionCreator,\n                new CardinalClient(new CardinalScriptLoader(scriptLoader))\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.DIGITALRIVER, () =>\n        new DigitalRiverPaymentStrategy(\n            store,\n            paymentMethodActionCreator,\n            orderActionCreator,\n            paymentActionCreator,\n            storeCreditActionCreator,\n            new DigitalRiverScriptLoader(scriptLoader, getStylesheetLoader())\n        )\n    );\n\n    registry.register(PaymentStrategyType.KLARNA, () =>\n        new KlarnaPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new KlarnaScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.KLARNAV2, () =>\n        new KlarnaV2PaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentMethodActionCreator,\n            remoteCheckoutActionCreator,\n            new KlarnaV2ScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.LEGACY, () =>\n        new LegacyPaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.OFFLINE, () =>\n        new OfflinePaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.OFFSITE, () =>\n        new OffsitePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL, () =>\n        new PaypalProPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            new CardinalThreeDSecureFlow(\n                store,\n                paymentActionCreator,\n                paymentMethodActionCreator,\n                new CardinalClient(new CardinalScriptLoader(scriptLoader))\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_EXPRESS, () =>\n        new PaypalExpressPaymentStrategy(\n            store,\n            orderActionCreator,\n            new PaypalScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_EXPRESS_CREDIT, () =>\n        new PaypalExpressPaymentStrategy(\n            store,\n            orderActionCreator,\n            new PaypalScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_COMMERCE_CREDIT_CARD, () =>\n        new PaypalCommerceCreditCardPaymentStrategy(\n            store,\n            paymentMethodActionCreator,\n            new PaypalCommerceHostedForm(createPaypalCommercePaymentProcessor(scriptLoader, requestSender)),\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_COMMERCE, () =>\n        new PaypalCommercePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            createPaypalCommercePaymentProcessor(scriptLoader, requestSender),\n            new PaypalCommerceFundingKeyResolver(),\n            new PaypalCommerceRequestSender(requestSender),\n            new LoadingIndicator({ styles: { backgroundColor: 'black' } })\n        )\n    );\n\n    registry.register(PaymentStrategyType.PAYPAL_COMMERCE_ALTERNATIVE_METHODS, () =>\n        new PaypalCommercePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            createPaypalCommercePaymentProcessor(scriptLoader, requestSender),\n            new PaypalCommerceFundingKeyResolver(),\n            new PaypalCommerceRequestSender(requestSender),\n            new LoadingIndicator({ styles: { backgroundColor: 'black' } })\n        )\n    );\n\n    registry.register(PaymentStrategyType.PPSDK, () =>\n        new PPSDKStrategy(\n            store\n        )\n    );\n\n    registry.register(PaymentStrategyType.SAGE_PAY, () =>\n        new SagePayPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.SQUARE, () =>\n        new SquarePaymentStrategy(\n            store,\n            checkoutActionCreator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            requestSender,\n            new SquareScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.NO_PAYMENT_DATA_REQUIRED, () =>\n        new NoPaymentDataRequiredPaymentStrategy(\n            store,\n            orderActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE, () =>\n        new BraintreeCreditCardPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_PAYPAL, () =>\n        new BraintreePaypalPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_PAYPAL_CREDIT, () =>\n        new BraintreePaypalPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            braintreePaymentProcessor,\n            true\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_VISA_CHECKOUT, () =>\n        new BraintreeVisaCheckoutPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createBraintreeVisaCheckoutPaymentProcessor(scriptLoader, requestSender),\n            new VisaCheckoutScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHASE_PAY, () =>\n        new ChasePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            requestSender,\n            new ChasePayScriptLoader(scriptLoader),\n            new WepayRiskClient(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.BRAINTREE_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayBraintreeInitializer(\n                    new BraintreeSDKCreator(\n                        new BraintreeScriptLoader(scriptLoader)\n                    )\n                )\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.WE_PAY, () =>\n        new WepayPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            new WepayRiskClient(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.MASTERPASS, () =>\n        new MasterpassPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            new MasterpassScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.STRIPE_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayStripeInitializer()\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.CYBERSOURCEV2_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayCybersourceV2Initializer()\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHECKOUTCOM_GOOGLE_PAY, () =>\n        new GooglePayPaymentStrategy(\n            store,\n            checkoutActionCreator,\n            paymentMethodActionCreator,\n            paymentStrategyActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            createGooglePayPaymentProcessor(\n                store,\n                new GooglePayCheckoutcomInitializer(requestSender)\n            )\n        )\n    );\n\n    registry.register(PaymentStrategyType.ZIP, () =>\n        new ZipPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            storeCreditActionCreator,\n            remoteCheckoutActionCreator,\n            new ZipScriptLoader(scriptLoader),\n            requestSender\n        )\n    );\n\n    registry.register(PaymentStrategyType.CONVERGE, () =>\n        new ConvergePaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.LAYBUY, () =>\n        new ExternalPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.SEZZLE, () =>\n        new ExternalPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            formPoster\n        )\n    );\n\n    registry.register(PaymentStrategyType.STRIPEV3, () =>\n        new StripeV3PaymentStrategy(\n            store,\n            paymentMethodActionCreator,\n            paymentActionCreator,\n            orderActionCreator,\n            new StripeScriptLoader(scriptLoader),\n            storeCreditActionCreator,\n            locale\n        )\n    );\n\n    registry.register(PaymentStrategyType.BOLT, () =>\n        new BoltPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            paymentMethodActionCreator,\n            storeCreditActionCreator,\n            new BoltScriptLoader(scriptLoader)\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHECKOUTCOM_APM, () =>\n        new CheckoutcomAPMPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        )\n    );\n\n    registry.register(PaymentStrategyType.MOLLIE, () =>\n        new MolliePaymentStrategy(\n            store,\n            new MollieScriptLoader(scriptLoader),\n            orderActionCreator,\n            paymentActionCreator\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHECKOUTCOM_SEPA, () =>\n        new CheckoutcomSEPAPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHECKOUTCOM_IDEAL, () =>\n        new CheckoutcomiDealPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        )\n    );\n\n    registry.register(PaymentStrategyType.CHECKOUTCOM_FAWRY, () =>\n        new CheckoutcomFawryPaymentStrategy(\n            store,\n            orderActionCreator,\n            paymentActionCreator,\n            hostedFormFactory\n        )\n    );\n\n    return registry;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { Overlay } from '../../../common/overlay';\n\nimport BraintreeHostedForm from './braintree-hosted-form';\nimport BraintreePaymentProcessor from './braintree-payment-processor';\nimport BraintreeScriptLoader from './braintree-script-loader';\nimport BraintreeSDKCreator from './braintree-sdk-creator';\n\nexport default function createBraintreePaymentProcessor(scriptLoader: ScriptLoader) {\n    const braintreeScriptLoader = new BraintreeScriptLoader(scriptLoader);\n    const braintreeSDKCreator = new BraintreeSDKCreator(braintreeScriptLoader);\n    const braintreeHostedForm = new BraintreeHostedForm(braintreeSDKCreator);\n    const overlay = new Overlay();\n\n    return new BraintreePaymentProcessor(\n        braintreeSDKCreator,\n        braintreeHostedForm,\n        overlay\n    );\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { CheckoutRequestSender, CheckoutStore } from '../checkout';\nimport { Registry } from '../common/registry';\nimport { PaymentMethodActionCreator, PaymentMethodRequestSender } from '../payment';\nimport { AmazonPayScriptLoader } from '../payment/strategies/amazon-pay';\nimport { createAmazonPayV2PaymentProcessor } from '../payment/strategies/amazon-pay-v2';\nimport { RemoteCheckoutActionCreator, RemoteCheckoutRequestSender } from '../remote-checkout';\n\nimport ConsignmentActionCreator from './consignment-action-creator';\nimport ConsignmentRequestSender from './consignment-request-sender';\nimport ShippingStrategyActionCreator from './shipping-strategy-action-creator';\nimport { ShippingStrategy } from './strategies';\nimport { AmazonPayShippingStrategy } from './strategies/amazon';\nimport { AmazonPayV2ShippingStrategy } from './strategies/amazon-pay-v2';\nimport { DefaultShippingStrategy } from './strategies/default';\n\nexport default function createShippingStrategyRegistry(\n    store: CheckoutStore,\n    requestSender: RequestSender\n): Registry<ShippingStrategy> {\n    const registry = new Registry<ShippingStrategy>();\n    const checkoutRequestSender = new CheckoutRequestSender(requestSender);\n    const consignmentRequestSender = new ConsignmentRequestSender(requestSender);\n    const consignmentActionCreator = new ConsignmentActionCreator(consignmentRequestSender, checkoutRequestSender);\n\n    registry.register('amazon', () =>\n        new AmazonPayShippingStrategy(\n            store,\n            consignmentActionCreator,\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n            new RemoteCheckoutActionCreator(new RemoteCheckoutRequestSender(requestSender)),\n            new AmazonPayScriptLoader(getScriptLoader())\n        )\n    );\n\n    registry.register('amazonpay', () =>\n        new AmazonPayV2ShippingStrategy(\n            store,\n            consignmentActionCreator,\n            new PaymentMethodActionCreator(new PaymentMethodRequestSender(requestSender)),\n            createAmazonPayV2PaymentProcessor(),\n            new ShippingStrategyActionCreator(registry)\n        )\n    );\n\n    registry.register('default', () =>\n        new DefaultShippingStrategy(\n            store,\n            consignmentActionCreator\n        )\n    );\n\n    return registry;\n}\n","import { isObject, union } from 'lodash';\nimport MessageFormat from 'messageformat';\n\nimport { Logger } from '../common/log';\nimport { bindDecorator as bind } from '../common/utility';\n\nimport LanguageConfig, { Locales, Translations } from './language-config';\n\nconst DEFAULT_LOCALE = 'en';\nconst KEY_PREFIX = 'optimized_checkout';\n\n/**\n * Responsible for getting language strings.\n *\n * This object can be used to retrieve language strings that are most\n * appropriate for a given locale.\n *\n * The language strings provided to the object should follow [ICU\n * MessageFormat](http://userguide.icu-project.org/formatparse/messages) syntax.\n */\n@bind\nexport default class LanguageService {\n    private _locale: string;\n    private _locales: Locales;\n    private _translations: Translations;\n    private _formatters: { [key: string]: any };\n\n    /**\n     * @internal\n     */\n    constructor(\n        config: Partial<LanguageConfig>,\n        private _logger: Logger\n    ) {\n        const { locale, locales, translations } = this._transformConfig(config);\n\n        this._locale = locale;\n        this._locales = locales;\n        this._translations = translations;\n        this._formatters = {};\n    }\n\n    /**\n     * Remaps a set of language strings with a different set of keys.\n     *\n     * ```js\n     * service.mapKeys({\n     *     'new_key': 'existing_key',\n     * });\n     *\n     * console.log(service.translate('new_key'));\n     * ```\n     *\n     * @param maps - The set of language strings.\n     */\n    mapKeys(maps: { [key: string]: string }): void {\n        Object.keys(maps).forEach(key => {\n            const translationKey = `${KEY_PREFIX}.${maps[key]}`;\n\n            this._translations[`${KEY_PREFIX}.${key}`] = this._translations[translationKey];\n        });\n    }\n\n    /**\n     * Gets the preferred locale of the current customer.\n     *\n     * @returns The preferred locale code.\n     */\n    getLocale(): string {\n        return this._hasTranslations() ? this._locale : DEFAULT_LOCALE;\n    }\n\n    /**\n     * Gets a language string by a key.\n     *\n     * ```js\n     * service.translate('language_key');\n     * ```\n     *\n     * If the language string contains a placeholder, you can replace it by\n     * providing a second argument.\n     *\n     * ```js\n     * service.translate('language_key', { placeholder: 'Hello' });\n     * ```\n     *\n     * @param key - The language key.\n     * @param data - Data for replacing placeholders in the language string.\n     * @returns The translated language string.\n     */\n    translate(key: string, data: TranslationData = {}): string {\n        const prefixedKey = `${KEY_PREFIX}.${key}`;\n\n        if (typeof this._translations[prefixedKey] !== 'string') {\n            this._logger.warn(`Translation key \"${prefixedKey}\" is missing`);\n\n            return prefixedKey;\n        }\n\n        if (!this._formatters[prefixedKey]) {\n            const messageFormat = new MessageFormat(this._locales[prefixedKey]);\n\n            this._formatters[prefixedKey] = messageFormat.compile(this._translations[prefixedKey] || '');\n        }\n\n        return this._formatters[prefixedKey](this._transformData(data));\n    }\n\n    private _transformConfig(config: Partial<LanguageConfig> = {}): LanguageConfig {\n        const output: LanguageConfig = {\n            defaultTranslations: {},\n            translations: {},\n            locales: {},\n            locale: config.locale || DEFAULT_LOCALE,\n        };\n\n        const locales = config.locales || {};\n        const translations = this._flattenObject(config.translations || {});\n        const defaultTranslations = this._flattenObject(config.defaultTranslations || {});\n        const translationKeys = union(Object.keys(defaultTranslations), Object.keys(translations));\n\n        translationKeys.forEach(key => {\n            if (translations && translations[key]) {\n                output.translations[key] = translations[key];\n                output.locales[key] = locales[key] || output.locale;\n            } else {\n                output.translations[key] = defaultTranslations[key];\n                output.locales[key] = DEFAULT_LOCALE;\n            }\n        });\n\n        return output;\n    }\n\n    private _flattenObject(object: Translations, result: Translations = {}, parentKey: string = ''): Translations {\n        try {\n            Object.keys(object).forEach(key => {\n                const value = object[key];\n                const resultKey = parentKey ? `${parentKey}.${key}` : key;\n\n                if (isObject(value)) {\n                    return this._flattenObject(value, result, resultKey);\n                }\n\n                result[resultKey] = value;\n            });\n        } catch (err) {\n            this._logger.warn(`Unable to parse object: ${err}`);\n        }\n\n        return result;\n    }\n\n    private _transformData(data: TranslationData): TranslationData {\n        return Object.keys(data).reduce((result, key) => {\n            const value = data[key];\n\n            result[key] = value === null || value === undefined ? '' : value;\n\n            return result;\n        }, {} as TranslationData);\n    }\n\n    private _hasTranslations(): boolean {\n        return Object.keys(this._locales).map(key => this._locales[key])\n            .filter(code => code.split('-')[0] === this._locale.split('-')[0])\n            .length > 0;\n    }\n}\n\nexport interface TranslationData {\n    [key: string]: string | number;\n}\n","import { getDefaultLogger } from '../common/log';\n\nimport LanguageConfig from './language-config';\nimport LanguageService from './language-service';\n\n/**\n * Creates an instance of `LanguageService`.\n *\n * @remarks\n * ```js\n * const language = {{{langJson 'optimized_checkout'}}}; // `langJson` is a Handlebars helper provided by BigCommerce's Stencil template engine.\n * const service = createLanguageService(language);\n *\n * console.log(service.translate('address.city_label'));\n * ```\n *\n * @param config - A configuration object.\n * @returns An instance of `LanguageService`.\n */\nexport default function createLanguageService(config: Partial<LanguageConfig> = {}): LanguageService {\n    return new LanguageService(\n        config,\n        getDefaultLogger()\n    );\n}\n","import { InvalidArgumentError } from '../common/error/errors';\n\nimport { CurrencyConfig } from './currency';\n\nexport default class CurrencyFormatter {\n    private _decimalPlaces: number;\n    private _symbolLocation: string;\n    private _symbol: string;\n    private _thousandsSeparator: string;\n    private _decimalSeparator: string;\n\n    constructor(\n        currencySettings: CurrencyConfig\n    ) {\n        if (!currencySettings) {\n            throw new Error('Currency settings missing');\n        }\n\n        const {\n            decimalPlaces,\n            symbolLocation,\n            symbol,\n            thousandsSeparator,\n            decimalSeparator,\n        } = currencySettings;\n\n        if (\n            typeof symbolLocation !== 'string' ||\n            typeof symbol !== 'string' ||\n            typeof thousandsSeparator !== 'string' ||\n            typeof decimalSeparator !== 'string' ||\n            typeof decimalPlaces !== 'string'\n        ) {\n            throw new InvalidArgumentError('Invalid currency settings provided');\n        }\n\n        this._decimalPlaces = parseInt(decimalPlaces, 10);\n        this._symbolLocation = symbolLocation;\n        this._symbol = symbol;\n        this._thousandsSeparator = thousandsSeparator;\n        this._decimalSeparator = decimalSeparator;\n    }\n\n    format(amount?: number): string {\n        if (typeof amount !== 'number') {\n            throw new InvalidArgumentError('Invalid amount provided');\n        }\n\n        const formattedNumber = this._formatNumber(amount);\n\n        const formattedCurrency = this._formatCurrency(formattedNumber);\n\n        return amount < 0 ?\n            `-${formattedCurrency}` :\n            formattedCurrency;\n    }\n\n    private _formatNumber(amount: number): string {\n        const positiveAmount = Math.abs(amount);\n        const [ integerAmount, decimalAmount = '' ] = (this._toFixed(positiveAmount, this._decimalPlaces)).split('.');\n        const parsedIntegerAmount = integerAmount.replace(/\\B(?=(\\d{3})+(?!\\d))/g, this._thousandsSeparator);\n\n        if (this._decimalPlaces < 1) {\n            return parsedIntegerAmount;\n        }\n\n        return [\n            parsedIntegerAmount,\n            decimalAmount,\n        ].join(this._decimalSeparator);\n    }\n\n    private _formatCurrency(formattedNumber: string): string {\n        return (this._symbolLocation.toLowerCase() === 'left') ?\n            `${this._symbol}${formattedNumber}` :\n            `${formattedNumber}${this._symbol}`;\n    }\n\n    private _toFixed(value: number, precision: number): string {\n        return (+(Math.round(+(value + 'e' + precision)) + 'e' + -precision)).toFixed(precision);\n    }\n}\n","import { bindDecorator as bind } from '../common/utility';\nimport { StoreConfig } from '../config';\n\nimport CurrencyFormatter from './currency-formatter';\n\n/**\n * Responsible for formatting and converting currencies.\n */\n@bind\nexport default class CurrencyService {\n    private _customerFormatter: CurrencyFormatter;\n    private _storeFormatter: CurrencyFormatter;\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _storeConfig: StoreConfig\n    ) {\n        this._customerFormatter = new CurrencyFormatter(this._storeConfig.shopperCurrency);\n        this._storeFormatter = new CurrencyFormatter(this._storeConfig.currency);\n    }\n\n    toCustomerCurrency(amount: number): string {\n        const exchangeRate = this._storeConfig.shopperCurrency.exchangeRate;\n\n        return this._customerFormatter.format(amount * exchangeRate);\n    }\n\n    toStoreCurrency(amount: number): string {\n        return this._storeFormatter.format(amount);\n    }\n}\n","import { StoreConfig } from '../config';\n\nimport CurrencyService from './currency-service';\n\n/**\n * Creates an instance of `CurrencyService`.\n *\n * @remarks\n * ```js\n * const { data } = checkoutService.getState();\n * const config = data.getConfig();\n * const checkout = data.getCheckout();\n * const currencyService = createCurrencyService(config);\n *\n * currencyService.toStoreCurrency(checkout.grandTotal);\n * currencyService.toCustomerCurrency(checkout.grandTotal);\n * ```\n *\n * @param config - The config object containing the currency configuration\n * @returns an instance of `CurrencyService`.\n */\nexport default function createCurrencyService(\n    config: StoreConfig\n): CurrencyService {\n    return new CurrencyService(config);\n}\n","import { keys } from 'lodash';\n\nimport { LineItemMap } from '../cart';\nimport { Checkout, CheckoutService } from '../checkout';\nimport { InvalidArgumentError } from '../common/error/errors';\nimport { ShopperCurrency, StoreProfile } from '../config';\nimport { Coupon } from '../coupon';\nimport { Order } from '../order';\nimport { ShippingOption } from '../shipping';\n\nimport { AnalyticsTracker } from './analytics-tracker-window';\nimport StepTracker from './step-tracker';\n\nexport interface StepTrackerConfig {\n    checkoutSteps?: AnalyticStepType[];\n}\n\nexport type AnalyticStepType = 'customer' | 'shipping' | 'billing' | 'payment';\n\nconst ORDER_ITEMS_STORAGE_KEY = 'ORDER_ITEMS';\n\nexport enum AnalyticStepId {\n    CUSTOMER = 1,\n    SHIPPING,\n    BILLING,\n    PAYMENT,\n}\n\nconst ANALYTIC_STEPS: { [key: string]: AnalyticStepId } = {\n    customer: AnalyticStepId.CUSTOMER,\n    shipping: AnalyticStepId.SHIPPING,\n    billing: AnalyticStepId.BILLING,\n    payment: AnalyticStepId.PAYMENT,\n};\n\nexport default class AnalyticsStepTracker implements StepTracker {\n    private _checkoutStarted: boolean = false;\n    private _completedSteps: { [key: string]: boolean } = {};\n    private _viewedSteps: { [key in AnalyticStepId]?: boolean; } = {};\n    private _analyticStepOrder: AnalyticStepType[] = [\n        'customer',\n        'shipping',\n        'billing',\n        'payment',\n    ];\n\n    constructor(\n        private checkoutService: CheckoutService,\n        private storage: StorageFallback,\n        private analytics: AnalyticsTracker,\n        { checkoutSteps }: StepTrackerConfig = {}\n    ) {\n        if (checkoutSteps !== undefined) {\n            if (checkoutSteps.some(value => !(value in ANALYTIC_STEPS))) {\n                throw new InvalidArgumentError(\n                    `Invalid checkout steps provided. Valid values are: ${keys(ANALYTIC_STEPS).join(', ')}.`\n                );\n            }\n            this._analyticStepOrder = checkoutSteps;\n\n        }\n    }\n\n    trackCheckoutStarted(): void {\n        if (this._checkoutStarted) {\n            return;\n        }\n\n        const checkout = this.getCheckout();\n\n        if (!checkout) {\n            return;\n        }\n\n        const {\n            coupons,\n            grandTotal,\n            shippingCostTotal,\n            taxTotal,\n            cart: {\n                lineItems,\n                discountAmount,\n                id,\n            },\n        } = checkout;\n\n        const extraItemsData = this.saveExtraItemsData(id, lineItems);\n\n        this.analytics.track('Checkout Started', this.getTrackingPayload({\n            revenue: grandTotal,\n            shipping: shippingCostTotal,\n            tax: taxTotal,\n            discount: discountAmount,\n            coupons,\n            lineItems,\n            extraItemsData,\n        }));\n\n        this._checkoutStarted = true;\n    }\n\n    trackOrderComplete(): void {\n        const order = this.getOrder();\n\n        if (!order) {\n            return;\n        }\n\n        const {\n            isComplete,\n            orderId,\n            orderAmount,\n            shippingCostTotal,\n            taxTotal,\n            discountAmount,\n            coupons,\n            lineItems,\n            cartId,\n        } = order;\n\n        if (!isComplete) {\n            return;\n        }\n\n        const extraItemsData = this.readExtraItemsData(cartId);\n\n        if (extraItemsData === null) {\n            return;\n        }\n\n        const isEcommerceGAEnabled = this.checkoutService.getState().data\n            .getConfig()?.checkoutSettings.features['DATA-6891.missing_orders_within_GA'];\n\n        const payload = this.getTrackingPayload({\n            orderId,\n            revenue: orderAmount,\n            shipping: shippingCostTotal,\n            tax: taxTotal,\n            discount: discountAmount,\n            coupons,\n            extraItemsData,\n            lineItems,\n        });\n\n        if (isEcommerceGAEnabled && this.analytics.hasPayloadLimit(payload)) {\n            this.analytics.hit('transaction', {\n                '&ti': payload.orderId,\n                '&ta': payload.affiliation,\n                '&tr': payload.revenue,\n                '&ts': payload.shipping,\n                '&tt': payload.tax,\n                '&tcc': payload.coupon,\n                '&cu': payload.currency,\n            });\n\n            payload.products.map(product => {\n                this.analytics.hit('item', {\n                    '&ti': payload.orderId,\n                    '&in': product.name,\n                    '&ic': product.sku,\n                    '&iv': `${product.category}`,\n                    '&ip': product.price,\n                    '&iq': product.quantity,\n                });\n            });\n\n            return this.clearExtraItemData(cartId);\n        }\n\n        this.analytics.track('Order Completed', payload);\n\n        this.clearExtraItemData(cartId);\n    }\n\n    trackStepViewed(step: AnalyticStepType): void {\n        const stepId = this.getIdFromStep(step);\n\n        if (!stepId || this.hasStepViewed(stepId)) {\n            return;\n        }\n\n        this.trackViewed(stepId);\n        this.backfill(stepId);\n    }\n\n    trackStepCompleted(step: AnalyticStepType): void {\n        const stepId = this.getIdFromStep(step);\n\n        if (!stepId || this.hasStepCompleted(stepId)) {\n            return;\n        }\n\n        this.backfill(stepId);\n        this.trackCompleted(stepId);\n    }\n\n    private backfill(stepId: AnalyticStepId): void {\n        for (const i of this._analyticStepOrder) {\n            const id = this.getIdFromStep(i);\n\n            if (!id) {\n                break;\n            }\n\n            if (!this.hasStepViewed(id)) {\n                this.trackViewed(id);\n            }\n\n            if (id === stepId) {\n                break;\n            }\n\n            if (!this.hasStepCompleted(id)) {\n                this.trackCompleted(id);\n            }\n        }\n    }\n\n    private trackCompleted(stepId: AnalyticStepId): void {\n        const shippingMethod = this.getSelectedShippingOption();\n        const { code: currency = '' } = this.getShopperCurrency() || {};\n        const paymentMethod = this.getPaymentMethodName();\n\n        const payload: {\n            step: number;\n            currency: string;\n            shippingMethod?: string;\n            paymentMethod?: string;\n        } = {\n            step: stepId,\n            currency,\n        };\n\n        if (shippingMethod) {\n            payload.shippingMethod = shippingMethod.description;\n        }\n\n        if (paymentMethod) {\n            payload.paymentMethod = paymentMethod;\n        }\n\n        // due to an issue with the way the segment library works, we must send at least one of the two\n        // options--otherwise it rejects the track call with no diagnostic messages. however, if we blindly\n        // include both options, it sends a single comma for the value, which is undesireable. by only adding\n        // one of the two (shippingMethod here being arbitrarily chosen), we always have at least one value, but\n        // never send two empty values.\n        if (!payload.shippingMethod && !payload.paymentMethod) {\n            payload.shippingMethod = ' ';\n        }\n\n        this.analytics.track('Checkout Step Completed', payload);\n\n        const shippingMethodId = shippingMethod ? shippingMethod.id : '';\n        const completedStepId = stepId === AnalyticStepId.SHIPPING ?\n            `${stepId}-${shippingMethodId}` :\n            stepId;\n\n        this._completedSteps[completedStepId] = true;\n    }\n\n    private getTrackingPayload({\n        orderId,\n        revenue,\n        shipping,\n        tax,\n        discount,\n        coupons,\n        extraItemsData,\n        lineItems,\n    }: {\n        orderId?: number;\n        revenue: number;\n        shipping: number;\n        tax: number;\n        discount: number;\n        coupons: Coupon[];\n        extraItemsData: ExtraItemsData;\n        lineItems: LineItemMap;\n    }) {\n        const { code = '' } = this.getShopperCurrency() || {};\n        const { storeName = '' } = this.getStoreProfile() || {};\n\n        return {\n            orderId,\n            affiliation: storeName,\n            revenue: this.toShopperCurrency(revenue),\n            shipping: this.toShopperCurrency(shipping),\n            tax: this.toShopperCurrency(tax),\n            discount: this.toShopperCurrency(discount),\n            coupon: (coupons || []).map(coupon => coupon.code.toUpperCase()).join(','),\n            currency: code,\n            products: this.getProducts(extraItemsData, lineItems),\n        };\n    }\n\n    private hasStepCompleted(stepId: AnalyticStepId): boolean {\n        const shippingOption = this.getSelectedShippingOption();\n        const shippingMethodId = shippingOption ? shippingOption.id : '';\n\n        return this._completedSteps.hasOwnProperty(stepId) ||\n            (\n                stepId === AnalyticStepId.SHIPPING &&\n                this._completedSteps.hasOwnProperty(`${stepId}-${shippingMethodId}`)\n            );\n    }\n\n    private hasStepViewed(stepId: AnalyticStepId): boolean {\n        return !!this._viewedSteps[stepId];\n    }\n\n    private getIdFromStep(step: string): AnalyticStepId | null {\n        const name = step.split('.');\n\n        return ANALYTIC_STEPS[name[0]] || null;\n    }\n\n    private trackViewed(stepId: AnalyticStepId): void {\n        const currency = this.getShopperCurrency();\n\n        this.analytics.track('Checkout Step Viewed', {\n            step: stepId,\n            currency: currency ? currency.code : '',\n        });\n\n        this._viewedSteps[stepId] = true;\n    }\n\n    private getOrder(): Order | undefined {\n        const { data: { getOrder } } = this.checkoutService.getState();\n\n        return getOrder();\n    }\n\n    private getCheckout(): Checkout | undefined {\n        const { data: { getCheckout } } = this.checkoutService.getState();\n\n        return getCheckout();\n    }\n\n    private getShopperCurrency(): ShopperCurrency | undefined {\n        const { data: { getConfig } } = this.checkoutService.getState();\n        const config = getConfig();\n\n        return config && config.shopperCurrency;\n    }\n\n    private getStoreProfile(): StoreProfile | undefined {\n        const { data: { getConfig } } = this.checkoutService.getState();\n        const config = getConfig();\n\n        return config && config.storeProfile;\n    }\n\n    private toShopperCurrency(amount: number): number {\n        const { exchangeRate = 1 } = this.getShopperCurrency() || {};\n\n        return Math.round(amount * exchangeRate * 100) / 100;\n    }\n\n    private saveExtraItemsData(id: string, lineItems: LineItemMap): ExtraItemsData {\n        const data = [\n            ...lineItems.physicalItems,\n            ...lineItems.digitalItems,\n        ].reduce((result, item) => {\n            result[item.productId] = {\n                brand: item.brand ? item.brand : '',\n                category: item.categoryNames ? item.categoryNames.join(', ') : '',\n            };\n\n            return result;\n        }, {} as ExtraItemsData);\n\n        try {\n            this.storage.setItem(this.getStorageKey(id), JSON.stringify(data));\n\n            return data;\n        } catch (err) {\n            return {};\n        }\n    }\n\n    private getStorageKey(id: string): string {\n        return id ? `${ORDER_ITEMS_STORAGE_KEY}_${id}` : '';\n    }\n\n    private readExtraItemsData(id: string): ExtraItemsData | null {\n        try {\n            const item = this.storage.getItem(this.getStorageKey(id));\n\n            return item ? JSON.parse(item) : null;\n        } catch (err) {\n            return null;\n        }\n    }\n\n    private clearExtraItemData(id: string): void {\n        try {\n            this.storage.removeItem(this.getStorageKey(id));\n        } catch (err) {\n            // silently ignore the failure\n        }\n    }\n\n    private getSelectedShippingOption(): ShippingOption | null {\n        const { data } = this.checkoutService.getState();\n        const shippingOption = data.getSelectedShippingOption();\n\n        return (shippingOption && shippingOption.id && shippingOption.description) ?\n            shippingOption :\n            null;\n    }\n\n    private getPaymentMethodName(): string {\n        const { data } = this.checkoutService.getState();\n        const paymentMethod = data.getSelectedPaymentMethod();\n\n        return (paymentMethod && paymentMethod.config) ?\n            paymentMethod.config.displayName || '' :\n            '';\n    }\n\n    private getProducts(itemsData: ExtraItemsData, lineItems: LineItemMap): AnalyticsProduct[] {\n        const customItems: AnalyticsProduct[] = (lineItems.customItems || []).map(item => ({\n            product_id: item.id,\n            sku: item.sku,\n            price: item.listPrice,\n            quantity: item.quantity,\n            name: item.name,\n        }));\n\n        const giftCertificateItems: AnalyticsProduct[] = lineItems.giftCertificates.map(item => {\n            return {\n                product_id: item.id,\n                price: this.toShopperCurrency(item.amount),\n                name: item.name,\n                quantity: 1,\n            };\n        });\n\n        const physicalAndDigitalItems: AnalyticsProduct[] = [\n            ...lineItems.physicalItems,\n            ...lineItems.digitalItems,\n        ].map(item => {\n            let itemAttributes;\n\n            if (item.options && item.options.length) {\n                itemAttributes = item.options.map(option => `${option.name}:${option.value}`);\n                itemAttributes.sort();\n            }\n\n            return {\n                product_id: item.productId,\n                sku: item.sku,\n                price: item.salePrice,\n                image_url: item.imageUrl,\n                name: item.name,\n                quantity: item.quantity,\n                brand: itemsData[item.productId] ? itemsData[item.productId].brand : '',\n                category: itemsData[item.productId] ? itemsData[item.productId].category : '',\n                variant: (itemAttributes || []).join(', '),\n            };\n        });\n\n        return [\n            ...customItems,\n            ...physicalAndDigitalItems,\n            ...giftCertificateItems,\n        ];\n    }\n}\n\nexport interface AnalyticsProduct {\n    product_id: string | number;\n    price: number;\n    quantity: number;\n    name: string;\n    sku?: string;\n    image_url?: string;\n    category?: string;\n    variant?: string;\n    brand?: string;\n}\n\nexport interface ExtraItemsData {\n    [productId: string]: {\n        brand: string;\n        category: string;\n    };\n}\n","import StepTracker from './step-tracker';\n\nexport default class NoopStepTracker implements StepTracker {\n    trackCheckoutStarted(): void {\n        return;\n    }\n\n    trackOrderComplete(): void {\n        return;\n    }\n\n    trackStepViewed(): void {\n        return;\n    }\n\n    trackStepCompleted(): void {\n        return;\n    }\n}\n","import localStorageFallback from 'local-storage-fallback';\n\nimport { CheckoutService } from '../checkout';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\n\nimport AnalyticsStepTracker, { StepTrackerConfig } from './analytics-step-tracker';\nimport { isAnalyticsTrackerWindow } from './is-analytics-step-tracker-window';\nimport NoopStepTracker from './noop-step-tracker';\nimport StepTracker from './step-tracker';\n\n/**\n * Creates an instance of `StepTracker`.\n *\n * @remarks\n * ```js\n * const checkoutService = createCheckoutService();\n * await checkoutService.loadCheckout();\n * const stepTracker = createStepTracker(checkoutService);\n *\n * stepTracker.trackCheckoutStarted();\n * ```\n *\n * @param CheckoutService - An instance of CheckoutService\n * @param StepTrackerConfig - A step tracker config object\n * @returns an instance of `StepTracker`.\n */\nexport default function createStepTracker(\n    checkoutService: CheckoutService,\n    stepTrackerConfig?: StepTrackerConfig\n): StepTracker {\n    const { data } = checkoutService.getState();\n    const config = data.getConfig();\n\n    if (!config) {\n        throw new MissingDataError(MissingDataErrorType.MissingCheckoutConfig);\n    }\n\n    const { isAnalyticsEnabled } = config.checkoutSettings;\n\n    if (isAnalyticsEnabled && isAnalyticsTrackerWindow(window)) {\n        return new AnalyticsStepTracker(\n            checkoutService,\n            localStorageFallback,\n            window.analytics,\n            stepTrackerConfig\n        );\n    }\n\n    return new NoopStepTracker();\n}\n","import AnalyticsTrackerWindow from './analytics-tracker-window';\n\nexport function isAnalyticsTrackerWindow(window: Window): window is AnalyticsTrackerWindow {\n    return Boolean((window as AnalyticsTrackerWindow).analytics);\n}\n","export { createTimeout } from '@bigcommerce/request-sender';\n\nexport { createCheckoutService } from '../checkout';\nexport { createCheckoutButtonInitializer } from '../checkout-buttons';\nexport { embedCheckout } from '../embedded-checkout';\nexport { createEmbeddedCheckoutMessenger } from '../embedded-checkout/iframe-content';\nexport { createLanguageService } from '../locale';\nexport { createCurrencyService } from '../currency';\nexport { createStepTracker } from '../analytics';\n","\nexport interface ApproveDataOptions {\n    orderID?: string;\n}\n\nexport interface ClickDataOptions {\n    fundingSource: string;\n}\n\nexport interface ClickActions {\n    reject(): Promise<void>;\n    resolve(): Promise<void>;\n}\n\nexport interface OrderData {\n    orderId: string;\n    approveUrl: string;\n}\n\nexport interface OrderStatus {\n    status: 'APPROVED' | 'CREATED' | string;\n}\n\nexport enum StyleButtonLabel {\n    paypal = 'paypal',\n    checkout = 'checkout',\n    buynow = 'buynow',\n    pay = 'pay',\n    installment = 'installment',\n}\n\nexport enum StyleButtonLayout {\n    vertical = 'vertical',\n    horizontal = 'horizontal',\n}\n\nexport enum StyleButtonColor {\n    gold = 'gold',\n    blue = 'blue',\n    silver = 'silver',\n    black = 'black',\n    white = 'white',\n}\n\nexport enum StyleButtonShape {\n    pill = 'pill',\n    rect = 'rect' ,\n}\n\nexport interface PaypalButtonStyleOptions {\n    layout?: StyleButtonLayout;\n    color?: StyleButtonColor;\n    shape?: StyleButtonShape;\n    height?: 25 | 26 | 27 | 28 | 29 | 30 | 31 | 32 | 33 | 34 | 35 | 36 | 37 | 38 | 39 | 40 | 41 | 42 | 43 | 44 | 45 | 46 | 47 | 48 | 49 | 50 | 51 | 52 | 53 | 54 | 55;\n    label?: StyleButtonLabel;\n    tagline?: boolean;\n}\n\nexport interface ButtonsOptions {\n    style?: PaypalButtonStyleOptions;\n    fundingSource?: string;\n    createOrder?(): Promise<string>;\n    onApprove?(data: ApproveDataOptions): void;\n    onClick?(data: ClickDataOptions, actions: ClickActions): void;\n    onCancel?(): void;\n    onError?(error: Error): void;\n}\n\nexport interface PaypalFieldsStyleOptions {\n    base?: {\n        backgroundColor?: string;\n        color?: string;\n        fontSize?: string;\n        fontFamily?: string;\n        lineHeight?: string;\n        letterSpacing?: string;\n    };\n    input?: {\n        backgroundColor?: string;\n        fontSize?: string;\n        color?: string;\n        borderColor?: string;\n        borderRadius?: string;\n        borderWidth?: string;\n        padding?: string;\n    };\n    invalid?: {\n        color?: string;\n    };\n    active?: {\n        color?: string;\n    };\n}\n\nexport interface FieldsOptions {\n    style?: PaypalFieldsStyleOptions;\n    fundingSource: string;\n    fields: { name?: { value?: string }; email?: { value?: string } };\n}\n\nexport interface MessagesOptions {\n    amount: number;\n    placement: string;\n    style?: MessagesStyleOptions;\n    fundingSource?: string;\n}\n\nexport interface MessagesStyleOptions {\n    layout?: string;\n}\n\nexport interface PaypalCommerceHostedFieldOption {\n    selector: string;\n    placeholder?: string;\n}\n\nexport interface PaypalCommerceHostedFieldsRenderOptions {\n    fields?: {\n        number?: PaypalCommerceHostedFieldOption;\n        cvv?: PaypalCommerceHostedFieldOption;\n        expirationDate?: PaypalCommerceHostedFieldOption;\n    };\n    paymentsSDK?: boolean;\n    styles?: {\n        input?: { [key: string]: string };\n        '.invalid'?: { [key: string]: string };\n        '.valid'?: { [key: string]: string };\n        ':focus'?: { [key: string]: string };\n    };\n    createOrder(): Promise<string>;\n}\n\nexport interface PaypalCommerceHostedFieldsSubmitOptions {\n    contingencies?: Array<'3D_SECURE'>;\n    cardholderName?: string;\n}\n\nexport interface PaypalCommerceHostedFieldsApprove {\n    orderId: string;\n    liabilityShift: 'POSSIBLE' | 'NO' | 'UNKNOWN';\n}\n\nexport interface PaypalCommerceHostedFields {\n    submit(options?: PaypalCommerceHostedFieldsSubmitOptions): PaypalCommerceHostedFieldsApprove;\n    getState(): PaypalCommerceHostedFieldsState;\n    on(eventName: string, callback: (event: PaypalCommerceHostedFieldsState) => void): void;\n}\n\nexport interface PaypalCommerceHostedFieldsState {\n    cards: PaypalCommerceHostedFieldsCard[];\n    emittedBy: string;\n    fields: {\n        number?: PaypalCommerceHostedFieldsFieldData;\n        expirationDate?: PaypalCommerceHostedFieldsFieldData;\n        expirationMonth?: PaypalCommerceHostedFieldsFieldData;\n        expirationYear?: PaypalCommerceHostedFieldsFieldData;\n        cvv?: PaypalCommerceHostedFieldsFieldData;\n        postalCode?: PaypalCommerceHostedFieldsFieldData;\n    };\n}\n\nexport interface PaypalCommerceHostedFieldsCard {\n    type: string;\n    niceType: string;\n    code: { name: string; size: number };\n}\n\nexport interface PaypalCommerceHostedFieldsFieldData {\n    container: HTMLElement;\n    isFocused: boolean;\n    isEmpty: boolean;\n    isPotentiallyValid: boolean;\n    isValid: boolean;\n}\n\nexport interface PaypalCommerceButtons {\n    render(id: string): void;\n    close(): void;\n    isEligible(): boolean;\n}\n\nexport interface PaypalCommerceFields {\n    render(id: string): void;\n}\n\nexport interface PaypalCommerceMessages {\n    render(id: string): void;\n}\n\nexport interface PaypalCommerceSDKFunding {\n    PAYPAL: string;\n    CREDIT: string;\n    PAYLATER: string;\n    BANCONTACT: string;\n    GIROPAY: string;\n    P24: string;\n    EPS: string;\n    IDEAL: string;\n    MYBANK: string;\n    SOFORT: string;\n    BLIK: string;\n    TRUSTLY: string;\n    VERKKOPANKKI: string;\n}\n\nexport interface PaypalCommerceSDK {\n    FUNDING: PaypalCommerceSDKFunding;\n    HostedFields: {\n        isEligible(): boolean;\n        render(data: PaypalCommerceHostedFieldsRenderOptions): Promise<PaypalCommerceHostedFields>;\n    };\n    Buttons(params: ButtonsOptions): PaypalCommerceButtons;\n    Fields(params: FieldsOptions): PaypalCommerceFields;\n    Messages(params: MessagesOptions): PaypalCommerceMessages;\n}\n\nexport interface PaypalCommerceHostWindow extends Window {\n    paypal?: PaypalCommerceSDK;\n    paypalLoadScript?(options: PaypalCommerceScriptParams): Promise<{ paypal: PaypalCommerceSDK }>;\n}\n\nexport interface PaypalCommerceInitializationData {\n    clientId: string;\n    merchantId?: string;\n    buyerCountry?: string;\n    isDeveloperModeApplicable?: boolean;\n    intent?: 'capture' | 'authorize';\n    isPayPalCreditAvailable?: boolean;\n    isProgressiveOnboardingAvailable?: boolean;\n    clientToken?: string;\n    attributionId?: string;\n}\n\nexport type DisableFundingType = Array<'credit' | 'card'>;\n\nexport type ComponentsScriptType = Array<'buttons' | 'messages' | 'hosted-fields' | 'fields'>;\n\nexport interface PaypalCommerceScriptParams  {\n    'client-id': string;\n    'merchant-id'?: string;\n    'buyer-country'?: string;\n    'disable-funding'?: DisableFundingType;\n    'data-client-token'?: string;\n    'data-partner-attribution-id'?: string;\n    currency?: string;\n    commit?: boolean;\n    intent?: 'capture' | 'authorize';\n    components?: ComponentsScriptType;\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { InvalidArgumentError } from '../../../common/error/errors';\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { PaypalCommerceHostWindow, PaypalCommerceScriptParams, PaypalCommerceSDK } from './paypal-commerce-sdk';\n\nexport default class PaypalCommerceScriptLoader {\n    private _window: PaypalCommerceHostWindow;\n\n    constructor(\n        private _scriptLoader: ScriptLoader\n    ) {\n        this._window = window;\n    }\n\n    async loadPaypalCommerce(params: PaypalCommerceScriptParams, isProgressiveOnboardingAvailable?: boolean): Promise<PaypalCommerceSDK> {\n        this._validateParams(params, isProgressiveOnboardingAvailable);\n\n        if (!this._window.paypalLoadScript) {\n            const scriptSrc = 'https://unpkg.com/@paypal/paypal-js@1.0.2/dist/paypal.browser.min.js';\n\n            await this._scriptLoader.loadScript(scriptSrc, {async: true, attributes: {}});\n\n            if (!this._window.paypalLoadScript) {\n                throw new PaymentMethodClientUnavailableError();\n            }\n        }\n\n        await this._window.paypalLoadScript(params);\n\n        if (!this._window.paypal) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.paypal;\n    }\n\n    _validateParams(options: PaypalCommerceScriptParams, isProgressiveOnboardingAvailable?: boolean): void {\n        const CLIENT_ID = 'client-id';\n        const MERCHANT_ID = 'merchant-id';\n        let param;\n\n        if (!options) {\n            param = 'options';\n        } else if (!options[CLIENT_ID]) {\n            param = CLIENT_ID;\n        } else if (!options[MERCHANT_ID] && !isProgressiveOnboardingAvailable) {\n            param = MERCHANT_ID;\n        }\n\n        if (param) {\n            throw new InvalidArgumentError(`Unable to proceed because \"${param}\" argument in PayPal script is not provided.`);\n        }\n    }\n}\n","import { isNil, omitBy } from 'lodash';\n\nimport { NotImplementedError, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport PaymentStrategyType from '../../payment-strategy-type';\n\nimport { ButtonsOptions, FieldsOptions, ParamsForProvider, PaypalButtonStyleOptions, PaypalCommerceButtons, PaypalCommerceFields, PaypalCommerceHostedFields, PaypalCommerceHostedFieldsApprove, PaypalCommerceHostedFieldsRenderOptions, PaypalCommerceHostedFieldsState, PaypalCommerceHostedFieldsSubmitOptions, PaypalCommerceMessages, PaypalCommerceRequestSender, PaypalCommerceScriptLoader, PaypalCommerceScriptParams, PaypalCommerceSDK, PaypalCommerceSDKFunding, PaypalFieldsStyleOptions, StyleButtonColor, StyleButtonLabel, StyleButtonLayout, StyleButtonShape } from './index';\n\nexport interface OptionalParamsRenderButtons {\n    paramsForProvider?: ParamsForProvider;\n    fundingKey?: keyof PaypalCommerceSDKFunding;\n    onRenderButton?(): void;\n}\n\nexport interface ParamsRenderHostedFields {\n    fields: PaypalCommerceHostedFieldsRenderOptions['fields'];\n    styles?: PaypalCommerceHostedFieldsRenderOptions['styles'];\n}\n\ninterface EventsHostedFields {\n    blur?(event: PaypalCommerceHostedFieldsState): void;\n    focus?(event: PaypalCommerceHostedFieldsState): void;\n    cardTypeChange?(event: PaypalCommerceHostedFieldsState): void;\n    validityChange?(event: PaypalCommerceHostedFieldsState): void;\n    inputSubmitRequest?(event: PaypalCommerceHostedFieldsState): void;\n}\n\nexport interface RenderApmFieldsParams {\n    apmFieldsContainer: string;\n    fundingKey: keyof PaypalCommerceSDKFunding;\n    apmFieldsStyles?: PaypalFieldsStyleOptions;\n    fullName?: string;\n    email?: string;\n}\n\nexport default class PaypalCommercePaymentProcessor {\n    private _paypal?: PaypalCommerceSDK;\n    private _paypalButtons?: PaypalCommerceButtons;\n    private _paypalFields?: PaypalCommerceFields;\n    private _paypalMessages?: PaypalCommerceMessages;\n    private _hostedFields?: PaypalCommerceHostedFields;\n    private _fundingSource?: string;\n    private _orderId?: string;\n    private _gatewayId?: string;\n\n    constructor(\n        private _paypalScriptLoader: PaypalCommerceScriptLoader,\n        private _paypalCommerceRequestSender: PaypalCommerceRequestSender\n    ) {}\n\n    async initialize(paramsScript: PaypalCommerceScriptParams, isProgressiveOnboardingAvailable?: boolean, gatewayId?: string): Promise<PaypalCommerceSDK> {\n        this._paypal = await this._paypalScriptLoader.loadPaypalCommerce(paramsScript, isProgressiveOnboardingAvailable);\n        this._gatewayId = gatewayId;\n\n        return this._paypal;\n    }\n\n    renderButtons(cartId: string, container: string, params: ButtonsOptions = {}, optionalParams: OptionalParamsRenderButtons = {}): PaypalCommerceButtons {\n        if (!this._paypal || !this._paypal.Buttons) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        const { paramsForProvider, fundingKey, onRenderButton } = optionalParams;\n\n        const buttonParams: ButtonsOptions = {\n            ...params,\n            createOrder: () => this._setupPayment(cartId, paramsForProvider),\n\n            onClick: async (data, actions) => {\n                this._fundingSource = data.fundingSource;\n\n                return params.onClick?.(data, actions);\n            },\n        };\n\n        if (params.style) {\n            buttonParams.style = this._validateStyleParams(params.style);\n        }\n\n        if (fundingKey) {\n            this._fundingSource = this._paypal.FUNDING[fundingKey];\n            buttonParams.fundingSource = this._fundingSource;\n        }\n\n        this._paypalButtons = this._paypal.Buttons(buttonParams);\n\n        if (!this._paypalButtons.isEligible()) {\n            this._processNotEligible(buttonParams, fundingKey);\n        }\n\n        onRenderButton?.();\n\n        this._paypalButtons.render(container);\n\n        return this._paypalButtons;\n    }\n\n    renderFields({\n        apmFieldsContainer,\n        fundingKey,\n        apmFieldsStyles,\n        fullName,\n        email,\n    }: RenderApmFieldsParams): PaypalCommerceFields {\n        if (!this._paypal || !this._paypal.Fields) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        const fieldsParams: FieldsOptions = {\n            fundingSource: this._paypal.FUNDING[fundingKey],\n            style: apmFieldsStyles,\n            fields: {\n                name: {\n                    value: fullName,\n                },\n                email: {\n                    value: email,\n                },\n            },\n        };\n\n        this._paypalFields = this._paypal.Fields(fieldsParams);\n\n        const fieldContainerElement = document.querySelector(apmFieldsContainer);\n        if (fieldContainerElement) {\n            fieldContainerElement.innerHTML = '';\n        }\n\n        this._paypalFields.render(apmFieldsContainer);\n\n        return this._paypalFields;\n    }\n\n    getOrderId() {\n        return this._orderId;\n    }\n\n    renderMessages(cartTotal: number, container: string): PaypalCommerceMessages {\n        if (!this._paypal || !this._paypal.Messages) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n        this._paypalMessages = this._paypal.Messages({\n            amount: cartTotal,\n            placement: 'cart',\n            style: {\n                layout: 'text',\n            },\n        });\n        this._paypalMessages.render(container);\n\n        return this._paypalMessages;\n    }\n\n    async renderHostedFields(cartId: string, params: ParamsRenderHostedFields, events?: EventsHostedFields): Promise<void> {\n        if (!this._paypal || !this._paypal.HostedFields) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        const { fields, styles } = params;\n\n        if (!this._paypal.HostedFields.isEligible()) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        this._hostedFields = await this._paypal.HostedFields.render({\n            fields,\n            styles,\n            paymentsSDK: true,\n            createOrder: () => this._setupPayment(cartId, { isCreditCard: true }),\n        });\n\n        if (events) {\n            (Object.keys(events) as Array<keyof EventsHostedFields>).forEach(key => {\n                (this._hostedFields as PaypalCommerceHostedFields).on(key, events[key] as (event: PaypalCommerceHostedFieldsState) => void);\n            });\n        }\n    }\n\n    async submitHostedFields(options?: PaypalCommerceHostedFieldsSubmitOptions): Promise<PaypalCommerceHostedFieldsApprove> {\n        if (!this._hostedFields) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._hostedFields.submit(omitBy(options, isNil));\n    }\n\n    getHostedFieldsValidationState(): { isValid: boolean; fields: PaypalCommerceHostedFieldsState['fields'] } {\n        if (!this._hostedFields) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        const { fields } = this._hostedFields.getState();\n\n        const isValid = (Object.keys(fields) as Array<keyof PaypalCommerceHostedFieldsState['fields']>)\n            .every(key => fields[key]?.isValid);\n\n        return { isValid, fields };\n    }\n\n    deinitialize() {\n        this._paypalButtons?.close?.();\n        this._paypal = undefined;\n        this._paypalButtons = undefined;\n        this._fundingSource = undefined;\n        this._hostedFields = undefined;\n    }\n\n    private async _setupPayment(cartId: string, params: ParamsForProvider = {}): Promise<string> {\n        const paramsForProvider = { ...params, isCredit: this._fundingSource === 'credit' || this._fundingSource === 'paylater' };\n        const isAPM = this._gatewayId === PaymentStrategyType.PAYPAL_COMMERCE_ALTERNATIVE_METHODS;\n        const { orderId } = await this._paypalCommerceRequestSender.setupPayment(cartId, {...paramsForProvider, isAPM});\n        this._orderId = orderId;\n\n        return orderId;\n    }\n\n    private _validateStyleParams = (style: PaypalButtonStyleOptions): PaypalButtonStyleOptions  => {\n        const updatedStyle: PaypalButtonStyleOptions = { ...style };\n        const { label, color, layout, shape, height, tagline } = style;\n\n        if (label && !StyleButtonLabel[label]) {\n            delete updatedStyle.label;\n        }\n\n        if (layout && !StyleButtonLayout[layout]) {\n            delete updatedStyle.layout;\n        }\n\n        if (color && !StyleButtonColor[color]) {\n            delete updatedStyle.color;\n        }\n\n        if (shape && !StyleButtonShape[shape]) {\n            delete updatedStyle.shape;\n        }\n\n        if (typeof height === 'number') {\n            updatedStyle.height = height < 25\n                ? 25\n                : (height > 55 ? 55 : height);\n        } else {\n            delete updatedStyle.height;\n        }\n\n        if (typeof tagline !== 'boolean' || (tagline && updatedStyle.layout !== StyleButtonLayout[StyleButtonLayout.horizontal])) {\n            delete updatedStyle.tagline;\n        }\n\n        return updatedStyle;\n    };\n\n    private _processNotEligible(buttonParams: ButtonsOptions, fundingKey?: keyof PaypalCommerceSDKFunding): void {\n        if (fundingKey === this._paypal?.FUNDING.PAYLATER) {\n            buttonParams.fundingSource = this._paypal?.FUNDING.CREDIT;\n\n            this._paypalButtons = this._paypal?.Buttons(buttonParams);\n\n            if (this._paypalButtons?.isEligible()) {\n                return;\n            }\n        }\n\n        throw new NotImplementedError(`PayPal ${this._fundingSource || ''} is not available for your region. Please use PayPal Checkout instead.`);\n    }\n\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\nimport { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaypalCommercePaymentProcessor, PaypalCommerceRequestSender, PaypalCommerceScriptLoader } from './index';\n\nexport default function createPaypalCommercePaymentProcessor(scriptLoader: ScriptLoader, requestSender: RequestSender) {\n    const paypalScriptLoader = new PaypalCommerceScriptLoader(scriptLoader);\n    const paypalCommerceRequestSender = new PaypalCommerceRequestSender(requestSender);\n\n    return new PaypalCommercePaymentProcessor(paypalScriptLoader, paypalCommerceRequestSender);\n}\n","import { PaymentMethod } from '../..';\nimport { AmazonPayV2ButtonInitializeOptions } from '../../../checkout-buttons/strategies/amazon-pay-v2';\nimport { NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\n\nimport { AmazonPayV2ChangeActionType, AmazonPayV2SDK } from './amazon-pay-v2';\nimport AmazonPayV2ScriptLoader from './amazon-pay-v2-script-loader';\n\nexport default class AmazonPayV2PaymentProcessor {\n    private _amazonPayV2SDK?: AmazonPayV2SDK;\n\n    constructor(\n        private _amazonPayV2ScriptLoader: AmazonPayV2ScriptLoader\n    ) { }\n\n    async initialize(paymentMethod: PaymentMethod): Promise<void> {\n        this._amazonPayV2SDK = await this._amazonPayV2ScriptLoader.load(paymentMethod);\n    }\n\n    deinitialize(): Promise<void> {\n        this._amazonPayV2SDK = undefined;\n\n        return Promise.resolve();\n    }\n\n    bindButton(buttonId: string, sessionId: string, changeAction: AmazonPayV2ChangeActionType): void {\n        this._getAmazonPayV2SDK().Pay.bindChangeAction(`#${buttonId}`, {\n            amazonCheckoutSessionId: sessionId,\n            changeAction,\n        });\n    }\n\n    createButton(containerId: string, options: AmazonPayV2ButtonInitializeOptions): HTMLElement {\n        return this._getAmazonPayV2SDK().Pay.renderButton(containerId, options);\n    }\n\n    async signout(): Promise<void> {\n        if (this._amazonPayV2SDK) {\n            this._amazonPayV2SDK.Pay.signout();\n        }\n\n        return Promise.resolve();\n    }\n\n    private _getAmazonPayV2SDK(): AmazonPayV2SDK {\n        if (!this._amazonPayV2SDK) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._amazonPayV2SDK;\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\nimport PaymentMethod from '../../payment-method';\n\nimport { AmazonPayV2HostWindow, AmazonPayV2Regions, AmazonPayV2SDK } from './amazon-pay-v2';\n\nexport default class AmazonPayV2ScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: AmazonPayV2HostWindow = window\n    ) {}\n\n    async load(method: PaymentMethod): Promise<AmazonPayV2SDK> {\n        const {\n            initializationData: { region = 'us' } = {},\n        } = method;\n\n        const amazonPayV2Region  = (AmazonPayV2Regions as any)[region];\n\n        await this._scriptLoader.loadScript(`https://static-${amazonPayV2Region}.payments-amazon.com/checkout.js`);\n        if (!this._window.amazon) {\n            throw new PaymentMethodClientUnavailableError();\n        }\n\n        return this._window.amazon;\n    }\n}\n","import { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport AmazonPayV2PaymentProcessor from './amazon-pay-v2-payment-processor';\nimport AmazonPayV2ScriptLoader from './amazon-pay-v2-script-loader';\n\nexport default function createAmazonPayV2PaymentProcessor(): AmazonPayV2PaymentProcessor {\n    return new AmazonPayV2PaymentProcessor(\n        new AmazonPayV2ScriptLoader(getScriptLoader())\n    );\n}\n","import { RequestSender, Response } from '@bigcommerce/request-sender';\n\nimport { AddressRequestBody } from '../../../address';\nimport { BillingAddressActionCreator, BillingAddressUpdateRequestBody } from '../../../billing';\nimport { CheckoutStore, InternalCheckoutSelectors } from '../../../checkout';\nimport { MissingDataError, MissingDataErrorType, NotInitializedError, NotInitializedErrorType } from '../../../common/error/errors';\nimport { RemoteCheckoutSynchronizationError } from '../../../remote-checkout/errors';\nimport { ConsignmentActionCreator } from '../../../shipping';\nimport { PaymentMethodInvalidError } from '../../errors';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\n\nimport { ButtonColor, ButtonType, EnvironmentType, GooglePaymentData, GooglePayAddress, GooglePayClient, GooglePayInitializer, GooglePayPaymentDataRequestV2, GooglePaySDK, TokenizePayload } from './googlepay';\nimport GooglePayScriptLoader from './googlepay-script-loader';\n\nexport default class GooglePayPaymentProcessor {\n    private _googlePayClient?: GooglePayClient;\n    private _methodId?: string;\n    private _paymentDataRequest?: GooglePayPaymentDataRequestV2;\n\n    constructor(\n        private _store: CheckoutStore,\n        private _paymentMethodActionCreator: PaymentMethodActionCreator,\n        private _googlePayScriptLoader: GooglePayScriptLoader,\n        private _googlePayInitializer: GooglePayInitializer,\n        private _billingAddressActionCreator: BillingAddressActionCreator,\n        private _consignmentActionCreator: ConsignmentActionCreator,\n        private _requestSender: RequestSender\n    ) {}\n\n    initialize(methodId: string): Promise<void> {\n        this._methodId = methodId;\n\n        return this._configureWallet();\n    }\n\n    deinitialize(): Promise<void> {\n        return this._googlePayInitializer.teardown();\n    }\n\n    createButton(\n        onClick: (event: Event) => Promise<void>,\n        buttonType: ButtonType = ButtonType.Short,\n        buttonColor: ButtonColor = ButtonColor.Default\n    ): HTMLElement {\n        if (!this._googlePayClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._googlePayClient.createButton({\n            buttonColor,\n            buttonType,\n            onClick,\n        });\n    }\n\n    displayWallet(): Promise<GooglePaymentData> {\n        if (!this._googlePayClient) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._googlePayClient.loadPaymentData(this._getPaymentDataRequest());\n    }\n\n    handleSuccess(paymentData: GooglePaymentData): Promise<InternalCheckoutSelectors> {\n        return this._googlePayInitializer.parseResponse(paymentData)\n            .then(tokenizePayload => this._postForm(tokenizePayload))\n            .then(() => this._updateBillingAddress(paymentData));\n    }\n\n    updateShippingAddress(shippingAddress: GooglePayAddress): Promise<InternalCheckoutSelectors> {\n        return this._store.dispatch(\n            this._consignmentActionCreator.updateAddress(this._mapGooglePayAddressToShippingAddress(shippingAddress))\n        );\n    }\n\n    private _configureWallet(): Promise<void> {\n        const methodId = this._getMethodId();\n\n        return this._store.dispatch(this._paymentMethodActionCreator.loadPaymentMethod(methodId))\n            .then(state => {\n                const paymentMethod = state.paymentMethods.getPaymentMethod(methodId);\n                const checkout = state.checkout.getCheckout();\n                const hasShippingAddress = !!state.shippingAddress.getShippingAddress();\n\n                if (!paymentMethod) {\n                    throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n                }\n\n                if (!checkout) {\n                    throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n                }\n\n                const { testMode } = paymentMethod.config;\n\n                return Promise.all([\n                    this._googlePayScriptLoader.load(),\n                    this._googlePayInitializer.initialize(checkout, paymentMethod, hasShippingAddress),\n                ]).then(([googlePay, paymentDataRequest]) => {\n                    this._googlePayClient = this._getGooglePayClient(googlePay, testMode);\n                    this._paymentDataRequest = paymentDataRequest;\n\n                    return this._googlePayClient.isReadyToPay({\n                        allowedPaymentMethods: [\n                            {\n                                type: paymentDataRequest.allowedPaymentMethods[0].type,\n                                parameters: {\n                                    allowedAuthMethods: paymentDataRequest.allowedPaymentMethods[0].parameters.allowedAuthMethods,\n                                    allowedCardNetworks: paymentDataRequest.allowedPaymentMethods[0].parameters.allowedCardNetworks,\n                                },\n                            },\n                        ],\n                        apiVersion: paymentDataRequest.apiVersion,\n                        apiVersionMinor: paymentDataRequest.apiVersionMinor,\n                    }).then(response => {\n                        if (response.result) {\n                            return;\n                        }\n\n                        throw new PaymentMethodInvalidError();\n                    });\n                });\n            });\n    }\n\n    private _getCardInformation(cardInformation: { cardType: string; lastFour: string }) {\n        return {\n            type: cardInformation.cardType,\n            number: cardInformation.lastFour,\n        };\n    }\n\n    private _getPaymentDataRequest(): GooglePayPaymentDataRequestV2 {\n        if (!this._paymentDataRequest) {\n            throw new RemoteCheckoutSynchronizationError();\n        }\n\n        return this._paymentDataRequest;\n    }\n\n    private _getGooglePayClient(google: GooglePaySDK, testMode?: boolean): GooglePayClient {\n        if (testMode === undefined) {\n            throw new MissingDataError(MissingDataErrorType.MissingPaymentMethod);\n        }\n\n        const environment: EnvironmentType = testMode ? 'TEST' : 'PRODUCTION';\n\n        return new google.payments.api.PaymentsClient({ environment });\n    }\n\n    private _getMethodId(): string {\n        if (!this._methodId) {\n            throw new NotInitializedError(NotInitializedErrorType.PaymentNotInitialized);\n        }\n\n        return this._methodId;\n    }\n\n    private _mapGooglePayAddressToBillingAddress(paymentData: GooglePaymentData, id: string): BillingAddressUpdateRequestBody {\n        const firstName = paymentData.paymentMethodData.info.billingAddress.name.split(' ').slice(0, -1).join(' ');\n        const address1 =  paymentData.paymentMethodData.info.billingAddress.address1;\n        const city =  paymentData.paymentMethodData.info.billingAddress.locality;\n        const postalCode =  paymentData.paymentMethodData.info.billingAddress.postalCode;\n        const countryCode =  paymentData.paymentMethodData.info.billingAddress.countryCode;\n\n        if (!firstName || !address1 || !city || !postalCode || !countryCode) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        return {\n            id,\n            firstName,\n            lastName: paymentData.paymentMethodData.info.billingAddress.name.split(' ').slice(-1).join(' '),\n            company: paymentData.paymentMethodData.info.billingAddress.companyName,\n            address1,\n            address2: paymentData.paymentMethodData.info.billingAddress.address2 + paymentData.paymentMethodData.info.billingAddress.address3,\n            city,\n            stateOrProvince: paymentData.paymentMethodData.info.billingAddress.administrativeArea,\n            stateOrProvinceCode: paymentData.paymentMethodData.info.billingAddress.administrativeArea,\n            postalCode,\n            countryCode,\n            phone: paymentData.paymentMethodData.info.billingAddress.phoneNumber,\n            customFields: [],\n            email: paymentData.email,\n        };\n    }\n\n    private _mapGooglePayAddressToShippingAddress(address: GooglePayAddress): AddressRequestBody {\n        return {\n            firstName: address.name.split(' ').slice(0, -1).join(' '),\n            lastName: address.name.split(' ').slice(-1).join(' '),\n            company: address.companyName,\n            address1: address.address1,\n            address2: address.address2 + address.address3,\n            city: address.locality,\n            stateOrProvince: address.administrativeArea,\n            stateOrProvinceCode: address.administrativeArea,\n            postalCode: address.postalCode,\n            countryCode: address.countryCode,\n            phone: address.phoneNumber,\n            customFields: [],\n        };\n    }\n\n    private _postForm(postPaymentData: TokenizePayload): Promise<Response<void>> {\n        const cardInformation = postPaymentData.details;\n\n        return this._requestSender.post('/checkout.php', {\n            headers: {\n                Accept: 'text/html',\n                'Content-Type': 'application/x-www-form-urlencoded',\n            },\n            body: {\n                payment_type: postPaymentData.type,\n                nonce: postPaymentData.nonce,\n                provider: this._getMethodId(),\n                action: 'set_external_checkout',\n                card_information: this._getCardInformation(cardInformation),\n            },\n        });\n    }\n\n    private _updateBillingAddress(paymentData: GooglePaymentData): Promise<InternalCheckoutSelectors> {\n        const remoteBillingAddress = this._store.getState().billingAddress.getBillingAddress();\n\n        if (!remoteBillingAddress) {\n            throw new MissingDataError(MissingDataErrorType.MissingBillingAddress);\n        }\n\n        const googlePayAddressMapped = this._mapGooglePayAddressToBillingAddress(paymentData, remoteBillingAddress.id);\n\n        return this._store.dispatch(\n            this._billingAddressActionCreator.updateAddress(googlePayAddressMapped)\n        );\n    }\n}\n","import { ScriptLoader } from '@bigcommerce/script-loader';\n\nimport { PaymentMethodClientUnavailableError } from '../../errors';\n\nimport { GooglePayHostWindow, GooglePaySDK } from './googlepay';\n\nexport default class GooglePayScriptLoader {\n    constructor(\n        private _scriptLoader: ScriptLoader,\n        private _window: GooglePayHostWindow = window\n    ) {}\n\n    load(): Promise<GooglePaySDK> {\n        return this._scriptLoader\n            .loadScript('https://pay.google.com/gp/p/js/pay.js')\n            .then(() => {\n                if (!this._window.google) {\n                    throw new PaymentMethodClientUnavailableError();\n                }\n\n                return this._window.google;\n            });\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\nimport { getScriptLoader } from '@bigcommerce/script-loader';\n\nimport { BillingAddressActionCreator, BillingAddressRequestSender } from '../../../billing';\nimport { CheckoutRequestSender, CheckoutStore } from '../../../checkout';\nimport { ConsignmentActionCreator, ConsignmentRequestSender } from '../../../shipping';\nimport { SubscriptionsActionCreator, SubscriptionsRequestSender } from '../../../subscription';\nimport PaymentMethodActionCreator from '../../payment-method-action-creator';\nimport PaymentMethodRequestSender from '../../payment-method-request-sender';\n\nimport { GooglePayInitializer } from './googlepay';\nimport GooglePayPaymentProcessor from './googlepay-payment-processor';\nimport GooglePayScriptLoader from './googlepay-script-loader';\n\nexport default function createGooglePayPaymentProcessor(store: CheckoutStore, initializer: GooglePayInitializer): GooglePayPaymentProcessor {\n    const requestSender = createRequestSender();\n    const scriptLoader = getScriptLoader();\n\n    return new GooglePayPaymentProcessor(\n        store,\n        new PaymentMethodActionCreator(\n            new PaymentMethodRequestSender(requestSender)\n        ),\n        new GooglePayScriptLoader(scriptLoader),\n        initializer,\n        new BillingAddressActionCreator(\n            new BillingAddressRequestSender(requestSender),\n            new SubscriptionsActionCreator(\n                new SubscriptionsRequestSender(requestSender)\n            )\n        ),\n        new ConsignmentActionCreator(\n            new ConsignmentRequestSender(requestSender),\n            new CheckoutRequestSender(requestSender)\n        ),\n        requestSender\n    );\n}\n","import { RequestError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when the subscriptions fails to be updated\n */\nexport default class UpdateSubscriptionsError extends RequestError {\n    constructor(response?: Response) {\n        super(response);\n\n        this.name = 'UpdateSubscriptionsError';\n        this.type = 'update_subscriptions';\n    }\n}\n","import { createAction } from '@bigcommerce/data-store';\nimport { concat, defer, of, Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { throwErrorAction } from '../common/error';\nimport { RequestOptions } from '../common/http-request';\nimport { Subscriptions, SubscriptionsActionType, SubscriptionsRequestSender, UpdateSubscriptionsAction } from '../subscription';\n\nimport { UpdateSubscriptionsError } from './errors';\n\nexport default class SubscriptionsActionCreator {\n    constructor(\n        private _subscriptionsRequestSender: SubscriptionsRequestSender\n    ) {}\n\n    updateSubscriptions(\n        subscriptions: Subscriptions,\n        options?: RequestOptions\n    ): Observable<UpdateSubscriptionsAction> {\n        return concat(\n            of(createAction(SubscriptionsActionType.UpdateSubscriptionsRequested)),\n            defer(async () => {\n                const { body } = await this._subscriptionsRequestSender.updateSubscriptions(subscriptions, options);\n\n                return createAction(SubscriptionsActionType.UpdateSubscriptionsSucceeded, body);\n            })\n        ).pipe(\n            catchError(error => throwErrorAction(\n                SubscriptionsActionType.UpdateSubscriptionsFailed,\n                new UpdateSubscriptionsError(error)\n            ))\n        );\n    }\n}\n","import { StandardError } from '../../common/error/errors';\n\n/**\n * This error should be thrown when a shopper tries to sign in as a guest but\n * they are already signed in as a registered customer.\n */\nexport default class UnableToContinueAsGuestError extends StandardError {\n    constructor(message?: string) {\n        super(message || 'Unable to continue as a guest because the customer is already signed in.');\n\n        this.name = 'UnableToContinueAsGuestError';\n        this.type = 'unable_to_continue_as_guest';\n    }\n}\n","import { createAction, createErrorAction, ThunkAction } from '@bigcommerce/data-store';\nimport { Response } from '@bigcommerce/request-sender';\nimport { concat, defer, empty, merge, of, Observable, Observer } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { Checkout, InternalCheckoutSelectors } from '../checkout';\nimport { throwErrorAction } from '../common/error';\nimport { MissingDataError, MissingDataErrorType } from '../common/error/errors';\nimport { RequestOptions } from '../common/http-request';\nimport { GuestCredentials } from '../customer';\nimport { SubscriptionsActionCreator, UpdateSubscriptionsAction } from '../subscription';\n\nimport { BillingAddressRequestSender } from '.';\nimport { BillingAddressUpdateRequestBody } from './billing-address';\nimport { BillingAddressActionType, ContinueAsGuestAction, UpdateBillingAddressAction } from './billing-address-actions';\nimport { UnableToContinueAsGuestError } from './errors';\n\nexport default class BillingAddressActionCreator {\n    constructor(\n        private _requestSender: BillingAddressRequestSender,\n        private _subscriptionActionCreator: SubscriptionsActionCreator\n    ) {}\n\n    continueAsGuest(\n        credentials: GuestCredentials,\n        options?: RequestOptions\n    ): ThunkAction<ContinueAsGuestAction | UpdateSubscriptionsAction, InternalCheckoutSelectors> {\n        return store => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            const customer = state.customer.getCustomer();\n\n            if (customer && !customer.isGuest) {\n                throw new UnableToContinueAsGuestError();\n            }\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            let billingAddressRequestBody: Partial<BillingAddressUpdateRequestBody>;\n\n            if (!billingAddress) {\n                billingAddressRequestBody = credentials;\n            } else {\n                const { country, ...existingBillingAddressRequestBody } = billingAddress;\n\n                billingAddressRequestBody = {\n                    ...existingBillingAddressRequestBody,\n                    ...credentials,\n                };\n            }\n\n            return merge(\n                concat(\n                    of(createAction(BillingAddressActionType.ContinueAsGuestRequested)),\n                    defer(async () => {\n                        const { body } = await this._createOrUpdateBillingAddress(\n                            checkout.id,\n                            billingAddressRequestBody,\n                            options\n                        );\n\n                        return createAction(BillingAddressActionType.ContinueAsGuestSucceeded, body);\n                    })\n                ).pipe(\n                    catchError(error => throwErrorAction(BillingAddressActionType.ContinueAsGuestFailed, error))\n                ),\n                this._updateCustomerConsent(credentials, options)\n            );\n        };\n    }\n\n    updateAddress(\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): ThunkAction<UpdateBillingAddressAction, InternalCheckoutSelectors> {\n        return store => Observable.create((observer: Observer<UpdateBillingAddressAction>) => {\n            const state = store.getState();\n            const checkout = state.checkout.getCheckout();\n\n            if (!checkout) {\n                throw new MissingDataError(MissingDataErrorType.MissingCheckout);\n            }\n\n            observer.next(createAction(BillingAddressActionType.UpdateBillingAddressRequested));\n\n            const billingAddress = state.billingAddress.getBillingAddress();\n\n            // If email is not present in the address provided by the client, then\n            // fall back to the stored email as it could have been set separately\n            // using a convenience method. We can't rely on billingAddress having\n            // an ID to consider that there's a preexisting email, as billingAddress\n            // object from Order doesn't have an ID.\n            const billingAddressRequestBody = {\n                ...address,\n                email: typeof address.email === 'undefined' && billingAddress ? billingAddress.email : address.email,\n            };\n\n            if (billingAddress && billingAddress.id) {\n                billingAddressRequestBody.id = billingAddress.id;\n            }\n\n            this._createOrUpdateBillingAddress(checkout.id, billingAddressRequestBody, options)\n                .then(({ body }) => {\n                    observer.next(createAction(BillingAddressActionType.UpdateBillingAddressSucceeded, body));\n                    observer.complete();\n                })\n                .catch(response => {\n                    observer.error(createErrorAction(BillingAddressActionType.UpdateBillingAddressFailed, response));\n                });\n        });\n    }\n\n    private _updateCustomerConsent(\n        {\n            email,\n            acceptsAbandonedCartEmails,\n            acceptsMarketingNewsletter,\n        }: GuestCredentials,\n        options?: RequestOptions\n    ): Observable<UpdateSubscriptionsAction> {\n        if ((acceptsAbandonedCartEmails === undefined || acceptsAbandonedCartEmails === null) &&\n            (acceptsMarketingNewsletter === undefined || acceptsMarketingNewsletter === null)) {\n            return empty();\n        }\n\n        return this._subscriptionActionCreator.updateSubscriptions({\n            email,\n            acceptsMarketingNewsletter: acceptsMarketingNewsletter || false,\n            acceptsAbandonedCartEmails: acceptsAbandonedCartEmails || false,\n        }, options);\n    }\n\n    private _createOrUpdateBillingAddress(\n        checkoutId: string,\n        address: Partial<BillingAddressUpdateRequestBody>,\n        options?: RequestOptions\n    ): Promise<Response<Checkout>> {\n        if (!address.id) {\n            return this._requestSender.createAddress(checkoutId, address, options);\n        }\n\n        return this._requestSender.updateAddress(checkoutId, address, options);\n    }\n}\n","import { Cart } from '../cart';\n\nimport getLineItemsCount from './getLineItemsCount';\n\nexport default function getShippableItemsCount(cart: Cart): number {\n    return getLineItemsCount(cart.lineItems.physicalItems.filter(item => !item.addedByPromotion));\n}\n","import { reduce } from 'lodash';\n\nimport { LineItem } from '../cart';\n\nexport default function getLineItemsCount(lineItems: LineItem[]): number {\n    return reduce(lineItems, (total, item) => total + item.quantity, 0);\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\n\n/**\n * The same Observable instance returned by any call to {@link empty} without a\n * `scheduler`. It is preferrable to use this over `empty()`.\n */\nexport const EMPTY = new Observable<never>(subscriber => subscriber.complete());\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits a complete notification.\n *\n * <span class=\"informal\">Just emits 'complete', and nothing else.\n * </span>\n *\n * ![](empty.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the complete notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then complete\n * ```ts\n * import { empty } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * const result = empty().pipe(startWith(7));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * ### Map and flatten only odd numbers to the sequence 'a', 'b', 'c'\n * ```ts\n * import { empty, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * const interval$ = interval(1000);\n * const result = interval$.pipe(\n *   mergeMap(x => x % 2 === 1 ? of('a', 'b', 'c') : empty()),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following to the console:\n * // x is equal to the count on the interval eg(0,1,2,3,...)\n * // x will occur every 1000ms\n * // if x % 2 is equal to 1 print abc\n * // if x % 2 is not equal to 1 nothing will be output\n * ```\n *\n * @see {@link Observable}\n * @see {@link never}\n * @see {@link of}\n * @see {@link throwError}\n *\n * @param scheduler A {@link SchedulerLike} to use for scheduling\n * the emission of the complete notification.\n * @return An \"empty\" Observable: emits only the complete\n * notification.\n * @deprecated Deprecated in favor of using {@link EMPTY} constant, or {@link scheduled} (e.g. `scheduled([], scheduler)`)\n */\nexport function empty(scheduler?: SchedulerLike) {\n  return scheduler ? emptyScheduled(scheduler) : EMPTY;\n}\n\nfunction emptyScheduled(scheduler: SchedulerLike) {\n  return new Observable<never>(subscriber => scheduler.schedule(() => subscriber.complete()));\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { Observable } from '../Observable';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { scheduled } from '../scheduled/scheduled';\n\nexport function from<O extends ObservableInput<any>>(input: O): Observable<ObservedValueOf<O>>;\n/** @deprecated use {@link scheduled} instead. */\nexport function from<O extends ObservableInput<any>>(input: O, scheduler: SchedulerLike): Observable<ObservedValueOf<O>>;\n\n/**\n * Creates an Observable from an Array, an array-like object, a Promise, an iterable object, or an Observable-like object.\n *\n * <span class=\"informal\">Converts almost anything to an Observable.</span>\n *\n * ![](from.png)\n *\n * `from` converts various other objects and data types into Observables. It also converts a Promise, an array-like, or an\n * <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols#iterable\" target=\"_blank\">iterable</a>\n * object into an Observable that emits the items in that promise, array, or iterable. A String, in this context, is treated\n * as an array of characters. Observable-like objects (contains a function named with the ES2015 Symbol for Observable) can also be\n * converted through this operator.\n *\n * ## Examples\n *\n * ### Converts an array to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n *\n * const array = [10, 20, 30];\n * const result = from(array);\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 10\n * // 20\n * // 30\n * ```\n *\n * ---\n *\n * ### Convert an infinite iterable (from a generator) to an Observable\n *\n * ```ts\n * import { from } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * function* generateDoubles(seed) {\n *    let i = seed;\n *    while (true) {\n *      yield i;\n *      i = 2 * i; // double it\n *    }\n * }\n *\n * const iterator = generateDoubles(3);\n * const result = from(iterator).pipe(take(10));\n *\n * result.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 3\n * // 6\n * // 12\n * // 24\n * // 48\n * // 96\n * // 192\n * // 384\n * // 768\n * // 1536\n * ```\n *\n * ---\n *\n * ### With async scheduler\n *\n * ```ts\n * import { from, asyncScheduler } from 'rxjs';\n *\n * console.log('start');\n *\n * const array = [10, 20, 30];\n * const result = from(array, asyncScheduler);\n *\n * result.subscribe(x => console.log(x));\n *\n * console.log('end');\n *\n * // Logs:\n * // start\n * // end\n * // 10\n * // 20\n * // 30\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link fromEventPattern}\n *\n * @param {ObservableInput<T>} A subscription object, a Promise, an Observable-like,\n * an Array, an iterable, or an array-like object to be converted.\n * @param {SchedulerLike} An optional {@link SchedulerLike} on which to schedule the emission of values.\n * @return {Observable<T>}\n * @name from\n * @owner Observable\n */\nexport function from<T>(input: ObservableInput<T>, scheduler?: SchedulerLike): Observable<T> {\n  if (!scheduler) {\n    if (input instanceof Observable) {\n      return input;\n    }\n    return new Observable<T>(subscribeTo(input));\n  } else {\n    return scheduled(input, scheduler);\n  }\n}\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { Subscriber } from './Subscriber';\nimport { InnerSubscriber } from './InnerSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class OuterSubscriber<T, R> extends Subscriber<T> {\n  notifyNext(outerValue: T, innerValue: R,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next(innerValue);\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this.destination.error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    this.destination.complete();\n  }\n}\n","import { Subscription } from '../Subscription';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Subscriber } from '../Subscriber';\nimport { subscribeTo } from './subscribeTo';\nimport { Observable } from '../Observable';\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue: undefined,\n  outerIndex: undefined,\n  innerSubscriber: InnerSubscriber<T, R>\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number\n): Subscription | undefined;\n\nexport function subscribeToResult<T, R>(\n  outerSubscriber: OuterSubscriber<T, R>,\n  result: any,\n  outerValue?: T,\n  outerIndex?: number,\n  innerSubscriber: Subscriber<R> = new InnerSubscriber(outerSubscriber, outerValue, outerIndex)\n): Subscription | undefined {\n  if (innerSubscriber.closed) {\n    return undefined;\n  }\n  if (result instanceof Observable) {\n    return result.subscribe(innerSubscriber);\n  }\n  return subscribeTo(result)(innerSubscriber) as Subscription;\n}\n","/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function filter<T, S extends T>(predicate: (value: T, index: number) => value is S,\n                                       thisArg?: any): OperatorFunction<T, S>;\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Filter items emitted by the source Observable by only emitting those that\n * satisfy a specified predicate.\n *\n * <span class=\"informal\">Like\n * [Array.prototype.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\n * it only emits a value from the source if it passes a criterion function.</span>\n *\n * ![](filter.png)\n *\n * Similar to the well-known `Array.prototype.filter` method, this operator\n * takes values from the source Observable, passes them through a `predicate`\n * function and only emits those values that yielded `true`.\n *\n * ## Example\n * Emit only click events whose target was a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { filter } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksOnDivs = clicks.pipe(filter(ev => ev.target.tagName === 'DIV'));\n * clicksOnDivs.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n * @see {@link ignoreElements}\n * @see {@link partition}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted, if `false` the value is not passed to the output\n * Observable. The `index` parameter is the number `i` for the i-th source\n * emission that has happened since the subscription, starting from the number\n * `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of values from the source that were\n * allowed by the `predicate` function.\n * @method filter\n * @owner Observable\n */\nexport function filter<T>(predicate: (value: T, index: number) => boolean,\n                          thisArg?: any): MonoTypeOperatorFunction<T> {\n  return function filterOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new FilterOperator(predicate, thisArg));\n  };\n}\n\nclass FilterOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean,\n              private thisArg?: any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FilterSubscriber<T> extends Subscriber<T> {\n\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean,\n              private thisArg: any) {\n    super(destination);\n  }\n\n  // the try catch block below is left specifically for\n  // optimization and perf reasons. a tryCatcher is not necessary here.\n  protected _next(value: T) {\n    let result: any;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.count++);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    if (result) {\n      this.destination.next(value);\n    }\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { ConnectableObservable, connectableObservableDescriptor } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservedValueOf, ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function multicast<T>(subject: Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(subject: Subject<T>, selector: (shared: Observable<T>) => O): UnaryFunction<Observable<T>, ConnectableObservable<ObservedValueOf<O>>>;\nexport function multicast<T>(subjectFactory: (this: Observable<T>) => Subject<T>): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function multicast<T, O extends ObservableInput<any>>(SubjectFactory: (this: Observable<T>) => Subject<T>, selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the results of invoking a specified selector on items\n * emitted by a ConnectableObservable that shares a single subscription to the underlying stream.\n *\n * ![](multicast.png)\n *\n * @param {Function|Subject} subjectOrSubjectFactory - Factory function to create an intermediate subject through\n * which the source sequence's elements will be multicast to the selector function\n * or Subject to push source elements into.\n * @param {Function} [selector] - Optional selector function that can use the multicasted source stream\n * as many times as needed, without causing multiple subscriptions to the source stream.\n * Subscribers to the given source will receive all notifications of the source from the\n * time of the subscription forward.\n * @return {Observable} An Observable that emits the results of invoking the selector\n * on the items emitted by a `ConnectableObservable` that shares a single subscription to\n * the underlying stream.\n * @method multicast\n * @owner Observable\n */\nexport function multicast<T, R>(subjectOrSubjectFactory: Subject<T> | (() => Subject<T>),\n                                selector?: (source: Observable<T>) => Observable<R>): OperatorFunction<T, R> {\n  return function multicastOperatorFunction(source: Observable<T>): Observable<R> {\n    let subjectFactory: () => Subject<T>;\n    if (typeof subjectOrSubjectFactory === 'function') {\n      subjectFactory = <() => Subject<T>>subjectOrSubjectFactory;\n    } else {\n      subjectFactory = function subjectFactory() {\n        return <Subject<T>>subjectOrSubjectFactory;\n      };\n    }\n\n    if (typeof selector === 'function') {\n      return source.lift(new MulticastOperator(subjectFactory, selector));\n    }\n\n    const connectable: any = Object.create(source, connectableObservableDescriptor);\n    connectable.source = source;\n    connectable.subjectFactory = subjectFactory;\n\n    return <ConnectableObservable<R>> connectable;\n  };\n}\n\nexport class MulticastOperator<T, R> implements Operator<T, R> {\n  constructor(private subjectFactory: () => Subject<T>,\n              private selector: (source: Observable<T>) => Observable<R>) {\n  }\n  call(subscriber: Subscriber<R>, source: any): any {\n    const { selector } = this;\n    const subject = this.subjectFactory();\n    const subscription = selector(subject).subscribe(subscriber);\n    subscription.add(source.subscribe(subject));\n    return subscription;\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __createBinding = function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __createBinding = function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n        result[\"default\"] = mod;\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, privateMap) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to get private field on non-instance\");\r\n        }\r\n        return privateMap.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, privateMap, value) {\r\n        if (!privateMap.has(receiver)) {\r\n            throw new TypeError(\"attempted to set private field on non-instance\");\r\n        }\r\n        privateMap.set(receiver, value);\r\n        return value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { subscribeToArray } from '../util/subscribeToArray';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\nexport function fromArray<T>(input: ArrayLike<T>, scheduler?: SchedulerLike) {\n  if (!scheduler) {\n    return new Observable<T>(subscribeToArray(input));\n  } else {\n    return scheduleArray(input, scheduler);\n  }\n}\n","export interface ArgumentOutOfRangeError extends Error {\n}\n\nexport interface ArgumentOutOfRangeErrorCtor {\n  new(): ArgumentOutOfRangeError;\n}\n\nconst ArgumentOutOfRangeErrorImpl = (() => {\n  function ArgumentOutOfRangeErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'argument out of range';\n    this.name = 'ArgumentOutOfRangeError';\n    return this;\n  }\n\n  ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ArgumentOutOfRangeErrorImpl;\n})();\n\n/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport const ArgumentOutOfRangeError: ArgumentOutOfRangeErrorCtor = ArgumentOutOfRangeErrorImpl as any;","export interface EmptyError extends Error {\n}\n\nexport interface EmptyErrorCtor {\n  new(): EmptyError;\n}\n\nconst EmptyErrorImpl = (() => {\n  function EmptyErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'no elements in sequence';\n    this.name = 'EmptyError';\n    return this;\n  }\n\n  EmptyErrorImpl.prototype = Object.create(Error.prototype);\n\n  return EmptyErrorImpl;\n})();\n\n/**\n * An error thrown when an Observable or a sequence was queried but has no\n * elements.\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link single}\n *\n * @class EmptyError\n */\nexport const EmptyError: EmptyErrorCtor = EmptyErrorImpl as any;","export function getSymbolIterator(): symbol {\n  if (typeof Symbol !== 'function' || !Symbol.iterator) {\n    return '@@iterator' as any;\n  }\n\n  return Symbol.iterator;\n}\n\nexport const iterator = getSymbolIterator();\n\n/**\n * @deprecated use {@link iterator} instead\n */\nexport const $$iterator = iterator;\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function defaultIfEmpty<T>(defaultValue?: T): MonoTypeOperatorFunction<T>;\nexport function defaultIfEmpty<T, R>(defaultValue?: R): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits a given value if the source Observable completes without emitting any\n * `next` value, otherwise mirrors the source Observable.\n *\n * <span class=\"informal\">If the source Observable turns out to be empty, then\n * this operator will emit a default value.</span>\n *\n * ![](defaultIfEmpty.png)\n *\n * `defaultIfEmpty` emits the values emitted by the source Observable or a\n * specified default value if the source Observable is empty (completes without\n * having emitted any `next` value).\n *\n * ## Example\n * If no clicks happen in 5 seconds, then emit \"no clicks\"\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { defaultIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)));\n * const result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link empty}\n * @see {@link last}\n *\n * @param {any} [defaultValue=null] The default value used if the source\n * Observable is empty.\n * @return {Observable} An Observable that emits either the specified\n * `defaultValue` if the source Observable emits no items, or the values emitted\n * by the source Observable.\n * @method defaultIfEmpty\n * @owner Observable\n */\nexport function defaultIfEmpty<T, R>(defaultValue: R = null): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => source.lift(new DefaultIfEmptyOperator(defaultValue)) as Observable<T | R>;\n}\n\nclass DefaultIfEmptyOperator<T, R> implements Operator<T, T | R> {\n\n  constructor(private defaultValue: R) {\n  }\n\n  call(subscriber: Subscriber<T | R>, source: any): any {\n    return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DefaultIfEmptySubscriber<T, R> extends Subscriber<T> {\n  private isEmpty: boolean = true;\n\n  constructor(destination: Subscriber<T | R>, private defaultValue: R) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.isEmpty = false;\n    this.destination.next(value);\n  }\n\n  protected _complete(): void {\n    if (this.isEmpty) {\n      this.destination.next(this.defaultValue);\n    }\n    this.destination.complete();\n  }\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { PartialObserver } from './types';\nimport { Observable } from './Observable';\nimport { empty } from './observable/empty';\nimport { of } from './observable/of';\nimport { throwError } from './observable/throwError';\nimport { deprecate } from 'util';\n\n// TODO: When this enum is removed, replace it with a type alias. See #4556.\n/**\n * @deprecated NotificationKind is deprecated as const enums are not compatible with isolated modules. Use a string literal instead.\n */\nexport enum NotificationKind {\n  NEXT = 'N',\n  ERROR = 'E',\n  COMPLETE = 'C',\n}\n\n/**\n * Represents a push-based event or value that an {@link Observable} can emit.\n * This class is particularly useful for operators that manage notifications,\n * like {@link materialize}, {@link dematerialize}, {@link observeOn}, and\n * others. Besides wrapping the actual delivered value, it also annotates it\n * with metadata of, for instance, what type of push message it is (`next`,\n * `error`, or `complete`).\n *\n * @see {@link materialize}\n * @see {@link dematerialize}\n * @see {@link observeOn}\n *\n * @class Notification<T>\n */\nexport class Notification<T> {\n  hasValue: boolean;\n\n  constructor(public kind: 'N' | 'E' | 'C', public value?: T, public error?: any) {\n    this.hasValue = kind === 'N';\n  }\n\n  /**\n   * Delivers to the given `observer` the value wrapped by this Notification.\n   * @param {Observer} observer\n   * @return\n   */\n  observe(observer: PartialObserver<T>): any {\n    switch (this.kind) {\n      case 'N':\n        return observer.next && observer.next(this.value);\n      case 'E':\n        return observer.error && observer.error(this.error);\n      case 'C':\n        return observer.complete && observer.complete();\n    }\n  }\n\n  /**\n   * Given some {@link Observer} callbacks, deliver the value represented by the\n   * current Notification to the correctly corresponding callback.\n   * @param {function(value: T): void} next An Observer `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  do(next: (value: T) => void, error?: (err: any) => void, complete?: () => void): any {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return next && next(this.value);\n      case 'E':\n        return error && error(this.error);\n      case 'C':\n        return complete && complete();\n    }\n  }\n\n  /**\n   * Takes an Observer or its individual callback functions, and calls `observe`\n   * or `do` methods accordingly.\n   * @param {Observer|function(value: T): void} nextOrObserver An Observer or\n   * the `next` callback.\n   * @param {function(err: any): void} [error] An Observer `error` callback.\n   * @param {function(): void} [complete] An Observer `complete` callback.\n   * @return {any}\n   */\n  accept(nextOrObserver: PartialObserver<T> | ((value: T) => void), error?: (err: any) => void, complete?: () => void) {\n    if (nextOrObserver && typeof (<PartialObserver<T>>nextOrObserver).next === 'function') {\n      return this.observe(<PartialObserver<T>>nextOrObserver);\n    } else {\n      return this.do(<(value: T) => void>nextOrObserver, error, complete);\n    }\n  }\n\n  /**\n   * Returns a simple Observable that just delivers the notification represented\n   * by this Notification instance.\n   * @return {any}\n   */\n  toObservable(): Observable<T> {\n    const kind = this.kind;\n    switch (kind) {\n      case 'N':\n        return of(this.value);\n      case 'E':\n        return throwError(this.error);\n      case 'C':\n        return empty();\n    }\n    throw new Error('unexpected notification kind value');\n  }\n\n  private static completeNotification: Notification<any> = new Notification('C');\n  private static undefinedValueNotification: Notification<any> = new Notification('N', undefined);\n\n  /**\n   * A shortcut to create a Notification instance of the type `next` from a\n   * given value.\n   * @param {T} value The `next` value.\n   * @return {Notification<T>} The \"next\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createNext<T>(value: T): Notification<T> {\n    if (typeof value !== 'undefined') {\n      return new Notification('N', value);\n    }\n    return Notification.undefinedValueNotification;\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `error` from a\n   * given error.\n   * @param {any} [err] The `error` error.\n   * @return {Notification<T>} The \"error\" Notification representing the\n   * argument.\n   * @nocollapse\n   */\n  static createError<T>(err?: any): Notification<T> {\n    return new Notification('E', undefined, err);\n  }\n\n  /**\n   * A shortcut to create a Notification instance of the type `complete`.\n   * @return {Notification<any>} The valueless \"complete\" Notification.\n   * @nocollapse\n   */\n  static createComplete(): Notification<any> {\n    return Notification.completeNotification;\n  }\n}\n","import { SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { fromArray } from './fromArray';\nimport { Observable } from '../Observable';\nimport { scheduleArray } from '../scheduled/scheduleArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T>(a: T, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2>(a: T, b: T2, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3>(a: T, b: T2, c: T3, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\n/** @deprecated use {@link scheduled} instead `scheduled([a, b, c], scheduler)` */\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9, scheduler: SchedulerLike):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: (T | SchedulerLike)[]): Observable<T>;\n\n// TODO(benlesh): Update the typings for this when we can switch to TS 3.x\nexport function of<T>(a: T): Observable<T>;\nexport function of<T, T2>(a: T, b: T2): Observable<T | T2>;\nexport function of<T, T2, T3>(a: T, b: T2, c: T3): Observable<T | T2 | T3>;\nexport function of<T, T2, T3, T4>(a: T, b: T2, c: T3, d: T4): Observable<T | T2 | T3 | T4>;\nexport function of<T, T2, T3, T4, T5>(a: T, b: T2, c: T3, d: T4, e: T5): Observable<T | T2 | T3 | T4 | T5>;\nexport function of<T, T2, T3, T4, T5, T6>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function of<T, T2, T3, T4, T5, T6, T7>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8>;\nexport function of<T, T2, T3, T4, T5, T6, T7, T8, T9>(a: T, b: T2, c: T3, d: T4, e: T5, f: T6, g: T7, h: T8, i: T9):\n  Observable<T | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;\nexport function of<T>(...args: T[]): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Converts the arguments to an observable sequence.\n *\n * <span class=\"informal\">Each argument becomes a `next` notification.</span>\n *\n * ![](of.png)\n *\n * Unlike {@link from}, it does not do any flattening and emits each argument in whole\n * as a separate `next` notification.\n *\n * ## Examples\n *\n * Emit the values `10, 20, 30`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of(10, 20, 30)\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: 10'\n * // 'next: 20'\n * // 'next: 30'\n *\n * ```\n *\n * Emit the array `[1,2,3]`\n *\n * ```ts\n * import { of } from 'rxjs';\n *\n * of([1,2,3])\n * .subscribe(\n *   next => console.log('next:', next),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'next: [1,2,3]'\n * ```\n *\n * @see {@link from}\n * @see {@link range}\n *\n * @param {...T} values A comma separated list of arguments you want to be emitted\n * @return {Observable} An Observable that emits the arguments\n * described above and then completes.\n * @method of\n * @owner Observable\n */\n\nexport function of<T>(...args: Array<T | SchedulerLike>): Observable<T> {\n  let scheduler = args[args.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    args.pop();\n    return scheduleArray(args as T[], scheduler);\n  } else {\n    return fromArray(args as T[]);\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\n\n/**\n * A variant of Subject that only emits a value when it completes. It will emit\n * its latest value to all its observers on completion.\n *\n * @class AsyncSubject<T>\n */\nexport class AsyncSubject<T> extends Subject<T> {\n  private value: T = null;\n  private hasNext: boolean = false;\n  private hasCompleted: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): Subscription {\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.hasCompleted && this.hasNext) {\n      subscriber.next(this.value);\n      subscriber.complete();\n      return Subscription.EMPTY;\n    }\n    return super._subscribe(subscriber);\n  }\n\n  next(value: T): void {\n    if (!this.hasCompleted) {\n      this.value = value;\n      this.hasNext = true;\n    }\n  }\n\n  error(error: any): void {\n    if (!this.hasCompleted) {\n      super.error(error);\n    }\n  }\n\n  complete(): void {\n    this.hasCompleted = true;\n    if (this.hasNext) {\n      super.next(this.value);\n    }\n    super.complete();\n  }\n}\n","import { ObservableInput } from '../types';\nimport { subscribeToArray } from './subscribeToArray';\nimport { subscribeToPromise } from './subscribeToPromise';\nimport { subscribeToIterable } from './subscribeToIterable';\nimport { subscribeToObservable } from './subscribeToObservable';\nimport { isArrayLike } from './isArrayLike';\nimport { isPromise } from './isPromise';\nimport { isObject } from './isObject';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { Subscription } from '../Subscription';\nimport { Subscriber } from '../Subscriber';\n\nexport const subscribeTo = <T>(result: ObservableInput<T>): (subscriber: Subscriber<T>) => Subscription | void => {\n  if (!!result && typeof result[Symbol_observable] === 'function') {\n    return subscribeToObservable(result as any);\n  } else if (isArrayLike(result)) {\n    return subscribeToArray(result);\n  } else if (isPromise(result)) {\n    return subscribeToPromise(result as Promise<any>);\n  } else if (!!result && typeof result[Symbol_iterator] === 'function') {\n    return subscribeToIterable(result as any);\n  } else {\n    const value = isObject(result) ? 'an invalid object' : `'${result}'`;\n    const msg = `You provided ${value} where a stream was expected.`\n      + ' You can provide an Observable, Promise, Array, or Iterable.';\n    throw new TypeError(msg);\n  }\n};\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { of } from './of';\nimport { from } from './from';\nimport { concatAll } from '../operators/concatAll';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>>(v1: O1, scheduler: SchedulerLike): Observable<ObservedValueOf<O1>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler: SchedulerLike): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\n\nexport function concat<O1 extends ObservableInput<any>>(v1: O1): Observable<ObservedValueOf<O1>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<ObservedValueOf<O1> | ObservedValueOf<O2>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5>>;\nexport function concat<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<ObservedValueOf<O1> | ObservedValueOf<O2> | ObservedValueOf<O3> | ObservedValueOf<O4> | ObservedValueOf<O5> | ObservedValueOf<O6>>;\nexport function concat<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<O extends ObservableInput<any>>(...observables: (O | SchedulerLike)[]): Observable<ObservedValueOf<O>>;\nexport function concat<R>(...observables: ObservableInput<any>[]): Observable<R>;\n/** @deprecated Use {@link scheduled} and {@link concatAll} (e.g. `scheduled([o1, o2, o3], scheduler).pipe(concatAll())`) */\nexport function concat<R>(...observables: (ObservableInput<any> | SchedulerLike)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which sequentially emits all values from given\n * Observable and then moves on to the next.\n *\n * <span class=\"informal\">Concatenates multiple Observables together by\n * sequentially emitting their values, one Observable after the other.</span>\n *\n * ![](concat.png)\n *\n * `concat` joins multiple Observables together, by subscribing to them one at a time and\n * merging their results into the output Observable. You can pass either an array of\n * Observables, or put them directly as arguments. Passing an empty array will result\n * in Observable that completes immediately.\n *\n * `concat` will subscribe to first input Observable and emit all its values, without\n * changing or affecting them in any way. When that Observable completes, it will\n * subscribe to then next Observable passed and, again, emit its values. This will be\n * repeated, until the operator runs out of Observables. When last input Observable completes,\n * `concat` will complete as well. At any given moment only one Observable passed to operator\n * emits values. If you would like to emit values from passed Observables concurrently, check out\n * {@link merge} instead, especially with optional `concurrent` parameter. As a matter of fact,\n * `concat` is an equivalent of `merge` operator with `concurrent` parameter set to `1`.\n *\n * Note that if some input Observable never completes, `concat` will also never complete\n * and Observables following the one that did not complete will never be subscribed. On the other\n * hand, if some Observable simply completes immediately after it is subscribed, it will be\n * invisible for `concat`, which will just move on to the next Observable.\n *\n * If any Observable in chain errors, instead of passing control to the next Observable,\n * `concat` will error immediately as well. Observables that would be subscribed after\n * the one that emitted error, never will.\n *\n * If you pass to `concat` the same Observable many times, its stream of values\n * will be \"replayed\" on every subscription, which means you can repeat given Observable\n * as many times as you like. If passing the same Observable to `concat` 1000 times becomes tedious,\n * you can always use {@link repeat}.\n *\n * ## Examples\n * ### Concatenate a timer counting from 0 to 3 with a synchronous sequence from 1 to 10\n * ```ts\n * import { concat, interval, range } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(4));\n * const sequence = range(1, 10);\n * const result = concat(timer, sequence);\n * result.subscribe(x => console.log(x));\n *\n * // results in:\n * // 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3 -immediate-> 1 ... 10\n * ```\n *\n * ### Concatenate 3 Observables\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n *\n * const result = concat(timer1, timer2, timer3);\n * result.subscribe(x => console.log(x));\n *\n * // results in the following:\n * // (Prints to console sequentially)\n * // -1000ms-> 0 -1000ms-> 1 -1000ms-> ... 9\n * // -2000ms-> 0 -2000ms-> 1 -2000ms-> ... 5\n * // -500ms-> 0 -500ms-> 1 -500ms-> ... 9\n * ```\n *\n * ### Concatenate the same Observable to repeat it\n * ```ts\n * import { concat, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer = interval(1000).pipe(take(2));\n *\n * concat(timer, timer) // concatenating the same Observable!\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('...and it is done!')\n * );\n *\n * // Logs:\n * // 0 after 1s\n * // 1 after 2s\n * // 0 after 3s\n * // 1 after 4s\n * // \"...and it is done!\" also after 4s\n * ```\n *\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link startWith}\n * @see {@link endWith}\n *\n * @param {ObservableInput} input1 An input Observable to concatenate with others.\n * @param {ObservableInput} input2 An input Observable to concatenate with others.\n * More than one input Observables may be given as argument.\n * @param {SchedulerLike} [scheduler=null] An optional {@link SchedulerLike} to schedule each\n * Observable subscription on.\n * @return {Observable} All values of each passed Observable merged into a\n * single Observable, in order, in serial fashion.\n * @static true\n * @name concat\n * @owner Observable\n */\nexport function concat<O extends ObservableInput<any>, R>(...observables: Array<O | SchedulerLike>): Observable<ObservedValueOf<O> | R> {\n  return concatAll<R>()(of(...observables));\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined, concurrent?: number): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link mergeAll}.</span>\n *\n * ![](mergeMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger.\n *\n * ## Example\n * Map and flatten each letter to an Observable ticking every 1 second\n * ```ts\n * import { of, interval } from 'rxjs';\n * import { mergeMap, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 'c');\n * const result = letters.pipe(\n *   mergeMap(x => interval(1000).pipe(map(i => x+i))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // a0\n * // b0\n * // c0\n * // a1\n * // b1\n * // c1\n * // continues to list a,b,c with respective ascending integers\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and merging the results of the Observables\n * obtained from this transformation.\n */\nexport function mergeMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      mergeMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: number) => resultSelector(a, b, i, ii)),\n      ), concurrent)\n    );\n  } else if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return (source: Observable<T>) => source.lift(new MergeMapOperator(project, concurrent));\n}\n\nexport class MergeMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n  }\n\n  call(observer: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeMapSubscriber(\n      observer, this.project, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private hasCompleted: boolean = false;\n  private buffer: T[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number = Number.POSITIVE_INFINITY) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.active < this.concurrent) {\n      this._tryNext(value);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  protected _tryNext(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.active++;\n    this._innerSub(result);\n  }\n\n  private _innerSub(ish: ObservableInput<R>): void {\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = innerSubscribe(ish, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    this.destination.next!(innerValue);\n  }\n\n  notifyComplete(): void {\n    const buffer = this.buffer;\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift()!);\n    } else if (this.active === 0 && this.hasCompleted) {\n      this.destination.complete!();\n    }\n  }\n}\n\n/**\n * @deprecated renamed. Use {@link mergeMap}\n */\nexport const flatMap = mergeMap;","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { EmptyError } from '../util/EmptyError';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { TeardownLogic, MonoTypeOperatorFunction } from '../types';\n\n/**\n * If the source observable completes without emitting a value, it will emit\n * an error. The error will be created at that time by the optional\n * `errorFactory` argument, otherwise, the error will be {@link EmptyError}.\n *\n * ![](throwIfEmpty.png)\n *\n * ## Example\n * ```ts\n * import { fromEvent, timer } from 'rxjs';\n * import { throwIfEmpty, takeUntil } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n *\n * click$.pipe(\n *   takeUntil(timer(1000)),\n *   throwIfEmpty(\n *     () => new Error('the document was not clicked within 1 second')\n *   ),\n * )\n * .subscribe({\n *   next() { console.log('The button was clicked'); },\n *   error(err) { console.error(err); }\n * });\n * ```\n *\n * @param errorFactory A factory function called to produce the\n * error to be thrown when the source observable completes without emitting a\n * value.\n */\nexport function throwIfEmpty <T>(errorFactory: (() => any) = defaultErrorFactory): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    return source.lift(new ThrowIfEmptyOperator(errorFactory));\n  };\n}\n\nclass ThrowIfEmptyOperator<T> implements Operator<T, T> {\n  constructor(private errorFactory: () => any) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));\n  }\n}\n\nclass ThrowIfEmptySubscriber<T> extends Subscriber<T> {\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>, private errorFactory: () => any) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.hasValue = true;\n    this.destination.next(value);\n  }\n\n  protected _complete() {\n    if (!this.hasValue) {\n      let err: any;\n      try {\n        err = this.errorFactory();\n      } catch (e) {\n        err = e;\n      }\n      this.destination.error(err);\n    } else {\n        return this.destination.complete();\n    }\n  }\n}\n\nfunction defaultErrorFactory() {\n  return new EmptyError();\n}\n","import { Observable } from '../Observable';\nimport { scan } from './scan';\nimport { takeLast } from './takeLast';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\nimport { pipe } from '../util/pipe';\n\n/* tslint:disable:max-line-length */\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function reduce<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function reduce<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns the\n * accumulated result when the source completes, given an optional seed value.\n *\n * <span class=\"informal\">Combines together all values emitted on the source,\n * using an accumulator function that knows how to join a new source value into\n * the accumulation from the past.</span>\n *\n * ![](reduce.png)\n *\n * Like\n * [Array.prototype.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce),\n * `reduce` applies an `accumulator` function against an accumulation and each\n * value of the source Observable (from the past) to reduce it to a single\n * value, emitted on the output Observable. Note that `reduce` will only emit\n * one value, only when the source Observable completes. It is equivalent to\n * applying operator {@link scan} followed by operator {@link last}.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events that happened in 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { reduce, takeUntil, mapTo } from 'rxjs/operators';\n *\n * const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\n *   takeUntil(interval(5000)),\n * );\n * const ones = clicksInFiveSeconds.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(reduce((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link count}\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link scan}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator The accumulator function\n * called on each source value.\n * @param {R} [seed] The initial accumulation value.\n * @return {Observable<R>} An Observable that emits a single value that is the\n * result of accumulating the values emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nexport function reduce<T, R>(accumulator: (acc: T | R, value: T, index?: number) => T | R, seed?: T | R): OperatorFunction<T, T | R> {\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    return function reduceOperatorFunctionWithSeed(source: Observable<T>): Observable<T | R> {\n      return pipe(scan(accumulator, seed), takeLast(1), defaultIfEmpty(seed))(source);\n    };\n  }\n  return function reduceOperatorFunction(source: Observable<T>): Observable<T | R> {\n    return pipe(\n      scan<T, T | R>((acc, value, index) => accumulator(acc, value, index + 1)),\n      takeLast(1),\n    )(source);\n  };\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { Observable } from '../Observable';\n\n/**\n * Make a {@link ConnectableObservable} behave like a ordinary observable and automates the way\n * you can connect to it.\n *\n * Internally it counts the subscriptions to the observable and subscribes (only once) to the source if\n * the number of subscriptions is larger than 0. If the number of subscriptions is smaller than 1, it\n * unsubscribes from the source. This way you can make sure that everything before the *published*\n * refCount has only a single subscription independently of the number of subscribers to the target\n * observable.\n *\n * Note that using the {@link share} operator is exactly the same as using the *publish* operator\n * (making the observable hot) and the *refCount* operator in a sequence.\n *\n * ![](refCount.png)\n *\n * ## Example\n *\n * In the following example there are two intervals turned into connectable observables\n * by using the *publish* operator. The first one uses the *refCount* operator, the\n * second one does not use it. You will notice that a connectable observable does nothing\n * until you call its connect function.\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { tap, publish, refCount } from 'rxjs/operators';\n *\n * // Turn the interval observable into a ConnectableObservable (hot)\n * const refCountInterval = interval(400).pipe(\n *   tap((num) => console.log(`refCount ${num}`)),\n *   publish(),\n *   refCount()\n * );\n *\n * const publishedInterval = interval(400).pipe(\n *   tap((num) => console.log(`publish ${num}`)),\n *   publish()\n * );\n *\n * refCountInterval.subscribe();\n * refCountInterval.subscribe();\n * // 'refCount 0' -----> 'refCount 1' -----> etc\n * // All subscriptions will receive the same value and the tap (and\n * // every other operator) before the publish operator will be executed\n * // only once per event independently of the number of subscriptions.\n *\n * publishedInterval.subscribe();\n * // Nothing happens until you call .connect() on the observable.\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link share}\n * @see {@link publish}\n */\nexport function refCount<T>(): MonoTypeOperatorFunction<T> {\n  return function refCountOperatorFunction(source: ConnectableObservable<T>): Observable<T> {\n    return source.lift(new RefCountOperator(source));\n  } as MonoTypeOperatorFunction<T>;\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // )\n    // .subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { SchedulerLike } from './types';\nimport { queue } from './scheduler/queue';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { ObserveOnSubscriber } from './operators/observeOn';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\n/**\n * A variant of Subject that \"replays\" or emits old values to new subscribers.\n * It buffers a set number of values and will emit those values immediately to\n * any new subscribers in addition to emitting new values to existing subscribers.\n *\n * @class ReplaySubject<T>\n */\nexport class ReplaySubject<T> extends Subject<T> {\n  private _events: (ReplayEvent<T> | T)[] = [];\n  private _bufferSize: number;\n  private _windowTime: number;\n  private _infiniteTimeWindow: boolean = false;\n\n  constructor(bufferSize: number = Number.POSITIVE_INFINITY,\n              windowTime: number = Number.POSITIVE_INFINITY,\n              private scheduler?: SchedulerLike) {\n    super();\n    this._bufferSize = bufferSize < 1 ? 1 : bufferSize;\n    this._windowTime = windowTime < 1 ? 1 : windowTime;\n\n    if (windowTime === Number.POSITIVE_INFINITY) {\n      this._infiniteTimeWindow = true;\n      this.next = this.nextInfiniteTimeWindow;\n    } else {\n      this.next = this.nextTimeWindow;\n    }\n  }\n\n  private nextInfiniteTimeWindow(value: T): void {\n    if (!this.isStopped) {\n      const _events = this._events;\n      _events.push(value);\n      // Since this method is invoked in every next() call than the buffer\n      // can overgrow the max size only by one item\n      if (_events.length > this._bufferSize) {\n        _events.shift();\n      }\n    }\n    super.next(value);\n  }\n\n  private nextTimeWindow(value: T): void {\n    if (!this.isStopped) {\n      this._events.push(new ReplayEvent(this._getNow(), value));\n      this._trimBufferThenGetEvents();\n    }\n    super.next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    // When `_infiniteTimeWindow === true` then the buffer is already trimmed\n    const _infiniteTimeWindow = this._infiniteTimeWindow;\n    const _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();\n    const scheduler = this.scheduler;\n    const len = _events.length;\n    let subscription: Subscription;\n\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.isStopped || this.hasError) {\n      subscription = Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      subscription = new SubjectSubscription(this, subscriber);\n    }\n\n    if (scheduler) {\n      subscriber.add(subscriber = new ObserveOnSubscriber<T>(subscriber, scheduler));\n    }\n\n    if (_infiniteTimeWindow) {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next(<T>_events[i]);\n      }\n    } else {\n      for (let i = 0; i < len && !subscriber.closed; i++) {\n        subscriber.next((<ReplayEvent<T>>_events[i]).value);\n      }\n    }\n\n    if (this.hasError) {\n      subscriber.error(this.thrownError);\n    } else if (this.isStopped) {\n      subscriber.complete();\n    }\n\n    return subscription;\n  }\n\n  _getNow(): number {\n    return (this.scheduler || queue).now();\n  }\n\n  private _trimBufferThenGetEvents(): ReplayEvent<T>[] {\n    const now = this._getNow();\n    const _bufferSize = this._bufferSize;\n    const _windowTime = this._windowTime;\n    const _events = <ReplayEvent<T>[]>this._events;\n\n    const eventsCount = _events.length;\n    let spliceCount = 0;\n\n    // Trim events that fall out of the time window.\n    // Start at the front of the list. Break early once\n    // we encounter an event that falls within the window.\n    while (spliceCount < eventsCount) {\n      if ((now - _events[spliceCount].time) < _windowTime) {\n        break;\n      }\n      spliceCount++;\n    }\n\n    if (eventsCount > _bufferSize) {\n      spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);\n    }\n\n    if (spliceCount > 0) {\n      _events.splice(0, spliceCount);\n    }\n\n    return _events;\n  }\n\n}\n\nclass ReplayEvent<T> {\n  constructor(public time: number, public value: T) {\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function scheduleArray<T>(input: ArrayLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let i = 0;\n    sub.add(scheduler.schedule(function () {\n      if (i === input.length) {\n        subscriber.complete();\n        return;\n      }\n      subscriber.next(input[i++]);\n      if (!subscriber.closed) {\n        sub.add(this.schedule());\n      }\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits no items to the Observer and immediately\n * emits an error notification.\n *\n * <span class=\"informal\">Just emits 'error', and nothing else.\n * </span>\n *\n * ![](throw.png)\n *\n * This static operator is useful for creating a simple Observable that only\n * emits the error notification. It can be used for composing with other\n * Observables, such as in a {@link mergeMap}.\n *\n * ## Examples\n * ### Emit the number 7, then emit an error\n * ```ts\n * import { throwError, concat, of } from 'rxjs';\n *\n * const result = concat(of(7), throwError(new Error('oops!')));\n * result.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // 7\n * // Error: oops!\n * ```\n *\n * ---\n *\n * ### Map and flatten numbers to the sequence 'a', 'b', 'c', but throw an error for 2\n * ```ts\n * import { throwError, interval, of } from 'rxjs';\n * import { mergeMap } from 'rxjs/operators';\n *\n * interval(1000).pipe(\n *   mergeMap(x => x === 2\n *     ? throwError('Twos are bad')\n *     : of('a', 'b', 'c')\n *   ),\n * ).subscribe(x => console.log(x), e => console.error(e));\n *\n * // Logs:\n * // a\n * // b\n * // c\n * // a\n * // b\n * // c\n * // Twos are bad\n * ```\n *\n * @see {@link Observable}\n * @see {@link empty}\n * @see {@link never}\n * @see {@link of}\n *\n * @param {any} error The particular Error to pass to the error notification.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emission of the error notification.\n * @return {Observable} An error Observable: emits only the error notification\n * using the given error argument.\n * @static true\n * @name throwError\n * @owner Observable\n */\nexport function throwError(error: any, scheduler?: SchedulerLike): Observable<never> {\n  if (!scheduler) {\n    return new Observable(subscriber => subscriber.error(error));\n  } else {\n    return new Observable(subscriber => scheduler.schedule(dispatch, 0, { error, subscriber }));\n  }\n}\n\ninterface DispatchArg {\n  error: any;\n  subscriber: Subscriber<any>;\n}\n\nfunction dispatch({ error, subscriber }: DispatchArg) {\n  subscriber.error(error);\n}\n","/* tslint:disable:no-empty */\nexport function noop() { }\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike, ObservedValueOf } from '../types';\nimport { isScheduler  } from '../util/isScheduler';\nimport { isArray  } from '../util/isArray';\nimport { Subscriber } from '../Subscriber';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { Operator } from '../Operator';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { fromArray } from './fromArray';\n\nconst NONE = {};\n\n/* tslint:disable:max-line-length */\n\n// If called with a single array, it \"auto-spreads\" the array, with result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(sources: [O1], resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(sources: [O1, O2], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(sources: [O1, O2, O3], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(sources: [O1, O2, O3, O4, O5, O6], resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(sources: O[], resultSelector: (...args: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// standard call, but with a result selector\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R, scheduler?: SchedulerLike): Observable<R>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R, scheduler?: SchedulerLike): Observable<R>;\n\n// With a scheduler (deprecated)\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6], scheduler: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[], scheduler: SchedulerLike): Observable<ObservedValueOf<O>[]>;\n\n// Best case\nexport function combineLatest<O1 extends ObservableInput<any>>(sources: [O1]): Observable<[ObservedValueOf<O1>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(sources: [O1, O2]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(sources: [O1, O2, O3]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(sources: [O1, O2, O3, O4]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(sources: [O1, O2, O3, O4, O5, O6]): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function combineLatest<O extends ObservableInput<any>>(sources: O[]): Observable<ObservedValueOf<O>[]>;\n\n// Standard calls\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>>(v1: O1, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, scheduler?: SchedulerLike): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: O[]): Observable<any[]>;\n\n/** @deprecated Pass arguments in a single array instead `combineLatest([a, b, c])` */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R, scheduler?: SchedulerLike): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>>(...observables: Array<O | SchedulerLike>): Observable<any[]>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike>): Observable<R>;\n\n/** @deprecated Passing a scheduler here is deprecated, use {@link subscribeOn} and/or {@link observeOn} instead */\nexport function combineLatest<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R) | SchedulerLike>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are\n * calculated from the latest values of each of its input Observables.\n *\n * <span class=\"informal\">Whenever any input Observable emits a value, it\n * computes a formula using the latest values from all the inputs, then emits\n * the output of that formula.</span>\n *\n * ![](combineLatest.png)\n *\n * `combineLatest` combines the values from all the Observables passed as\n * arguments. This is done by subscribing to each Observable in order and,\n * whenever any Observable emits, collecting an array of the most recent\n * values from each Observable. So if you pass `n` Observables to operator,\n * returned Observable will always emit an array of `n` values, in order\n * corresponding to order of passed Observables (value from the first Observable\n * on the first place and so on).\n *\n * Static version of `combineLatest` accepts either an array of Observables\n * or each Observable can be put directly as an argument. Note that array of\n * Observables is good choice, if you don't know beforehand how many Observables\n * you will combine. Passing empty array will result in Observable that\n * completes immediately.\n *\n * To ensure output array has always the same length, `combineLatest` will\n * actually wait for all input Observables to emit at least once,\n * before it starts emitting results. This means if some Observable emits\n * values before other Observables started emitting, all these values but the last\n * will be lost. On the other hand, if some Observable does not emit a value but\n * completes, resulting Observable will complete at the same moment without\n * emitting anything, since it will be now impossible to include value from\n * completed Observable in resulting array. Also, if some input Observable does\n * not emit any value and never completes, `combineLatest` will also never emit\n * and never complete, since, again, it will wait for all streams to emit some\n * value.\n *\n * If at least one Observable was passed to `combineLatest` and all passed Observables\n * emitted something, resulting Observable will complete when all combined\n * streams complete. So even if some Observable completes, result of\n * `combineLatest` will still emit values when other Observables do. In case\n * of completed Observable, its value from now on will always be the last\n * emitted value. On the other hand, if any Observable errors, `combineLatest`\n * will error immediately as well, and all other Observables will be unsubscribed.\n *\n * `combineLatest` accepts as optional parameter `project` function, which takes\n * as arguments all values that would normally be emitted by resulting Observable.\n * `project` can return any kind of value, which will be then emitted by Observable\n * instead of default array. Note that `project` does not take as argument that array\n * of values, but values themselves. That means default `project` can be imagined\n * as function that takes all its arguments and puts them into an array.\n *\n * ## Examples\n * ### Combine two timer Observables\n * ```ts\n * import { combineLatest, timer } from 'rxjs';\n *\n * const firstTimer = timer(0, 1000); // emit 0, 1, 2... after every second, starting from now\n * const secondTimer = timer(500, 1000); // emit 0, 1, 2... after every second, starting 0,5s from now\n * const combinedTimers = combineLatest(firstTimer, secondTimer);\n * combinedTimers.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0] after 0.5s\n * // [1, 0] after 1s\n * // [1, 1] after 1.5s\n * // [2, 1] after 2s\n * ```\n *\n * ### Combine an array of Observables\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { delay, starWith } from 'rxjs/operators';\n *\n * const observables = [1, 5, 10].map(\n *   n => of(n).pipe(\n *     delay(n * 1000),   // emit 0 and then emit n after n seconds\n *     startWith(0),\n *   )\n * );\n * const combined = combineLatest(observables);\n * combined.subscribe(value => console.log(value));\n * // Logs\n * // [0, 0, 0] immediately\n * // [1, 0, 0] after 1s\n * // [1, 5, 0] after 5s\n * // [1, 5, 10] after 10s\n * ```\n *\n *\n * ### Use project function to dynamically calculate the Body-Mass Index\n * ```ts\n * import { combineLatest, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * const weight = of(70, 72, 76, 79, 75);\n * const height = of(1.76, 1.77, 1.78);\n * const bmi = combineLatest(weight, height).pipe(\n *   map(([w, h]) => w / (h * h)),\n * );\n * bmi.subscribe(x => console.log('BMI is ' + x));\n *\n * // With output to console:\n * // BMI is 24.212293388429753\n * // BMI is 23.93948099205209\n * // BMI is 23.671253629592222\n * ```\n *\n * @see {@link combineAll}\n * @see {@link merge}\n * @see {@link withLatestFrom}\n *\n * @param {ObservableInput} observable1 An input Observable to combine with other Observables.\n * @param {ObservableInput} observable2 An input Observable to combine with other Observables.\n * More than one input Observables may be given as arguments\n * or an array of Observables may be given as the first argument.\n * @param {function} [project] An optional function to project the values from\n * the combined latest values into a new value on the output Observable.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each input Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n */\nexport function combineLatest<O extends ObservableInput<any>, R>(\n  ...observables: (O | ((...values: ObservedValueOf<O>[]) => R) | SchedulerLike)[]\n): Observable<R> {\n  let resultSelector: ((...values: Array<any>) => R) | undefined =  undefined;\n  let scheduler: SchedulerLike|undefined = undefined;\n\n  if (isScheduler(observables[observables.length - 1])) {\n    scheduler = observables.pop() as SchedulerLike;\n  }\n\n  if (typeof observables[observables.length - 1] === 'function') {\n    resultSelector = observables.pop() as (...values: Array<any>) => R;\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], resultSelector)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = observables[0] as any;\n  }\n\n  return fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));\n}\n\nexport class CombineLatestOperator<T, R> implements Operator<T, R> {\n  constructor(private resultSelector?: (...values: Array<any>) => R) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class CombineLatestSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private active: number = 0;\n  private values: any[] = [];\n  private observables: any[] = [];\n  private toRespond?: number;\n\n  constructor(destination: Subscriber<R>, private resultSelector?: (...values: Array<any>) => R) {\n    super(destination);\n  }\n\n  protected _next(observable: any) {\n    this.values.push(NONE);\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n    if (len === 0) {\n      this.destination.complete!();\n    } else {\n      this.active = len;\n      this.toRespond = len;\n      for (let i = 0; i < len; i++) {\n        const observable = observables[i];\n        this.add(subscribeToResult(this, observable, undefined, i));\n      }\n    }\n  }\n\n  notifyComplete(unused: Subscriber<R>): void {\n    if ((this.active -= 1) === 0) {\n      this.destination.complete!();\n    }\n  }\n\n  notifyNext(_outerValue: T, innerValue: R,\n             outerIndex: number): void {\n    const values = this.values;\n    const oldVal = values[outerIndex];\n    const toRespond = !this.toRespond\n      ? 0\n      : oldVal === NONE ? --this.toRespond : this.toRespond;\n    values[outerIndex] = innerValue;\n\n    if (toRespond === 0) {\n      if (this.resultSelector) {\n        this._tryResultSelector(values);\n      } else {\n        this.destination.next!(values.slice());\n      }\n    }\n  }\n\n  private _tryResultSelector(values: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector!.apply(this, values);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.destination.next!(result);\n  }\n}\n","\nimport { mergeMap } from './mergeMap';\nimport { identity } from '../util/identity';\nimport { OperatorFunction, ObservableInput } from '../types';\n\n/**\n * Converts a higher-order Observable into a first-order Observable which\n * concurrently delivers all values that are emitted on the inner Observables.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](mergeAll.png)\n *\n * `mergeAll` subscribes to an Observable that emits Observables, also known as\n * a higher-order Observable. Each time it observes one of these emitted inner\n * Observables, it subscribes to that and delivers all the values from the\n * inner Observable on the output Observable. The output Observable only\n * completes once all inner Observables have completed. Any error delivered by\n * a inner Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * Spawn a new interval Observable for each click event, and blend their outputs as one Observable\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(map((ev) => interval(1000)));\n * const firstOrder = higherOrder.pipe(mergeAll());\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * Count from 0 to 9 every second for each click, but only allow 2 concurrent timers\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { take, map, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(10))),\n * );\n * const firstOrder = higherOrder.pipe(mergeAll(2));\n * firstOrder.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link merge}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of inner\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits values coming from all the\n * inner Observables emitted by the source Observable.\n * @method mergeAll\n * @owner Observable\n */\nexport function mergeAll<T>(concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<ObservableInput<T>, T> {\n  return mergeMap(identity, concurrent);\n}\n","import { Observable } from '../Observable';\nimport { SubscribableOrPromise, ObservedValueOf, ObservableInput } from '../types';\nimport { from } from './from'; // lol\nimport { empty } from './empty';\n\n/**\n * Creates an Observable that, on subscribe, calls an Observable factory to\n * make an Observable for each new Observer.\n *\n * <span class=\"informal\">Creates the Observable lazily, that is, only when it\n * is subscribed.\n * </span>\n *\n * ![](defer.png)\n *\n * `defer` allows you to create the Observable only when the Observer\n * subscribes, and create a fresh Observable for each Observer. It waits until\n * an Observer subscribes to it, and then it generates an Observable,\n * typically with an Observable factory function. It does this afresh for each\n * subscriber, so although each subscriber may think it is subscribing to the\n * same Observable, in fact each subscriber gets its own individual\n * Observable.\n *\n * ## Example\n * ### Subscribe to either an Observable of clicks or an Observable of interval, at random\n * ```ts\n * import { defer, fromEvent, interval } from 'rxjs';\n *\n * const clicksOrInterval = defer(function () {\n *   return Math.random() > 0.5\n *     ? fromEvent(document, 'click')\n *     : interval(1000);\n * });\n * clicksOrInterval.subscribe(x => console.log(x));\n *\n * // Results in the following behavior:\n * // If the result of Math.random() is greater than 0.5 it will listen\n * // for clicks anywhere on the \"document\"; when document is clicked it\n * // will log a MouseEvent object to the console. If the result is less\n * // than 0.5 it will emit ascending numbers, one every second(1000ms).\n * ```\n *\n * @see {@link Observable}\n *\n * @param {function(): SubscribableOrPromise} observableFactory The Observable\n * factory function to invoke for each Observer that subscribes to the output\n * Observable. May also return a Promise, which will be converted on the fly\n * to an Observable.\n * @return {Observable} An Observable whose Observers' subscriptions trigger\n * an invocation of the given Observable factory function.\n * @static true\n * @name defer\n * @owner Observable\n */\nexport function defer<R extends ObservableInput<any> | void>(observableFactory: () => R): Observable<ObservedValueOf<R>> {\n  return new Observable<ObservedValueOf<R>>(subscriber => {\n    let input: R | void;\n    try {\n      input = observableFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    const source = input ? from(input as ObservableInput<ObservedValueOf<R>>) : empty();\n    return source.subscribe(subscriber);\n  });\n}\n","import { Observable } from '../Observable';\nimport { fromArray } from './fromArray';\nimport { isArray } from '../util/isArray';\nimport { Operator } from '../Operator';\nimport { ObservableInput, PartialObserver, ObservedValueOf } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../../internal/symbol/iterator';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, R>(v1: O1, resultSelector: (v1: ObservedValueOf<O1>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, R>(v1: O1, v2: O2, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, resultSelector: (v1: ObservedValueOf<O1>, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): Observable<R>;\n\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>>(v1: O1, v2: O2): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function zip<O1 extends ObservableInput<any>, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v1: O1, v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): Observable<[ObservedValueOf<O1>, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\n\nexport function zip<O extends ObservableInput<any>>(array: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<R>(array: ObservableInput<any>[]): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<O extends ObservableInput<any>, R>(array: O[], resultSelector: (...values: ObservedValueOf<O>[]) => R): Observable<R>;\n/** @deprecated resultSelector is no longer supported, pipe to map instead */\nexport function zip<R>(array: ObservableInput<any>[], resultSelector: (...values: any[]) => R): Observable<R>;\n\nexport function zip<O extends ObservableInput<any>>(...observables: O[]): Observable<ObservedValueOf<O>[]>;\nexport function zip<O extends ObservableInput<any>, R>(...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>): Observable<R>;\nexport function zip<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Combines multiple Observables to create an Observable whose values are calculated from the values, in order, of each\n * of its input Observables.\n *\n * If the last parameter is a function, this function is used to compute the created value from the input values.\n * Otherwise, an array of the input values is returned.\n *\n * ## Example\n * Combine age and name from different sources\n * ```ts\n * import { zip, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * let age$ = of<number>(27, 25, 29);\n * let name$ = of<string>('Foo', 'Bar', 'Beer');\n * let isDev$ = of<boolean>(true, true, false);\n *\n * zip(age$, name$, isDev$).pipe(\n *   map(([age, name, isDev]) => ({ age, name, isDev })),\n * )\n * .subscribe(x => console.log(x));\n *\n * // outputs\n * // { age: 27, name: 'Foo', isDev: true }\n * // { age: 25, name: 'Bar', isDev: true }\n * // { age: 29, name: 'Beer', isDev: false }\n * ```\n * @param observables\n * @return {Observable<R>}\n * @static true\n * @name zip\n * @owner Observable\n */\nexport function zip<O extends ObservableInput<any>, R>(\n  ...observables: Array<O | ((...values: ObservedValueOf<O>[]) => R)>\n): Observable<ObservedValueOf<O>[]|R> {\n  const resultSelector = <((...ys: Array<any>) => R)> observables[observables.length - 1];\n  if (typeof resultSelector === 'function') {\n    observables.pop();\n  }\n  return fromArray(observables, undefined).lift(new ZipOperator(resultSelector));\n}\n\nexport class ZipOperator<T, R> implements Operator<T, R> {\n\n  resultSelector?: (...values: Array<any>) => R;\n\n  constructor(resultSelector?: (...values: Array<any>) => R) {\n    this.resultSelector = resultSelector;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ZipSubscriber<T, R> extends Subscriber<T> {\n  private iterators: LookAheadIterator<any>[] = [];\n  private active = 0;\n\n  constructor(destination: Subscriber<R>,\n              private resultSelector?: (...values: Array<any>) => R,\n              values: any = Object.create(null)) {\n    super(destination);\n    this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;\n  }\n\n  protected _next(value: any) {\n    const iterators = this.iterators;\n    if (isArray(value)) {\n      iterators.push(new StaticArrayIterator(value));\n    } else if (typeof value[Symbol_iterator] === 'function') {\n      iterators.push(new StaticIterator(value[Symbol_iterator]()));\n    } else {\n      iterators.push(new ZipBufferIterator(this.destination, this, value));\n    }\n  }\n\n  protected _complete() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n\n    this.unsubscribe();\n\n    if (len === 0) {\n      this.destination.complete!();\n      return;\n    }\n\n    this.active = len;\n    for (let i = 0; i < len; i++) {\n      let iterator: ZipBufferIterator<any, any> = <any>iterators[i];\n      if (iterator.stillUnsubscribed) {\n        const destination = this.destination as Subscription;\n        destination.add(iterator.subscribe());\n      } else {\n        this.active--; // not an observable\n      }\n    }\n  }\n\n  notifyInactive() {\n    this.active--;\n    if (this.active === 0) {\n      this.destination.complete!();\n    }\n  }\n\n  checkIterators() {\n    const iterators = this.iterators;\n    const len = iterators.length;\n    const destination = this.destination;\n\n    // abort if not all of them have values\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {\n        return;\n      }\n    }\n\n    let shouldComplete = false;\n    const args: any[] = [];\n    for (let i = 0; i < len; i++) {\n      let iterator = iterators[i];\n      let result = iterator.next();\n\n      // check to see if it's completed now that you've gotten\n      // the next value.\n      if (iterator.hasCompleted()) {\n        shouldComplete = true;\n      }\n\n      if (result.done) {\n        destination.complete!();\n        return;\n      }\n\n      args.push(result.value);\n    }\n\n    if (this.resultSelector) {\n      this._tryresultSelector(args);\n    } else {\n      destination.next!(args);\n    }\n\n    if (shouldComplete) {\n      destination.complete!();\n    }\n  }\n\n  protected _tryresultSelector(args: any[]) {\n    let result: any;\n    try {\n      result = this.resultSelector!.apply(this, args);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.destination.next!(result);\n  }\n}\n\ninterface LookAheadIterator<T> extends Iterator<T> {\n  hasValue(): boolean;\n  hasCompleted(): boolean;\n}\n\nclass StaticIterator<T> implements LookAheadIterator<T> {\n  private nextResult: IteratorResult<T>;\n\n  constructor(private iterator: Iterator<T>) {\n    this.nextResult = iterator.next();\n  }\n\n  hasValue() {\n    return true;\n  }\n\n  next(): IteratorResult<T> {\n    const result = this.nextResult;\n    this.nextResult = this.iterator.next();\n    return result;\n  }\n\n  hasCompleted(): boolean {\n    const nextResult = this.nextResult;\n    return Boolean(nextResult && nextResult.done);\n  }\n}\n\nclass StaticArrayIterator<T> implements LookAheadIterator<T> {\n  private index = 0;\n  private length = 0;\n\n  constructor(private array: T[]) {\n    this.length = array.length;\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  next(value?: any): IteratorResult<T> {\n    const i = this.index++;\n    const array = this.array;\n    return i < this.length ? { value: array[i], done: false } : { value: null, done: true };\n  }\n\n  hasValue() {\n    return this.array.length > this.index;\n  }\n\n  hasCompleted() {\n    return this.array.length === this.index;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ZipBufferIterator<T, R> extends SimpleOuterSubscriber<T, R> implements LookAheadIterator<T> {\n  stillUnsubscribed = true;\n  buffer: T[] = [];\n  isComplete = false;\n\n  constructor(destination: PartialObserver<T>,\n              private parent: ZipSubscriber<T, R>,\n              private observable: Observable<T>) {\n    super(destination);\n  }\n\n  [Symbol_iterator]() {\n    return this;\n  }\n\n  // NOTE: there is actually a name collision here with Subscriber.next and Iterator.next\n  //    this is legit because `next()` will never be called by a subscription in this case.\n  next(): IteratorResult<T> {\n    const buffer = this.buffer;\n    if (buffer.length === 0 && this.isComplete) {\n      return { value: null, done: true };\n    } else {\n      return { value: buffer.shift()!, done: false };\n    }\n  }\n\n  hasValue() {\n    return this.buffer.length > 0;\n  }\n\n  hasCompleted() {\n    return this.buffer.length === 0 && this.isComplete;\n  }\n\n  notifyComplete() {\n    if (this.buffer.length > 0) {\n      this.isComplete = true;\n      this.parent.notifyInactive();\n    } else {\n      this.destination.complete!();\n    }\n  }\n\n  notifyNext(innerValue: any): void {\n    this.buffer.push(innerValue);\n    this.parent.checkIterators();\n  }\n\n  subscribe() {\n    return innerSubscribe(this.observable, new SimpleInnerSubscriber(this));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the first `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Takes the first `count` values from the source, then\n * completes.</span>\n *\n * ![](take.png)\n *\n * `take` returns an Observable that emits only the first `count` values emitted\n * by the source Observable. If the source emits fewer than `count` values then\n * all of its values are emitted. After that, it completes, regardless if the\n * source completes.\n *\n * ## Example\n * Take the first 5 seconds of an infinite 1-second interval Observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const intervalCount = interval(1000);\n * const takeFive = intervalCount.pipe(take(5));\n * takeFive.subscribe(x => console.log(x));\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // 3\n * // 4\n * ```\n *\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `take(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of `next` values to emit.\n * @return {Observable<T>} An Observable that emits only the first `count`\n * values emitted by the source Observable, or all of the values from the source\n * if the source emits fewer than `count` values.\n * @method take\n * @owner Observable\n */\nexport function take<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeOperator(count));\n    }\n  };\n}\n\nclass TakeOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const total = this.total;\n    const count = ++this.count;\n    if (count <= total) {\n      this.destination.next(value);\n      if (count === total) {\n        this.destination.complete();\n        this.unsubscribe();\n      }\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { empty } from '../observable/empty';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Emits only the last `count` values emitted by the source Observable.\n *\n * <span class=\"informal\">Remembers the latest `count` values, then emits those\n * only when the source completes.</span>\n *\n * ![](takeLast.png)\n *\n * `takeLast` returns an Observable that emits at most the last `count` values\n * emitted by the source Observable. If the source emits fewer than `count`\n * values then all of its values are emitted. This operator must wait until the\n * `complete` notification emission from the source in order to emit the `next`\n * values on the output Observable, because otherwise it is impossible to know\n * whether or not more values will be emitted on the source. For this reason,\n * all values are emitted synchronously, followed by the complete notification.\n *\n * ## Example\n * Take the last 3 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { takeLast } from 'rxjs/operators';\n *\n * const many = range(1, 100);\n * const lastThree = many.pipe(takeLast(3));\n * lastThree.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeUntil}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @throws {ArgumentOutOfRangeError} When using `takeLast(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0`.\n *\n * @param {number} count The maximum number of values to emit from the end of\n * the sequence of values emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits at most the last count\n * values emitted by the source Observable.\n * @method takeLast\n * @owner Observable\n */\nexport function takeLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return function takeLastOperatorFunction(source: Observable<T>): Observable<T> {\n    if (count === 0) {\n      return empty();\n    } else {\n      return source.lift(new TakeLastOperator(count));\n    }\n  };\n}\n\nclass TakeLastOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n    if (this.total < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TakeLastSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeLastSubscriber<T> extends Subscriber<T> {\n  private ring: Array<T> = new Array();\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const ring = this.ring;\n    const total = this.total;\n    const count = this.count++;\n\n    if (ring.length < total) {\n      ring.push(value);\n    } else {\n      const index = count % total;\n      ring[index] = value;\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n    let count = this.count;\n\n    if (count > 0) {\n      const total = this.count >= this.total ? this.total : this.count;\n      const ring  = this.ring;\n\n      for (let i = 0; i < total; i++) {\n        const idx = (count++) % total;\n        destination.next(ring[idx]);\n      }\n    }\n\n    destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed: R): OperatorFunction<T, R>;\nexport function scan<T>(accumulator: (acc: T, value: T, index: number) => T, seed?: T): MonoTypeOperatorFunction<T>;\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Applies an accumulator function over the source Observable, and returns each\n * intermediate result, with an optional seed value.\n *\n * <span class=\"informal\">It's like {@link reduce}, but emits the current\n * accumulation whenever the source emits a value.</span>\n *\n * ![](scan.png)\n *\n * Combines together all values emitted on the source, using an accumulator\n * function that knows how to join a new source value into the accumulation from\n * the past. Is similar to {@link reduce}, but emits the intermediate\n * accumulations.\n *\n * Returns an Observable that applies a specified `accumulator` function to each\n * item emitted by the source Observable. If a `seed` value is specified, then\n * that value will be used as the initial value for the accumulator. If no seed\n * value is specified, the first item of the source is used as the seed.\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { scan, mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const ones = clicks.pipe(mapTo(1));\n * const seed = 0;\n * const count = ones.pipe(scan((acc, one) => acc + one, seed));\n * count.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link expand}\n * @see {@link mergeScan}\n * @see {@link reduce}\n *\n * @param {function(acc: R, value: T, index: number): R} accumulator\n * The accumulator function called on each source value.\n * @param {T|R} [seed] The initial accumulation value.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method scan\n * @owner Observable\n */\nexport function scan<T, R>(accumulator: (acc: R, value: T, index: number) => R, seed?: T | R): OperatorFunction<T, R> {\n  let hasSeed = false;\n  // providing a seed of `undefined` *should* be valid and trigger\n  // hasSeed! so don't use `seed !== undefined` checks!\n  // For this reason, we have to check it here at the original call site\n  // otherwise inside Operator/Subscriber we won't know if `undefined`\n  // means they didn't provide anything or if they literally provided `undefined`\n  if (arguments.length >= 2) {\n    hasSeed = true;\n  }\n\n  return function scanOperatorFunction(source: Observable<T>): Observable<R> {\n    return source.lift(new ScanOperator(accumulator, seed, hasSeed));\n  };\n}\n\nclass ScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => R, private seed?: T | R, private hasSeed: boolean = false) {}\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ScanSubscriber<T, R> extends Subscriber<T> {\n  private index: number = 0;\n\n  get seed(): T | R {\n    return this._seed;\n  }\n\n  set seed(value: T | R) {\n    this.hasSeed = true;\n    this._seed = value;\n  }\n\n  constructor(destination: Subscriber<R>, private accumulator: (acc: R, value: T, index: number) => R, private _seed: T | R,\n              private hasSeed: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSeed) {\n      this.seed = value;\n      this.destination.next(value);\n    } else {\n      return this._tryNext(value);\n    }\n  }\n\n  private _tryNext(value: T): void {\n    const index = this.index++;\n    let result: any;\n    try {\n      result = this.accumulator(<R>this.seed, value, index);\n    } catch (err) {\n      this.destination.error(err);\n    }\n    this.seed = result;\n    this.destination.next(result);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported, use inner map instead */\nexport function switchMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, emitting values only from the most recently projected Observable.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables.</span>\n *\n * ![](switchMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each time it observes one of these\n * inner Observables, the output Observable begins emitting the items emitted by\n * that inner Observable. When a new inner Observable is emitted, `switchMap`\n * stops emitting items from the earlier-emitted inner Observable and begins\n * emitting items from the new one. It continues to behave like this for\n * subsequent inner Observables.\n *\n * ## Example\n * Generate new Observable according to source Observable values\n * ```typescript\n * import { of } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const switched = of(1, 2, 3).pipe(switchMap((x: number) => of(x, x ** 2, x ** 3)));\n * switched.subscribe(x => console.log(x));\n * // outputs\n * // 1\n * // 1\n * // 1\n * // 2\n * // 4\n * // 8\n * // ... and so on\n * ```\n *\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMap((ev) => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchAll}\n * @see {@link switchMapTo}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item\n * emitted by the source Observable and taking only the values from the most recently\n * projected inner Observable.\n * @method switchMap\n * @owner Observable\n */\nexport function switchMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return (source: Observable<T>) => source.pipe(\n      switchMap((a, i) => from(project(a, i)).pipe(\n        map((b, ii) => resultSelector(a, b, i, ii))\n      ))\n    );\n  }\n  return (source: Observable<T>) => source.lift(new SwitchMapOperator(project));\n}\n\nclass SwitchMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private index = 0;\n  private innerSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (error) {\n      this.destination.error!(error);\n      return;\n    }\n    this._innerSub(result);\n  }\n\n  private _innerSub(result: ObservableInput<R>) {\n    const innerSubscription = this.innerSubscription;\n    if (innerSubscription) {\n      innerSubscription.unsubscribe();\n    }\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    this.innerSubscription = innerSubscribe(result, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (this.innerSubscription !== innerSubscriber) {\n      destination.add(this.innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    const {innerSubscription} = this;\n    if (!innerSubscription || innerSubscription.closed) {\n      super._complete();\n    }\n    this.unsubscribe();\n  }\n\n  protected _unsubscribe() {\n    this.innerSubscription = undefined;\n  }\n\n  notifyComplete(): void {\n    this.innerSubscription = undefined;\n    if (this.isStopped) {\n      super._complete();\n    }\n  }\n\n  notifyNext(innerValue: R): void {\n      this.destination.next!(innerValue);\n  }\n}\n","export default class Timeout {\n    private _promise: Promise<any>;\n    private _resolve: () => void;\n    private _timeoutToken?: number;\n\n    constructor(\n        private _delay?: number\n    ) {\n        // tslint:disable-next-line:no-empty\n        this._resolve = () => {};\n\n        this._promise = new Promise(resolve => {\n            this._resolve = resolve;\n        });\n    }\n\n    onComplete(callback: () => void): void {\n        this._promise.then(callback);\n    }\n\n    complete(): void {\n        this._resolve();\n\n        if (this._timeoutToken) {\n            window.clearTimeout(this._timeoutToken);\n        }\n    }\n\n    start(): void {\n        if (this._delay) {\n            this._timeoutToken = window.setTimeout(() => this.complete(), this._delay);\n        }\n    }\n}\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isNil(value) {\n    if (value === null || value === undefined) {\n        return true;\n    }\n\n    return false;\n}\n","import isObject from './is-object';\n\n/**\n * @param {Object} object\n * @param {Function} predicateFn\n * @returns {Object}\n */\nexport default function omitProperty(object, predicateFn) {\n    if (!isObject(object)) {\n        return object;\n    }\n\n    const keys = Object.keys(object);\n\n    return keys.reduce((result, key) => {\n        const value = object[key];\n\n        if (!predicateFn(value)) {\n            result[key] = value;\n        }\n\n        return result;\n    }, {});\n}\n","import { MULTI_OPTION } from '../payment-method-types';\nimport {\n    BRAINTREE,\n    BRAINTREE_GOOGLEPAY,\n    BRAINTREE_PAYPAL,\n    BRAINTREE_PAYPAL_CREDIT,\n    BRAINTREE_VISACHECKOUT,\n    PAYPAL_COMMERCE,\n    PAYPAL_COMMERCE_CREDIT,\n    PAYPAL_COMMERCE_CREDIT_CARDS,\n    PAYPAL_COMMERCE_ALTERNATIVE_METHODS,\n} from '../payment-method-ids';\n\n/**\n * @param {string} id\n * @return {Boolean}\n */\nfunction isBraintreePaymentMethod(id) {\n    switch (id) {\n    case BRAINTREE_PAYPAL:\n    case BRAINTREE_PAYPAL_CREDIT:\n    case BRAINTREE_VISACHECKOUT:\n    case BRAINTREE_GOOGLEPAY:\n        return true;\n    default:\n        return false;\n    }\n}\n\n/**\n * @param {string} id\n * @return {Boolean}\n */\nfunction isPaypalCommercePaymentMethod(id) {\n    switch (id) {\n    case PAYPAL_COMMERCE_CREDIT:\n    case PAYPAL_COMMERCE_CREDIT_CARDS:\n    case PAYPAL_COMMERCE_ALTERNATIVE_METHODS:\n        return true;\n    default:\n        return false;\n    }\n}\n\nexport default class PaymentMethodIdMapper {\n    /**\n     * @returns {PaymentMethodIdMapper}\n     */\n    static create() {\n        return new PaymentMethodIdMapper();\n    }\n\n    /**\n     * @param {PaymentMethod} paymentMethod\n     * @returns {string}\n     */\n    mapToId(paymentMethod) {\n        let { id } = paymentMethod;\n\n        if (paymentMethod.method === MULTI_OPTION) {\n            id = paymentMethod.gateway;\n        }\n\n        if (isBraintreePaymentMethod(id)) {\n            return BRAINTREE;\n        }\n\n        if (isPaypalCommercePaymentMethod(id)) {\n            return PAYPAL_COMMERCE;\n        }\n\n        return id;\n    }\n}\n","export default class UrlHelper {\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {CustomerMapper}\n     */\n    static create(config) {\n        return new UrlHelper(config);\n    }\n\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {void}\n     */\n    constructor(config) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n    }\n\n    /**\n     * @private\n     * @returns {string}\n     */\n    get host() {\n        return this.config.host;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getOffsitePaymentUrl() {\n        return `${this.host}/pay/initialize`;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getPaymentUrl() {\n        return `${this.host}/api/public/v1/orders/payments`;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getGenerateClientTokenUrl() {\n        return `${this.host}/api/v2/public/payments/client_tokens`;\n    }\n}\n","import deepAssign from 'deep-assign';\nimport objectAssign from 'object-assign';\nimport { POST } from './method-types';\nimport DEFAULT_OPTIONS from './default-options';\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\n\nexport default class RequestSender {\n    /**\n     * @returns {RequestSender}\n     */\n    static create() {\n        const requestFactory = RequestFactory.create();\n        const payloadTransformer = PayloadTransformer.create();\n\n        return new RequestSender(requestFactory, payloadTransformer);\n    }\n\n    /**\n     * @param {RequestFactory} requestFactory\n     * @param {PayloadTransformer} payloadTransformer\n     */\n    constructor(requestFactory, payloadTransformer) {\n        /**\n         * @private\n         * @type {RequestFactory}\n         */\n        this.requestFactory = requestFactory;\n\n        /**\n         * @private\n         * @type {PayloadTransformer}\n         */\n        this.payloadTransformer = payloadTransformer;\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} data\n     * @param {Object} [options]\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    sendRequest(url, data, options, callback) {\n        const mergedOptions = deepAssign({}, DEFAULT_OPTIONS, options);\n\n        const xhr = this.requestFactory.createRequest(url, mergedOptions, (error) => {\n            const response = this.payloadTransformer.fromResponse(xhr);\n\n            if (!callback) {\n                return;\n            }\n\n            if (error || !this.isSuccessfulRequest(xhr)) {\n                callback(response);\n                return;\n            }\n\n            callback(null, response);\n        });\n\n        const payload = this.payloadTransformer.toRequest(data, mergedOptions.headers['Content-Type']);\n\n        xhr.send(payload);\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} data\n     * @param {Object} [options]\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    postRequest(url, data, options, callback) {\n        const mergedOptions = objectAssign({}, options, {\n            method: POST,\n        });\n\n        this.sendRequest(url, data, mergedOptions, callback);\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @returns {boolean}\n     */\n    isSuccessfulRequest(xhr) {\n        return xhr.status >= 200 && xhr.status < 300;\n    }\n}\n","export const GET = 'GET';\nexport const POST = 'POST';\nexport const DELETE = 'DELETE';\n","import { merge } from 'lodash';\nimport {\n    defer,\n    from,\n    of,\n    throwError,\n    BehaviorSubject,\n    Observable,\n    Subject,\n    Subscribable,\n    SubscribableOrPromise\n} from 'rxjs';\nimport {\n    catchError,\n    concatMap,\n    distinctUntilChanged,\n    filter,\n    first,\n    map,\n    mergeMap,\n    scan,\n    skip,\n    tap,\n} from 'rxjs/operators';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport deepFreeze from './deep-freeze';\nimport DispatchableDataStore, { DispatchableAction, DispatchOptions } from './dispatchable-data-store';\nimport isObservableActionLike from './is-observable-action-like';\nimport noopActionTransformer from './noop-action-transformer';\nimport noopStateTransformer from './noop-state-transformer';\nimport ReadableDataStore, { Filter, Subscriber, SubscribeOptions, Unsubscriber } from './readable-data-store';\nimport Reducer from './reducer';\nimport ThunkAction from './thunk-action';\n\nexport default class DataStore<TState, TAction extends Action = Action, TTransformedState = TState> implements\n    ReadableDataStore<TTransformedState>, DispatchableDataStore<TTransformedState, TAction> {\n    private _reducer: Reducer<TState, TAction>;\n    private _options: DataStoreOptions<TState, TAction, TTransformedState>;\n    private _notification$: Subject<TTransformedState>;\n    private _dispatchers: { [key: string]: Dispatcher<TAction> };\n    private _dispatchQueue$: Subject<Dispatcher<TAction>>;\n    private _state$: BehaviorSubject<TTransformedState>;\n    private _errors: { [key: string]: Subject<Error> };\n\n    constructor(\n        reducer: Reducer<TState, TAction>,\n        initialState: Partial<TState> = {},\n        options?: Partial<DataStoreOptions<TState, TAction, TTransformedState>>\n    ) {\n        this._reducer = reducer;\n        this._options = {\n            actionTransformer: noopActionTransformer,\n            equalityCheck: shallowEqual,\n            shouldWarnMutation: true,\n            stateTransformer: noopStateTransformer,\n            ...options,\n        };\n        this._state$ = new BehaviorSubject(this._options.stateTransformer(initialState as TState));\n        this._notification$ = new Subject();\n        this._dispatchers = {};\n        this._dispatchQueue$ = new Subject();\n        this._errors = {};\n\n        this._dispatchQueue$\n            .pipe(\n                mergeMap(dispatcher$ => dispatcher$.pipe(concatMap(action$ => action$))),\n                filter(action => !!action.type),\n                scan(\n                    (states: StateTuple<TState, TTransformedState>, action: TAction) =>\n                        this._transformStates(states, action),\n                    {\n                        state: initialState as TState,\n                        transformedState: this._state$.getValue(),\n                    }\n                ),\n                distinctUntilChanged(({ state: stateA }, { state: stateB }) =>\n                    this._options.equalityCheck(stateA, stateB)\n                ),\n                map(({ transformedState }) => transformedState)\n            )\n            .subscribe(this._state$);\n\n        this.dispatch({ type: 'INIT' } as TAction);\n    }\n\n    dispatch<TDispatchAction extends TAction>(\n        action: DispatchableAction<TDispatchAction, TTransformedState>,\n        options?: DispatchOptions\n    ): Promise<TTransformedState> {\n        if (isObservableActionLike(action)) {\n            return this._dispatchObservableAction(action, options);\n        }\n\n        if (typeof action === 'function') {\n            return this._dispatchThunkAction(action, options);\n        }\n\n        return this._dispatchAction(action);\n    }\n\n    getState(): TTransformedState {\n        return this._state$.getValue();\n    }\n\n    notifyState(): void {\n        this._notification$.next(this.getState());\n    }\n\n    subscribe(subscriber: Subscriber<TTransformedState>, ...filters: Array<Filter<TTransformedState>>): Unsubscriber;\n    subscribe(subscriber: Subscriber<TTransformedState>, options: SubscribeOptions<TTransformedState>): Unsubscriber;\n    subscribe(subscriber: Subscriber<TTransformedState>, ...args: any[]): Unsubscriber {\n        const options: SubscribeOptions<TTransformedState> = typeof args[0] === 'object' ? args[0] : undefined;\n        const filters: Array<Filter<TTransformedState>> = options ? (options.filters || []) : args;\n\n        let state$: Observable<TTransformedState> = this._state$;\n\n        if (filters.length > 0) {\n            state$ = state$.pipe(\n                distinctUntilChanged((stateA, stateB) =>\n                    filters.every(filterFn =>\n                        this._options.equalityCheck(filterFn(stateA), filterFn(stateB))\n                    )\n                )\n            );\n        }\n\n        if (options && options.initial === false) {\n            state$ = state$.pipe(skip(1));\n        }\n\n        const subscriptions = [\n            state$.subscribe(subscriber),\n            this._notification$.subscribe(subscriber),\n        ];\n\n        return () => subscriptions.forEach(subscription => subscription.unsubscribe());\n    }\n\n    private _transformStates(\n        states: StateTuple<TState, TTransformedState>,\n        action: TAction\n    ): StateTuple<TState, TTransformedState> {\n        try {\n            const newState = this._options.shouldWarnMutation === false ?\n                this._reducer(states.state, action) :\n                deepFreeze(this._reducer(states.state, action), {\n                    equalityCheck: this._options.equalityCheck,\n                    previousValue: states.state,\n                });\n            const transformedState = this._options.stateTransformer(newState);\n\n            return { state: newState, transformedState };\n        } catch (error) {\n            this._getDispatchError(action.meta && action.meta.queueId).next(error);\n\n            return { state: states.state, transformedState: states.transformedState };\n        }\n    }\n\n    private _dispatchAction<TDispatchAction extends TAction>(\n        action: TDispatchAction\n    ): Promise<TTransformedState> {\n        return this._dispatchObservableAction(\n            action.error ? throwError(action) : of(action)\n        );\n    }\n\n    private _dispatchObservableAction<TDispatchAction extends TAction>(\n        action$: SubscribableOrPromise<TDispatchAction>,\n        options: DispatchOptions = {}\n    ): Promise<TTransformedState> {\n        return new Promise((resolve, reject) => {\n            const error$ = this._getDispatchError(options.queueId);\n            const transformedAction$ = this._options.actionTransformer(\n                from(action$).pipe(\n                    map(action =>\n                        options.queueId ?\n                            merge({}, action, { meta: { queueId: options.queueId } }) :\n                            action\n                    )\n                ) as Subscribable<TDispatchAction>\n            );\n\n            this._getDispatcher(options.queueId).next(\n                from(transformedAction$)\n                    .pipe(\n                        map((action, index) => {\n                            if (index === 0) {\n                                error$.pipe(first()).subscribe(reject);\n                            }\n\n                            if (action.error) {\n                                reject(action.payload);\n                            }\n\n                            return action;\n                        }),\n                        catchError(action => {\n                            reject(action instanceof Error ? action : action.payload);\n\n                            return of(action);\n                        }),\n                        tap({\n                            complete: () => {\n                                resolve(this.getState());\n                            },\n                        })\n                    )\n            );\n        });\n    }\n\n    private _dispatchThunkAction<TDispatchAction extends TAction>(\n        thunkAction: ThunkAction<TDispatchAction, TTransformedState>,\n        options: DispatchOptions = {}\n    ): Promise<TTransformedState> {\n        return this._dispatchObservableAction(defer(() => thunkAction(this)), options);\n    }\n\n    private _getDispatcher(queueId: string = 'default'): Dispatcher<TAction> {\n        if (!this._dispatchers[queueId]) {\n            this._dispatchers[queueId] = new Subject();\n\n            this._dispatchQueue$.next(this._dispatchers[queueId]);\n        }\n\n        return this._dispatchers[queueId];\n    }\n\n    private _getDispatchError(queueId: string = 'default'): Subject<Error> {\n        if (!this._errors[queueId]) {\n            this._errors[queueId] = new Subject();\n        }\n\n        return this._errors[queueId];\n    }\n}\n\nexport interface DataStoreOptions<TState, TAction, TTransformedState> {\n    shouldWarnMutation: boolean;\n    actionTransformer(action: Subscribable<TAction>): Subscribable<TAction>;\n    equalityCheck(valueA: any, valueB: any): boolean;\n    stateTransformer(state: TState): TTransformedState;\n}\n\ninterface StateTuple<TState, TTransformedState> {\n    state: TState;\n    transformedState: TTransformedState;\n}\n\ntype Dispatcher<TAction> = Subject<Subscribable<TAction>>;\n","import { isPlainObject } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nexport interface DeepFreezeOptions<T> {\n    previousValue?: T;\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n\nexport default function deepFreeze<T>(object: T[], options?: DeepFreezeOptions<T>): ReadonlyArray<T>;\nexport default function deepFreeze<T extends object>(object: T, options?: DeepFreezeOptions<T>): Readonly<T>;\nexport default function deepFreeze<T>(object: T, options?: DeepFreezeOptions<T>): T;\nexport default function deepFreeze<T>(\n    object: T[] | T,\n    options?: DeepFreezeOptions<T>\n): ReadonlyArray<T> | Readonly<T> | T {\n    try {\n        const { equalityCheck = shallowEqual, previousValue = null } = options || {};\n\n        if (equalityCheck(object, previousValue) && Object.isFrozen(previousValue)) {\n            return previousValue as T;\n        }\n\n        if (Object.isFrozen(object) || (!Array.isArray(object) && !isPlainObject(object))) {\n            return object;\n        }\n\n        if (Array.isArray(object)) {\n            return Object.freeze(object.map((value, index) =>\n                deepFreeze(value, {\n                    equalityCheck,\n                    previousValue: Array.isArray(previousValue) ? previousValue[index] : undefined,\n                })\n            ));\n        }\n\n        return Object.freeze(Object.getOwnPropertyNames(object).reduce((result, key) => {\n            result[key as keyof T] = deepFreeze(object[key as keyof T], {\n                equalityCheck,\n                previousValue: previousValue && previousValue.hasOwnProperty(key) ?\n                    (previousValue as any)[key] :\n                    undefined,\n            });\n\n            return result;\n        }, {} as T));\n    } catch (error) {\n        // Browsers that only support ES5 will throw `TypeError` when checking\n        // if a primitive value is frozen or trying to freeze a primitive value.\n        if (error instanceof TypeError) {\n            return object;\n        }\n\n        throw error;\n    }\n}\n","import { assign } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport Reducer from './reducer';\n\nexport default function combineReducers<TState, TAction extends Action = Action>(\n    reducers: ReducerMap<TState, TAction>,\n    options?: CombineReducersOptions\n): Reducer<TState, TAction> {\n    const { equalityCheck = shallowEqual } = options || {};\n\n    return (state, action) =>\n        Object.keys(reducers).reduce((result, key) => {\n            const reducer = reducers[key as keyof TState];\n            const currentState = state ? state[key as keyof TState] : undefined;\n            const newState = reducer(currentState, action);\n\n            if (equalityCheck(currentState, newState) && result) {\n                return result;\n            }\n\n            return assign({}, result, { [key]: newState });\n        }, state || {} as TState);\n}\n\nexport type ReducerMap<TState, TAction extends Action = Action> = {\n    [Key in keyof TState]: Reducer<TState[Key], TAction>;\n};\n\nexport interface CombineReducersOptions {\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n","import { omitBy } from 'lodash';\n\nimport Action from './action';\n\nexport default function createAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    payload?: TPayload,\n    meta?: TMeta\n): Action<TPayload, TMeta, TType> {\n    if (typeof type !== 'string' || type === '') {\n        throw new Error('`type` must be a string');\n    }\n\n    return { type, ...omitBy({ payload, meta }, value => value === undefined) };\n}\n","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { Subject, SubjectSubscriber } from '../Subject';\nimport { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic } from '../types';\nimport { refCount as higherOrderRefCount } from '../operators/refCount';\n\n/**\n * @class ConnectableObservable<T>\n */\nexport class ConnectableObservable<T> extends Observable<T> {\n\n  protected _subject: Subject<T>;\n  protected _refCount: number = 0;\n  protected _connection: Subscription;\n  /** @internal */\n  _isComplete = false;\n\n  constructor(public source: Observable<T>,\n              protected subjectFactory: () => Subject<T>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    return this.getSubject().subscribe(subscriber);\n  }\n\n  protected getSubject(): Subject<T> {\n    const subject = this._subject;\n    if (!subject || subject.isStopped) {\n      this._subject = this.subjectFactory();\n    }\n    return this._subject;\n  }\n\n  connect(): Subscription {\n    let connection = this._connection;\n    if (!connection) {\n      this._isComplete = false;\n      connection = this._connection = new Subscription();\n      connection.add(this.source\n        .subscribe(new ConnectableSubscriber(this.getSubject(), this)));\n      if (connection.closed) {\n        this._connection = null;\n        connection = Subscription.EMPTY;\n      }\n    }\n    return connection;\n  }\n\n  refCount(): Observable<T> {\n    return higherOrderRefCount()(this) as Observable<T>;\n  }\n}\n\nexport const connectableObservableDescriptor: PropertyDescriptorMap = (() => {\n  const connectableProto = <any>ConnectableObservable.prototype;\n  return {\n    operator: { value: null as null },\n    _refCount: { value: 0, writable: true },\n    _subject: { value: null as null, writable: true },\n    _connection: { value: null as null, writable: true },\n    _subscribe: { value: connectableProto._subscribe },\n    _isComplete: { value: connectableProto._isComplete, writable: true },\n    getSubject: { value: connectableProto.getSubject },\n    connect: { value: connectableProto.connect },\n    refCount: { value: connectableProto.refCount }\n  };\n})();\n\nclass ConnectableSubscriber<T> extends SubjectSubscriber<T> {\n  constructor(destination: Subject<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n  protected _error(err: any): void {\n    this._unsubscribe();\n    super._error(err);\n  }\n  protected _complete(): void {\n    this.connectable._isComplete = true;\n    this._unsubscribe();\n    super._complete();\n  }\n  protected _unsubscribe() {\n    const connectable = <any>this.connectable;\n    if (connectable) {\n      this.connectable = null;\n      const connection = connectable._connection;\n      connectable._refCount = 0;\n      connectable._subject = null;\n      connectable._connection = null;\n      if (connection) {\n        connection.unsubscribe();\n      }\n    }\n  }\n}\n\nclass RefCountOperator<T> implements Operator<T, T> {\n  constructor(private connectable: ConnectableObservable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n\n    const { connectable } = this;\n    (<any> connectable)._refCount++;\n\n    const refCounter = new RefCountSubscriber(subscriber, connectable);\n    const subscription = source.subscribe(refCounter);\n\n    if (!refCounter.closed) {\n      (<any> refCounter).connection = connectable.connect();\n    }\n\n    return subscription;\n  }\n}\n\nclass RefCountSubscriber<T> extends Subscriber<T> {\n\n  private connection: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private connectable: ConnectableObservable<T>) {\n    super(destination);\n  }\n\n  protected _unsubscribe() {\n\n    const { connectable } = this;\n    if (!connectable) {\n      this.connection = null;\n      return;\n    }\n\n    this.connectable = null;\n    const refCount = (<any> connectable)._refCount;\n    if (refCount <= 0) {\n      this.connection = null;\n      return;\n    }\n\n    (<any> connectable)._refCount = refCount - 1;\n    if (refCount > 1) {\n      this.connection = null;\n      return;\n    }\n\n    ///\n    // Compare the local RefCountSubscriber's connection Subscription to the\n    // connection Subscription on the shared ConnectableObservable. In cases\n    // where the ConnectableObservable source synchronously emits values, and\n    // the RefCountSubscriber's downstream Observers synchronously unsubscribe,\n    // execution continues to here before the RefCountOperator has a chance to\n    // supply the RefCountSubscriber with the shared connection Subscription.\n    // For example:\n    // ```\n    // range(0, 10).pipe(\n    //   publish(),\n    //   refCount(),\n    //   take(5),\n    // ).subscribe();\n    // ```\n    // In order to account for this case, RefCountSubscriber should only dispose\n    // the ConnectableObservable's shared connection Subscription if the\n    // connection Subscription exists, *and* either:\n    //   a. RefCountSubscriber doesn't have a reference to the shared connection\n    //      Subscription yet, or,\n    //   b. RefCountSubscriber's connection Subscription reference is identical\n    //      to the shared connection Subscription\n    ///\n    const { connection } = this;\n    const sharedConnection = (<any> connectable)._connection;\n    this.connection = null;\n\n    if (sharedConnection && (!connection || sharedConnection === connection)) {\n      sharedConnection.unsubscribe();\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function groupBy<T, K>(keySelector: (value: T) => K): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K>(keySelector: (value: T) => K, elementSelector: void, durationSelector: (grouped: GroupedObservable<K, T>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, T>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>): OperatorFunction<T, GroupedObservable<K, R>>;\nexport function groupBy<T, K, R>(keySelector: (value: T) => K, elementSelector?: (value: T) => R, durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>, subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Groups the items emitted by an Observable according to a specified criterion,\n * and emits these grouped items as `GroupedObservables`, one\n * {@link GroupedObservable} per group.\n *\n * ![](groupBy.png)\n *\n * When the Observable emits an item, a key is computed for this item with the keySelector function.\n *\n * If a {@link GroupedObservable} for this key exists, this {@link GroupedObservable} emits. Elsewhere, a new\n * {@link GroupedObservable} for this key is created and emits.\n *\n * A {@link GroupedObservable} represents values belonging to the same group represented by a common key. The common\n * key is available as the key field of a {@link GroupedObservable} instance.\n *\n * The elements emitted by {@link GroupedObservable}s are by default the items emitted by the Observable, or elements\n * returned by the elementSelector function.\n *\n * ## Examples\n *\n * ### Group objects by id and return as array\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { mergeMap, groupBy, reduce } from 'rxjs/operators';\n *\n * of(\n *   {id: 1, name: 'JavaScript'},\n *   {id: 2, name: 'Parcel'},\n *   {id: 2, name: 'webpack'},\n *   {id: 1, name: 'TypeScript'},\n *   {id: 3, name: 'TSLint'}\n * ).pipe(\n *   groupBy(p => p.id),\n *   mergeMap((group$) => group$.pipe(reduce((acc, cur) => [...acc, cur], []))),\n * )\n * .subscribe(p => console.log(p));\n *\n * // displays:\n * // [ { id: 1, name: 'JavaScript'},\n * //   { id: 1, name: 'TypeScript'} ]\n * //\n * // [ { id: 2, name: 'Parcel'},\n * //   { id: 2, name: 'webpack'} ]\n * //\n * // [ { id: 3, name: 'TSLint'} ]\n * ```\n *\n * ### Pivot data on the id field\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { groupBy, map, mergeMap, reduce } from 'rxjs/operators';\n *\n * of(\n *   { id: 1, name: 'JavaScript' },\n *   { id: 2, name: 'Parcel' },\n *   { id: 2, name: 'webpack' },\n *   { id: 1, name: 'TypeScript' },\n *   { id: 3, name: 'TSLint' }\n * )\n *   .pipe(\n *     groupBy(p => p.id, p => p.name),\n *     mergeMap(group$ =>\n *       group$.pipe(reduce((acc, cur) => [...acc, cur], [`${group$.key}`]))\n *     ),\n *     map(arr => ({ id: parseInt(arr[0], 10), values: arr.slice(1) }))\n *  )\n *  .subscribe(p => console.log(p));\n *\n * // displays:\n * // { id: 1, values: [ 'JavaScript', 'TypeScript' ] }\n * // { id: 2, values: [ 'Parcel', 'webpack' ] }\n * // { id: 3, values: [ 'TSLint' ] }\n * ```\n *\n * @param {function(value: T): K} keySelector A function that extracts the key\n * for each item.\n * @param {function(value: T): R} [elementSelector] A function that extracts the\n * return element for each item.\n * @param {function(grouped: GroupedObservable<K,R>): Observable<any>} [durationSelector]\n * A function that returns an Observable to determine how long each group should\n * exist.\n * @return {Observable<GroupedObservable<K,R>>} An Observable that emits\n * GroupedObservables, each of which corresponds to a unique key value and each\n * of which emits those items from the source Observable that share that key\n * value.\n * @method groupBy\n * @owner Observable\n */\nexport function groupBy<T, K, R>(keySelector: (value: T) => K,\n                                 elementSelector?: ((value: T) => R) | void,\n                                 durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n                                 subjectSelector?: () => Subject<R>): OperatorFunction<T, GroupedObservable<K, R>> {\n  return (source: Observable<T>) =>\n    source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));\n}\n\nexport interface RefCountSubscription {\n  count: number;\n  unsubscribe: () => void;\n  closed: boolean;\n  attemptedToUnsubscribe: boolean;\n}\n\nclass GroupByOperator<T, K, R> implements Operator<T, GroupedObservable<K, R>> {\n  constructor(private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n  }\n\n  call(subscriber: Subscriber<GroupedObservable<K, R>>, source: any): any {\n    return source.subscribe(new GroupBySubscriber(\n      subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupBySubscriber<T, K, R> extends Subscriber<T> implements RefCountSubscription {\n  private groups: Map<K, Subject<T | R>> = null;\n  public attemptedToUnsubscribe: boolean = false;\n  public count: number = 0;\n\n  constructor(destination: Subscriber<GroupedObservable<K, R>>,\n              private keySelector: (value: T) => K,\n              private elementSelector?: ((value: T) => R) | void,\n              private durationSelector?: (grouped: GroupedObservable<K, R>) => Observable<any>,\n              private subjectSelector?: () => Subject<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    let key: K;\n    try {\n      key = this.keySelector(value);\n    } catch (err) {\n      this.error(err);\n      return;\n    }\n\n    this._group(value, key);\n  }\n\n  private _group(value: T, key: K) {\n    let groups = this.groups;\n\n    if (!groups) {\n      groups = this.groups = new Map<K, Subject<T | R>>();\n    }\n\n    let group = groups.get(key);\n\n    let element: R;\n    if (this.elementSelector) {\n      try {\n        element = this.elementSelector(value);\n      } catch (err) {\n        this.error(err);\n      }\n    } else {\n      element = <any>value;\n    }\n\n    if (!group) {\n      group = (this.subjectSelector ? this.subjectSelector() : new Subject<R>()) as Subject<T | R>;\n      groups.set(key, group);\n      const groupedObservable = new GroupedObservable(key, group, this);\n      this.destination.next(groupedObservable);\n      if (this.durationSelector) {\n        let duration: any;\n        try {\n          duration = this.durationSelector(new GroupedObservable<K, R>(key, <Subject<R>>group));\n        } catch (err) {\n          this.error(err);\n          return;\n        }\n        this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));\n      }\n    }\n\n    if (!group.closed) {\n      group.next(element);\n    }\n  }\n\n  protected _error(err: any): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.error(err);\n      });\n\n      groups.clear();\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const groups = this.groups;\n    if (groups) {\n      groups.forEach((group, key) => {\n        group.complete();\n      });\n\n      groups.clear();\n    }\n    this.destination.complete();\n  }\n\n  removeGroup(key: K): void {\n    this.groups.delete(key);\n  }\n\n  unsubscribe() {\n    if (!this.closed) {\n      this.attemptedToUnsubscribe = true;\n      if (this.count === 0) {\n        super.unsubscribe();\n      }\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass GroupDurationSubscriber<K, T> extends Subscriber<T> {\n  constructor(private key: K,\n              private group: Subject<T>,\n              private parent: GroupBySubscriber<any, K, T | any>) {\n    super(group);\n  }\n\n  protected _next(value: T): void {\n    this.complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { parent, key } = this;\n    this.key = this.parent = null;\n    if (parent) {\n      parent.removeGroup(key);\n    }\n  }\n}\n\n/**\n * An Observable representing values belonging to the same group represented by\n * a common key. The values emitted by a GroupedObservable come from the source\n * Observable. The common key is available as the field `key` on a\n * GroupedObservable instance.\n *\n * @class GroupedObservable<K, T>\n */\nexport class GroupedObservable<K, T> extends Observable<T> {\n  /** @deprecated Do not construct this type. Internal use only */\n  constructor(public key: K,\n              private groupSubject: Subject<T>,\n              private refCountSubscription?: RefCountSubscription) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const subscription = new Subscription();\n    const { refCountSubscription, groupSubject } = this;\n    if (refCountSubscription && !refCountSubscription.closed) {\n      subscription.add(new InnerRefCountSubscription(refCountSubscription));\n    }\n    subscription.add(groupSubject.subscribe(subscriber));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass InnerRefCountSubscription extends Subscription {\n  constructor(private parent: RefCountSubscription) {\n    super();\n    parent.count++;\n  }\n\n  unsubscribe() {\n    const parent = this.parent;\n    if (!parent.closed && !this.closed) {\n      super.unsubscribe();\n      parent.count -= 1;\n      if (parent.count === 0 && parent.attemptedToUnsubscribe) {\n        parent.unsubscribe();\n      }\n    }\n  }\n}\n","import { Subject } from './Subject';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { SubscriptionLike } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\n\n/**\n * A variant of Subject that requires an initial value and emits its current\n * value whenever it is subscribed to.\n *\n * @class BehaviorSubject<T>\n */\nexport class BehaviorSubject<T> extends Subject<T> {\n\n  constructor(private _value: T) {\n    super();\n  }\n\n  get value(): T {\n    return this.getValue();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const subscription = super._subscribe(subscriber);\n    if (subscription && !(<SubscriptionLike>subscription).closed) {\n      subscriber.next(this._value);\n    }\n    return subscription;\n  }\n\n  getValue(): T {\n    if (this.hasError) {\n      throw this.thrownError;\n    } else if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return this._value;\n    }\n  }\n\n  next(value: T): void {\n    super.next(this._value = value);\n  }\n}\n","import { QueueAction } from './QueueAction';\nimport { QueueScheduler } from './QueueScheduler';\n\n/**\n *\n * Queue Scheduler\n *\n * <span class=\"informal\">Put every next task on a queue, instead of executing it immediately</span>\n *\n * `queue` scheduler, when used with delay, behaves the same as {@link asyncScheduler} scheduler.\n *\n * When used without delay, it schedules given task synchronously - executes it right when\n * it is scheduled. However when called recursively, that is when inside the scheduled task,\n * another task is scheduled with queue scheduler, instead of executing immediately as well,\n * that task will be put on a queue and wait for current one to finish.\n *\n * This means that when you execute task with `queue` scheduler, you are sure it will end\n * before any other task scheduled with that scheduler will start.\n *\n * ## Examples\n * Schedule recursively first, then do something\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(() => {\n *   queueScheduler.schedule(() => console.log('second')); // will not happen now, but will be put on a queue\n *\n *   console.log('first');\n * });\n *\n * // Logs:\n * // \"first\"\n * // \"second\"\n * ```\n *\n * Reschedule itself recursively\n * ```ts\n * import { queueScheduler } from 'rxjs';\n *\n * queueScheduler.schedule(function(state) {\n *   if (state !== 0) {\n *     console.log('before', state);\n *     this.schedule(state - 1); // `this` references currently executing Action,\n *                               // which we reschedule with new state\n *     console.log('after', state);\n *   }\n * }, 0, 3);\n *\n * // In scheduler that runs recursively, you would expect:\n * // \"before\", 3\n * // \"before\", 2\n * // \"before\", 1\n * // \"after\", 1\n * // \"after\", 2\n * // \"after\", 3\n *\n * // But with queue it logs:\n * // \"before\", 3\n * // \"after\", 3\n * // \"before\", 2\n * // \"after\", 2\n * // \"before\", 1\n * // \"after\", 1\n * ```\n */\nexport const queueScheduler = new QueueScheduler(QueueAction);\n\n/**\n * @deprecated renamed. Use {@link queueScheduler}\n */\nexport const queue = queueScheduler;\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n *\n * Re-emits all notifications from source Observable with specified scheduler.\n *\n * <span class=\"informal\">Ensure a specific scheduler is used, from outside of an Observable.</span>\n *\n * `observeOn` is an operator that accepts a scheduler as a first parameter, which will be used to reschedule\n * notifications emitted by the source Observable. It might be useful, if you do not have control over\n * internal scheduler of a given Observable, but want to control when its values are emitted nevertheless.\n *\n * Returned Observable emits the same notifications (nexted values, complete and error events) as the source Observable,\n * but rescheduled with provided scheduler. Note that this doesn't mean that source Observables internal\n * scheduler will be replaced in any way. Original scheduler still will be used, but when the source Observable emits\n * notification, it will be immediately scheduled again - this time with scheduler passed to `observeOn`.\n * An anti-pattern would be calling `observeOn` on Observable that emits lots of values synchronously, to split\n * that emissions into asynchronous chunks. For this to happen, scheduler would have to be passed into the source\n * Observable directly (usually into the operator that creates it). `observeOn` simply delays notifications a\n * little bit more, to ensure that they are emitted at expected moments.\n *\n * As a matter of fact, `observeOn` accepts second parameter, which specifies in milliseconds with what delay notifications\n * will be emitted. The main difference between {@link delay} operator and `observeOn` is that `observeOn`\n * will delay all notifications - including error notifications - while `delay` will pass through error\n * from source Observable immediately when it is emitted. In general it is highly recommended to use `delay` operator\n * for any kind of delaying of values in the stream, while using `observeOn` to specify which scheduler should be used\n * for notification emissions in general.\n *\n * ## Example\n * Ensure values in subscribe are called just before browser repaint.\n * ```ts\n * import { interval } from 'rxjs';\n * import { observeOn } from 'rxjs/operators';\n *\n * const intervals = interval(10);                // Intervals are scheduled\n *                                                // with async scheduler by default...\n * intervals.pipe(\n *   observeOn(animationFrameScheduler),          // ...but we will observe on animationFrame\n * )                                              // scheduler to ensure smooth animation.\n * .subscribe(val => {\n *   someDiv.style.height = val + 'px';\n * });\n * ```\n *\n * @see {@link delay}\n *\n * @param {SchedulerLike} scheduler Scheduler that will be used to reschedule notifications from source Observable.\n * @param {number} [delay] Number of milliseconds that states with what delay every notification should be rescheduled.\n * @return {Observable<T>} Observable that emits the same notifications as the source Observable,\n * but with provided scheduler.\n *\n * @method observeOn\n * @owner Observable\n */\nexport function observeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function observeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new ObserveOnOperator(scheduler, delay));\n  };\n}\n\nexport class ObserveOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike, private delay: number = 0) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ObserveOnSubscriber<T> extends Subscriber<T> {\n  /** @nocollapse */\n  static dispatch(this: SchedulerAction<ObserveOnMessage>, arg: ObserveOnMessage) {\n    const { notification, destination } = arg;\n    notification.observe(destination);\n    this.unsubscribe();\n  }\n\n  constructor(destination: Subscriber<T>,\n              private scheduler: SchedulerLike,\n              private delay: number = 0) {\n    super(destination);\n  }\n\n  private scheduleMessage(notification: Notification<any>): void {\n    const destination = this.destination as Subscription;\n    destination.add(this.scheduler.schedule(\n      ObserveOnSubscriber.dispatch,\n      this.delay,\n      new ObserveOnMessage(notification, this.destination)\n    ));\n  }\n\n  protected _next(value: T): void {\n    this.scheduleMessage(Notification.createNext(value));\n  }\n\n  protected _error(err: any): void {\n    this.scheduleMessage(Notification.createError(err));\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.scheduleMessage(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nexport class ObserveOnMessage {\n  constructor(public notification: Notification<any>,\n              public destination: PartialObserver<any>) {\n  }\n}\n","import { Subscriber } from '../Subscriber';\n\n/**\n * Subscribes to an ArrayLike with a subscriber\n * @param array The array or array-like to subscribe to\n */\nexport const subscribeToArray = <T>(array: ArrayLike<T>) => (subscriber: Subscriber<T>) => {\n  for (let i = 0, len = array.length; i < len && !subscriber.closed; i++) {\n    subscriber.next(array[i]);\n  }\n  subscriber.complete();\n};\n","import { AsapAction } from './AsapAction';\nimport { AsapScheduler } from './AsapScheduler';\n\n/**\n *\n * Asap Scheduler\n *\n * <span class=\"informal\">Perform task as fast as it can be performed asynchronously</span>\n *\n * `asap` scheduler behaves the same as {@link asyncScheduler} scheduler when you use it to delay task\n * in time. If however you set delay to `0`, `asap` will wait for current synchronously executing\n * code to end and then it will try to execute given task as fast as possible.\n *\n * `asap` scheduler will do its best to minimize time between end of currently executing code\n * and start of scheduled task. This makes it best candidate for performing so called \"deferring\".\n * Traditionally this was achieved by calling `setTimeout(deferredTask, 0)`, but that technique involves\n * some (although minimal) unwanted delay.\n *\n * Note that using `asap` scheduler does not necessarily mean that your task will be first to process\n * after currently executing code. In particular, if some task was also scheduled with `asap` before,\n * that task will execute first. That being said, if you need to schedule task asynchronously, but\n * as soon as possible, `asap` scheduler is your best bet.\n *\n * ## Example\n * Compare async and asap scheduler<\n * ```ts\n * import { asapScheduler, asyncScheduler } from 'rxjs';\n *\n * asyncScheduler.schedule(() => console.log('async')); // scheduling 'async' first...\n * asapScheduler.schedule(() => console.log('asap'));\n *\n * // Logs:\n * // \"asap\"\n * // \"async\"\n * // ... but 'asap' goes first!\n * ```\n */\nexport const asapScheduler = new AsapScheduler(AsapAction);\n\n/**\n * @deprecated renamed. Use {@link asapScheduler}\n */\nexport const asap = asapScheduler;\n","export interface TimeoutError extends Error {\n}\n\nexport interface TimeoutErrorCtor {\n  new(): TimeoutError;\n}\n\nconst TimeoutErrorImpl = (() => {\n  function TimeoutErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'Timeout has occurred';\n    this.name = 'TimeoutError';\n    return this;\n  }\n\n  TimeoutErrorImpl.prototype = Object.create(Error.prototype);\n\n  return TimeoutErrorImpl;\n})();\n\n/**\n * An error thrown when duetime elapses.\n *\n * @see {@link operators/timeout}\n *\n * @class TimeoutError\n */\nexport const TimeoutError: TimeoutErrorCtor = TimeoutErrorImpl as any;\n","export const isArrayLike = (<T>(x: any): x is ArrayLike<T> => x && typeof x.length === 'number' && typeof x !== 'function');","/**\n * Tests to see if the object is an ES2015 (ES6) Promise\n * @see {@link https://www.ecma-international.org/ecma-262/6.0/#sec-promise-objects}\n * @param value the object to test\n */\nexport function isPromise(value: any): value is PromiseLike<any> {\n  return !!value && typeof (<any>value).subscribe !== 'function' && typeof (value as any).then === 'function';\n}\n","\nimport { mergeAll } from './mergeAll';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function concatAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by\n * concatenating the inner Observables in order.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by putting one\n * inner Observable after the other.</span>\n *\n * ![](concatAll.png)\n *\n * Joins every Observable emitted by the source (a higher-order Observable), in\n * a serial fashion. It subscribes to each inner Observable only after the\n * previous inner Observable has completed, and merges all of their values into\n * the returned observable.\n *\n * __Warning:__ If the source Observable emits Observables quickly and\n * endlessly, and the inner Observables it emits generally complete slower than\n * the source emits, you can run into memory issues as the incoming Observables\n * collect in an unbounded buffer.\n *\n * Note: `concatAll` is equivalent to `mergeAll` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n *\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, take, concatAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev => interval(1000).pipe(take(4))),\n * );\n * const firstOrder = higherOrder.pipe(concatAll());\n * firstOrder.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concat}\n * @see {@link concatMap}\n * @see {@link concatMapTo}\n * @see {@link exhaust}\n * @see {@link mergeAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable emitting values from all the inner\n * Observables concatenated.\n * @method concatAll\n * @owner Observable\n */\nexport function concatAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return mergeAll<T>(1);\n}\n","import { scheduleObservable } from './scheduleObservable';\nimport { schedulePromise } from './schedulePromise';\nimport { scheduleArray } from './scheduleArray';\nimport { scheduleIterable } from './scheduleIterable';\nimport { ObservableInput, SchedulerLike, Observable } from 'rxjs';\nimport { isInteropObservable } from '../util/isInteropObservable';\nimport { isPromise } from '../util/isPromise';\nimport { isArrayLike } from '../util/isArrayLike';\nimport { isIterable } from '../util/isIterable';\n\n/**\n * Converts from a common {@link ObservableInput} type to an observable where subscription and emissions\n * are scheduled on the provided scheduler.\n *\n * @see from\n * @see of\n *\n * @param input The observable, array, promise, iterable, etc you would like to schedule\n * @param scheduler The scheduler to use to schedule the subscription and emissions from\n * the returned observable.\n */\nexport function scheduled<T>(input: ObservableInput<T>, scheduler: SchedulerLike): Observable<T> {\n  if (input != null) {\n    if (isInteropObservable(input)) {\n      return scheduleObservable(input, scheduler);\n    } else if (isPromise(input)) {\n      return schedulePromise(input, scheduler);\n    } else if (isArrayLike(input)) {\n      return scheduleArray(input, scheduler);\n    }  else if (isIterable(input) || typeof input === 'string') {\n      return scheduleIterable(input, scheduler);\n    }\n  }\n\n  throw new TypeError((input !== null && typeof input || input) + ' is not observable');\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, SchedulerLike} from '../types';\nimport { isScheduler } from '../util/isScheduler';\nimport { mergeAll } from '../operators/mergeAll';\nimport { fromArray } from './fromArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(v1: ObservableInput<T>, concurrent: number, scheduler: SchedulerLike): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent: number, scheduler: SchedulerLike): Observable<T | T2 | T3 | T4 | T5 | T6>;\n\nexport function merge<T>(v1: ObservableInput<T>): Observable<T>;\nexport function merge<T>(v1: ObservableInput<T>, concurrent?: number): Observable<T>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<T | T2>;\nexport function merge<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>, concurrent?: number): Observable<T | T2>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number): Observable<T | T2 | T3>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number): Observable<T | T2 | T3 | T4>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number): Observable<T | T2 | T3 | T4 | T5 | T6>;\nexport function merge<T>(...observables: (ObservableInput<T> | number)[]): Observable<T>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T>(...observables: (ObservableInput<T> | SchedulerLike | number)[]): Observable<T>;\nexport function merge<T, R>(...observables: (ObservableInput<any> | number)[]): Observable<R>;\n/** @deprecated use {@link scheduled} and {@link mergeAll} (e.g. `scheduled([ob1, ob2, ob3], scheduled).pipe(mergeAll())*/\nexport function merge<T, R>(...observables: (ObservableInput<any> | SchedulerLike | number)[]): Observable<R>;\n/* tslint:enable:max-line-length */\n/**\n * Creates an output Observable which concurrently emits all values from every\n * given input Observable.\n *\n * <span class=\"informal\">Flattens multiple Observables together by blending\n * their values into one Observable.</span>\n *\n * ![](merge.png)\n *\n * `merge` subscribes to each given input Observable (as arguments), and simply\n * forwards (without doing any transformation) all the values from all the input\n * Observables to the output Observable. The output Observable only completes\n * once all input Observables have completed. Any error delivered by an input\n * Observable will be immediately emitted on the output Observable.\n *\n * ## Examples\n * ### Merge together two Observables: 1s interval and clicks\n * ```ts\n * import { merge, fromEvent, interval } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const clicksOrTimer = merge(clicks, timer);\n * clicksOrTimer.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // timer will emit ascending values, one every second(1000ms) to console\n * // clicks logs MouseEvents to console everytime the \"document\" is clicked\n * // Since the two streams are merged you see these happening\n * // as they occur.\n * ```\n *\n * ### Merge together 3 Observables, but only 2 run concurrently\n * ```ts\n * import { merge, interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const timer1 = interval(1000).pipe(take(10));\n * const timer2 = interval(2000).pipe(take(6));\n * const timer3 = interval(500).pipe(take(10));\n * const concurrent = 2; // the argument\n * const merged = merge(timer1, timer2, timer3, concurrent);\n * merged.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - First timer1 and timer2 will run concurrently\n * // - timer1 will emit a value every 1000ms for 10 iterations\n * // - timer2 will emit a value every 2000ms for 6 iterations\n * // - after timer1 hits its max iteration, timer2 will\n * //   continue, and timer3 will start to run concurrently with timer2\n * // - when timer2 hits its max iteration it terminates, and\n * //   timer3 will continue to emit a value every 500ms until it is complete\n * ```\n *\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeMapTo}\n * @see {@link mergeScan}\n *\n * @param {...ObservableInput} observables Input Observables to merge together.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for managing\n * concurrency of input Observables.\n * @return {Observable} an Observable that emits items that are the result of\n * every input Observable.\n * @static true\n * @name merge\n * @owner Observable\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): Observable<R> {\n let concurrent = Number.POSITIVE_INFINITY;\n let scheduler: SchedulerLike = null;\n  let last: any = observables[observables.length - 1];\n  if (isScheduler(last)) {\n    scheduler = <SchedulerLike>observables.pop();\n    if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {\n      concurrent = <number>observables.pop();\n    }\n  } else if (typeof last === 'number') {\n    concurrent = <number>observables.pop();\n  }\n\n  if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable) {\n    return <Observable<R>>observables[0];\n  }\n\n  return mergeAll<R>(concurrent)(fromArray<any>(observables, scheduler));\n}\n","import { Observable } from '../Observable';\nimport { noop } from '../util/noop';\n\n/**\n * An Observable that emits no items to the Observer and never completes.\n *\n * ![](never.png)\n *\n * A simple Observable that emits neither values nor errors nor the completion\n * notification. It can be used for testing purposes or for composing with other\n * Observables. Please note that by never emitting a complete notification, this\n * Observable keeps the subscription from being disposed automatically.\n * Subscriptions need to be manually disposed.\n *\n * ##  Example\n * ### Emit the number 7, then never emit anything else (not even complete)\n * ```ts\n * import { NEVER } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * function info() {\n *   console.log('Will not be called');\n * }\n * const result = NEVER.pipe(startWith(7));\n * result.subscribe(x => console.log(x), info, info);\n *\n * ```\n *\n * @see {@link Observable}\n * @see {@link index/EMPTY}\n * @see {@link of}\n * @see {@link throwError}\n */\nexport const NEVER = new Observable<never>(noop);\n\n/**\n * @deprecated Deprecated in favor of using {@link NEVER} constant.\n */\nexport function never () {\n  return NEVER;\n}\n","export function not(pred: Function, thisArg: any): Function {\n  function notPred(): any {\n    return !((<any> notPred).pred.apply((<any> notPred).thisArg, arguments));\n  }\n  (<any> notPred).pred = pred;\n  (<any> notPred).thisArg = thisArg;\n  return notPred;\n}","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { fromArray } from './fromArray';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { TeardownLogic, ObservableInput } from '../types';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\n\n// tslint:disable:max-line-length\nexport function race<A>(arg: [ObservableInput<A>]): Observable<A>;\nexport function race<A, B>(arg: [ObservableInput<A>, ObservableInput<B>]): Observable<A | B>;\nexport function race<A, B, C>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<A | B | C>;\nexport function race<A, B, C, D>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(arg: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<A | B | C | D | E>;\nexport function race<T>(arg: ObservableInput<T>[]): Observable<T>;\nexport function race(arg: ObservableInput<any>[]): Observable<{}>;\n\nexport function race<A>(a: ObservableInput<A>): Observable<A>;\nexport function race<A, B>(a: ObservableInput<A>, b: ObservableInput<B>): Observable<A | B>;\nexport function race<A, B, C>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>): Observable<A | B | C>;\nexport function race<A, B, C, D>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>): Observable<A | B | C | D>;\nexport function race<A, B, C, D, E>(a: ObservableInput<A>, b: ObservableInput<B>, c: ObservableInput<C>, d: ObservableInput<D>, e: ObservableInput<E>): Observable<A | B | C | D | E>;\n// tslint:enable:max-line-length\n\nexport function race<T>(observables: ObservableInput<T>[]): Observable<T>;\nexport function race(observables: ObservableInput<any>[]): Observable<{}>;\nexport function race<T>(...observables: ObservableInput<T>[]): Observable<T>;\nexport function race(...observables: ObservableInput<any>[]): Observable<{}>;\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit an item.\n *\n * ## Example\n * ### Subscribes to the observable that was the first to start emitting.\n *\n * ```ts\n * import { race, interval } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const obs1 = interval(1000).pipe(mapTo('fast one'));\n * const obs2 = interval(3000).pipe(mapTo('medium one'));\n * const obs3 = interval(5000).pipe(mapTo('slow one'));\n *\n * race(obs3, obs1, obs2)\n * .subscribe(\n *   winner => console.log(winner)\n * );\n *\n * // result:\n * // a series of 'fast one'\n * ```\n *\n * @param {...Observables} ...observables sources used to race for which Observable emits first.\n * @return {Observable} an Observable that mirrors the output of the first Observable to emit an item.\n * @static true\n * @name race\n * @owner Observable\n */\nexport function race<T>(...observables: ObservableInput<any>[]): Observable<T> {\n  // if the only argument is an array, it was most likely called with\n  // `race([obs1, obs2, ...])`\n  if (observables.length === 1) {\n    if (isArray(observables[0])) {\n      observables = observables[0] as Observable<any>[];\n    } else {\n      return observables[0] as Observable<T>;\n    }\n  }\n\n  return fromArray(observables, undefined).lift(new RaceOperator<T>());\n}\n\nexport class RaceOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RaceSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class RaceSubscriber<T> extends OuterSubscriber<T, T> {\n  private hasFirst: boolean = false;\n  private observables: Observable<any>[] = [];\n  private subscriptions: Subscription[] = [];\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(observable: any): void {\n    this.observables.push(observable);\n  }\n\n  protected _complete() {\n    const observables = this.observables;\n    const len = observables.length;\n\n    if (len === 0) {\n      this.destination.complete!();\n    } else {\n      for (let i = 0; i < len && !this.hasFirst; i++) {\n        const observable = observables[i];\n        const subscription = subscribeToResult(this, observable, undefined, i)!;\n\n        if (this.subscriptions) {\n          this.subscriptions.push(subscription);\n        }\n        this.add(subscription);\n      }\n      this.observables = null!;\n    }\n  }\n\n  notifyNext(_outerValue: T, innerValue: T,\n             outerIndex: number): void {\n    if (!this.hasFirst) {\n      this.hasFirst = true;\n\n      for (let i = 0; i < this.subscriptions.length; i++) {\n        if (i !== outerIndex) {\n          let subscription = this.subscriptions[i];\n\n          subscription.unsubscribe();\n          this.remove(subscription);\n        }\n      }\n\n      this.subscriptions = null!;\n    }\n\n    this.destination.next!(innerValue);\n  }\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Ignores source values for a duration determined by another Observable, then\n * emits the most recent value from the source Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link auditTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](audit.png)\n *\n * `audit` is similar to `throttle`, but emits the last value from the silenced\n * time window, instead of the first value. `audit` emits the most recent value\n * from the source Observable on the output Observable as soon as its internal\n * timer becomes disabled, and ignores source values while the timer is enabled.\n * Initially, the timer is disabled. As soon as the first source value arrives,\n * the timer is enabled by calling the `durationSelector` function with the\n * source value, which returns the \"duration\" Observable. When the duration\n * Observable emits a value or completes, the timer is disabled, then the most\n * recent source value is emitted on the output Observable, and this process\n * repeats for the next source value.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { audit } from 'rxjs/operators'\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(audit(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration, returned as an Observable or a Promise.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method audit\n * @owner Observable\n */\nexport function audit<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return function auditOperatorFunction(source: Observable<T>) {\n    return source.lift(new AuditOperator(durationSelector));\n  };\n}\n\nclass AuditOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new AuditSubscriber<T, T>(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass AuditSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private value?: T;\n  private hasValue: boolean = false;\n  private throttled?: Subscription;\n\n  constructor(destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.value = value;\n    this.hasValue = true;\n    if (!this.throttled) {\n      let duration;\n      try {\n        const { durationSelector } = this;\n        duration = durationSelector(value);\n      } catch (err) {\n        return this.destination.error!(err);\n      }\n      const innerSubscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n      if (!innerSubscription || innerSubscription.closed) {\n        this.clearThrottle();\n      } else {\n        this.add(this.throttled = innerSubscription);\n      }\n    }\n  }\n\n  clearThrottle() {\n    const { value, hasValue, throttled } = this;\n    if (throttled) {\n      this.remove(throttled);\n      this.throttled = undefined;\n      throttled.unsubscribe();\n    }\n    if (hasValue) {\n      this.value = undefined;\n      this.hasValue = false;\n      this.destination.next!(value);\n    }\n  }\n\n  notifyNext(): void {\n    this.clearThrottle();\n  }\n\n  notifyComplete(): void {\n    this.clearThrottle();\n  }\n}\n","import { mergeMap } from './mergeMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector no longer supported, use inner map instead */\nexport function concatMap<T, R, O extends ObservableInput<any>>(project: (value: T, index: number) =>  O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable, in a serialized fashion waiting for each one to complete before\n * merging the next.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link concatAll}.</span>\n *\n * ![](concatMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. Each new inner Observable is\n * concatenated with the previous inner Observable.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMap` is equivalent to `mergeMap` with concurrency parameter set\n * to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMap(ev => interval(1000).pipe(take(4)))\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMapTo}\n * @see {@link exhaustMap}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable that emits the result of applying the\n * projection function (and the optional deprecated `resultSelector`) to each item emitted\n * by the source Observable and taking values from each projected inner\n * Observable sequentially.\n * @method concatMap\n * @owner Observable\n */\nexport function concatMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return mergeMap(project, resultSelector, 1);\n}\n","export function isDate(value: any): value is Date {\n  return value instanceof Date && !isNaN(+value);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilChanged<T>(compare?: (x: T, y: T) => boolean): MonoTypeOperatorFunction<T>;\nexport function distinctUntilChanged<T, K>(compare: (x: K, y: K) => boolean, keySelector: (x: T) => K): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Example\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 4).pipe(\n *     distinctUntilChanged(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 1, 2, 3, 4\n * ```\n *\n * An example using a compare function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilChanged } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilChanged((p: Person, q: Person) => p.name === q.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinctUntilChanged\n * @owner Observable\n */\nexport function distinctUntilChanged<T, K>(compare?: (x: K, y: K) => boolean, keySelector?: (x: T) => K): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctUntilChangedOperator<T, K>(compare, keySelector));\n}\n\nclass DistinctUntilChangedOperator<T, K> implements Operator<T, T> {\n  constructor(private compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DistinctUntilChangedSubscriber<T, K> extends Subscriber<T> {\n  private key: K;\n  private hasKey: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              compare: (x: K, y: K) => boolean,\n              private keySelector: (x: T) => K) {\n    super(destination);\n    if (typeof compare === 'function') {\n      this.compare = compare;\n    }\n  }\n\n  private compare(x: any, y: any): boolean {\n    return x === y;\n  }\n\n  protected _next(value: T): void {\n    let key: any;\n    try {\n      const { keySelector } = this;\n      key = keySelector ? keySelector(value) : value;\n    } catch (err) {\n      return this.destination.error(err);\n    }\n    let result = false;\n    if (this.hasKey) {\n      try {\n        const { compare } = this;\n        result = compare(this.key, key);\n      } catch (err) {\n        return this.destination.error(err);\n      }\n    } else {\n      this.hasKey = true;\n    }\n    if (!result) {\n      this.key = key;\n      this.destination.next(value);\n    }\n  }\n}\n","import {Observable} from '../Observable';\nimport {Operator} from '../Operator';\nimport {Subscriber} from '../Subscriber';\nimport {OperatorFunction} from '../types';\n\nexport function find<T, S extends T>(predicate: (value: T, index: number, source: Observable<T>) => value is S,\n                                     thisArg?: any): OperatorFunction<T, S | undefined>;\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined>;\n/**\n * Emits only the first value emitted by the source Observable that meets some\n * condition.\n *\n * <span class=\"informal\">Finds the first value that passes some test and emits\n * that.</span>\n *\n * ![](find.png)\n *\n * `find` searches for the first item in the source Observable that matches the\n * specified condition embodied by the `predicate`, and returns the first\n * occurrence in the source. Unlike {@link first}, the `predicate` is required\n * in `find`, and does not emit an error if a valid value is not found.\n *\n * ## Example\n * Find and emit the first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { find } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(find(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link first}\n * @see {@link findIndex}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable<T>} An Observable of the first item that matches the\n * condition.\n * @method find\n * @owner Observable\n */\nexport function find<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                        thisArg?: any): OperatorFunction<T, T | undefined> {\n  if (typeof predicate !== 'function') {\n    throw new TypeError('predicate is not a function');\n  }\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, false, thisArg)) as Observable<T | undefined>;\n}\n\nexport class FindValueOperator<T> implements Operator<T, T | number | undefined> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n  }\n\n  call(observer: Subscriber<T>, source: any): any {\n    return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class FindValueSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private source: Observable<T>,\n              private yieldIndex: boolean,\n              private thisArg?: any) {\n    super(destination);\n  }\n\n  private notifyComplete(value: any): void {\n    const destination = this.destination;\n\n    destination.next(value);\n    destination.complete();\n    this.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    const {predicate, thisArg} = this;\n    const index = this.index++;\n    try {\n      const result = predicate.call(thisArg || this, value, index, this.source);\n      if (result) {\n        this.notifyComplete(this.yieldIndex ? index : value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(this.yieldIndex ? -1 : undefined);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\nexport interface ThrottleConfig {\n  leading?: boolean;\n  trailing?: boolean;\n}\n\nexport const defaultThrottleConfig: ThrottleConfig = {\n  leading: true,\n  trailing: false\n};\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for a duration determined by another Observable, then repeats this\n * process.\n *\n * <span class=\"informal\">It's like {@link throttleTime}, but the silencing\n * duration is determined by a second Observable.</span>\n *\n * ![](throttle.png)\n *\n * `throttle` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled by calling the `durationSelector` function with the source value,\n * which returns the \"duration\" Observable. When the duration Observable emits a\n * value or completes, the timer is disabled, and this process repeats for the\n * next source value.\n *\n * ## Example\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttle(ev => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link delayWhen}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the silencing\n * duration for each source value, returned as an Observable or a Promise.\n * @param {Object} config a configuration object to define `leading` and `trailing` behavior. Defaults\n * to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttle\n * @owner Observable\n */\nexport function throttle<T>(durationSelector: (value: T) => SubscribableOrPromise<any>,\n                            config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing));\n}\n\nclass ThrottleOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private _throttled?: Subscription;\n  private _sendValue?: T;\n  private _hasValue = false;\n\n  constructor(protected destination: Subscriber<T>,\n              private durationSelector: (value: T) => SubscribableOrPromise<number>,\n              private _leading: boolean,\n              private _trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this._hasValue = true;\n    this._sendValue = value;\n\n    if (!this._throttled) {\n      if (this._leading) {\n        this.send();\n      } else {\n        this.throttle(value);\n      }\n    }\n  }\n\n  private send() {\n    const { _hasValue, _sendValue } = this;\n    if (_hasValue) {\n      this.destination.next(_sendValue);\n      this.throttle(_sendValue!);\n    }\n    this._hasValue = false;\n    this._sendValue = undefined;\n  }\n\n  private throttle(value: T): void {\n    const duration = this.tryDurationSelector(value);\n    if (!!duration) {\n      this.add(this._throttled = innerSubscribe(duration, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  private tryDurationSelector(value: T): SubscribableOrPromise<any> | null {\n    try {\n      return this.durationSelector(value);\n    } catch (err) {\n      this.destination.error(err);\n      return null;\n    }\n  }\n\n  private throttlingDone() {\n    const { _throttled, _trailing } = this;\n    if (_throttled) {\n      _throttled.unsubscribe();\n    }\n    this._throttled = undefined;\n\n    if (_trailing) {\n      this.send();\n    }\n  }\n\n  notifyNext(): void {\n    this.throttlingDone();\n  }\n\n  notifyComplete(): void {\n    this.throttlingDone();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { isDate } from '../util/isDate';\nimport { ObservableInput, OperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function timeoutWith<T, R>(due: number | Date, withObservable: ObservableInput<R>, scheduler?: SchedulerLike): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n *\n * Errors if Observable does not emit a value in given time span, in case of which\n * subscribes to the second Observable.\n *\n * <span class=\"informal\">It's a version of `timeout` operator that let's you specify fallback Observable.</span>\n *\n * ![](timeoutWith.png)\n *\n * `timeoutWith` is a variation of `timeout` operator. It behaves exactly the same,\n * still accepting as a first argument either a number or a Date, which control - respectively -\n * when values of source Observable should be emitted or when it should complete.\n *\n * The only difference is that it accepts a second, required parameter. This parameter\n * should be an Observable which will be subscribed when source Observable fails any timeout check.\n * So whenever regular `timeout` would emit an error, `timeoutWith` will instead start re-emitting\n * values from second Observable. Note that this fallback Observable is not checked for timeouts\n * itself, so it can emit values and complete at arbitrary points in time. From the moment of a second\n * subscription, Observable returned from `timeoutWith` simply mirrors fallback stream. When that\n * stream completes, it completes as well.\n *\n * Scheduler, which in case of `timeout` is provided as as second argument, can be still provided\n * here - as a third, optional parameter. It still is used to schedule timeout checks and -\n * as a consequence - when second Observable will be subscribed, since subscription happens\n * immediately after failing check.\n *\n * ## Example\n * Add fallback observable\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeoutWith } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const minutes = interval(60 * 1000);\n *\n * seconds.pipe(timeoutWith(900, minutes))\n *   .subscribe(\n *     value => console.log(value), // After 900ms, will start emitting `minutes`,\n *                                  // since first value of `seconds` will not arrive fast enough.\n *     err => console.log(err),     // Would be called after 900ms in case of `timeout`,\n *                                  // but here will never be called.\n *   );\n * ```\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {Observable<T>} withObservable Observable which will be subscribed if source fails timeout check.\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source or, when timeout check fails, of an Observable\n *                          passed as a second parameter.\n * @method timeoutWith\n * @owner Observable\n */\nexport function timeoutWith<T, R>(due: number | Date,\n                                  withObservable: ObservableInput<R>,\n                                  scheduler: SchedulerLike = async): OperatorFunction<T, T | R> {\n  return (source: Observable<T>) => {\n    let absoluteTimeout = isDate(due);\n    let waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(<number>due);\n    return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));\n  };\n}\n\nclass TimeoutWithOperator<T> implements Operator<T, T> {\n  constructor(private waitFor: number,\n              private absoluteTimeout: boolean,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TimeoutWithSubscriber(\n      subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TimeoutWithSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private action?: SchedulerAction<TimeoutWithSubscriber<T, R>>;\n\n  constructor(destination: Subscriber<T>,\n              private absoluteTimeout: boolean,\n              private waitFor: number,\n              private withObservable: ObservableInput<any>,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.scheduleTimeout();\n  }\n\n  private static dispatchTimeout<T, R>(subscriber: TimeoutWithSubscriber<T, R>): void {\n    const { withObservable } = subscriber;\n    subscriber._unsubscribeAndRecycle();\n    subscriber.add(innerSubscribe(withObservable, new SimpleInnerSubscriber(subscriber)));\n  }\n\n  private scheduleTimeout(): void {\n    const { action } = this;\n    if (action) {\n      // Recycle the action if we've already scheduled one. All the production\n      // Scheduler Actions mutate their state/delay time and return themeselves.\n      // VirtualActions are immutable, so they create and return a clone. In this\n      // case, we need to set the action reference to the most recent VirtualAction,\n      // to ensure that's the one we clone from next time.\n      this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> action.schedule(this, this.waitFor));\n    } else {\n      this.add(this.action = (<SchedulerAction<TimeoutWithSubscriber<T, R>>> this.scheduler.schedule<TimeoutWithSubscriber<T, R>>(\n        TimeoutWithSubscriber.dispatchTimeout as any, this.waitFor, this\n      )));\n    }\n  }\n\n  protected _next(value: T): void {\n    if (!this.absoluteTimeout) {\n      this.scheduleTimeout();\n    }\n    super._next(value);\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.action = undefined;\n    this.scheduler = null!;\n    this.withObservable = null!;\n  }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadScriptOptions {\n    async: boolean;\n    attributes: ScriptAttributes;\n}\n\nexport interface PreloadScriptOptions {\n    prefetch: boolean;\n}\n\nexport interface ScriptAttributes {\n    [key: string]: string;\n}\n\nexport default class ScriptLoader {\n    private _scripts: { [key: string]: Promise<void> } = {};\n    private _preloadedScripts: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadScript(src: string, options?: LoadScriptOptions): Promise<void> {\n        if (!this._scripts[src]) {\n            this._scripts[src] = new Promise((resolve, reject) => {\n                const script = document.createElement('script') as LegacyHTMLScriptElement;\n                const { async = false, attributes = {} } = options || {};\n\n                Object.keys(attributes)\n                    .forEach(key => {\n                        script.setAttribute(key, attributes[key]);\n                    });\n\n                script.onload = () => resolve();\n                script.onreadystatechange = () => resolve();\n                script.onerror = event => {\n                    delete this._scripts[src];\n                    reject(event);\n                };\n                script.async = async;\n                script.src = src;\n\n                document.body.appendChild(script);\n            });\n        }\n\n        return this._scripts[src];\n    }\n\n    loadScripts(urls: string[], options?: LoadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadScript(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadScript(url: string, options?: PreloadScriptOptions): Promise<void> {\n        if (!this._preloadedScripts[url]) {\n            this._preloadedScripts[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedScript = document.createElement('link');\n\n                    preloadedScript.as = 'script';\n                    preloadedScript.rel = rel;\n                    preloadedScript.href = url;\n\n                    preloadedScript.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedScript.onerror = () => {\n                        delete this._preloadedScripts[url];\n                        reject();\n                    };\n\n                    document.head.appendChild(preloadedScript);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'application/javascript' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedScripts[url];\n    }\n\n    preloadScripts(urls: string[], options?: PreloadScriptOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadScript(url, options)))\n            .then(() => undefined);\n    }\n}\n\ninterface LegacyHTMLScriptElement extends HTMLScriptElement {\n    // `onreadystatechange` is needed to support legacy IE\n    onreadystatechange(this: HTMLElement, event: Event): any;\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\nimport ScriptLoader from './script-loader';\n\nexport default function createScriptLoader(): ScriptLoader {\n    return new ScriptLoader(\n        new BrowserSupport(),\n        createRequestSender()\n    );\n}\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nfunction extract(str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n}\n\nfunction parse(str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: parse(extract(str), opts)\n\t};\n};\n","import { CookiesStatic } from 'js-cookie';\nimport merge from 'lodash/merge';\n\nimport Cache, { DefaultCache } from './cache';\nimport isPromise from './is-promise';\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\nimport RequestOptions from './request-options';\nimport RequestSenderOptions from './request-sender-options';\nimport Response from './response';\nimport Timeout from './timeout';\n\nexport default class RequestSender {\n    private _cache: Cache;\n\n    constructor(\n        private _requestFactory: RequestFactory,\n        private _payloadTransformer: PayloadTransformer,\n        private _cookie: CookiesStatic,\n        private _options: RequestSenderOptions = {}\n    ) {\n        this._cache = this._options.cache || new DefaultCache();\n    }\n\n    sendRequest<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        const requestOptions = this._mergeDefaultOptions(url, options);\n        const cachedRequest = this._getCachedRequest<T>(url, requestOptions);\n\n        if (cachedRequest) {\n            return Promise.resolve(cachedRequest);\n        }\n\n        const request = this._requestFactory.createRequest(this._prependHost(url), requestOptions);\n\n        return new Promise((resolve, reject) => {\n            const requestHandler = () => {\n                const response = this._payloadTransformer.toResponse(request);\n\n                if (response.status >= 200 && response.status < 300) {\n                    this._cacheRequest(url, requestOptions, response);\n                    resolve(response);\n                } else {\n                    reject(response);\n                }\n            };\n\n            request.onload = requestHandler;\n            request.onerror = requestHandler;\n            request.onabort = requestHandler;\n            request.ontimeout = requestHandler;\n\n            if (requestOptions.timeout instanceof Timeout) {\n                requestOptions.timeout.onComplete(() => request.abort());\n                requestOptions.timeout.start();\n            }\n\n            if (isPromise(requestOptions.timeout)) {\n                requestOptions.timeout.then(() => request.abort());\n            }\n\n            request.send(this._payloadTransformer.toRequestBody(requestOptions));\n        });\n    }\n\n    get<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'GET' });\n    }\n\n    post<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'POST' });\n    }\n\n    put<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'PUT' });\n    }\n\n    patch<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'PATCH' });\n    }\n\n    delete<T = any>(url: string, options?: RequestOptions): Promise<Response<T>> {\n        return this.sendRequest(url, { ...options, method: 'DELETE' });\n    }\n\n    private _mergeDefaultOptions(url: string, options?: RequestOptions): RequestOptions {\n        const defaultOptions: Partial<RequestOptions> = {\n            credentials: true,\n            encodeParams: true,\n            headers: {\n                Accept: 'application/json, text/plain, */*',\n            },\n            method: 'GET',\n        };\n\n        const csrfToken = this._cookie.get('XSRF-TOKEN');\n\n        if (csrfToken && defaultOptions.headers && !this._isAssetRequest(url, options)) {\n            defaultOptions.headers['X-XSRF-TOKEN'] = csrfToken;\n        }\n\n        if (options && options.body && defaultOptions.headers) {\n            defaultOptions.headers['Content-Type'] = 'application/json';\n        }\n\n        return merge({}, defaultOptions, options);\n    }\n\n    private _prependHost(url: string): string {\n        if (!this._options.host || /^https?:\\/\\//.test(url)) {\n            return url;\n        }\n\n        return `${this._options.host.replace(/\\/$/, '')}/${url.replace(/^\\//, '')}`;\n    }\n\n    private _shouldCacheRequest(options: RequestOptions): boolean {\n        const method = options.method || 'GET';\n\n        return method.toUpperCase() === 'GET' && Boolean(options.cache);\n    }\n\n    private _getCachedRequest<T>(url: string, options: RequestOptions): Response<T> | null {\n        if (this._shouldCacheRequest(options)) {\n            return this._cache.read<T>(url, options);\n        }\n\n        return null;\n    }\n\n    private _cacheRequest<T>(url: string, options: RequestOptions, response: Response<T>): void {\n        if (this._shouldCacheRequest(options)) {\n            this._cache.write(url, options, response);\n        }\n    }\n\n    private _isAssetRequest(url: string, options?: RequestOptions): boolean {\n        if (options && options.method && options.method.toUpperCase() !== 'GET') {\n            return false;\n        }\n\n        return /\\.(png|gif|jpe?g|css|js|json|svg|html?)$/.test(url.split('?')[0]);\n    }\n}\n","export default class BrowserSupport {\n    canSupportRel(rel: string): boolean {\n        const link = document.createElement('link');\n\n        return !!(\n            link.relList &&\n            link.relList.supports &&\n            link.relList.supports(rel)\n        );\n    }\n}\n","import { RequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\n\nexport interface LoadStylesheetOptions {\n    prepend: boolean;\n    attributes?: StylesheetAttributes;\n}\n\nexport interface PreloadStylesheetOptions {\n    prefetch: boolean;\n}\n\nexport interface StylesheetAttributes {\n    [key: string]: string;\n}\n\nexport default class StylesheetLoader {\n    private _stylesheets: { [key: string]: Promise<void> } = {};\n    private _preloadedStylesheets: { [key: string]: Promise<void> } = {};\n\n    /**\n     * @internal\n     */\n    constructor(\n        private _browserSupport: BrowserSupport,\n        private _requestSender: RequestSender\n    ) {}\n\n    loadStylesheet(src: string, options?: LoadStylesheetOptions): Promise<void> {\n        if (!this._stylesheets[src]) {\n            this._stylesheets[src] = new Promise((resolve, reject) => {\n                const stylesheet = document.createElement('link');\n                const { prepend = false, attributes = {} } = options || {};\n\n                Object.keys(attributes)\n                    .forEach(key => {\n                        stylesheet.setAttribute(key, attributes[key]);\n                    });\n\n                stylesheet.onload = () => resolve();\n                stylesheet.onerror = event => {\n                    delete this._stylesheets[src];\n                    reject(event);\n                };\n                stylesheet.rel = 'stylesheet';\n                stylesheet.href = src;\n\n                if (prepend && document.head.children[0]) {\n                    document.head.insertBefore(stylesheet, document.head.children[0]);\n                } else {\n                    document.head.appendChild(stylesheet);\n                }\n            });\n        }\n\n        return this._stylesheets[src];\n    }\n\n    loadStylesheets(urls: string[], options?: LoadStylesheetOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.loadStylesheet(url, options)))\n            .then(() => undefined);\n    }\n\n    preloadStylesheet(url: string, options?: PreloadStylesheetOptions): Promise<void> {\n        if (!this._preloadedStylesheets[url]) {\n            this._preloadedStylesheets[url] = new Promise((resolve, reject) => {\n                const { prefetch = false } = options || {};\n                const rel = prefetch ? 'prefetch' : 'preload';\n\n                if (this._browserSupport.canSupportRel(rel)) {\n                    const preloadedStylesheet = document.createElement('link');\n\n                    preloadedStylesheet.as = 'style';\n                    preloadedStylesheet.rel = prefetch ? 'prefetch' : 'preload';\n                    preloadedStylesheet.href = url;\n\n                    preloadedStylesheet.onload = () => {\n                        resolve();\n                    };\n\n                    preloadedStylesheet.onerror = event => {\n                        delete this._preloadedStylesheets[url];\n                        reject(event);\n                    };\n\n                    document.head.appendChild(preloadedStylesheet);\n                } else {\n                    this._requestSender.get(url, {\n                        credentials: false,\n                        headers: { Accept: 'text/css' },\n                    })\n                        .then(() => resolve())\n                        .catch(reject);\n                }\n            });\n        }\n\n        return this._preloadedStylesheets[url];\n    }\n\n    preloadStylesheets(urls: string[], options?: PreloadStylesheetOptions): Promise<void> {\n        return Promise.all(urls.map(url => this.preloadStylesheet(url, options)))\n            .then(() => undefined);\n    }\n}\n","import { createRequestSender } from '@bigcommerce/request-sender';\n\nimport BrowserSupport from './browser-support';\nimport StylesheetLoader from './stylesheet-loader';\n\nexport default function createStylesheetLoader(): StylesheetLoader {\n    return new StylesheetLoader(\n        new BrowserSupport(),\n        createRequestSender()\n    );\n}\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nfunction extract(str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n}\n\nfunction parse(str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: parse(extract(str), opts)\n\t};\n};\n","import FormBuilder from './form-builder';\nimport FormPosterOptions from './form-poster-options';\nimport { isAbsoluteUrl, joinPaths } from './url-utils';\n\nexport default class FormPoster {\n    /**\n     * @internal\n     */\n    constructor(\n        private _formBuilder: FormBuilder,\n        private _options?: FormPosterOptions\n    ) {}\n\n    postForm(url: string, data: { [key: string]: any }, callback?: () => void, target?: string): void {\n        const form = this._formBuilder.build(this._prependHost(url), data, target);\n\n        window.addEventListener('unload', function handleUnload() {\n            window.removeEventListener('unload', handleUnload);\n\n            if (callback) {\n                callback();\n            }\n        });\n\n        // In order to submit the form, the form must be attached to DOM.\n        document.body.appendChild(form);\n        form.submit();\n        document.body.removeChild(form);\n    }\n\n    private _prependHost(url: string): string {\n        if (!this._options || !this._options.host || isAbsoluteUrl(url)) {\n            return url;\n        }\n\n        return joinPaths(this._options.host, url);\n    }\n}\n","export const API = 'PAYMENT_TYPE_API';\nexport const HOSTED = 'PAYMENT_TYPE_HOSTED';\nexport const OFFLINE = 'PAYMENT_TYPE_OFFLINE';\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isObject(value) {\n    return value !== null && typeof value === 'object' && !Array.isArray(value);\n}\n","export const APPLICATION_JSON = 'application/json';\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nfunction extract(str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n}\n\nfunction parse(str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: parse(extract(str), opts)\n\t};\n};\n","import { Subscribable, SubscribableOrPromise } from 'rxjs';\n\nimport Action from './action';\nimport { DispatchableAction } from './dispatchable-data-store';\n\nexport default function isObservableActionLike<TAction extends Action = Action>(\n    action: DispatchableAction<TAction>\n): action is SubscribableOrPromise<TAction> {\n    return (\n        typeof (action as Subscribable<TAction>).subscribe === 'function' ||\n        typeof (action as PromiseLike<TAction>).then === 'function'\n    );\n}\n","import { Subscribable } from 'rxjs';\n\nimport Action from './action';\n\nexport default function noopActionTransformer<TAction extends Action, TTransformedAction extends Action = TAction>(\n    action: Subscribable<TAction>\n): Subscribable<TTransformedAction> {\n    return action as any as Subscribable<TTransformedAction>;\n}\n","export default function noopStateTransformer<TState, TTransformedState = TState>(\n    state: TState\n): TTransformedState {\n    return state as any as TTransformedState;\n}\n","import { curryRight, flowRight } from 'lodash';\nimport * as shallowEqual from 'shallowequal';\n\nimport Action from './action';\nimport Reducer from './reducer';\n\nexport default function composeReducers<TState, TStateA, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TState, action: TAction) => TStateA,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TState, action: TAction) => TStateB,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TStateC, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TStateC, action: TAction) => TStateB,\n    reducerD: (state: TState, action: TAction) => TStateC,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TStateA, TStateB, TStateC, TStateD, TAction extends Action = Action>(\n    reducerA: (state: TStateA, action: TAction) => TState,\n    reducerB: (state: TStateB, action: TAction) => TStateA,\n    reducerC: (state: TStateC, action: TAction) => TStateB,\n    reducerD: (state: TStateD, action: TAction) => TStateC,\n    reducerE: (state: TState, action: TAction) => TStateD,\n    options?: ComposeReducersOptions\n): Reducer<TState, TAction>;\n\nexport default function composeReducers<TState, TAction extends Action = Action>(\n    ...args: any[]\n): Reducer<TState, TAction> {\n    let reducers: Array<Reducer<TState, TAction>> = args;\n    let options: ComposeReducersOptions = {};\n\n    if (typeof args[args.length - 1] === 'object') {\n        reducers = args.slice(0, -1);\n        options = { ...options, ...args[args.length - 1] };\n    }\n\n    const { equalityCheck = shallowEqual } = options;\n\n    return (state, action) => {\n        const newState = flowRight(\n            reducers\n                .filter(reducer => reducer.length === 2)\n                .map(reducer => curryRight(reducer)(action))\n        )(state);\n\n        return equalityCheck(state, newState) ? state : newState;\n    };\n}\n\nexport interface ComposeReducersOptions {\n    equalityCheck?(valueA: any, valueB: any): boolean;\n}\n","import Action from './action';\nimport combineReducers, { ReducerMap } from './combine-reducers';\nimport DataStore, { DataStoreOptions } from './data-store';\nimport Reducer from './reducer';\n\nexport default function createDataStore<TState, TAction extends Action = Action, TTransformedState = TState>(\n    reducer: Reducer<TState, TAction> | ReducerMap<TState, TAction>,\n    initialState?: Partial<TState>,\n    options?: Partial<DataStoreOptions<TState, TAction, TTransformedState>>\n): DataStore<TState, TAction, TTransformedState> {\n    if (typeof reducer === 'function') {\n        return new DataStore(reducer, initialState, options);\n    }\n\n    return new DataStore(\n        combineReducers(reducer, { equalityCheck: options && options.equalityCheck }),\n        initialState,\n        options\n    );\n}\n","import Action from './action';\nimport createAction from './create-action';\n\nexport default function createErrorAction<TPayload, TMeta, TType extends string>(\n    type: TType,\n    payload?: TPayload,\n    meta?: TMeta\n): Action<TPayload, TMeta, TType> {\n    return {\n        ...createAction(type, payload, meta),\n        error: true,\n    };\n}\n","/* Observable */\nexport { Observable } from './internal/Observable';\nexport { ConnectableObservable } from './internal/observable/ConnectableObservable';\nexport { GroupedObservable } from './internal/operators/groupBy';\nexport { Operator } from './internal/Operator';\nexport { observable } from './internal/symbol/observable';\n\n/* Subjects */\nexport { Subject } from './internal/Subject';\nexport { BehaviorSubject } from './internal/BehaviorSubject';\nexport { ReplaySubject } from './internal/ReplaySubject';\nexport { AsyncSubject } from './internal/AsyncSubject';\n\n/* Schedulers */\nexport { asap, asapScheduler } from './internal/scheduler/asap';\nexport { async, asyncScheduler } from './internal/scheduler/async';\nexport { queue, queueScheduler } from './internal/scheduler/queue';\nexport { animationFrame, animationFrameScheduler } from './internal/scheduler/animationFrame';\nexport { VirtualTimeScheduler, VirtualAction } from './internal/scheduler/VirtualTimeScheduler';\nexport { Scheduler } from './internal/Scheduler';\n\n/* Subscription */\nexport { Subscription } from './internal/Subscription';\nexport { Subscriber } from './internal/Subscriber';\n\n/* Notification */\nexport { Notification, NotificationKind } from './internal/Notification';\n\n/* Utils */\nexport { pipe } from './internal/util/pipe';\nexport { noop } from './internal/util/noop';\nexport { identity } from './internal/util/identity';\nexport { isObservable } from './internal/util/isObservable';\n\n/* Error types */\nexport { ArgumentOutOfRangeError } from './internal/util/ArgumentOutOfRangeError';\nexport { EmptyError } from './internal/util/EmptyError';\nexport { ObjectUnsubscribedError } from './internal/util/ObjectUnsubscribedError';\nexport { UnsubscriptionError } from './internal/util/UnsubscriptionError';\nexport { TimeoutError } from './internal/util/TimeoutError';\n\n/* Static observable creation exports */\nexport { bindCallback } from './internal/observable/bindCallback';\nexport { bindNodeCallback } from './internal/observable/bindNodeCallback';\nexport { combineLatest } from './internal/observable/combineLatest';\nexport { concat } from './internal/observable/concat';\nexport { defer } from './internal/observable/defer';\nexport { empty } from './internal/observable/empty';\nexport { forkJoin } from './internal/observable/forkJoin';\nexport { from } from './internal/observable/from';\nexport { fromEvent } from './internal/observable/fromEvent';\nexport { fromEventPattern } from './internal/observable/fromEventPattern';\nexport { generate } from './internal/observable/generate';\nexport { iif } from './internal/observable/iif';\nexport { interval } from './internal/observable/interval';\nexport { merge } from './internal/observable/merge';\nexport { never } from './internal/observable/never';\nexport { of } from './internal/observable/of';\nexport { onErrorResumeNext } from './internal/observable/onErrorResumeNext';\nexport { pairs } from './internal/observable/pairs';\nexport { partition } from './internal/observable/partition';\nexport { race } from './internal/observable/race';\nexport { range } from './internal/observable/range';\nexport { throwError } from './internal/observable/throwError';\nexport { timer } from './internal/observable/timer';\nexport { using } from './internal/observable/using';\nexport { zip } from './internal/observable/zip';\nexport { scheduled } from './internal/scheduled/scheduled';\n\n/* Constants */\nexport { EMPTY } from './internal/observable/empty';\nexport { NEVER } from './internal/observable/never';\n\n/* Types */\nexport * from './internal/types';\n\n/* Config */\nexport { config } from './internal/config';\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { QueueScheduler } from './QueueScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class QueueAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: QueueScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (delay > 0) {\n      return super.schedule(state, delay);\n    }\n    this.delay = delay;\n    this.state = state;\n    this.scheduler.flush(this);\n    return this;\n  }\n\n  public execute(state: T, delay: number): any {\n    return (delay > 0 || this.closed) ?\n      super.execute(state, delay) :\n      this._execute(state, delay) ;\n  }\n\n  protected requestAsyncId(scheduler: QueueScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Otherwise flush the scheduler starting with this action.\n    return scheduler.flush(this);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { AsyncScheduler } from './AsyncScheduler';\n\nexport class QueueScheduler extends AsyncScheduler {\n}\n","import { Immediate } from '../util/Immediate';\nimport { AsyncAction } from './AsyncAction';\nimport { AsapScheduler } from './AsapScheduler';\nimport { SchedulerAction } from '../types';\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsapAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AsapScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If a microtask has already been scheduled, don't schedule another\n    // one. If a microtask hasn't been scheduled yet, schedule one now. Return\n    // the current scheduled microtask id.\n    return scheduler.scheduled || (scheduler.scheduled = Immediate.setImmediate(\n      scheduler.flush.bind(scheduler, null)\n    ));\n  }\n  protected recycleAsyncId(scheduler: AsapScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested microtask and\n    // set the scheduled flag to undefined so the next AsapAction will schedule\n    // its own.\n    if (scheduler.actions.length === 0) {\n      Immediate.clearImmediate(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","let nextHandle = 1;\nconst RESOLVED = (() => Promise.resolve())();\nconst activeHandles: { [key: number]: any } = {};\n\n/**\n * Finds the handle in the list of active handles, and removes it.\n * Returns `true` if found, `false` otherwise. Used both to clear\n * Immediate scheduled tasks, and to identify if a task should be scheduled.\n */\nfunction findAndClearHandle(handle: number): boolean {\n  if (handle in activeHandles) {\n    delete activeHandles[handle];\n    return true;\n  }\n  return false;\n}\n\n/**\n * Helper functions to schedule and unschedule microtasks.\n */\nexport const Immediate = {\n  setImmediate(cb: () => void): number {\n    const handle = nextHandle++;\n    activeHandles[handle] = true;\n    RESOLVED.then(() => findAndClearHandle(handle) && cb());\n    return handle;\n  },\n\n  clearImmediate(handle: number): void {\n    findAndClearHandle(handle);\n  },\n};\n\n/**\n * Used for internal testing purposes only. Do not export from library.\n */\nexport const TestTools = {\n  pending() {\n    return Object.keys(activeHandles).length;\n  }\n};\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AsapScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AnimationFrameAction } from './AnimationFrameAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\n\n/**\n *\n * Animation Frame Scheduler\n *\n * <span class=\"informal\">Perform task when `window.requestAnimationFrame` would fire</span>\n *\n * When `animationFrame` scheduler is used with delay, it will fall back to {@link asyncScheduler} scheduler\n * behaviour.\n *\n * Without delay, `animationFrame` scheduler can be used to create smooth browser animations.\n * It makes sure scheduled task will happen just before next browser content repaint,\n * thus performing animations as efficiently as possible.\n *\n * ## Example\n * Schedule div height animation\n * ```ts\n * // html: <div style=\"background: #0ff;\"></div>\n * import { animationFrameScheduler } from 'rxjs';\n *\n * const div = document.querySelector('div');\n *\n * animationFrameScheduler.schedule(function(height) {\n *   div.style.height = height + \"px\";\n *\n *   this.schedule(height + 1);  // `this` references currently executing Action,\n *                               // which we reschedule with new state\n * }, 0, 0);\n *\n * // You will see a div element growing in height\n * ```\n */\nexport const animationFrameScheduler = new AnimationFrameScheduler(AnimationFrameAction);\n\n/**\n * @deprecated renamed. Use {@link animationFrameScheduler}\n */\nexport const animationFrame = animationFrameScheduler;\n","import { AsyncAction } from './AsyncAction';\nimport { AnimationFrameScheduler } from './AnimationFrameScheduler';\nimport { SchedulerAction } from '../types';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AnimationFrameAction<T> extends AsyncAction<T> {\n\n  constructor(protected scheduler: AnimationFrameScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  protected requestAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay is greater than 0, request as an async action.\n    if (delay !== null && delay > 0) {\n      return super.requestAsyncId(scheduler, id, delay);\n    }\n    // Push the action to the end of the scheduler queue.\n    scheduler.actions.push(this);\n    // If an animation frame has already been requested, don't request another\n    // one. If an animation frame hasn't been requested yet, request one. Return\n    // the current animation frame request id.\n    return scheduler.scheduled || (scheduler.scheduled = requestAnimationFrame(\n      () => scheduler.flush(null)));\n  }\n  protected recycleAsyncId(scheduler: AnimationFrameScheduler, id?: any, delay: number = 0): any {\n    // If delay exists and is greater than 0, or if the delay is null (the\n    // action wasn't rescheduled) but was originally scheduled as an async\n    // action, then recycle as an async action.\n    if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {\n      return super.recycleAsyncId(scheduler, id, delay);\n    }\n    // If the scheduler queue is empty, cancel the requested animation frame and\n    // set the scheduled flag to undefined so the next AnimationFrameAction will\n    // request its own.\n    if (scheduler.actions.length === 0) {\n      cancelAnimationFrame(id);\n      scheduler.scheduled = undefined;\n    }\n    // Return undefined so the action knows to request a new async id if it's rescheduled.\n    return undefined;\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\nexport class AnimationFrameScheduler extends AsyncScheduler {\n  public flush(action?: AsyncAction<any>): void {\n\n    this.active = true;\n    this.scheduled = undefined;\n\n    const {actions} = this;\n    let error: any;\n    let index: number = -1;\n    let count: number = actions.length;\n    action = action || actions.shift();\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (++index < count && (action = actions.shift()));\n\n    this.active = false;\n\n    if (error) {\n      while (++index < count && (action = actions.shift())) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { AsyncAction } from './AsyncAction';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\nimport { SchedulerAction } from '../types';\n\nexport class VirtualTimeScheduler extends AsyncScheduler {\n\n  protected static frameTimeFactor: number = 10;\n\n  public frame: number = 0;\n  public index: number = -1;\n\n  constructor(SchedulerAction: typeof AsyncAction = VirtualAction as any,\n              public maxFrames: number = Number.POSITIVE_INFINITY) {\n    super(SchedulerAction, () => this.frame);\n  }\n\n  /**\n   * Prompt the Scheduler to execute all of its queued actions, therefore\n   * clearing its queue.\n   * @return {void}\n   */\n  public flush(): void {\n\n    const {actions, maxFrames} = this;\n    let error: any, action: AsyncAction<any>;\n\n    while ((action = actions[0]) && action.delay <= maxFrames) {\n      actions.shift();\n      this.frame = action.delay;\n\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    }\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @nodoc\n */\nexport class VirtualAction<T> extends AsyncAction<T> {\n\n  protected active: boolean = true;\n\n  constructor(protected scheduler: VirtualTimeScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void,\n              protected index: number = scheduler.index += 1) {\n    super(scheduler, work);\n    this.index = scheduler.index = index;\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n    if (!this.id) {\n      return super.schedule(state, delay);\n    }\n    this.active = false;\n    // If an action is rescheduled, we save allocations by mutating its state,\n    // pushing it to the end of the scheduler queue, and recycling the action.\n    // But since the VirtualTimeScheduler is used for testing, VirtualActions\n    // must be immutable so they can be inspected later.\n    const action = new VirtualAction(this.scheduler, this.work);\n    this.add(action);\n    return action.schedule(state, delay);\n  }\n\n  protected requestAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    this.delay = scheduler.frame + delay;\n    const {actions} = scheduler;\n    actions.push(this);\n    (actions as Array<VirtualAction<T>>).sort(VirtualAction.sortActions);\n    return true;\n  }\n\n  protected recycleAsyncId(scheduler: VirtualTimeScheduler, id?: any, delay: number = 0): any {\n    return undefined;\n  }\n\n  protected _execute(state: T, delay: number): any {\n    if (this.active === true) {\n      return super._execute(state, delay);\n    }\n  }\n\n  public static sortActions<T>(a: VirtualAction<T>, b: VirtualAction<T>) {\n    if (a.delay === b.delay) {\n      if (a.index === b.index) {\n        return 0;\n      } else if (a.index > b.index) {\n        return 1;\n      } else {\n        return -1;\n      }\n    } else if (a.delay > b.delay) {\n      return 1;\n    } else {\n      return -1;\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\n\n/**\n * Tests to see if the object is an RxJS {@link Observable}\n * @param obj the object to test\n */\nexport function isObservable<T>(obj: any): obj is Observable<T> {\n  return !!obj && (obj instanceof Observable || (typeof obj.lift === 'function' && typeof obj.subscribe === 'function'));\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isArray } from '../util/isArray';\nimport { isScheduler } from '../util/isScheduler';\n\n// tslint:disable:max-line-length\n/** @deprecated resultSelector is no longer supported, use a mapping function. */\nexport function bindCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindCallback<R1, R2, R3, R4>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): () => Observable<any[]>;\nexport function bindCallback<R1, R2, R3>(callbackFunc: (callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindCallback<R1, R2>(callbackFunc: (callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindCallback<R1>(callbackFunc: (callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindCallback(callbackFunc: (callback: () => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<any[]>;\nexport function bindCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindCallback<A1>(callbackFunc: (arg1: A1, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<any[]>;\nexport function bindCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<any[]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: () => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>;\n\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((result: R) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R>;\nexport function bindCallback<A, R>(callbackFunc: (...args: Array<A | ((...results: R[]) => any)>) => any, scheduler?: SchedulerLike): (...args: A[]) => Observable<R[]>;\n\nexport function bindCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\n// tslint:enable:max-line-length\n\n/**\n * Converts a callback API to a function that returns an Observable.\n *\n * <span class=\"informal\">Give it a function `f` of type `f(x, callback)` and\n * it will return a function `g` that when called as `g(x)` will output an\n * Observable.</span>\n *\n * `bindCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters. The\n * last parameter must be a callback function that `func` calls when it is\n * done.\n *\n * The output of `bindCallback` is a function that takes the same parameters\n * as `func`, except the last one (the callback). When the output function\n * is called with arguments it will return an Observable. If function `func`\n * calls its callback with one argument, the Observable will emit that value.\n * If on the other hand the callback is called with multiple values the resulting\n * Observable will emit an array with said values as arguments.\n *\n * It is **very important** to remember that input function `func` is not called\n * when the output function is, but rather when the Observable returned by the output\n * function is subscribed. This means if `func` makes an AJAX request, that request\n * will be made every time someone subscribes to the resulting Observable, but not before.\n *\n * The last optional parameter - `scheduler` - can be used to control when the call\n * to `func` happens after someone subscribes to Observable, as well as when results\n * passed to callback will be emitted. By default, the subscription to an Observable calls `func`\n * synchronously, but using {@link asyncScheduler} as the last parameter will defer the call to `func`,\n * just like wrapping the call in `setTimeout` with a timeout of `0` would. If you were to use the async Scheduler\n * and call `subscribe` on the output Observable, all function calls that are currently executing\n * will end before `func` is invoked.\n *\n * By default, results passed to the callback are emitted immediately after `func` invokes the callback.\n * In particular, if the callback is called synchronously, then the subscription of the resulting Observable\n * will call the `next` function synchronously as well.  If you want to defer that call,\n * you may use {@link asyncScheduler} just as before.  This means that by using `Scheduler.async` you can\n * ensure that `func` always calls its callback asynchronously, thus avoiding terrifying Zalgo.\n *\n * Note that the Observable created by the output function will always emit a single value\n * and then complete immediately. If `func` calls the callback multiple times, values from subsequent\n * calls will not appear in the stream. If you need to listen for multiple calls,\n *  you probably want to use {@link fromEvent} or {@link fromEventPattern} instead.\n *\n * If `func` depends on some context (`this` property) and is not already bound, the context of `func`\n * will be the context that the output function has at call time. In particular, if `func`\n * is called as a method of some objec and if `func` is not already bound, in order to preserve the context\n * it is recommended that the context of the output function is set to that object as well.\n *\n * If the input function calls its callback in the \"node style\" (i.e. first argument to callback is\n * optional error parameter signaling whether the call failed or not), {@link bindNodeCallback}\n * provides convenient error handling and probably is a better choice.\n * `bindCallback` will treat such functions the same as any other and error parameters\n * (whether passed or not) will always be interpreted as regular callback argument.\n *\n * ## Examples\n *\n * ### Convert jQuery's getJSON to an Observable API\n * ```ts\n * import { bindCallback } from 'rxjs';\n * import * as jQuery from 'jquery';\n *\n * // Suppose we have jQuery.getJSON('/my/url', callback)\n * const getJSONAsObservable = bindCallback(jQuery.getJSON);\n * const result = getJSONAsObservable('/my/url');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Receive an array of arguments passed to a callback\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const someFunction = (a, b, c) => {\n *   console.log(a); // 5\n *   console.log(b); // 'some string'\n *   console.log(c); // {someProperty: 'someValue'}\n * };\n *\n * const boundSomeFunction = bindCallback(someFunction);\n * boundSomeFunction().subscribe(values => {\n *   console.log(values) // [5, 'some string', {someProperty: 'someValue'}]\n * });\n * ```\n *\n * ### Compare behaviour with and without async Scheduler\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * function iCallMyCallbackSynchronously(cb) {\n *   cb();\n * }\n *\n * const boundSyncFn = bindCallback(iCallMyCallbackSynchronously);\n * const boundAsyncFn = bindCallback(iCallMyCallbackSynchronously, null, Rx.Scheduler.async);\n *\n * boundSyncFn().subscribe(() => console.log('I was sync!'));\n * boundAsyncFn().subscribe(() => console.log('I was async!'));\n * console.log('This happened...');\n *\n * // Logs:\n * // I was sync!\n * // This happened...\n * // I was async!\n * ```\n *\n * ### Use bindCallback on an object method\n * ```ts\n * import { bindCallback } from 'rxjs';\n *\n * const boundMethod = bindCallback(someObject.methodWithCallback);\n * boundMethod.call(someObject) // make sure methodWithCallback has access to someObject\n * .subscribe(subscriber);\n * ```\n *\n * @see {@link bindNodeCallback}\n * @see {@link from}\n *\n * @param {function} func A function with a callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the callback would deliver.\n * @name bindCallback\n */\nexport function bindCallback<T>(\n  callbackFunc: Function,\n  resultSelector?: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindCallback(callbackFunc, scheduler)(...args).pipe(\n        map((args) => isArray(args) ? resultSelector(...args) : resultSelector(args)),\n      );\n    }\n  }\n\n  return function (this: any, ...args: any[]): Observable<T> {\n    const context = this;\n    let subject: AsyncSubject<T>;\n    const params = {\n      context,\n      subject,\n      callbackFunc,\n      scheduler,\n    };\n    return new Observable<T>(subscriber => {\n      if (!scheduler) {\n        if (!subject) {\n          subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        const state: DispatchState<T> = {\n          args, subscriber, params,\n        };\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, state);\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  args: any[];\n  subscriber: Subscriber<T>;\n  params: ParamsContext<T>;\n}\n\ninterface ParamsContext<T> {\n  callbackFunc: Function;\n  scheduler: SchedulerLike;\n  context: any;\n  subject: AsyncSubject<T>;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const self = this;\n  const { args, subscriber, params } = state;\n  const { callbackFunc, context, scheduler } = params;\n  let { subject } = params;\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n      this.add(scheduler.schedule<NextState<T>>(dispatchNext, 0, { value, subject }));\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      subject.error(err);\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface NextState<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(this: SchedulerAction<NextState<T>>, state: NextState<T>) {\n  const { value, subject } = state;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface ErrorState<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(this: SchedulerAction<ErrorState<T>>, state: ErrorState<T>) {\n  const { err, subject } = state;\n  subject.error(err);\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { Subscriber } from '../Subscriber';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { map } from '../operators/map';\nimport { canReportError } from '../util/canReportError';\nimport { isScheduler } from '../util/isScheduler';\nimport { isArray } from '../util/isArray';\n\n/* tslint:disable:max-line-length */\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function bindNodeCallback(callbackFunc: Function, resultSelector: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any>;\n\nexport function bindNodeCallback<R1, R2, R3, R4>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<R1, R2, R3>(callbackFunc: (callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<R1, R2>(callbackFunc: (callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): () => Observable<[R1, R2]>;\nexport function bindNodeCallback<R1>(callbackFunc: (callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): () => Observable<R1>;\nexport function bindNodeCallback(callbackFunc: (callback: (err: any) => any) => any, scheduler?: SchedulerLike): () => Observable<void>;\n\nexport function bindNodeCallback<A1, R1, R2, R3, R4>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, R1, R2, R3>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, R1, R2>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, R1>(callbackFunc: (arg1: A1, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<R1>;\nexport function bindNodeCallback<A1>(callbackFunc: (arg1: A1, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, R1>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<R1>;\nexport function bindNodeCallback<A1, A2>(callbackFunc: (arg1: A1, arg2: A2, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4) => Observable<void>;\n\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3, R4>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3, res4: R4, ...args: any[]) => any) => any, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2, R3>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2, res3: R3) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2, R3]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1, R2>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1, res2: R2) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<[R1, R2]>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5, R1>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any, res1: R1) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<R1>;\nexport function bindNodeCallback<A1, A2, A3, A4, A5>(callbackFunc: (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5, callback: (err: any) => any) => any, scheduler?: SchedulerLike): (arg1: A1, arg2: A2, arg3: A3, arg4: A4, arg5: A5) => Observable<void>; /* tslint:enable:max-line-length */\n\nexport function bindNodeCallback(callbackFunc: Function, scheduler?: SchedulerLike): (...args: any[]) => Observable<any[]>;\n/**\n * Converts a Node.js-style callback API to a function that returns an\n * Observable.\n *\n * <span class=\"informal\">It's just like {@link bindCallback}, but the\n * callback is expected to be of type `callback(error, result)`.</span>\n *\n * `bindNodeCallback` is not an operator because its input and output are not\n * Observables. The input is a function `func` with some parameters, but the\n * last parameter must be a callback function that `func` calls when it is\n * done. The callback function is expected to follow Node.js conventions,\n * where the first argument to the callback is an error object, signaling\n * whether call was successful. If that object is passed to callback, it means\n * something went wrong.\n *\n * The output of `bindNodeCallback` is a function that takes the same\n * parameters as `func`, except the last one (the callback). When the output\n * function is called with arguments, it will return an Observable.\n * If `func` calls its callback with error parameter present, Observable will\n * error with that value as well. If error parameter is not passed, Observable will emit\n * second parameter. If there are more parameters (third and so on),\n * Observable will emit an array with all arguments, except first error argument.\n *\n * Note that `func` will not be called at the same time output function is,\n * but rather whenever resulting Observable is subscribed. By default call to\n * `func` will happen synchronously after subscription, but that can be changed\n * with proper `scheduler` provided as optional third parameter. {@link SchedulerLike}\n * can also control when values from callback will be emitted by Observable.\n * To find out more, check out documentation for {@link bindCallback}, where\n * {@link SchedulerLike} works exactly the same.\n *\n * As in {@link bindCallback}, context (`this` property) of input function will be set to context\n * of returned function, when it is called.\n *\n * After Observable emits value, it will complete immediately. This means\n * even if `func` calls callback again, values from second and consecutive\n * calls will never appear on the stream. If you need to handle functions\n * that call callbacks multiple times, check out {@link fromEvent} or\n * {@link fromEventPattern} instead.\n *\n * Note that `bindNodeCallback` can be used in non-Node.js environments as well.\n * \"Node.js-style\" callbacks are just a convention, so if you write for\n * browsers or any other environment and API you use implements that callback style,\n * `bindNodeCallback` can be safely used on that API functions as well.\n *\n * Remember that Error object passed to callback does not have to be an instance\n * of JavaScript built-in `Error` object. In fact, it does not even have to an object.\n * Error parameter of callback function is interpreted as \"present\", when value\n * of that parameter is truthy. It could be, for example, non-zero number, non-empty\n * string or boolean `true`. In all of these cases resulting Observable would error\n * with that value. This means usually regular style callbacks will fail very often when\n * `bindNodeCallback` is used. If your Observable errors much more often then you\n * would expect, check if callback really is called in Node.js-style and, if not,\n * switch to {@link bindCallback} instead.\n *\n * Note that even if error parameter is technically present in callback, but its value\n * is falsy, it still won't appear in array emitted by Observable.\n *\n * ## Examples\n * ###  Read a file from the filesystem and get the data as an Observable\n * ```ts\n * import * as fs from 'fs';\n * const readFileAsObservable = bindNodeCallback(fs.readFile);\n * const result = readFileAsObservable('./roadNames.txt', 'utf8');\n * result.subscribe(x => console.log(x), e => console.error(e));\n * ```\n *\n * ### Use on function calling callback with multiple arguments\n * ```ts\n * someFunction((err, a, b) => {\n *   console.log(err); // null\n *   console.log(a); // 5\n *   console.log(b); // \"some string\"\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(value => {\n *   console.log(value); // [5, \"some string\"]\n * });\n * ```\n *\n * ### Use on function calling callback in regular style\n * ```ts\n * someFunction(a => {\n *   console.log(a); // 5\n * });\n * const boundSomeFunction = bindNodeCallback(someFunction);\n * boundSomeFunction()\n * .subscribe(\n *   value => {}             // never gets called\n *   err => console.log(err) // 5\n * );\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link from}\n *\n * @param {function} func Function with a Node.js-style callback as the last parameter.\n * @param {SchedulerLike} [scheduler] The scheduler on which to schedule the\n * callbacks.\n * @return {function(...params: *): Observable} A function which returns the\n * Observable that delivers the same values the Node.js callback would\n * deliver.\n * @name bindNodeCallback\n */\nexport function bindNodeCallback<T>(\n  callbackFunc: Function,\n  resultSelector: Function|SchedulerLike,\n  scheduler?: SchedulerLike\n): (...args: any[]) => Observable<T> {\n\n  if (resultSelector) {\n    if (isScheduler(resultSelector)) {\n      scheduler = resultSelector;\n    } else {\n      // DEPRECATED PATH\n      return (...args: any[]) => bindNodeCallback(callbackFunc, scheduler)(...args).pipe(\n        map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n      );\n    }\n  }\n\n  return function(this: any, ...args: any[]): Observable<T> {\n    const params: ParamsState<T> = {\n      subject: undefined,\n      args,\n      callbackFunc,\n      scheduler,\n      context: this,\n    };\n    return new Observable<T>(subscriber => {\n      const { context } = params;\n      let { subject } = params;\n      if (!scheduler) {\n        if (!subject) {\n          subject = params.subject = new AsyncSubject<T>();\n          const handler = (...innerArgs: any[]) => {\n            const err = innerArgs.shift();\n\n            if (err) {\n              subject.error(err);\n              return;\n            }\n\n            subject.next(innerArgs.length <= 1 ? innerArgs[0] : innerArgs);\n            subject.complete();\n          };\n\n          try {\n            callbackFunc.apply(context, [...args, handler]);\n          } catch (err) {\n            if (canReportError(subject)) {\n              subject.error(err);\n            } else {\n              console.warn(err);\n            }\n          }\n        }\n        return subject.subscribe(subscriber);\n      } else {\n        return scheduler.schedule<DispatchState<T>>(dispatch, 0, { params, subscriber, context });\n      }\n    });\n  };\n}\n\ninterface DispatchState<T> {\n  subscriber: Subscriber<T>;\n  context: any;\n  params: ParamsState<T>;\n}\n\ninterface ParamsState<T> {\n  callbackFunc: Function;\n  args: any[];\n  scheduler: SchedulerLike;\n  subject: AsyncSubject<T>;\n  context: any;\n}\n\nfunction dispatch<T>(this: SchedulerAction<DispatchState<T>>, state: DispatchState<T>) {\n  const { params, subscriber, context } = state;\n  const { callbackFunc, args, scheduler } = params;\n  let subject = params.subject;\n\n  if (!subject) {\n    subject = params.subject = new AsyncSubject<T>();\n\n    const handler = (...innerArgs: any[]) => {\n      const err = innerArgs.shift();\n      if (err) {\n        this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n      } else {\n        const value = innerArgs.length <= 1 ? innerArgs[0] : innerArgs;\n        this.add(scheduler.schedule<DispatchNextArg<T>>(dispatchNext, 0, { value, subject }));\n      }\n    };\n\n    try {\n      callbackFunc.apply(context, [...args, handler]);\n    } catch (err) {\n      this.add(scheduler.schedule<DispatchErrorArg<T>>(dispatchError, 0, { err, subject }));\n    }\n  }\n\n  this.add(subject.subscribe(subscriber));\n}\n\ninterface DispatchNextArg<T> {\n  subject: AsyncSubject<T>;\n  value: T;\n}\n\nfunction dispatchNext<T>(arg: DispatchNextArg<T>) {\n  const { value, subject } = arg;\n  subject.next(value);\n  subject.complete();\n}\n\ninterface DispatchErrorArg<T> {\n  subject: AsyncSubject<T>;\n  err: any;\n}\n\nfunction dispatchError<T>(arg: DispatchErrorArg<T>) {\n  const { err, subject } = arg;\n  subject.error(err);\n}\n","import { Subscriber } from './Subscriber';\nimport { OuterSubscriber } from './OuterSubscriber';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class InnerSubscriber<T, R> extends Subscriber<R> {\n  private index = 0;\n\n  constructor(private parent: OuterSubscriber<T, R>, public outerValue: T, public outerIndex: number) {\n    super();\n  }\n\n  protected _next(value: R): void {\n    this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);\n  }\n\n  protected _error(error: any): void {\n    this.parent.notifyError(error, this);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.notifyComplete(this);\n    this.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { hostReportError } from './hostReportError';\n\nexport const subscribeToPromise = <T>(promise: PromiseLike<T>) => (subscriber: Subscriber<T>) => {\n  promise.then(\n    (value) => {\n      if (!subscriber.closed) {\n        subscriber.next(value);\n        subscriber.complete();\n      }\n    },\n    (err: any) => subscriber.error(err)\n  )\n  .then(null, hostReportError);\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport const subscribeToIterable = <T>(iterable: Iterable<T>) => (subscriber: Subscriber<T>) => {\n  const iterator = (iterable as any)[Symbol_iterator]();\n\n  do {\n    let item: IteratorResult<T>;\n    try {\n      item = iterator.next();\n    } catch (err) {\n      subscriber.error(err);\n      return subscriber;\n    }\n    if (item.done) {\n      subscriber.complete();\n      break;\n    }\n    subscriber.next(item.value);\n    if (subscriber.closed) {\n      break;\n    }\n  } while (true);\n\n  // Finalize the iterator if it happens to be a Generator\n  if (typeof iterator.return === 'function') {\n    subscriber.add(() => {\n      if (iterator.return) {\n        iterator.return();\n      }\n    });\n  }\n\n  return subscriber;\n};\n","import { Subscriber } from '../Subscriber';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/**\n * Subscribes to an object that implements Symbol.observable with the given\n * Subscriber.\n * @param obj An object that implements Symbol.observable\n */\nexport const subscribeToObservable = <T>(obj: any) => (subscriber: Subscriber<T>) => {\n  const obs = obj[Symbol_observable]();\n  if (typeof obs.subscribe !== 'function') {\n    // Should be caught by observable subscribe function error handling.\n    throw new TypeError('Provided object does not correctly implement Symbol.observable');\n  } else {\n    return obs.subscribe(subscriber);\n  }\n};\n","import { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { observable as Symbol_observable } from '../symbol/observable';\nimport { InteropObservable, SchedulerLike, Subscribable } from '../types';\n\nexport function scheduleObservable<T>(input: InteropObservable<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => {\n      const observable: Subscribable<T> = input[Symbol_observable]();\n      sub.add(observable.subscribe({\n        next(value) { sub.add(scheduler.schedule(() => subscriber.next(value))); },\n        error(err) { sub.add(scheduler.schedule(() => subscriber.error(err))); },\n        complete() { sub.add(scheduler.schedule(() => subscriber.complete())); },\n      }));\n    }));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport function schedulePromise<T>(input: PromiseLike<T>, scheduler: SchedulerLike) {\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    sub.add(scheduler.schedule(() => input.then(\n      value => {\n        sub.add(scheduler.schedule(() => {\n          subscriber.next(value);\n          sub.add(scheduler.schedule(() => subscriber.complete()));\n        }));\n      },\n      err => {\n        sub.add(scheduler.schedule(() => subscriber.error(err)));\n      }\n    )));\n    return sub;\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerLike } from '../types';\nimport { Subscription } from '../Subscription';\nimport { iterator as Symbol_iterator } from '../symbol/iterator';\n\nexport function scheduleIterable<T>(input: Iterable<T>, scheduler: SchedulerLike) {\n  if (!input) {\n    throw new Error('Iterable cannot be null');\n  }\n  return new Observable<T>(subscriber => {\n    const sub = new Subscription();\n    let iterator: Iterator<T>;\n    sub.add(() => {\n      // Finalize generators\n      if (iterator && typeof iterator.return === 'function') {\n        iterator.return();\n      }\n    });\n    sub.add(scheduler.schedule(() => {\n      iterator = input[Symbol_iterator]();\n      sub.add(scheduler.schedule(function () {\n        if (subscriber.closed) {\n          return;\n        }\n        let value: T;\n        let done: boolean;\n        try {\n          const result = iterator.next();\n          value = result.value;\n          done = result.done;\n        } catch (err) {\n          subscriber.error(err);\n          return;\n        }\n        if (done) {\n          subscriber.complete();\n        } else {\n          subscriber.next(value);\n          this.schedule();\n        }\n      }));\n    }));\n    return sub;\n  });\n}\n","import { InteropObservable } from '../types';\nimport { observable as Symbol_observable } from '../symbol/observable';\n\n/** Identifies an input as being Observable (but not necessary an Rx Observable) */\nexport function isInteropObservable(input: any): input is InteropObservable<any> {\n  return input && typeof input[Symbol_observable] === 'function';\n}\n","import { iterator as Symbol_iterator } from '../symbol/iterator';\n\n/** Identifies an input as being an Iterable */\nexport function isIterable(input: any): input is Iterable<any> {\n  return input && typeof input[Symbol_iterator] === 'function';\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput, ObservedValuesFromArray, ObservedValueOf, SubscribableOrPromise } from '../types';\nimport { isArray } from '../util/isArray';\nimport { map } from '../operators/map';\nimport { isObject } from '../util/isObject';\nimport { isObservable } from '../util/isObservable';\nimport { from } from './from';\n\n/* tslint:disable:max-line-length */\n\n// forkJoin(a$, b$, c$)\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(v1: SubscribableOrPromise<T>): Observable<[T]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2>(v1: ObservableInput<T>, v2: ObservableInput<T2>): Observable<[T, T2]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<[T, T2, T3]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<[T, T2, T3, T4]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<[T, T2, T3, T4, T5]>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T, T2, T3, T4, T5, T6>(v1: ObservableInput<T>, v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<[T, T2, T3, T4, T5, T6]>;\n\n// forkJoin([a$, b$, c$]);\n// TODO(benlesh): Uncomment for TS 3.0\n// export function forkJoin(sources: []): Observable<never>;\nexport function forkJoin<A>(sources: [ObservableInput<A>]): Observable<[A]>;\nexport function forkJoin<A, B>(sources: [ObservableInput<A>, ObservableInput<B>]): Observable<[A, B]>;\nexport function forkJoin<A, B, C>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>]): Observable<[A, B, C]>;\nexport function forkJoin<A, B, C, D>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>]): Observable<[A, B, C, D]>;\nexport function forkJoin<A, B, C, D, E>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>]): Observable<[A, B, C, D, E]>;\nexport function forkJoin<A, B, C, D, E, F>(sources: [ObservableInput<A>, ObservableInput<B>, ObservableInput<C>, ObservableInput<D>, ObservableInput<E>, ObservableInput<F>]): Observable<[A, B, C, D, E, F]>;\nexport function forkJoin<A extends ObservableInput<any>[]>(sources: A): Observable<ObservedValuesFromArray<A>[]>;\n\n// forkJoin({})\nexport function forkJoin(sourcesObject: {}): Observable<never>;\nexport function forkJoin<T, K extends keyof T>(sourcesObject: T): Observable<{ [K in keyof T]: ObservedValueOf<T[K]> }>;\n\n/** @deprecated resultSelector is deprecated, pipe to map instead */\nexport function forkJoin(...args: Array<ObservableInput<any>|Function>): Observable<any>;\n/** @deprecated Use the version that takes an array of Observables instead */\nexport function forkJoin<T>(...sources: ObservableInput<T>[]): Observable<T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Accepts an `Array` of {@link ObservableInput} or a dictionary `Object` of {@link ObservableInput} and returns\n * an {@link Observable} that emits either an array of values in the exact same order as the passed array,\n * or a dictionary of values in the same shape as the passed dictionary.\n *\n * <span class=\"informal\">Wait for Observables to complete and then combine last values they emitted.</span>\n *\n * ![](forkJoin.png)\n *\n * `forkJoin` is an operator that takes any number of input observables which can be passed either as an array\n * or a dictionary of input observables. If no input observables are provided, resulting stream will complete\n * immediately.\n *\n * `forkJoin` will wait for all passed observables to complete and then it will emit an array or an object with last\n * values from corresponding observables.\n *\n * If you pass an array of `n` observables to the operator, resulting\n * array will have `n` values, where first value is the last thing emitted by the first observable,\n * second value is the last thing emitted by the second observable and so on.\n *\n * If you pass a dictionary of observables to the operator, resulting\n * objects will have the same keys as the dictionary passed, with their last values they've emitted\n * located at the corresponding key.\n *\n * That means `forkJoin` will not emit more than once and it will complete after that. If you need to emit combined\n * values not only at the end of lifecycle of passed observables, but also throughout it, try out {@link combineLatest}\n * or {@link zip} instead.\n *\n * In order for resulting array to have the same length as the number of input observables, whenever any of\n * that observables completes without emitting any value, `forkJoin` will complete at that moment as well\n * and it will not emit anything either, even if it already has some last values from other observables.\n * Conversely, if there is an observable that never completes, `forkJoin` will never complete as well,\n * unless at any point some other observable completes without emitting value, which brings us back to\n * the previous case. Overall, in order for `forkJoin` to emit a value, all observables passed as arguments\n * have to emit something at least once and complete.\n *\n * If any input observable errors at some point, `forkJoin` will error as well and all other observables\n * will be immediately unsubscribed.\n *\n * Optionally `forkJoin` accepts project function, that will be called with values which normally\n * would land in emitted array. Whatever is returned by project function, will appear in output\n * observable instead. This means that default project can be thought of as a function that takes\n * all its arguments and puts them into an array. Note that project function will be called only\n * when output observable is supposed to emit a result.\n *\n * ## Examples\n *\n * ### Use forkJoin with a dictionary of observable inputs\n * ```ts\n * import { forkJoin, of, timer } from 'rxjs';\n *\n * const observable = forkJoin({\n *   foo: of(1, 2, 3, 4),\n *   bar: Promise.resolve(8),\n *   baz: timer(4000),\n * });\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // { foo: 4, bar: 8, baz: 0 } after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * ### Use forkJoin with an array of observable inputs\n * ```ts\n * import { forkJoin, of } from 'rxjs';\n *\n * const observable = forkJoin([\n *   of(1, 2, 3, 4),\n *   Promise.resolve(8),\n *   timer(4000),\n * ]);\n * observable.subscribe({\n *  next: value => console.log(value),\n *  complete: () => console.log('This is how it ends!'),\n * });\n *\n * // Logs:\n * // [4, 8, 0] after 4 seconds\n * // \"This is how it ends!\" immediately after\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n *\n * @param {...ObservableInput} sources Any number of Observables provided either as an array or as an arguments\n * passed directly to the operator.\n * @param {function} [project] Function that takes values emitted by input Observables and returns value\n * that will appear in resulting Observable instead of default array.\n * @return {Observable} Observable emitting either an array of last values emitted by passed Observables\n * or value from project function.\n */\nexport function forkJoin(\n  ...sources: any[]\n): Observable<any> {\n  if (sources.length === 1) {\n    const first = sources[0];\n    if (isArray(first)) {\n      return forkJoinInternal(first, null);\n    }\n    // TODO(benlesh): isObservable check will not be necessary when deprecated path is removed.\n    if (isObject(first) && Object.getPrototypeOf(first) === Object.prototype) {\n      const keys = Object.keys(first);\n      return forkJoinInternal(keys.map(key => first[key]), keys);\n    }\n  }\n\n  // DEPRECATED PATHS BELOW HERE\n  if (typeof sources[sources.length - 1] === 'function') {\n    const resultSelector = sources.pop() as Function;\n    sources = (sources.length === 1 && isArray(sources[0])) ? sources[0] : sources;\n    return forkJoinInternal(sources, null).pipe(\n      map((args: any[]) => resultSelector(...args))\n    );\n  }\n\n  return forkJoinInternal(sources, null);\n}\n\nfunction forkJoinInternal(sources: ObservableInput<any>[], keys: string[] | null): Observable<any> {\n  return new Observable(subscriber => {\n    const len = sources.length;\n    if (len === 0) {\n      subscriber.complete();\n      return;\n    }\n    const values = new Array(len);\n    let completed = 0;\n    let emitted = 0;\n    for (let i = 0; i < len; i++) {\n      const source = from(sources[i]);\n      let hasValue = false;\n      subscriber.add(source.subscribe({\n        next: value => {\n          if (!hasValue) {\n            hasValue = true;\n            emitted++;\n          }\n          values[i] = value;\n        },\n        error: err => subscriber.error(err),\n        complete: () => {\n          completed++;\n          if (completed === len || !hasValue) {\n            if (emitted === len) {\n              subscriber.next(keys ?\n                keys.reduce((result, key, i) => (result[key] = values[i], result), {}) :\n                values);\n            }\n            subscriber.complete();\n          }\n        }\n      }));\n    }\n  });\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { Subscriber } from '../Subscriber';\nimport { map } from '../operators/map';\n\nconst toString: Function = (() => Object.prototype.toString)();\n\nexport interface NodeStyleEventEmitter {\n  addListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n  removeListener: (eventName: string | symbol, handler: NodeEventHandler) => this;\n}\n\nexport type NodeEventHandler = (...args: any[]) => void;\n\n// For APIs that implement `addListener` and `removeListener` methods that may\n// not use the same arguments or return EventEmitter values\n// such as React Native\nexport interface NodeCompatibleEventEmitter {\n  addListener: (eventName: string, handler: NodeEventHandler) => void | {};\n  removeListener: (eventName: string, handler: NodeEventHandler) => void | {};\n}\n\nexport interface JQueryStyleEventEmitter {\n  on: (eventName: string, handler: Function) => void;\n  off: (eventName: string, handler: Function) => void;\n}\n\nexport interface HasEventTargetAddRemove<E> {\n  addEventListener(type: string, listener: ((evt: E) => void) | null, options?: boolean | AddEventListenerOptions): void;\n  removeEventListener(type: string, listener?: ((evt: E) => void) | null, options?: EventListenerOptions | boolean): void;\n}\n\nexport type EventTargetLike<T> = HasEventTargetAddRemove<T> | NodeStyleEventEmitter | NodeCompatibleEventEmitter | JQueryStyleEventEmitter;\n\nexport type FromEventTarget<T> = EventTargetLike<T> | ArrayLike<EventTargetLike<T>>;\n\nexport interface EventListenerOptions {\n  capture?: boolean;\n  passive?: boolean;\n  once?: boolean;\n}\n\nexport interface AddEventListenerOptions extends EventListenerOptions {\n  once?: boolean;\n  passive?: boolean;\n}\n\n/* tslint:disable:max-line-length */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, resultSelector: (...args: any[]) => T): Observable<T>;\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEvent<T>(target: FromEventTarget<T>, eventName: string, options: EventListenerOptions, resultSelector: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable that emits events of a specific type coming from the\n * given event target.\n *\n * <span class=\"informal\">Creates an Observable from DOM events, or Node.js\n * EventEmitter events or others.</span>\n *\n * ![](fromEvent.png)\n *\n * `fromEvent` accepts as a first argument event target, which is an object with methods\n * for registering event handler functions. As a second argument it takes string that indicates\n * type of event we want to listen for. `fromEvent` supports selected types of event targets,\n * which are described in detail below. If your event target does not match any of the ones listed,\n * you should use {@link fromEventPattern}, which can be used on arbitrary APIs.\n * When it comes to APIs supported by `fromEvent`, their methods for adding and removing event\n * handler functions have different names, but they all accept a string describing event type\n * and function itself, which will be called whenever said event happens.\n *\n * Every time resulting Observable is subscribed, event handler function will be registered\n * to event target on given event type. When that event fires, value\n * passed as a first argument to registered function will be emitted by output Observable.\n * When Observable is unsubscribed, function will be unregistered from event target.\n *\n * Note that if event target calls registered function with more than one argument, second\n * and following arguments will not appear in resulting stream. In order to get access to them,\n * you can pass to `fromEvent` optional project function, which will be called with all arguments\n * passed to event handler. Output Observable will then emit value returned by project function,\n * instead of the usual value.\n *\n * Remember that event targets listed below are checked via duck typing. It means that\n * no matter what kind of object you have and no matter what environment you work in,\n * you can safely use `fromEvent` on that object if it exposes described methods (provided\n * of course they behave as was described above). So for example if Node.js library exposes\n * event target which has the same method names as DOM EventTarget, `fromEvent` is still\n * a good choice.\n *\n * If the API you use is more callback then event handler oriented (subscribed\n * callback function fires only once and thus there is no need to manually\n * unregister it), you should use {@link bindCallback} or {@link bindNodeCallback}\n * instead.\n *\n * `fromEvent` supports following types of event targets:\n *\n * **DOM EventTarget**\n *\n * This is an object with `addEventListener` and `removeEventListener` methods.\n *\n * In the browser, `addEventListener` accepts - apart from event type string and event\n * handler function arguments - optional third parameter, which is either an object or boolean,\n * both used for additional configuration how and when passed function will be called. When\n * `fromEvent` is used with event target of that type, you can provide this values\n * as third parameter as well.\n *\n * **Node.js EventEmitter**\n *\n * An object with `addListener` and `removeListener` methods.\n *\n * **JQuery-style event target**\n *\n * An object with `on` and `off` methods\n *\n * **DOM NodeList**\n *\n * List of DOM Nodes, returned for example by `document.querySelectorAll` or `Node.childNodes`.\n *\n * Although this collection is not event target in itself, `fromEvent` will iterate over all Nodes\n * it contains and install event handler function in every of them. When returned Observable\n * is unsubscribed, function will be removed from all Nodes.\n *\n * **DOM HtmlCollection**\n *\n * Just as in case of NodeList it is a collection of DOM nodes. Here as well event handler function is\n * installed and removed in each of elements.\n *\n *\n * ## Examples\n * ### Emits clicks happening on the DOM document\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicks = fromEvent(document, 'click');\n * clicks.subscribe(x => console.log(x));\n *\n * // Results in:\n * // MouseEvent object logged to console every time a click\n * // occurs on the document.\n * ```\n *\n * ### Use addEventListener with capture option\n * ```ts\n * import { fromEvent } from 'rxjs';\n *\n * const clicksInDocument = fromEvent(document, 'click', true); // note optional configuration parameter\n *                                                              // which will be passed to addEventListener\n * const clicksInDiv = fromEvent(someDivInDocument, 'click');\n *\n * clicksInDocument.subscribe(() => console.log('document'));\n * clicksInDiv.subscribe(() => console.log('div'));\n *\n * // By default events bubble UP in DOM tree, so normally\n * // when we would click on div in document\n * // \"div\" would be logged first and then \"document\".\n * // Since we specified optional `capture` option, document\n * // will catch event when it goes DOWN DOM tree, so console\n * // will log \"document\" and then \"div\".\n * ```\n *\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n * @see {@link fromEventPattern}\n *\n * @param {FromEventTarget<T>} target The DOM EventTarget, Node.js\n * EventEmitter, JQuery-like event target, NodeList or HTMLCollection to attach the event handler to.\n * @param {string} eventName The event name of interest, being emitted by the\n * `target`.\n * @param {EventListenerOptions} [options] Options to pass through to addEventListener\n * @return {Observable<T>}\n * @name fromEvent\n */\nexport function fromEvent<T>(\n  target: FromEventTarget<T>,\n  eventName: string,\n  options?: EventListenerOptions | ((...args: any[]) => T),\n  resultSelector?: ((...args: any[]) => T)\n): Observable<T> {\n\n  if (isFunction(options)) {\n    // DEPRECATED PATH\n    resultSelector = options;\n    options = undefined;\n  }\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEvent<T>(target, eventName, <EventListenerOptions | undefined>options).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T>(subscriber => {\n    function handler(e: T) {\n      if (arguments.length > 1) {\n        subscriber.next(Array.prototype.slice.call(arguments));\n      } else {\n        subscriber.next(e);\n      }\n    }\n    setupSubscription(target, eventName, handler, subscriber, options as EventListenerOptions);\n  });\n}\n\nfunction setupSubscription<T>(sourceObj: FromEventTarget<T>, eventName: string,\n                              handler: (...args: any[]) => void, subscriber: Subscriber<T>,\n                              options?: EventListenerOptions) {\n  let unsubscribe: () => void;\n  if (isEventTarget(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addEventListener(eventName, handler, options);\n    unsubscribe = () => source.removeEventListener(eventName, handler, options);\n  } else if (isJQueryStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.on(eventName, handler);\n    unsubscribe = () => source.off(eventName, handler);\n  } else if (isNodeStyleEventEmitter(sourceObj)) {\n    const source = sourceObj;\n    sourceObj.addListener(eventName, handler as NodeEventHandler);\n    unsubscribe = () => source.removeListener(eventName, handler as NodeEventHandler);\n  } else if (sourceObj && (sourceObj as any).length) {\n    for (let i = 0, len = (sourceObj as any).length; i < len; i++) {\n      setupSubscription(sourceObj[i], eventName, handler, subscriber, options);\n    }\n  } else {\n    throw new TypeError('Invalid event target');\n  }\n\n  subscriber.add(unsubscribe);\n}\n\nfunction isNodeStyleEventEmitter(sourceObj: any): sourceObj is NodeStyleEventEmitter {\n  return sourceObj && typeof sourceObj.addListener === 'function' && typeof sourceObj.removeListener === 'function';\n}\n\nfunction isJQueryStyleEventEmitter(sourceObj: any): sourceObj is JQueryStyleEventEmitter {\n  return sourceObj && typeof sourceObj.on === 'function' && typeof sourceObj.off === 'function';\n}\n\nfunction isEventTarget(sourceObj: any): sourceObj is HasEventTargetAddRemove<any> {\n  return sourceObj && typeof sourceObj.addEventListener === 'function' && typeof sourceObj.removeEventListener === 'function';\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { isFunction } from '../util/isFunction';\nimport { NodeEventHandler } from './fromEvent';\nimport { map } from '../operators/map';\n\n/* tslint:disable:max-line-length */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void): Observable<T>;\n/** @deprecated resultSelector no longer supported, pipe to map instead */\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any, removeHandler?: (handler: NodeEventHandler, signal?: any) => void, resultSelector?: (...args: any[]) => T): Observable<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Creates an Observable from an arbitrary API for registering event handlers.\n *\n * <span class=\"informal\">When that method for adding event handler was something {@link fromEvent}\n * was not prepared for.</span>\n *\n * ![](fromEventPattern.png)\n *\n * `fromEventPattern` allows you to convert into an Observable any API that supports registering handler functions\n * for events. It is similar to {@link fromEvent}, but far\n * more flexible. In fact, all use cases of {@link fromEvent} could be easily handled by\n * `fromEventPattern` (although in slightly more verbose way).\n *\n * This operator accepts as a first argument an `addHandler` function, which will be injected with\n * handler parameter. That handler is actually an event handler function that you now can pass\n * to API expecting it. `addHandler` will be called whenever Observable\n * returned by the operator is subscribed, so registering handler in API will not\n * necessarily happen when `fromEventPattern` is called.\n *\n * After registration, every time an event that we listen to happens,\n * Observable returned by `fromEventPattern` will emit value that event handler\n * function was called with. Note that if event handler was called with more\n * then one argument, second and following arguments will not appear in the Observable.\n *\n * If API you are using allows to unregister event handlers as well, you can pass to `fromEventPattern`\n * another function - `removeHandler` - as a second parameter. It will be injected\n * with the same handler function as before, which now you can use to unregister\n * it from the API. `removeHandler` will be called when consumer of resulting Observable\n * unsubscribes from it.\n *\n * In some APIs unregistering is actually handled differently. Method registering an event handler\n * returns some kind of token, which is later used to identify which function should\n * be unregistered or it itself has method that unregisters event handler.\n * If that is the case with your API, make sure token returned\n * by registering method is returned by `addHandler`. Then it will be passed\n * as a second argument to `removeHandler`, where you will be able to use it.\n *\n * If you need access to all event handler parameters (not only the first one),\n * or you need to transform them in any way, you can call `fromEventPattern` with optional\n * third parameter - project function which will accept all arguments passed to\n * event handler when it is called. Whatever is returned from project function will appear on\n * resulting stream instead of usual event handlers first argument. This means\n * that default project can be thought of as function that takes its first parameter\n * and ignores the rest.\n *\n * ## Example\n * ### Emits clicks happening on the DOM document\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * function addClickHandler(handler) {\n *   document.addEventListener('click', handler);\n * }\n *\n * function removeClickHandler(handler) {\n *   document.removeEventListener('click', handler);\n * }\n *\n * const clicks = fromEventPattern(\n *   addClickHandler,\n *   removeClickHandler\n * );\n * clicks.subscribe(x => console.log(x));\n *\n * // Whenever you click anywhere in the browser, DOM MouseEvent\n * // object will be logged.\n * ```\n *\n * ## Example\n * ### Use with API that returns cancellation token\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * const token = someAPI.registerEventHandler(function() {});\n * someAPI.unregisterEventHandler(token); // this APIs cancellation method accepts\n *                                        // not handler itself, but special token.\n *\n * const someAPIObservable = fromEventPattern(\n *   function(handler) { return someAPI.registerEventHandler(handler); }, // Note that we return the token here...\n *   function(handler, token) { someAPI.unregisterEventHandler(token); }  // ...to then use it here.\n * );\n * ```\n *\n * ## Example\n * ### Use with project function\n *\n * ```ts\n * import { fromEventPattern } from 'rxjs';\n *\n * someAPI.registerEventHandler((eventType, eventMessage) => {\n *   console.log(eventType, eventMessage); // Logs \"EVENT_TYPE\" \"EVENT_MESSAGE\" to console.\n * });\n *\n * const someAPIObservable = fromEventPattern(\n *   handler => someAPI.registerEventHandler(handler),\n *   handler => someAPI.unregisterEventHandler(handler)\n *   (eventType, eventMessage) => eventType + \" --- \" + eventMessage // without that function only \"EVENT_TYPE\"\n * );                                                                // would be emitted by the Observable\n *\n * someAPIObservable.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"EVENT_TYPE --- EVENT_MESSAGE\"\n * ```\n *\n * @see {@link fromEvent}\n * @see {@link bindCallback}\n * @see {@link bindNodeCallback}\n *\n * @param {function(handler: Function): any} addHandler A function that takes\n * a `handler` function as argument and attaches it somehow to the actual\n * source of events.\n * @param {function(handler: Function, token?: any): void} [removeHandler] A function that\n * takes a `handler` function as an argument and removes it from the event source. If `addHandler`\n * returns some kind of token, `removeHandler` function will have it as a second parameter.\n * @param {function(...args: any): T} [project] A function to\n * transform results. It takes the arguments from the event handler and\n * should return a single value.\n * @return {Observable<T>} Observable which, when an event happens, emits first parameter\n * passed to registered event handler. Alternatively it emits whatever project function returns\n * at that moment.\n * @static true\n * @name fromEventPattern\n * @owner Observable\n */\n\nexport function fromEventPattern<T>(addHandler: (handler: NodeEventHandler) => any,\n                                    removeHandler?: (handler: NodeEventHandler, signal?: any) => void,\n                                    resultSelector?: (...args: any[]) => T): Observable<T | T[]> {\n\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return fromEventPattern<T>(addHandler, removeHandler).pipe(\n      map(args => isArray(args) ? resultSelector(...args) : resultSelector(args))\n    );\n  }\n\n  return new Observable<T | T[]>(subscriber => {\n    const handler = (...e: T[]) => subscriber.next(e.length === 1 ? e[0] : e);\n\n    let retValue: any;\n    try {\n      retValue = addHandler(handler);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    if (!isFunction(removeHandler)) {\n      return undefined;\n    }\n\n    return () => removeHandler(handler, retValue) ;\n  });\n}\n","import { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { identity } from '../util/identity';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isScheduler } from '../util/isScheduler';\n\nexport type ConditionFunc<S> = (state: S) => boolean;\nexport type IterateFunc<S> = (state: S) => S;\nexport type ResultFunc<S, T> = (state: S) => T;\n\ninterface SchedulerState<T, S> {\n  needIterate?: boolean;\n  state: S;\n  subscriber: Subscriber<T>;\n  condition?: ConditionFunc<S>;\n  iterate: IterateFunc<S>;\n  resultSelector: ResultFunc<S, T>;\n}\n\nexport interface GenerateBaseOptions<S> {\n  /**\n   * Initial state.\n   */\n  initialState: S;\n  /**\n   * Condition function that accepts state and returns boolean.\n   * When it returns false, the generator stops.\n   * If not specified, a generator never stops.\n   */\n  condition?: ConditionFunc<S>;\n  /**\n   * Iterate function that accepts state and returns new state.\n   */\n  iterate: IterateFunc<S>;\n  /**\n   * SchedulerLike to use for generation process.\n   * By default, a generator starts immediately.\n   */\n  scheduler?: SchedulerLike;\n}\n\nexport interface GenerateOptions<T, S> extends GenerateBaseOptions<S> {\n  /**\n   * Result selection function that accepts state and returns a value to emit.\n   */\n  resultSelector: ResultFunc<S, T>;\n}\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate(0, x => x < 10, x => x + 1, x => x);\n *\n * @example <caption>Using asap scheduler, produces sequence of 2, 3, 5, then completes.</caption>\n * const res = generate(1, x => x < 5, x => x * 2, x => x + 1, asap);\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} resultSelector Selector function for results produced in the sequence. (deprecated)\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} on which to run the generator loop. If not provided, defaults to emit immediately.\n * @returns {Observable<T>} The generated sequence.\n */\n  export function generate<T, S>(initialState: S,\n                                 condition: ConditionFunc<S>,\n                                 iterate: IterateFunc<S>,\n                                 resultSelector: ResultFunc<S, T>,\n                                 scheduler?: SchedulerLike): Observable<T>;\n\n/**\n * Generates an Observable by running a state-driven loop\n * that emits an element on each iteration.\n *\n * <span class=\"informal\">Use it instead of nexting values in a for loop.</span>\n *\n * <img src=\"./img/generate.png\" width=\"100%\">\n *\n * `generate` allows you to create stream of values generated with a loop very similar to\n * traditional for loop. First argument of `generate` is a beginning value. Second argument\n * is a function that accepts this value and tests if some condition still holds. If it does,\n * loop continues, if not, it stops. Third value is a function which takes previously defined\n * value and modifies it in some way on each iteration. Note how these three parameters\n * are direct equivalents of three expressions in regular for loop: first expression\n * initializes some state (for example numeric index), second tests if loop can make next\n * iteration (for example if index is lower than 10) and third states how defined value\n * will be modified on every step (index will be incremented by one).\n *\n * Return value of a `generate` operator is an Observable that on each loop iteration\n * emits a value. First, condition function is ran. If it returned true, Observable\n * emits currently stored value (initial value at the first iteration) and then updates\n * that value with iterate function. If at some point condition returned false, Observable\n * completes at that moment.\n *\n * Optionally you can pass fourth parameter to `generate` - a result selector function which allows you\n * to immediately map value that would normally be emitted by an Observable.\n *\n * If you find three anonymous functions in `generate` call hard to read, you can provide\n * single object to the operator instead. That object has properties: `initialState`,\n * `condition`, `iterate` and `resultSelector`, which should have respective values that you\n * would normally pass to `generate`. `resultSelector` is still optional, but that form\n * of calling `generate` allows you to omit `condition` as well. If you omit it, that means\n * condition always holds, so output Observable will never complete.\n *\n * Both forms of `generate` can optionally accept a scheduler. In case of multi-parameter call,\n * scheduler simply comes as a last argument (no matter if there is resultSelector\n * function or not). In case of single-parameter call, you can provide it as a\n * `scheduler` property on object passed to the operator. In both cases scheduler decides when\n * next iteration of the loop will happen and therefore when next value will be emitted\n * by the Observable. For example to ensure that each value is pushed to the observer\n * on separate task in event loop, you could use `async` scheduler. Note that\n * by default (when no scheduler is passed) values are simply emitted synchronously.\n *\n *\n * @example <caption>Use with condition and iterate functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1\n * // 2\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with condition, iterate and resultSelector functions.</caption>\n * const generated = generate(0, x => x < 3, x => x + 1, x => x * 1000);\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n *\n * @example <caption>Use with options object.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   condition(value) { return value < 3; },\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!')\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // \"Yo!\"\n *\n * @example <caption>Use options object without condition function.</caption>\n * const generated = generate({\n *   initialState: 0,\n *   iterate(value) { return value + 1; },\n *   resultSelector(value) { return value * 1000; }\n * });\n *\n * generated.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('Yo!') // This will never run.\n * );\n *\n * // Logs:\n * // 0\n * // 1000\n * // 2000\n * // 3000\n * // ...and never stops.\n *\n *\n * @see {@link from}\n * @see {@link index/Observable.create}\n *\n * @param {S} initialState Initial state.\n * @param {function (state: S): boolean} condition Condition to terminate generation (upon returning false).\n * @param {function (state: S): S} iterate Iteration step function.\n * @param {function (state: S): T} [resultSelector] Selector function for results produced in the sequence.\n * @param {Scheduler} [scheduler] A {@link Scheduler} on which to run the generator loop. If not provided, defaults to emitting immediately.\n * @return {Observable<T>} The generated sequence.\n */\nexport function generate<S>(initialState: S,\n                            condition: ConditionFunc<S>,\n                            iterate: IterateFunc<S>,\n                            scheduler?: SchedulerLike): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateBaseOptions<S>} options Object that must contain initialState, iterate and might contain condition and scheduler.\n * @returns {Observable<S>} The generated sequence.\n */\nexport function generate<S>(options: GenerateBaseOptions<S>): Observable<S>;\n\n/**\n * Generates an observable sequence by running a state-driven loop\n * producing the sequence's elements, using the specified scheduler\n * to send out observer messages.\n * The overload accepts options object that might contain initial state, iterate,\n * condition, result selector and scheduler.\n *\n * ![](generate.png)\n *\n * @example <caption>Produces sequence of 0, 1, 2, ... 9, then completes.</caption>\n * const res = generate({\n *   initialState: 0,\n *   condition: x => x < 10,\n *   iterate: x => x + 1,\n *   resultSelector: x => x,\n * });\n *\n * @see {@link from}\n * @see {@link Observable}\n *\n * @param {GenerateOptions<T, S>} options Object that must contain initialState, iterate, resultSelector and might contain condition and scheduler.\n * @returns {Observable<T>} The generated sequence.\n */\nexport function generate<T, S>(options: GenerateOptions<T, S>): Observable<T>;\n\nexport function generate<T, S>(initialStateOrOptions: S | GenerateOptions<T, S>,\n                               condition?: ConditionFunc<S>,\n                               iterate?: IterateFunc<S>,\n                               resultSelectorOrObservable?: (ResultFunc<S, T>) | SchedulerLike,\n                               scheduler?: SchedulerLike): Observable<T> {\n\n  let resultSelector: ResultFunc<S, T>;\n  let initialState: S;\n\n  if (arguments.length == 1) {\n    const options = initialStateOrOptions as GenerateOptions<T, S>;\n    initialState = options.initialState;\n    condition = options.condition;\n    iterate = options.iterate;\n    resultSelector = options.resultSelector || identity as ResultFunc<S, T>;\n    scheduler = options.scheduler;\n  } else if (resultSelectorOrObservable === undefined || isScheduler(resultSelectorOrObservable)) {\n    initialState = initialStateOrOptions as S;\n    resultSelector = identity as ResultFunc<S, T>;\n    scheduler = resultSelectorOrObservable as SchedulerLike;\n  } else {\n    initialState = initialStateOrOptions as S;\n    resultSelector = resultSelectorOrObservable as ResultFunc<S, T>;\n  }\n\n  return new Observable<T>(subscriber => {\n    let state = initialState;\n    if (scheduler) {\n      return scheduler.schedule<SchedulerState<T, S>>(dispatch, 0, {\n        subscriber,\n        iterate,\n        condition,\n        resultSelector,\n        state\n      });\n    }\n\n    do {\n      if (condition) {\n        let conditionResult: boolean;\n        try {\n          conditionResult = condition(state);\n        } catch (err) {\n          subscriber.error(err);\n          return undefined;\n        }\n        if (!conditionResult) {\n          subscriber.complete();\n          break;\n        }\n      }\n      let value: T;\n      try {\n        value = resultSelector(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n      subscriber.next(value);\n      if (subscriber.closed) {\n        break;\n      }\n      try {\n        state = iterate(state);\n      } catch (err) {\n        subscriber.error(err);\n        return undefined;\n      }\n    } while (true);\n\n    return undefined;\n  });\n}\n\nfunction dispatch<T, S>(this: SchedulerAction<SchedulerState<T, S>>, state: SchedulerState<T, S>) {\n  const { subscriber, condition } = state;\n  if (subscriber.closed) {\n    return undefined;\n  }\n  if (state.needIterate) {\n    try {\n      state.state = state.iterate(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n  } else {\n    state.needIterate = true;\n  }\n  if (condition) {\n    let conditionResult: boolean;\n    try {\n      conditionResult = condition(state.state);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n    if (!conditionResult) {\n      subscriber.complete();\n      return undefined;\n    }\n    if (subscriber.closed) {\n      return undefined;\n    }\n  }\n  let value: T;\n  try {\n    value = state.resultSelector(state.state);\n  } catch (err) {\n    subscriber.error(err);\n    return undefined;\n  }\n  if (subscriber.closed) {\n    return undefined;\n  }\n  subscriber.next(value);\n  if (subscriber.closed) {\n    return undefined;\n  }\n  return this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { defer } from './defer';\nimport { EMPTY } from './empty';\nimport { SubscribableOrPromise } from '../types';\n\n/**\n * Decides at subscription time which Observable will actually be subscribed.\n *\n * <span class=\"informal\">`If` statement for Observables.</span>\n *\n * `iif` accepts a condition function and two Observables. When\n * an Observable returned by the operator is subscribed, condition function will be called.\n * Based on what boolean it returns at that moment, consumer will subscribe either to\n * the first Observable (if condition was true) or to the second (if condition was false). Condition\n * function may also not return anything - in that case condition will be evaluated as false and\n * second Observable will be subscribed.\n *\n * Note that Observables for both cases (true and false) are optional. If condition points to an Observable that\n * was left undefined, resulting stream will simply complete immediately. That allows you to, rather\n * than controlling which Observable will be subscribed, decide at runtime if consumer should have access\n * to given Observable or not.\n *\n * If you have more complex logic that requires decision between more than two Observables, {@link defer}\n * will probably be a better choice. Actually `iif` can be easily implemented with {@link defer}\n * and exists only for convenience and readability reasons.\n *\n *\n * ## Examples\n * ### Change at runtime which Observable will be subscribed\n * ```ts\n * import { iif, of } from 'rxjs';\n *\n * let subscribeToFirst;\n * const firstOrSecond = iif(\n *   () => subscribeToFirst,\n *   of('first'),\n *   of('second'),\n * );\n *\n * subscribeToFirst = true;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"first\"\n *\n * subscribeToFirst = false;\n * firstOrSecond.subscribe(value => console.log(value));\n *\n * // Logs:\n * // \"second\"\n *\n * ```\n *\n * ### Control an access to an Observable\n * ```ts\n * let accessGranted;\n * const observableIfYouHaveAccess = iif(\n *   () => accessGranted,\n *   of('It seems you have an access...'), // Note that only one Observable is passed to the operator.\n * );\n *\n * accessGranted = true;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"It seems you have an access...\"\n * // \"The end\"\n *\n * accessGranted = false;\n * observableIfYouHaveAccess.subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('The end'),\n * );\n *\n * // Logs:\n * // \"The end\"\n * ```\n *\n * @see {@link defer}\n *\n * @param {function(): boolean} condition Condition which Observable should be chosen.\n * @param {Observable} [trueObservable] An Observable that will be subscribed if condition is true.\n * @param {Observable} [falseObservable] An Observable that will be subscribed if condition is false.\n * @return {Observable} Either first or second Observable, depending on condition.\n * @static true\n * @name iif\n * @owner Observable\n*/\nexport function iif<T = never, F = never>(\n  condition: () => boolean,\n  trueResult: SubscribableOrPromise<T> = EMPTY,\n  falseResult: SubscribableOrPromise<F> = EMPTY\n): Observable<T|F> {\n  return defer(() => condition() ? trueResult : falseResult);\n}\n","import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { isNumeric } from '../util/isNumeric';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that emits sequential numbers every specified\n * interval of time, on a specified {@link SchedulerLike}.\n *\n * <span class=\"informal\">Emits incremental numbers periodically in time.\n * </span>\n *\n * ![](interval.png)\n *\n * `interval` returns an Observable that emits an infinite sequence of\n * ascending integers, with a constant interval of time of your choosing\n * between those emissions. The first emission is not sent immediately, but\n * only after the first period has passed. By default, this operator uses the\n * `async` {@link SchedulerLike} to provide a notion of time, but you may pass any\n * {@link SchedulerLike} to it.\n *\n * ## Example\n * Emits ascending numbers, one every second (1000ms) up to the number 3\n * ```ts\n * import { interval } from 'rxjs';\n * import { take } from 'rxjs/operators';\n *\n * const numbers = interval(1000);\n *\n * const takeFourNumbers = numbers.pipe(take(4));\n *\n * takeFourNumbers.subscribe(x => console.log('Next: ', x));\n *\n * // Logs:\n * // Next: 0\n * // Next: 1\n * // Next: 2\n * // Next: 3\n * ```\n *\n * @see {@link timer}\n * @see {@link delay}\n *\n * @param {number} [period=0] The interval size in milliseconds (by default)\n * or the time unit determined by the scheduler's clock.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a sequential number each time\n * interval.\n * @static true\n * @name interval\n * @owner Observable\n */\nexport function interval(period = 0,\n                         scheduler: SchedulerLike = async): Observable<number> {\n  if (!isNumeric(period) || period < 0) {\n    period = 0;\n  }\n\n  if (!scheduler || typeof scheduler.schedule !== 'function') {\n    scheduler = async;\n  }\n\n  return new Observable<number>(subscriber => {\n    subscriber.add(\n      scheduler.schedule(dispatch, period, { subscriber, counter: 0, period })\n    );\n    return subscriber;\n  });\n}\n\nfunction dispatch(this: SchedulerAction<IntervalState>, state: IntervalState) {\n  const { subscriber, counter, period } = state;\n  subscriber.next(counter);\n  this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n\ninterface IntervalState {\n  subscriber: Subscriber<number>;\n  counter: number;\n  period: number;\n}\n","import { Observable } from '../Observable';\nimport { ObservableInput } from '../types';\nimport { from } from './from';\nimport { isArray } from '../util/isArray';\nimport { EMPTY } from './empty';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNext<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNext<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNext<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` Will subscribe to each observable source it is provided, in order.\n * If the source it's subscribed to emits an error or completes, it will move to the next source\n * without error.\n *\n * If `onErrorResumeNext` is provided no arguments, or a single, empty array, it will return {@link index/EMPTY}.\n *\n * `onErrorResumeNext` is basically {@link concat}, only it will continue, even if one of its\n * sources emits an error.\n *\n * Note that there is no way to handle any errors thrown by sources via the result of\n * `onErrorResumeNext`. If you want to handle errors thrown in any given source, you can\n * always use the {@link catchError} operator on them before passing them into `onErrorResumeNext`.\n *\n * ## Example\n * Subscribe to the next Observable after map fails</caption>\n * ```ts\n * import { onErrorResumeNext, of } from 'rxjs';\n * import { map } from 'rxjs/operators';\n *\n * onErrorResumeNext(\n *  of(1, 2, 3, 0).pipe(\n *    map(x => {\n *      if (x === 0) throw Error();\n *      return 10 / x;\n *    })\n *  ),\n *  of(1, 2, 3),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('done'),\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"done\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} sources Observables (or anything that *is* observable) passed either directly or as an array.\n * @return {Observable} An Observable that concatenates all sources, one after the other,\n * ignoring all errors, such that any error causes it to move on to the next source.\n */\nexport function onErrorResumeNext<T, R>(...sources: Array<ObservableInput<any> |\n                                                              Array<ObservableInput<any>> |\n                                                              ((...values: Array<any>) => R)>): Observable<R> {\n\n  if (sources.length === 0) {\n    return EMPTY;\n  }\n\n  const [ first, ...remainder ] = sources;\n\n  if (sources.length === 1 && isArray(first)) {\n    return onErrorResumeNext(...first);\n  }\n\n  return new Observable(subscriber => {\n    const subNext = () => subscriber.add(\n      onErrorResumeNext(...remainder).subscribe(subscriber)\n    );\n\n    return from(first).subscribe({\n      next(value) { subscriber.next(value); },\n      error: subNext,\n      complete: subNext,\n    });\n  });\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\n/**\n * Convert an object into an Observable of `[key, value]` pairs.\n *\n * <span class=\"informal\">Turn entries of an object into a stream.</span>\n *\n * <img src=\"./img/pairs.png\" width=\"100%\">\n *\n * `pairs` takes an arbitrary object and returns an Observable that emits arrays. Each\n * emitted array has exactly two elements - the first is a key from the object\n * and the second is a value corresponding to that key. Keys are extracted from\n * an object via `Object.keys` function, which means that they will be only\n * enumerable keys that are present on an object directly - not ones inherited\n * via prototype chain.\n *\n * By default these arrays are emitted synchronously. To change that you can\n * pass a {@link SchedulerLike} as a second argument to `pairs`.\n *\n * @example <caption>Converts a javascript object to an Observable</caption>\n * ```ts\n * import { pairs } from 'rxjs';\n *\n * const obj = {\n *   foo: 42,\n *   bar: 56,\n *   baz: 78\n * };\n *\n * pairs(obj)\n * .subscribe(\n *   value => console.log(value),\n *   err => {},\n *   () => console.log('the end!')\n * );\n *\n * // Logs:\n * // [\"foo\", 42],\n * // [\"bar\", 56],\n * // [\"baz\", 78],\n * // \"the end!\"\n * ```\n *\n * @param {Object} obj The object to inspect and turn into an\n * Observable sequence.\n * @param {Scheduler} [scheduler] An optional IScheduler to schedule\n * when resulting Observable will emit values.\n * @returns {(Observable<Array<string|T>>)} An observable sequence of\n * [key, value] pairs from the object.\n */\nexport function pairs<T>(obj: Object, scheduler?: SchedulerLike): Observable<[string, T]> {\n  if (!scheduler) {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      for (let i = 0; i < keys.length && !subscriber.closed; i++) {\n        const key = keys[i];\n        if (obj.hasOwnProperty(key)) {\n          subscriber.next([key, obj[key]]);\n        }\n      }\n      subscriber.complete();\n    });\n  } else {\n    return new Observable<[string, T]>(subscriber => {\n      const keys = Object.keys(obj);\n      const subscription = new Subscription();\n      subscription.add(\n        scheduler.schedule<{ keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }>\n          (dispatch, 0, { keys, index: 0, subscriber, subscription, obj }));\n      return subscription;\n    });\n  }\n}\n\n/** @internal */\nexport function dispatch<T>(this: SchedulerAction<any>,\n                            state: { keys: string[], index: number, subscriber: Subscriber<[string, T]>, subscription: Subscription, obj: Object }) {\n  const { keys, index, subscriber, subscription, obj } = state;\n  if (!subscriber.closed) {\n    if (index < keys.length) {\n      const key = keys[index];\n      subscriber.next([key, obj[key]]);\n      subscription.add(this.schedule({ keys, index: index + 1, subscriber, subscription, obj }));\n    } else {\n      subscriber.complete();\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { subscribeTo } from '../util/subscribeTo';\nimport { filter } from '../operators/filter';\nimport { ObservableInput } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition a set of numbers into odds and evens observables\n * ```ts\n * import { of, partition } from 'rxjs';\n *\n * const observableValues = of(1, 2, 3, 4, 5, 6);\n * const [evens$, odds$] = partition(observableValues, (value, index) => value % 2 === 0);\n *\n * odds$.subscribe(x => console.log('odds', x));\n * evens$.subscribe(x => console.log('evens', x));\n *\n * // Logs:\n * // odds 1\n * // odds 3\n * // odds 5\n * // evens 2\n * // evens 4\n * // evens 6\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n */\nexport function partition<T>(\n  source: ObservableInput<T>,\n  predicate: (value: T, index: number) => boolean,\n  thisArg?: any\n): [Observable<T>, Observable<T>] {\n  return [\n    filter(predicate, thisArg)(new Observable<T>(subscribeTo(source))),\n    filter(not(predicate, thisArg) as any)(new Observable<T>(subscribeTo(source)))\n  ] as [Observable<T>, Observable<T>];\n}\n","import { SchedulerAction, SchedulerLike } from '../types';\nimport { Observable } from '../Observable';\n\n/**\n * Creates an Observable that emits a sequence of numbers within a specified\n * range.\n *\n * <span class=\"informal\">Emits a sequence of numbers in a range.</span>\n *\n * ![](range.png)\n *\n * `range` operator emits a range of sequential integers, in order, where you\n * select the `start` of the range and its `length`. By default, uses no\n * {@link SchedulerLike} and just delivers the notifications synchronously, but may use\n * an optional {@link SchedulerLike} to regulate those deliveries.\n *\n * ## Example\n * Emits the numbers 1 to 10</caption>\n * ```ts\n * import { range } from 'rxjs';\n *\n * const numbers = range(1, 10);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link timer}\n * @see {@link index/interval}\n *\n * @param {number} [start=0] The value of the first integer in the sequence.\n * @param {number} count The number of sequential integers to generate.\n * @param {SchedulerLike} [scheduler] A {@link SchedulerLike} to use for scheduling\n * the emissions of the notifications.\n * @return {Observable} An Observable of numbers that emits a finite range of\n * sequential integers.\n * @static true\n * @name range\n * @owner Observable\n */\nexport function range(start: number = 0,\n                      count?: number,\n                      scheduler?: SchedulerLike): Observable<number> {\n  return new Observable<number>(subscriber => {\n    if (count === undefined) {\n      count = start;\n      start = 0;\n    }\n\n    let index = 0;\n    let current = start;\n\n    if (scheduler) {\n      return scheduler.schedule(dispatch, 0, {\n        index, count, start, subscriber\n      });\n    } else {\n      do {\n        if (index++ >= count) {\n          subscriber.complete();\n          break;\n        }\n        subscriber.next(current++);\n        if (subscriber.closed) {\n          break;\n        }\n      } while (true);\n    }\n\n    return undefined;\n  });\n}\n\n/** @internal */\nexport function dispatch(this: SchedulerAction<any>, state: any) {\n  const { start, index, count, subscriber } = state;\n\n  if (index >= count) {\n    subscriber.complete();\n    return;\n  }\n\n  subscriber.next(start);\n\n  if (subscriber.closed) {\n    return;\n  }\n\n  state.index = index + 1;\n  state.start = start + 1;\n\n  this.schedule(state);\n}\n","import { Observable } from '../Observable';\nimport { Unsubscribable, ObservableInput } from '../types';\nimport { from } from './from'; // from from from! LAWL\nimport { EMPTY } from './empty';\n\n/**\n * Creates an Observable that uses a resource which will be disposed at the same time as the Observable.\n *\n * <span class=\"informal\">Use it when you catch yourself cleaning up after an Observable.</span>\n *\n * `using` is a factory operator, which accepts two functions. First function returns a disposable resource.\n * It can be an arbitrary object that implements `unsubscribe` method. Second function will be injected with\n * that object and should return an Observable. That Observable can use resource object during its execution.\n * Both functions passed to `using` will be called every time someone subscribes - neither an Observable nor\n * resource object will be shared in any way between subscriptions.\n *\n * When Observable returned by `using` is subscribed, Observable returned from the second function will be subscribed\n * as well. All its notifications (nexted values, completion and error events) will be emitted unchanged by the output\n * Observable. If however someone unsubscribes from the Observable or source Observable completes or errors by itself,\n * the `unsubscribe` method on resource object will be called. This can be used to do any necessary clean up, which\n * otherwise would have to be handled by hand. Note that complete or error notifications are not emitted when someone\n * cancels subscription to an Observable via `unsubscribe`, so `using` can be used as a hook, allowing you to make\n * sure that all resources which need to exist during an Observable execution will be disposed at appropriate time.\n *\n * @see {@link defer}\n *\n * @param {function(): ISubscription} resourceFactory A function which creates any resource object\n * that implements `unsubscribe` method.\n * @param {function(resource: ISubscription): Observable<T>} observableFactory A function which\n * creates an Observable, that can use injected resource object.\n * @return {Observable<T>} An Observable that behaves the same as Observable returned by `observableFactory`, but\n * which - when completed, errored or unsubscribed - will also call `unsubscribe` on created resource object.\n */\nexport function using<T>(resourceFactory: () => Unsubscribable | void,\n                         observableFactory: (resource: Unsubscribable | void) => ObservableInput<T> | void): Observable<T> {\n  return new Observable<T>(subscriber => {\n    let resource: Unsubscribable | void;\n\n    try {\n      resource = resourceFactory();\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    let result: ObservableInput<T> | void;\n    try {\n      result = observableFactory(resource);\n    } catch (err) {\n      subscriber.error(err);\n      return undefined;\n    }\n\n    const source = result ? from(result) : EMPTY;\n    const subscription = source.subscribe(subscriber);\n    return () => {\n      subscription.unsubscribe();\n      if (resource) {\n        resource.unsubscribe();\n      }\n    };\n  });\n}\n","import lodashMemoize from 'lodash.memoize'; // tslint:disable-line:match-default-export-name\nimport shallowEqual from 'shallowequal';\n\nimport CacheKeyResolver from './cache-key-resolver';\nimport { Omit } from './types';\n\nexport interface MemoizeOptions {\n    maxSize?: number;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\nexport default function memoize<T extends (...args: any[]) => any>(\n    fn: T,\n    options?: MemoizeOptions\n) {\n    const { maxSize, isEqual } = { maxSize: 0, isEqual: shallowEqual, ...options };\n    const cache = new Map();\n    const resolver = new CacheKeyResolver({\n        isEqual,\n        maxSize,\n        onExpire: key => cache.delete(key),\n    });\n    const memoized = lodashMemoize(fn, (...args) => resolver.getKey(...args));\n\n    memoized.cache = cache;\n\n    return memoized;\n}\n\nexport function memoizeOne<T extends (...args: any[]) => any>(\n    fn: T,\n    options?: Omit<MemoizeOptions, 'maxSize'>\n) {\n    return memoize(fn, { ...options, maxSize: 1 });\n}\n","import { noop } from 'lodash';\nimport shallowEqual from 'shallowequal';\n\nimport {\n    isRootCacheKeyMap,\n    isTerminalCacheKeyMap,\n    ChildCacheKeyMap,\n    IntermediateCacheKeyMap,\n    RootCacheKeyMap,\n    TerminalCacheKeyMap\n} from './cache-key-maps';\n\nexport interface CacheKeyResolverOptions {\n    maxSize?: number;\n    onExpire?(key: string): void;\n    isEqual?(valueA: any, valueB: any): boolean;\n}\n\ninterface ResolveResult {\n    index: number;\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    map?: TerminalCacheKeyMap;\n}\n\nexport default class CacheKeyResolver {\n    private _lastId = 0;\n    private _map: RootCacheKeyMap = { maps: [] };\n    private _usedMaps: TerminalCacheKeyMap[] = [];\n    private _options: Required<CacheKeyResolverOptions>;\n\n    constructor(options?: CacheKeyResolverOptions) {\n        this._options = {\n            isEqual: shallowEqual,\n            maxSize: 0,\n            onExpire: noop,\n            ...options,\n        };\n    }\n\n    getKey(...args: any[]): string {\n        const result = this._resolveMap(...args);\n        const { index, parentMap } = result;\n        let { map } = result;\n\n        if (map && map.cacheKey) {\n            map.usedCount++;\n        } else {\n            map = this._generateMap(parentMap, args.slice(index));\n        }\n\n        // Keep track of the least used map so we can remove it if the size of\n        // the stack exceeds the maximum size.\n        this._removeLeastUsedMap(map);\n\n        return map.cacheKey;\n    }\n\n    getUsedCount(...args: any[]): number {\n        const { map } = this._resolveMap(...args);\n\n        return map ? map.usedCount : 0;\n    }\n\n    private _resolveMap(...args: any[]): ResolveResult {\n        let index = 0;\n        let parentMap = this._map;\n\n        // Traverse the tree to find the linked list of maps that match the\n        // arguments of the call. Each intermediate or terminal map contains a\n        // value that could be used to match with the arguments. The last map in\n        // the list (the terminal) should contain a cache key. If it can does\n        // not exist, we will return a falsy value so that the caller could\n        // handle and generate a new cache key.\n        while (parentMap.maps.length) {\n            let isMatched = false;\n\n            for (let mapIndex = 0; mapIndex < parentMap.maps.length; mapIndex++) {\n                const map = parentMap.maps[mapIndex];\n\n                if (!this._options.isEqual(map.value, args[index])) {\n                    continue;\n                }\n\n                // Move the most recently used map to the top of the stack for\n                // quicker access\n                parentMap.maps.unshift(...parentMap.maps.splice(mapIndex, 1));\n\n                if ((args.length === 0 || index === args.length - 1) && isTerminalCacheKeyMap(map)) {\n                    return { index, map, parentMap };\n                }\n\n                isMatched = true;\n                parentMap = map;\n                index++;\n\n                break;\n            }\n\n            if (!isMatched) {\n                break;\n            }\n        }\n\n        return { index, parentMap };\n    }\n\n    private _generateMap(parent: RootCacheKeyMap | IntermediateCacheKeyMap, args: any[]): TerminalCacheKeyMap {\n        let index = 0;\n        let parentMap = parent;\n        let map: IntermediateCacheKeyMap;\n\n        do {\n            map = {\n                maps: [],\n                parentMap,\n                usedCount: 1,\n                value: args[index],\n            };\n\n            // Continue to build the tree of maps so that it could be resolved\n            // next time when the function is called with the same set of\n            // arguments.\n            parentMap.maps.unshift(map);\n\n            parentMap = map;\n            index++;\n        } while (index < args.length);\n\n        const terminalMap = map as TerminalCacheKeyMap;\n\n        terminalMap.cacheKey = `${++this._lastId}`;\n\n        return terminalMap;\n    }\n\n    private _removeLeastUsedMap(recentlyUsedMap: TerminalCacheKeyMap): void {\n        if (!this._options.maxSize) {\n            return;\n        }\n\n        const index = this._usedMaps.indexOf(recentlyUsedMap);\n\n        this._usedMaps.splice(\n            index === -1 ? 0 : index,\n            index === -1 ? 0 : 1,\n            recentlyUsedMap\n        );\n\n        if (this._usedMaps.length <= this._options.maxSize) {\n            return;\n        }\n\n        const map = this._usedMaps.pop();\n\n        if (!map) {\n            return;\n        }\n\n        this._removeMap(map);\n        this._options.onExpire(map.cacheKey);\n    }\n\n    private _removeMap(map: ChildCacheKeyMap): void {\n        if (!map.parentMap) {\n            return;\n        }\n\n        map.parentMap.maps.splice(map.parentMap.maps.indexOf(map), 1);\n\n        if (isRootCacheKeyMap(map.parentMap)) {\n            return;\n        }\n\n        this._removeMap(map.parentMap);\n    }\n}\n","export interface RootCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n}\n\nexport interface IntermediateCacheKeyMap {\n    maps: ChildCacheKeyMap[];\n    parentMap: RootCacheKeyMap | IntermediateCacheKeyMap;\n    usedCount: number;\n    value: any;\n}\n\nexport interface TerminalCacheKeyMap extends IntermediateCacheKeyMap {\n    cacheKey: string;\n}\n\nexport type ChildCacheKeyMap = IntermediateCacheKeyMap | TerminalCacheKeyMap;\n\nexport function isTerminalCacheKeyMap(map: ChildCacheKeyMap): map is TerminalCacheKeyMap {\n    return map.hasOwnProperty('cacheKey');\n}\n\nexport function isRootCacheKeyMap(map: RootCacheKeyMap | ChildCacheKeyMap): map is RootCacheKeyMap {\n    return map.hasOwnProperty('parentMap');\n}\n","\n/* Operator exports */\nexport { audit } from '../internal/operators/audit';\nexport { auditTime } from '../internal/operators/auditTime';\nexport { buffer } from '../internal/operators/buffer';\nexport { bufferCount } from '../internal/operators/bufferCount';\nexport { bufferTime } from '../internal/operators/bufferTime';\nexport { bufferToggle } from '../internal/operators/bufferToggle';\nexport { bufferWhen } from '../internal/operators/bufferWhen';\nexport { catchError } from '../internal/operators/catchError';\nexport { combineAll } from '../internal/operators/combineAll';\nexport { combineLatest } from '../internal/operators/combineLatest';\nexport { concat } from '../internal/operators/concat';\nexport { concatAll } from '../internal/operators/concatAll';\nexport { concatMap } from '../internal/operators/concatMap';\nexport { concatMapTo } from '../internal/operators/concatMapTo';\nexport { count } from '../internal/operators/count';\nexport { debounce } from '../internal/operators/debounce';\nexport { debounceTime } from '../internal/operators/debounceTime';\nexport { defaultIfEmpty } from '../internal/operators/defaultIfEmpty';\nexport { delay } from '../internal/operators/delay';\nexport { delayWhen } from '../internal/operators/delayWhen';\nexport { dematerialize } from '../internal/operators/dematerialize';\nexport { distinct } from '../internal/operators/distinct';\nexport { distinctUntilChanged } from '../internal/operators/distinctUntilChanged';\nexport { distinctUntilKeyChanged } from '../internal/operators/distinctUntilKeyChanged';\nexport { elementAt } from '../internal/operators/elementAt';\nexport { endWith } from '../internal/operators/endWith';\nexport { every } from '../internal/operators/every';\nexport { exhaust } from '../internal/operators/exhaust';\nexport { exhaustMap } from '../internal/operators/exhaustMap';\nexport { expand } from '../internal/operators/expand';\nexport { filter } from '../internal/operators/filter';\nexport { finalize } from '../internal/operators/finalize';\nexport { find } from '../internal/operators/find';\nexport { findIndex } from '../internal/operators/findIndex';\nexport { first } from '../internal/operators/first';\nexport { groupBy } from '../internal/operators/groupBy';\nexport { ignoreElements } from '../internal/operators/ignoreElements';\nexport { isEmpty } from '../internal/operators/isEmpty';\nexport { last } from '../internal/operators/last';\nexport { map } from '../internal/operators/map';\nexport { mapTo } from '../internal/operators/mapTo';\nexport { materialize } from '../internal/operators/materialize';\nexport { max } from '../internal/operators/max';\nexport { merge } from '../internal/operators/merge';\nexport { mergeAll } from '../internal/operators/mergeAll';\nexport { mergeMap, flatMap } from '../internal/operators/mergeMap';\nexport { mergeMapTo } from '../internal/operators/mergeMapTo';\nexport { mergeScan } from '../internal/operators/mergeScan';\nexport { min } from '../internal/operators/min';\nexport { multicast } from '../internal/operators/multicast';\nexport { observeOn } from '../internal/operators/observeOn';\nexport { onErrorResumeNext } from '../internal/operators/onErrorResumeNext';\nexport { pairwise } from '../internal/operators/pairwise';\nexport { partition } from '../internal/operators/partition';\nexport { pluck } from '../internal/operators/pluck';\nexport { publish } from '../internal/operators/publish';\nexport { publishBehavior } from '../internal/operators/publishBehavior';\nexport { publishLast } from '../internal/operators/publishLast';\nexport { publishReplay } from '../internal/operators/publishReplay';\nexport { race } from '../internal/operators/race';\nexport { reduce } from '../internal/operators/reduce';\nexport { repeat } from '../internal/operators/repeat';\nexport { repeatWhen } from '../internal/operators/repeatWhen';\nexport { retry } from '../internal/operators/retry';\nexport { retryWhen } from '../internal/operators/retryWhen';\nexport { refCount } from '../internal/operators/refCount';\nexport { sample } from '../internal/operators/sample';\nexport { sampleTime } from '../internal/operators/sampleTime';\nexport { scan } from '../internal/operators/scan';\nexport { sequenceEqual } from '../internal/operators/sequenceEqual';\nexport { share } from '../internal/operators/share';\nexport { shareReplay } from '../internal/operators/shareReplay';\nexport { single } from '../internal/operators/single';\nexport { skip } from '../internal/operators/skip';\nexport { skipLast } from '../internal/operators/skipLast';\nexport { skipUntil } from '../internal/operators/skipUntil';\nexport { skipWhile } from '../internal/operators/skipWhile';\nexport { startWith } from '../internal/operators/startWith';\nexport { subscribeOn } from '../internal/operators/subscribeOn';\nexport { switchAll } from '../internal/operators/switchAll';\nexport { switchMap } from '../internal/operators/switchMap';\nexport { switchMapTo } from '../internal/operators/switchMapTo';\nexport { take } from '../internal/operators/take';\nexport { takeLast } from '../internal/operators/takeLast';\nexport { takeUntil } from '../internal/operators/takeUntil';\nexport { takeWhile } from '../internal/operators/takeWhile';\nexport { tap } from '../internal/operators/tap';\nexport { throttle } from '../internal/operators/throttle';\nexport { throttleTime } from '../internal/operators/throttleTime';\nexport { throwIfEmpty } from '../internal/operators/throwIfEmpty';\nexport { timeInterval } from '../internal/operators/timeInterval';\nexport { timeout } from '../internal/operators/timeout';\nexport { timeoutWith } from '../internal/operators/timeoutWith';\nexport { timestamp } from '../internal/operators/timestamp';\nexport { toArray } from '../internal/operators/toArray';\nexport { window } from '../internal/operators/window';\nexport { windowCount } from '../internal/operators/windowCount';\nexport { windowTime } from '../internal/operators/windowTime';\nexport { windowToggle } from '../internal/operators/windowToggle';\nexport { windowWhen } from '../internal/operators/windowWhen';\nexport { withLatestFrom } from '../internal/operators/withLatestFrom';\nexport { zip } from '../internal/operators/zip';\nexport { zipAll } from '../internal/operators/zipAll';\n","import { async } from '../scheduler/async';\nimport { audit } from './audit';\nimport { timer } from '../observable/timer';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/**\n * Ignores source values for `duration` milliseconds, then emits the most recent\n * value from the source Observable, then repeats this process.\n *\n * <span class=\"informal\">When it sees a source value, it ignores that plus\n * the next ones for `duration` milliseconds, and then it emits the most recent\n * value from the source.</span>\n *\n * ![](auditTime.png)\n *\n * `auditTime` is similar to `throttleTime`, but emits the last value from the\n * silenced time window, instead of the first value. `auditTime` emits the most\n * recent value from the source Observable on the output Observable as soon as\n * its internal timer becomes disabled, and ignores source values while the\n * timer is enabled. Initially, the timer is disabled. As soon as the first\n * source value arrives, the timer is enabled. After `duration` milliseconds (or\n * the time unit determined internally by the optional `scheduler`) has passed,\n * the timer is disabled, then the most recent source value is emitted on the\n * output Observable, and this process repeats for the next source value.\n * Optionally takes a {@link SchedulerLike} for managing timers.\n *\n * ## Example\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { auditTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(auditTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} duration Time to wait before emitting the most recent source\n * value, measured in milliseconds or the time unit determined internally\n * by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the rate-limiting behavior.\n * @return {Observable<T>} An Observable that performs rate-limiting of\n * emissions from the source Observable.\n * @method auditTime\n * @owner Observable\n */\nexport function auditTime<T>(duration: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return audit(() => timer(duration, scheduler));\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Buffers the source Observable values until `closingNotifier` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when another Observable emits.</span>\n *\n * ![](buffer.png)\n *\n * Buffers the incoming Observable values until the given `closingNotifier`\n * Observable emits a value, at which point it emits the buffer on the output\n * Observable and starts a new buffer internally, awaiting the next time\n * `closingNotifier` emits.\n *\n * ## Example\n *\n * On every click, emit array of most recent interval events\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { buffer } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const intervalEvents = interval(1000);\n * const buffered = intervalEvents.pipe(buffer(clicks));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link window}\n *\n * @param {Observable<any>} closingNotifier An Observable that signals the\n * buffer to be emitted on the output Observable.\n * @return {Observable<T[]>} An Observable of buffers, which are arrays of\n * values.\n * @method buffer\n * @owner Observable\n */\nexport function buffer<T>(closingNotifier: Observable<any>): OperatorFunction<T, T[]> {\n  return function bufferOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferOperator<T>(closingNotifier));\n  };\n}\n\nclass BufferOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingNotifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSubscriber<T> extends SimpleOuterSubscriber<T, any> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, closingNotifier: Observable<any>) {\n    super(destination);\n    this.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n  }\n\n  protected _next(value: T) {\n    this.buffer.push(value);\n  }\n\n  notifyNext(): void {\n    const buffer = this.buffer;\n    this.buffer = [];\n    this.destination.next!(buffer);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Buffers the source Observable values until the size hits the maximum\n * `bufferSize` given.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * that array only when its size reaches `bufferSize`.</span>\n *\n * ![](bufferCount.png)\n *\n * Buffers a number of values from the source Observable by `bufferSize` then\n * emits the buffer and clears it, and starts a new buffer each\n * `startBufferEvery` values. If `startBufferEvery` is not provided or is\n * `null`, then new buffers are started immediately at the start of the source\n * and when each buffer closes and is emitted.\n *\n * ## Examples\n *\n * Emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * On every click, emit the last two click events as an array\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferCount } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferCount(2, 1));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link pairwise}\n * @see {@link windowCount}\n *\n * @param {number} bufferSize The maximum size of the buffer emitted.\n * @param {number} [startBufferEvery] Interval at which to start a new buffer.\n * For example if `startBufferEvery` is `2`, then a new buffer will be started\n * on every other value from the source. A new buffer is started at the\n * beginning of the source by default.\n * @return {Observable<T[]>} An Observable of arrays of buffered values.\n * @method bufferCount\n * @owner Observable\n */\nexport function bufferCount<T>(bufferSize: number, startBufferEvery: number = null): OperatorFunction<T, T[]> {\n  return function bufferCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferCountOperator<T>(bufferSize, startBufferEvery));\n  };\n}\n\nclass BufferCountOperator<T> implements Operator<T, T[]> {\n  private subscriberClass: any;\n\n  constructor(private bufferSize: number, private startBufferEvery: number) {\n    if (!startBufferEvery || bufferSize === startBufferEvery) {\n      this.subscriberClass = BufferCountSubscriber;\n    } else {\n      this.subscriberClass = BufferSkipCountSubscriber;\n    }\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): TeardownLogic {\n    return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferCountSubscriber<T> extends Subscriber<T> {\n  private buffer: T[] = [];\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const buffer = this.buffer;\n\n    buffer.push(value);\n\n    if (buffer.length == this.bufferSize) {\n      this.destination.next(buffer);\n      this.buffer = [];\n    }\n  }\n\n  protected _complete(): void {\n    const buffer = this.buffer;\n    if (buffer.length > 0) {\n      this.destination.next(buffer);\n    }\n    super._complete();\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferSkipCountSubscriber<T> extends Subscriber<T> {\n  private buffers: Array<T[]> = [];\n  private count: number = 0;\n\n  constructor(destination: Subscriber<T[]>, private bufferSize: number, private startBufferEvery: number) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const { bufferSize, startBufferEvery, buffers, count } = this;\n\n    this.count++;\n    if (count % startBufferEvery === 0) {\n      buffers.push([]);\n    }\n\n    for (let i = buffers.length; i--; ) {\n      const buffer = buffers[i];\n      buffer.push(value);\n      if (buffer.length === bufferSize) {\n        buffers.splice(i, 1);\n        this.destination.next(buffer);\n      }\n    }\n  }\n\n  protected _complete(): void {\n    const { buffers, destination } = this;\n\n    while (buffers.length > 0) {\n      let buffer = buffers.shift();\n      if (buffer.length > 0) {\n        destination.next(buffer);\n      }\n    }\n    super._complete();\n  }\n\n}\n","import { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerAction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function bufferTime<T>(bufferTimeSpan: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\nexport function bufferTime<T>(bufferTimeSpan: number, bufferCreationInterval: number | null | undefined, maxBufferSize: number, scheduler?: SchedulerLike): OperatorFunction<T, T[]>;\n/* tslint:enable:max-line-length */\n\n/**\n * Buffers the source Observable values for a specific time period.\n *\n * <span class=\"informal\">Collects values from the past as an array, and emits\n * those arrays periodically in time.</span>\n *\n * ![](bufferTime.png)\n *\n * Buffers values from the source for a specific time duration `bufferTimeSpan`.\n * Unless the optional argument `bufferCreationInterval` is given, it emits and\n * resets the buffer every `bufferTimeSpan` milliseconds. If\n * `bufferCreationInterval` is given, this operator opens the buffer every\n * `bufferCreationInterval` milliseconds and closes (emits and resets) the\n * buffer every `bufferTimeSpan` milliseconds. When the optional argument\n * `maxBufferSize` is specified, the buffer will be closed either after\n * `bufferTimeSpan` milliseconds or when it contains `maxBufferSize` elements.\n *\n * ## Examples\n *\n * Every second, emit an array of the recent click events\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(1000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds, emit the click events from the next 2 seconds\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { bufferTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferTime(2000, 5000));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferToggle}\n * @see {@link bufferWhen}\n * @see {@link windowTime}\n *\n * @param {number} bufferTimeSpan The amount of time to fill each buffer array.\n * @param {number} [bufferCreationInterval] The interval at which to start new\n * buffers.\n * @param {number} [maxBufferSize] The maximum buffer size.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine buffer boundaries.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferTime\n * @owner Observable\n */\nexport function bufferTime<T>(bufferTimeSpan: number): OperatorFunction<T, T[]> {\n  let length: number = arguments.length;\n\n  let scheduler: SchedulerLike = async;\n  if (isScheduler(arguments[arguments.length - 1])) {\n    scheduler = arguments[arguments.length - 1];\n    length--;\n  }\n\n  let bufferCreationInterval: number = null;\n  if (length >= 2) {\n    bufferCreationInterval = arguments[1];\n  }\n\n  let maxBufferSize: number = Number.POSITIVE_INFINITY;\n  if (length >= 3) {\n    maxBufferSize = arguments[2];\n  }\n\n  return function bufferTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferTimeOperator<T>(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));\n  };\n}\n\nclass BufferTimeOperator<T> implements Operator<T, T[]> {\n  constructor(private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferTimeSubscriber(\n      subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler\n    ));\n  }\n}\n\nclass Context<T> {\n  buffer: T[] = [];\n  closeAction: Subscription;\n}\n\ninterface DispatchCreateArg<T> {\n  bufferTimeSpan: number;\n  bufferCreationInterval: number;\n  subscriber: BufferTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface DispatchCloseArg<T> {\n  subscriber: BufferTimeSubscriber<T>;\n  context: Context<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferTimeSubscriber<T> extends Subscriber<T> {\n  private contexts: Array<Context<T>> = [];\n  private timespanOnly: boolean;\n\n  constructor(destination: Subscriber<T[]>,\n              private bufferTimeSpan: number,\n              private bufferCreationInterval: number,\n              private maxBufferSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    const context = this.openContext();\n    this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;\n    if (this.timespanOnly) {\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    } else {\n      const closeState = { subscriber: this, context };\n      const creationState: DispatchCreateArg<T> = { bufferTimeSpan, bufferCreationInterval, subscriber: this, scheduler };\n      this.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, closeState));\n      this.add(scheduler.schedule<DispatchCreateArg<T>>(dispatchBufferCreation, bufferCreationInterval, creationState));\n    }\n  }\n\n  protected _next(value: T) {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    let filledBufferContext: Context<T>;\n    for (let i = 0; i < len; i++) {\n      const context = contexts[i];\n      const buffer = context.buffer;\n      buffer.push(value);\n      if (buffer.length == this.maxBufferSize) {\n        filledBufferContext = context;\n      }\n    }\n\n    if (filledBufferContext) {\n      this.onBufferFull(filledBufferContext);\n    }\n  }\n\n  protected _error(err: any) {\n    this.contexts.length = 0;\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts, destination } = this;\n    while (contexts.length > 0) {\n      const context = contexts.shift();\n      destination.next(context.buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.contexts = null;\n  }\n\n  protected onBufferFull(context: Context<T>) {\n    this.closeContext(context);\n    const closeAction = context.closeAction;\n    closeAction.unsubscribe();\n    this.remove(closeAction);\n\n    if (!this.closed && this.timespanOnly) {\n      context = this.openContext();\n      const bufferTimeSpan = this.bufferTimeSpan;\n      const timeSpanOnlyState = { subscriber: this, context, bufferTimeSpan };\n      this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  openContext(): Context<T> {\n    const context: Context<T> = new Context<T>();\n    this.contexts.push(context);\n    return context;\n  }\n\n  closeContext(context: Context<T>) {\n    this.destination.next(context.buffer);\n    const contexts = this.contexts;\n\n    const spliceIndex = contexts ? contexts.indexOf(context) : -1;\n    if (spliceIndex >= 0) {\n      contexts.splice(contexts.indexOf(context), 1);\n    }\n  }\n}\n\nfunction dispatchBufferTimeSpanOnly(this: SchedulerAction<any>, state: any) {\n  const subscriber: BufferTimeSubscriber<any> = state.subscriber;\n\n  const prevContext = state.context;\n  if (prevContext) {\n    subscriber.closeContext(prevContext);\n  }\n\n  if (!subscriber.closed) {\n    state.context = subscriber.openContext();\n    state.context.closeAction = this.schedule(state, state.bufferTimeSpan);\n  }\n}\n\nfunction dispatchBufferCreation<T>(this: SchedulerAction<DispatchCreateArg<T>>, state: DispatchCreateArg<T>) {\n  const { bufferCreationInterval, bufferTimeSpan, subscriber, scheduler } = state;\n  const context = subscriber.openContext();\n  const action = <SchedulerAction<DispatchCreateArg<T>>>this;\n  if (!subscriber.closed) {\n    subscriber.add(context.closeAction = scheduler.schedule<DispatchCloseArg<T>>(dispatchBufferClose, bufferTimeSpan, { subscriber, context }));\n    action.schedule(state, bufferCreationInterval);\n  }\n}\n\nfunction dispatchBufferClose<T>(arg: DispatchCloseArg<T>) {\n  const { subscriber, context } = arg;\n  subscriber.closeContext(context);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { OperatorFunction, SubscribableOrPromise } from '../types';\n\n/**\n * Buffers the source Observable values starting from an emission from\n * `openings` and ending when the output of `closingSelector` emits.\n *\n * <span class=\"informal\">Collects values from the past as an array. Starts\n * collecting only when `opening` emits, and calls the `closingSelector`\n * function to get an Observable that tells when to close the buffer.</span>\n *\n * ![](bufferToggle.png)\n *\n * Buffers values from the source by opening the buffer via signals from an\n * Observable provided to `openings`, and closing and sending the buffers when\n * a Subscribable or Promise returned by the `closingSelector` function emits.\n *\n * ## Example\n *\n * Every other second, emit the click events from the next 500ms\n *\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { bufferToggle } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const buffered = clicks.pipe(bufferToggle(openings, i =>\n *   i % 2 ? interval(500) : EMPTY\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferWhen}\n * @see {@link windowToggle}\n *\n * @param {SubscribableOrPromise<O>} openings A Subscribable or Promise of notifications to start new\n * buffers.\n * @param {function(value: O): SubscribableOrPromise} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns a Subscribable or Promise,\n * which, when it emits, signals that the associated buffer should be emitted\n * and cleared.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferToggle\n * @owner Observable\n */\nexport function bufferToggle<T, O>(\n  openings: SubscribableOrPromise<O>,\n  closingSelector: (value: O) => SubscribableOrPromise<any>\n): OperatorFunction<T, T[]> {\n  return function bufferToggleOperatorFunction(source: Observable<T>) {\n    return source.lift(new BufferToggleOperator<T, O>(openings, closingSelector));\n  };\n}\n\nclass BufferToggleOperator<T, O> implements Operator<T, T[]> {\n\n  constructor(private openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));\n  }\n}\n\ninterface BufferContext<T> {\n  buffer: T[];\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferToggleSubscriber<T, O> extends OuterSubscriber<T, O> {\n  private contexts: Array<BufferContext<T>> = [];\n\n  constructor(destination: Subscriber<T[]>,\n              openings: SubscribableOrPromise<O>,\n              private closingSelector: (value: O) => SubscribableOrPromise<any> | void) {\n    super(destination);\n    this.add(subscribeToResult(this, openings));\n  }\n\n  protected _next(value: T): void {\n    const contexts = this.contexts;\n    const len = contexts.length;\n    for (let i = 0; i < len; i++) {\n      contexts[i].buffer.push(value);\n    }\n  }\n\n  protected _error(err: any): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift()!;\n      context.subscription.unsubscribe();\n      context.buffer = null!;\n      context.subscription = null!;\n    }\n    this.contexts = null!;\n    super._error(err);\n  }\n\n  protected _complete(): void {\n    const contexts = this.contexts;\n    while (contexts.length > 0) {\n      const context = contexts.shift()!;\n      this.destination.next!(context.buffer);\n      context.subscription.unsubscribe();\n      context.buffer = null!;\n      context.subscription = null!;\n    }\n    this.contexts = null!;\n    super._complete();\n  }\n\n  notifyNext(outerValue: any, innerValue: O): void {\n    outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, O>): void {\n    this.closeBuffer((<any> innerSub).context);\n  }\n\n  private openBuffer(value: O): void {\n    try {\n      const closingSelector = this.closingSelector;\n      const closingNotifier = closingSelector.call(this, value);\n      if (closingNotifier) {\n        this.trySubscribe(closingNotifier);\n      }\n    } catch (err) {\n      this._error(err);\n    }\n  }\n\n  private closeBuffer(context: BufferContext<T>): void {\n    const contexts = this.contexts;\n\n    if (contexts && context) {\n      const { buffer, subscription } = context;\n      this.destination.next!(buffer);\n      contexts.splice(contexts.indexOf(context), 1);\n      this.remove(subscription);\n      subscription.unsubscribe();\n    }\n  }\n\n  private trySubscribe(closingNotifier: any): void {\n    const contexts = this.contexts;\n\n    const buffer: Array<T> = [];\n    const subscription = new Subscription();\n    const context = { buffer, subscription };\n    contexts.push(context);\n\n    const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n    if (!innerSubscription || innerSubscription.closed) {\n      this.closeBuffer(context);\n    } else {\n      (innerSubscription as any).context = context;\n\n      this.add(innerSubscription);\n      subscription.add(innerSubscription);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OperatorFunction } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Buffers the source Observable values, using a factory function of closing\n * Observables to determine when to close, emit, and reset the buffer.\n *\n * <span class=\"informal\">Collects values from the past as an array. When it\n * starts collecting values, it calls a function that returns an Observable that\n * tells when to close the buffer and restart collecting.</span>\n *\n * ![](bufferWhen.png)\n *\n * Opens a buffer immediately, then closes the buffer when the observable\n * returned by calling `closingSelector` function emits a value. When it closes\n * the buffer, it immediately opens a new buffer and repeats the process.\n *\n * ## Example\n *\n * Emit an array of the last clicks every [1-5] random seconds\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { bufferWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const buffered = clicks.pipe(bufferWhen(() =>\n *   interval(1000 + Math.random() * 4000)\n * ));\n * buffered.subscribe(x => console.log(x));\n * ```\n *\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n * @see {@link bufferTime}\n * @see {@link bufferToggle}\n * @see {@link windowWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals buffer closure.\n * @return {Observable<T[]>} An observable of arrays of buffered values.\n * @method bufferWhen\n * @owner Observable\n */\nexport function bufferWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, T[]> {\n  return function (source: Observable<T>) {\n    return source.lift(new BufferWhenOperator(closingSelector));\n  };\n}\n\nclass BufferWhenOperator<T> implements Operator<T, T[]> {\n\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T[]>, source: any): any {\n    return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass BufferWhenSubscriber<T> extends SimpleOuterSubscriber<T, any> {\n  private buffer?: T[];\n  private subscribing: boolean = false;\n  private closingSubscription?: Subscription;\n\n  constructor(destination: Subscriber<T[]>, private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openBuffer();\n  }\n\n  protected _next(value: T) {\n    this.buffer!.push(value);\n  }\n\n  protected _complete() {\n    const buffer = this.buffer;\n    if (buffer) {\n      this.destination.next!(buffer);\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.buffer = undefined;\n    this.subscribing = false;\n  }\n\n  notifyNext(): void {\n    this.openBuffer();\n  }\n\n  notifyComplete(): void {\n    if (this.subscribing) {\n      this.complete();\n    } else {\n      this.openBuffer();\n    }\n  }\n\n  openBuffer() {\n    let { closingSubscription } = this;\n\n    if (closingSubscription) {\n      this.remove(closingSubscription);\n      closingSubscription.unsubscribe();\n    }\n\n    const buffer = this.buffer;\n    if (this.buffer) {\n      this.destination.next!(buffer);\n    }\n\n    this.buffer = [];\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (err) {\n      return this.error(err);\n    }\n    closingSubscription = new Subscription();\n    this.closingSubscription = closingSubscription;\n    this.add(closingSubscription);\n    this.subscribing = true;\n    closingSubscription.add(innerSubscribe(closingNotifier, new SimpleInnerSubscriber(this)));\n    this.subscribing = false;\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function catchError<T, O extends ObservableInput<any>>(selector: (err: any, caught: Observable<T>) => O): OperatorFunction<T, T | ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\n/**\n * Catches errors on the observable to be handled by returning a new observable or throwing an error.\n *\n * ![](catch.png)\n *\n * ## Examples\n * Continues with a different Observable when there's an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n * \t       throw 'four!';\n *       }\n *\t     return n;\n *     }),\n *     catchError(err => of('I', 'II', 'III', 'IV', 'V')),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, I, II, III, IV, V\n * ```\n *\n * Retries the caught source Observable again in case of error, similar to retry() operator\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError, take } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *   \t   if (n === 4) {\n *   \t     throw 'four!';\n *       }\n * \t     return n;\n *     }),\n *     catchError((err, caught) => caught),\n *     take(30),\n *   )\n *   .subscribe(x => console.log(x));\n *   // 1, 2, 3, 1, 2, 3, ...\n * ```\n *\n * Throws a new error when the source Observable throws an error\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { map, catchError } from 'rxjs/operators';\n *\n * of(1, 2, 3, 4, 5).pipe(\n *     map(n => {\n *       if (n === 4) {\n *         throw 'four!';\n *       }\n *       return n;\n *     }),\n *     catchError(err => {\n *       throw 'error in source. Details: ' + err;\n *     }),\n *   )\n *   .subscribe(\n *     x => console.log(x),\n *     err => console.log(err)\n *   );\n *   // 1, 2, 3, error in source. Details: four!\n * ```\n *\n *  @param {function} selector a function that takes as arguments `err`, which is the error, and `caught`, which\n *  is the source observable, in case you'd like to \"retry\" that observable by returning it again. Whatever observable\n *  is returned by the `selector` will be used to continue the observable chain.\n * @return {Observable} An observable that originates from either the source or the observable returned by the\n *  catch `selector` function.\n * @name catchError\n */\nexport function catchError<T, O extends ObservableInput<any>>(\n  selector: (err: any, caught: Observable<T>) => O\n): OperatorFunction<T, T | ObservedValueOf<O>> {\n  return function catchErrorOperatorFunction(source: Observable<T>): Observable<T | ObservedValueOf<O>> {\n    const operator = new CatchOperator(selector);\n    const caught = source.lift(operator);\n    return (operator.caught = caught as Observable<T>);\n  };\n}\n\nclass CatchOperator<T, R> implements Operator<T, T | R> {\n  caught: Observable<T>;\n\n  constructor(private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CatchSubscriber<T, R> extends SimpleOuterSubscriber<T, T | R> {\n  constructor(destination: Subscriber<any>,\n              private selector: (err: any, caught: Observable<T>) => ObservableInput<T | R>,\n              private caught: Observable<T>) {\n    super(destination);\n  }\n\n  // NOTE: overriding `error` instead of `_error` because we don't want\n  // to have this flag this subscriber as `isStopped`. We can mimic the\n  // behavior of the RetrySubscriber (from the `retry` operator), where\n  // we unsubscribe from our source chain, reset our Subscriber flags,\n  // then subscribe to the selector result.\n  error(err: any) {\n    if (!this.isStopped) {\n      let result: any;\n      try {\n        result = this.selector(err, this.caught);\n      } catch (err2) {\n        super.error(err2);\n        return;\n      }\n      this._unsubscribeAndRecycle();\n      const innerSubscriber = new SimpleInnerSubscriber(this);\n      this.add(innerSubscriber);\n      const innerSubscription = innerSubscribe(result, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        this.add(innerSubscription);\n      }\n    }\n  }\n}\n","import { CombineLatestOperator } from '../observable/combineLatest';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function combineAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function combineAll<T>(): OperatorFunction<any, T[]>;\nexport function combineAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function combineAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n/**\n * Flattens an Observable-of-Observables by applying {@link combineLatest} when the Observable-of-Observables completes.\n *\n * ![](combineAll.png)\n *\n * `combineAll` takes an Observable of Observables, and collects all Observables from it. Once the outer Observable completes,\n * it subscribes to all collected Observables and combines their values using the {@link combineLatest}</a> strategy, such that:\n *\n * * Every time an inner Observable emits, the output Observable emits\n * * When the returned observable emits, it emits all of the latest values by:\n *    * If a `project` function is provided, it is called with each recent value from each inner Observable in whatever order they\n *      arrived, and the result of the `project` function is what is emitted by the output Observable.\n *    * If there is no `project` function, an array of all the most recent values is emitted by the output Observable.\n *\n * ---\n *\n * ## Examples\n *\n * ### Map two click events to a finite interval Observable, then apply `combineAll`\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { map, combineAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map(ev =>\n *      interval(Math.random() * 2000).pipe(take(3))\n *   ),\n *   take(2)\n * );\n * const result = higherOrder.pipe(\n *   combineAll()\n * );\n *\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link mergeAll}\n *\n * @param {function(...values: Array<any>)} An optional function to map the most recent values from each inner Observable into a new result.\n * Takes each of the most recent values from each collected inner Observable as arguments, in order.\n * @return {Observable<T>}\n * @name combineAll\n */\nexport function combineAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new CombineLatestOperator(project));\n}\n","\nimport { isArray } from '../util/isArray';\nimport { CombineLatestOperator } from '../observable/combineLatest';\nimport { from } from '../observable/from';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\nconst none = {};\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, R>(array: ObservableInput<T>[]): OperatorFunction<T, Array<T>>;\n/** @deprecated Deprecated in favor of static combineLatest. */\nexport function combineLatest<T, TOther, R>(array: ObservableInput<TOther>[], project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link combineLatest}.\n */\nexport function combineLatest<T, R>(...observables: Array<ObservableInput<any> |\n                                                    Array<ObservableInput<any>> |\n                                                    ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  let project: (...values: Array<any>) => R = null;\n  if (typeof observables[observables.length - 1] === 'function') {\n    project = <(...values: Array<any>) => R>observables.pop();\n  }\n\n  // if the first and only other argument besides the resultSelector is an array\n  // assume it's been called with `combineLatest([obs1, obs2, obs3], project)`\n  if (observables.length === 1 && isArray(observables[0])) {\n    observables = (<any>observables[0]).slice();\n  }\n\n  return (source: Observable<T>) => source.lift.call(from([source, ...observables]), new CombineLatestOperator(project));\n}\n","import {  concat as concatStatic } from '../observable/concat';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T>(...observables: Array<ObservableInput<T> | SchedulerLike>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static concat. */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link concat}.\n */\nexport function concat<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(concatStatic(source, ...observables));\n}\n","import { concatMap } from './concatMap';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, O extends ObservableInput<any>>(observable: O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(observable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in a serialized fashion on the output Observable.\n *\n * <span class=\"informal\">It's like {@link concatMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](concatMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. Each new `innerObservable`\n * instance emitted on the output Observable is concatenated with the previous\n * `innerObservable` instance.\n *\n * __Warning:__ if source values arrive endlessly and faster than their\n * corresponding inner Observables can complete, it will result in memory issues\n * as inner Observables amass in an unbounded buffer waiting for their turn to\n * be subscribed to.\n *\n * Note: `concatMapTo` is equivalent to `mergeMapTo` with concurrency parameter\n * set to `1`.\n *\n * ## Example\n * For each click event, tick every second from 0 to 3, with no concurrency\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { concatMapTo, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   concatMapTo(interval(1000).pipe(take(4))),\n * );\n * result.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // (results are not concurrent)\n * // For every click on the \"document\" it will emit values 0 to 3 spaced\n * // on a 1000ms interval\n * // one click = 1000ms-> 0 -1000ms-> 1 -1000ms-> 2 -1000ms-> 3\n * ```\n *\n * @see {@link concat}\n * @see {@link concatAll}\n * @see {@link concatMap}\n * @see {@link mergeMapTo}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An observable of values merged together by joining the\n * passed observable with itself, one after the other, for each value emitted\n * from the source.\n * @method concatMapTo\n * @owner Observable\n */\nexport function concatMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  return concatMap(() => innerObservable, resultSelector);\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Observer, OperatorFunction } from '../types';\nimport { Subscriber } from '../Subscriber';\n/**\n * Counts the number of emissions on the source and emits that number when the\n * source completes.\n *\n * <span class=\"informal\">Tells how many values were emitted, when the source\n * completes.</span>\n *\n * ![](count.png)\n *\n * `count` transforms an Observable that emits values into an Observable that\n * emits a single value that represents the number of values emitted by the\n * source Observable. If the source Observable terminates with an error, `count`\n * will pass this error notification along without emitting a value first. If\n * the source Observable does not terminate at all, `count` will neither emit\n * a value nor terminate. This operator takes an optional `predicate` function\n * as argument, in which case the output emission will represent the number of\n * source values that matched `true` with the `predicate`.\n *\n * ## Examples\n *\n * Counts how many seconds have passed before the first click happened\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { count, takeUntil } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const secondsBeforeClick = seconds.pipe(takeUntil(clicks));\n * const result = secondsBeforeClick.pipe(count());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Counts how many odd numbers are there between 1 and 7\n * ```ts\n * import { range } from 'rxjs';\n * import { count } from 'rxjs/operators';\n *\n * const numbers = range(1, 7);\n * const result = numbers.pipe(count(i => i % 2 === 1));\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // 4\n * ```\n *\n * @see {@link max}\n * @see {@link min}\n * @see {@link reduce}\n *\n * @param {function(value: T, i: number, source: Observable<T>): boolean} [predicate] A\n * boolean function to select what values are to be counted. It is provided with\n * arguments of:\n * - `value`: the value from the source Observable.\n * - `index`: the (zero-based) \"index\" of the value from the source Observable.\n * - `source`: the source Observable instance itself.\n * @return {Observable} An Observable of one number that represents the count as\n * described above.\n * @method count\n * @owner Observable\n */\n\nexport function count<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new CountOperator(predicate, source));\n}\n\nclass CountOperator<T> implements Operator<T, number> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<number>, source: any): any {\n    return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass CountSubscriber<T> extends Subscriber<T> {\n  private count: number = 0;\n  private index: number = 0;\n\n  constructor(destination: Observer<number>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (this.predicate) {\n      this._tryPredicate(value);\n    } else {\n      this.count++;\n    }\n  }\n\n  private _tryPredicate(value: T) {\n    let result: any;\n\n    try {\n      result = this.predicate(value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (result) {\n      this.count++;\n    }\n  }\n\n  protected _complete(): void {\n    this.destination.next(this.count);\n    this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SubscribableOrPromise, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * determined by another Observable has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link debounceTime}, but the time span of\n * emission silence is determined by a second Observable.</span>\n *\n * ![](debounce.png)\n *\n * `debounce` delays values emitted by the source Observable, but drops previous\n * pending delayed emissions if a new value arrives on the source Observable.\n * This operator keeps track of the most recent value from the source\n * Observable, and spawns a duration Observable by calling the\n * `durationSelector` function. The value is emitted only when the duration\n * Observable emits a value or completes, and if no other value was emitted on\n * the source Observable since the duration Observable was spawned. If a new\n * value appears before the duration Observable emits, the previous value will\n * be dropped and will not be emitted on the output Observable.\n *\n * Like {@link debounceTime}, this is a rate-limiting operator, and also a\n * delay-like operator since output emissions do not necessarily occur at the\n * same time as they did on the source Observable.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { debounce } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounce(() => interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n * @see {@link throttle}\n *\n * @param {function(value: T): SubscribableOrPromise} durationSelector A function\n * that receives a value from the source Observable, for computing the timeout\n * duration for each source value, returned as an Observable or a Promise.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified duration Observable returned by\n * `durationSelector`, and may drop some values if they occur too frequently.\n * @method debounce\n * @owner Observable\n */\nexport function debounce<T>(durationSelector: (value: T) => SubscribableOrPromise<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceOperator(durationSelector));\n}\n\nclass DebounceOperator<T> implements Operator<T, T> {\n  constructor(private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private value?: T;\n  private hasValue = false;\n  private durationSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private durationSelector: (value: T) => SubscribableOrPromise<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    try {\n      const result = this.durationSelector.call(this, value);\n\n      if (result) {\n        this._tryNext(value, result);\n      }\n    } catch (err) {\n      this.destination.error!(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.emitValue();\n    this.destination.complete!();\n  }\n\n  private _tryNext(value: T, duration: SubscribableOrPromise<any>): void {\n    let subscription = this.durationSubscription;\n    this.value = value;\n    this.hasValue = true;\n    if (subscription) {\n      subscription.unsubscribe();\n      this.remove(subscription);\n    }\n\n    subscription = innerSubscribe(duration, new SimpleInnerSubscriber(this));\n    if (subscription && !subscription.closed) {\n      this.add(this.durationSubscription = subscription);\n    }\n  }\n\n  notifyNext(): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue(): void {\n    if (this.hasValue) {\n      const value = this.value;\n      const subscription = this.durationSubscription;\n      if (subscription) {\n        this.durationSubscription = undefined;\n        subscription.unsubscribe();\n        this.remove(subscription);\n      }\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively if the duration selector Observable\n      // emits synchronously\n      this.value = undefined;\n      this.hasValue = false;\n      super._next(value!);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable only after a particular time span\n * has passed without another source emission.\n *\n * <span class=\"informal\">It's like {@link delay}, but passes only the most\n * recent value from each burst of emissions.</span>\n *\n * ![](debounceTime.png)\n *\n * `debounceTime` delays values emitted by the source Observable, but drops\n * previous pending delayed emissions if a new value arrives on the source\n * Observable. This operator keeps track of the most recent value from the\n * source Observable, and emits that only when `dueTime` enough time has passed\n * without any other value appearing on the source Observable. If a new value\n * appears before `dueTime` silence occurs, the previous value will be dropped\n * and will not be emitted on the output Observable.\n *\n * This is a rate-limiting operator, because it is impossible for more than one\n * value to be emitted in any time window of duration `dueTime`, but it is also\n * a delay-like operator since output emissions do not occur at the same time as\n * they did on the source Observable. Optionally takes a {@link SchedulerLike} for\n * managing timers.\n *\n * ## Example\n * Emit the most recent click after a burst of clicks\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { debounceTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(debounceTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounce}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttleTime}\n *\n * @param {number} dueTime The timeout duration in milliseconds (or the time\n * unit determined internally by the optional `scheduler`) for the window of\n * time required to wait for emission silence before emitting the most recent\n * source value.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the timeout for each value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified `dueTime`, and may drop some values if they occur\n * too frequently.\n * @method debounceTime\n * @owner Observable\n */\nexport function debounceTime<T>(dueTime: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\n\nclass DebounceTimeOperator<T> implements Operator<T, T> {\n  constructor(private dueTime: number, private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DebounceTimeSubscriber<T> extends Subscriber<T> {\n  private debouncedSubscription: Subscription = null;\n  private lastValue: T = null;\n  private hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private dueTime: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.clearDebounce();\n    this.lastValue = value;\n    this.hasValue = true;\n    this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n  }\n\n  protected _complete() {\n    this.debouncedNext();\n    this.destination.complete();\n  }\n\n  debouncedNext(): void {\n    this.clearDebounce();\n\n    if (this.hasValue) {\n      const { lastValue } = this;\n      // This must be done *before* passing the value\n      // along to the destination because it's possible for\n      // the value to synchronously re-enter this operator\n      // recursively when scheduled with things like\n      // VirtualScheduler/TestScheduler.\n      this.lastValue = null;\n      this.hasValue = false;\n      this.destination.next(lastValue);\n    }\n  }\n\n  private clearDebounce(): void {\n    const debouncedSubscription = this.debouncedSubscription;\n\n    if (debouncedSubscription !== null) {\n      this.remove(debouncedSubscription);\n      debouncedSubscription.unsubscribe();\n      this.debouncedSubscription = null;\n    }\n  }\n}\n\nfunction dispatchNext(subscriber: DebounceTimeSubscriber<any>) {\n  subscriber.debouncedNext();\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Notification } from '../Notification';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Delays the emission of items from the source Observable by a given timeout or\n * until a given Date.\n *\n * <span class=\"informal\">Time shifts each item by some specified amount of\n * milliseconds.</span>\n *\n * ![](delay.png)\n *\n * If the delay argument is a Number, this operator time shifts the source\n * Observable by that amount of time expressed in milliseconds. The relative\n * time intervals between the values are preserved.\n *\n * If the delay argument is a Date, this operator time shifts the start of the\n * Observable execution until the given date occurs.\n *\n * ## Examples\n * Delay each click by one second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(delay(1000)); // each click emitted after 1 second\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * Delay all clicks until a future date happens\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { delay } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const date = new Date('March 15, 2050 12:00:00'); // in the future\n * const delayedClicks = clicks.pipe(delay(date)); // click emitted only after that date\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link debounceTime}\n * @see {@link delayWhen}\n *\n * @param {number|Date} delay The delay duration in milliseconds (a `number`) or\n * a `Date` until which the emission of the source items is delayed.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the time-shift for each item.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by the specified timeout or Date.\n * @method delay\n * @owner Observable\n */\nexport function delay<T>(delay: number|Date,\n                         scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  const absoluteDelay = isDate(delay);\n  const delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(<number>delay);\n  return (source: Observable<T>) => source.lift(new DelayOperator(delayFor, scheduler));\n}\n\nclass DelayOperator<T> implements Operator<T, T> {\n  constructor(private delay: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));\n  }\n}\n\ninterface DelayState<T> {\n  source: DelaySubscriber<T>;\n  destination: PartialObserver<T>;\n  scheduler: SchedulerLike;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelaySubscriber<T> extends Subscriber<T> {\n  private queue: Array<DelayMessage<T>> = [];\n  private active: boolean = false;\n  private errored: boolean = false;\n\n  private static dispatch<T>(this: SchedulerAction<DelayState<T>>, state: DelayState<T>): void {\n    const source = state.source;\n    const queue = source.queue;\n    const scheduler = state.scheduler;\n    const destination = state.destination;\n\n    while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {\n      queue.shift().notification.observe(destination);\n    }\n\n    if (queue.length > 0) {\n      const delay = Math.max(0, queue[0].time - scheduler.now());\n      this.schedule(state, delay);\n    } else {\n      this.unsubscribe();\n      source.active = false;\n    }\n  }\n\n  constructor(destination: Subscriber<T>,\n              private delay: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n  }\n\n  private _schedule(scheduler: SchedulerLike): void {\n    this.active = true;\n    const destination = this.destination as Subscription;\n    destination.add(scheduler.schedule<DelayState<T>>(DelaySubscriber.dispatch, this.delay, {\n      source: this, destination: this.destination, scheduler: scheduler\n    }));\n  }\n\n  private scheduleNotification(notification: Notification<T>): void {\n    if (this.errored === true) {\n      return;\n    }\n\n    const scheduler = this.scheduler;\n    const message = new DelayMessage(scheduler.now() + this.delay, notification);\n    this.queue.push(message);\n\n    if (this.active === false) {\n      this._schedule(scheduler);\n    }\n  }\n\n  protected _next(value: T) {\n    this.scheduleNotification(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    this.errored = true;\n    this.queue = [];\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete() {\n    this.scheduleNotification(Notification.createComplete());\n    this.unsubscribe();\n  }\n}\n\nclass DelayMessage<T> {\n  constructor(public readonly time: number,\n              public readonly notification: Notification<T>) {\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated In future versions, empty notifiers will no longer re-emit the source value on the output observable. */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<never>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>, subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T>;\n/* tslint:disable:max-line-length */\n\n/**\n * Delays the emission of items from the source Observable by a given time span\n * determined by the emissions of another Observable.\n *\n * <span class=\"informal\">It's like {@link delay}, but the time span of the\n * delay duration is determined by a second Observable.</span>\n *\n * ![](delayWhen.png)\n *\n * `delayWhen` time shifts each emitted value from the source Observable by a\n * time span determined by another Observable. When the source emits a value,\n * the `delayDurationSelector` function is called with the source value as\n * argument, and should return an Observable, called the \"duration\" Observable.\n * The source value is emitted on the output Observable only when the duration\n * Observable emits a value or completes.\n * The completion of the notifier triggering the emission of the source value\n * is deprecated behavior and will be removed in future versions.\n *\n * Optionally, `delayWhen` takes a second argument, `subscriptionDelay`, which\n * is an Observable. When `subscriptionDelay` emits its first value or\n * completes, the source Observable is subscribed to and starts behaving like\n * described in the previous paragraph. If `subscriptionDelay` is not provided,\n * `delayWhen` will subscribe to the source Observable as soon as the output\n * Observable is subscribed.\n *\n * ## Example\n * Delay each click by a random amount of time, between 0 and 5 seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { delayWhen } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const delayedClicks = clicks.pipe(\n *   delayWhen(event => interval(Math.random() * 5000)),\n * );\n * delayedClicks.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link delay}\n * @see {@link throttle}\n * @see {@link throttleTime}\n * @see {@link debounce}\n * @see {@link debounceTime}\n * @see {@link sample}\n * @see {@link sampleTime}\n * @see {@link audit}\n * @see {@link auditTime}\n *\n * @param {function(value: T, index: number): Observable} delayDurationSelector A function that\n * returns an Observable for each value emitted by the source Observable, which\n * is then used to delay the emission of that item on the output Observable\n * until the Observable returned from this function emits a value.\n * @param {Observable} subscriptionDelay An Observable that triggers the\n * subscription to the source Observable once it emits any value.\n * @return {Observable} An Observable that delays the emissions of the source\n * Observable by an amount of time specified by the Observable returned by\n * `delayDurationSelector`.\n * @method delayWhen\n * @owner Observable\n */\nexport function delayWhen<T>(delayDurationSelector: (value: T, index: number) => Observable<any>,\n                             subscriptionDelay?: Observable<any>): MonoTypeOperatorFunction<T> {\n  if (subscriptionDelay) {\n    return (source: Observable<T>) =>\n      new SubscriptionDelayObservable(source, subscriptionDelay)\n        .lift(new DelayWhenOperator(delayDurationSelector));\n  }\n  return (source: Observable<T>) => source.lift(new DelayWhenOperator(delayDurationSelector));\n}\n\nclass DelayWhenOperator<T> implements Operator<T, T> {\n  constructor(private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DelayWhenSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private completed: boolean = false;\n  private delayNotifierSubscriptions: Array<Subscription> = [];\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private delayDurationSelector: (value: T, index: number) => Observable<any>) {\n    super(destination);\n  }\n\n  notifyNext(outerValue: T, _innerValue: any,\n             _outerIndex: number, _innerIndex: number,\n             innerSub: InnerSubscriber<T, R>): void {\n    this.destination.next!(outerValue);\n    this.removeSubscription(innerSub);\n    this.tryComplete();\n  }\n\n  notifyError(error: any, innerSub: InnerSubscriber<T, R>): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, R>): void {\n    const value = this.removeSubscription(innerSub);\n    if (value) {\n      this.destination.next!(value);\n    }\n    this.tryComplete();\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n    try {\n      const delayNotifier = this.delayDurationSelector(value, index);\n      if (delayNotifier) {\n        this.tryDelay(delayNotifier, value);\n      }\n    } catch (err) {\n      this.destination.error!(err);\n    }\n  }\n\n  protected _complete(): void {\n    this.completed = true;\n    this.tryComplete();\n    this.unsubscribe();\n  }\n\n  private removeSubscription(subscription: InnerSubscriber<T, R>): T {\n    subscription.unsubscribe();\n\n    const subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);\n    if (subscriptionIdx !== -1) {\n      this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);\n    }\n\n    return subscription.outerValue;\n  }\n\n  private tryDelay(delayNotifier: Observable<any>, value: T): void {\n    const notifierSubscription = subscribeToResult(this, delayNotifier, value);\n\n    if (notifierSubscription && !notifierSubscription.closed) {\n      const destination = this.destination as Subscription;\n      destination.add(notifierSubscription);\n      this.delayNotifierSubscriptions.push(notifierSubscription);\n    }\n  }\n\n  private tryComplete(): void {\n    if (this.completed && this.delayNotifierSubscriptions.length === 0) {\n      this.destination.complete!();\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelayObservable<T> extends Observable<T> {\n  constructor(public source: Observable<T>, private subscriptionDelay: Observable<any>) {\n    super();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SubscriptionDelaySubscriber<T> extends Subscriber<T> {\n  private sourceSubscribed: boolean = false;\n\n  constructor(private parent: Subscriber<T>, private source: Observable<T>) {\n    super();\n  }\n\n  protected _next(unused: any) {\n    this.subscribeToSource();\n  }\n\n  protected _error(err: any) {\n    this.unsubscribe();\n    this.parent.error(err);\n  }\n\n  protected _complete() {\n    this.unsubscribe();\n    this.subscribeToSource();\n  }\n\n  private subscribeToSource(): void {\n    if (!this.sourceSubscribed) {\n      this.sourceSubscribed = true;\n      this.unsubscribe();\n      this.source.subscribe(this.parent);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Converts an Observable of {@link Notification} objects into the emissions\n * that they represent.\n *\n * <span class=\"informal\">Unwraps {@link Notification} objects as actual `next`,\n * `error` and `complete` emissions. The opposite of {@link materialize}.</span>\n *\n * ![](dematerialize.png)\n *\n * `dematerialize` is assumed to operate an Observable that only emits\n * {@link Notification} objects as `next` emissions, and does not emit any\n * `error`. Such Observable is the output of a `materialize` operation. Those\n * notifications are then unwrapped using the metadata they contain, and emitted\n * as `next`, `error`, and `complete` on the output Observable.\n *\n * Use this operator in conjunction with {@link materialize}.\n *\n * ## Example\n * Convert an Observable of Notifications to an actual Observable\n * ```ts\n * import { of, Notification } from 'rxjs';\n * import { dematerialize } from 'rxjs/operators';\n *\n * const notifA = new Notification('N', 'A');\n * const notifB = new Notification('N', 'B');\n * const notifE = new Notification('E', undefined,\n *   new TypeError('x.toUpperCase is not a function')\n * );\n * const materialized = of(notifA, notifB, notifE);\n * const upperCase = materialized.pipe(dematerialize());\n * upperCase.subscribe(x => console.log(x), e => console.error(e));\n *\n * // Results in:\n * // A\n * // B\n * // TypeError: x.toUpperCase is not a function\n * ```\n *\n * @see {@link Notification}\n * @see {@link materialize}\n *\n * @return {Observable} An Observable that emits items and notifications\n * embedded in Notification objects emitted by the source Observable.\n * @method dematerialize\n * @owner Observable\n */\nexport function dematerialize<T>(): OperatorFunction<Notification<T>, T> {\n  return function dematerializeOperatorFunction(source: Observable<Notification<T>>) {\n    return source.lift(new DeMaterializeOperator());\n  };\n}\n\nclass DeMaterializeOperator<T extends Notification<any>, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<any>, source: any): any {\n    return source.subscribe(new DeMaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass DeMaterializeSubscriber<T extends Notification<any>> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    value.observe(this.destination);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from previous items.\n *\n * If a keySelector function is provided, then it will project each value from the source observable into a new value that it will\n * check for equality with previously projected values. If a keySelector function is not provided, it will use each value from the\n * source observable directly with an equality check against previous values.\n *\n * In JavaScript runtimes that support `Set`, this operator will use a `Set` to improve performance of the distinct value checking.\n *\n * In other runtimes, this operator will use a minimal implementation of `Set` that relies on an `Array` and `indexOf` under the\n * hood, so performance will degrade as more values are checked for distinction. Even in newer browsers, a long-running `distinct`\n * use might result in memory leaks. To help alleviate this in some scenarios, an optional `flushes` parameter is also provided so\n * that the internal `Set` can be \"flushed\", basically clearing it of values.\n *\n * ## Examples\n * A simple example with numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * of(1, 1, 2, 2, 2, 1, 2, 3, 4, 3, 2, 1).pipe(\n *     distinct(),\n *   )\n *   .subscribe(x => console.log(x)); // 1, 2, 3, 4\n * ```\n *\n * An example using a keySelector function\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinct } from 'rxjs/operators';\n *\n * interface Person {\n *    age: number,\n *    name: string\n * }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *   ).pipe(\n *     distinct((p: Person) => p.name),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * ```\n * @see {@link distinctUntilChanged}\n * @see {@link distinctUntilKeyChanged}\n *\n * @param {function} [keySelector] Optional function to select which value you want to check as distinct.\n * @param {Observable} [flushes] Optional Observable for flushing the internal HashSet of the operator.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values.\n * @method distinct\n * @owner Observable\n */\nexport function distinct<T, K>(keySelector?: (value: T) => K,\n                               flushes?: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new DistinctOperator(keySelector, flushes));\n}\n\nclass DistinctOperator<T, K> implements Operator<T, T> {\n  constructor(private keySelector?: (value: T) => K, private flushes?: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class DistinctSubscriber<T, K> extends SimpleOuterSubscriber<T, T> {\n  private values = new Set<K>();\n\n  constructor(destination: Subscriber<T>, private keySelector?: (value: T) => K, flushes?: Observable<any>) {\n    super(destination);\n\n    if (flushes) {\n      this.add(innerSubscribe(flushes, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  notifyNext(): void {\n    this.values.clear();\n  }\n\n  notifyError(error: any): void {\n    this._error(error);\n  }\n\n  protected _next(value: T): void {\n    if (this.keySelector) {\n      this._useKeySelector(value);\n    } else {\n      this._finalizeNext(value, value);\n    }\n  }\n\n  private _useKeySelector(value: T): void {\n    let key: K;\n    const { destination } = this;\n    try {\n      key = this.keySelector!(value);\n    } catch (err) {\n      destination.error!(err);\n      return;\n    }\n    this._finalizeNext(key, value);\n  }\n\n  private _finalizeNext(key: K|T, value: T) {\n    const { values } = this;\n    if (!values.has(<K>key)) {\n      values.add(<K>key);\n      this.destination.next!(value);\n    }\n  }\n\n}\n","import { distinctUntilChanged } from './distinctUntilChanged';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function distinctUntilKeyChanged<T>(key: keyof T): MonoTypeOperatorFunction<T>;\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits all items emitted by the source Observable that are distinct by comparison from the previous item,\n * using a property accessed by using the key provided to check if the two items are distinct.\n *\n * If a comparator function is provided, then it will be called for each item to test for whether or not that value should be emitted.\n *\n * If a comparator function is not provided, an equality check is used by default.\n *\n * ## Examples\n * An example comparing the name of persons\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n *  interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo'},\n *     { age: 6, name: 'Foo'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name'),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo' }\n * ```\n *\n * An example comparing the first letters of the name\n * ```typescript\n * import { of } from 'rxjs';\n * import { distinctUntilKeyChanged } from 'rxjs/operators';\n *\n * interface Person {\n *     age: number,\n *     name: string\n *  }\n *\n * of<Person>(\n *     { age: 4, name: 'Foo1'},\n *     { age: 7, name: 'Bar'},\n *     { age: 5, name: 'Foo2'},\n *     { age: 6, name: 'Foo3'},\n *   ).pipe(\n *     distinctUntilKeyChanged('name', (x: string, y: string) => x.substring(0, 3) === y.substring(0, 3)),\n *   )\n *   .subscribe(x => console.log(x));\n *\n * // displays:\n * // { age: 4, name: 'Foo1' }\n * // { age: 7, name: 'Bar' }\n * // { age: 5, name: 'Foo2' }\n * ```\n *\n * @see {@link distinct}\n * @see {@link distinctUntilChanged}\n *\n * @param {string} key String key for object property lookup on each item.\n * @param {function} [compare] Optional comparison function called to test if an item is distinct from the previous item in the source.\n * @return {Observable} An Observable that emits items from the source Observable with distinct values based on the key specified.\n * @method distinctUntilKeyChanged\n * @owner Observable\n */\nexport function distinctUntilKeyChanged<T, K extends keyof T>(key: K, compare?: (x: T[K], y: T[K]) => boolean): MonoTypeOperatorFunction<T> {\n  return distinctUntilChanged((x: T, y: T) => compare ? compare(x[key], y[key]) : x[key] === y[key]);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { filter } from './filter';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { take } from './take';\n\n/**\n * Emits the single value at the specified `index` in a sequence of emissions\n * from the source Observable.\n *\n * <span class=\"informal\">Emits only the i-th value, then completes.</span>\n *\n * ![](elementAt.png)\n *\n * `elementAt` returns an Observable that emits the item at the specified\n * `index` in the source Observable, or a default value if that `index` is out\n * of range and the `default` argument is provided. If the `default` argument is\n * not given and the `index` is out of range, the output Observable will emit an\n * `ArgumentOutOfRangeError` error.\n *\n * ## Example\n * Emit only the third click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { elementAt } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(elementAt(2));\n * result.subscribe(x => console.log(x));\n *\n * // Results in:\n * // click 1 = nothing\n * // click 2 = nothing\n * // click 3 = MouseEvent object logged to console\n * ```\n *\n * @see {@link first}\n * @see {@link last}\n * @see {@link skip}\n * @see {@link single}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `elementAt(i)`, it delivers an\n * ArgumentOutOrRangeError to the Observer's `error` callback if `i < 0` or the\n * Observable has completed before emitting the i-th `next` notification.\n *\n * @param {number} index Is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {T} [defaultValue] The default value returned for missing indices.\n * @return {Observable} An Observable that emits a single item, if it is found.\n * Otherwise, will emit the default value if given. If not, then emits an error.\n * @method elementAt\n * @owner Observable\n */\nexport function elementAt<T>(index: number, defaultValue?: T): MonoTypeOperatorFunction<T> {\n  if (index < 0) { throw new ArgumentOutOfRangeError(); }\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    filter((v, i) => i === index),\n    take(1),\n    hasDefaultValue\n      ? defaultIfEmpty(defaultValue)\n      : throwIfEmpty(() => new ArgumentOutOfRangeError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { of } from '../observable/of';\nimport { MonoTypeOperatorFunction, SchedulerLike, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A>(v1: A, scheduler: SchedulerLike): OperatorFunction<T, T | A>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B>(v1: A, v2: B, scheduler: SchedulerLike): OperatorFunction<T, T | A | B>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F, scheduler: SchedulerLike): OperatorFunction<T, T | A | B | C | D | E | F>;\n\nexport function endWith<T, A>(v1: A): OperatorFunction<T, T | A>;\nexport function endWith<T, A, B>(v1: A, v2: B): OperatorFunction<T, T | A | B>;\nexport function endWith<T, A, B, C>(v1: A, v2: B, v3: C): OperatorFunction<T, T | A | B | C>;\nexport function endWith<T, A, B, C, D>(v1: A, v2: B, v3: C, v4: D): OperatorFunction<T, T | A | B | C | D>;\nexport function endWith<T, A, B, C, D, E>(v1: A, v2: B, v3: C, v4: D, v5: E): OperatorFunction<T, T | A | B | C | D | E>;\nexport function endWith<T, A, B, C, D, E, F>(v1: A, v2: B, v3: C, v4: D, v5: E, v6: F): OperatorFunction<T, T | A | B | C | D | E | F>;\nexport function endWith<T, Z = T>(...array: Z[]): OperatorFunction<T, T | Z>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([source, [a, b, c]], scheduler).pipe(concatAll())`) */\nexport function endWith<T, Z = T>(...array: Array<Z | SchedulerLike>): OperatorFunction<T, T | Z>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments after it finishes emitting\n * items emitted by the source Observable.\n *\n * ![](endWith.png)\n *\n * ## Example\n * ### After the source observable completes, appends an emission and then completes too.\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { endWith } from 'rxjs/operators';\n *\n * of('hi', 'how are you?', 'sorry, I have to go now').pipe(\n *   endWith('goodbye!'),\n * )\n * .subscribe(word => console.log(word));\n * // result:\n * // 'hi'\n * // 'how are you?'\n * // 'sorry, I have to go now'\n * // 'goodbye!'\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit last.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items emitted by the source Observable\n *  and then emits the items in the specified Iterable.\n * @method endWith\n * @owner Observable\n */\nexport function endWith<T>(...array: Array<T | SchedulerLike>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => concat(source, of(...array)) as Observable<T>;\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Returns an Observable that emits whether or not every item of the source satisfies the condition specified.\n *\n * ## Example\n * A simple example emitting true if all elements are less than 5, false otherwise\n * ```ts\n * import { of } from 'rxjs';\n * import { every } from 'rxjs/operators';\n *\n *  of(1, 2, 3, 4, 5, 6).pipe(\n *     every(x => x < 5),\n * )\n * .subscribe(x => console.log(x)); // -> false\n * ```\n *\n * @param {function} predicate A function for determining if an item meets a specified condition.\n * @param {any} [thisArg] Optional object to use for `this` in the callback.\n * @return {Observable} An Observable of booleans that determines if all items of the source Observable meet the condition specified.\n * @method every\n * @owner Observable\n */\nexport function every<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                         thisArg?: any): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new EveryOperator(predicate, thisArg, source));\n}\n\nclass EveryOperator<T> implements Operator<T, boolean> {\n  constructor(private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg?: any,\n              private source?: Observable<T>) {\n  }\n\n  call(observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass EverySubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(destination: Observer<boolean>,\n              private predicate: (value: T, index: number, source: Observable<T>) => boolean,\n              private thisArg: any,\n              private source?: Observable<T>) {\n    super(destination);\n    this.thisArg = thisArg || this;\n  }\n\n  private notifyComplete(everyValueMatch: boolean): void {\n    this.destination.next(everyValueMatch);\n    this.destination.complete();\n  }\n\n  protected _next(value: T): void {\n    let result = false;\n    try {\n      result = this.predicate.call(this.thisArg, value, this.index++, this.source);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n\n    if (!result) {\n      this.notifyComplete(false);\n    }\n  }\n\n  protected _complete(): void {\n    this.notifyComplete(true);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { ObservableInput, OperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\nexport function exhaust<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function exhaust<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable by dropping\n * inner Observables while the previous inner Observable has not yet completed.\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables by dropping the\n * next inner Observables while the current inner is still executing.</span>\n *\n * ![](exhaust.png)\n *\n * `exhaust` subscribes to an Observable that emits Observables, also known as a\n * higher-order Observable. Each time it observes one of these emitted inner\n * Observables, the output Observable begins emitting the items emitted by that\n * inner Observable. So far, it behaves like {@link mergeAll}. However,\n * `exhaust` ignores every new inner Observable if the previous Observable has\n * not yet completed. Once that one completes, it will accept and flatten the\n * next inner Observable and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaust, map, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const higherOrder = clicks.pipe(\n *   map((ev) => interval(1000).pipe(take(5))),\n * );\n * const result = higherOrder.pipe(exhaust());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeAll}\n * @see {@link exhaustMap}\n * @see {@link zipAll}\n *\n * @return {Observable} An Observable that takes a source of Observables and propagates the first observable\n * exclusively until it completes before subscribing to the next.\n * @method exhaust\n * @owner Observable\n */\nexport function exhaust<T>(): OperatorFunction<any, T> {\n  return (source: Observable<T>) => source.lift(new SwitchFirstOperator<T>());\n}\n\nclass SwitchFirstOperator<T> implements Operator<T, T> {\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SwitchFirstSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SwitchFirstSubscriber<T> extends SimpleOuterSubscriber<T, T> {\n  private hasCompleted: boolean = false;\n  private hasSubscription: boolean = false;\n\n  constructor(destination: Subscriber<T>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.hasSubscription = true;\n      this.add(innerSubscribe(value, new SimpleInnerSubscriber(this)));\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete!();\n    }\n  }\n\n  notifyComplete(): void {\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete!();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\nimport { map } from './map';\nimport { from } from '../observable/from';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, O extends ObservableInput<any>>(project: (value: T, index: number) => O, resultSelector: undefined): OperatorFunction<T, ObservedValueOf<O>>;\n/** @deprecated resultSelector is no longer supported. Use inner map instead. */\nexport function exhaustMap<T, I, R>(project: (value: T, index: number) => ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to an Observable which is merged in the output\n * Observable only if the previous projected Observable has completed.\n *\n * <span class=\"informal\">Maps each value to an Observable, then flattens all of\n * these inner Observables using {@link exhaust}.</span>\n *\n * ![](exhaustMap.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an (so-called \"inner\") Observable. When it projects a source value to\n * an Observable, the output Observable begins emitting the items emitted by\n * that projected Observable. However, `exhaustMap` ignores every new projected\n * Observable if the previous projected Observable has not yet completed. Once\n * that one completes, it will accept and flatten the next projected Observable\n * and repeat this process.\n *\n * ## Example\n * Run a finite timer for each click, only if there is no currently active timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { exhaustMap, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   exhaustMap(ev => interval(1000).pipe(take(5)))\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMap}\n * @see {@link exhaust}\n * @see {@link mergeMap}\n * @see {@link switchMap}\n *\n * @param {function(value: T, ?index: number): ObservableInput} project A function\n * that, when applied to an item emitted by the source Observable, returns an\n * Observable.\n * @return {Observable} An Observable containing projected Observables\n * of each item of the source, ignoring projected Observables that start before\n * their preceding Observable has completed.\n * @method exhaustMap\n * @owner Observable\n */\nexport function exhaustMap<T, R, O extends ObservableInput<any>>(\n  project: (value: T, index: number) => O,\n  resultSelector?: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R,\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (resultSelector) {\n    // DEPRECATED PATH\n    return (source: Observable<T>) => source.pipe(\n      exhaustMap((a, i) => from(project(a, i)).pipe(\n        map((b: any, ii: any) => resultSelector(a, b, i, ii)),\n      )),\n    );\n  }\n  return (source: Observable<T>) =>\n    source.lift(new ExhaustMapOperator(project));\n}\n\nclass ExhaustMapOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ExhaustMapSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private hasSubscription = false;\n  private hasCompleted = false;\n  private index = 0;\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    if (!this.hasSubscription) {\n      this.tryNext(value);\n    }\n  }\n\n  private tryNext(value: T): void {\n    let result: ObservableInput<R>;\n    const index = this.index++;\n    try {\n      result = this.project(value, index);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.hasSubscription = true;\n    this._innerSub(result);\n  }\n\n  private _innerSub(result: ObservableInput<R>): void {\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = innerSubscribe(result, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (!this.hasSubscription) {\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    this.destination.next!(innerValue);\n  }\n\n  notifyError(err: any): void {\n    this.destination.error!(err);\n  }\n\n  notifyComplete(): void {\n    this.hasSubscription = false;\n    if (this.hasCompleted) {\n      this.destination.complete!();\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, OperatorFunction, ObservableInput, SchedulerLike } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, R>;\nexport function expand<T>(project: (value: T, index: number) => ObservableInput<T>, concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Recursively projects each source value to an Observable which is merged in\n * the output Observable.\n *\n * <span class=\"informal\">It's similar to {@link mergeMap}, but applies the\n * projection function to every source value as well as every output value.\n * It's recursive.</span>\n *\n * ![](expand.png)\n *\n * Returns an Observable that emits items based on applying a function that you\n * supply to each item emitted by the source Observable, where that function\n * returns an Observable, and then merging those resulting Observables and\n * emitting the results of this merger. *Expand* will re-emit on the output\n * Observable every source value. Then, each output value is given to the\n * `project` function which returns an inner Observable to be merged on the\n * output Observable. Those output values resulting from the projection are also\n * given to the `project` function to produce new output values. This is how\n * *expand* behaves recursively.\n *\n * ## Example\n * Start emitting the powers of two on every click, at most 10 of them\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { expand, mapTo, delay, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const powersOfTwo = clicks.pipe(\n *   mapTo(1),\n *   expand(x => of(2 * x).pipe(delay(1000))),\n *   take(10),\n * );\n * powersOfTwo.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n *\n * @param {function(value: T, index: number) => Observable} project A function\n * that, when applied to an item emitted by the source or the output Observable,\n * returns an Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @param {SchedulerLike} [scheduler=null] The {@link SchedulerLike} to use for subscribing to\n * each projected inner Observable.\n * @return {Observable} An Observable that emits the source values and also\n * result of applying the projection function to each value emitted on the\n * output Observable and and merging the results of the Observables obtained\n * from this transformation.\n * @method expand\n * @owner Observable\n */\nexport function expand<T, R>(project: (value: T, index: number) => ObservableInput<R>,\n                             concurrent: number = Number.POSITIVE_INFINITY,\n                             scheduler?: SchedulerLike): OperatorFunction<T, R> {\n  concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;\n\n  return (source: Observable<T>) => source.lift(new ExpandOperator(project, concurrent, scheduler));\n}\n\nexport class ExpandOperator<T, R> implements Operator<T, R> {\n  constructor(private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler?: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));\n  }\n}\n\ninterface DispatchArg<T, R> {\n  subscriber: ExpandSubscriber<T, R>;\n  result: ObservableInput<R>;\n  value: any;\n  index: number;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class ExpandSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private index: number = 0;\n  private active: number = 0;\n  private hasCompleted: boolean = false;\n  private buffer?: any[];\n\n  constructor(destination: Subscriber<R>,\n              private project: (value: T, index: number) => ObservableInput<R>,\n              private concurrent: number,\n              private scheduler?: SchedulerLike) {\n    super(destination);\n    if (concurrent < Number.POSITIVE_INFINITY) {\n      this.buffer = [];\n    }\n  }\n\n  private static dispatch<T, R>(arg: DispatchArg<T, R>): void {\n    const {subscriber, result, value, index} = arg;\n    subscriber.subscribeToProjection(result, value, index);\n  }\n\n  protected _next(value: any): void {\n    const destination = this.destination;\n\n    if (destination.closed) {\n      this._complete();\n      return;\n    }\n\n    const index = this.index++;\n    if (this.active < this.concurrent) {\n      destination.next!(value);\n      try {\n        const { project } = this;\n        const result = project(value, index);\n        if (!this.scheduler) {\n          this.subscribeToProjection(result, value, index);\n        } else {\n          const state: DispatchArg<T, R> = { subscriber: this, result, value, index };\n          const destination = this.destination as Subscription;\n          destination.add(this.scheduler.schedule<DispatchArg<T, R>>(ExpandSubscriber.dispatch as any, 0, state));\n        }\n      } catch (e) {\n        destination.error!(e);\n      }\n    } else {\n      this.buffer!.push(value);\n    }\n  }\n\n  private subscribeToProjection(result: any, value: T, index: number): void {\n    this.active++;\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscribe(result, new SimpleInnerSubscriber(this)));\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    this._next(innerValue);\n  }\n\n  notifyComplete(): void {\n    const buffer = this.buffer;\n    this.active--;\n    if (buffer && buffer.length > 0) {\n      this._next(buffer.shift());\n    }\n    if (this.hasCompleted && this.active === 0) {\n      this.destination.complete!();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable, but will call a specified function when\n * the source terminates on complete or error.\n * @param {function} callback Function to be called when source terminates.\n * @return {Observable} An Observable that mirrors the source, but will call the specified function on termination.\n * @method finally\n * @owner Observable\n */\nexport function finalize<T>(callback: () => void): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new FinallyOperator(callback));\n}\n\nclass FinallyOperator<T> implements Operator<T, T> {\n  constructor(private callback: () => void) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new FinallySubscriber(subscriber, this.callback));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass FinallySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<T>, callback: () => void) {\n    super(destination);\n    this.add(new Subscription(callback));\n  }\n}\n","import { Observable } from '../Observable';\nimport { FindValueOperator } from '../operators/find';\nimport { OperatorFunction } from '../types';\n/**\n * Emits only the index of the first value emitted by the source Observable that\n * meets some condition.\n *\n * <span class=\"informal\">It's like {@link find}, but emits the index of the\n * found value, not the value itself.</span>\n *\n * ![](findIndex.png)\n *\n * `findIndex` searches for the first item in the source Observable that matches\n * the specified condition embodied by the `predicate`, and returns the\n * (zero-based) index of the first occurrence in the source. Unlike\n * {@link first}, the `predicate` is required in `findIndex`, and does not emit\n * an error if a valid value is not found.\n *\n * ## Example\n * Emit the index of first click that happens on a DIV element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { findIndex } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(findIndex(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link first}\n * @see {@link take}\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} predicate\n * A function called with each item to test for condition matching.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {Observable} An Observable of the index of the first item that\n * matches the condition.\n * @method find\n * @owner Observable\n */\nexport function findIndex<T>(predicate: (value: T, index: number, source: Observable<T>) => boolean,\n                             thisArg?: any): OperatorFunction<T, number> {\n  return (source: Observable<T>) => source.lift(new FindValueOperator(predicate, source, true, thisArg)) as Observable<any>;\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { take } from './take';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function first<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function first<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function first<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Emits only the first value (or the first value that meets some condition)\n * emitted by the source Observable.\n *\n * <span class=\"informal\">Emits only the first value. Or emits only the first\n * value that passes some test.</span>\n *\n * ![](first.png)\n *\n * If called with no arguments, `first` emits the first value of the source\n * Observable, then completes. If called with a `predicate` function, `first`\n * emits the first value of the source that matches the specified condition. It\n * may also take a deprecated `resultSelector` function to produce the output\n * value from the input value, and a `defaultValue` to emit in case the source\n * completes before it is able to emit a valid value. Throws an error if\n * `defaultValue` was not provided and a matching element is not found.\n *\n * ## Examples\n * Emit only the first click that happens on the DOM\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first());\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Emits the first click that happens on a DIV\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { first } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(first(ev => ev.target.tagName === 'DIV'));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link filter}\n * @see {@link find}\n * @see {@link take}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n *\n * @param {function(value: T, index: number, source: Observable<T>): boolean} [predicate]\n * An optional function called with each item to test for condition matching.\n * @param {R} [defaultValue] The default value emitted in case no valid value\n * was found on the source.\n * @return {Observable<T|R>} An Observable of the first item that matches the\n * condition.\n * @method first\n * @owner Observable\n */\nexport function first<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    take(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Ignores all items emitted by the source Observable and only passes calls of `complete` or `error`.\n *\n * ![](ignoreElements.png)\n *\n * ## Examples\n * ### Ignores emitted values, reacts to observable's completion.\n * ```ts\n * import { of } from 'rxjs';\n * import { ignoreElements } from 'rxjs/operators';\n *\n * of('you', 'talking', 'to', 'me').pipe(\n *   ignoreElements(),\n * )\n * .subscribe(\n *   word => console.log(word),\n *   err => console.log('error:', err),\n *   () => console.log('the end'),\n * );\n * // result:\n * // 'the end'\n * ```\n * @return {Observable} An empty Observable that only calls `complete`\n * or `error`, based on which one is called by the source Observable.\n * @method ignoreElements\n * @owner Observable\n */\nexport function ignoreElements(): OperatorFunction<any, never> {\n  return function ignoreElementsOperatorFunction(source: Observable<any>) {\n    return source.lift(new IgnoreElementsOperator());\n  };\n}\n\nclass IgnoreElementsOperator<T, R> implements Operator<T, R> {\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new IgnoreElementsSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IgnoreElementsSubscriber<T> extends Subscriber<T> {\n  protected _next(unused: T): void {\n    // Do nothing\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits false if the input observable emits any values, or emits true if the\n * input observable completes without emitting any values.\n *\n * <span class=\"informal\">Tells whether any values are emitted by an observable</span>\n *\n * ![](isEmpty.png)\n *\n * `isEmpty` transforms an Observable that emits values into an Observable that\n * emits a single boolean value representing whether or not any values were\n * emitted by the source Observable. As soon as the source Observable emits a\n * value, `isEmpty` will emit a `false` and complete.  If the source Observable\n * completes having not emitted anything, `isEmpty` will emit a `true` and\n * complete.\n *\n * A similar effect could be achieved with {@link count}, but `isEmpty` can emit\n * a `false` value sooner.\n *\n * ## Examples\n *\n * Emit `false` for a non-empty Observable\n * ```javascript\n * import { Subject } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const source = new Subject<string>();\n * const result = source.pipe(isEmpty());\n * source.subscribe(x => console.log(x));\n * result.subscribe(x => console.log(x));\n * source.next('a');\n * source.next('b');\n * source.next('c');\n * source.complete();\n *\n * // Results in:\n * // a\n * // false\n * // b\n * // c\n * ```\n *\n * Emit `true` for an empty Observable\n * ```javascript\n * import { EMPTY } from 'rxjs';\n * import { isEmpty } from 'rxjs/operators';\n *\n * const result = EMPTY.pipe(isEmpty());\n * result.subscribe(x => console.log(x));\n * // Results in:\n * // true\n * ```\n *\n * @see {@link count}\n * @see {@link EMPTY}\n *\n * @return {OperatorFunction<T, boolean>} An Observable of a boolean value indicating whether observable was empty or not\n * @method isEmpty\n * @owner Observable\n */\n\nexport function isEmpty<T>(): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new IsEmptyOperator());\n}\n\nclass IsEmptyOperator implements Operator<any, boolean> {\n  call (observer: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new IsEmptySubscriber(observer));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass IsEmptySubscriber extends Subscriber<any> {\n  constructor(destination: Subscriber<boolean>) {\n    super(destination);\n  }\n\n  private notifyComplete(isEmpty: boolean): void {\n    const destination = this.destination;\n\n    destination.next(isEmpty);\n    destination.complete();\n  }\n\n  protected _next(value: boolean) {\n    this.notifyComplete(false);\n  }\n\n  protected _complete() {\n    this.notifyComplete(true);\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\nimport { OperatorFunction } from '../../internal/types';\nimport { filter } from './filter';\nimport { takeLast } from './takeLast';\nimport { throwIfEmpty } from './throwIfEmpty';\nimport { defaultIfEmpty } from './defaultIfEmpty';\nimport { identity } from '../util/identity';\n\n/* tslint:disable:max-line-length */\nexport function last<T, D = T>(\n  predicate?: null,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\nexport function last<T, S extends T>(\n  predicate: (value: T, index: number, source: Observable<T>) => value is S,\n  defaultValue?: S\n): OperatorFunction<T, S>;\nexport function last<T, D = T>(\n  predicate: (value: T, index: number, source: Observable<T>) => boolean,\n  defaultValue?: D\n): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits only the last item emitted by the source Observable.\n * It optionally takes a predicate function as a parameter, in which case, rather than emitting\n * the last item from the source Observable, the resulting Observable will emit the last item\n * from the source Observable that satisfies the predicate.\n *\n * ![](last.png)\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {function} [predicate] - The condition any source emitted item has to satisfy.\n * @param {any} [defaultValue] - An optional default value to provide if last\n * predicate isn't met or no values were emitted.\n * @return {Observable} An Observable that emits only the last item satisfying the given condition\n * from the source, or an NoSuchElementException if no such items are emitted.\n * @throws - Throws if no items that match the predicate are emitted by the source Observable.\n */\nexport function last<T, D>(\n  predicate?: ((value: T, index: number, source: Observable<T>) => boolean) | null,\n  defaultValue?: D\n): OperatorFunction<T, T | D> {\n  const hasDefaultValue = arguments.length >= 2;\n  return (source: Observable<T>) => source.pipe(\n    predicate ? filter((v, i) => predicate(v, i, source)) : identity,\n    takeLast(1),\n    hasDefaultValue ? defaultIfEmpty<T | D>(defaultValue) : throwIfEmpty(() => new EmptyError()),\n  );\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\n\n/**\n * Emits the given constant value on the output Observable every time the source\n * Observable emits a value.\n *\n * <span class=\"informal\">Like {@link map}, but it maps every source value to\n * the same output value every time.</span>\n *\n * ![](mapTo.png)\n *\n * Takes a constant `value` as argument, and emits that whenever the source\n * Observable emits a value. In other words, ignores the actual source value,\n * and simply uses the emission moment to know when to emit the given `value`.\n *\n * ## Example\n * Map every click to the string 'Hi'\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { mapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const greetings = clicks.pipe(mapTo('Hi'));\n * greetings.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {any} value The value to map each source value to.\n * @return {Observable} An Observable that emits the given `value` every time\n * the source Observable emits something.\n * @method mapTo\n * @owner Observable\n */\nexport function mapTo<T, R>(value: R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MapToOperator(value));\n}\n\nclass MapToOperator<T, R> implements Operator<T, R> {\n\n  value: R;\n\n  constructor(value: R) {\n    this.value = value;\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MapToSubscriber(subscriber, this.value));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MapToSubscriber<T, R> extends Subscriber<T> {\n\n  value: R;\n\n  constructor(destination: Subscriber<R>, value: R) {\n    super(destination);\n    this.value = value;\n  }\n\n  protected _next(x: T) {\n    this.destination.next(this.value);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Notification } from '../Notification';\nimport { OperatorFunction } from '../types';\n\n/**\n * Represents all of the notifications from the source Observable as `next`\n * emissions marked with their original types within {@link Notification}\n * objects.\n *\n * <span class=\"informal\">Wraps `next`, `error` and `complete` emissions in\n * {@link Notification} objects, emitted as `next` on the output Observable.\n * </span>\n *\n * ![](materialize.png)\n *\n * `materialize` returns an Observable that emits a `next` notification for each\n * `next`, `error`, or `complete` emission of the source Observable. When the\n * source Observable emits `complete`, the output Observable will emit `next` as\n * a Notification of type \"complete\", and then it will emit `complete` as well.\n * When the source Observable emits `error`, the output will emit `next` as a\n * Notification of type \"error\", and then `complete`.\n *\n * This operator is useful for producing metadata of the source Observable, to\n * be consumed as `next` emissions. Use it in conjunction with\n * {@link dematerialize}.\n *\n * ## Example\n * Convert a faulty Observable to an Observable of Notifications\n * ```ts\n * import { of } from 'rxjs';\n * import { materialize, map } from 'rxjs/operators';\n *\n * const letters = of('a', 'b', 13, 'd');\n * const upperCase = letters.pipe(map(x => x.toUpperCase()));\n * const materialized = upperCase.pipe(materialize());\n * materialized.subscribe(x => console.log(x));\n *\n * // Results in the following:\n * // - Notification {kind: \"N\", value: \"A\", error: undefined, hasValue: true}\n * // - Notification {kind: \"N\", value: \"B\", error: undefined, hasValue: true}\n * // - Notification {kind: \"E\", value: undefined, error: TypeError:\n * //   x.toUpperCase is not a function at MapSubscriber.letters.map.x\n * //   [as project] (http://1…, hasValue: false}\n * ```\n *\n * @see {@link Notification}\n * @see {@link dematerialize}\n *\n * @return {Observable<Notification<T>>} An Observable that emits\n * {@link Notification} objects that wrap the original emissions from the source\n * Observable with metadata.\n * @method materialize\n * @owner Observable\n */\nexport function materialize<T>(): OperatorFunction<T, Notification<T>> {\n  return function materializeOperatorFunction(source: Observable<T>) {\n    return source.lift(new MaterializeOperator());\n  };\n}\n\nclass MaterializeOperator<T> implements Operator<T, Notification<T>> {\n  call(subscriber: Subscriber<Notification<T>>, source: any): any {\n    return source.subscribe(new MaterializeSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass MaterializeSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<Notification<T>>) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    this.destination.next(Notification.createNext(value));\n  }\n\n  protected _error(err: any) {\n    const destination = this.destination;\n    destination.next(Notification.createError(err));\n    destination.complete();\n  }\n\n  protected _complete() {\n    const destination = this.destination;\n    destination.next(Notification.createComplete());\n    destination.complete();\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Max operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the largest value.\n *\n * ![](max.png)\n *\n * ## Examples\n * Get the maximal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   max(),\n * )\n * .subscribe(x => console.log(x)); // -> 8\n * ```\n *\n * Use a comparer function to get the maximal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { max } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Beer'\n * ```\n *\n * @see {@link min}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable} An Observable that emits item with the largest value.\n * @method max\n * @owner Observable\n */\nexport function max<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const max: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) > 0 ? x : y\n    : (x, y) => x > y ? x : y;\n\n  return reduce(max);\n}\n","import { merge as mergeStatic } from '../observable/merge';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction, MonoTypeOperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(concurrent?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2>(v2: ObservableInput<T2>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, concurrent?: number, scheduler?: SchedulerLike): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T>(...observables: Array<ObservableInput<T> | SchedulerLike | number>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static merge. */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link merge}.\n */\nexport function merge<T, R>(...observables: Array<ObservableInput<any> | SchedulerLike | number>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift.call(mergeStatic(source, ...observables));\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction, ObservedValueOf } from '../../internal/types';\nimport { mergeMap } from './mergeMap';\nimport { ObservableInput } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function mergeMapTo<T, O extends ObservableInput<any>>(innerObservable: O, concurrent?: number): OperatorFunction<any, ObservedValueOf<O>>;\n/** @deprecated */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(innerObservable: O, resultSelector: (outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R, concurrent?: number): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is merged multiple\n * times in the output Observable.\n *\n * <span class=\"informal\">It's like {@link mergeMap}, but maps each value always\n * to the same inner Observable.</span>\n *\n * ![](mergeMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then merges those resulting Observables into one\n * single Observable, which is the output Observable.\n *\n * ## Example\n * For each click event, start an interval Observable ticking every 1 second\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { mergeMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(mergeMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link merge}\n * @see {@link mergeAll}\n * @see {@link mergeMap}\n * @see {@link mergeScan}\n * @see {@link switchMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of input\n * Observables being subscribed to concurrently.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable`\n * @method mergeMapTo\n * @owner Observable\n */\nexport function mergeMapTo<T, R, O extends ObservableInput<any>>(\n  innerObservable: O,\n  resultSelector?: ((outerValue: T, innerValue: ObservedValueOf<O>, outerIndex: number, innerIndex: number) => R) | number,\n  concurrent: number = Number.POSITIVE_INFINITY\n): OperatorFunction<T, ObservedValueOf<O>|R> {\n  if (typeof resultSelector === 'function') {\n    return mergeMap(() => innerObservable, resultSelector, concurrent);\n  }\n  if (typeof resultSelector === 'number') {\n    concurrent = resultSelector;\n  }\n  return mergeMap(() => innerObservable, concurrent);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/**\n * Applies an accumulator function over the source Observable where the\n * accumulator function itself returns an Observable, then each intermediate\n * Observable returned is merged into the output Observable.\n *\n * <span class=\"informal\">It's like {@link scan}, but the Observables returned\n * by the accumulator are merged into the outer Observable.</span>\n *\n * ## Example\n * Count the number of click events\n * ```ts\n * import { fromEvent, of } from 'rxjs';\n * import { mapTo, mergeScan } from 'rxjs/operators';\n *\n * const click$ = fromEvent(document, 'click');\n * const one$ = click$.pipe(mapTo(1));\n * const seed = 0;\n * const count$ = one$.pipe(\n *   mergeScan((acc, one) => of(acc + one), seed),\n * );\n * count$.subscribe(x => console.log(x));\n *\n * // Results:\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...and so on for each click\n * ```\n *\n * @param {function(acc: R, value: T): Observable<R>} accumulator\n * The accumulator function called on each source value.\n * @param seed The initial accumulation value.\n * @param {number} [concurrent=Number.POSITIVE_INFINITY] Maximum number of\n * input Observables being subscribed to concurrently.\n * @return {Observable<R>} An observable of the accumulated values.\n * @method mergeScan\n * @owner Observable\n */\nexport function mergeScan<T, R>(accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n                                seed: R,\n                                concurrent: number = Number.POSITIVE_INFINITY): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new MergeScanOperator(accumulator, seed, concurrent));\n}\n\nexport class MergeScanOperator<T, R> implements Operator<T, R> {\n  constructor(private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private seed: R,\n              private concurrent: number) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new MergeScanSubscriber(\n      subscriber, this.accumulator, this.seed, this.concurrent\n    ));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class MergeScanSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private hasValue: boolean = false;\n  private hasCompleted: boolean = false;\n  private buffer: Observable<any>[] = [];\n  private active: number = 0;\n  protected index: number = 0;\n\n  constructor(destination: Subscriber<R>,\n              private accumulator: (acc: R, value: T, index: number) => ObservableInput<R>,\n              private acc: R,\n              private concurrent: number) {\n    super(destination);\n  }\n\n  protected _next(value: any): void {\n    if (this.active < this.concurrent) {\n      const index = this.index++;\n      const destination = this.destination;\n      let ish;\n      try {\n        const { accumulator } = this;\n        ish = accumulator(this.acc, value, index);\n      } catch (e) {\n        return destination.error!(e);\n      }\n      this.active++;\n      this._innerSub(ish);\n    } else {\n      this.buffer.push(value);\n    }\n  }\n\n  private _innerSub(ish: any): void {\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    const destination = this.destination as Subscription;\n    destination.add(innerSubscriber);\n    const innerSubscription = innerSubscribe(ish, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      destination.add(innerSubscription);\n    }\n  }\n\n  protected _complete(): void {\n    this.hasCompleted = true;\n    if (this.active === 0 && this.buffer.length === 0) {\n      if (this.hasValue === false) {\n        this.destination.next!(this.acc);\n      }\n      this.destination.complete!();\n    }\n    this.unsubscribe();\n  }\n\n  notifyNext(innerValue: R): void {\n    const { destination } = this;\n    this.acc = innerValue;\n    this.hasValue = true;\n    destination.next!(innerValue);\n  }\n\n  notifyComplete(): void {\n    const buffer = this.buffer;\n    this.active--;\n    if (buffer.length > 0) {\n      this._next(buffer.shift());\n    } else if (this.active === 0 && this.hasCompleted) {\n      if (this.hasValue === false) {\n        this.destination.next!(this.acc);\n      }\n      this.destination.complete!();\n    }\n  }\n}\n","import { reduce } from './reduce';\nimport { MonoTypeOperatorFunction } from '../types';\n\n/**\n * The Min operator operates on an Observable that emits numbers (or items that can be compared with a provided function),\n * and when source Observable completes it emits a single item: the item with the smallest value.\n *\n * ![](min.png)\n *\n * ## Examples\n * Get the minimal value of a series of numbers\n * ```ts\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * of(5, 4, 7, 2, 8).pipe(\n *   min(),\n * )\n * .subscribe(x => console.log(x)); // -> 2\n * ```\n *\n * Use a comparer function to get the minimal item\n * ```typescript\n * import { of } from 'rxjs';\n * import { min } from 'rxjs/operators';\n *\n * interface Person {\n *   age: number,\n *   name: string\n * }\n * of<Person>(\n *   {age: 7, name: 'Foo'},\n *   {age: 5, name: 'Bar'},\n *   {age: 9, name: 'Beer'},\n * ).pipe(\n *   min<Person>( (a: Person, b: Person) => a.age < b.age ? -1 : 1),\n * )\n * .subscribe((x: Person) => console.log(x.name)); // -> 'Bar'\n * ```\n * @see {@link max}\n *\n * @param {Function} [comparer] - Optional comparer function that it will use instead of its default to compare the\n * value of two items.\n * @return {Observable<R>} An Observable that emits item with the smallest value.\n * @method min\n * @owner Observable\n */\nexport function min<T>(comparer?: (x: T, y: T) => number): MonoTypeOperatorFunction<T> {\n  const min: (x: T, y: T) => T = (typeof comparer === 'function')\n    ? (x, y) => comparer(x, y) < 0 ? x : y\n    : (x, y) => x < y ? x : y;\n  return reduce(min);\n}\n","import { Observable } from '../Observable';\nimport { from } from '../observable/from';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { isArray } from '../util/isArray';\nimport { ObservableInput, OperatorFunction } from '../types';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNext<T>(): OperatorFunction<T, T>;\nexport function onErrorResumeNext<T, T2>(v: ObservableInput<T2>): OperatorFunction<T, T | T2>;\nexport function onErrorResumeNext<T, T2, T3>(v: ObservableInput<T2>, v2: ObservableInput<T3>): OperatorFunction<T, T | T2 | T3>;\nexport function onErrorResumeNext<T, T2, T3, T4>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>): OperatorFunction<T, T | T2 | T3 | T4>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>): OperatorFunction<T, T | T2 | T3 | T4 | T5>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6>;\nexport function onErrorResumeNext<T, T2, T3, T4, T5, T6, T7>(v: ObservableInput<T2>, v2: ObservableInput<T3>, v3: ObservableInput<T4>, v4: ObservableInput<T5>, v5: ObservableInput<T6>, v6: ObservableInput<T7>): OperatorFunction<T, T | T2 | T3 | T4 | T5 | T6 | T7>;\nexport function onErrorResumeNext<T, R>(...observables: Array<ObservableInput<any>>): OperatorFunction<T, T | R>;\nexport function onErrorResumeNext<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, T | R>;\n/* tslint:enable:max-line-length */\n\n/**\n * When any of the provided Observable emits an complete or error notification, it immediately subscribes to the next one\n * that was passed.\n *\n * <span class=\"informal\">Execute series of Observables no matter what, even if it means swallowing errors.</span>\n *\n * ![](onErrorResumeNext.png)\n *\n * `onErrorResumeNext` is an operator that accepts a series of Observables, provided either directly as\n * arguments or as an array. If no single Observable is provided, returned Observable will simply behave the same\n * as the source.\n *\n * `onErrorResumeNext` returns an Observable that starts by subscribing and re-emitting values from the source Observable.\n * When its stream of values ends - no matter if Observable completed or emitted an error - `onErrorResumeNext`\n * will subscribe to the first Observable that was passed as an argument to the method. It will start re-emitting\n * its values as well and - again - when that stream ends, `onErrorResumeNext` will proceed to subscribing yet another\n * Observable in provided series, no matter if previous Observable completed or ended with an error. This will\n * be happening until there is no more Observables left in the series, at which point returned Observable will\n * complete - even if the last subscribed stream ended with an error.\n *\n * `onErrorResumeNext` can be therefore thought of as version of {@link concat} operator, which is more permissive\n * when it comes to the errors emitted by its input Observables. While `concat` subscribes to the next Observable\n * in series only if previous one successfully completed, `onErrorResumeNext` subscribes even if it ended with\n * an error.\n *\n * Note that you do not get any access to errors emitted by the Observables. In particular do not\n * expect these errors to appear in error callback passed to {@link Observable#subscribe}. If you want to take\n * specific actions based on what error was emitted by an Observable, you should try out {@link catchError} instead.\n *\n *\n * ## Example\n * Subscribe to the next Observable after map fails\n * ```ts\n * import { of } from 'rxjs';\n * import { onErrorResumeNext, map } from 'rxjs/operators';\n *\n * of(1, 2, 3, 0).pipe(\n *   map(x => {\n *       if (x === 0) { throw Error(); }\n *        return 10 / x;\n *   }),\n *   onErrorResumeNext(of(1, 2, 3)),\n * )\n * .subscribe(\n *   val => console.log(val),\n *   err => console.log(err),          // Will never be called.\n *   () => console.log('that\\'s it!')\n * );\n *\n * // Logs:\n * // 10\n * // 5\n * // 3.3333333333333335\n * // 1\n * // 2\n * // 3\n * // \"that's it!\"\n * ```\n *\n * @see {@link concat}\n * @see {@link catchError}\n *\n * @param {...ObservableInput} observables Observables passed either directly or as an array.\n * @return {Observable} An Observable that emits values from source Observable, but - if it errors - subscribes\n * to the next passed Observable and so on, until it completes or runs out of Observables.\n * @method onErrorResumeNext\n * @owner Observable\n */\n\nexport function onErrorResumeNext<T, R>(...nextSources: Array<ObservableInput<any> |\n                                                       Array<ObservableInput<any>>>): OperatorFunction<T, R> {\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = <Array<Observable<any>>>nextSources[0];\n  }\n\n  return (source: Observable<T>) => source.lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\n/* tslint:disable:max-line-length */\nexport function onErrorResumeNextStatic<R>(v: ObservableInput<R>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): Observable<R>;\nexport function onErrorResumeNextStatic<T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): Observable<R>;\n\nexport function onErrorResumeNextStatic<R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): Observable<R>;\nexport function onErrorResumeNextStatic<R>(array: ObservableInput<any>[]): Observable<R>;\n/* tslint:enable:max-line-length */\n\nexport function onErrorResumeNextStatic<T, R>(...nextSources: Array<ObservableInput<any> |\n  Array<ObservableInput<any>> |\n  ((...values: Array<any>) => R)>): Observable<R> {\n  let source: ObservableInput<any>|undefined = undefined;\n\n  if (nextSources.length === 1 && isArray(nextSources[0])) {\n    nextSources = nextSources[0] as ObservableInput<any>[];\n  }\n  // TODO: resolve issue with passing no arguments.\n  source = nextSources.shift()!;\n\n  return from(source).lift(new OnErrorResumeNextOperator<T, R>(nextSources));\n}\n\nclass OnErrorResumeNextOperator<T, R> implements Operator<T, R> {\n  constructor(private nextSources: Array<ObservableInput<any>>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));\n  }\n}\n\nclass OnErrorResumeNextSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  constructor(protected destination: Subscriber<T>,\n              private nextSources: Array<ObservableInput<any>>) {\n    super(destination);\n  }\n\n  notifyError(): void {\n    this.subscribeToNextSource();\n  }\n\n  notifyComplete(): void {\n    this.subscribeToNextSource();\n  }\n\n  protected _error(err: any): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.subscribeToNextSource();\n    this.unsubscribe();\n  }\n\n  private subscribeToNextSource(): void {\n    const next = this.nextSources.shift();\n    if (!!next) {\n      const innerSubscriber = new SimpleInnerSubscriber(this);\n      const destination = this.destination as Subscription;\n      destination.add(innerSubscriber);\n      const innerSubscription = innerSubscribe(next, innerSubscriber);\n      // The returned subscription will usually be the subscriber that was\n      // passed. However, interop subscribers will be wrapped and for\n      // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n      if (innerSubscription !== innerSubscriber) {\n        destination.add(innerSubscription);\n      }\n    } else {\n      this.destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction } from '../types';\n\n/**\n * Groups pairs of consecutive emissions together and emits them as an array of\n * two values.\n *\n * <span class=\"informal\">Puts the current value and previous value together as\n * an array, and emits that.</span>\n *\n * ![](pairwise.png)\n *\n * The Nth emission from the source Observable will cause the output Observable\n * to emit an array [(N-1)th, Nth] of the previous and the current value, as a\n * pair. For this reason, `pairwise` emits on the second and subsequent\n * emissions from the source Observable, but not on the first emission, because\n * there is no previous value in that case.\n *\n * ## Example\n * On every click (starting from the second), emit the relative distance to the previous click\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pairwise, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const pairs = clicks.pipe(pairwise());\n * const distance = pairs.pipe(\n *   map(pair => {\n *     const x0 = pair[0].clientX;\n *     const y0 = pair[0].clientY;\n *     const x1 = pair[1].clientX;\n *     const y1 = pair[1].clientY;\n *     return Math.sqrt(Math.pow(x0 - x1, 2) + Math.pow(y0 - y1, 2));\n *   }),\n * );\n * distance.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link buffer}\n * @see {@link bufferCount}\n *\n * @return {Observable<Array<T>>} An Observable of pairs (as arrays) of\n * consecutive values from the source Observable.\n * @method pairwise\n * @owner Observable\n */\nexport function pairwise<T>(): OperatorFunction<T, [T, T]> {\n  return (source: Observable<T>) => source.lift(new PairwiseOperator());\n}\n\nclass PairwiseOperator<T> implements Operator<T, [T, T]> {\n  call(subscriber: Subscriber<[T, T]>, source: any): any {\n    return source.subscribe(new PairwiseSubscriber(subscriber));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass PairwiseSubscriber<T> extends Subscriber<T> {\n  private prev: T;\n  private hasPrev: boolean = false;\n\n  constructor(destination: Subscriber<[T, T]>) {\n    super(destination);\n  }\n\n  _next(value: T): void {\n    let pair: [T, T] | undefined;\n\n    if (this.hasPrev) {\n      pair = [this.prev, value];\n    } else {\n      this.hasPrev = true;\n    }\n\n    this.prev = value;\n\n    if (pair) {\n      this.destination.next(pair);\n    }\n  }\n}\n","import { not } from '../util/not';\nimport { filter } from './filter';\nimport { Observable } from '../Observable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Splits the source Observable into two, one with values that satisfy a\n * predicate, and another with values that don't satisfy the predicate.\n *\n * <span class=\"informal\">It's like {@link filter}, but returns two Observables:\n * one like the output of {@link filter}, and the other with values that did not\n * pass the condition.</span>\n *\n * ![](partition.png)\n *\n * `partition` outputs an array with two Observables that partition the values\n * from the source Observable through the given `predicate` function. The first\n * Observable in that array emits source values for which the predicate argument\n * returns true. The second Observable emits source values for which the\n * predicate returns false. The first behaves like {@link filter} and the second\n * behaves like {@link filter} with the predicate negated.\n *\n * ## Example\n * Partition click events into those on DIV elements and those elsewhere\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { partition } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const parts = clicks.pipe(partition(ev => ev.target.tagName === 'DIV'));\n * const clicksOnDivs = parts[0];\n * const clicksElsewhere = parts[1];\n * clicksOnDivs.subscribe(x => console.log('DIV clicked: ', x));\n * clicksElsewhere.subscribe(x => console.log('Other clicked: ', x));\n * ```\n *\n * @see {@link filter}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates each value emitted by the source Observable. If it returns `true`,\n * the value is emitted on the first Observable in the returned array, if\n * `false` the value is emitted on the second Observable in the array. The\n * `index` parameter is the number `i` for the i-th source emission that has\n * happened since the subscription, starting from the number `0`.\n * @param {any} [thisArg] An optional argument to determine the value of `this`\n * in the `predicate` function.\n * @return {[Observable<T>, Observable<T>]} An array with two Observables: one\n * with values that passed the predicate, and another with values that did not\n * pass the predicate.\n * @method partition\n * @owner Observable\n * @deprecated use `partition` static creation function instead\n */\nexport function partition<T>(predicate: (value: T, index: number) => boolean,\n                             thisArg?: any): UnaryFunction<Observable<T>, [Observable<T>, Observable<T>]> {\n  return (source: Observable<T>) => [\n    filter(predicate, thisArg)(source),\n    filter(not(predicate, thisArg) as any)(source)\n  ] as [Observable<T>, Observable<T>];\n}\n","import { Observable } from '../Observable';\nimport { map } from './map';\nimport { OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pluck<T, K1 extends keyof T>(k1: K1): OperatorFunction<T, T[K1]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1]>(k1: K1, k2: K2): OperatorFunction<T, T[K1][K2]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2]>(k1: K1, k2: K2, k3: K3): OperatorFunction<T, T[K1][K2][K3]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3]>(k1: K1, k2: K2, k3: K3, k4: K4): OperatorFunction<T, T[K1][K2][K3][K4]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5): OperatorFunction<T, T[K1][K2][K3][K4][K5]>;\nexport function pluck<T, K1 extends keyof T, K2 extends keyof T[K1], K3 extends keyof T[K1][K2], K4 extends keyof T[K1][K2][K3], K5 extends keyof T[K1][K2][K3][K4], K6 extends keyof T[K1][K2][K3][K4][K5]>(k1: K1, k2: K2, k3: K3, k4: K4, k5: K5, k6: K6): OperatorFunction<T, T[K1][K2][K3][K4][K5][K6]>;\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Maps each source value (an object) to its specified nested property.\n *\n * <span class=\"informal\">Like {@link map}, but meant only for picking one of\n * the nested properties of every emitted object.</span>\n *\n * ![](pluck.png)\n *\n * Given a list of strings describing a path to an object property, retrieves\n * the value of a specified nested property from all values in the source\n * Observable. If a property can't be resolved, it will return `undefined` for\n * that value.\n *\n * ## Example\n * Map every click to the tagName of the clicked target element\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { pluck } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const tagNames = clicks.pipe(pluck('target', 'tagName'));\n * tagNames.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n *\n * @param {...string} properties The nested properties to pluck from each source\n * value (an object).\n * @return {Observable} A new Observable of property values from the source values.\n * @method pluck\n * @owner Observable\n */\nexport function pluck<T, R>(...properties: string[]): OperatorFunction<T, R> {\n  const length = properties.length;\n  if (length === 0) {\n    throw new Error('list of properties cannot be empty.');\n  }\n  return (source: Observable<T>) => map(plucker(properties, length))(source as any);\n}\n\nfunction plucker(props: string[], length: number): (x: string) => any {\n  const mapper = (x: string) => {\n    let currentProp = x;\n    for (let i = 0; i < length; i++) {\n      const p = currentProp != null ? currentProp[props[i]] : undefined;\n      if (p !== void 0) {\n        currentProp = p;\n      } else {\n        return undefined;\n      }\n    }\n    return currentProp;\n  };\n\n  return mapper;\n}\n","import { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { MonoTypeOperatorFunction, OperatorFunction, UnaryFunction, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publish<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>>;\nexport function publish<T, O extends ObservableInput<any>>(selector: (shared: Observable<T>) => O): OperatorFunction<T, ObservedValueOf<O>>;\nexport function publish<T>(selector: MonoTypeOperatorFunction<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns a ConnectableObservable, which is a variety of Observable that waits until its connect method is called\n * before it begins emitting items to those Observers that have subscribed to it.\n *\n * <span class=\"informal\">Makes a cold Observable hot</span>\n *\n * ![](publish.png)\n *\n * ## Examples\n * Make source$ hot by applying publish operator, then merge each inner observable into a single one\n * and subscribe.\n * ```ts\n * import { of, zip, interval, merge } from \"rxjs\";\n * import { map, publish, tap } from \"rxjs/operators\";\n *\n * const source$ = zip(interval(2000), of(1, 2, 3, 4, 5, 6, 7, 8, 9)).pipe(\n *   map(values => values[1])\n * );\n *\n * source$\n *   .pipe(\n *     publish(multicasted$ =>\n *       merge(\n *         multicasted$.pipe(tap(x => console.log('Stream 1:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 2:', x))),\n *         multicasted$.pipe(tap(x => console.log('Stream 3:', x))),\n *       )\n *     )\n *   )\n *   .subscribe();\n *\n * // Results every two seconds\n * // Stream 1: 1\n * // Stream 2: 1\n * // Stream 3: 1\n * // ...\n * // Stream 1: 9\n * // Stream 2: 9\n * // Stream 3: 9\n * ```\n *\n * @param {Function} [selector] - Optional selector function which can use the multicasted source sequence as many times\n * as needed, without causing multiple subscriptions to the source sequence.\n * Subscribers to the given source will receive all notifications of the source from the time of the subscription on.\n * @return A ConnectableObservable that upon connection causes the source Observable to emit items to its Observers.\n * @method publish\n * @owner Observable\n *\n *\n */\nexport function publish<T, R>(selector?: OperatorFunction<T, R>): MonoTypeOperatorFunction<T> | OperatorFunction<T, R> {\n  return selector ?\n    multicast(() => new Subject<T>(), selector) :\n    multicast(new Subject<T>());\n}\n","import { Observable } from '../Observable';\nimport { BehaviorSubject } from '../BehaviorSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * @param value\n * @return {ConnectableObservable<T>}\n * @method publishBehavior\n * @owner Observable\n */\nexport function publishBehavior<T>(value: T):  UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new BehaviorSubject<T>(value))(source) as ConnectableObservable<T>;\n}\n","import { Observable } from '../Observable';\nimport { AsyncSubject } from '../AsyncSubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction } from '../types';\n\n/**\n * Returns a connectable observable sequence that shares a single subscription to the\n * underlying sequence containing only the last notification.\n *\n * ![](publishLast.png)\n *\n * Similar to {@link publish}, but it waits until the source observable completes and stores\n * the last emitted value.\n * Similarly to {@link publishReplay} and {@link publishBehavior}, this keeps storing the last\n * value even if it has no more subscribers. If subsequent subscriptions happen, they will\n * immediately get that last stored value and complete.\n *\n * ## Example\n *\n * ```ts\n * import { interval } from 'rxjs';\n * import { publishLast, tap, take } from 'rxjs/operators';\n *\n * const connectable =\n *   interval(1000)\n *     .pipe(\n *       tap(x => console.log(\"side effect\", x)),\n *       take(3),\n *       publishLast());\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. A\", x),\n *   err => console.log(\"Sub. A Error\", err),\n *   () => console.log( \"Sub. A Complete\"));\n *\n * connectable.subscribe(\n *   x => console.log(  \"Sub. B\", x),\n *   err => console.log(\"Sub. B Error\", err),\n *   () => console.log( \"Sub. B Complete\"));\n *\n * connectable.connect();\n *\n * // Results:\n * //    \"side effect 0\"\n * //    \"side effect 1\"\n * //    \"side effect 2\"\n * //    \"Sub. A 2\"\n * //    \"Sub. B 2\"\n * //    \"Sub. A Complete\"\n * //    \"Sub. B Complete\"\n * ```\n *\n * @see {@link ConnectableObservable}\n * @see {@link publish}\n * @see {@link publishReplay}\n * @see {@link publishBehavior}\n *\n * @return {ConnectableObservable} An observable sequence that contains the elements of a\n * sequence produced by multicasting the source sequence.\n * @method publishLast\n * @owner Observable\n */\n\nexport function publishLast<T>(): UnaryFunction<Observable<T>, ConnectableObservable<T>> {\n  return (source: Observable<T>) => multicast(new AsyncSubject<T>())(source);\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { multicast } from './multicast';\nimport { ConnectableObservable } from '../observable/ConnectableObservable';\nimport { UnaryFunction, MonoTypeOperatorFunction, OperatorFunction, SchedulerLike, ObservableInput, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function publishReplay<T>(bufferSize?: number, windowTime?: number, scheduler?: SchedulerLike): MonoTypeOperatorFunction<T>;\nexport function publishReplay<T, O extends ObservableInput<any>>(bufferSize?: number, windowTime?: number, selector?: (shared: Observable<T>) => O, scheduler?: SchedulerLike): OperatorFunction<T, ObservedValueOf<O>>;\n/* tslint:enable:max-line-length */\n\nexport function publishReplay<T, R>(bufferSize?: number,\n                                    windowTime?: number,\n                                    selectorOrScheduler?: SchedulerLike | OperatorFunction<T, R>,\n                                    scheduler?: SchedulerLike): UnaryFunction<Observable<T>, ConnectableObservable<R>> {\n\n  if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {\n    scheduler = selectorOrScheduler;\n  }\n\n  const selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;\n  const subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n\n  return (source: Observable<T>) => multicast(() => subject, selector)(source) as ConnectableObservable<R>;\n}\n","import { Observable } from '../Observable';\nimport { isArray } from '../util/isArray';\nimport { MonoTypeOperatorFunction, OperatorFunction } from '../types';\nimport { race as raceStatic } from '../observable/race';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(observables: Array<Observable<T>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(observables: Array<Observable<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T>(...observables: Array<Observable<T> | Array<Observable<T>>>): MonoTypeOperatorFunction<T>;\n/** @deprecated Deprecated in favor of static race. */\nexport function race<T, R>(...observables: Array<Observable<any> | Array<Observable<any>>>): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that mirrors the first source Observable to emit a next,\n * error or complete notification from the combination of this Observable and supplied Observables.\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\n * @method race\n * @owner Observable\n * @deprecated Deprecated in favor of static {@link race}.\n */\nexport function race<T>(...observables: (Observable<T> | Observable<T>[])[]): MonoTypeOperatorFunction<T> {\n  return function raceOperatorFunction(source: Observable<T>) {\n    // if the only argument is an array, it was most likely called with\n    // `pair([obs1, obs2, ...])`\n    if (observables.length === 1 && isArray(observables[0])) {\n      observables = observables[0] as Observable<T>[];\n    }\n\n    return source.lift.call(raceStatic(source, ...(observables as Observable<T>[])));\n  };\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { empty } from '../observable/empty';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that will resubscribe to the source stream when the source stream completes, at most count times.\n *\n * <span class=\"informal\">Repeats all values emitted on the source. It's like {@link retry}, but for non error cases.</span>\n *\n * ![](repeat.png)\n *\n * Similar to {@link retry}, this operator repeats the stream of items emitted by the source for non error cases.\n * Repeat can be useful for creating observables that are meant to have some repeated pattern or rhythm.\n *\n * Note: `repeat(0)` returns an empty observable and `repeat()` will repeat forever\n *\n * ## Example\n * Repeat a message stream\n * ```ts\n * import { of } from 'rxjs';\n * import { repeat, delay } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const example = source.pipe(repeat(3));\n * example.subscribe(x => console.log(x));\n *\n * // Results\n * // Repeat message\n * // Repeat message\n * // Repeat message\n * ```\n *\n * Repeat 3 values, 2 times\n * ```ts\n * import { interval } from 'rxjs';\n * import { repeat, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(take(3), repeat(2));\n * example.subscribe(x => console.log(x));\n *\n * // Results every second\n * // 0\n * // 1\n * // 2\n * // 0\n * // 1\n * // 2\n * ```\n *\n * @see {@link repeatWhen}\n * @see {@link retry}\n *\n * @param {number} [count] The number of times the source Observable items are repeated, a count of 0 will yield\n * an empty Observable.\n * @return {Observable} An Observable that will resubscribe to the source stream when the source stream completes\n * , at most count times.\n * @method repeat\n * @owner Observable\n */\nexport function repeat<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => {\n    if (count === 0) {\n      return empty();\n    } else if (count < 0) {\n      return source.lift(new RepeatOperator(-1, source));\n    } else {\n      return source.lift(new RepeatOperator(count - 1, source));\n    }\n  };\n}\n\nclass RepeatOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatSubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  complete() {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.complete();\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of a `complete`. If the source\n * Observable calls `complete`, this method will emit to the Observable returned from `notifier`. If that Observable\n * calls `complete` or `error`, then this method will call `complete` or `error` on the child subscription. Otherwise\n * this method will resubscribe to the source Observable.\n *\n * ![](repeatWhen.png)\n *\n * ## Example\n * Repeat a message stream on click\n * ```ts\n * import { of, fromEvent } from 'rxjs';\n * import { repeatWhen } from 'rxjs/operators';\n *\n * const source = of('Repeat message');\n * const documentClick$ = fromEvent(document, 'click');\n *\n * source.pipe(repeatWhen(() => documentClick$)\n * ).subscribe(data => console.log(data))\n * ```\n * @see {@link repeat}\n * @see {@link retry}\n * @see {@link retryWhen}\n *\n * @param {function(notifications: Observable): Observable} notifier - Receives an Observable of notifications with\n * which a user can `complete` or `error`, aborting the repetition.\n * @return {Observable} The source Observable modified with repeat logic.\n * @method repeatWhen\n * @owner Observable\n */\nexport function repeatWhen<T>(notifier: (notifications: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RepeatWhenOperator(notifier));\n}\n\nclass RepeatWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (notifications: Observable<any>) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RepeatWhenSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private notifications?: Subject<any>;\n  private retries?: Observable<any>;\n  private retriesSubscription?: Subscription;\n  private sourceIsBeingSubscribedTo: boolean = true;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (notifications: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  notifyNext(): void {\n    this.sourceIsBeingSubscribedTo = true;\n    this.source.subscribe(this);\n  }\n\n  notifyComplete(): void {\n    if (this.sourceIsBeingSubscribedTo === false) {\n      return super.complete();\n    }\n  }\n\n  complete() {\n    this.sourceIsBeingSubscribedTo = false;\n\n    if (!this.isStopped) {\n      if (!this.retries) {\n        this.subscribeToRetries();\n      }\n      if (!this.retriesSubscription || this.retriesSubscription.closed) {\n        return super.complete();\n      }\n\n      this._unsubscribeAndRecycle();\n      this.notifications!.next(undefined);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { notifications, retriesSubscription } = this;\n    if (notifications) {\n      notifications.unsubscribe();\n      this.notifications = undefined;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n    this.retries = undefined;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null!;\n    super._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    return this;\n  }\n\n  private subscribeToRetries() {\n    this.notifications = new Subject();\n    let retries;\n    try {\n      const { notifier } = this;\n      retries = notifier(this.notifications);\n    } catch (e) {\n      return super.complete();\n    }\n    this.retries = retries;\n    this.retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will resubscribe to the source Observable for a maximum of `count` resubscriptions (given\n * as a number parameter) rather than propagating the `error` call.\n *\n * ![](retry.png)\n *\n * Any and all items emitted by the source Observable will be emitted by the resulting Observable, even those emitted\n * during failed subscriptions. For example, if an Observable fails at first but emits [1, 2] then succeeds the second\n * time and emits: [1, 2, 3, 4, 5] then the complete stream of emissions and notifications\n * would be: [1, 2, 1, 2, 3, 4, 5, `complete`].\n *\n * ## Example\n * ```ts\n * import { interval, of, throwError } from 'rxjs';\n * import { mergeMap, retry } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   mergeMap(val => {\n *     if(val > 5){\n *       return throwError('Error!');\n *     }\n *     return of(val);\n *   }),\n *   //retry 2 times on error\n *   retry(2)\n * );\n *\n * const subscribe = example.subscribe({\n *   next: val => console.log(val),\n *   error: val => console.log(`${val}: Retried 2 times then quit!`)\n * });\n *\n * // Output:\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // 0..1..2..3..4..5..\n * // \"Error!: Retried 2 times then quit!\"\n * ```\n *\n * @param {number} count - Number of retry attempts before failing.\n * @return {Observable} The source Observable modified with the retry logic.\n * @method retry\n * @owner Observable\n */\nexport function retry<T>(count: number = -1): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryOperator(count, source));\n}\n\nclass RetryOperator<T> implements Operator<T, T> {\n  constructor(private count: number,\n              private source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetrySubscriber<T> extends Subscriber<T> {\n  constructor(destination: Subscriber<any>,\n              private count: number,\n              private source: Observable<T>) {\n    super(destination);\n  }\n  error(err: any) {\n    if (!this.isStopped) {\n      const { source, count } = this;\n      if (count === 0) {\n        return super.error(err);\n      } else if (count > -1) {\n        this.count = count - 1;\n      }\n      source.subscribe(this._unsubscribeAndRecycle());\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Returns an Observable that mirrors the source Observable with the exception of an `error`. If the source Observable\n * calls `error`, this method will emit the Throwable that caused the error to the Observable returned from `notifier`.\n * If that Observable calls `complete` or `error` then this method will call `complete` or `error` on the child\n * subscription. Otherwise this method will resubscribe to the source Observable.\n *\n * ![](retryWhen.png)\n *\n * @param {function(errors: Observable): Observable} notifier - Receives an Observable of notifications with which a\n * user can `complete` or `error`, aborting the retry.\n * @return {Observable} The source Observable modified with retry logic.\n * @method retryWhen\n * @owner Observable\n */\nexport function retryWhen<T>(notifier: (errors: Observable<any>) => Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new RetryWhenOperator(notifier, source));\n}\n\nclass RetryWhenOperator<T> implements Operator<T, T> {\n  constructor(protected notifier: (errors: Observable<any>) => Observable<any>,\n              protected source: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass RetryWhenSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private errors?: Subject<any>;\n  private retries?: Observable<any>;\n  private retriesSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>,\n              private notifier: (errors: Observable<any>) => Observable<any>,\n              private source: Observable<T>) {\n    super(destination);\n  }\n\n  error(err: any) {\n    if (!this.isStopped) {\n\n      let errors = this.errors;\n      let retries: any = this.retries;\n      let retriesSubscription = this.retriesSubscription;\n\n      if (!retries) {\n        errors = new Subject();\n        try {\n          const { notifier } = this;\n          retries = notifier(errors);\n        } catch (e) {\n          return super.error(e);\n        }\n        retriesSubscription = innerSubscribe(retries, new SimpleInnerSubscriber(this));\n      } else {\n        this.errors = undefined;\n        this.retriesSubscription = undefined;\n      }\n\n      this._unsubscribeAndRecycle();\n\n      this.errors = errors;\n      this.retries = retries;\n      this.retriesSubscription = retriesSubscription;\n\n      errors!.next(err);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { errors, retriesSubscription } = this;\n    if (errors) {\n      errors.unsubscribe();\n      this.errors = undefined;\n    }\n    if (retriesSubscription) {\n      retriesSubscription.unsubscribe();\n      this.retriesSubscription = undefined;\n    }\n    this.retries = undefined;\n  }\n\n  notifyNext(): void {\n    const { _unsubscribe } = this;\n\n    this._unsubscribe = null!;\n    this._unsubscribeAndRecycle();\n    this._unsubscribe = _unsubscribe;\n\n    this.source.subscribe(this);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Emits the most recently emitted value from the source Observable whenever\n * another Observable, the `notifier`, emits.\n *\n * <span class=\"informal\">It's like {@link sampleTime}, but samples whenever\n * the `notifier` Observable emits something.</span>\n *\n * ![](sample.png)\n *\n * Whenever the `notifier` Observable emits a value or completes, `sample`\n * looks at the source Observable and emits whichever value it has most recently\n * emitted since the previous sampling, unless the source has not emitted\n * anything since the previous sampling. The `notifier` is subscribed to as soon\n * as the output Observable is subscribed.\n *\n * ## Example\n * On every click, sample the most recent \"seconds\" timer\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { sample } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = seconds.pipe(sample(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link audit}\n * @see {@link debounce}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {Observable<any>} notifier The Observable to use for sampling the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable whenever the notifier Observable\n * emits value or completes.\n * @method sample\n * @owner Observable\n */\nexport function sample<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleOperator(notifier));\n}\n\nclass SampleOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const sampleSubscriber = new SampleSubscriber(subscriber);\n    const subscription = source.subscribe(sampleSubscriber);\n    subscription.add(innerSubscribe(this.notifier, new SimpleInnerSubscriber(sampleSubscriber)));\n    return subscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  private value?: T;\n  private hasValue: boolean = false;\n\n  protected _next(value: T) {\n    this.value = value;\n    this.hasValue = true;\n  }\n\n  notifyNext(): void {\n    this.emitValue();\n  }\n\n  notifyComplete(): void {\n    this.emitValue();\n  }\n\n  emitValue() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next!(this.value!);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits the most recently emitted value from the source Observable within\n * periodic time intervals.\n *\n * <span class=\"informal\">Samples the source Observable at periodic time\n * intervals, emitting what it samples.</span>\n *\n * ![](sampleTime.png)\n *\n * `sampleTime` periodically looks at the source Observable and emits whichever\n * value it has most recently emitted since the previous sampling, unless the\n * source has not emitted anything since the previous sampling. The sampling\n * happens periodically in time every `period` milliseconds (or the time unit\n * defined by the optional `scheduler` argument). The sampling starts as soon as\n * the output Observable is subscribed.\n *\n * ## Example\n * Every second, emit the most recent click at most once\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { sampleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(sampleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sample}\n * @see {@link throttleTime}\n *\n * @param {number} period The sampling period expressed in milliseconds or the\n * time unit determined internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the sampling.\n * @return {Observable<T>} An Observable that emits the results of sampling the\n * values emitted by the source Observable at the specified time interval.\n * @method sampleTime\n * @owner Observable\n */\nexport function sampleTime<T>(period: number, scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SampleTimeOperator(period, scheduler));\n}\n\nclass SampleTimeOperator<T> implements Operator<T, T> {\n  constructor(private period: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SampleTimeSubscriber<T> extends Subscriber<T> {\n  lastValue: T;\n  hasValue: boolean = false;\n\n  constructor(destination: Subscriber<T>,\n              private period: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n    this.add(scheduler.schedule(dispatchNotification, period, { subscriber: this, period }));\n  }\n\n  protected _next(value: T) {\n    this.lastValue = value;\n    this.hasValue = true;\n  }\n\n  notifyNext() {\n    if (this.hasValue) {\n      this.hasValue = false;\n      this.destination.next(this.lastValue);\n    }\n  }\n}\n\nfunction dispatchNotification<T>(this: SchedulerAction<any>, state: any) {\n  let { subscriber, period } = state;\n  subscriber.notifyNext();\n  this.schedule(state, period);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\n\nimport { Observer, OperatorFunction } from '../types';\n\n/**\n * Compares all values of two observables in sequence using an optional comparator function\n * and returns an observable of a single boolean value representing whether or not the two sequences\n * are equal.\n *\n * <span class=\"informal\">Checks to see of all values emitted by both observables are equal, in order.</span>\n *\n * ![](sequenceEqual.png)\n *\n * `sequenceEqual` subscribes to two observables and buffers incoming values from each observable. Whenever either\n * observable emits a value, the value is buffered and the buffers are shifted and compared from the bottom\n * up; If any value pair doesn't match, the returned observable will emit `false` and complete. If one of the\n * observables completes, the operator will wait for the other observable to complete; If the other\n * observable emits before completing, the returned observable will emit `false` and complete. If one observable never\n * completes or emits after the other complets, the returned observable will never complete.\n *\n * ## Example\n * figure out if the Konami code matches\n * ```ts\n * import { from, fromEvent } from 'rxjs';\n * import { sequenceEqual, bufferCount, mergeMap, map } from 'rxjs/operators';\n *\n * const codes = from([\n *   'ArrowUp',\n *   'ArrowUp',\n *   'ArrowDown',\n *   'ArrowDown',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'ArrowLeft',\n *   'ArrowRight',\n *   'KeyB',\n *   'KeyA',\n *   'Enter', // no start key, clearly.\n * ]);\n *\n * const keys = fromEvent(document, 'keyup').pipe(map(e => e.code));\n * const matches = keys.pipe(\n *   bufferCount(11, 1),\n *   mergeMap(\n *     last11 => from(last11).pipe(sequenceEqual(codes)),\n *   ),\n * );\n * matches.subscribe(matched => console.log('Successful cheat at Contra? ', matched));\n * ```\n *\n * @see {@link combineLatest}\n * @see {@link zip}\n * @see {@link withLatestFrom}\n *\n * @param {Observable} compareTo The observable sequence to compare the source sequence to.\n * @param {function} [comparator] An optional function to compare each value pair\n * @return {Observable} An Observable of a single boolean value representing whether or not\n * the values emitted by both observables were equal in sequence.\n * @method sequenceEqual\n * @owner Observable\n */\nexport function sequenceEqual<T>(compareTo: Observable<T>,\n                                 comparator?: (a: T, b: T) => boolean): OperatorFunction<T, boolean> {\n  return (source: Observable<T>) => source.lift(new SequenceEqualOperator(compareTo, comparator));\n}\n\nexport class SequenceEqualOperator<T> implements Operator<T, boolean> {\n  constructor(private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n  }\n\n  call(subscriber: Subscriber<boolean>, source: any): any {\n    return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SequenceEqualSubscriber<T, R> extends Subscriber<T> {\n  private _a: T[] = [];\n  private _b: T[] = [];\n  private _oneComplete = false;\n\n  constructor(destination: Observer<R>,\n              private compareTo: Observable<T>,\n              private comparator: (a: T, b: T) => boolean) {\n    super(destination);\n    (this.destination as Subscription).add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, this)));\n  }\n\n  protected _next(value: T): void {\n    if (this._oneComplete && this._b.length === 0) {\n      this.emit(false);\n    } else {\n      this._a.push(value);\n      this.checkValues();\n    }\n  }\n\n  public _complete(): void {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n    this.unsubscribe();\n  }\n\n  checkValues() {\n    const { _a, _b, comparator } = this;\n    while (_a.length > 0 && _b.length > 0) {\n      let a = _a.shift();\n      let b = _b.shift();\n      let areEqual = false;\n      try {\n        areEqual = comparator ? comparator(a, b) : a === b;\n      } catch (e) {\n        this.destination.error(e);\n      }\n      if (!areEqual) {\n        this.emit(false);\n      }\n    }\n  }\n\n  emit(value: boolean) {\n    const { destination } = this;\n    destination.next(value);\n    destination.complete();\n  }\n\n  nextB(value: T) {\n    if (this._oneComplete && this._a.length === 0) {\n      this.emit(false);\n    } else {\n      this._b.push(value);\n      this.checkValues();\n    }\n  }\n\n  completeB() {\n    if (this._oneComplete) {\n      this.emit(this._a.length === 0 && this._b.length === 0);\n    } else {\n      this._oneComplete = true;\n    }\n  }\n}\n\nclass SequenceEqualCompareToSubscriber<T, R> extends Subscriber<T> {\n  constructor(destination: Observer<R>, private parent: SequenceEqualSubscriber<T, R>) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    this.parent.nextB(value);\n  }\n\n  protected _error(err: any): void {\n    this.parent.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.parent.completeB();\n    this.unsubscribe();\n  }\n}\n","import { Observable } from '../Observable';\nimport { multicast } from './multicast';\nimport { refCount } from './refCount';\nimport { Subject } from '../Subject';\n\nimport { MonoTypeOperatorFunction } from '../types';\n\nfunction shareSubjectFactory() {\n  return new Subject();\n}\n\n/**\n * Returns a new Observable that multicasts (shares) the original Observable. As long as there is at least one\n * Subscriber this Observable will be subscribed and emitting data. When all subscribers have unsubscribed it will\n * unsubscribe from the source Observable. Because the Observable is multicasting it makes the stream `hot`.\n * This is an alias for `multicast(() => new Subject()), refCount()`.\n *\n * ![](share.png)\n *\n * @return {Observable<T>} An Observable that upon connection causes the source Observable to emit items to its Observers.\n * @method share\n * @owner Observable\n */\nexport function share<T>(): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => refCount()(multicast(shareSubjectFactory)(source)) as Observable<T>;\n}\n","import { Observable } from '../Observable';\nimport { ReplaySubject } from '../ReplaySubject';\nimport { Subscription } from '../Subscription';\nimport { MonoTypeOperatorFunction, SchedulerLike } from '../types';\nimport { Subscriber } from '../Subscriber';\n\nexport interface ShareReplayConfig {\n  bufferSize?: number;\n  windowTime?: number;\n  refCount: boolean;\n  scheduler?: SchedulerLike;\n}\n\n/**\n * Share source and replay specified number of emissions on subscription.\n *\n * This operator is a specialization of `replay` that connects to a source observable\n * and multicasts through a `ReplaySubject` constructed with the specified arguments.\n * A successfully completed source will stay cached in the `shareReplayed observable` forever,\n * but an errored source can be retried.\n *\n * ## Why use shareReplay?\n * You generally want to use `shareReplay` when you have side-effects or taxing computations\n * that you do not wish to be executed amongst multiple subscribers.\n * It may also be valuable in situations where you know you will have late subscribers to\n * a stream that need access to previously emitted values.\n * This ability to replay values on subscription is what differentiates {@link share} and `shareReplay`.\n *\n * ![](shareReplay.png)\n *\n * ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { shareReplay, take } from 'rxjs/operators';\n *\n * const obs$ = interval(1000);\n * const shared$ = obs$.pipe(\n *   take(4),\n *   shareReplay(3)\n * );\n * shared$.subscribe(x => console.log('source A: ', x));\n * shared$.subscribe(y => console.log('source B: ', y));\n *\n * ```\n *\n * @see {@link publish}\n * @see {@link share}\n * @see {@link publishReplay}\n *\n * @param {Number} [bufferSize=Number.POSITIVE_INFINITY] Maximum element count of the replay buffer.\n * @param {Number} [windowTime=Number.POSITIVE_INFINITY] Maximum time length of the replay buffer in milliseconds.\n * @param {Scheduler} [scheduler] Scheduler where connected observers within the selector function\n * will be invoked on.\n * @return {Observable} An observable sequence that contains the elements of a sequence produced\n * by multicasting the source sequence within a selector function.\n * @method shareReplay\n * @owner Observable\n */\nexport function shareReplay<T>(\n  config: ShareReplayConfig\n): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(\n  bufferSize?: number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T>;\nexport function shareReplay<T>(\n  configOrBufferSize?: ShareReplayConfig | number,\n  windowTime?: number,\n  scheduler?: SchedulerLike\n): MonoTypeOperatorFunction<T> {\n  let config: ShareReplayConfig;\n  if (configOrBufferSize && typeof configOrBufferSize === 'object') {\n    config = configOrBufferSize as ShareReplayConfig;\n  } else {\n    config = {\n      bufferSize: configOrBufferSize as number | undefined,\n      windowTime,\n      refCount: false,\n      scheduler,\n    };\n  }\n  return (source: Observable<T>) => source.lift(shareReplayOperator(config));\n}\n\nfunction shareReplayOperator<T>({\n  bufferSize = Number.POSITIVE_INFINITY,\n  windowTime = Number.POSITIVE_INFINITY,\n  refCount: useRefCount,\n  scheduler,\n}: ShareReplayConfig) {\n  let subject: ReplaySubject<T> | undefined;\n  let refCount = 0;\n  let subscription: Subscription | undefined;\n  let hasError = false;\n  let isComplete = false;\n\n  return function shareReplayOperation(\n    this: Subscriber<T>,\n    source: Observable<T>\n  ) {\n    refCount++;\n    let innerSub: Subscription;\n    if (!subject || hasError) {\n      hasError = false;\n      subject = new ReplaySubject<T>(bufferSize, windowTime, scheduler);\n      innerSub = subject.subscribe(this);\n      subscription = source.subscribe({\n        next(value) {\n          subject.next(value);\n        },\n        error(err) {\n          hasError = true;\n          subject.error(err);\n        },\n        complete() {\n          isComplete = true;\n          subscription = undefined;\n          subject.complete();\n        },\n      });\n\n      // Here we need to check to see if the source synchronously completed. Although\n      // we're setting `subscription = undefined` in the completion handler, if the source\n      // is synchronous, that will happen *before* subscription is set by the return of\n      // the `subscribe` call.\n      if (isComplete) {\n        subscription = undefined;\n      }\n    } else {\n      innerSub = subject.subscribe(this);\n    }\n\n    this.add(() => {\n      refCount--;\n      innerSub.unsubscribe();\n      innerSub = undefined;\n      if (subscription && !isComplete && useRefCount && refCount === 0) {\n        subscription.unsubscribe();\n        subscription = undefined;\n        subject = undefined;\n      }\n    });\n  };\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { EmptyError } from '../util/EmptyError';\n\nimport { Observer, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that emits the single item emitted by the source Observable that matches a specified\n * predicate, if that Observable emits one such item. If the source Observable emits more than one such item or no\n * items, notify of an IllegalArgumentException or NoSuchElementException respectively. If the source Observable\n * emits items but none match the specified predicate then `undefined` is emitted.\n *\n * <span class=\"informal\">Like {@link first}, but emit with error notification if there is more than one value.</span>\n * ![](single.png)\n *\n * ## Example\n * emits 'error'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single());\n * numbers.subscribe(x => console.log('never get called'), e => console.log('error'));\n * // result\n * // 'error'\n * ```\n *\n * emits 'undefined'\n * ```ts\n * import { range } from 'rxjs';\n * import { single } from 'rxjs/operators';\n *\n * const numbers = range(1,5).pipe(single(x => x === 10));\n * numbers.subscribe(x => console.log(x));\n * // result\n * // 'undefined'\n * ```\n *\n * @see {@link first}\n * @see {@link find}\n * @see {@link findIndex}\n * @see {@link elementAt}\n *\n * @throws {EmptyError} Delivers an EmptyError to the Observer's `error`\n * callback if the Observable completes before any `next` notification was sent.\n * @param {Function} predicate - A predicate function to evaluate items emitted by the source Observable.\n * @return {Observable<T>} An Observable that emits the single item emitted by the source Observable that matches\n * the predicate or `undefined` when no items match.\n *\n * @method single\n * @owner Observable\n */\nexport function single<T>(predicate?: (value: T, index: number, source: Observable<T>) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SingleOperator(predicate, source));\n}\n\nclass SingleOperator<T> implements Operator<T, T> {\n  constructor(private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SingleSubscriber<T> extends Subscriber<T> {\n  private seenValue: boolean = false;\n  private singleValue: T;\n  private index: number = 0;\n\n  constructor(destination: Observer<T>,\n              private predicate?: (value: T, index: number, source: Observable<T>) => boolean,\n              private source?: Observable<T>) {\n    super(destination);\n  }\n\n  private applySingleValue(value: T): void {\n    if (this.seenValue) {\n      this.destination.error('Sequence contains more than one element');\n    } else {\n      this.seenValue = true;\n      this.singleValue = value;\n    }\n  }\n\n  protected _next(value: T): void {\n    const index = this.index++;\n\n    if (this.predicate) {\n      this.tryNext(value, index);\n    } else {\n      this.applySingleValue(value);\n    }\n  }\n\n  private tryNext(value: T, index: number): void {\n    try {\n      if (this.predicate(value, index, this.source)) {\n        this.applySingleValue(value);\n      }\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n\n  protected _complete(): void {\n    const destination = this.destination;\n\n    if (this.index > 0) {\n      destination.next(this.seenValue ? this.singleValue : undefined);\n      destination.complete();\n    } else {\n      destination.error(new EmptyError);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips the first `count` items emitted by the source Observable.\n *\n * ![](skip.png)\n *\n * @param {Number} count - The number of times, items emitted by source Observable should be skipped.\n * @return {Observable} An Observable that skips values emitted by the source Observable.\n *\n * @method skip\n * @owner Observable\n */\nexport function skip<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipOperator(count));\n}\n\nclass SkipOperator<T> implements Operator<T, T> {\n  constructor(private total: number) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipSubscriber(subscriber, this.total));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipSubscriber<T> extends Subscriber<T> {\n  count: number = 0;\n\n  constructor(destination: Subscriber<T>, private total: number) {\n    super(destination);\n  }\n\n  protected _next(x: T) {\n    if (++this.count > this.total) {\n      this.destination.next(x);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { ArgumentOutOfRangeError } from '../util/ArgumentOutOfRangeError';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Skip the last `count` values emitted by the source Observable.\n *\n * ![](skipLast.png)\n *\n * `skipLast` returns an Observable that accumulates a queue with a length\n * enough to store the first `count` values. As more values are received,\n * values are taken from the front of the queue and produced on the result\n * sequence. This causes values to be delayed.\n *\n * ## Example\n * Skip the last 2 values of an Observable with many values\n * ```ts\n * import { range } from 'rxjs';\n * import { skipLast } from 'rxjs/operators';\n *\n * const many = range(1, 5);\n * const skipLastTwo = many.pipe(skipLast(2));\n * skipLastTwo.subscribe(x => console.log(x));\n *\n * // Results in:\n * // 1 2 3\n * ```\n *\n * @see {@link skip}\n * @see {@link skipUntil}\n * @see {@link skipWhile}\n * @see {@link take}\n *\n * @throws {ArgumentOutOfRangeError} When using `skipLast(i)`, it throws\n * ArgumentOutOrRangeError if `i < 0`.\n *\n * @param {number} count Number of elements to skip from the end of the source Observable.\n * @returns {Observable<T>} An Observable that skips the last count values\n * emitted by the source Observable.\n * @method skipLast\n * @owner Observable\n */\nexport function skipLast<T>(count: number): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipLastOperator(count));\n}\n\nclass SkipLastOperator<T> implements Operator<T, T> {\n  constructor(private _skipCount: number) {\n    if (this._skipCount < 0) {\n      throw new ArgumentOutOfRangeError;\n    }\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    if (this._skipCount === 0) {\n      // If we don't want to skip any values then just subscribe\n      // to Subscriber without any further logic.\n      return source.subscribe(new Subscriber(subscriber));\n    } else {\n      return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));\n    }\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipLastSubscriber<T> extends Subscriber<T> {\n  private _ring: T[];\n  private _count: number = 0;\n\n  constructor(destination: Subscriber<T>, private _skipCount: number) {\n    super(destination);\n    this._ring = new Array<T>(_skipCount);\n  }\n\n  protected _next(value: T): void {\n    const skipCount = this._skipCount;\n    const count = this._count++;\n\n    if (count < skipCount) {\n      this._ring[count] = value;\n    } else {\n      const currentIndex = count % skipCount;\n      const ring = this._ring;\n      const oldValue = ring[currentIndex];\n\n      ring[currentIndex] = value;\n      this.destination.next(oldValue);\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, TeardownLogic, ObservableInput } from '../types';\nimport { Subscription } from '../Subscription';\nimport { SimpleOuterSubscriber, SimpleInnerSubscriber, innerSubscribe } from '../innerSubscribe';\n\n/**\n * Returns an Observable that skips items emitted by the source Observable until a second Observable emits an item.\n *\n * The `skipUntil` operator causes the observable stream to skip the emission of values ​​until the passed in observable emits the first value.\n * This can be particularly useful in combination with user interactions, responses of http requests or waiting for specific times to pass by.\n *\n * ![](skipUntil.png)\n *\n * Internally the `skipUntil` operator subscribes to the passed in observable (in the following called *notifier*) in order to recognize the emission\n * of its first value. When this happens, the operator unsubscribes from the *notifier* and starts emitting the values of the *source*\n * observable. It will never let the *source* observable emit any values if the *notifier* completes or throws an error without emitting\n * a value before.\n *\n * ## Example\n *\n * In the following example, all emitted values ​​of the interval observable are skipped until the user clicks anywhere within the page.\n *\n * ```ts\n * import { interval, fromEvent } from 'rxjs';\n * import { skipUntil } from 'rxjs/operators';\n *\n * const intervalObservable = interval(1000);\n * const click = fromEvent(document, 'click');\n *\n * const emitAfterClick = intervalObservable.pipe(\n *   skipUntil(click)\n * );\n * // clicked at 4.6s. output: 5...6...7...8........ or\n * // clicked at 7.3s. output: 8...9...10..11.......\n * const subscribe = emitAfterClick.subscribe(value => console.log(value));\n * ```\n *\n * @param {Observable} notifier - The second Observable that has to emit an item before the source Observable's elements begin to\n * be mirrored by the resulting Observable.\n * @return {Observable<T>} An Observable that skips items from the source Observable until the second Observable emits\n * an item, then emits the remaining items.\n * @method skipUntil\n * @owner Observable\n */\nexport function skipUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipUntilOperator(notifier));\n}\n\nclass SkipUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(destination: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipUntilSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n\n  private hasValue: boolean = false;\n  private innerSubscription?: Subscription;\n\n  constructor(destination: Subscriber<R>, notifier: ObservableInput<any>) {\n    super(destination);\n    const innerSubscriber = new SimpleInnerSubscriber(this);\n    this.add(innerSubscriber);\n    this.innerSubscription = innerSubscriber;\n    const innerSubscription = innerSubscribe(notifier, innerSubscriber);\n    // The returned subscription will usually be the subscriber that was\n    // passed. However, interop subscribers will be wrapped and for\n    // unsubscriptions to chain correctly, the wrapper needs to be added, too.\n    if (innerSubscription !== innerSubscriber) {\n      this.add(innerSubscription);\n      this.innerSubscription = innerSubscription;\n    }\n  }\n\n  protected _next(value: T) {\n    if (this.hasValue) {\n      super._next(value);\n    }\n  }\n\n  notifyNext(): void {\n    this.hasValue = true;\n    if (this.innerSubscription) {\n      this.innerSubscription.unsubscribe();\n    }\n  }\n\n  notifyComplete() {\n    /* do nothing */\n  }\n}\n","import { Observable } from '../Observable';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\n/**\n * Returns an Observable that skips all items emitted by the source Observable as long as a specified condition holds\n * true, but emits all further source items as soon as the condition becomes false.\n *\n * ![](skipWhile.png)\n *\n * @param {Function} predicate - A function to test each item emitted from the source Observable.\n * @return {Observable<T>} An Observable that begins emitting items emitted by the source Observable when the\n * specified predicate becomes false.\n * @method skipWhile\n * @owner Observable\n */\nexport function skipWhile<T>(predicate: (value: T, index: number) => boolean): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new SkipWhileOperator(predicate));\n}\n\nclass SkipWhileOperator<T> implements Operator<T, T> {\n  constructor(private predicate: (value: T, index: number) => boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass SkipWhileSubscriber<T> extends Subscriber<T> {\n  private skipping: boolean = true;\n  private index: number = 0;\n\n  constructor(destination: Subscriber<T>,\n              private predicate: (value: T, index: number) => boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    if (this.skipping) {\n      this.tryCallPredicate(value);\n    }\n\n    if (!this.skipping) {\n      destination.next(value);\n    }\n  }\n\n  private tryCallPredicate(value: T): void {\n    try {\n      const result = this.predicate(value, this.index++);\n      this.skipping = Boolean(result);\n    } catch (err) {\n      this.destination.error(err);\n    }\n  }\n}\n","import { Observable } from '../Observable';\nimport { concat } from '../observable/concat';\nimport { isScheduler } from '../util/isScheduler';\nimport { MonoTypeOperatorFunction, OperatorFunction, SchedulerLike } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T>(scheduler: SchedulerLike): MonoTypeOperatorFunction<T>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D>(v1: D, scheduler: SchedulerLike): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E>(v1: D, v2: E, scheduler: SchedulerLike): OperatorFunction<T, T | D | E>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I, scheduler: SchedulerLike): OperatorFunction<T, T | D | E | F | G | H | I>;\n\nexport function startWith<T, D>(v1: D): OperatorFunction<T, T | D>;\nexport function startWith<T, D, E>(v1: D, v2: E): OperatorFunction<T, T | D | E>;\nexport function startWith<T, D, E, F>(v1: D, v2: E, v3: F): OperatorFunction<T, T | D | E | F>;\nexport function startWith<T, D, E, F, G>(v1: D, v2:  E, v3: F, v4: G): OperatorFunction<T, T | D | E | F | G>;\nexport function startWith<T, D, E, F, G, H>(v1: D, v2: E, v3: F, v4: G, v5: H): OperatorFunction<T, T | D | E | F | G | H>;\nexport function startWith<T, D, E, F, G, H, I>(v1: D, v2: E, v3: F, v4: G, v5: H, v6: I): OperatorFunction<T, T | D | E | F | G | H | I>;\nexport function startWith<T, D = T>(...array: D[]): OperatorFunction<T, T | D>;\n/** @deprecated use {@link scheduled} and {@link concatAll} (e.g. `scheduled([[a, b, c], source], scheduler).pipe(concatAll())`) */\nexport function startWith<T, D = T>(...array: Array<D | SchedulerLike>): OperatorFunction<T, T | D>;\n/* tslint:enable:max-line-length */\n\n/**\n * Returns an Observable that emits the items you specify as arguments before it begins to emit\n * items emitted by the source Observable.\n *\n * <span class=\"informal\">First emits its arguments in order, and then any\n * emissions from the source.</span>\n *\n * ![](startWith.png)\n *\n * ## Examples\n *\n * Start the chain of emissions with `\"first\"`, `\"second\"`\n *\n * ```ts\n * import { of } from 'rxjs';\n * import { startWith } from 'rxjs/operators';\n *\n * of(\"from source\")\n *   .pipe(startWith(\"first\", \"second\"))\n *   .subscribe(x => console.log(x));\n *\n * // results:\n * //   \"first\"\n * //   \"second\"\n * //   \"from source\"\n * ```\n *\n * @param {...T} values - Items you want the modified Observable to emit first.\n * @param {SchedulerLike} [scheduler] - A {@link SchedulerLike} to use for scheduling\n * the emissions of the `next` notifications.\n * @return {Observable} An Observable that emits the items in the specified Iterable and then emits the items\n * emitted by the source Observable.\n * @method startWith\n * @owner Observable\n */\nexport function startWith<T, D>(...array: Array<T | SchedulerLike>): OperatorFunction<T, T | D> {\n  const scheduler = array[array.length - 1] as SchedulerLike;\n  if (isScheduler(scheduler)) {\n    // deprecated path\n    array.pop();\n    return (source: Observable<T>) => concat(array as T[], source, scheduler);\n  } else {\n    return (source: Observable<T>) => concat(array as T[], source);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { SubscribeOnObservable } from '../observable/SubscribeOnObservable';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Asynchronously subscribes Observers to this Observable on the specified {@link SchedulerLike}.\n *\n * With `subscribeOn` you can decide what type of scheduler a specific Observable will be using when it is subscribed to.\n *\n * Schedulers control the speed and order of emissions to observers from an Observable stream.\n *\n * ![](subscribeOn.png)\n *\n * ## Example\n * Given the following code:\n * ```javascript\n * import { of, merge } from 'rxjs';\n *\n * const a = of(1, 2, 3, 4);\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * Both Observable `a` and `b` will emit their values directly and synchronously once they are subscribed to.\n * This will result in the output of `1 2 3 4 5 6 7 8 9`.\n *\n * But if we instead us the `subscribeOn` operator declaring that we want to use the {@link asyncScheduler} for values emited by Observable `a`:\n * ```javascript\n * import { of, merge, asyncScheduler } from 'rxjs';\n * import { subscribeOn } from 'rxjs/operators';\n *\n * const a = of(1, 2, 3, 4).pipe(subscribeOn(asyncScheduler));\n * const b = of(5, 6, 7, 8, 9);\n * merge(a, b).subscribe(console.log);\n * ```\n *\n * The output will instead be `5 6 7 8 9 1 2 3 4`.\n * The reason for this is that Observable `b` emits its values directly and synchronously like before\n * but the emissions from `a` are scheduled on the event loop because we are now using the {@link asyncScheduler} for that specific Observable.\n *\n * @param {SchedulerLike} scheduler - The {@link SchedulerLike} to perform subscription actions on.\n * @return {Observable<T>} The source Observable modified so that its subscriptions happen on the specified {@link SchedulerLike}.\n .\n * @method subscribeOn\n * @owner Observable\n */\nexport function subscribeOn<T>(scheduler: SchedulerLike, delay: number = 0): MonoTypeOperatorFunction<T> {\n  return function subscribeOnOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new SubscribeOnOperator<T>(scheduler, delay));\n  };\n}\n\nclass SubscribeOnOperator<T> implements Operator<T, T> {\n  constructor(private scheduler: SchedulerLike,\n              private delay: number) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return new SubscribeOnObservable<T>(\n      source, this.delay, this.scheduler\n    ).subscribe(subscriber);\n  }\n}\n","import { SchedulerLike, SchedulerAction } from '../types';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { Observable } from '../Observable';\nimport { asap } from '../scheduler/asap';\nimport { isNumeric } from '../util/isNumeric';\n\nexport interface DispatchArg<T> {\n  source: Observable<T>;\n  subscriber: Subscriber<T>;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @extends {Ignored}\n * @hide true\n */\nexport class SubscribeOnObservable<T> extends Observable<T> {\n  /** @nocollapse */\n  static create<T>(source: Observable<T>, delay: number = 0, scheduler: SchedulerLike = asap): Observable<T> {\n    return new SubscribeOnObservable(source, delay, scheduler);\n  }\n\n  /** @nocollapse */\n  static dispatch<T>(this: SchedulerAction<T>, arg: DispatchArg<T>): Subscription {\n    const { source, subscriber } = arg;\n    return this.add(source.subscribe(subscriber));\n  }\n\n  constructor(public source: Observable<T>,\n              private delayTime: number = 0,\n              private scheduler: SchedulerLike = asap) {\n    super();\n    if (!isNumeric(delayTime) || delayTime < 0) {\n      this.delayTime = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n      this.scheduler = asap;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>) {\n    const delay = this.delayTime;\n    const source = this.source;\n    const scheduler = this.scheduler;\n\n    return scheduler.schedule<DispatchArg<any>>(SubscribeOnObservable.dispatch, delay, {\n      source, subscriber\n    });\n  }\n}\n","import {OperatorFunction, ObservableInput} from '../types';\nimport { switchMap } from './switchMap';\nimport { identity } from '../util/identity';\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T>;\nexport function switchAll<R>(): OperatorFunction<any, R>;\n\n/**\n * Converts a higher-order Observable into a first-order Observable\n * producing values only from the most recent observable sequence\n *\n * <span class=\"informal\">Flattens an Observable-of-Observables.</span>\n *\n * ![](switchAll.png)\n *\n * `switchAll` subscribes to a source that is an observable of observables, also known as a\n * \"higher-order observable\" (or `Observable<Observable<T>>`). It subscribes to the most recently\n * provided \"inner observable\" emitted by the source, unsubscribing from any previously subscribed\n * to inner observable, such that only the most recent inner observable may be subscribed to at\n * any point in time. The resulting observable returned by `switchAll` will only complete if the\n * source observable completes, *and* any currently subscribed to inner observable also has completed,\n * if there are any.\n *\n * ## Examples\n * Spawn a new interval observable for each click event, but for every new\n * click, cancel the previous interval and subscribe to the new one.\n *\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchAll, map, tap } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click').pipe(tap(() => console.log('click')));\n * const source = clicks.pipe(map((ev) => interval(1000)));\n *\n * source.pipe(\n *   switchAll()\n * ).subscribe(x => console.log(x));\n *\n * // Output\n * // click\n * // 1\n * // 2\n * // 3\n * // 4\n * // ...\n * // click\n * // 1\n * // 2\n * // 3\n * // ...\n * // click\n * // ...\n * ```\n *\n * @see {@link combineAll}\n * @see {@link concatAll}\n * @see {@link exhaust}\n * @see {@link switchMap}\n * @see {@link switchMapTo}\n * @see {@link mergeAll}\n */\n\nexport function switchAll<T>(): OperatorFunction<ObservableInput<T>, T> {\n  return switchMap(identity);\n}\n","import { ObservableInput, OperatorFunction } from '../types';\nimport { switchMap } from './switchMap';\n\n/* tslint:disable:max-line-length */\nexport function switchMapTo<R>(observable: ObservableInput<R>): OperatorFunction<any, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, R>(observable: ObservableInput<R>, resultSelector: undefined): OperatorFunction<T, R>;\n/** @deprecated resultSelector is no longer supported. Switch to using switchMap with an inner map */\nexport function switchMapTo<T, I, R>(observable: ObservableInput<I>, resultSelector: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * Projects each source value to the same Observable which is flattened multiple\n * times with {@link switchMap} in the output Observable.\n *\n * <span class=\"informal\">It's like {@link switchMap}, but maps each value\n * always to the same inner Observable.</span>\n *\n * ![](switchMapTo.png)\n *\n * Maps each source value to the given Observable `innerObservable` regardless\n * of the source value, and then flattens those resulting Observables into one\n * single Observable, which is the output Observable. The output Observables\n * emits values only from the most recently emitted instance of\n * `innerObservable`.\n *\n * ## Example\n * Rerun an interval Observable on every click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { switchMapTo } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(switchMapTo(interval(1000)));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link concatMapTo}\n * @see {@link switchAll}\n * @see {@link switchMap}\n * @see {@link mergeMapTo}\n *\n * @param {ObservableInput} innerObservable An Observable to replace each value from\n * the source Observable.\n * @return {Observable} An Observable that emits items from the given\n * `innerObservable` (and optionally transformed through the deprecated `resultSelector`)\n * every time a value is emitted on the source Observable, and taking only the values\n * from the most recently projected inner Observable.\n * @method switchMapTo\n * @owner Observable\n */\nexport function switchMapTo<T, I, R>(\n  innerObservable: ObservableInput<I>,\n  resultSelector?: (outerValue: T, innerValue: I, outerIndex: number, innerIndex: number) => R\n): OperatorFunction<T, I|R> {\n  return resultSelector ? switchMap(() => innerObservable, resultSelector) : switchMap(() => innerObservable);\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\n\nimport { MonoTypeOperatorFunction, TeardownLogic } from '../types';\nimport { innerSubscribe, SimpleInnerSubscriber, SimpleOuterSubscriber } from '../innerSubscribe';\n\n/**\n * Emits the values emitted by the source Observable until a `notifier`\n * Observable emits a value.\n *\n * <span class=\"informal\">Lets values pass until a second Observable,\n * `notifier`, emits a value. Then, it completes.</span>\n *\n * ![](takeUntil.png)\n *\n * `takeUntil` subscribes and begins mirroring the source Observable. It also\n * monitors a second Observable, `notifier` that you provide. If the `notifier`\n * emits a value, the output Observable stops mirroring the source Observable\n * and completes. If the `notifier` doesn't emit any value and completes\n * then `takeUntil` will pass all values.\n *\n * ## Example\n * Tick every second until the first click happens\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { takeUntil } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const clicks = fromEvent(document, 'click');\n * const result = source.pipe(takeUntil(clicks));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeWhile}\n * @see {@link skip}\n *\n * @param {Observable} notifier The Observable whose first emitted value will\n * cause the output Observable of `takeUntil` to stop emitting values from the\n * source Observable.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable until such time as `notifier` emits its first value.\n * @method takeUntil\n * @owner Observable\n */\nexport function takeUntil<T>(notifier: Observable<any>): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new TakeUntilOperator(notifier));\n}\n\nclass TakeUntilOperator<T> implements Operator<T, T> {\n  constructor(private notifier: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    const takeUntilSubscriber = new TakeUntilSubscriber(subscriber);\n    const notifierSubscription = innerSubscribe(this.notifier, new SimpleInnerSubscriber(takeUntilSubscriber));\n    if (notifierSubscription && !takeUntilSubscriber.seenValue) {\n      takeUntilSubscriber.add(notifierSubscription);\n      return source.subscribe(takeUntilSubscriber);\n    }\n    return takeUntilSubscriber;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeUntilSubscriber<T, R> extends SimpleOuterSubscriber<T, R> {\n  seenValue = false;\n\n  constructor(destination: Subscriber<any>, ) {\n    super(destination);\n  }\n\n  notifyNext(): void {\n    this.seenValue = true;\n    this.complete();\n  }\n\n  notifyComplete(): void {\n    // noop\n  }\n}\n","import { Operator } from '../Operator';\nimport { Observable } from '../Observable';\nimport { Subscriber } from '../Subscriber';\nimport { OperatorFunction, MonoTypeOperatorFunction, TeardownLogic } from '../types';\n\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S): OperatorFunction<T, S>;\nexport function takeWhile<T, S extends T>(predicate: (value: T, index: number) => value is S, inclusive: false): OperatorFunction<T, S>;\nexport function takeWhile<T>(predicate: (value: T, index: number) => boolean, inclusive?: boolean): MonoTypeOperatorFunction<T>;\n\n/**\n * Emits values emitted by the source Observable so long as each value satisfies\n * the given `predicate`, and then completes as soon as this `predicate` is not\n * satisfied.\n *\n * <span class=\"informal\">Takes values from the source only while they pass the\n * condition given. When the first value does not satisfy, it completes.</span>\n *\n * ![](takeWhile.png)\n *\n * `takeWhile` subscribes and begins mirroring the source Observable. Each value\n * emitted on the source is given to the `predicate` function which returns a\n * boolean, representing a condition to be satisfied by the source values. The\n * output Observable emits the source values until such time as the `predicate`\n * returns false, at which point `takeWhile` stops mirroring the source\n * Observable and completes the output Observable.\n *\n * ## Example\n * Emit click events only while the clientX property is greater than 200\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { takeWhile } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(takeWhile(ev => ev.clientX > 200));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link take}\n * @see {@link takeLast}\n * @see {@link takeUntil}\n * @see {@link skip}\n *\n * @param {function(value: T, index: number): boolean} predicate A function that\n * evaluates a value emitted by the source Observable and returns a boolean.\n * Also takes the (zero-based) index as the second argument.\n * @param {boolean} inclusive When set to `true` the value that caused\n * `predicate` to return `false` will also be emitted.\n * @return {Observable<T>} An Observable that emits the values from the source\n * Observable so long as each value satisfies the condition defined by the\n * `predicate`, then completes.\n * @method takeWhile\n * @owner Observable\n */\nexport function takeWhile<T>(\n    predicate: (value: T, index: number) => boolean,\n    inclusive = false): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) =>\n             source.lift(new TakeWhileOperator(predicate, inclusive));\n}\n\nclass TakeWhileOperator<T> implements Operator<T, T> {\n  constructor(\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {}\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n        new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass TakeWhileSubscriber<T> extends Subscriber<T> {\n  private index: number = 0;\n\n  constructor(\n      destination: Subscriber<T>,\n      private predicate: (value: T, index: number) => boolean,\n      private inclusive: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T): void {\n    const destination = this.destination;\n    let result: boolean;\n    try {\n      result = this.predicate(value, this.index++);\n    } catch (err) {\n      destination.error(err);\n      return;\n    }\n    this.nextOrComplete(value, result);\n  }\n\n  private nextOrComplete(value: T, predicateResult: boolean): void {\n    const destination = this.destination;\n    if (Boolean(predicateResult)) {\n      destination.next(value);\n    } else {\n      if (this.inclusive) {\n        destination.next(value);\n      }\n      destination.complete();\n    }\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { MonoTypeOperatorFunction, PartialObserver, TeardownLogic } from '../types';\nimport { noop } from '../util/noop';\nimport { isFunction } from '../util/isFunction';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: null | undefined, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of an error callback */\nexport function tap<T>(next: null | undefined, error: (error: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\n/** @deprecated Use an observer instead of a complete callback */\nexport function tap<T>(next: (value: T) => void, error: null | undefined, complete: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(next?: (x: T) => void, error?: (e: any) => void, complete?: () => void): MonoTypeOperatorFunction<T>;\nexport function tap<T>(observer: PartialObserver<T>): MonoTypeOperatorFunction<T>;\n/* tslint:enable:max-line-length */\n\n/**\n * Perform a side effect for every emission on the source Observable, but return\n * an Observable that is identical to the source.\n *\n * <span class=\"informal\">Intercepts each emission on the source and runs a\n * function, but returns an output which is identical to the source as long as errors don't occur.</span>\n *\n * ![](do.png)\n *\n * Returns a mirrored Observable of the source Observable, but modified so that\n * the provided Observer is called to perform a side effect for every value,\n * error, and completion emitted by the source. Any errors that are thrown in\n * the aforementioned Observer or handlers are safely sent down the error path\n * of the output Observable.\n *\n * This operator is useful for debugging your Observables for the correct values\n * or performing other side effects.\n *\n * Note: this is different to a `subscribe` on the Observable. If the Observable\n * returned by `tap` is not subscribed, the side effects specified by the\n * Observer will never happen. `tap` therefore simply spies on existing\n * execution, it does not trigger an execution to happen like `subscribe` does.\n *\n * ## Example\n * Map every click to the clientX position of that click, while also logging the click event\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { tap, map } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const positions = clicks.pipe(\n *   tap(ev => console.log(ev)),\n *   map(ev => ev.clientX),\n * );\n * positions.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link map}\n * @see {@link Observable#subscribe}\n *\n * @param {Observer|function} [nextOrObserver] A normal Observer object or a\n * callback for `next`.\n * @param {function} [error] Callback for errors in the source.\n * @param {function} [complete] Callback for the completion of the source.\n * @return {Observable} An Observable identical to the source, but runs the\n * specified Observer or callback(s) for each item.\n * @name tap\n */\nexport function tap<T>(nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n                       error?: (e: any) => void,\n                       complete?: () => void): MonoTypeOperatorFunction<T> {\n  return function tapOperatorFunction(source: Observable<T>): Observable<T> {\n    return source.lift(new DoOperator(nextOrObserver, error, complete));\n  };\n}\n\nclass DoOperator<T> implements Operator<T, T> {\n  constructor(private nextOrObserver?: PartialObserver<T> | ((x: T) => void),\n              private error?: (e: any) => void,\n              private complete?: () => void) {\n  }\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\n\nclass TapSubscriber<T> extends Subscriber<T> {\n  private _context: any;\n\n  private _tapNext: ((value: T) => void) = noop;\n\n  private _tapError: ((err: any) => void) = noop;\n\n  private _tapComplete: (() => void) = noop;\n\n  constructor(destination: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n      super(destination);\n      this._tapError = error || noop;\n      this._tapComplete = complete || noop;\n      if (isFunction(observerOrNext)) {\n        this._context = this;\n        this._tapNext = observerOrNext;\n      } else if (observerOrNext) {\n        this._context = observerOrNext;\n        this._tapNext = observerOrNext.next || noop;\n        this._tapError = observerOrNext.error || noop;\n        this._tapComplete = observerOrNext.complete || noop;\n      }\n    }\n\n  _next(value: T) {\n    try {\n      this._tapNext.call(this._context, value);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.next(value);\n  }\n\n  _error(err: any) {\n    try {\n      this._tapError.call(this._context, err);\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    this.destination.error(err);\n  }\n\n  _complete() {\n    try {\n      this._tapComplete.call(this._context, );\n    } catch (err) {\n      this.destination.error(err);\n      return;\n    }\n    return this.destination.complete();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Subscription } from '../Subscription';\nimport { async } from '../scheduler/async';\nimport { Observable } from '../Observable';\nimport { ThrottleConfig, defaultThrottleConfig } from './throttle';\nimport { MonoTypeOperatorFunction, SchedulerLike, TeardownLogic } from '../types';\n\n/**\n * Emits a value from the source Observable, then ignores subsequent source\n * values for `duration` milliseconds, then repeats this process.\n *\n * <span class=\"informal\">Lets a value pass, then ignores source values for the\n * next `duration` milliseconds.</span>\n *\n * ![](throttleTime.png)\n *\n * `throttleTime` emits the source Observable values on the output Observable\n * when its internal timer is disabled, and ignores source values when the timer\n * is enabled. Initially, the timer is disabled. As soon as the first source\n * value arrives, it is forwarded to the output Observable, and then the timer\n * is enabled. After `duration` milliseconds (or the time unit determined\n * internally by the optional `scheduler`) has passed, the timer is disabled,\n * and this process repeats for the next source value. Optionally takes a\n * {@link SchedulerLike} for managing timers.\n *\n * ## Examples\n *\n * #### Limit click rate\n *\n * Emit clicks at a rate of at most one click per second\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { throttleTime } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(throttleTime(1000));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * #### Double Click\n *\n * The following example only emits clicks which happen within a subsequent\n * delay of 400ms of the previous click. This for example can emulate a double\n * click. It makes use of the `trailing` parameter of the throttle configuration.\n *\n * ```ts\n * import { fromEvent, asyncScheduler } from 'rxjs';\n * import { throttleTime, withLatestFrom } from 'rxjs/operators';\n *\n * // defaultThottleConfig = { leading: true, trailing: false }\n * const throttleConfig = {\n *   leading: false,\n *   trailing: true\n * }\n *\n * const click = fromEvent(document, 'click');\n * const doubleClick = click.pipe(\n *   throttleTime(400, asyncScheduler, throttleConfig)\n * );\n *\n * doubleClick.subscribe((throttleValue: Event) => {\n *   console.log(`Double-clicked! Timestamp: ${throttleValue.timeStamp}`);\n * });\n * ```\n *\n * If you enable the `leading` parameter in this example, the output would be the primary click and\n * the double click, but restricts additional clicks within 400ms.\n *\n * @see {@link auditTime}\n * @see {@link debounceTime}\n * @see {@link delay}\n * @see {@link sampleTime}\n * @see {@link throttle}\n *\n * @param {number} duration Time to wait before emitting another value after\n * emitting the last value, measured in milliseconds or the time unit determined\n * internally by the optional `scheduler`.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for\n * managing the timers that handle the throttling.\n * @param {Object} config a configuration object to define `leading` and\n * `trailing` behavior. Defaults to `{ leading: true, trailing: false }`.\n * @return {Observable<T>} An Observable that performs the throttle operation to\n * limit the rate of emissions from the source.\n * @method throttleTime\n * @owner Observable\n */\nexport function throttleTime<T>(duration: number,\n                                scheduler: SchedulerLike = async,\n                                config: ThrottleConfig = defaultThrottleConfig): MonoTypeOperatorFunction<T> {\n  return (source: Observable<T>) => source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing));\n}\n\nclass ThrottleTimeOperator<T> implements Operator<T, T> {\n  constructor(private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n  }\n\n  call(subscriber: Subscriber<T>, source: any): TeardownLogic {\n    return source.subscribe(\n      new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing)\n    );\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass ThrottleTimeSubscriber<T> extends Subscriber<T> {\n  private throttled: Subscription;\n  private _hasTrailingValue: boolean = false;\n  private _trailingValue: T = null;\n\n  constructor(destination: Subscriber<T>,\n              private duration: number,\n              private scheduler: SchedulerLike,\n              private leading: boolean,\n              private trailing: boolean) {\n    super(destination);\n  }\n\n  protected _next(value: T) {\n    if (this.throttled) {\n      if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    } else {\n      this.add(this.throttled = this.scheduler.schedule<DispatchArg<T>>(dispatchNext, this.duration, { subscriber: this }));\n      if (this.leading) {\n        this.destination.next(value);\n      } else if (this.trailing) {\n        this._trailingValue = value;\n        this._hasTrailingValue = true;\n      }\n    }\n  }\n\n  protected _complete() {\n    if (this._hasTrailingValue) {\n      this.destination.next(this._trailingValue);\n      this.destination.complete();\n    } else {\n      this.destination.complete();\n    }\n  }\n\n  clearThrottle() {\n    const throttled = this.throttled;\n    if (throttled) {\n      if (this.trailing && this._hasTrailingValue) {\n        this.destination.next(this._trailingValue);\n        this._trailingValue = null;\n        this._hasTrailingValue = false;\n      }\n      throttled.unsubscribe();\n      this.remove(throttled);\n      this.throttled = null;\n    }\n  }\n}\n\ninterface DispatchArg<T> {\n  subscriber: ThrottleTimeSubscriber<T>;\n}\n\nfunction dispatchNext<T>(arg: DispatchArg<T>) {\n  const { subscriber } = arg;\n  subscriber.clearThrottle();\n}\n","\nimport { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { SchedulerLike, OperatorFunction } from '../types';\nimport { scan } from './scan';\nimport { defer } from '../observable/defer';\nimport { map } from './map';\n\n/**\n *\n * Emits an object containing the current value, and the time that has\n * passed between emitting the current value and the previous value, which is\n * calculated by using the provided `scheduler`'s `now()` method to retrieve\n * the current time at each emission, then calculating the difference. The `scheduler`\n * defaults to {@link asyncScheduler}, so by default, the `interval` will be in\n * milliseconds.\n *\n * <span class=\"informal\">Convert an Observable that emits items into one that\n * emits indications of the amount of time elapsed between those emissions.</span>\n *\n * ![](timeinterval.png)\n *\n * ## Examples\n * Emit inteval between current value with the last value\n *\n * ```ts\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeInterval())\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value),\n *     err => console.log(err),\n * );\n *\n * // NOTE: The values will never be this precise,\n * // intervals created with `interval` or `setInterval`\n * // are non-deterministic.\n *\n * // {value: 0, interval: 1000}\n * // {value: 1, interval: 1000}\n * // {value: 2, interval: 1000}\n * ```\n *\n * @param {SchedulerLike} [scheduler] Scheduler used to get the current time.\n * @return {Observable<{ interval: number, value: T }>} Observable that emit infomation about value and interval\n * @method timeInterval\n */\nexport function timeInterval<T>(scheduler: SchedulerLike = async): OperatorFunction<T, TimeInterval<T>> {\n  return (source: Observable<T>) => defer(() => {\n    return source.pipe(\n      // TODO(benlesh): correct these typings.\n      scan(\n        ({ current }, value) => ({ value, current: scheduler.now(), last: current }),\n        { current: scheduler.now(), value: undefined,  last: undefined }\n      ) as any,\n      map<any, TimeInterval<T>>(({ current, last, value }) => new TimeInterval(value, current - last)),\n    );\n  });\n}\n\n// TODO(benlesh): make this an interface, export the interface, but not the implemented class,\n// there's no reason users should be manually creating this type.\n\n/**\n * @deprecated exposed API, use as interface only.\n */\nexport class TimeInterval<T> {\n  constructor(public value: T, public interval: number) {}\n}\n","import { async } from '../scheduler/async';\nimport { isDate } from '../util/isDate';\nimport { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { TimeoutError } from '../util/TimeoutError';\nimport { MonoTypeOperatorFunction, SchedulerAction, SchedulerLike, TeardownLogic } from '../types';\nimport { timeoutWith } from './timeoutWith';\nimport { throwError } from '../observable/throwError';\n\n/**\n *\n * Errors if Observable does not emit a value in given time span.\n *\n * <span class=\"informal\">Timeouts on Observable that doesn't emit values fast enough.</span>\n *\n * ![](timeout.png)\n *\n * `timeout` operator accepts as an argument either a number or a Date.\n *\n * If number was provided, it returns an Observable that behaves like a source\n * Observable, unless there is a period of time where there is no value emitted.\n * So if you provide `100` as argument and first value comes after 50ms from\n * the moment of subscription, this value will be simply re-emitted by the resulting\n * Observable. If however after that 100ms passes without a second value being emitted,\n * stream will end with an error and source Observable will be unsubscribed.\n * These checks are performed throughout whole lifecycle of Observable - from the moment\n * it was subscribed to, until it completes or errors itself. Thus every value must be\n * emitted within specified period since previous value.\n *\n * If provided argument was Date, returned Observable behaves differently. It throws\n * if Observable did not complete before provided Date. This means that periods between\n * emission of particular values do not matter in this case. If Observable did not complete\n * before provided Date, source Observable will be unsubscribed. Other than that, resulting\n * stream behaves just as source Observable.\n *\n * `timeout` accepts also a Scheduler as a second parameter. It is used to schedule moment (or moments)\n * when returned Observable will check if source stream emitted value or completed.\n *\n * ## Examples\n * Check if ticks are emitted within certain timespan\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(timeout(1100))      // Let's use bigger timespan to be safe,\n *                                  // since `interval` might fire a bit later then scheduled.\n * .subscribe(\n *     value => console.log(value), // Will emit numbers just as regular `interval` would.\n *     err => console.log(err),     // Will never be called.\n * );\n *\n * seconds.pipe(timeout(900))\n * .subscribe(\n *     value => console.log(value), // Will never be called.\n *     err => console.log(err),     // Will emit error before even first value is emitted,\n *                                  // since it did not arrive within 900ms period.\n * );\n * ```\n *\n * Use Date to check if Observable completed\n * ```ts\n * import { interval } from 'rxjs';\n * import { timeout } from 'rxjs/operators';\n *\n * const seconds = interval(1000);\n *\n * seconds.pipe(\n *   timeout(new Date(\"December 17, 2020 03:24:00\")),\n * )\n * .subscribe(\n *     value => console.log(value), // Will emit values as regular `interval` would\n *                                  // until December 17, 2020 at 03:24:00.\n *     err => console.log(err)      // On December 17, 2020 at 03:24:00 it will emit an error,\n *                                  // since Observable did not complete by then.\n * );\n * ```\n * @see {@link timeoutWith}\n *\n * @param {number|Date} due Number specifying period within which Observable must emit values\n *                          or Date specifying before when Observable should complete\n * @param {SchedulerLike} [scheduler] Scheduler controlling when timeout checks occur.\n * @return {Observable<T>} Observable that mirrors behaviour of source, unless timeout checks fail.\n * @method timeout\n * @owner Observable\n */\nexport function timeout<T>(due: number | Date,\n                           scheduler: SchedulerLike = async): MonoTypeOperatorFunction<T> {\n  return timeoutWith(due, throwError(new TimeoutError()), scheduler);\n}\n","\nimport { async } from '../scheduler/async';\nimport { OperatorFunction, SchedulerLike, Timestamp as TimestampInterface } from '../types';\nimport { map } from './map';\n\n/**\n * Attaches a timestamp to each item emitted by an observable indicating when it was emitted\n *\n * The `timestamp` operator maps the *source* observable stream to an object of type\n * `{value: T, timestamp: R}`. The properties are generically typed. The `value` property contains the value\n * and type of the *source* observable. The `timestamp` is generated by the schedulers `now` function. By\n * default it uses the *async* scheduler which simply returns `Date.now()` (milliseconds since 1970/01/01\n * 00:00:00:000) and therefore is of type `number`.\n *\n * ![](timestamp.png)\n *\n * ## Example\n *\n * In this example there is a timestamp attached to the documents click event.\n *\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { timestamp } from 'rxjs/operators';\n *\n * const clickWithTimestamp = fromEvent(document, 'click').pipe(\n *   timestamp()\n * );\n *\n * // Emits data of type {value: MouseEvent, timestamp: number}\n * clickWithTimestamp.subscribe(data => {\n *   console.log(data);\n * });\n * ```\n *\n * @param scheduler\n * @return {Observable<Timestamp<any>>|WebSocketSubject<T>|Observable<T>}\n * @method timestamp\n * @owner Observable\n */\nexport function timestamp<T>(scheduler: SchedulerLike = async): OperatorFunction<T, Timestamp<T>> {\n  return map((value: T) => new Timestamp(value, scheduler.now()));\n  // return (source: Observable<T>) => source.lift(new TimestampOperator(scheduler));\n}\n\nexport class Timestamp<T> implements TimestampInterface<T> {\n  constructor(public value: T, public timestamp: number) {\n  }\n}\n","import { reduce } from './reduce';\nimport { OperatorFunction } from '../types';\n\nfunction toArrayReducer<T>(arr: T[], item: T, index: number) {\n  if (index === 0) {\n    return [item];\n  }\n  arr.push(item);\n  return arr;\n}\n\n/**\n * Collects all source emissions and emits them as an array when the source completes.\n *\n * <span class=\"informal\">Get all values inside an array when the source completes</span>\n *\n * ![](toArray.png)\n *\n * `toArray` will wait until the source Observable completes before emitting\n * the array containing all emissions. When the source Observable errors no\n * array will be emitted.\n *\n *  ## Example\n * ```ts\n * import { interval } from 'rxjs';\n * import { toArray, take } from 'rxjs/operators';\n *\n * const source = interval(1000);\n * const example = source.pipe(\n *   take(10),\n *   toArray()\n * );\n *\n * const subscribe = example.subscribe(val => console.log(val));\n *\n * // output: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n *\n * ```\n* @return An array from an observable sequence.\n* @method toArray\n* @owner Observable\n*/\nexport function toArray<T>(): OperatorFunction<T, T[]> {\n  return reduce(toArrayReducer, [] as T[]);\n}\n","import { Observable } from '../Observable';\nimport { OperatorFunction } from '../types';\nimport { Subject } from '../Subject';\nimport { Subscriber } from '../Subscriber';\nimport { Operator } from '../Operator';\nimport { SimpleOuterSubscriber, innerSubscribe, SimpleInnerSubscriber } from '../innerSubscribe';\n\n/**\n * Branch out the source Observable values as a nested Observable whenever\n * `windowBoundaries` emits.\n *\n * <span class=\"informal\">It's like {@link buffer}, but emits a nested Observable\n * instead of an array.</span>\n *\n * ![](window.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping\n * windows. It emits the current window and opens a new one whenever the\n * Observable `windowBoundaries` emits an item. Because each window is an\n * Observable, the output is a higher-order Observable.\n *\n * ## Example\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { window, mergeAll, map, take } from 'rxjs/operators';\n *\n *  const clicks = fromEvent(document, 'click');\n *  const sec = interval(1000);\n *  const result = clicks.pipe(\n *      window(sec),\n *      map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *      mergeAll(),              // flatten the Observable-of-Observables\n *  );\n *  result.subscribe(x => console.log(x));\n * ```\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link buffer}\n *\n * @param {Observable<any>} windowBoundaries An Observable that completes the\n * previous window and starts a new window.\n * @return {Observable<Observable<T>>} An Observable of windows, which are\n * Observables emitting values of the source Observable.\n * @method window\n * @owner Observable\n */\nexport function window<T>(windowBoundaries: Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator(windowBoundaries));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowBoundaries: Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    const windowSubscriber = new WindowSubscriber(subscriber);\n    const sourceSubscription = source.subscribe(windowSubscriber);\n    if (!sourceSubscription.closed) {\n      windowSubscriber.add(innerSubscribe(this.windowBoundaries, new SimpleInnerSubscriber(windowSubscriber)));\n    }\n    return sourceSubscription;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends SimpleOuterSubscriber<T, any> {\n\n  private window: Subject<T> = new Subject<T>();\n\n  constructor(destination: Subscriber<Observable<T>>) {\n    super(destination);\n    destination.next(this.window);\n  }\n\n  notifyNext(): void {\n    this.openWindow();\n  }\n\n  notifyError(error: any): void {\n    this._error(error);\n  }\n\n  notifyComplete(): void {\n    this._complete();\n  }\n\n  protected _next(value: T): void {\n    this.window.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window.error(err);\n    this.destination.error!(err);\n  }\n\n  protected _complete(): void {\n    this.window.complete();\n    this.destination.complete!();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    this.window = null!;\n  }\n\n  private openWindow(): void  {\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n    const destination = this.destination;\n    const newWindow = this.window = new Subject<T>();\n    destination.next!(newWindow);\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable with each\n * nested Observable emitting at most `windowSize` values.\n *\n * <span class=\"informal\">It's like {@link bufferCount}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowCount.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows every `startWindowEvery`\n * items, each containing no more than `windowSize` items. When the source\n * Observable completes or encounters an error, the output Observable emits\n * the current window and propagates the notification from the source\n * Observable. If `startWindowEvery` is not provided, then new windows are\n * started immediately at the start of the source and when each window completes\n * with size `windowSize`.\n *\n * ## Examples\n * Ignore every 3rd click event, starting from the first one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, map, mergeAll, skip } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(3),\n *   map(win => win.pipe(skip(1))), // skip first of every 3 clicks\n *   mergeAll()                     // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Ignore every 3rd click event, starting from the third one\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowCount, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowCount(2, 3),\n *   mergeAll(),              // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferCount}\n *\n * @param {number} windowSize The maximum number of values emitted by each\n * window.\n * @param {number} [startWindowEvery] Interval at which to start a new window.\n * For example if `startWindowEvery` is `2`, then a new window will be started\n * on every other value from the source. A new window is started at the\n * beginning of the source by default.\n * @return {Observable<Observable<T>>} An Observable of windows, which in turn\n * are Observable of values.\n * @method windowCount\n * @owner Observable\n */\nexport function windowCount<T>(windowSize: number,\n                               startWindowEvery: number = 0): OperatorFunction<T, Observable<T>> {\n  return function windowCountOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowCountOperator<T>(windowSize, startWindowEvery));\n  };\n}\n\nclass WindowCountOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowSize: number,\n              private startWindowEvery: number) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowCountSubscriber<T> extends Subscriber<T> {\n  private windows: Subject<T>[] = [ new Subject<T>() ];\n  private count: number = 0;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowSize: number,\n              private startWindowEvery: number) {\n    super(destination);\n    destination.next(this.windows[0]);\n  }\n\n  protected _next(value: T) {\n    const startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;\n    const destination = this.destination;\n    const windowSize = this.windowSize;\n    const windows = this.windows;\n    const len = windows.length;\n\n    for (let i = 0; i < len && !this.closed; i++) {\n      windows[i].next(value);\n    }\n    const c = this.count - windowSize + 1;\n    if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {\n      windows.shift().complete();\n    }\n    if (++this.count % startWindowEvery === 0 && !this.closed) {\n      const window = new Subject<T>();\n      windows.push(window);\n      destination.next(window);\n    }\n  }\n\n  protected _error(err: any) {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().error(err);\n      }\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete() {\n    const windows = this.windows;\n    if (windows) {\n      while (windows.length > 0 && !this.closed) {\n        windows.shift().complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  protected _unsubscribe() {\n    this.count = 0;\n    this.windows = null;\n  }\n}\n","import { Subject } from '../Subject';\nimport { Operator } from '../Operator';\nimport { async } from '../scheduler/async';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subscription } from '../Subscription';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { OperatorFunction, SchedulerLike, SchedulerAction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable periodically\n * in time.\n *\n * <span class=\"informal\">It's like {@link bufferTime}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowTime.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable starts a new window periodically, as\n * determined by the `windowCreationInterval` argument. It emits each window\n * after a fixed timespan, specified by the `windowTimeSpan` argument. When the\n * source Observable completes or encounters an error, the output Observable\n * emits the current window and propagates the notification from the source\n * Observable. If `windowCreationInterval` is not provided, the output\n * Observable starts a new window when the previous window of duration\n * `windowTimeSpan` completes. If `maxWindowCount` is provided, each window\n * will emit at most fixed number of values. Window will complete immediately\n * after emitting last value and next one still will open as specified by\n * `windowTimeSpan` and `windowCreationInterval` arguments.\n *\n * ## Examples\n * In every window of 1 second each, emit at most 2 click events\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Every 5 seconds start a window 1 second long, and emit at most 2 click events per window\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000),\n *   map(win => win.pipe(take(2))), // each window has at most 2 emissions\n *   mergeAll(),                    // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * Same as example above but with maxWindowCount instead of take\n * ```ts\n * import { fromEvent } from 'rxjs';\n * import { windowTime, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowTime(1000, 5000, 2), // each window has still at most 2 emissions\n *   mergeAll(),                // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowToggle}\n * @see {@link windowWhen}\n * @see {@link bufferTime}\n *\n * @param {number} windowTimeSpan The amount of time to fill each window.\n * @param {number} [windowCreationInterval] The interval at which to start new\n * windows.\n * @param {number} [maxWindowSize=Number.POSITIVE_INFINITY] Max number of\n * values each window can emit before completion.\n * @param {SchedulerLike} [scheduler=async] The scheduler on which to schedule the\n * intervals that determine window boundaries.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowTime\n * @owner Observable\n */\nexport function windowTime<T>(windowTimeSpan: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\nexport function windowTime<T>(windowTimeSpan: number,\n                              windowCreationInterval: number,\n                              maxWindowSize: number,\n                              scheduler?: SchedulerLike): OperatorFunction<T, Observable<T>>;\n\nexport function windowTime<T>(windowTimeSpan: number): OperatorFunction<T, Observable<T>> {\n  let scheduler: SchedulerLike = async;\n  let windowCreationInterval: number = null;\n  let maxWindowSize: number = Number.POSITIVE_INFINITY;\n\n  if (isScheduler(arguments[3])) {\n    scheduler = arguments[3];\n  }\n\n  if (isScheduler(arguments[2])) {\n    scheduler = arguments[2];\n  } else if (isNumeric(arguments[2])) {\n    maxWindowSize = Number(arguments[2]);\n  }\n\n  if (isScheduler(arguments[1])) {\n    scheduler = arguments[1];\n  } else if (isNumeric(arguments[1])) {\n    windowCreationInterval = Number(arguments[1]);\n  }\n\n  return function windowTimeOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowTimeOperator<T>(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));\n  };\n}\n\nclass WindowTimeOperator<T> implements Operator<T, Observable<T>> {\n\n  constructor(private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowTimeSubscriber(\n      subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler\n    ));\n  }\n}\n\ninterface CreationState<T> {\n  windowTimeSpan: number;\n  windowCreationInterval: number;\n  subscriber: WindowTimeSubscriber<T>;\n  scheduler: SchedulerLike;\n}\n\ninterface TimeSpanOnlyState<T> {\n    window: CountedSubject<T>;\n    windowTimeSpan: number;\n    subscriber: WindowTimeSubscriber<T>;\n  }\n\ninterface CloseWindowContext<T> {\n  action: SchedulerAction<CreationState<T>>;\n  subscription: Subscription;\n}\n\ninterface CloseState<T> {\n  subscriber: WindowTimeSubscriber<T>;\n  window: CountedSubject<T>;\n  context: CloseWindowContext<T>;\n}\n\nclass CountedSubject<T> extends Subject<T> {\n  private _numberOfNextedValues: number = 0;\n\n  next(value?: T): void {\n    this._numberOfNextedValues++;\n    super.next(value);\n  }\n\n  get numberOfNextedValues(): number {\n    return this._numberOfNextedValues;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowTimeSubscriber<T> extends Subscriber<T> {\n  private windows: CountedSubject<T>[] = [];\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private windowTimeSpan: number,\n              private windowCreationInterval: number | null,\n              private maxWindowSize: number,\n              private scheduler: SchedulerLike) {\n    super(destination);\n\n    const window = this.openWindow();\n    if (windowCreationInterval !== null && windowCreationInterval >= 0) {\n      const closeState: CloseState<T> = { subscriber: this, window, context: <any>null };\n      const creationState: CreationState<T> = { windowTimeSpan, windowCreationInterval, subscriber: this, scheduler };\n      this.add(scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, closeState));\n      this.add(scheduler.schedule<CreationState<T>>(dispatchWindowCreation, windowCreationInterval, creationState));\n    } else {\n      const timeSpanOnlyState: TimeSpanOnlyState<T> = { subscriber: this, window, windowTimeSpan };\n      this.add(scheduler.schedule<TimeSpanOnlyState<T>>(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));\n    }\n  }\n\n  protected _next(value: T): void {\n    const windows = this.windows;\n    const len = windows.length;\n    for (let i = 0; i < len; i++) {\n      const window = windows[i];\n      if (!window.closed) {\n        window.next(value);\n        if (window.numberOfNextedValues >= this.maxWindowSize) {\n          this.closeWindow(window);\n        }\n      }\n    }\n  }\n\n  protected _error(err: any): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      windows.shift().error(err);\n    }\n    this.destination.error(err);\n  }\n\n  protected _complete(): void {\n    const windows = this.windows;\n    while (windows.length > 0) {\n      const window = windows.shift();\n      if (!window.closed) {\n        window.complete();\n      }\n    }\n    this.destination.complete();\n  }\n\n  public openWindow(): CountedSubject<T> {\n    const window = new CountedSubject<T>();\n    this.windows.push(window);\n    const destination = this.destination;\n    destination.next(window);\n    return window;\n  }\n\n  public closeWindow(window: CountedSubject<T>): void {\n    window.complete();\n    const windows = this.windows;\n    windows.splice(windows.indexOf(window), 1);\n  }\n}\n\nfunction dispatchWindowTimeSpanOnly<T>(this: SchedulerAction<TimeSpanOnlyState<T>>, state: TimeSpanOnlyState<T>): void {\n  const { subscriber, windowTimeSpan, window } = state;\n  if (window) {\n    subscriber.closeWindow(window);\n  }\n  state.window = subscriber.openWindow();\n  this.schedule(state, windowTimeSpan);\n}\n\nfunction dispatchWindowCreation<T>(this: SchedulerAction<CreationState<T>>, state: CreationState<T>): void {\n  const { windowTimeSpan, subscriber, scheduler, windowCreationInterval } = state;\n  const window = subscriber.openWindow();\n  const action = this;\n  let context: CloseWindowContext<T> = { action, subscription: <any>null };\n  const timeSpanState: CloseState<T> = { subscriber, window, context };\n  context.subscription = scheduler.schedule<CloseState<T>>(dispatchWindowClose, windowTimeSpan, timeSpanState);\n  action.add(context.subscription);\n  action.schedule(state, windowCreationInterval);\n}\n\nfunction dispatchWindowClose<T>(state: CloseState<T>): void {\n  const { subscriber, window, context } = state;\n  if (context && context.action && context.subscription) {\n    context.action.remove(context.subscription);\n  }\n  subscriber.closeWindow(window);\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable starting from\n * an emission from `openings` and ending when the output of `closingSelector`\n * emits.\n *\n * <span class=\"informal\">It's like {@link bufferToggle}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowToggle.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits windows that contain those items\n * emitted by the source Observable between the time when the `openings`\n * Observable emits an item and when the Observable returned by\n * `closingSelector` emits an item.\n *\n * ## Example\n * Every other second, emit the click events from the next 500ms\n * ```ts\n * import { fromEvent, interval, EMPTY } from 'rxjs';\n * import { windowToggle, mergeAll } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const openings = interval(1000);\n * const result = clicks.pipe(\n *   windowToggle(openings, i => i % 2 ? interval(500) : EMPTY),\n *   mergeAll()\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowWhen}\n * @see {@link bufferToggle}\n *\n * @param {Observable<O>} openings An observable of notifications to start new\n * windows.\n * @param {function(value: O): Observable} closingSelector A function that takes\n * the value emitted by the `openings` observable and returns an Observable,\n * which, when it emits (either `next` or `complete`), signals that the\n * associated window should complete.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowToggle\n * @owner Observable\n */\nexport function windowToggle<T, O>(openings: Observable<O>,\n                                   closingSelector: (openValue: O) => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return (source: Observable<T>) => source.lift(new WindowToggleOperator<T, O>(openings, closingSelector));\n}\n\nclass WindowToggleOperator<T, O> implements Operator<T, Observable<T>> {\n\n  constructor(private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowToggleSubscriber(\n      subscriber, this.openings, this.closingSelector\n    ));\n  }\n}\n\ninterface WindowContext<T> {\n  window: Subject<T>;\n  subscription: Subscription;\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowToggleSubscriber<T, O> extends OuterSubscriber<T, any> {\n  private contexts: WindowContext<T>[] = [];\n  private openSubscription: Subscription;\n\n  constructor(destination: Subscriber<Observable<T>>,\n              private openings: Observable<O>,\n              private closingSelector: (openValue: O) => Observable<any>) {\n    super(destination);\n    this.add(this.openSubscription = subscribeToResult(this, openings, openings as any));\n  }\n\n  protected _next(value: T) {\n    const { contexts } = this;\n    if (contexts) {\n      const len = contexts.length;\n      for (let i = 0; i < len; i++) {\n        contexts[i].window.next(value);\n      }\n    }\n  }\n\n  protected _error(err: any) {\n\n    const { contexts } = this;\n    this.contexts = null;\n\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.error(err);\n        context.subscription.unsubscribe();\n      }\n    }\n\n    super._error(err);\n  }\n\n  protected _complete() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.complete();\n        context.subscription.unsubscribe();\n      }\n    }\n    super._complete();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n    const { contexts } = this;\n    this.contexts = null;\n    if (contexts) {\n      const len = contexts.length;\n      let index = -1;\n      while (++index < len) {\n        const context = contexts[index];\n        context.window.unsubscribe();\n        context.subscription.unsubscribe();\n      }\n    }\n  }\n\n  notifyNext(outerValue: any, innerValue: any,\n             outerIndex: number, innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n\n    if (outerValue === this.openings) {\n      let closingNotifier;\n      try {\n        const { closingSelector } = this;\n        closingNotifier = closingSelector(innerValue);\n      } catch (e) {\n        return this.error(e);\n      }\n\n      const window = new Subject<T>();\n      const subscription = new Subscription();\n      const context = { window, subscription };\n      this.contexts.push(context);\n      const innerSubscription = subscribeToResult(this, closingNotifier, context as any);\n\n      if (innerSubscription.closed) {\n        this.closeWindow(this.contexts.length - 1);\n      } else {\n        (<any>innerSubscription).context = context;\n        subscription.add(innerSubscription);\n      }\n\n      this.destination.next(window);\n    } else {\n      this.closeWindow(this.contexts.indexOf(outerValue));\n    }\n  }\n\n  notifyError(err: any): void {\n    this.error(err);\n  }\n\n  notifyComplete(inner: Subscription): void {\n    if (inner !== this.openSubscription) {\n      this.closeWindow(this.contexts.indexOf((<any> inner).context));\n    }\n  }\n\n  private closeWindow(index: number): void {\n    if (index === -1) {\n      return;\n    }\n\n    const { contexts } = this;\n    const context = contexts[index];\n    const { window, subscription } = context;\n    contexts.splice(index, 1);\n    window.complete();\n    subscription.unsubscribe();\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { Subject } from '../Subject';\nimport { Subscription } from '../Subscription';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { OperatorFunction } from '../types';\n\n/**\n * Branch out the source Observable values as a nested Observable using a\n * factory function of closing Observables to determine when to start a new\n * window.\n *\n * <span class=\"informal\">It's like {@link bufferWhen}, but emits a nested\n * Observable instead of an array.</span>\n *\n * ![](windowWhen.png)\n *\n * Returns an Observable that emits windows of items it collects from the source\n * Observable. The output Observable emits connected, non-overlapping windows.\n * It emits the current window and opens a new one whenever the Observable\n * produced by the specified `closingSelector` function emits an item. The first\n * window is opened immediately when subscribing to the output Observable.\n *\n * ## Example\n * Emit only the first two clicks events in every window of [1-5] random seconds\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { windowWhen, map, mergeAll, take } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const result = clicks.pipe(\n *   windowWhen(() => interval(1000 + Math.random() * 4000)),\n *   map(win => win.pipe(take(2))),     // each window has at most 2 emissions\n *   mergeAll()                         // flatten the Observable-of-Observables\n * );\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link window}\n * @see {@link windowCount}\n * @see {@link windowTime}\n * @see {@link windowToggle}\n * @see {@link bufferWhen}\n *\n * @param {function(): Observable} closingSelector A function that takes no\n * arguments and returns an Observable that signals (on either `next` or\n * `complete`) when to close the previous window and start a new one.\n * @return {Observable<Observable<T>>} An observable of windows, which in turn\n * are Observables.\n * @method windowWhen\n * @owner Observable\n */\nexport function windowWhen<T>(closingSelector: () => Observable<any>): OperatorFunction<T, Observable<T>> {\n  return function windowWhenOperatorFunction(source: Observable<T>) {\n    return source.lift(new WindowOperator<T>(closingSelector));\n  };\n}\n\nclass WindowOperator<T> implements Operator<T, Observable<T>> {\n  constructor(private closingSelector: () => Observable<any>) {\n  }\n\n  call(subscriber: Subscriber<Observable<T>>, source: any): any {\n    return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WindowSubscriber<T> extends OuterSubscriber<T, any> {\n  private window?: Subject<T>;\n  private closingNotification?: Subscription;\n\n  constructor(protected destination: Subscriber<Observable<T>>,\n              private closingSelector: () => Observable<any>) {\n    super(destination);\n    this.openWindow();\n  }\n\n  notifyNext(_outerValue: T, _innerValue: any,\n             _outerIndex: number, _innerIndex: number,\n             innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  notifyError(error: any): void {\n    this._error(error);\n  }\n\n  notifyComplete(innerSub: InnerSubscriber<T, any>): void {\n    this.openWindow(innerSub);\n  }\n\n  protected _next(value: T): void {\n    this.window!.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.window!.error(err);\n    this.destination.error(err);\n    this.unsubscribeClosingNotification();\n  }\n\n  protected _complete(): void {\n    this.window!.complete();\n    this.destination.complete();\n    this.unsubscribeClosingNotification();\n  }\n\n  private unsubscribeClosingNotification(): void {\n    if (this.closingNotification) {\n      this.closingNotification.unsubscribe();\n    }\n  }\n\n  private openWindow(innerSub: InnerSubscriber<T, any> | null = null): void {\n    if (innerSub) {\n      this.remove(innerSub);\n      innerSub.unsubscribe();\n    }\n\n    const prevWindow = this.window;\n    if (prevWindow) {\n      prevWindow.complete();\n    }\n\n    const window = this.window = new Subject<T>();\n    this.destination.next(window);\n\n    let closingNotifier;\n    try {\n      const { closingSelector } = this;\n      closingNotifier = closingSelector();\n    } catch (e) {\n      this.destination.error(e);\n      this.window.error(e);\n      return;\n    }\n    this.add(this.closingNotification = subscribeToResult(this, closingNotifier));\n  }\n}\n","import { Operator } from '../Operator';\nimport { Subscriber } from '../Subscriber';\nimport { Observable } from '../Observable';\nimport { OuterSubscriber } from '../OuterSubscriber';\nimport { InnerSubscriber } from '../InnerSubscriber';\nimport { subscribeToResult } from '../util/subscribeToResult';\nimport { ObservableInput, OperatorFunction, ObservedValueOf } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function withLatestFrom<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, R>(source2: O2, project: (v1: T, v2: ObservedValueOf<O2>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, R>(v2: O2, v3: O3, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>, R>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6, project: (v1: T, v2: ObservedValueOf<O2>, v3: ObservedValueOf<O3>, v4: ObservedValueOf<O4>, v5: ObservedValueOf<O5>, v6: ObservedValueOf<O6>) => R): OperatorFunction<T, R>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>>(source2: O2): OperatorFunction<T, [T, ObservedValueOf<O2>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>>(v2: O2, v3: O3): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>]>;\nexport function withLatestFrom<T, O2 extends ObservableInput<any>, O3 extends ObservableInput<any>, O4 extends ObservableInput<any>, O5 extends ObservableInput<any>, O6 extends ObservableInput<any>>(v2: O2, v3: O3, v4: O4, v5: O5, v6: O6): OperatorFunction<T, [T, ObservedValueOf<O2>, ObservedValueOf<O3>, ObservedValueOf<O4>, ObservedValueOf<O5>, ObservedValueOf<O6>]>;\nexport function withLatestFrom<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[]): OperatorFunction<T, R>;\nexport function withLatestFrom<T, R>(array: ObservableInput<any>[], project: (...values: Array<any>) => R): OperatorFunction<T, R>;\n\n/* tslint:enable:max-line-length */\n\n/**\n * Combines the source Observable with other Observables to create an Observable\n * whose values are calculated from the latest values of each, only when the\n * source emits.\n *\n * <span class=\"informal\">Whenever the source Observable emits a value, it\n * computes a formula using that value plus the latest values from other input\n * Observables, then emits the output of that formula.</span>\n *\n * ![](withLatestFrom.png)\n *\n * `withLatestFrom` combines each value from the source Observable (the\n * instance) with the latest values from the other input Observables only when\n * the source emits a value, optionally using a `project` function to determine\n * the value to be emitted on the output Observable. All input Observables must\n * emit at least one value before the output Observable will emit a value.\n *\n * ## Example\n * On every click event, emit an array with the latest timer event plus the click event\n * ```ts\n * import { fromEvent, interval } from 'rxjs';\n * import { withLatestFrom } from 'rxjs/operators';\n *\n * const clicks = fromEvent(document, 'click');\n * const timer = interval(1000);\n * const result = clicks.pipe(withLatestFrom(timer));\n * result.subscribe(x => console.log(x));\n * ```\n *\n * @see {@link combineLatest}\n *\n * @param {ObservableInput} other An input Observable to combine with the source\n * Observable. More than one input Observables may be given as argument.\n * @param {Function} [project] Projection function for combining values\n * together. Receives all values in order of the Observables passed, where the\n * first parameter is a value from the source Observable. (e.g.\n * `a.pipe(withLatestFrom(b, c), map(([a1, b1, c1]) => a1 + b1 + c1))`). If this is not\n * passed, arrays will be emitted on the output Observable.\n * @return {Observable} An Observable of projected values from the most recent\n * values from each input Observable, or an array of the most recent values from\n * each input Observable.\n * @method withLatestFrom\n * @owner Observable\n */\nexport function withLatestFrom<T, R>(...args: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return (source: Observable<T>) => {\n    let project: any;\n    if (typeof args[args.length - 1] === 'function') {\n      project = args.pop();\n    }\n    const observables = <Observable<any>[]>args;\n    return source.lift(new WithLatestFromOperator(observables, project));\n  };\n}\n\nclass WithLatestFromOperator<T, R> implements Operator<T, R> {\n  constructor(private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n  }\n\n  call(subscriber: Subscriber<R>, source: any): any {\n    return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nclass WithLatestFromSubscriber<T, R> extends OuterSubscriber<T, R> {\n  private values: any[];\n  private toRespond: number[] = [];\n\n  constructor(destination: Subscriber<R>,\n              private observables: Observable<any>[],\n              private project?: (...values: any[]) => Observable<R>) {\n    super(destination);\n    const len = observables.length;\n    this.values = new Array(len);\n\n    for (let i = 0; i < len; i++) {\n      this.toRespond.push(i);\n    }\n\n    for (let i = 0; i < len; i++) {\n      let observable = observables[i];\n      this.add(subscribeToResult<T, R>(this, observable, undefined, i));\n    }\n  }\n\n  notifyNext(_outerValue: T, innerValue: R,\n             outerIndex: number): void {\n    this.values[outerIndex] = innerValue;\n    const toRespond = this.toRespond;\n    if (toRespond.length > 0) {\n      const found = toRespond.indexOf(outerIndex);\n      if (found !== -1) {\n        toRespond.splice(found, 1);\n      }\n    }\n  }\n\n  notifyComplete() {\n    // noop\n  }\n\n  protected _next(value: T) {\n    if (this.toRespond.length === 0) {\n      const args = [value, ...this.values];\n      if (this.project) {\n        this._tryProject(args);\n      } else {\n        this.destination.next!(args);\n      }\n    }\n  }\n\n  private _tryProject(args: any[]) {\n    let result: any;\n    try {\n      result = this.project!.apply(this, args);\n    } catch (err) {\n      this.destination.error!(err);\n      return;\n    }\n    this.destination.next!(result);\n  }\n}\n","import { zip as zipStatic } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { ObservableInput, OperatorFunction } from '../types';\n\n/* tslint:disable:max-line-length */\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(project: (v1: T) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, R>(v2: ObservableInput<T2>, project: (v1: T, v2: T2) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, project: (v1: T, v2: T2, v3: T3) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, project: (v1: T, v2: T2, v3: T3, v4: T4) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5) => R): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6, R>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>, project: (v1: T, v2: T2, v3: T3, v4: T4, v5: T5, v6: T6) => R): OperatorFunction<T, R> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2>(v2: ObservableInput<T2>): OperatorFunction<T, [T, T2]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3>(v2: ObservableInput<T2>, v3: ObservableInput<T3>): OperatorFunction<T, [T, T2, T3]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>): OperatorFunction<T, [T, T2, T3, T4]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>): OperatorFunction<T, [T, T2, T3, T4, T5]>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, T2, T3, T4, T5, T6>(v2: ObservableInput<T2>, v3: ObservableInput<T3>, v4: ObservableInput<T4>, v5: ObservableInput<T5>, v6: ObservableInput<T6>): OperatorFunction<T, [T, T2, T3, T4, T5, T6]> ;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(...observables: Array<ObservableInput<T> | ((...values: Array<T>) => R)>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, R>(array: Array<ObservableInput<T>>): OperatorFunction<T, R>;\n/** @deprecated Deprecated in favor of static zip. */\nexport function zip<T, TOther, R>(array: Array<ObservableInput<TOther>>, project: (v1: T, ...values: Array<TOther>) => R): OperatorFunction<T, R>;\n/* tslint:enable:max-line-length */\n\n/**\n * @deprecated Deprecated in favor of static {@link zip}.\n */\nexport function zip<T, R>(...observables: Array<ObservableInput<any> | ((...values: Array<any>) => R)>): OperatorFunction<T, R> {\n  return function zipOperatorFunction(source: Observable<T>) {\n    return source.lift.call(zipStatic<R>(source, ...observables));\n  };\n}","import { ZipOperator } from '../observable/zip';\nimport { Observable } from '../Observable';\nimport { OperatorFunction, ObservableInput } from '../types';\n\nexport function zipAll<T>(): OperatorFunction<ObservableInput<T>, T[]>;\nexport function zipAll<T>(): OperatorFunction<any, T[]>;\nexport function zipAll<T, R>(project: (...values: T[]) => R): OperatorFunction<ObservableInput<T>, R>;\nexport function zipAll<R>(project: (...values: Array<any>) => R): OperatorFunction<any, R>;\n\nexport function zipAll<T, R>(project?: (...values: Array<any>) => R): OperatorFunction<T, R> {\n  return (source: Observable<T>) => source.lift(new ZipOperator(project));\n}\n","import * as cookie from 'js-cookie';\n\nimport PayloadTransformer from './payload-transformer';\nimport RequestFactory from './request-factory';\nimport RequestSender from './request-sender';\nimport RequestSenderOptions from './request-sender-options';\n\nexport default function createRequestSender(options?: RequestSenderOptions): RequestSender {\n    return new RequestSender(\n        new RequestFactory(),\n        new PayloadTransformer(),\n        cookie,\n        options\n    );\n}\n","import Headers from './headers';\nimport RequestOptions from './request-options';\nimport Response from './response';\nimport toFormUrlEncoded from './to-form-url-encoded';\n\nconst JSON_CONTENT_TYPE_REGEXP = /application\\/(\\w+\\+)?json/;\nconst FORM_URLENCODED_CONTENT_TYPE_REGEXP = /application\\/x-www-form-urlencoded/;\n\nexport default class PayloadTransformer {\n    toRequestBody(options: RequestOptions): any {\n        const contentType = options.headers ? this._getHeader(options.headers, 'Content-Type') : '';\n\n        if (options.body) {\n            if (JSON_CONTENT_TYPE_REGEXP.test(contentType)) {\n                return JSON.stringify(options.body);\n            }\n\n            if (FORM_URLENCODED_CONTENT_TYPE_REGEXP.test(contentType)) {\n                return toFormUrlEncoded(options.body);\n            }\n        }\n\n        return options.body;\n    }\n\n    toResponse(xhr: XMLHttpRequest): Response {\n        const headers = this._parseResponseHeaders(xhr.getAllResponseHeaders());\n\n        // Using `responseText` to support legacy IE\n        const body = this._parseResponseBody(\n            'response' in xhr ? xhr.response : (xhr as any).responseText,\n            headers\n        );\n\n        return {\n            body,\n            headers,\n            status: xhr.status,\n            statusText: xhr.statusText,\n        };\n    }\n\n    private _parseResponseBody(body: string, headers: Headers): any {\n        const contentType = this._getHeader(headers, 'Content-Type');\n\n        if (body && JSON_CONTENT_TYPE_REGEXP.test(contentType)) {\n            return JSON.parse(body);\n        }\n\n        return body;\n    }\n\n    private _parseResponseHeaders(rawHeaders: string): Headers {\n        const lines = rawHeaders ? rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ').split(/\\r?\\n/) : [];\n\n        return lines.reduce((headers, line) => {\n            const parts = line.split(':');\n            const key = (parts.shift() || '').trim();\n\n            if (!key) {\n                return headers;\n            }\n\n            return {\n                ...headers,\n                [key.toLowerCase()]: parts.join(':').trim(),\n            };\n        }, {});\n    }\n\n    private _getHeader(headers: Headers, key: string): string {\n        if (!headers || !key) {\n            return '';\n        }\n\n        return headers[key] || headers[key.toLowerCase()] || '';\n    }\n}\n","export default function toFormUrlEncoded(data: any): string {\n    if (typeof data !== 'object' || data === null) {\n        return data;\n    }\n\n    return Object.keys(data)\n        .filter(key => data[key] !== undefined)\n        .map(key => {\n            const value = data[key];\n\n            if (typeof value === 'string') {\n                return `${key}=${encodeURIComponent(value)}`;\n            }\n\n            return `${key}=${encodeURIComponent(JSON.stringify(value) || '')}`;\n        })\n        .join('&');\n}\n","import * as queryString from 'query-string';\n\nimport Headers from './headers';\nimport RequestOptions from './request-options';\n\nexport default class RequestFactory {\n    createRequest(url: string, options?: RequestOptions): XMLHttpRequest {\n        const xhr = new XMLHttpRequest();\n\n        this._configureRequest(xhr, url, options);\n\n        return xhr;\n    }\n\n    private _configureRequest(xhr: XMLHttpRequest, url: string, options: RequestOptions = {}): void {\n        xhr.open(options.method || 'GET', this._formatUrl(url, options.params, options.encodeParams), true);\n\n        if (options.headers) {\n            this._configureRequestHeaders(xhr, options.headers);\n        }\n\n        if (typeof options.credentials === 'boolean') {\n            xhr.withCredentials = options.credentials;\n        }\n\n        if (typeof options.timeout === 'number') {\n            xhr.timeout = options.timeout;\n        }\n    }\n\n    private _configureRequestHeaders(xhr: XMLHttpRequest, headers: Headers): void {\n        Object.keys(headers).forEach(key => {\n            xhr.setRequestHeader(key, headers[key]);\n        });\n    }\n\n    private _formatUrl(url: string, params?: object, encodeParams: boolean = true): string {\n        if (!params || Object.keys(params).length === 0) {\n            return url;\n        }\n\n        return `${url}?${queryString.stringify(params, { encode: encodeParams })}`;\n    }\n}\n","import * as queryString from 'query-string';\n\nimport RequestOptions from './request-options';\nimport Response from './response';\n\nexport default interface Cache {\n    read<T>(url: string, options: RequestOptions): Response<T> | null;\n    write<T>(url: string, options: RequestOptions, response: Response<T>): void;\n}\n\ninterface CacheMap {\n    [key: string]: Response<any>;\n}\n\nexport class DefaultCache implements Cache {\n    private readonly _cache: CacheMap = {};\n\n    read<T>(url: string, options: RequestOptions): Response<T> | null {\n        const cacheKey = this.getKey(url, options.params);\n\n        return this._cache[cacheKey] || null;\n    }\n\n    write<T>(url: string, options: RequestOptions, response: Response<T>) {\n        const cacheKey = this.getKey(url, options.params);\n\n        this._cache[cacheKey] = response;\n    }\n\n    private getKey(url: string, params: object = {}) {\n        if (Object.keys(params).length === 0) {\n            return url;\n        }\n\n        return `${url}?${queryString.stringify(params)}`;\n    }\n}\n","export default function isPromise(promise: any): promise is PromiseLike<any> {\n    return !!promise &&\n        (typeof promise === 'object' || typeof promise === 'function') &&\n        typeof promise.then === 'function';\n}\n","import Timeout from './timeout';\n\nexport default function createTimeout(delay?: number): Timeout {\n    return new Timeout(delay);\n}\n","import createScriptLoader from './create-script-loader';\nimport ScriptLoader from './script-loader';\n\nlet instance: ScriptLoader;\n\nexport default function getScriptLoader(): ScriptLoader {\n    if (!instance) {\n        instance = createScriptLoader();\n    }\n\n    return instance;\n}\n","import createStylesheetLoader from './create-stylesheet-loader';\nimport StylesheetLoader from './stylesheet-loader';\n\nlet instance: StylesheetLoader;\n\nexport default function getStylesheetLoader(): StylesheetLoader {\n    if (!instance) {\n        instance = createStylesheetLoader();\n    }\n\n    return instance;\n}\n","import FormBuilder from './form-builder';\nimport FormPoster from './form-poster';\nimport FormPosterOptions from './form-poster-options';\n\nexport default function createFormPoster(options?: FormPosterOptions): FormPoster {\n    const formBuilder = new FormBuilder();\n    const formPoster = new FormPoster(formBuilder, options);\n\n    return formPoster;\n}\n","export default class FormBuilder {\n    build(url: string, data: { [key: string]: any }, target?: string): HTMLFormElement {\n        const form = document.createElement('form');\n\n        form.style.display = 'none';\n\n        form.setAttribute('action', url);\n        form.setAttribute('method', 'POST');\n        form.setAttribute('target', target || '_top');\n\n        Object.keys(data)\n            .forEach(key => {\n                const value = data[key];\n\n                form.appendChild(this._createInput(value, key));\n            });\n\n        return form;\n    }\n\n    private _createInput(value: any, key: string): HTMLInputElement {\n        const input = document.createElement('input');\n\n        input.setAttribute('name', key);\n        input.setAttribute('type', 'hidden');\n        input.setAttribute('value', value);\n\n        return input;\n    }\n}\n","export function isAbsoluteUrl(url: string): boolean {\n    return /^https?:\\/\\//.test(url);\n}\n\nexport function joinPaths(pathA: string, pathB: string): string {\n    return `${removeTrailingSlash(pathA)}/${removeLeadingSlash(pathB)}`;\n}\n\nfunction removeTrailingSlash(path: string): string {\n    return path.replace(/\\/$/, '');\n}\n\nfunction removeLeadingSlash(path: string): string {\n    return path.replace(/^\\//, '');\n}\n","import Client from './client/client';\n\n/**\n * @param {Object} [config]\n * @returns {Client}\n */\nexport function createClient(config) {\n    return Client.create(config);\n}\n","import objectAssign from 'object-assign';\nimport OffsitePaymentInitializer from '../payment/offsite-payment-initializer';\nimport PaymentSubmitter from '../payment/payment-submitter';\nimport ClientTokenGenerator from '../payment/client-token-generator';\nimport StoreRequestSender from '../store/store-request-sender';\nimport DEFAULT_CONFIG from './default-config';\n\nexport default class Client {\n    /**\n     * @param {Object} config\n     * @returns {Client}\n     */\n    static create(config) {\n        const clientConfig = objectAssign({}, DEFAULT_CONFIG, config);\n        const offsitePaymentInitializer = OffsitePaymentInitializer.create(clientConfig);\n        const paymentSubmitter = PaymentSubmitter.create(clientConfig);\n        const clientTokenGenerator = ClientTokenGenerator.create(clientConfig);\n        const storeRequestSender = StoreRequestSender.create(clientConfig);\n\n        return new Client(\n            clientConfig,\n            paymentSubmitter,\n            offsitePaymentInitializer,\n            clientTokenGenerator,\n            storeRequestSender,\n        );\n    }\n\n    /**\n     * @param {Object} config\n     * @param {PaymentSubmitter} paymentSubmitter\n     * @param {OffsitePaymentInitializer} offsitePaymentInitializer\n     * @param {ClientTokenGenerator} clientTokenGenerator\n     * @param {StoreRequestSender} storeRequestSender\n     */\n    constructor(\n        config,\n        paymentSubmitter,\n        offsitePaymentInitializer,\n        clientTokenGenerator,\n        storeRequestSender,\n    ) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n\n        /**\n         * @private\n         * @type {PaymentSubmitter}\n         */\n        this.paymentSubmitter = paymentSubmitter;\n\n        /**\n         * @private\n         * @type {OffsitePaymentInitializer}\n         */\n        this.offsitePaymentInitializer = offsitePaymentInitializer;\n\n        /**\n         * @private\n         * @type {ClientTokenGenerator}\n         */\n        this.clientTokenGenerator = clientTokenGenerator;\n\n        /**\n         * @private\n         * @type {StoreRequestSender}\n         */\n        this.storeRequestSender = storeRequestSender;\n    }\n\n    /**\n     * @param {string} host\n     * @returns {void}\n     */\n    setHost(host) {\n        this.config.host = host;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @param {string} target\n     * @returns {void}\n     */\n    initializeOffsitePayment(data, callback, target) {\n        this.offsitePaymentInitializer.initializeOffsitePayment(data, callback, target);\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    submitPayment(data, callback) {\n        this.paymentSubmitter.submitPayment(data, callback);\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    generateClientToken(data, callback) {\n        this.clientTokenGenerator.generateClientToken(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.currencyCode\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstruments(data, callback) {\n        this.storeRequestSender.loadInstruments(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.currencyCode\n     * @param {AddressData} data.shippingAddress\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstrumentsWithAddress(data, callback) {\n        this.storeRequestSender.loadInstrumentsWithAddress(data, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} data.storeId\n     * @param {string} data.customerId\n     * @param {string} data.instrumentId\n     * @param {string} data.currencyCode\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        this.storeRequestSender.deleteShopperInstrument(data, callback);\n    }\n}\n","import { createFormPoster } from '@bigcommerce/form-poster';\nimport { HOSTED } from './payment-types';\nimport PayloadMapper from './offsite-payment-mappers/payload-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class OffsitePaymentInitializer {\n    /**\n     * @param {Object} config\n     * @returns {OffsitePaymentInitializer}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const formPoster = createFormPoster();\n        const payloadMapper = PayloadMapper.create();\n\n        return new OffsitePaymentInitializer(urlHelper, formPoster, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {FormPoster} formPoster\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, formPoster, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {FormPoster}\n         */\n        this.formPoster = formPoster;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @param {string} target\n     * @returns {void}\n     * @throws {Error}\n     */\n    initializeOffsitePayment(data, callback, target) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== HOSTED) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getOffsitePaymentUrl();\n\n        this.formPoster.postForm(url, payload, callback, target);\n    }\n}\n","import objectAssign from 'object-assign';\nimport { omitNil, toString } from '../../common/utils';\nimport AddressMapper from './address-mapper';\nimport CustomerMapper from './customer-mapper';\nimport MetaMapper from './meta-mapper';\nimport PaymentMethodIdMapper from '../payment-method-mappers/payment-method-id-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class PayloadMapper {\n    /**\n     * @returns {PayloadMapper}\n     */\n    static create() {\n        const addressMapper = AddressMapper.create();\n        const customerMapper = CustomerMapper.create();\n        const metaMapper = MetaMapper.create();\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new PayloadMapper(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper);\n    }\n\n    /**\n     * @param {AddressMapper} addressMapper\n     * @param {CustomerMapper} customerMapper\n     * @param {MetaMapper} metaMapper\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @param {StoreMapper} storeMapper\n     * @returns {Object}\n     */\n    constructor(addressMapper, customerMapper, metaMapper, paymentMethodIdMapper, storeMapper) {\n        /**\n         * @private\n         * @type {AddressMapper}\n         */\n        this.addressMapper = addressMapper;\n\n        /**\n         * @private\n         * @type {CustomerMapper}\n         */\n        this.customerMapper = customerMapper;\n\n        /**\n         * @private\n         * @type {MetaMapper}\n         */\n        this.metaMapper = metaMapper;\n\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayload(data) {\n        const {\n            authToken, order = {}, payment = {}, paymentMethod = {},\n        } = data;\n\n        const payload = objectAssign(\n            {\n                amount: order.grandTotal ? order.grandTotal.integerAmount : null,\n                tax: order.taxTotal ? order.taxTotal.integerAmount : null,\n                bc_auth_token: authToken,\n                currency: order.currency,\n                gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n                notify_url: order.callbackUrl,\n                order_id: order.orderId ? toString(order.orderId) : null,\n                page_title: document.title ? document.title : null,\n                payment_method_id: paymentMethod.id,\n                reference_id: order.orderId ? toString(order.orderId) : null,\n                return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            },\n            this.addressMapper.mapToBillingAddress(data),\n            this.customerMapper.mapToCustomer(data),\n            this.metaMapper.mapToMeta(data),\n            this.addressMapper.mapToShippingAddress(data),\n            this.storeMapper.mapToStore(data),\n        );\n\n        const { formattedPayload = {} } = payment;\n\n        objectAssign(payload, formattedPayload);\n\n        return omitNil(payload);\n    }\n}\n","/**\n * @param {array|string} items\n * @param {array|string} item\n * @returns {boolean}\n */\nexport default function includes(items, item) {\n    if (!Array.isArray(items) && typeof items !== 'string') {\n        return false;\n    }\n\n    return items.indexOf(item) !== -1;\n}\n","import isEmptyStringOrNil from './is-emptystring-or-nil';\nimport omitProperty from './omit-property';\n\n/**\n * @param {Object} object\n * @returns {Object}\n */\nexport default function omitEmptyStringAndNil(object) {\n    return omitProperty(object, isEmptyStringOrNil);\n}\n","import isEmptyString from './is-empty-string';\nimport isNil from './is-nil';\n\n/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isEmptyStringOrNil(value) {\n    return isEmptyString(value) || isNil(value);\n}\n","/**\n * @param {*} value\n * @returns {boolean}\n */\nexport default function isEmptyString(value) {\n    return value === '';\n}\n","import isNil from './is-nil';\nimport omitProperty from './omit-property';\n\n/**\n * @param {Object} object\n * @returns {Object}\n */\nexport default function omitNil(object) {\n    return omitProperty(object, isNil);\n}\n","/**\n * @param {*} value\n * @returns {number}\n */\nexport default function toNumber(value) {\n    return parseFloat(value) || 0;\n}\n","/**\n * @param {string} string\n * @returns {string}\n */\nexport default function toSnakeCase(string) {\n    if (typeof string !== 'string') {\n        return string;\n    }\n\n    return string.replace(/([a-z\\d])([A-Z]+)/g, '$1_$2')\n        .replace(/[-\\s]+/g, '_')\n        .toLowerCase();\n}\n","/**\n * @param {*} value\n * @returns {string}\n */\nexport default function toString(value) {\n    if (typeof value === 'string') {\n        return value;\n    }\n\n    if (typeof value === 'number' && !Number.isNaN(value)) {\n        return value.toString();\n    }\n\n    return '';\n}\n","import { omitNil, toSnakeCase } from '../../common/utils';\n\nexport default class AddressMapper {\n    /**\n     * @returns {AddressMapper}\n     */\n    static create() {\n        return new AddressMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        return this.mapToAddress(data, 'billingAddress');\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n        const formattedAddressKey = toSnakeCase(addressKey);\n\n        return omitNil({\n            [`${formattedAddressKey}_city`]: address.city,\n            [`${formattedAddressKey}_company`]: address.company,\n            [`${formattedAddressKey}_country_code`]: address.countryCode,\n            [`${formattedAddressKey}_country`]: address.country,\n            [`${formattedAddressKey}_first_name`]: address.firstName,\n            [`${formattedAddressKey}_last_name`]: address.lastName,\n            [`${formattedAddressKey}_phone`]: address.phone,\n            [`${formattedAddressKey}_state_code`]: address.provinceCode,\n            [`${formattedAddressKey}_state`]: address.province,\n            [`${formattedAddressKey}_street_1`]: address.addressLine1,\n            [`${formattedAddressKey}_street_2`]: address.addressLine2,\n            [`${formattedAddressKey}_zip`]: address.postCode,\n        });\n    }\n}\n","import { omitNil } from '../../common/utils';\n\nexport default class CustomerMapper {\n    /**\n     * @returns {CustomerMapper}\n     */\n    static create() {\n        return new CustomerMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCustomer(data) {\n        const { customer = {}, quoteMeta = {}, store = {} } = data;\n\n        return omitNil({\n            customer_browser_info: navigator.userAgent,\n            customer_email: customer.email,\n            customer_first_name: customer.firstName,\n            customer_geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n            customer_id: customer.customerId,\n            customer_last_name: customer.lastName,\n            customer_locale: store.storeLanguage,\n            customer_name: customer.name,\n            customer_phone: customer.phoneNumber,\n            customer_reference: customer.email,\n        });\n    }\n}\n","import { omitNil } from '../../common/utils';\n\nexport default class MetaMapper {\n    /**\n     * @returns {MetaMapper}\n     */\n    static create() {\n        return new MetaMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToMeta(data) {\n        const { source } = data;\n\n        return omitNil({\n            meta_referrer: document.referrer,\n            meta_source: source,\n            meta_user_agent: navigator.userAgent,\n        });\n    }\n}\n","export const CREDIT_CARD = 'credit-card';\nexport const MULTI_OPTION = 'multi-option';\n","export const BRAINTREE = 'braintree';\nexport const BRAINTREE_PAYPAL = 'braintreepaypal';\nexport const BRAINTREE_PAYPAL_CREDIT = 'braintreepaypalcredit';\nexport const BRAINTREE_VISACHECKOUT = 'braintreevisacheckout';\nexport const BRAINTREE_GOOGLEPAY = 'googlepaybraintree';\n\nexport const PAYPAL_COMMERCE = 'paypalcommerce';\nexport const PAYPAL_COMMERCE_ALTERNATIVE_METHODS = 'paypalcommercealternativemethods';\nexport const PAYPAL_COMMERCE_CREDIT = 'paypalcommercecredit';\nexport const PAYPAL_COMMERCE_CREDIT_CARDS = 'paypalcommercecreditcards';\n","import { omitNil, toString } from '../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            store_hash: store.storeHash,\n            store_id: store.storeId ? toString(store.storeId) : null,\n        });\n    }\n}\n","import { API } from './payment-types';\nimport PayloadMapper from './v1/payment-mappers/payload-mapper';\nimport RequestSender from '../common/http-request/request-sender';\nimport UrlHelper from './url-helper';\n\nexport default class PaymentSubmitter {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const payloadMapper = PayloadMapper.create();\n\n        return new PaymentSubmitter(urlHelper, requestSender, payloadMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {PayloadMapper} payloadMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, payloadMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {PayloadMapper}\n         */\n        this.payloadMapper = payloadMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     * @throws {Error}\n     */\n    submitPayment(data, callback) {\n        const { paymentMethod = {} } = data;\n\n        if (paymentMethod.type !== API) {\n            throw new Error(`${paymentMethod.type} is not supported.`);\n        }\n\n        const payload = this.payloadMapper.mapToPayload(data);\n        const url = this.urlHelper.getPaymentUrl();\n        const options = {\n            headers: this.payloadMapper.mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport CustomerMapper from './customer-mapper';\nimport OrderMapper from './order-mapper';\nimport PaymentMapper from './payment-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class PayloadMapper {\n    /**\n     * @returns {PayloadMapper}\n     */\n    static create() {\n        const customerMapper = CustomerMapper.create();\n        const orderMapper = OrderMapper.create();\n        const paymentMapper = PaymentMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new PayloadMapper(customerMapper, orderMapper, paymentMapper, storeMapper);\n    }\n\n    /**\n     * @param {CustomerMapper} customerMapper\n     * @param {OrderMapper} orderMapper\n     * @param {PaymentMapper} paymentMapper\n     * @param {StoreMapper} storeMapper\n     */\n    constructor(customerMapper, orderMapper, paymentMapper, storeMapper) {\n        /**\n         * @private\n         * @type {CustomerMapper}\n         */\n        this.customerMapper = customerMapper;\n\n        /**\n         * @private\n         * @type {OrderMapper}\n         */\n        this.orderMapper = orderMapper;\n\n        /**\n         * @private\n         * @type {PaymentMapper}\n         */\n        this.paymentMapper = paymentMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayload(data) {\n        const { order = {}, additionalAction } = data;\n\n        return omitNil({\n            customer: this.customerMapper.mapToCustomer(data),\n            notify_url: order.callbackUrl,\n            order: this.orderMapper.mapToOrder(data),\n            payment: this.paymentMapper.mapToPayment(data),\n            store: this.storeMapper.mapToStore(data),\n            additional_action: additionalAction,\n        });\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToHeaders(data) {\n        const { authToken } = data;\n\n        return omitNil({\n            Authorization: authToken,\n        });\n    }\n}\n","import { omitNil, toString } from '../../../common/utils';\n\nexport default class CustomerMapper {\n    /**\n     * @returns {CustomerMapper}\n     */\n    static create() {\n        return new CustomerMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCustomer(data) {\n        const { customer = {}, quoteMeta = {} } = data;\n\n        return omitNil({\n            customer_group: customer.customerGroupName ? { name: customer.customerGroupName } : null,\n            geo_ip_country_code: quoteMeta.request ? quoteMeta.request.geoCountryCode : null,\n            id: customer.customerId ? toString(customer.customerId) : null,\n            session_token: quoteMeta.request ? quoteMeta.request.sessionHash : null,\n        });\n    }\n}\n","import { omitEmptyStringAndNil, omitNil, toString } from '../../../common/utils';\n\nexport default class OrderMapper {\n    /**\n     * @returns {OrderMapper}\n     */\n    static create() {\n        return new OrderMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrder(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            billing_address: this.mapToBillingAddress(data),\n            coupons: this.mapToCoupons(data),\n            currency: order.currency,\n            id: order.orderId ? toString(order.orderId) : null,\n            items: this.mapToItems(data),\n            shipping: this.mapToShipping(data),\n            shipping_address: this.mapToShippingAddress(data),\n            token: order.token,\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToBillingAddress(data) {\n        const { customer = {} } = data;\n        const address = this.mapToAddress(data, 'billingAddress');\n\n        if (customer.email) {\n            address.email = customer.email;\n        }\n\n        return address;\n    }\n\n    /**\n     * @private\n     * @param  {PaymentRequestData} data\n     * @return {Shipping[]}\n     */\n    mapToShipping(data) {\n        const { description, transitTime } = data.shippingOption || {};\n\n        if (description) {\n            return [omitEmptyStringAndNil({\n                method: description,\n                transit_time: transitTime,\n            })];\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Coupon[]}\n     */\n    mapToCoupons({ order = {} }) {\n        if (order.coupon && order.coupon.coupons) {\n            return order.coupon.coupons.map(({ code }) => ({ code }));\n        }\n\n        return [];\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToShippingAddress(data) {\n        return this.mapToAddress(data, 'shippingAddress');\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const address = data[addressKey] || {};\n\n        return omitEmptyStringAndNil({\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            country: address.country,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            state_code: address.provinceCode,\n            state: address.province,\n            street_1: address.addressLine1,\n            street_2: address.addressLine2,\n            zip: address.postCode,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map((itemData) => omitNil({\n            code: itemData.id,\n            variant_id: itemData.variantId,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { order = {} } = data;\n\n        return omitNil({\n            grand_total: order.grandTotal ? order.grandTotal.integerAmount : null,\n            handling: order.handling ? order.handling.integerAmount : null,\n            shipping: order.shipping ? order.shipping.integerAmount : null,\n            subtotal: order.subtotal ? order.subtotal.integerAmount : null,\n            tax: order.taxTotal ? order.taxTotal.integerAmount : null,\n        });\n    }\n}\n","import objectAssign from 'object-assign';\nimport { omitNil, toNumber } from '../../../common/utils';\n\nimport PaymentMethodIdMapper from '../../payment-method-mappers/payment-method-id-mapper';\n\nexport default class PaymentMapper {\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {PaymentMapper}\n     */\n    static create() {\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n\n        return new PaymentMapper(paymentMethodIdMapper);\n    }\n\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {void}\n     */\n    constructor(paymentMethodIdMapper) {\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToPayment(data) {\n        const {\n            order = {},\n            orderMeta = {},\n            payment = {},\n            paymentMethod = {},\n        } = data;\n\n        const payload = {\n            device_info: payment.deviceSessionId ? payment.deviceSessionId : null,\n            device: orderMeta.deviceFingerprint ? { fingerprint_id: orderMeta.deviceFingerprint } : null,\n            gateway: this.paymentMethodIdMapper.mapToId(paymentMethod),\n            notify_url: order.callbackUrl,\n            return_url: paymentMethod.returnUrl || (order.payment ? order.payment.returnUrl : null),\n            vault_payment_instrument: !payment.instrumentId ? payment.shouldSaveInstrument : null,\n            set_as_default_stored_instrument: (payment.instrumentId || payment.shouldSaveInstrument) ? payment.shouldSetAsDefaultInstrument : null,\n        };\n\n        const { method } = paymentMethod;\n\n        if (method) {\n            objectAssign(payload, { method });\n        }\n\n        const nonce = payment.nonce || paymentMethod.nonce;\n\n        if (payment.formattedPayload) {\n            objectAssign(payload, payment.formattedPayload);\n        } else if (payment.instrumentId) {\n            objectAssign(payload, {\n                bigpay_token: this.mapToBigPayToken(data),\n            });\n        } else if (nonce) {\n            objectAssign(payload, {\n                credit_card_token: {\n                    token: nonce,\n                },\n            });\n        } else if (payment.cryptogramId) {\n            objectAssign(payload, {\n                credit_card_cryptogram: this.mapToCryptogram(data),\n            });\n        } else {\n            objectAssign(payload, {\n                credit_card: this.mapToCreditCard(data),\n            });\n        }\n\n        return omitNil(payload);\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCreditCard(data) {\n        const { payment = {} } = data;\n\n        return omitNil({\n            account_name: payment.ccName,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            verification_value: payment.ccCvv,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            customer_code: payment.ccCustomerCode,\n            three_d_secure: payment.threeDSecure,\n            hosted_form_nonce: payment.hostedFormNonce,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToBigPayToken({ payment }) {\n        return omitNil({\n            credit_card_number_confirmation: payment.ccNumber,\n            token: payment.instrumentId,\n            verification_value: payment.ccCvv,\n            verification_nonce: payment.nonce,\n            three_d_secure: payment.threeDSecure,\n            hosted_form_nonce: payment.hostedFormNonce,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @return {Object}\n     */\n    mapToCryptogram({ payment }) {\n        return omitNil({\n            payment_cryptogram: payment.cryptogramId,\n            eci: payment.eci,\n            xid: payment.transactionId,\n            month: payment.ccExpiry ? toNumber(payment.ccExpiry.month) : null,\n            number: payment.ccNumber,\n            year: payment.ccExpiry ? toNumber(payment.ccExpiry.year) : null,\n            account_mask: payment.accountMask,\n        });\n    }\n}\n","import { omitNil, toString } from '../../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            hash: store.storeHash,\n            id: store.storeId ? toString(store.storeId) : null,\n            name: store.storeName,\n        });\n    }\n}\n","import { APPLICATION_JSON } from './content-types';\nimport { GET } from './method-types';\n\nconst DEFAULT_OPTIONS = {\n    headers: {\n        Accept: APPLICATION_JSON,\n        'Content-Type': APPLICATION_JSON,\n    },\n    method: GET,\n};\n\nexport default DEFAULT_OPTIONS;\n","import objectAssign from 'object-assign';\nimport { APPLICATION_JSON } from './content-types';\nimport { includes } from '../utils';\n\nexport default class PayloadTransformer {\n    /**\n     * @returns {PayloadTransformer}\n     */\n    static create() {\n        return new PayloadTransformer();\n    }\n\n    /**\n     * @param {Object} data\n     * @param {string} [contentType = APPLICATION_JSON]\n     * @returns {Object}\n     */\n    toRequest(data, contentType = APPLICATION_JSON) {\n        if (data && includes(contentType, APPLICATION_JSON)) {\n            return JSON.stringify(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * @param {XMLHttpRequest} xhr\n     * @returns {Object}\n     * @property {Object} data\n     * @property {number} status\n     * @property {string} statusText\n     */\n    fromResponse(xhr) {\n        const headers = this.parseResponseHeaders(xhr.getAllResponseHeaders());\n        const contentType = xhr.getResponseHeader('Content-Type');\n        const { status, statusText } = xhr;\n\n        let data = 'response' in xhr ? xhr.response : xhr.responseText;\n\n        if (data && includes(contentType, APPLICATION_JSON)) {\n            data = JSON.parse(data);\n        }\n\n        return {\n            data, headers, status, statusText,\n        };\n    }\n\n    /**\n     * @private\n     * @param {string} rawHeaders\n     * @returns {Object}\n     */\n    parseResponseHeaders(rawHeaders) {\n        const lines = rawHeaders ? rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ').split(/\\r?\\n/) : [];\n\n        return lines.reduce((headers, line) => {\n            const parts = line.split(':');\n            const key = (parts.shift() || '').trim();\n\n            if (!key) {\n                return headers;\n            }\n\n            return objectAssign({}, headers, {\n                [key.toLowerCase()]: parts.join(':').trim(),\n            });\n        }, {});\n    }\n}\n","export default class RequestFactory {\n    /**\n     * @returns {RequestFactory}\n     */\n    static create() {\n        return new RequestFactory();\n    }\n\n    /**\n     * @param {string} url\n     * @param {Object} options\n     * @param {Function} [callback]\n     * @returns {XMLHttpRequest}\n     */\n    createRequest(url, options, callback) {\n        const xhr = new XMLHttpRequest();\n\n        xhr.onerror = () => {\n            if (callback) {\n                callback(new Error(xhr.statusText));\n            }\n        };\n\n        xhr.onload = () => {\n            if (callback) {\n                callback();\n            }\n        };\n\n        xhr.open(options.method, url, true);\n        this.setOptions(xhr, options);\n\n        return xhr;\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @param {Object} headers\n     * @returns {void}\n     */\n    setHeaders(xhr, headers) {\n        const headerKeys = Object.keys(headers);\n\n        headerKeys.forEach((key) => {\n            const value = headers[key];\n\n            xhr.setRequestHeader(key, value);\n        });\n    }\n\n    /**\n     * @private\n     * @param {XMLHttpRequest} xhr\n     * @param {Object} options\n     * @returns {void}\n     */\n    setOptions(xhr, options) {\n        xhr.withCredentials = options.withCredentials;\n\n        if (options.headers) {\n            this.setHeaders(xhr, options.headers);\n        }\n    }\n}\n","import RequestSender from '../common/http-request/request-sender';\nimport ClientTokenMapper from './v2/payment-mappers/client-token-mapper';\nimport UrlHelper from './url-helper';\n\nexport default class ClientTokenGenerator {\n    /**\n     * @param {Object} config\n     * @returns {PaymentSubmitter}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n        const clientTokenMapper = ClientTokenMapper.create();\n\n        return new ClientTokenGenerator(urlHelper, requestSender, clientTokenMapper);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @param {ClientTokenMapper} clientTokenMapper\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender, clientTokenMapper) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n\n        /**\n         * @private\n         * @type {ClientTokenMapper}\n         */\n        this.clientTokenMapper = clientTokenMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @param {Function} [callback]\n     * @returns {void}\n     */\n    generateClientToken(data, callback) {\n        const url = this.urlHelper.getGenerateClientTokenUrl();\n        const payload = this.clientTokenMapper.mapToClientToken(data);\n\n        this.requestSender.postRequest(url, payload, {}, callback);\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport CartMapper from './cart-mapper';\nimport GatewayMapper from './gateway-mapper';\nimport QuoteMapper from './quote-mapper';\nimport StoreMapper from './store-mapper';\n\nexport default class ClientTokenMapper {\n    /**\n     * @returns {ClientTokenMapper}\n     */\n    static create() {\n        const cartMapper = CartMapper.create();\n        const gatewayMapper = GatewayMapper.create();\n        const quoteMapper = QuoteMapper.create();\n        const storeMapper = StoreMapper.create();\n\n        return new ClientTokenMapper(cartMapper, gatewayMapper, quoteMapper, storeMapper);\n    }\n\n    /**\n     * @param {CartMapper} cartMapper\n     * @param {GatewayMapper} gatewayMapper\n     * @param {QuoteMapper} quoteMapper\n     * @param {StoreMapper} storeMapper\n     */\n    constructor(cartMapper, gatewayMapper, quoteMapper, storeMapper) {\n        /**\n         * @private\n         * @type {CartMapper}\n         */\n        this.cartMapper = cartMapper;\n\n        /**\n         * @private\n         * @type {GatewayMapper}\n         */\n        this.gatewayMapper = gatewayMapper;\n\n        /**\n         * @private\n         * @type {QuoteMapper}\n         */\n        this.quoteMapper = quoteMapper;\n\n        /**\n         * @private\n         * @type {StoreMapper}\n         */\n        this.storeMapper = storeMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToClientToken(data) {\n        return omitNil({\n            cart: this.cartMapper.mapToCart(data),\n            gateway: this.gatewayMapper.mapToGateway(data),\n            quote: this.quoteMapper.mapToQuote(data),\n            store: this.storeMapper.mapToStore(data),\n        });\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\nexport default class CartMapper {\n    /**\n     * @returns {CartMapper}\n     */\n    static create() {\n        return new CartMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToCart(data) {\n        const { cart = {} } = data;\n\n        return omitNil({\n            currency_code: cart.currency,\n            items: this.mapToItems(data),\n            totals: this.mapToOrderTotals(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object[]}\n     */\n    mapToItems(data) {\n        const { cart = { items: [] } } = data;\n\n        return cart.items.map((itemData) => omitNil({\n            discount_amount: itemData.integerDiscount,\n            name: itemData.name,\n            price: itemData.integerAmount,\n            unit_price: itemData.integerUnitPrice,\n            quantity: itemData.quantity,\n            sku: itemData.sku,\n            tax_amount: itemData.integerTax,\n            amount: itemData.integerAmountAfterDiscount,\n            type: this.mapToType(itemData),\n        }));\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToOrderTotals(data) {\n        const { cart = {} } = data;\n\n        return omitNil({\n            discount_total: cart.discount ? cart.discount.integerAmount : null,\n            grand_total: cart.grandTotal ? cart.grandTotal.integerAmount : null,\n            shipping_total: cart.shipping ? cart.shipping.integerAmount : null,\n            subtotal: cart.subtotal ? cart.subtotal.integerAmount : null,\n            surcharge_total: cart.handling ? cart.handling.integerAmount : null,\n            tax_total: cart.taxTotal ? cart.taxTotal.integerAmount : null,\n        });\n    }\n\n    /**\n     * @private\n     * @param {Object} itemData\n     * @returns {Object}\n     */\n    mapToType(itemData) {\n        const types = {\n            ItemPhysicalEntity: 'physical',\n            ItemDigitalEntity: 'digital',\n            ItemGiftCertificateEntity: 'gift_card',\n        };\n\n        return types[itemData.type];\n    }\n}\n","import { omitNil } from '../../../common/utils';\nimport PaymentMethodIdMapper from '../../payment-method-mappers/payment-method-id-mapper';\n\nexport default class GatewayMapper {\n    /**\n     * @returns {GatewayMapper}\n     */\n    static create() {\n        const paymentMethodIdMapper = PaymentMethodIdMapper.create();\n\n        return new GatewayMapper(paymentMethodIdMapper);\n    }\n\n    /**\n     * @param {PaymentMethodIdMapper} paymentMethodIdMapper\n     * @returns {void}\n     */\n    constructor(paymentMethodIdMapper) {\n        /**\n         * @private\n         * @type {PaymentMethodIdMapper}\n         */\n        this.paymentMethodIdMapper = paymentMethodIdMapper;\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToGateway(data) {\n        const { paymentMethod = {} } = data;\n\n        return omitNil({\n            name: this.paymentMethodIdMapper.mapToId(paymentMethod),\n        });\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\nexport default class QuoteMapper {\n    /**\n     * @returns {QuoteMapper}\n     */\n    static create() {\n        return new QuoteMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToQuote(data) {\n        return omitNil({\n            billing_address: this.mapToAddress(data, 'billingAddress'),\n            shipping_address: this.mapToAddress(data, 'shippingAddress'),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @param {string} addressKey\n     * @returns {Object}\n     */\n    mapToAddress(data, addressKey) {\n        const { customer = {} } = data;\n        const address = data[addressKey] || {};\n\n        return omitNil({\n            address_line_1: address.addressLine1,\n            address_line_2: address.addressLine2,\n            city: address.city,\n            company: address.company,\n            country_code: address.countryCode,\n            email: customer.email,\n            first_name: address.firstName,\n            last_name: address.lastName,\n            phone: address.phone,\n            postal_code: address.postCode,\n            state: address.province,\n        });\n    }\n}\n","import { omitNil, toNumber } from '../../../common/utils';\n\nexport default class StoreMapper {\n    /**\n     * @returns {StoreMapper}\n     */\n    static create() {\n        return new StoreMapper();\n    }\n\n    /**\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToStore(data) {\n        return omitNil({\n            locale: this.mapToLocale(data),\n            store_identity: this.mapToIdentity(data),\n            urls: this.mapToUrls(data),\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToLocale(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            country_code: store.countryCode,\n            currency_code: store.currencyCode,\n            language_code: store.storeLanguage,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToIdentity(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            id: store.storeId ? toNumber(store.storeId) : null,\n            name: store.storeName,\n        });\n    }\n\n    /**\n     * @private\n     * @param {PaymentRequestData} data\n     * @returns {Object}\n     */\n    mapToUrls(data) {\n        const { store = {} } = data;\n\n        return omitNil({\n            cart: store.cartLink,\n            checkout: store.checkoutLink,\n            confirmation: store.orderConfirmationLink,\n            home: store.shopPath,\n        });\n    }\n}\n","import RequestSender from '../common/http-request/request-sender';\nimport { DELETE, POST } from '../common/http-request/method-types';\nimport UrlHelper from './url-helper';\nimport {\n    mapToHeaders,\n    mapToTrustedShippingAddressPayload,\n} from './v2/mappers';\n\nexport default class StoreRequestSender {\n    /**\n     * @param {Object} config\n     * @returns {StoreRequestSender}\n     */\n    static create(config) {\n        const urlHelper = UrlHelper.create(config);\n        const requestSender = RequestSender.create();\n\n        return new StoreRequestSender(urlHelper, requestSender);\n    }\n\n    /**\n     * @param {UrlHelper} urlHelper\n     * @param {RequestSender} requestSender\n     * @returns {void}\n     */\n    constructor(urlHelper, requestSender) {\n        /**\n         * @private\n         * @type {UrlHelper}\n         */\n        this.urlHelper = urlHelper;\n\n        /**\n         * @private\n         * @type {RequestSender}\n         */\n        this.requestSender = requestSender;\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstruments(data, callback) {\n        const url = this.urlHelper.getInstrumentsUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode,\n        );\n        const options = {\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    loadInstrumentsWithAddress(data, callback) {\n        const url = this.urlHelper.getTrustedShippingAddressUrl(\n            data.storeId,\n            data.customerId,\n            data.currencyCode,\n        );\n        const payload = mapToTrustedShippingAddressPayload(data);\n        const options = {\n            method: POST,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.postRequest(url, payload, options, callback);\n    }\n\n    /**\n     * @param {Object} data\n     * @param {Function} [callback]\n     * @return {void}\n     */\n    deleteShopperInstrument(data, callback) {\n        const url = this.urlHelper.getInstrumentByIdUrl(\n            data.storeId,\n            data.customerId,\n            data.instrumentId,\n            data.currencyCode,\n        );\n        const options = {\n            method: DELETE,\n            headers: mapToHeaders(data),\n        };\n\n        this.requestSender.sendRequest(url, null, options, callback);\n    }\n}\n","export default class UrlHelper {\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {CustomerMapper}\n     */\n    static create(config) {\n        return new UrlHelper(config);\n    }\n\n    /**\n     * @param {Object} config\n     * @param {string} config.host\n     * @returns {void}\n     */\n    constructor(config) {\n        /**\n         * @private\n         * @type {Object}\n         */\n        this.config = config;\n    }\n\n    /**\n     * @private\n     * @returns {string}\n     * @throws {Error}\n     */\n    get host() {\n        if (!this.config || !this.config.host) {\n            throw new Error('Host URL unavailable or not supplied.');\n        }\n\n        return this.config.host;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {string} currencyCode\n     * @returns {string}\n     */\n    getInstrumentsUrl(storeId, customerId, currencyCode) {\n        return `${this.host}/api/v3/stores/${storeId}/shoppers/${customerId}/instruments?currency_code=${currencyCode}`;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {string} currencyCode\n     * @return {string}\n     */\n    getTrustedShippingAddressUrl(storeId, customerId, currencyCode) {\n        return `${this.host}/api/v3/stores/${storeId}/shoppers/${customerId}/instruments/trusted_shipping_address?currency_code=${currencyCode}`;\n    }\n\n    /**\n     * @param {number} storeId\n     * @param {number} customerId\n     * @param {number} instrumentId\n     * @param {string} currencyCode\n     * @returns {string}\n     */\n    getInstrumentByIdUrl(storeId, customerId, instrumentId, currencyCode) {\n        return `${this.host}/api/v2/stores/${storeId}/shoppers/${customerId}/instruments/${instrumentId}?currency_code=${currencyCode}`;\n    }\n}\n","import { omitNil } from '../../../common/utils';\n\n/**\n * @param {Object} [data={}]\n * @param {Object} data.billingAddress\n * @param {CreditCard} data.creditCard\n * @param {boolean} data.defaultInstrument\n * @param {string} data.providerName\n * @return {Object}\n */\nexport function mapToInstrumentPayload(data = {}) {\n    const {\n        providerName,\n        defaultInstrument,\n    } = data;\n\n    const provider = omitNil({ name: providerName });\n\n    return omitNil({\n        provider,\n        credit_card: mapToCreditCard(data),\n        billing_address: mapToAddress(data.billingAddress),\n        default_instrument: defaultInstrument,\n    });\n}\n\n/**\n * @param {Object} [data={}]\n * @param {Object} data.shippingAddress\n * @return {Object}\n */\nexport function mapToTrustedShippingAddressPayload(data = {}) {\n    return omitNil({\n        shipping_address: mapToAddress(data.shippingAddress),\n    });\n}\n\n/**\n * @param {Object} data\n * @param {string} data.authToken\n * @return {Object}\n */\nexport function mapToHeaders({ authToken: Authorization } = {}) {\n    return omitNil({\n        Authorization,\n    });\n}\n\n/**\n * @param {AddressData} address\n * @return {Object}\n */\nfunction mapToAddress(address = {}) {\n    const state = mapToState(address.provinceCode, address.province);\n\n    return omitNil({\n        address_line_1: address.addressLine1,\n        address_line_2: address.addressLine2,\n        city: address.city,\n        company: address.company,\n        country_code: address.countryCode,\n        email: address.email,\n        first_name: address.firstName,\n        last_name: address.lastName,\n        phone: address.phone,\n        postal_code: address.postCode,\n        state,\n    });\n}\n\n/**\n * @param {string} code\n * @param {string} name\n * @return {Object}\n */\nfunction mapToState(code, name) {\n    return omitNil({\n        code,\n        name,\n    });\n}\n\n/**\n * @param {Object} data\n * @param {CreditCard} data.creditCard\n * @return {Object}\n */\nfunction mapToCreditCard({ creditCard = {} }) {\n    const threeDSecure = omitNil(creditCard.threeDSecure);\n\n    return omitNil({\n        cardholder_name: creditCard.cardholderName,\n        number: creditCard.number,\n        month: creditCard.month,\n        year: creditCard.year,\n        verification_code: creditCard.verificationCode,\n        issue_month: creditCard.issueMonth,\n        issue_year: creditCard.issueYear,\n        issue_number: creditCard.issueNumber,\n        track_data: creditCard.trackData,\n        is_manual_entry: creditCard.isManualEntry,\n        icc_data: creditCard.iccData,\n        fallback_reason: creditCard.fallbackReason,\n        is_contactless: creditCard.isContactless,\n        encrypted_pin_cryptogram: creditCard.encryptedPinCryptogram,\n        encrypted_pin_ksn: creditCard.encryptedPinKsn,\n        three_d_secure: threeDSecure,\n    });\n}\n","const DEFAULT_CONFIG = {\n    host: '',\n};\n\nexport default DEFAULT_CONFIG;\n"],"sourceRoot":""}